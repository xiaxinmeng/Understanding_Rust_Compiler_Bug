{"sha": "395c9e79f07f584249100371b31071dace281999", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk1YzllNzlmMDdmNTg0MjQ5MTAwMzcxYjMxMDcxZGFjZTI4MTk5OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2008-01-31T17:19:55Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-01-31T17:19:55Z"}, "message": "3983-2.cc: Avoid -Wall warnings.\n\n2008-01-31  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/27_io/basic_istream/extractors_character/pod/3983-2.cc:\n\tAvoid -Wall warnings.\n\t* testsuite/22_locale/global_templates/user_facet_hierarchies.cc:\n\tLikewise.\n\t* testsuite/22_locale/global_templates/standard_facet_hierarchies.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/hash/operators/size_t.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: Likewise.\n\t* testsuite/tr1/6_containers/tuple/cons/constructor.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/cons/aggregate_initialization.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/requirements/contiguous.cc: \n\tLikewise.\n\t* testsuite/tr1/6_containers/array/requirements/member_swap.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/requirements/assign.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/specialized_algorithms/swap.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/comparison_operators/\n\tless_or_equal.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/comparison_operators/\n\tgreater_or_equal.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/comparison_operators/less.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/comparison_operators/equal.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/comparison_operators/not_equal.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/comparison_operators/greater.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/tuple_interface/get.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/element_access/at_out_of_range.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/element_access/back.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/element_access/front.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/element_access/data.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/iterators/end_is_one_past.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/array/capacity/empty.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/capacity/max_size.cc: Likewise.\n\t* testsuite/tr1/6_containers/array/capacity/size.cc: Likewise.\n\t* testsuite/thread/guard.cc: Likewise.\n\t* testsuite/20_util/tuple/cons/big_tuples.cc: Likewise.\n\t* testsuite/20_util/tuple/cons/constructor.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/creation/dr402.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/creation/make.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/creation/alloc.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc:\n\tLikewise.\n\nFrom-SVN: r131979", "tree": {"sha": "537c29a1a0f0209e93e81c9e6b223bf5688b6b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/537c29a1a0f0209e93e81c9e6b223bf5688b6b61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/395c9e79f07f584249100371b31071dace281999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395c9e79f07f584249100371b31071dace281999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/395c9e79f07f584249100371b31071dace281999", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395c9e79f07f584249100371b31071dace281999/comments", "author": null, "committer": null, "parents": [{"sha": "1f7f6676fbf504fdc7dcfd64c70a912d37c81470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f7f6676fbf504fdc7dcfd64c70a912d37c81470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f7f6676fbf504fdc7dcfd64c70a912d37c81470"}], "stats": {"total": 273, "additions": 163, "deletions": 110}, "files": [{"sha": "e64168abc6bf89fc137b0d39af1baced5dba7972", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,3 +1,56 @@\n+2008-01-31  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/27_io/basic_istream/extractors_character/pod/3983-2.cc:\n+\tAvoid -Wall warnings.\n+\t* testsuite/22_locale/global_templates/user_facet_hierarchies.cc:\n+\tLikewise.\n+\t* testsuite/22_locale/global_templates/standard_facet_hierarchies.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/hash/operators/size_t.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: Likewise.\n+\t* testsuite/tr1/6_containers/tuple/cons/constructor.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/cons/aggregate_initialization.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/requirements/contiguous.cc: \n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/requirements/member_swap.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/requirements/assign.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/specialized_algorithms/swap.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/comparison_operators/\n+\tless_or_equal.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/comparison_operators/\n+\tgreater_or_equal.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/comparison_operators/less.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/comparison_operators/equal.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/comparison_operators/not_equal.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/comparison_operators/greater.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/tuple_interface/get.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/element_access/at_out_of_range.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/element_access/back.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/element_access/front.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/element_access/data.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/iterators/end_is_one_past.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/array/capacity/empty.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/capacity/max_size.cc: Likewise.\n+\t* testsuite/tr1/6_containers/array/capacity/size.cc: Likewise.\n+\t* testsuite/thread/guard.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/big_tuples.cc: Likewise.\n+\t* testsuite/20_util/tuple/cons/constructor.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/dr402.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/make.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/creation/alloc.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc:\n+\tLikewise.\n+\n 2008-01-26  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/34794"}, {"sha": "90fce24c73b4cdf910e99fd9314218efb286f486", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/alloc.cc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Falloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Falloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Falloc.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007 Free Software Foundation\n+// Copyright (C) 2007, 2008 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -54,7 +54,7 @@ struct reset_count_struct\n \n // 20.6.6.2.6 shared_ptr creation [util.smartptr.shared.create]\n \n-int\n+void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n@@ -68,10 +68,11 @@ test01()\n     VERIFY( tracker_allocator_counter::get_allocation_count() > 0 );\n   }\n   VERIFY( A::ctor_count == A::dtor_count );\n-  VERIFY( tracker_allocator_counter::get_allocation_count() == tracker_allocator_counter::get_deallocation_count() );\n+  VERIFY( tracker_allocator_counter::get_allocation_count()\n+\t  == tracker_allocator_counter::get_deallocation_count() );\n }\n \n-int\n+void\n test02()\n {\n   bool test __attribute__((unused)) = true;\n@@ -97,14 +98,14 @@ test02()\n \n   p1 = std::shared_ptr<A>();\n   VERIFY( A::ctor_count == A::dtor_count );\n-  VERIFY( tracker_allocator_counter::get_allocation_count() == tracker_allocator_counter::get_deallocation_count() );\n-\n-  return 0;\n+  VERIFY( tracker_allocator_counter::get_allocation_count()\n+\t  == tracker_allocator_counter::get_deallocation_count() );\n }\n \n int\n main()\n {\n   test01();\n   test02();\n+  return 0;\n }"}, {"sha": "b096f4ff46111f25590e4f4de556eca8f618a7bd", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/dr402.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr402.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr402.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr402.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n \n-// Copyright (C) 2007 Free Software Foundation\n+// Copyright (C) 2007, 2008 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,7 +33,7 @@ struct A\n \n // 20.6.6.2.6 shared_ptr creation [util.smartptr.shared.create]\n \n-int\n+void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n@@ -45,4 +45,5 @@ int\n main()\n {\n   test01();\n+  return 0;\n }"}, {"sha": "006208318da7f4e95a7107859d1de18b168d3a82", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/make.cc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fmake.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fmake.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fmake.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007 Free Software Foundation\n+// Copyright (C) 2007, 2008 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -49,7 +49,7 @@ struct reset_count_struct\n \n // 20.6.6.2.6 shared_ptr creation [util.smartptr.shared.create]\n \n-int\n+void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n@@ -64,7 +64,7 @@ test01()\n   VERIFY( A::ctor_count == A::dtor_count );\n }\n \n-int\n+void\n test02()\n {\n   bool test __attribute__((unused)) = true;\n@@ -88,8 +88,6 @@ test02()\n \n   p1 = std::shared_ptr<A>();\n   VERIFY( A::ctor_count == A::dtor_count );\n-\n-  return 0;\n }\n \n int"}, {"sha": "5bdd65c2700f5b85f0d83f6e5edd52dbe473afd6", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006, 2007 Free Software Foundation\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -163,7 +163,7 @@ test01()\n #endif\n   \n   pthread_attr_t tattr;\n-  int ret = pthread_attr_init(&tattr);\n+  pthread_attr_init(&tattr);\n \n   shared_and_weak_pools pools(obj_pool, weak_pool[0]);\n   pthread_create(threads, &tattr, thread_hammer_and_kill, static_cast<void*>(&pools));"}, {"sha": "20c2da146e0c88b58403ba3de951af8c3af6d66f", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006, 2007 Free Software Foundation\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -165,7 +165,7 @@ test01()\n #endif\n   \n   pthread_attr_t tattr;\n-  int ret = pthread_attr_init(&tattr);\n+  pthread_attr_init(&tattr);\n \n   shared_and_weak_pools pools(obj_pool, weak_pool[0]);\n   pthread_create(threads, &tattr, thread_hammer_and_kill, static_cast<void*>(&pools));"}, {"sha": "0c60ec9ddef3c2372d00db09325b3300b4e53098", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/big_tuples.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fbig_tuples.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -38,7 +38,7 @@ test_constructors()\n   const int &z1=x1;\n \n   // Test empty constructor\n-  tuple<> ta;\n+  tuple<> ta __attribute__((unused));\n   tuple<int,int> tb;\n   // Test construction from values\n   tuple<int,int> tc(x1,x2);"}, {"sha": "105727d7983ee2e5c94562c7500b5abd15305fc9", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/constructor.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fconstructor.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,7 +34,7 @@ main()\n   const int &z1=x1;\n \n   // Test empty constructor\n-  tuple<> ta;\n+  tuple<> ta __attribute__((unused));\n   tuple<int,int> tb;\n   // Test construction from values\n   tuple<int,int> tc(x1,x2);"}, {"sha": "6b157e35aeca29370e4222eb159ccc1b1f95cbeb", "filename": "libstdc++-v3/testsuite/22_locale/global_templates/standard_facet_hierarchies.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates%2Fstandard_facet_hierarchies.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates%2Fstandard_facet_hierarchies.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates%2Fstandard_facet_hierarchies.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -37,8 +37,6 @@ int main()\n   locale loc_base = loc_c;\n   locale loc_derived(loc_c, new derived_facet(\"C\"));\n \n-  bool b;\n-\n   // Standard base facet.\n   VERIFY( has_facet<base_facet>(loc_c) );\n   VERIFY( has_facet<base_facet>(loc_base) );"}, {"sha": "94c41771502932aea101dde4f1a4665e686b3920", "filename": "libstdc++-v3/testsuite/22_locale/global_templates/user_facet_hierarchies.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates%2Fuser_facet_hierarchies.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates%2Fuser_facet_hierarchies.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fglobal_templates%2Fuser_facet_hierarchies.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -56,8 +56,6 @@ int main()\n   locale loc_base(loc_c, new base_facet);\n   locale loc_derived(loc_c, new derived_facet);\n \n-  bool b;\n-\n   // Standard facets.\n   VERIFY( has_facet<std::ctype<char> >(loc_c) );\n   VERIFY( has_facet<std::ctype<char> >(loc_base) );"}, {"sha": "a5164dc94c9fd852c514de0da83f1ece16c7f673", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_character/pod/3983-2.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fpod%2F3983-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fpod%2F3983-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fpod%2F3983-2.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,7 @@\n // 2001-06-05 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -50,10 +51,11 @@ void test03()\n   bool test __attribute__((unused)) = true;\n \n   // input streams\n-  pod_ushort arr[6] = { value_type('a'), value_type('b'), \n-\t\t      value_type('c'), value_type('d'), value_type('e') };\n+  pod_ushort arr[6] = { { value_type('a') }, { value_type('b') }, \n+\t\t\t{ value_type('c') }, { value_type('d') },\n+\t\t\t{ value_type('e') } };\n \n-  try \n+  try\n     { \n       iss >> arr;\n     }"}, {"sha": "a509321f83f17628091db016b5ec0982ba2fdc56", "filename": "libstdc++-v3/testsuite/thread/guard.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fguard.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fguard.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fthread%2Fguard.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,5 +1,5 @@\n //\n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -40,14 +40,13 @@ get_bar (void)\n void*\n do_something (void *arg)\n {\n-  static int bar = get_bar ();\n+  static int bar __attribute__((unused)) = get_bar ();\n   return NULL;\n }\n \n int\n get_foo (void)\n {\n-  int status;\n   pthread_t new_thread;\n \n   if (pthread_create (&new_thread, NULL, do_something, NULL) != 0)\n@@ -62,6 +61,6 @@ get_foo (void)\n int\n main (int argc, char **argv)\n {\n-  static int foo = get_foo ();\n+  static int foo __attribute__((unused)) = get_foo ();\n   return 0;  \n }"}, {"sha": "50e7ead18951efcaa6f2f69ebad8894622003b49", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/capacity/empty.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fempty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fempty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fempty.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,8 +30,8 @@ test01()\n     const size_t len = 5;\n     typedef std::tr1::array<int, len> array_type;\n     bool test __attribute__((unused)) = true;\n-    array_type a = { 0, 1, 2, 3, 4 };\n-    \n+    array_type a = { { 0, 1, 2, 3, 4 } };\n+\n     VERIFY( a.empty() == false );\n   }\n \n@@ -40,7 +40,7 @@ test01()\n     typedef std::tr1::array<int, len> array_type;\n     bool test __attribute__((unused)) = true;\n     array_type a;\n-    \n+\n     VERIFY( a.empty() == true );\n   }\n }"}, {"sha": "05849b8835656f8508e6e588ca42ce7315a98efb", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/capacity/max_size.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fmax_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fmax_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fmax_size.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,8 +30,8 @@ test01()\n     const size_t len = 5;\n     typedef std::tr1::array<int, len> array_type;\n     bool test __attribute__((unused)) = true;\n-    array_type a = { 0, 1, 2, 3, 4 };\n-    \n+    array_type a = { { 0, 1, 2, 3, 4 } };\n+\n     VERIFY( a.max_size() == len );\n   }\n \n@@ -40,7 +40,7 @@ test01()\n     typedef std::tr1::array<int, len> array_type;\n     bool test __attribute__((unused)) = true;\n     array_type a;\n-    \n+\n     VERIFY( a.max_size() == len );\n   }\n }"}, {"sha": "748fb8d2cfb8ddec4f72b39b82b2f2e56bc1d827", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/capacity/size.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fsize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fsize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcapacity%2Fsize.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,8 +30,8 @@ test01()\n     const size_t len = 5;\n     typedef std::tr1::array<int, len> array_type;\n     bool test __attribute__((unused)) = true;\n-    array_type a = { 0, 1, 2, 3, 4 };\n-    \n+    array_type a = { { 0, 1, 2, 3, 4 } };\n+\n     VERIFY( a.size() == len );\n   }\n \n@@ -40,7 +40,7 @@ test01()\n     typedef std::tr1::array<int, len> array_type;\n     bool test __attribute__((unused)) = true;\n     array_type a;\n-    \n+\n     VERIFY( a.size() == len );\n   }\n }"}, {"sha": "971fcde1d3020bd585bdc7de4fdebcf0ea4b19a0", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/comparison_operators/equal.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fequal.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,10 +29,10 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n-  array_type b = { 0, 1, 2, 3, 4 };\n-  array_type c = { 0, 1, 2, 3 };\n-    \n+  array_type a = { { 0, 1, 2, 3, 4 } };\n+  array_type b = { { 0, 1, 2, 3, 4 } };\n+  array_type c = { { 0, 1, 2, 3 } };\n+\n   VERIFY( a == b );\n   VERIFY( !(a == c) );\n }"}, {"sha": "8d38e9a8a3cd36445444fe06cc19521484b8a28a", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/comparison_operators/greater.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fgreater.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fgreater.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fgreater.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,10 +29,10 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n-  array_type b = { 0, 1, 2, 3, 4 };\n-  array_type c = { 0, 1, 2, 3, 7 };\n-    \n+  array_type a = { { 0, 1, 2, 3, 4 } };\n+  array_type b = { { 0, 1, 2, 3, 4 } };\n+  array_type c = { { 0, 1, 2, 3, 7 } };\n+\n   VERIFY( !(a > b) );\n   VERIFY( c > a );\n }"}, {"sha": "914cd2e326a095f14cc84106d75cb64b469c23b1", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/comparison_operators/greater_or_equal.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fgreater_or_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fgreater_or_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fgreater_or_equal.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,10 +29,10 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n-  array_type b = { 0, 1, 2, 3, 4 };\n-  array_type c = { 0, 1, 2, 3, 7 };\n-    \n+  array_type a = { { 0, 1, 2, 3, 4 } };\n+  array_type b = { { 0, 1, 2, 3, 4 } };\n+  array_type c = { { 0, 1, 2, 3, 7 } };\n+\n   VERIFY( a >= b );\n   VERIFY( c >= a );\n }"}, {"sha": "e6f394cc93555e76ac70331ece4d71501a286914", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/comparison_operators/less.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fless.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fless.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fless.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,10 +29,10 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n-  array_type b = { 0, 1, 2, 3, 4 };\n-  array_type c = { 0, 1, 2, 3, 7 };\n-    \n+  array_type a = { { 0, 1, 2, 3, 4 } };\n+  array_type b = { { 0, 1, 2, 3, 4 } };\n+  array_type c = { { 0, 1, 2, 3, 7 } };\n+\n   VERIFY( !(a < b) );\n   VERIFY( a < c );\n }"}, {"sha": "d74b529edd13eeb0ace9a54c595dbdd11d452b5b", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/comparison_operators/less_or_equal.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fless_or_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fless_or_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fless_or_equal.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,10 +29,10 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n-  array_type b = { 0, 1, 2, 3, 4 };\n-  array_type c = { 0, 1, 2, 3, 7 };\n-    \n+  array_type a = { { 0, 1, 2, 3, 4 } };\n+  array_type b = { { 0, 1, 2, 3, 4 } };\n+  array_type c = { { 0, 1, 2, 3, 7 } };\n+\n   VERIFY( a <= b );\n   VERIFY( a <= c );\n }"}, {"sha": "dc0ac6381f99e15e3916102f95fb946ee7f7f6e1", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/comparison_operators/not_equal.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcomparison_operators%2Fnot_equal.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,10 +29,10 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n-  array_type b = { 0, 1, 2, 3, 4 };\n-  array_type c = { 0, 1, 2, 3 };\n-  \n+  array_type a = { { 0, 1, 2, 3, 4 } };\n+  array_type b = { { 0, 1, 2, 3, 4 } };\n+  array_type c = { { 0, 1, 2, 3 } };\n+\n   VERIFY( !(a != b) );\n   VERIFY( a != c );\n }"}, {"sha": "ca3ea5d3b66e30c64d078840c9b50a42667225aa", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/cons/aggregate_initialization.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcons%2Faggregate_initialization.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcons%2Faggregate_initialization.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fcons%2Faggregate_initialization.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -2,7 +2,7 @@\n \n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,8 +29,8 @@ test01()\n { \n   typedef std::tr1::array<int, 5> array_type;\n \n-  array_type a = { 0, 1, 2, 3, 4 };\n-  array_type b = { 0, 1, 2, 3 };\n+  array_type a = { { 0, 1, 2, 3, 4 } };\n+  array_type b = { { 0, 1, 2, 3 } };\n \n   a = b;\n }"}, {"sha": "cee0e732a719fece2497c49cac8cc00504d55ee1", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/element_access/at_out_of_range.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fat_out_of_range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fat_out_of_range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fat_out_of_range.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,7 +30,7 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n+  array_type a = { { 0, 1, 2, 3, 4 } };\n \n   try\n     {"}, {"sha": "9ba2f6343ac17a995ecf6027350990984662197d", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/element_access/back.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fback.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fback.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fback.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2005-08-26  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,13 +32,13 @@ test01()\n   typedef std::tr1::array<int, len> array_type;\n   \n   {\n-    array_type a = { 0, 1, 2, 3, 4 };\n+    array_type a = { { 0, 1, 2, 3, 4 } };\n     int& ri = a.back();\n     VERIFY( ri == 4 );\n   }\n \n   {\n-    const array_type ca = { 4, 3, 2, 1, 0 };\n+    const array_type ca = { { 4, 3, 2, 1, 0 } };\n     const int& cri = ca.back();\n     VERIFY( cri == 0 );\n   }"}, {"sha": "3a4efcf1ffb80b7184200ba71a8930c7646c1768", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/element_access/data.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fdata.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fdata.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Fdata.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2005-08-26  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,13 +32,13 @@ test01()\n   typedef std::tr1::array<int, len> array_type;\n   \n   {\n-    array_type a = { 0, 1, 2, 3, 4 };\n+    array_type a = { { 0, 1, 2, 3, 4 } };\n     int* pi = a.data();\n     VERIFY( *pi == 0 );\n   }\n \n   {\n-    const array_type ca = { 4, 3, 2, 1, 0 };\n+    const array_type ca = { { 4, 3, 2, 1, 0 } };\n     const int* pci = ca.data();\n     VERIFY( *pci == 4 );\n   }"}, {"sha": "493c6ed4c1ba41a941fdea73b63f3576974aa954", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/element_access/front.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Ffront.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Ffront.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Felement_access%2Ffront.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2005-08-26  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,13 +32,13 @@ test01()\n   typedef std::tr1::array<int, len> array_type;\n   \n   {\n-    array_type a = { 0, 1, 2, 3, 4 };\n+    array_type a = { { 0, 1, 2, 3, 4 } };\n     int& ri = a.front();\n     VERIFY( ri == 0 );\n   }\n \n   {\n-    const array_type ca = { 4, 3, 2, 1, 0 };\n+    const array_type ca = { { 4, 3, 2, 1, 0 } };\n     const int& cri = ca.front();\n     VERIFY( cri == 4 );\n   }"}, {"sha": "58ba7be4ea0ba938069ad66addaf16692a46b0f8", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/iterators/end_is_one_past.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fiterators%2Fend_is_one_past.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fiterators%2Fend_is_one_past.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fiterators%2Fend_is_one_past.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -30,7 +30,7 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n+  array_type a = { { 0, 1, 2, 3, 4 } };\n \n   array_type::iterator b = a.begin();\n   array_type::iterator e = a.end();"}, {"sha": "5ffe849d91f8ce08faa821339714e036d5144603", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/requirements/assign.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fassign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fassign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fassign.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2006-02-24  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,7 +31,7 @@ test01()\n   const size_t len = 3;\n   typedef std::tr1::array<int, len> array_type;\n \n-  array_type a = { 0, 1, 2 };\n+  array_type a = { { 0, 1, 2 } };\n   const int value = 5;\n \n   a.assign(value);"}, {"sha": "30c78583a44de1720938bcbfc66227f0baebe102", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/requirements/contiguous.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fcontiguous.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fcontiguous.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fcontiguous.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2004-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n //\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,7 +29,7 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n   bool test __attribute__((unused)) = true;\n-  array_type a = { 0, 1, 2, 3, 4 };\n+  array_type a = { { 0, 1, 2, 3, 4 } };\n \n   // &a[n] == &a[0] + n for all 0 <= n < N.\n   for (size_t i = 0; i < len; ++i)"}, {"sha": "3f09b89237a8fefc6227543fc0905e785dc56939", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/requirements/member_swap.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fmember_swap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fmember_swap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Frequirements%2Fmember_swap.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2006-02-24  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,10 +31,10 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n \n-  array_type a = { 0, 1, 2, 3, 4 };\n+  array_type a = { { 0, 1, 2, 3, 4 } };\n   const array_type a_ref = a;\n \n-  array_type b = { 4, 3, 2, 1, 0 };\n+  array_type b = { { 4, 3, 2, 1, 0 } };\n   const array_type b_ref = b;\n \n   a.swap(b);"}, {"sha": "f369838daa5a60ef6e99770af0f1fc11e619a5a3", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/specialized_algorithms/swap.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fspecialized_algorithms%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fspecialized_algorithms%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Fspecialized_algorithms%2Fswap.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2006-02-24  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,10 +31,10 @@ test01()\n   const size_t len = 5;\n   typedef std::tr1::array<int, len> array_type;\n \n-  array_type a = { 0, 1, 2, 3, 4 };\n+  array_type a = { { 0, 1, 2, 3, 4 } };\n   const array_type a_ref = a;\n \n-  array_type b = { 4, 3, 2, 1, 0 };\n+  array_type b = { { 4, 3, 2, 1, 0 } };\n   const array_type b_ref = b;\n \n   std::tr1::swap(a, b);"}, {"sha": "59c0c7ffc9a3b6ee5ecf546d977d1e9928c85007", "filename": "libstdc++-v3/testsuite/tr1/6_containers/array/tuple_interface/get.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Ftuple_interface%2Fget.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Ftuple_interface%2Fget.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Farray%2Ftuple_interface%2Fget.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2005-08-26  Paolo Carlini  <pcarlini@suse.de>\n //\n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -33,13 +33,13 @@ test01()\n   typedef array<int, len> array_type;\n \n   {\n-    array_type a = { 0, 1, 2, 3, 4 };\n+    array_type a = { { 0, 1, 2, 3, 4 } };\n     int& ri = get<0>(a);\n     VERIFY( ri == 0 );\n   }\n \n   {\n-    const array_type a = { 4, 3, 2, 1, 0 };\n+    const array_type a = { { 4, 3, 2, 1, 0 } };\n     const int& cri = get<1>(a);\n     VERIFY( cri == 3 );\n   }"}, {"sha": "7b45816da5087fd53c9862363d7dda0b4d0e1493", "filename": "libstdc++-v3/testsuite/tr1/6_containers/hash/operators/size_t.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Fhash%2Foperators%2Fsize_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Fhash%2Foperators%2Fsize_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Fhash%2Foperators%2Fsize_t.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,6 @@\n // 2007-08-20  <benjamin@redhat.com>\n //\n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,7 +34,8 @@ template<typename T>\n     typedef std::tr1::hash<value_type> \thash_type;\n     using std::size_t;\n \n-    value_type v; // default initialized is fine, same value all that matters.\n+    value_type v = T(); // default initialized is fine, same value all\n+                        // that matters.\n     hash_type h1;\n     size_t r1 = size_t(h1(v));\n     "}, {"sha": "3525bf2cb7c46675a12232c7a014aa49932d7876", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/cons/big_tuples.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fbig_tuples.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,7 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,7 +40,7 @@ test_constructors()\n   const int &z1=x1;\n \n   // Test empty constructor\n-  tuple<> ta;\n+  tuple<> ta __attribute__((unused));\n   tuple<int,int> tb;\n   // Test construction from values\n   tuple<int,int> tc(x1,x2);"}, {"sha": "73f9ed6879a46c8219fa4187a82056ddc5fe8b39", "filename": "libstdc++-v3/testsuite/tr1/6_containers/tuple/cons/constructor.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395c9e79f07f584249100371b31071dace281999/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Ftuple%2Fcons%2Fconstructor.cc?ref=395c9e79f07f584249100371b31071dace281999", "patch": "@@ -1,6 +1,7 @@\n // 2004-09-23 Chris Jefferson <chris@bubblescope.net>\n \n-// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007, 2008\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,7 +36,7 @@ main()\n   const int &z1=x1;\n \n   // Test empty constructor\n-  tuple<> ta;\n+  tuple<> ta __attribute__((unused));\n   tuple<int,int> tb;\n   // Test construction from values\n   tuple<int,int> tc(x1,x2);"}]}