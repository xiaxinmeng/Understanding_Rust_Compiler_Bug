{"sha": "5bbccd92506c4d260eca29d12fa30c75aaaee65b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJiY2NkOTI1MDZjNGQyNjBlY2EyOWQxMmZhMzBjNzVhYWFlZTY1Yg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-02-20T10:04:13Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-02-20T10:04:13Z"}, "message": "Add limit for maximal alignment options (PR c/84310).\n\n2018-02-20  Martin Liska  <mliska@suse.cz>\n\n\tPR c/84310\n\tPR target/79747\n\t* final.c (shorten_branches): Build align_tab array with one\n\tmore element.\n\t* opts.c (finish_options): Add alignment option limit check.\n\t(MAX_CODE_ALIGN): Likewise.\n\t(MAX_CODE_ALIGN_VALUE): Likewise.\n\t* doc/invoke.texi: Document maximum allowed option value for\n\tall -falign-* options.\n2018-02-20  Martin Liska  <mliska@suse.cz>\n\n\tPR c/84310\n\tPR target/79747\n\t* gcc.target/i386/pr84310.c: New test.\n\t* gcc.target/i386/pr84310-2.c: Likewise.\n\nFrom-SVN: r257842", "tree": {"sha": "e8b704768df9cda9cb173b4b741372e31194f039", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8b704768df9cda9cb173b4b741372e31194f039"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bbccd92506c4d260eca29d12fa30c75aaaee65b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbccd92506c4d260eca29d12fa30c75aaaee65b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bbccd92506c4d260eca29d12fa30c75aaaee65b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbccd92506c4d260eca29d12fa30c75aaaee65b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b2513e292a70d715affbe4a9b5af6672fcf99b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2513e292a70d715affbe4a9b5af6672fcf99b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b2513e292a70d715affbe4a9b5af6672fcf99b3"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "8764bb335123ed4120960cd9e190f5bb64cf7612", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bbccd92506c4d260eca29d12fa30c75aaaee65b", "patch": "@@ -1,3 +1,15 @@\n+2018-02-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c/84310\n+\tPR target/79747\n+\t* final.c (shorten_branches): Build align_tab array with one\n+\tmore element.\n+\t* opts.c (finish_options): Add alignment option limit check.\n+\t(MAX_CODE_ALIGN): Likewise.\n+\t(MAX_CODE_ALIGN_VALUE): Likewise.\n+\t* doc/invoke.texi: Document maximum allowed option value for\n+\tall -falign-* options.\n+\n 2018-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84146"}, {"sha": "973d77d47bfbd1c8a552c181592b65c6676beb32", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5bbccd92506c4d260eca29d12fa30c75aaaee65b", "patch": "@@ -9159,6 +9159,7 @@ Some assemblers only support this flag when @var{n} is a power of two;\n in that case, it is rounded up.\n \n If @var{n} is not specified or is zero, use a machine-dependent default.\n+The maximum allowed @var{n} option value is 65536.\n \n Enabled at levels @option{-O2}, @option{-O3}.\n \n@@ -9184,6 +9185,7 @@ are greater than this value, then their values are used instead.\n \n If @var{n} is not specified or is zero, use a machine-dependent default\n which is very likely to be @samp{1}, meaning no alignment.\n+The maximum allowed @var{n} option value is 65536.\n \n Enabled at levels @option{-O2}, @option{-O3}.\n \n@@ -9197,6 +9199,7 @@ operations.\n \n @option{-fno-align-loops} and @option{-falign-loops=1} are\n equivalent and mean that loops are not aligned.\n+The maximum allowed @var{n} option value is 65536.\n \n If @var{n} is not specified or is zero, use a machine-dependent default.\n \n@@ -9214,6 +9217,7 @@ need be executed.\n equivalent and mean that loops are not aligned.\n \n If @var{n} is not specified or is zero, use a machine-dependent default.\n+The maximum allowed @var{n} option value is 65536.\n \n Enabled at levels @option{-O2}, @option{-O3}.\n "}, {"sha": "d2c3cd8a06ec19d8bdf4d8dd591b87b082c572e3", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=5bbccd92506c4d260eca29d12fa30c75aaaee65b", "patch": "@@ -911,7 +911,7 @@ shorten_branches (rtx_insn *first)\n   char *varying_length;\n   rtx body;\n   int uid;\n-  rtx align_tab[MAX_CODE_ALIGN];\n+  rtx align_tab[MAX_CODE_ALIGN + 1];\n \n   /* Compute maximum UID and allocate label_align / uid_shuid.  */\n   max_uid = get_max_uid ();\n@@ -1016,7 +1016,7 @@ shorten_branches (rtx_insn *first)\n      alignment of n.  */\n   uid_align = XCNEWVEC (rtx, max_uid);\n \n-  for (i = MAX_CODE_ALIGN; --i >= 0;)\n+  for (i = MAX_CODE_ALIGN + 1; --i >= 0;)\n     align_tab[i] = NULL_RTX;\n   seq = get_last_insn ();\n   for (; seq; seq = PREV_INSN (seq))"}, {"sha": "33efcc0d6e7db73ba60cab62ef146e976e75ca21", "filename": "gcc/opts.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=5bbccd92506c4d260eca29d12fa30c75aaaee65b", "patch": "@@ -1039,6 +1039,26 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n   if ((opts->x_flag_sanitize & SANITIZE_KERNEL_ADDRESS) && opts->x_flag_tm)\n     sorry (\"transactional memory is not supported with \"\n \t   \"%<-fsanitize=kernel-address%>\");\n+\n+  /* Comes from final.c -- no real reason to change it.  */\n+#define MAX_CODE_ALIGN 16\n+#define MAX_CODE_ALIGN_VALUE (1 << MAX_CODE_ALIGN)\n+\n+  if (opts->x_align_loops > MAX_CODE_ALIGN_VALUE)\n+    error_at (loc, \"-falign-loops=%d is not between 0 and %d\",\n+\t      opts->x_align_loops, MAX_CODE_ALIGN_VALUE);\n+\n+  if (opts->x_align_jumps > MAX_CODE_ALIGN_VALUE)\n+    error_at (loc, \"-falign-jumps=%d is not between 0 and %d\",\n+\t      opts->x_align_jumps, MAX_CODE_ALIGN_VALUE);\n+\n+  if (opts->x_align_functions > MAX_CODE_ALIGN_VALUE)\n+    error_at (loc, \"-falign-functions=%d is not between 0 and %d\",\n+\t      opts->x_align_functions, MAX_CODE_ALIGN_VALUE);\n+\n+  if (opts->x_align_labels > MAX_CODE_ALIGN_VALUE)\n+    error_at (loc, \"-falign-labels=%d is not between 0 and %d\",\n+\t      opts->x_align_labels, MAX_CODE_ALIGN_VALUE);\n }\n \n #define LEFT_COLUMN\t27"}, {"sha": "476374a2333e03f9d478661d0c7d2e1a6186094b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bbccd92506c4d260eca29d12fa30c75aaaee65b", "patch": "@@ -1,3 +1,10 @@\n+2018-02-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c/84310\n+\tPR target/79747\n+\t* gcc.target/i386/pr84310.c: New test.\n+\t* gcc.target/i386/pr84310-2.c: Likewise.\n+\n 2018-02-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84446"}, {"sha": "e39a421e8d246fe9fae1a1c406126483e6ca6c63", "filename": "gcc/testsuite/gcc.target/i386/pr84310-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84310-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84310-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84310-2.c?ref=5bbccd92506c4d260eca29d12fa30c75aaaee65b", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -malign-loops=16\" } */\n+/* { dg-warning \"is obsolete\" \"\" { target *-*-* } 0 } */\n+\n+void\n+c (void)\n+{  \n+  for (;;)\n+    ;\n+}"}, {"sha": "f82327e45f366fd964ccf5fdd575d15867481702", "filename": "gcc/testsuite/gcc.target/i386/pr84310.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84310.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbccd92506c4d260eca29d12fa30c75aaaee65b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84310.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84310.c?ref=5bbccd92506c4d260eca29d12fa30c75aaaee65b", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -falign-functions=100000\" } */\n+/* { dg-error \"is not between 0 and 65536\" \"\" { target *-*-* } 0 } */\n+\n+void\n+test_func (void)\n+{\n+}"}]}