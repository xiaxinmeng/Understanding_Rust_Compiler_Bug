{"sha": "c15bc84b7b6fad8567c9fd02f51e9436c5d3f861", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1YmM4NGI3YjZmYWQ4NTY3YzlmZDAyZjUxZTk0MzZjNWQzZjg2MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-12-16T20:01:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-12-16T20:01:25Z"}, "message": "re PR tree-optimization/18707 (Performance regression at -O2 with gzip)\n\n\tPR tree-optimization/18707\n\t* cfgloopmanip.c (create_preheader): Move the preheader\n\tonly if the latch was falling through to the header.\n\nCo-Authored-By: Roger Sayle <roger@eyesopen.com>\n\nFrom-SVN: r92282", "tree": {"sha": "cf52adea28f2fae4e6fc75375765ddb131f51b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf52adea28f2fae4e6fc75375765ddb131f51b85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c15bc84b7b6fad8567c9fd02f51e9436c5d3f861", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15bc84b7b6fad8567c9fd02f51e9436c5d3f861", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c15bc84b7b6fad8567c9fd02f51e9436c5d3f861", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15bc84b7b6fad8567c9fd02f51e9436c5d3f861/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "59b1a766fb697329a64202089365375c042f9c40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59b1a766fb697329a64202089365375c042f9c40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59b1a766fb697329a64202089365375c042f9c40"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "b10d673d586d1d107547006e8f158699d03c6887", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15bc84b7b6fad8567c9fd02f51e9436c5d3f861/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15bc84b7b6fad8567c9fd02f51e9436c5d3f861/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c15bc84b7b6fad8567c9fd02f51e9436c5d3f861", "patch": "@@ -1,3 +1,10 @@\n+2004-12-16  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+            Roger Sayle  <roger@eyesopen.com>\n+ \n+\tPR tree-optimization/18707\n+\t* cfgloopmanip.c (create_preheader): Move the preheader\n+\tonly if the latch was falling through to the header.\n+\n 2004-12-16  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/18997"}, {"sha": "c07571014afb5f6fef3133a38b715f89efd27842", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15bc84b7b6fad8567c9fd02f51e9436c5d3f861/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15bc84b7b6fad8567c9fd02f51e9436c5d3f861/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=c15bc84b7b6fad8567c9fd02f51e9436c5d3f861", "patch": "@@ -1142,6 +1142,8 @@ create_preheader (struct loop *loop, int flags)\n   struct loop *cloop, *ploop;\n   int nentry = 0;\n   bool irred = false;\n+  bool latch_edge_was_fallthru;\n+  edge one_succ_pred = 0;\n   edge_iterator ei;\n \n   cloop = loop->outer;\n@@ -1152,6 +1154,8 @@ create_preheader (struct loop *loop, int flags)\n \tcontinue;\n       irred |= (e->flags & EDGE_IRREDUCIBLE_LOOP) != 0;\n       nentry++;\n+      if (EDGE_COUNT (e->src->succs) == 1)\n+\tone_succ_pred = e;\n     }\n   gcc_assert (nentry);\n   if (nentry == 1)\n@@ -1166,6 +1170,7 @@ create_preheader (struct loop *loop, int flags)\n     }\n \n   mfb_kj_edge = loop_latch_edge (loop);\n+  latch_edge_was_fallthru = (mfb_kj_edge->flags & EDGE_FALLTHRU) != 0;\n   fallthru = make_forwarder_block (loop->header, mfb_keep_just,\n \t\t\t\t   mfb_update_loops);\n   dummy = fallthru->src;\n@@ -1177,13 +1182,23 @@ create_preheader (struct loop *loop, int flags)\n     if (ploop->latch == dummy)\n       ploop->latch = fallthru->dest;\n \n-  /* Reorganize blocks so that the preheader is not stuck in the middle of the\n-     loop.  */\n-  \n-  /* Get an edge that is different from the one from loop->latch to\n-     dummy.  */\n-  e = EDGE_PRED (dummy, EDGE_PRED (dummy, 0)->src == loop->latch);\n-  move_block_after (dummy, e->src);\n+  /* Try to be clever in placing the newly created preheader.  The idea is to\n+     avoid breaking any \"fallthruness\" relationship between blocks.\n+\n+     The preheader was created just before the header and all incoming edges\n+     to the header were redirected to the preheader, except the latch edge.\n+     So the only problematic case is when this latch edge was a fallthru\n+     edge: it is not anymore after the preheader creation so we have broken\n+     the fallthruness.  We're therefore going to look for a better place.  */\n+  if (latch_edge_was_fallthru)\n+    {\n+      if (one_succ_pred)\n+\te = one_succ_pred;\n+      else\n+\te = EDGE_PRED (dummy, 0);\n+\n+      move_block_after (dummy, e->src);\n+    }\n \n   loop->header->loop_father = loop;\n   add_bb_to_loop (dummy, cloop);"}]}