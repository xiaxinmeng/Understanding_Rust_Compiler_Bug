{"sha": "50457b9e2151e9cc3d11da733bd885cf148a29a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA0NTdiOWUyMTUxZTljYzNkMTFkYTczM2JkODg1Y2YxNDhhMjlhMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-11-11T17:34:12Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-11-11T17:34:12Z"}, "message": "re PR c++/63265 (Constexpr variables can trigger spurious compiler warnings)\n\n/cp\n2014-11-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/63265\n\t* pt.c (tsubst_copy_and_build, case COND_EXPR): Maybe fold to\n\tconstant the condition.\n\n/testsuite\n2014-11-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/63265\n\t* g++.dg/cpp0x/constexpr-63265.C: New.\n\nFrom-SVN: r217361", "tree": {"sha": "cda7a230e439ff04b7348e7945373732943c8a19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cda7a230e439ff04b7348e7945373732943c8a19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50457b9e2151e9cc3d11da733bd885cf148a29a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50457b9e2151e9cc3d11da733bd885cf148a29a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50457b9e2151e9cc3d11da733bd885cf148a29a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50457b9e2151e9cc3d11da733bd885cf148a29a3/comments", "author": null, "committer": null, "parents": [{"sha": "3f3f5af032269366dcf58626a6c3037f37de138d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3f5af032269366dcf58626a6c3037f37de138d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f3f5af032269366dcf58626a6c3037f37de138d"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "a5513b6cf45e18681cca3ca33c1f13e465aee9ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50457b9e2151e9cc3d11da733bd885cf148a29a3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50457b9e2151e9cc3d11da733bd885cf148a29a3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50457b9e2151e9cc3d11da733bd885cf148a29a3", "patch": "@@ -1,3 +1,9 @@\n+2014-11-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/63265\n+\t* pt.c (tsubst_copy_and_build, case COND_EXPR): Maybe fold to\n+\tconstant the condition.\n+\n 2014-11-10  Andi Kleen  <ak@linux.intel.com>\n \n \t* semantics.c (finish_goto_stmt): Call check_no_cilk."}, {"sha": "21d4039b62332c214453e90c23180452c9d56da3", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50457b9e2151e9cc3d11da733bd885cf148a29a3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50457b9e2151e9cc3d11da733bd885cf148a29a3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=50457b9e2151e9cc3d11da733bd885cf148a29a3", "patch": "@@ -15138,11 +15138,13 @@ tsubst_copy_and_build (tree t,\n     case COND_EXPR:\n       {\n \ttree cond = RECUR (TREE_OPERAND (t, 0));\n+\ttree folded_cond = (maybe_constant_value\n+\t\t\t    (fold_non_dependent_expr_sfinae (cond, tf_none)));\n \ttree exp1, exp2;\n \n-\tif (TREE_CODE (cond) == INTEGER_CST)\n+\tif (TREE_CODE (folded_cond) == INTEGER_CST)\n \t  {\n-\t    if (integer_zerop (cond))\n+\t    if (integer_zerop (folded_cond))\n \t      {\n \t\t++c_inhibit_evaluation_warnings;\n \t\texp1 = RECUR (TREE_OPERAND (t, 1));\n@@ -15156,6 +15158,7 @@ tsubst_copy_and_build (tree t,\n \t\texp2 = RECUR (TREE_OPERAND (t, 2));\n \t\t--c_inhibit_evaluation_warnings;\n \t      }\n+\t    cond = folded_cond;\n \t  }\n \telse\n \t  {"}, {"sha": "b301e055908c8a97114d91ce8fb70e2f045eef65", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50457b9e2151e9cc3d11da733bd885cf148a29a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50457b9e2151e9cc3d11da733bd885cf148a29a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50457b9e2151e9cc3d11da733bd885cf148a29a3", "patch": "@@ -1,3 +1,8 @@\n+2014-11-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/63265\n+\t* g++.dg/cpp0x/constexpr-63265.C: New.\n+\n 2014-11-11  Evgeny Stupachenko  <evstupac@gmail.com>\n \n \t* gcc.target/i386/pr52252-atom-1.c: New."}, {"sha": "aa0ce5e7ce26c3311439977e76342da78415f245", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-63265.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50457b9e2151e9cc3d11da733bd885cf148a29a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-63265.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50457b9e2151e9cc3d11da733bd885cf148a29a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-63265.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-63265.C?ref=50457b9e2151e9cc3d11da733bd885cf148a29a3", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/63265\n+// { dg-do compile { target c++11 } }\n+\n+#define LSHIFT (sizeof(unsigned int) * __CHAR_BIT__)\n+\n+template <int lshift>\n+struct SpuriouslyWarns1 {\n+    static constexpr unsigned int v = lshift < LSHIFT ? 1U << lshift : 0;\n+};\n+\n+static_assert(SpuriouslyWarns1<LSHIFT>::v == 0, \"Impossible occurred\");\n+\n+template <int lshift>\n+struct SpuriouslyWarns2 {\n+    static constexpr bool okay = lshift < LSHIFT;\n+    static constexpr unsigned int v = okay ? 1U << lshift : 0;\n+};\n+\n+static_assert(SpuriouslyWarns2<LSHIFT>::v == 0, \"Impossible occurred\");"}]}