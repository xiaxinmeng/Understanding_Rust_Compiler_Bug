{"sha": "48dd3a7cb107947568ddb33dc92ad87b5b9be14e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhkZDNhN2NiMTA3OTQ3NTY4ZGRiMzNkYzkyYWQ4N2I1YjliZTE0ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-28T14:40:50Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-28T14:40:50Z"}, "message": "(pop_init_level, output_init_element): Pass require_constant_* to\ndigest_init.\n\nFrom-SVN: r9534", "tree": {"sha": "30937b69b59f525bb716d36b7aa9542f18f72592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30937b69b59f525bb716d36b7aa9542f18f72592"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48dd3a7cb107947568ddb33dc92ad87b5b9be14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48dd3a7cb107947568ddb33dc92ad87b5b9be14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48dd3a7cb107947568ddb33dc92ad87b5b9be14e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48dd3a7cb107947568ddb33dc92ad87b5b9be14e/comments", "author": null, "committer": null, "parents": [{"sha": "7ac18cf65b8a345802235e788c1e7cd1297a7e27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac18cf65b8a345802235e788c1e7cd1297a7e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ac18cf65b8a345802235e788c1e7cd1297a7e27"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "6356ffe4dfd5522ea78de3d6ef938df967e8c161", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48dd3a7cb107947568ddb33dc92ad87b5b9be14e/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48dd3a7cb107947568ddb33dc92ad87b5b9be14e/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=48dd3a7cb107947568ddb33dc92ad87b5b9be14e", "patch": "@@ -5436,7 +5436,8 @@ pop_init_level (implicit)\n \t  && constructor_incremental)\n \t{\n \t  constructor = digest_init (constructor_type, constructor,\n-\t\t\t\t     0, 0);\n+\t\t\t\t     require_constant_value,\n+\t\t\t\t     require_constant_elements);\n \n \t  /* If initializing an array of unknown size,\n \t     determine the size now.  */\n@@ -5771,7 +5772,8 @@ output_init_element (value, type, field, pending)\n \t   constructor_index, which is modified in place.  */\n \tconstructor_pending_elts\n \t  = tree_cons (copy_node (field),\n-\t\t       digest_init (type, value, 0, 0),\n+\t\t       digest_init (type, value, require_constant_value, \n+\t\t\t\t    require_constant_elements),\n \t\t       constructor_pending_elts);\n     }\n   else if (TREE_CODE (constructor_type) == RECORD_TYPE\n@@ -5783,7 +5785,8 @@ output_init_element (value, type, field, pending)\n       if (!duplicate)\n \tconstructor_pending_elts\n \t  = tree_cons (field,\n-\t\t       digest_init (type, value, 0, 0),\n+\t\t       digest_init (type, value, require_constant_value, \n+\t\t\t\t    require_constant_elements),\n \t\t       constructor_pending_elts);\n     }\n   else\n@@ -5798,7 +5801,9 @@ output_init_element (value, type, field, pending)\n \t      if (field && TREE_CODE (field) == INTEGER_CST)\n \t\tfield = copy_node (field);\n \t      constructor_elements\n-\t\t= tree_cons (field, digest_init (type, value, 0, 0),\n+\t\t= tree_cons (field, digest_init (type, value,\n+\t\t\t\t\t\t require_constant_value, \n+\t\t\t\t\t\t require_constant_elements),\n \t\t\t     constructor_elements);\n \t    }\n \t  else\n@@ -5819,7 +5824,9 @@ output_init_element (value, type, field, pending)\n \t\t      assemble_zeros (next - here);\n \t\t    }\n \t\t}\n-\t      output_constant (digest_init (type, value, 0, 0),\n+\t      output_constant (digest_init (type, value,\n+\t\t\t\t\t    require_constant_value,\n+\t\t\t\t\t    require_constant_elements),\n \t\t\t       int_size_in_bytes (type));\n \n \t      /* For a record or union,"}]}