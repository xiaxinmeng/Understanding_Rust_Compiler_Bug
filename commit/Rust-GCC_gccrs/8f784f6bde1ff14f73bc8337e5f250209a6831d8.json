{"sha": "8f784f6bde1ff14f73bc8337e5f250209a6831d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3ODRmNmJkZTFmZjE0ZjczYmM4MzM3ZTVmMjUwMjA5YTY4MzFkOA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-10-18T08:00:00Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-10-18T08:00:00Z"}, "message": "rs6000: Fix separate shrink-wrapping for TARGET_MULTIPLE\n\nWe cannot use {SAVE,REST}_MULTIPLE and separate shrink-wrapping together,\nnot without checking when actually emitting the prologue/epilogue that the\nregisters to save/restore are actually still one contiguous block up to\n(and including) 31.  So either:\n\n1) We delay the decision of whether to use lmw/stmw to later;\n2) We disallow shrink-wrapping separate (integer) components when those\nstrategies are selected; or\n3) We don't use those strategies if we use separate shrink-wrapping.\n\nThis patch does 3).  In the long term it may be best to do 1) instead,\nit can be slightly more efficient.\n\nThis caused problems on darwin (it is the only config that uses lmw/stmw\ninstructions by default).\n\n\n\t* config/rs6000/rs6000.c (rs6000_savres_strategy): Do not select\n\t{SAVE,REST}_MULTIPLE if shrink-wrapping separate components.\n\t(rs6000_get_separate_components): Assert we do not have those\n\tstrategies selected.\n\nFrom-SVN: r241297", "tree": {"sha": "2c28aa3372658183b6f063cf897d857331cb97ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c28aa3372658183b6f063cf897d857331cb97ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f784f6bde1ff14f73bc8337e5f250209a6831d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f784f6bde1ff14f73bc8337e5f250209a6831d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f784f6bde1ff14f73bc8337e5f250209a6831d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f784f6bde1ff14f73bc8337e5f250209a6831d8/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62869a1ca1ddb89e9cb5c808bfe678979e4090f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62869a1ca1ddb89e9cb5c808bfe678979e4090f0"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "9e986643c562dffd54f0810c9de2add511161f0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f784f6bde1ff14f73bc8337e5f250209a6831d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f784f6bde1ff14f73bc8337e5f250209a6831d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f784f6bde1ff14f73bc8337e5f250209a6831d8", "patch": "@@ -1,3 +1,10 @@\n+2016-10-18  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_savres_strategy): Do not select\n+\t{SAVE,REST}_MULTIPLE if shrink-wrapping separate components.\n+\t(rs6000_get_separate_components): Assert we do not have those\n+\tstrategies selected.\n+\n 2016-10-18  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-propagate.h (substitute_and_fold): Adjust prototype."}, {"sha": "2406d5c64b00a58353dc87c2f125ad619b8b5970", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f784f6bde1ff14f73bc8337e5f250209a6831d8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f784f6bde1ff14f73bc8337e5f250209a6831d8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8f784f6bde1ff14f73bc8337e5f250209a6831d8", "patch": "@@ -25518,7 +25518,10 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n   if (TARGET_MULTIPLE\n       && !TARGET_POWERPC64\n       && !(TARGET_SPE_ABI && info->spe_64bit_regs_used)\n-      && info->first_gp_reg_save < 31)\n+      && info->first_gp_reg_save < 31\n+      && !(flag_shrink_wrap\n+\t   && flag_shrink_wrap_separate\n+\t   && optimize_function_for_speed_p (cfun)))\n     {\n       /* Prefer store multiple for saves over out-of-line routines,\n \t since the store-multiple instruction will always be smaller.  */\n@@ -27452,6 +27455,9 @@ rs6000_get_separate_components (void)\n   sbitmap components = sbitmap_alloc (32);\n   bitmap_clear (components);\n \n+  gcc_assert (!(info->savres_strategy & SAVE_MULTIPLE)\n+\t      && !(info->savres_strategy & REST_MULTIPLE));\n+\n   /* The GPRs we need saved to the frame.  */\n   if ((info->savres_strategy & SAVE_INLINE_GPRS)\n       && (info->savres_strategy & REST_INLINE_GPRS))"}]}