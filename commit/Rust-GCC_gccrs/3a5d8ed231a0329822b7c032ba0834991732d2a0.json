{"sha": "3a5d8ed231a0329822b7c032ba0834991732d2a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E1ZDhlZDIzMWEwMzI5ODIyYjdjMDMyYmEwODM0OTkxNzMyZDJhMA==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-11-25T09:04:33Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-11-30T03:50:30Z"}, "message": "Fix print_multilib_info when default arguments appear in the option list with '!'\n\nThis issue is found when we try to always define MULTILIB_DEFAULTS for -march\nand -mabi for RISC-V back-end, however `-print-multi-lib` will skip\nmulti-lib setting if match any one of flag in MULTILIB_DEFAULTS, even\nsome options are specified in the option list with '!'.\n\ne.g.\n\nWe have default march=rv32i and mabi=ilp32.\n\nAnd we have following multi-lib set:\n\n\". !march=rv32i !march=rv32im !march=rv32imafc !mabi=ilp32 !mabi=ilp32f;\"\n\"rv32i/ilp32 march=rv32i !march=rv32im !march=rv32imafc mabi=ilp32 !mabi=ilp32f;\"\n\"rv32im/ilp32 !march=rv32i march=rv32im !march=rv32imafc mabi=ilp32 !mabi=ilp32f;\"\n\"rv32imafc/ilp32f !march=rv32i !march=rv32ic !march=rv32im march=rv32imafc !mabi=ilp32 mabi=ilp32f;\"\n\n`-print-multi-lib` willl show `.` and `rv32imafc/ilp32f` only, because\nthe mabi=ilp32 is matched, however there is `!march=rv32i` in `rv32im/ilp32`, so\n`rv32im/ilp32` should keep, because it reject march=rv32i.\n\nNote: This can be reproduced via following configure options with patch [1]:\ngcc/configure --target=riscv64-elf --with-arch=rv32i --with-abi=ilp32 \\\n  --with-multilib-generator=\"rv32i-ilp32--;rv32im-ilp32--;rv32imafc-ilp32f--\"\n\n[1] https://gcc.gnu.org/pipermail/gcc-patches/2020-November/559707.html\n\ngcc/ChangeLog:\n\n\t* gcc.c (print_multilib_info): Check default arguments not\n\tappeared in multi-lib option list with '!'", "tree": {"sha": "f0905853cd5a1b29564d66da7acd237d576d87c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0905853cd5a1b29564d66da7acd237d576d87c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a5d8ed231a0329822b7c032ba0834991732d2a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5d8ed231a0329822b7c032ba0834991732d2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5d8ed231a0329822b7c032ba0834991732d2a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5d8ed231a0329822b7c032ba0834991732d2a0/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8ae23920f9c954ed66bd92ddbdbb1b8486b950f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ae23920f9c954ed66bd92ddbdbb1b8486b950f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8ae23920f9c954ed66bd92ddbdbb1b8486b950f"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "bd4ad3b34aebef76badc694b9798eb39d64316d6", "filename": "gcc/gcc.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5d8ed231a0329822b7c032ba0834991732d2a0/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5d8ed231a0329822b7c032ba0834991732d2a0/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=3a5d8ed231a0329822b7c032ba0834991732d2a0", "patch": "@@ -9775,6 +9775,7 @@ print_multilib_info (void)\n   const char *p = multilib_select;\n   const char *last_path = 0, *this_path;\n   int skip;\n+  int not_arg;\n   unsigned int last_path_len = 0;\n \n   while (*p != '\\0')\n@@ -9929,9 +9930,13 @@ print_multilib_info (void)\n \t\tgoto invalid_select;\n \n \t      if (*q == '!')\n-\t\targ = NULL;\n+\t\t{\n+\t\t  not_arg = 1;\n+\t\t  q++;\n+\t\t}\n \t      else\n-\t\targ = q;\n+\t\tnot_arg = 0;\n+\t      arg = q;\n \n \t      while (*q != ' ' && *q != ';')\n \t\t{\n@@ -9940,11 +9945,17 @@ print_multilib_info (void)\n \t\t  ++q;\n \t\t}\n \n-\t      if (arg != NULL\n-\t\t  && default_arg (arg, q - arg))\n+\t      if (default_arg (arg, q - arg))\n \t\t{\n-\t\t  skip = 1;\n-\t\t  break;\n+\t\t  /* Stop checking if any default arguments appeared in not\n+\t\t     list.  */\n+\t\t  if (not_arg)\n+\t\t    {\n+\t\t      skip = 0;\n+\t\t      break;\n+\t\t    }\n+\t\t  else\n+\t\t    skip = 1;\n \t\t}\n \n \t      if (*q == ' ')"}]}