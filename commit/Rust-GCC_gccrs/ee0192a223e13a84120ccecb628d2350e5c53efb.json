{"sha": "ee0192a223e13a84120ccecb628d2350e5c53efb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwMTkyYTIyM2UxM2E4NDEyMGNjZWNiNjI4ZDIzNTBlNWM1M2VmYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-12-01T14:22:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-12-01T14:22:50Z"}, "message": "tree-inline.c (copy_tree_body_r): Do not set TREE_BLOCK to the block of the call when remapping a type.\n\n2009-12-01  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-inline.c (copy_tree_body_r): Do not set TREE_BLOCK\n\tto the block of the call when remapping a type.\n\nFrom-SVN: r154873", "tree": {"sha": "fbdd945716386e1b08dca6a829800dd13511c1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbdd945716386e1b08dca6a829800dd13511c1de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee0192a223e13a84120ccecb628d2350e5c53efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0192a223e13a84120ccecb628d2350e5c53efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee0192a223e13a84120ccecb628d2350e5c53efb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0192a223e13a84120ccecb628d2350e5c53efb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6009ee7b4164ad1ee395b6fe013b7c7037932e57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6009ee7b4164ad1ee395b6fe013b7c7037932e57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6009ee7b4164ad1ee395b6fe013b7c7037932e57"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "939b7bce54c328cd4e885e956bcabfef54ddd057", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0192a223e13a84120ccecb628d2350e5c53efb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0192a223e13a84120ccecb628d2350e5c53efb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee0192a223e13a84120ccecb628d2350e5c53efb", "patch": "@@ -1,3 +1,8 @@\n+2009-12-01  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-inline.c (copy_tree_body_r): Do not set TREE_BLOCK\n+\tto the block of the call when remapping a type.\n+\n 2009-12-01  Martin Jambor  <mjambor@suse.cz>\n \n         * cgraph.h (struct cgraph_edge): Reorder fields.  Make loop_nest"}, {"sha": "3c909419bd2fb0b788526194367348e78a87dcbb", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0192a223e13a84120ccecb628d2350e5c53efb/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0192a223e13a84120ccecb628d2350e5c53efb/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=ee0192a223e13a84120ccecb628d2350e5c53efb", "patch": "@@ -1093,10 +1093,10 @@ copy_tree_body_r (tree *tp, int *walk_subtrees, void *data)\n \n       /* If EXPR has block defined, map it to newly constructed block.\n          When inlining we want EXPRs without block appear in the block\n-\t of function call.  */\n+\t of function call if we are not remapping a type.  */\n       if (EXPR_P (*tp))\n \t{\n-\t  new_block = id->block;\n+\t  new_block = id->remapping_type_depth == 0 ? id->block : NULL;\n \t  if (TREE_BLOCK (*tp))\n \t    {\n \t      tree *n;"}]}