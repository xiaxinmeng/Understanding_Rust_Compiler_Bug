{"sha": "34b1b41f3b5aa456a6142b063ef93f1397ee65b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRiMWI0MWYzYjVhYTQ1NmE2MTQyYjA2M2VmOTNmMTM5N2VlNjViMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-08T22:35:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-08T22:35:23Z"}, "message": "Fix typo in comment of last change.\n\nFrom-SVN: r7000", "tree": {"sha": "89d24276a77fabfe97fba2c2c9723f806ad46db1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89d24276a77fabfe97fba2c2c9723f806ad46db1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34b1b41f3b5aa456a6142b063ef93f1397ee65b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b1b41f3b5aa456a6142b063ef93f1397ee65b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34b1b41f3b5aa456a6142b063ef93f1397ee65b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b1b41f3b5aa456a6142b063ef93f1397ee65b2/comments", "author": null, "committer": null, "parents": [{"sha": "e92d30482ecfa8b870e09648544af9ad54e60ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92d30482ecfa8b870e09648544af9ad54e60ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e92d30482ecfa8b870e09648544af9ad54e60ccd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "81f7b4f03011b47581c2e37b5ab23ac12322fd48", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34b1b41f3b5aa456a6142b063ef93f1397ee65b2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34b1b41f3b5aa456a6142b063ef93f1397ee65b2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=34b1b41f3b5aa456a6142b063ef93f1397ee65b2", "patch": "@@ -4518,7 +4518,7 @@ fold (expr)\n \t\t      arg0, integer_zero_node);\n \n       /* If X is unsigned, convert X < (1 << Y) into X >> Y == 0\n-\t and similarly for <= into !=.  */\n+\t and similarly for >= into !=.  */\n       if ((code == LT_EXPR || code == GE_EXPR)\n \t  && TREE_UNSIGNED (TREE_TYPE (arg0))\n \t  && TREE_CODE (arg1) == LSHIFT_EXPR"}]}