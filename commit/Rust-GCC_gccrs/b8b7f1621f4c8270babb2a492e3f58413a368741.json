{"sha": "b8b7f1621f4c8270babb2a492e3f58413a368741", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhiN2YxNjIxZjRjODI3MGJhYmIyYTQ5MmUzZjU4NDEzYTM2ODc0MQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-11-11T01:47:18Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-11-11T01:47:18Z"}, "message": "tree.c (build_int_cst_wide): Add an assertion (gcc_unreachable) when attempting to build INTEGER_CSTs of...\n\n\n\t* tree.c (build_int_cst_wide): Add an assertion (gcc_unreachable)\n\twhen attempting to build INTEGER_CSTs of non-integral types.\n\t* expmed.c (make_tree): Use the correct type, i.e. the inner\n\ttype, when constructing the individual elements of a CONST_VECTOR.\n\nFrom-SVN: r118678", "tree": {"sha": "44698d4692f54c1fccaf5bfd54844b6aeb857b34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44698d4692f54c1fccaf5bfd54844b6aeb857b34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8b7f1621f4c8270babb2a492e3f58413a368741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b7f1621f4c8270babb2a492e3f58413a368741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b7f1621f4c8270babb2a492e3f58413a368741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b7f1621f4c8270babb2a492e3f58413a368741/comments", "author": null, "committer": null, "parents": [{"sha": "845e145b6d78551fda4bf8fea6c5b3634b0fb71f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845e145b6d78551fda4bf8fea6c5b3634b0fb71f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845e145b6d78551fda4bf8fea6c5b3634b0fb71f"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "7f38662fced496a876ce71f485ec0379a1f0fea6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b7f1621f4c8270babb2a492e3f58413a368741/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b7f1621f4c8270babb2a492e3f58413a368741/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8b7f1621f4c8270babb2a492e3f58413a368741", "patch": "@@ -1,3 +1,10 @@\n+2006-11-10  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* tree.c (build_int_cst_wide): Add an assertion (gcc_unreachable)\n+\twhen attempting to build INTEGER_CSTs of non-integral types.\n+\t* expmed.c (make_tree): Use the correct type, i.e. the inner\n+\ttype, when constructing the individual elements of a CONST_VECTOR.\n+\n 2006-11-10  Jan Hubicka  <jh@suse.cz>\n \n \t* cse.c (cse_process_notes): Copy the propagated value."}, {"sha": "b044780d71c9ad68a473350862604dae69e8cfb6", "filename": "gcc/expmed.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b7f1621f4c8270babb2a492e3f58413a368741/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b7f1621f4c8270babb2a492e3f58413a368741/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=b8b7f1621f4c8270babb2a492e3f58413a368741", "patch": "@@ -4976,17 +4976,17 @@ make_tree (tree type, rtx x)\n \n     case CONST_VECTOR:\n       {\n-\tint i, units;\n-\trtx elt;\n+\tint units = CONST_VECTOR_NUNITS (x);\n+\ttree itype = TREE_TYPE (type);\n \ttree t = NULL_TREE;\n+\tint i;\n \n-\tunits = CONST_VECTOR_NUNITS (x);\n \n \t/* Build a tree with vector elements.  */\n \tfor (i = units - 1; i >= 0; --i)\n \t  {\n-\t    elt = CONST_VECTOR_ELT (x, i);\n-\t    t = tree_cons (NULL_TREE, make_tree (type, elt), t);\n+\t    rtx elt = CONST_VECTOR_ELT (x, i);\n+\t    t = tree_cons (NULL_TREE, make_tree (itype, elt), t);\n \t  }\n \n \treturn build_vector (type, t);"}, {"sha": "6f8dc86e3af7954ab3629e424a5080bb12f2a752", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b7f1621f4c8270babb2a492e3f58413a368741/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b7f1621f4c8270babb2a492e3f58413a368741/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b8b7f1621f4c8270babb2a492e3f58413a368741", "patch": "@@ -844,8 +844,12 @@ build_int_cst_wide (tree type, unsigned HOST_WIDE_INT low, HOST_WIDE_INT hi)\n \t    ix = 0;\n \t}\n       break;\n-    default:\n+\n+    case ENUMERAL_TYPE:\n       break;\n+\n+    default:\n+      gcc_unreachable ();\n     }\n \n   if (ix >= 0)"}]}