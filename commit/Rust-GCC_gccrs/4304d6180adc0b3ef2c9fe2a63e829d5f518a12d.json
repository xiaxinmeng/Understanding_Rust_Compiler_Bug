{"sha": "4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwNGQ2MTgwYWRjMGIzZWYyYzlmZTJhNjNlODI5ZDVmNTE4YTEyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-04-03T16:06:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-04-03T16:06:19Z"}, "message": "re PR target/85169 (wrong code with vector member insert)\n\n\tPR target/85169\n\t* config/i386/i386.c (ix86_expand_vector_set): Use\n\tHOST_WIDE_INT_1U << elt instead of 1 << elt.  Formatting fix.\n\n\t* gcc.c-torture/execute/pr85169.c: New test.\n\t* gcc.target/i386/avx512f-pr85169.c: New test.\n\t* gcc.target/i386/avx512bw-pr85169.c: New test.\n\nFrom-SVN: r259037", "tree": {"sha": "f6033aaa1e72809e1227827f1abf78105d3ab95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6033aaa1e72809e1227827f1abf78105d3ab95e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86d13a05fd2207c149311941b49b1866aeabfd5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d13a05fd2207c149311941b49b1866aeabfd5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d13a05fd2207c149311941b49b1866aeabfd5c"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "efd155e36a4a7daecd3ab4cefd6dfea0569b9840", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "patch": "@@ -1,3 +1,9 @@\n+2018-04-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85169\n+\t* config/i386/i386.c (ix86_expand_vector_set): Use\n+\tHOST_WIDE_INT_1U << elt instead of 1 << elt.  Formatting fix.\n+\n 2018-04-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (emit_i387_cw_initialization): Always use logic"}, {"sha": "03e5c433574eeef300806fca3a610546ffcd2151", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "patch": "@@ -44127,12 +44127,14 @@ ix86_expand_vector_set (bool mmx_ok, rtx target, rtx val, int elt)\n \t where the mask is clear and second input operand otherwise.  */\n       emit_insn (gen_blendm (target, target, tmp,\n \t\t\t     force_reg (mmode,\n-\t\t\t\t\tgen_int_mode (1 << elt, mmode))));\n+\t\t\t\t\tgen_int_mode (HOST_WIDE_INT_1U << elt,\n+\t\t\t\t\t\t      mmode))));\n     }\n   else if (use_vec_merge)\n     {\n       tmp = gen_rtx_VEC_DUPLICATE (mode, val);\n-      tmp = gen_rtx_VEC_MERGE (mode, tmp, target, GEN_INT (1 << elt));\n+      tmp = gen_rtx_VEC_MERGE (mode, tmp, target,\n+\t\t\t       GEN_INT (HOST_WIDE_INT_1U << elt));\n       emit_insn (gen_rtx_SET (target, tmp));\n     }\n   else\n@@ -44141,7 +44143,7 @@ ix86_expand_vector_set (bool mmx_ok, rtx target, rtx val, int elt)\n \n       emit_move_insn (mem, target);\n \n-      tmp = adjust_address (mem, inner_mode, elt*GET_MODE_SIZE (inner_mode));\n+      tmp = adjust_address (mem, inner_mode, elt * GET_MODE_SIZE (inner_mode));\n       emit_move_insn (tmp, val);\n \n       emit_move_insn (target, mem);"}, {"sha": "a53d46b6bac95e1a10c62631ab39f132db071f60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "patch": "@@ -1,3 +1,10 @@\n+2018-04-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85169\n+\t* gcc.c-torture/execute/pr85169.c: New test.\n+\t* gcc.target/i386/avx512f-pr85169.c: New test.\n+\t* gcc.target/i386/avx512bw-pr85169.c: New test.\n+\n 2018-04-03  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/85126"}, {"sha": "a21ed9b7264c141d38620c1623c93209fed4d724", "filename": "gcc/testsuite/gcc.c-torture/execute/pr85169.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85169.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85169.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85169.c?ref=4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/85169 */\n+\n+typedef char V __attribute__((vector_size (64)));\n+\n+static void __attribute__ ((noipa))\n+foo (V *p)\n+{\n+  V v = *p;\n+  v[63] = 1;\n+  *p = v;\n+}\n+\n+int\n+main ()\n+{\n+  V v = (V) { };\n+  foo (&v);\n+  for (unsigned i = 0; i < 64; i++)\n+    if (v[i] != (i == 63))\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "be2dcfd95d6a17b3c87cde8a1f2b5ffb01e5aaf5", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr85169.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr85169.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr85169.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr85169.c?ref=4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "patch": "@@ -0,0 +1,18 @@\n+/* PR target/85169 */\n+/* { dg-do run { target avx512bw } } */\n+/* { dg-options \"-O2 -mavx512bw\" } */\n+\n+#include \"avx512bw-check.h\"\n+\n+int do_main (void);\n+\n+static void\n+avx512bw_test (void)\n+{\n+  do_main ();\n+}\n+\n+#undef main\n+#define main() do_main ()\n+\n+#include \"../../gcc.c-torture/execute/pr85169.c\""}, {"sha": "be1913bc9c61a52aa6e8afa7504ed793d574bb8a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr85169.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr85169.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4304d6180adc0b3ef2c9fe2a63e829d5f518a12d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr85169.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr85169.c?ref=4304d6180adc0b3ef2c9fe2a63e829d5f518a12d", "patch": "@@ -0,0 +1,18 @@\n+/* PR target/85169 */\n+/* { dg-do run { target avx512f } } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+\n+#include \"avx512f-check.h\"\n+\n+int do_main (void);\n+\n+static void\n+avx512f_test (void)\n+{\n+  do_main ();\n+}\n+\n+#undef main\n+#define main() do_main ()\n+\n+#include \"../../gcc.c-torture/execute/pr85169.c\""}]}