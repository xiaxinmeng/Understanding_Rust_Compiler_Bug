{"sha": "9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVkMzJlMjc4NjA5ZGQ3NTQ0MzY2YWMzNjM5YjdlY2I1YWQ0ZDYwZg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2017-09-21T02:18:02Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2017-09-21T02:18:02Z"}, "message": "enable handling of -gno- command-line options as negated prefixes\n\nThis patch that adds -g to the set of negatable prefixes along with -f,\n-m and -W.  Besides the mapping from -gno- to negated -g in option_map\nand adding g to the [fmW] matches for negatable options, I had to\nintroduce gno- as an remapping prefix, for the option searching\nmachinery to backtrack to and recognize as a remapping prefix, instead\nof backtracking to -g and stopping at it as if no-* was its Joined\nargument.  Adding such remapping prefixes to preempt further\nbacktracking can be accomplished by introducing the prefix as an\nUndocumented option with a Joined argument and without Driver, Target,\nCommon, or any language-specific option.  Whenever we match such a fake\noptions prefix, we abandon further backtracking (it matches, after all),\nbut find_opt returns the same code it would if it hadn't found any\nmatch, so that we resort to option mapping.\n\nI've arranged for such remapping prefixes to not be considered when\nlooking for and suggesting a correct spelling for misspelled options.\nWhile testing that, I found a few -W-started options that were not\nmarked as RejectNegative but should (-Wno-a, is not something we'd like\nto suggest ;-)  I've also marked as such -g-started options that\nit makes no sense to negate, and removed the explicit -gno- ones,\nallowing their opposites to be negated.\n\nfor  gcc/ChangeLog\n\n\t* common.opt (Wa, Wl, Wp, g, gz=): Add\n\tRejectNegative.\n\t(gno-column-info): Remove.\n\t(gcolumn-info): Drop RejectNegative.\n\t(gno-): New prefix.\n\t(gno-record-gcc-switches): Remove.\n\t(grecord-gcc-switches): Drop RejectNegative.\n\t(gno-split-dwarf): Remove.\n\t(gsplit-dwarf): Drop RejectNegative.\n\t(gno-strict-dwarf): Remove.\n\t(gstrict-dwarf): Drop RejectNegative.\n\t* config/darwin.opt (gfull, gused): Add RejectNegative.\n\t* dwarf2out.c (gen_producer_string): Drop\n\tgno-record-gcc-switches handler.\n\t* optc-gen.awk: Add g to prefixes with negative forms.\n\t* opts-common.c (remapping_prefix_p): New.\n\t(find_opt): Check it.\n\t(generate_canonical_option): Test g prefix.\n\t(option_map): Add -gno- mapping.\n\t(add_misspelling_candidates): Check remapping_prefix_p.\n\nfor  gcc/ada/ChangeLog\n\n\t* gcc-interface/lang.opt (gant, gnatO, gnat): Add\n        RejectNegative.\n\nfor  gcc/c-family/ChangeLog\n\n\t* c.opt (gen-decls): Add RejectNegative.\n\nFrom-SVN: r253047", "tree": {"sha": "fa8b7dc93538e14e6db4ef2d2018a93b37b51dca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa8b7dc93538e14e6db4ef2d2018a93b37b51dca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/comments", "author": null, "committer": null, "parents": [{"sha": "d8a61466b974a7ed4a7cafcbb98903bc71f5021d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a61466b974a7ed4a7cafcbb98903bc71f5021d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a61466b974a7ed4a7cafcbb98903bc71f5021d"}], "stats": {"total": 114, "additions": 79, "deletions": 35}, "files": [{"sha": "0c88145d5a757d7530810cd08888789891eca3b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -1,3 +1,26 @@\n+2017-09-20  Alexandre Oliva <aoliva@redhat.com>\n+\n+\t* common.opt (Wa, Wl, Wp, g, gz=): Add\n+\tRejectNegative.\n+\t(gno-column-info): Remove.\n+\t(gcolumn-info): Drop RejectNegative.\n+\t(gno-): New prefix.\n+\t(gno-record-gcc-switches): Remove.\n+\t(grecord-gcc-switches): Drop RejectNegative.\n+\t(gno-split-dwarf): Remove.\n+\t(gsplit-dwarf): Drop RejectNegative.\n+\t(gno-strict-dwarf): Remove.\n+\t(gstrict-dwarf): Drop RejectNegative.\n+\t* config/darwin.opt (gfull, gused): Add RejectNegative.\n+\t* dwarf2out.c (gen_producer_string): Drop\n+\tgno-record-gcc-switches handler.\n+\t* optc-gen.awk: Add g to prefixes with negative forms.\n+\t* opts-common.c (remapping_prefix_p): New.\n+\t(find_opt): Check it.\n+\t(generate_canonical_option): Test g prefix.\n+\t(option_map): Add -gno- mapping.\n+\t(add_misspelling_candidates): Check remapping_prefix_p.\n+\n 2017-09-20  Jeff Law  <law@redhat.com>\n \n \t* config/powerpcspe/powerpcspe.c (rs6000_expand_prologue): Fix"}, {"sha": "2ea969057b71d20e03ebe34b1579f30c7f60745b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -1,3 +1,8 @@\n+2017-09-20  Alexandre Oliva <aoliva@redhat.com>\n+\n+\t* gcc-interface/lang.opt (gant, gnatO, gnat): Add\n+\tRejectNegative.\n+\n 2017-09-18  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch4.adb (Complete_Object_Operation): Do not insert 'Access for"}, {"sha": "17c6dc8478321e2dac9b248aff334cab376f3d57", "filename": "gcc/ada/gcc-interface/lang.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fada%2Fgcc-interface%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fada%2Fgcc-interface%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang.opt?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -81,15 +81,15 @@ Ada AdaWhy AdaSCIL\n Make \\\"char\\\" signed by default.\n \n gant\n-Ada AdaWhy AdaSCIL Driver Joined Undocumented\n+Ada AdaWhy AdaSCIL Driver Joined Undocumented RejectNegative\n Catch typos.\n \n gnatO\n-Ada AdaWhy AdaSCIL Driver Separate\n+Ada AdaWhy AdaSCIL Driver Separate RejectNegative\n Set name of output ALI file (internal switch).\n \n gnat\n-Ada AdaWhy AdaSCIL Driver Joined\n+Ada AdaWhy AdaSCIL Driver Joined RejectNegative\n -gnat<options>\tSpecify options to GNAT.\n \n fbuiltin-printf"}, {"sha": "32f87276a0bbc295858edcfa58c1a058faa6af24", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -1,3 +1,7 @@\n+2017-09-20  Alexandre Oliva <aoliva@redhat.com>\n+\n+\t* c.opt (gen-decls): Add RejectNegative.\n+\n 2017-09-15  Andrew Sutton  <andrew.n.sutton@gmail.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "13d2a59b8a5977ff55030a8961b3b55331e00ac8", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -1810,7 +1810,7 @@ ObjC ObjC++ Var(flag_zero_link)\n Generate lazy class lookup (via objc_getClass()) for use in Zero-Link mode.\n \n gen-decls\n-ObjC ObjC++ Driver Var(flag_gen_declaration)\n+ObjC ObjC++ Driver Var(flag_gen_declaration) RejectNegative\n Dump declarations to a .decl file.\n \n femit-struct-debug-baseonly"}, {"sha": "dfde6adba910f828ac5651a5a7b799c9674ce2de", "filename": "gcc/common.opt", "status": "modified", "additions": 13, "deletions": 25, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -534,13 +534,13 @@ Common RejectNegative Warning Alias(Wextra)\n This switch is deprecated; use -Wextra instead.\n \n Wa,\n-Driver JoinedOrMissing\n+Driver JoinedOrMissing RejectNegative\n \n Wl,\n-Driver JoinedOrMissing\n+Driver JoinedOrMissing RejectNegative\n \n Wp,\n-Driver JoinedOrMissing\n+Driver JoinedOrMissing RejectNegative\n \n Waggregate-return\n Common Var(warn_aggregate_return) Warning\n@@ -2834,19 +2834,15 @@ Common Report Var(flag_zero_initialized_in_bss) Init(1)\n Put zero initialized data in the bss section.\n \n g\n-Common Driver JoinedOrMissing\n+Common Driver RejectNegative JoinedOrMissing\n Generate debug information in default format.\n \n gcoff\n Common Driver JoinedOrMissing Negative(gdwarf)\n Generate debug information in COFF format.\n \n-gno-column-info\n-Common Driver RejectNegative Var(debug_column_info,0) Init(0)\n-Don't record DW_AT_decl_column and DW_AT_call_column in DWARF.\n-\n gcolumn-info\n-Common Driver RejectNegative Var(debug_column_info,1)\n+Common Driver Var(debug_column_info,1) Init(0)\n Record DW_AT_decl_column and DW_AT_call_column in DWARF.\n \n gdwarf\n@@ -2861,6 +2857,10 @@ ggdb\n Common Driver JoinedOrMissing\n Generate debug information in default extended format.\n \n+gno-\n+RejectNegative Joined Undocumented\n+; Catch the gno- prefix, so it doesn't backtrack to g<level>.\n+\n gno-pubnames\n Common Driver Negative(gpubnames) Var(debug_generate_pub_sections, 0) Init(-1)\n Don't generate DWARF pubnames and pubtypes sections.\n@@ -2873,20 +2873,12 @@ ggnu-pubnames\n Common Driver Negative(gno-pubnames) Var(debug_generate_pub_sections, 2)\n Generate DWARF pubnames and pubtypes sections with GNU extensions.\n \n-gno-record-gcc-switches\n-Common Driver RejectNegative Var(dwarf_record_gcc_switches,0) Init(1)\n-Don't record gcc command line switches in DWARF DW_AT_producer.\n-\n grecord-gcc-switches\n-Common Driver RejectNegative Var(dwarf_record_gcc_switches,1)\n+Common Driver Var(dwarf_record_gcc_switches) Init(1)\n Record gcc command line switches in DWARF DW_AT_producer.\n \n-gno-split-dwarf\n-Common Driver RejectNegative Var(dwarf_split_debug_info,0) Init(0)\n-Don't generate debug information in separate .dwo files.\n-\n gsplit-dwarf\n-Common Driver RejectNegative Var(dwarf_split_debug_info,1)\n+Common Driver Var(dwarf_split_debug_info) Init(0)\n Generate debug information in separate .dwo files.\n \n gstabs\n@@ -2897,12 +2889,8 @@ gstabs+\n Common Driver JoinedOrMissing Negative(gvms)\n Generate debug information in extended STABS format.\n \n-gno-strict-dwarf\n-Common Driver RejectNegative Var(dwarf_strict,0) Init(0)\n-Emit DWARF additions beyond selected version.\n-\n gstrict-dwarf\n-Common Driver Report RejectNegative Var(dwarf_strict,1)\n+Common Driver Report Var(dwarf_strict) Init(0)\n Don't emit DWARF additions beyond selected version.\n \n gtoggle\n@@ -2940,7 +2928,7 @@ Common Driver\n Generate compressed debug sections.\n \n gz=\n-Common Driver Joined Enum(compressed_debug_sections)\n+Common Driver RejectNegative Joined Enum(compressed_debug_sections)\n -gz=<format>\tGenerate compressed debug sections in format <format>.\n \n h"}, {"sha": "4871014229c6509f4a10051ec09e2bfec1467fa9", "filename": "gcc/config/darwin.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fconfig%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fconfig%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.opt?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -92,10 +92,10 @@ fterminated-vtables\n Driver RejectNegative\n \n gfull\n-Driver\n+Driver RejectNegative\n \n gused\n-Driver\n+Driver RejectNegative\n \n headerpad_max_install_names\n Driver"}, {"sha": "360971765f66c30a4460f2100862fe703702eb7e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -23349,7 +23349,6 @@ gen_producer_string (void)\n       case OPT_SPECIAL_program_name:\n       case OPT_SPECIAL_input_file:\n       case OPT_grecord_gcc_switches:\n-      case OPT_gno_record_gcc_switches:\n       case OPT__output_pch_:\n       case OPT_fdiagnostics_show_location_:\n       case OPT_fdiagnostics_show_option:"}, {"sha": "295bae15c82a6a8cc5bd34d43810f803e88242c5", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -328,7 +328,7 @@ for (i = 0; i < n_opts; i++) {\n \t\t\talias_data = \"NULL, NULL, N_OPTS\"\n \t\tif (flag_set_p(\"Enum.*\", flags[i])) {\n \t\t\tif (!flag_set_p(\"RejectNegative\", flags[i]) \\\n-\t\t\t    && opts[i] ~ \"^[Wfm]\")\n+\t\t\t    && opts[i] ~ \"^[Wfgm]\")\n \t\t\t\tprint \"#error Enum allowing negative form\"\n \t\t}\n \t} else {\n@@ -370,7 +370,7 @@ for (i = 0; i < n_opts; i++) {\n \t\tif (flag_set_p(\"RejectNegative\", flags[i]))\n \t\t\tidx = -1;\n \t\telse {\n-\t\t\tif (opts[i] ~ \"^[Wfm]\")\n+\t\t\tif (opts[i] ~ \"^[Wfgm]\")\n \t\t\t\tidx = indices[opts[i]];\n \t\t\telse\n \t\t\t\tidx = -1;"}, {"sha": "e78ab880893ae2ad4586c8dceb30c3a52bd3a0a2", "filename": "gcc/opts-common.c", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ed32e278609dd7544366ac3639b7ecb5ad4d60f/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=9ed32e278609dd7544366ac3639b7ecb5ad4d60f", "patch": "@@ -28,6 +28,24 @@ along with GCC; see the file COPYING3.  If not see\n \n static void prune_options (struct cl_decoded_option **, unsigned int *);\n \n+/* An option that is undocumented, that takes a joined argument, and\n+   that doesn't fit any of the classes of uses (language/common,\n+   driver, target) is assumed to be a prefix used to catch\n+   e.g. negated options, and stop them from being further shortened to\n+   a prefix that could use the negated option as an argument.  For\n+   example, we want -gno-statement-frontiers to be taken as a negation\n+   of -gstatement-frontiers, but without catching the gno- prefix and\n+   signaling it's to be used for option remapping, it would end up\n+   backtracked to g with no-statemnet-frontiers as the debug level.  */\n+\n+static bool\n+remapping_prefix_p (const struct cl_option *opt)\n+{\n+  return opt->flags & CL_UNDOCUMENTED\n+    && opt->flags & CL_JOINED\n+    && !(opt->flags & (CL_DRIVER | CL_TARGET | CL_COMMON | CL_LANG_ALL));\n+}\n+\n /* Perform a binary search to find which option the command-line INPUT\n    matches.  Returns its index in the option array, and\n    OPT_SPECIAL_unknown on failure.\n@@ -98,6 +116,9 @@ find_opt (const char *input, unsigned int lang_mask)\n \t  if (opt->flags & lang_mask)\n \t    return mn;\n \n+\t  if (remapping_prefix_p (opt))\n+\t    return OPT_SPECIAL_unknown;\n+\n \t  /* If we haven't remembered a prior match, remember this\n \t     one.  Any prior match is necessarily better.  */\n \t  if (match_wrong_lang == OPT_SPECIAL_unknown)\n@@ -286,7 +307,8 @@ generate_canonical_option (size_t opt_index, const char *arg, int value,\n \n   if (value == 0\n       && !option->cl_reject_negative\n-      && (opt_text[1] == 'W' || opt_text[1] == 'f' || opt_text[1] == 'm'))\n+      && (opt_text[1] == 'W' || opt_text[1] == 'f'\n+\t  || opt_text[1] == 'g' || opt_text[1] == 'm'))\n     {\n       char *t = XOBNEWVEC (&opts_obstack, char, option->opt_len + 5);\n       t[0] = '-';\n@@ -349,6 +371,7 @@ static const struct option_map option_map[] =\n   {\n     { \"-Wno-\", NULL, \"-W\", false, true },\n     { \"-fno-\", NULL, \"-f\", false, true },\n+    { \"-gno-\", NULL, \"-g\", false, true },\n     { \"-mno-\", NULL, \"-m\", false, true },\n     { \"--debug=\", NULL, \"-g\", false, false },\n     { \"--machine-\", NULL, \"-m\", true, false },\n@@ -394,6 +417,8 @@ add_misspelling_candidates (auto_vec<char *> *candidates,\n   gcc_assert (candidates);\n   gcc_assert (option);\n   gcc_assert (opt_text);\n+  if (remapping_prefix_p (option))\n+    return;\n   candidates->safe_push (xstrdup (opt_text + 1));\n   for (unsigned i = 0; i < ARRAY_SIZE (option_map); i++)\n     {"}]}