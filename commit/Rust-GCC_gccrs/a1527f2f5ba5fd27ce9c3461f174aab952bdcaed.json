{"sha": "a1527f2f5ba5fd27ce9c3461f174aab952bdcaed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE1MjdmMmY1YmE1ZmQyN2NlOWMzNDYxZjE3NGFhYjk1MmJkY2FlZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-02-05T19:10:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-02-05T19:10:15Z"}, "message": "re PR libstdc++/51956 ([patch] improve shared_ptr and weak_ptr pretty-printers for gdb)\n\n\tPR libstdc++/51956\n\t* python/libstdcxx/v6/printers.py (StdPointerPrinter): Rename to...\n\t(SharedPointerPrinter): This. Also show weak count.\n\t* testsuite/libstdc++-prettyprinters/shared_ptr.cc: New.\n\nFrom-SVN: r183914", "tree": {"sha": "168584b38085315faf37c7293e1573279640990d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/168584b38085315faf37c7293e1573279640990d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ca9ea769d25b247979603a43de701a443bdd4bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca9ea769d25b247979603a43de701a443bdd4bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ca9ea769d25b247979603a43de701a443bdd4bf"}], "stats": {"total": 117, "additions": 106, "deletions": 11}, "files": [{"sha": "4e9235862ccf654a6989bca8cd24d070038fc9c0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a1527f2f5ba5fd27ce9c3461f174aab952bdcaed", "patch": "@@ -1,3 +1,10 @@\n+2012-02-05  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/51956\n+\t* python/libstdcxx/v6/printers.py (StdPointerPrinter): Rename to...\n+\t(SharedPointerPrinter): This. Also show weak count.\n+\t* testsuite/libstdc++-prettyprinters/shared_ptr.cc: New.\n+\n 2012-02-05  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* testsuite/20_util/shared_ptr/cons/weak_ptr_expired.cc: Modify to"}, {"sha": "f47da612d95b113b41046c84d31b6cb05a497681", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=a1527f2f5ba5fd27ce9c3461f174aab952bdcaed", "patch": "@@ -45,19 +45,24 @@ def find_type(orig, name):\n             raise ValueError, \"Cannot find type %s::%s\" % (str(orig), name)\n         typ = field.type\n \n-class StdPointerPrinter:\n-    \"Print a smart pointer of some kind\"\n+class SharedPointerPrinter:\n+    \"Print a shared_ptr or weak_ptr\"\n \n     def __init__ (self, typename, val):\n         self.typename = typename\n         self.val = val\n \n     def to_string (self):\n-        if self.val['_M_refcount']['_M_pi'] == 0:\n-            return '%s (empty) %s' % (self.typename, self.val['_M_ptr'])\n-        return '%s (count %d) %s' % (self.typename,\n-                                     self.val['_M_refcount']['_M_pi']['_M_use_count'],\n-                                     self.val['_M_ptr'])\n+        state = 'empty'\n+        refcounts = self.val['_M_refcount']['_M_pi']\n+        if refcounts != 0:\n+            usecount = refcounts['_M_use_count']\n+            weakcount = refcounts['_M_weak_count']\n+            if usecount == 0:\n+                state = 'expired, weak %d' % weakcount\n+            else:\n+                state = 'count %d, weak %d' % (usecount, weakcount - 1)\n+        return '%s (%s) %s' % (self.typename, state, self.val['_M_ptr'])\n \n class UniquePointerPrinter:\n     \"Print a unique_ptr\"\n@@ -862,8 +867,8 @@ def build_libstdcxx_dictionary ():\n \n     # These are the TR1 and C++0x printers.\n     # For array - the default GDB pretty-printer seems reasonable.\n-    libstdcxx_printer.add_version('std::', 'shared_ptr', StdPointerPrinter)\n-    libstdcxx_printer.add_version('std::', 'weak_ptr', StdPointerPrinter)\n+    libstdcxx_printer.add_version('std::', 'shared_ptr', SharedPointerPrinter)\n+    libstdcxx_printer.add_version('std::', 'weak_ptr', SharedPointerPrinter)\n     libstdcxx_printer.add_container('std::', 'unordered_map',\n                                     Tr1UnorderedMapPrinter)\n     libstdcxx_printer.add_container('std::', 'unordered_set',\n@@ -875,8 +880,8 @@ def build_libstdcxx_dictionary ():\n     libstdcxx_printer.add_container('std::', 'forward_list',\n                                     StdForwardListPrinter)\n \n-    libstdcxx_printer.add_version('std::tr1::', 'shared_ptr', StdPointerPrinter)\n-    libstdcxx_printer.add_version('std::tr1::', 'weak_ptr', StdPointerPrinter)\n+    libstdcxx_printer.add_version('std::tr1::', 'shared_ptr', SharedPointerPrinter)\n+    libstdcxx_printer.add_version('std::tr1::', 'weak_ptr', SharedPointerPrinter)\n     libstdcxx_printer.add_version('std::tr1::', 'unordered_map',\n                                   Tr1UnorderedMapPrinter)\n     libstdcxx_printer.add_version('std::tr1::', 'unordered_set',"}, {"sha": "9328c5f96bc1fc5b0b77bcecfb7e6d30dbb6542a", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/shared_ptr.cc", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fshared_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1527f2f5ba5fd27ce9c3461f174aab952bdcaed/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fshared_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fshared_ptr.cc?ref=a1527f2f5ba5fd27ce9c3461f174aab952bdcaed", "patch": "@@ -0,0 +1,83 @@\n+// { dg-do run }\n+// { dg-options \"-std=gnu++11 -g\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+#include <iostream>\n+\n+template<class T>\n+void\n+placeholder(const T &s)\n+{\n+  std::cout << s;\n+}\n+\n+template<class T>\n+void\n+use(const T &p)\n+{\n+  placeholder(&p);\n+}\n+\n+struct deleter { void operator()(int*) {} };\n+\n+std::shared_ptr<int> make(uintptr_t p)\n+{\n+  return std::shared_ptr<int>(reinterpret_cast<int*>(p), deleter());\n+}\n+\n+int\n+main()\n+{\n+  typedef std::shared_ptr<int> shared;\n+  typedef std::weak_ptr<int> weak;\n+\n+  shared esp;\n+// { dg-final { note-test esp \"std::shared_ptr (empty) 0x0\" } }\n+  weak ewp1;\n+// { dg-final { note-test ewp1 \"std::weak_ptr (empty) 0x0\" } }\n+  weak ewp2 = esp;\n+// { dg-final { note-test ewp2 \"std::weak_ptr (empty) 0x0\" } }\n+\n+  shared sp1 = make(0x12345678);\n+  shared sp2 = sp1;\n+// { dg-final { note-test sp1 \"std::shared_ptr (count 2, weak 0) 0x12345678\" } }\n+\n+  shared sp3 = make(0x12344321);\n+  weak sp4 = sp3;\n+  weak wp1 = sp3;\n+// { dg-final { note-test wp1 \"std::weak_ptr (count 1, weak 2) 0x12344321\" } }\n+\n+  shared sp5 = make(0x56788765);\n+  weak wp2 = sp5;\n+  sp5.reset();\n+// { dg-final { note-test wp2 \"std::weak_ptr (expired, weak 1) 0x56788765\" } }\n+\n+  placeholder(\"\"); // Mark SPOT\n+  use(esp);\n+  use(ewp1);\n+  use(ewp2);\n+  use(sp1);\n+  use(wp1);\n+  use(wp2);\n+\n+  return 0;\n+}\n+\n+// { dg-final { gdb-test SPOT } }"}]}