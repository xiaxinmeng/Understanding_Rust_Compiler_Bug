{"sha": "3f67ac08f30956150de56bd6fdc08420923a6d8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y2N2FjMDhmMzA5NTYxNTBkZTU2YmQ2ZmRjMDg0MjA5MjNhNmQ4Yg==", "commit": {"author": {"name": "David Mosberger", "email": "davidm@hpl.hp.com", "date": "2001-02-21T21:50:16Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2001-02-21T21:50:16Z"}, "message": "Refine syscall_linkage attribute semantics to fix security hole.\n\n\t* config/ia64/ia64.c (ia64_epilogue_uses): For syscall_linkage\n\tfunctions, drop current_function_args_info.words test.\n\t(ia64_compute_frame_size): Mark syscall_linkage functions as\n\tusing eight input registers.\n\nFrom-SVN: r39965", "tree": {"sha": "9d4abd9abae90c200111a7a400c61eefa4a2afde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d4abd9abae90c200111a7a400c61eefa4a2afde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f67ac08f30956150de56bd6fdc08420923a6d8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f67ac08f30956150de56bd6fdc08420923a6d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f67ac08f30956150de56bd6fdc08420923a6d8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f67ac08f30956150de56bd6fdc08420923a6d8b/comments", "author": null, "committer": null, "parents": [{"sha": "e9ece3bcbc168cf102d3c7bd73c4d60b63d1d56c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ece3bcbc168cf102d3c7bd73c4d60b63d1d56c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9ece3bcbc168cf102d3c7bd73c4d60b63d1d56c"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "ec803b8f14c9a156e845383775cc991c68f66cf1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f67ac08f30956150de56bd6fdc08420923a6d8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f67ac08f30956150de56bd6fdc08420923a6d8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f67ac08f30956150de56bd6fdc08420923a6d8b", "patch": "@@ -1,3 +1,10 @@\n+2001-02-21  David Mosberger  <davidm@hpl.hp.com>\n+\n+\t* config/ia64/ia64.c (ia64_epilogue_uses): For syscall_linkage\n+\tfunctions, drop current_function_args_info.words test.\n+\t(ia64_compute_frame_size): Mark syscall_linkage functions as\n+\tusing eight input registers.\n+\n 2001-02-21  Loren J. Rittle  <ljrittle@acm.org>\n \tBruce Korb  <bkorb@gnu.org>\n "}, {"sha": "1a4baa02c6c9b72278443064d73d2efd8aee135c", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f67ac08f30956150de56bd6fdc08420923a6d8b/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f67ac08f30956150de56bd6fdc08420923a6d8b/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=3f67ac08f30956150de56bd6fdc08420923a6d8b", "patch": "@@ -1317,7 +1317,13 @@ ia64_compute_frame_size (size)\n       break;\n   current_frame_info.n_local_regs = regno - LOC_REG (0) + 1;\n \n-  if (cfun->machine->n_varargs > 0)\n+  /* For functions marked with the syscall_linkage attribute, we must mark\n+     all eight input registers as in use, so that locals aren't visible to\n+     the caller.  */\n+\n+  if (cfun->machine->n_varargs > 0\n+      || lookup_attribute (\"syscall_linkage\",\n+\t\t\t   TYPE_ATTRIBUTES (TREE_TYPE (current_function_decl))))\n     current_frame_info.n_input_regs = 8;\n   else\n     {\n@@ -6040,10 +6046,10 @@ ia64_epilogue_uses (regno)\n      registers are marked as live at all function exits.  This prevents the\n      register allocator from using the input registers, which in turn makes it\n      possible to restart a system call after an interrupt without having to\n-     save/restore the input registers.  */\n+     save/restore the input registers.  This also prevents kernel data from\n+     leaking to application code.  */\n \n   if (IN_REGNO_P (regno)\n-      && (regno < IN_REG (current_function_args_info.words))\n       && lookup_attribute (\"syscall_linkage\",\n \t\t\t   TYPE_ATTRIBUTES (TREE_TYPE (current_function_decl))))\n     return 1;"}]}