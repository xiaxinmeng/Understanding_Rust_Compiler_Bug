{"sha": "ef1dbfb03b1a49c67edcaaff2d49454659907091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYxZGJmYjAzYjFhNDljNjdlZGNhYWZmMmQ0OTQ1NDY1OTkwNzA5MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-12T18:09:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-12T18:09:16Z"}, "message": "(m68k_align_loops_string, m68k_align_jumps_string): New vars.\n\n(m68k_align_funcs_string, m68k_align_loops): Likewise.\n(m68k_align_jumps, m68k_align_funcs): Likewise.\n(override_options): New function.\n\nFrom-SVN: r13125", "tree": {"sha": "388ee9b521372d840d8e1a35d572c0785714deda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/388ee9b521372d840d8e1a35d572c0785714deda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef1dbfb03b1a49c67edcaaff2d49454659907091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef1dbfb03b1a49c67edcaaff2d49454659907091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef1dbfb03b1a49c67edcaaff2d49454659907091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef1dbfb03b1a49c67edcaaff2d49454659907091/comments", "author": null, "committer": null, "parents": [{"sha": "c346547a9dbeed1bc90357b467b401553d525631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c346547a9dbeed1bc90357b467b401553d525631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c346547a9dbeed1bc90357b467b401553d525631"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "8a8ed02ca1dbd20206331331c73ec796f75ee45f", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef1dbfb03b1a49c67edcaaff2d49454659907091/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef1dbfb03b1a49c67edcaaff2d49454659907091/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=ef1dbfb03b1a49c67edcaaff2d49454659907091", "patch": "@@ -53,6 +53,72 @@ static rtx find_addr_reg ();\n rtx legitimize_pic_address ();\n \f\n \n+/* Alignment to use for loops and jumps */\n+/* Specify power of two alignment used for loops. */\n+char *m68k_align_loops_string;\n+/* Specify power of two alignment used for non-loop jumps. */\n+char *m68k_align_jumps_string;\n+/* Specify power of two alignment used for functions. */\n+char *m68k_align_funcs_string;\n+\n+/* Specify power of two alignment used for loops. */\n+int m68k_align_loops;\n+/* Specify power of two alignment used for non-loop jumps. */\n+int m68k_align_jumps;\n+/* Specify power of two alignment used for functions. */\n+int m68k_align_funcs;\n+\n+\n+/* Sometimes certain combinations of command options do not make\n+   sense on a particular target machine.  You can define a macro\n+   `OVERRIDE_OPTIONS' to take account of this.  This macro, if\n+   defined, is executed once just after all the command options have\n+   been parsed.\n+\n+   Don't use this macro to turn on various extra optimizations for\n+   `-O'.  That is what `OPTIMIZATION_OPTIONS' is for.  */\n+\n+void\n+override_options ()\n+{\n+  int def_align;\n+\n+  def_align = 1;\n+\n+  /* Validate -malign-loops= value, or provide default */\n+  if (m68k_align_loops_string)\n+    {\n+      m68k_align_loops = atoi (m68k_align_loops_string);\n+      if (m68k_align_loops < 1 || m68k_align_loops > MAX_CODE_ALIGN)\n+\tfatal (\"-malign-loops=%d is not between 1 and %d\",\n+\t       m68k_align_loops, MAX_CODE_ALIGN);\n+    }\n+  else\n+    m68k_align_loops = def_align;\n+\n+  /* Validate -malign-jumps= value, or provide default */\n+  if (m68k_align_jumps_string)\n+    {\n+      m68k_align_jumps = atoi (m68k_align_jumps_string);\n+      if (m68k_align_jumps < 1 || m68k_align_jumps > MAX_CODE_ALIGN)\n+\tfatal (\"-malign-jumps=%d is not between 1 and %d\",\n+\t       m68k_align_jumps, MAX_CODE_ALIGN);\n+    }\n+  else\n+    m68k_align_jumps = def_align;\n+\n+  /* Validate -malign-functions= value, or provide default */\n+  if (m68k_align_funcs_string)\n+    {\n+      m68k_align_funcs = atoi (m68k_align_funcs_string);\n+      if (m68k_align_funcs < 1 || m68k_align_funcs > MAX_CODE_ALIGN)\n+\tfatal (\"-malign-functions=%d is not between 1 and %d\",\n+\t       m68k_align_funcs, MAX_CODE_ALIGN);\n+    }\n+  else\n+    m68k_align_funcs = def_align;\n+}\n+\f\n /* Emit a (use pic_offset_table_rtx) if we used PIC relocation in the \n    function at any time during the compilation process.  In the future \n    we should try and eliminate the USE if we can easily determine that "}]}