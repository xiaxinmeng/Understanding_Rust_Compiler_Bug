{"sha": "dc271dbeb914928da2cc0bf682d66f51e991a75a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMyNzFkYmViOTE0OTI4ZGEyY2MwYmY2ODJkNjZmNTFlOTkxYTc1YQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-24T05:02:35Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-24T05:02:35Z"}, "message": "h8300.md: Fix xorqi and xorqi so that they will accept to accept 0x80 as operands[2].\n\n\t* config/h8300/h8300.md: Fix xorqi and xorqi so that they will\n\taccept to accept 0x80 as operands[2].\n\nFrom-SVN: r49168", "tree": {"sha": "f3f5edf2d1abe59444d6169c8a4fcd24a9c0b1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3f5edf2d1abe59444d6169c8a4fcd24a9c0b1ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc271dbeb914928da2cc0bf682d66f51e991a75a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc271dbeb914928da2cc0bf682d66f51e991a75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc271dbeb914928da2cc0bf682d66f51e991a75a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc271dbeb914928da2cc0bf682d66f51e991a75a/comments", "author": null, "committer": null, "parents": [{"sha": "1a9017f94e6475301d858701d4b780565ff5dd2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a9017f94e6475301d858701d4b780565ff5dd2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a9017f94e6475301d858701d4b780565ff5dd2a"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "374324ca612c732278b44db69b6bf572225b22d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc271dbeb914928da2cc0bf682d66f51e991a75a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc271dbeb914928da2cc0bf682d66f51e991a75a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc271dbeb914928da2cc0bf682d66f51e991a75a", "patch": "@@ -1,3 +1,8 @@\n+2002-01-23  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.md: Fix xorqi and xorqi so that they will\n+\taccept to accept 0x80 as operands[2].\n+\n 2002-01-24  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/sparc/sparc.md (fix_trunctfdi2): Correct typo in mode."}, {"sha": "d4937bf5ee3ab039875288d6b5732eb7cfcabdbd", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 34, "deletions": 10, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc271dbeb914928da2cc0bf682d66f51e991a75a/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc271dbeb914928da2cc0bf682d66f51e991a75a/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=dc271dbeb914928da2cc0bf682d66f51e991a75a", "patch": "@@ -1109,11 +1109,23 @@\n (define_insn \"\"\n   [(set (match_operand:QI 0 \"bit_operand\" \"=r,U\")\n \t(ior:QI (match_operand:QI 1 \"bit_operand\" \"%0,0\")\n-\t\t(match_operand:QI 2 \"nonmemory_operand\" \"rn,P\")))]\n-  \"register_operand (operands[0], QImode) || p_operand (operands[2], QImode)\"\n-  \"@\n-   or\t%X2,%X0\n-   bset\t%V2,%R0\"\n+\t\t(match_operand:QI 2 \"nonmemory_operand\" \"rn,n\")))]\n+  \"register_operand (operands[0], QImode)\n+   || (GET_CODE (operands[2]) == CONST_INT\n+       && exact_log2 (INTVAL (operands[2]) & 0xff) != -1)\"\n+  \"*\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \\\"or\\t%X2,%X0\\\";\n+    case 1:\n+      operands[2] = GEN_INT (INTVAL (operands[2]) & 0xff);\n+      return \\\"bset\\t%V2,%R0\\\";\n+    default:\n+      abort ();\n+    }\n+}\"\n   [(set_attr \"length\" \"2,8\")\n    (set_attr \"adjust_length\" \"no\")\n    (set_attr \"cc\" \"set_znv,none_0hit\")])\n@@ -1186,11 +1198,23 @@\n (define_insn \"\"\n   [(set (match_operand:QI 0 \"bit_operand\" \"=r,U\")\n \t(xor:QI (match_operand:QI 1 \"bit_operand\" \"%0,0\")\n-\t\t(match_operand:QI 2 \"nonmemory_operand\" \"rn,P\")))]\n-  \"register_operand (operands[0], QImode) || p_operand (operands[2], QImode)\"\n-  \"@\n-   xor\t%X2,%X0\n-   bnot\t%V2,%R0\"\n+\t\t(match_operand:QI 2 \"nonmemory_operand\" \"rn,n\")))]\n+  \"register_operand (operands[0], QImode)\n+   || (GET_CODE (operands[2]) == CONST_INT\n+       && exact_log2 (INTVAL (operands[2]) & 0xff) != -1)\"\n+  \"*\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \\\"xor\\t%X2,%X0\\\";\n+    case 1:\n+      operands[2] = GEN_INT (INTVAL (operands[2]) & 0xff);\n+      return \\\"bnot\\t%V2,%R0\\\";\n+    default:\n+      abort ();\n+    }\n+}\"\n   [(set_attr \"length\" \"2,8\")\n    (set_attr \"adjust_length\" \"no\")\n    (set_attr \"cc\" \"set_znv,none_0hit\")])"}]}