{"sha": "e7425c18b5af5a12f68bde8b5f30adf02a774536", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc0MjVjMThiNWFmNWExMmY2OGJkZThiNWYzMGFkZjAyYTc3NDUzNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-15T14:37:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-15T14:37:52Z"}, "message": "re PR tree-optimization/83269 (Wrong constant folding)\n\n\tPR tree-optimization/83269\n\t* fold-const.c (fold_binary_loc): Perform (-A) - B -> (-B) - A\n\tsubtraction in arg0's type if type is signed and arg0 is unsigned.\n\tFormatting fix.\n\n\t* gcc.c-torture/execute/pr83269.c: New test.\n\nFrom-SVN: r255697", "tree": {"sha": "244e650451af7f181109c73ce6cd80058234b774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/244e650451af7f181109c73ce6cd80058234b774"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7425c18b5af5a12f68bde8b5f30adf02a774536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7425c18b5af5a12f68bde8b5f30adf02a774536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7425c18b5af5a12f68bde8b5f30adf02a774536", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7425c18b5af5a12f68bde8b5f30adf02a774536/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a72610d4320925787d635cb4ddb8a40967e05bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a72610d4320925787d635cb4ddb8a40967e05bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a72610d4320925787d635cb4ddb8a40967e05bc3"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "60f621d8fd1b8f747778b179c634bd263f5910e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7425c18b5af5a12f68bde8b5f30adf02a774536/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7425c18b5af5a12f68bde8b5f30adf02a774536/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7425c18b5af5a12f68bde8b5f30adf02a774536", "patch": "@@ -1,5 +1,10 @@\n 2017-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/83269\n+\t* fold-const.c (fold_binary_loc): Perform (-A) - B -> (-B) - A\n+\tsubtraction in arg0's type if type is signed and arg0 is unsigned.\n+\tFormatting fix.\n+\n \tPR sanitizer/81281\n \t* match.pd ((T)(P + A) - (T)P -> (T) A): Use @@0 instead of @0 and\n \tconvert? on @0 instead of convert.  Check type of @1, not @0."}, {"sha": "9fc69e8058bb8d7c6458a96b0f2ebe6b121e04b1", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7425c18b5af5a12f68bde8b5f30adf02a774536/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7425c18b5af5a12f68bde8b5f30adf02a774536/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=e7425c18b5af5a12f68bde8b5f30adf02a774536", "patch": "@@ -9098,8 +9098,8 @@ expr_not_equal_to (tree t, const wide_int &w)\n    return NULL_TREE.  */\n \n tree\n-fold_binary_loc (location_t loc,\n-\t     enum tree_code code, tree type, tree op0, tree op1)\n+fold_binary_loc (location_t loc, enum tree_code code, tree type,\n+\t\t tree op0, tree op1)\n {\n   enum tree_code_class kind = TREE_CODE_CLASS (code);\n   tree arg0, arg1, tem;\n@@ -9769,10 +9769,17 @@ fold_binary_loc (location_t loc,\n \n       /* (-A) - B -> (-B) - A  where B is easily negated and we can swap.  */\n       if (TREE_CODE (arg0) == NEGATE_EXPR\n-\t  && negate_expr_p (op1))\n-\treturn fold_build2_loc (loc, MINUS_EXPR, type,\n-\t\t\t\tnegate_expr (op1),\n-\t\t\t\tfold_convert_loc (loc, type,\n+\t  && negate_expr_p (op1)\n+\t  /* If arg0 is e.g. unsigned int and type is int, then this could\n+\t     introduce UB, because if A is INT_MIN at runtime, the original\n+\t     expression can be well defined while the latter is not.\n+\t     See PR83269.  */\n+\t  && !(ANY_INTEGRAL_TYPE_P (type)\n+\t       && TYPE_OVERFLOW_UNDEFINED (type)\n+\t       && ANY_INTEGRAL_TYPE_P (TREE_TYPE (arg0))\n+\t       && !TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (arg0))))\n+\treturn fold_build2_loc (loc, MINUS_EXPR, type, negate_expr (op1),\n+\t\t\t        fold_convert_loc (loc, type,\n \t\t\t\t\t\t  TREE_OPERAND (arg0, 0)));\n \n       /* Fold __complex__ ( x, 0 ) - __complex__ ( 0, y ) to"}, {"sha": "c87d2cd09800ef83aa7b3d4bd104062c51837fd8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7425c18b5af5a12f68bde8b5f30adf02a774536/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7425c18b5af5a12f68bde8b5f30adf02a774536/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7425c18b5af5a12f68bde8b5f30adf02a774536", "patch": "@@ -1,5 +1,8 @@\n 2017-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/83269\n+\t* gcc.c-torture/execute/pr83269.c: New test.\n+\n \tPR sanitizer/81281\n \t* gcc.dg/pr81281-3.c: New test.\n "}, {"sha": "37fc5d14db7ab93d16c73c4b701043d6b2f4cea2", "filename": "gcc/testsuite/gcc.c-torture/execute/pr83269.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7425c18b5af5a12f68bde8b5f30adf02a774536/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr83269.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7425c18b5af5a12f68bde8b5f30adf02a774536/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr83269.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr83269.c?ref=e7425c18b5af5a12f68bde8b5f30adf02a774536", "patch": "@@ -0,0 +1,14 @@\n+/* PR tree-optimization/83269 */\n+\n+int\n+main ()\n+{\n+#if __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ > 4 && __CHAR_BIT__ == 8\n+  volatile unsigned char a = 1;\n+  long long b = 0x80000000L;\n+  int c = -((int)(-b) - (-0x7fffffff * a));\n+  if (c != 1)\n+    __builtin_abort ();\n+#endif\n+  return 0;\n+}"}]}