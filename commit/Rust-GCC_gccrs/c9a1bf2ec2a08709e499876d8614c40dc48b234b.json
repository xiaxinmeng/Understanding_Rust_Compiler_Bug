{"sha": "c9a1bf2ec2a08709e499876d8614c40dc48b234b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhMWJmMmVjMmEwODcwOWU0OTk4NzZkODYxNGM0MGRjNDhiMjM0Yg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-03-29T22:38:28Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-03-29T22:38:28Z"}, "message": "(mark_referenced_resources): Make setjmp use all registers.\n\nFrom-SVN: r9248", "tree": {"sha": "fe94c6fa26e0a7cef4232b509c874fd9d9d62c8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe94c6fa26e0a7cef4232b509c874fd9d9d62c8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9a1bf2ec2a08709e499876d8614c40dc48b234b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a1bf2ec2a08709e499876d8614c40dc48b234b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a1bf2ec2a08709e499876d8614c40dc48b234b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a1bf2ec2a08709e499876d8614c40dc48b234b/comments", "author": null, "committer": null, "parents": [{"sha": "ce79abf32c694488933ef4594f8adfe6317236d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce79abf32c694488933ef4594f8adfe6317236d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce79abf32c694488933ef4594f8adfe6317236d7"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "4c36d33b3fb58ac8879e57cb424c7b8cba59dbcb", "filename": "gcc/reorg.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a1bf2ec2a08709e499876d8614c40dc48b234b/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a1bf2ec2a08709e499876d8614c40dc48b234b/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=c9a1bf2ec2a08709e499876d8614c40dc48b234b", "patch": "@@ -379,11 +379,13 @@ mark_referenced_resources (x, res, include_delayed_effects)\n \t  rtx insn = PREV_INSN (x);\n \t  rtx sequence = 0;\n \t  int seq_size = 0;\n+\t  rtx next = NEXT_INSN (x);\n \t  int i;\n \n \t  /* If we are part of a delay slot sequence, point at the SEQUENCE. */\n \t  if (NEXT_INSN (insn) != x)\n \t    {\n+\t      next = NEXT_INSN (NEXT_INSN (insn));\n \t      sequence = PATTERN (NEXT_INSN (insn));\n \t      seq_size = XVECLEN (sequence, 0);\n \t      if (GET_CODE (sequence) != SEQUENCE)\n@@ -404,6 +406,18 @@ mark_referenced_resources (x, res, include_delayed_effects)\n \t    if (global_regs[i])\n \t      SET_HARD_REG_BIT (res->regs, i);\n \n+\t  /* Check for a NOTE_INSN_SETJMP.  If it exists, then we must\n+\t     assume that this call can need any register.\n+\n+\t     This is done to be more conservative about how we handle setjmp.\n+\t     We assume that they both use and set all registers.  Using all\n+\t     registers ensures that a register will not be considered dead\n+\t     just because it crosses a setjmp call.  A register should be\n+\t     considered dead only if the setjmp call returns non-zero.  */\n+\t  if (next && GET_CODE (next) == NOTE\n+\t      && NOTE_LINE_NUMBER (next) == NOTE_INSN_SETJMP)\n+\t    SET_HARD_REG_SET (res->regs);\n+\n \t  {\n \t    rtx link;\n "}]}