{"sha": "7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EwNGYwMWNiNzc1MmI0YzlmYWI4NDdjYmI2Nzc1ZTRiMDIwZjZkOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-05-07T13:31:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-05-07T13:31:00Z"}, "message": "re PR tree-optimization/53239 (VRP vs named value return opt)\n\n\tPR tree-optimization/53239\n\t* tree-vrp.c (get_value_range): Set VR of\n\tSSA_NAME_IS_DEFAULT_DEF of DECL_BY_REFERENCE RESULT_DECL\n\tto nonnull.\n\n\t* g++.dg/opt/vrp3.C: New test.\n\t* g++.dg/opt/vrp3-aux.cc: New file.\n\t* g++.dg/opt/vrp3.h: New file.\n\nFrom-SVN: r187240", "tree": {"sha": "b20b7dea8ea2b3e8146eed68b755b81ed224d16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b20b7dea8ea2b3e8146eed68b755b81ed224d16c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f22d4300fa45bd54c3ff48296f9d085c7a7a3eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f22d4300fa45bd54c3ff48296f9d085c7a7a3eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f22d4300fa45bd54c3ff48296f9d085c7a7a3eb"}], "stats": {"total": 116, "additions": 106, "deletions": 10}, "files": [{"sha": "664bd50d7be7eb487cb8d6834f30d1107e102c30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "patch": "@@ -1,3 +1,10 @@\n+2012-05-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/53239\n+\t* tree-vrp.c (get_value_range): Set VR of\n+\tSSA_NAME_IS_DEFAULT_DEF of DECL_BY_REFERENCE RESULT_DECL\n+\tto nonnull.\n+\n 2012-05-07  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/53195"}, {"sha": "323c652783a8fcb498de76e376817f3bde69f733", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "patch": "@@ -1,3 +1,10 @@\n+2012-05-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/53239\n+\t* g++.dg/opt/vrp3.C: New test.\n+\t* g++.dg/opt/vrp3-aux.cc: New file.\n+\t* g++.dg/opt/vrp3.h: New file.\n+\n 2012-05-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* g++.dg/debug/dwarf2/nested-3.C: Allow for / comments and missing"}, {"sha": "fb68f6b5204cc72171c1d7d55cb7fd7620002fee", "filename": "gcc/testsuite/g++.dg/opt/vrp3-aux.cc", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3-aux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3-aux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3-aux.cc?ref=7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+#include \"vrp3.h\"\n+\n+R::R ()\n+{\n+  r1 = r2 = 1;\n+}\n+\n+R::R (int n, int d)\n+{\n+  r1 = n;\n+  r2 = d;\n+}\n+\n+int\n+R::compare (R const &r, R const &s)\n+{\n+  return (int) (r.r1 * s.r2 - s.r1 * r.r2);\n+}"}, {"sha": "90162bfe1c009c9272f4e36b39f0c8ecfa6740a2", "filename": "gcc/testsuite/g++.dg/opt/vrp3.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3.C?ref=7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "patch": "@@ -0,0 +1,47 @@\n+// PR tree-optimization/53239\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+// { dg-additional-sources \"vrp3-aux.cc\" }\n+\n+#include \"vrp3.h\"\n+\n+struct M\n+{\n+  M (R m);\n+  R val;\n+  static int compare (M const &, M const &);\n+};\n+\n+inline M const &\n+min (M const & t1, M const & t2)\n+{\n+  return R::compare (t1.val, t2.val) < 0 ? t1 : t2;\n+}\n+\n+M::M (R m)\n+{\n+  val = m;\n+}\n+\n+M\n+test (M *x)\n+{\n+  M n (R (0, 0));\n+\n+  for (int i = 0; i < 2; i++)\n+    {\n+      M p = x[i];\n+      n = min (n, p);\n+    }\n+\n+  if (n.val.r2 != 2 || n.val.r1 != 1)\n+    __builtin_abort ();\n+  return n;\n+}\n+\n+int\n+main ()\n+{\n+  M x[2] = { M (R (1, 2)), M (R (1, 1)) };\n+  test (x);\n+}"}, {"sha": "0e97d0c491c2c57eb47d1aeda01aac9e5d5b8288", "filename": "gcc/testsuite/g++.dg/opt/vrp3.h", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fvrp3.h?ref=7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "patch": "@@ -0,0 +1,9 @@\n+struct R\n+{\n+  long long r1, r2;\n+  void copy (R const &r) { r1 = r.r1; r2 = r.r2; }\n+  R ();\n+  explicit R (int, int);\n+  R (R const &r) { copy (r); }\n+  static int compare (R const &, R const &);\n+};"}, {"sha": "72c647fca4ad71aad0b4702caebc5c36727b6aeb", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a04f01cb7752b4c9fab847cbb6775e4b020f6d9/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=7a04f01cb7752b4c9fab847cbb6775e4b020f6d9", "patch": "@@ -695,17 +695,22 @@ get_value_range (const_tree var)\n   /* If VAR is a default definition of a parameter, the variable can\n      take any value in VAR's type.  */\n   sym = SSA_NAME_VAR (var);\n-  if (SSA_NAME_IS_DEFAULT_DEF (var)\n-      && TREE_CODE (sym) == PARM_DECL)\n-    {\n-      /* Try to use the \"nonnull\" attribute to create ~[0, 0]\n-\t anti-ranges for pointers.  Note that this is only valid with\n-\t default definitions of PARM_DECLs.  */\n-      if (POINTER_TYPE_P (TREE_TYPE (sym))\n-\t  && nonnull_arg_p (sym))\n+  if (SSA_NAME_IS_DEFAULT_DEF (var))\n+    {\n+      if (TREE_CODE (sym) == PARM_DECL)\n+\t{\n+\t  /* Try to use the \"nonnull\" attribute to create ~[0, 0]\n+\t     anti-ranges for pointers.  Note that this is only valid with\n+\t     default definitions of PARM_DECLs.  */\n+\t  if (POINTER_TYPE_P (TREE_TYPE (sym))\n+\t      && nonnull_arg_p (sym))\n+\t    set_value_range_to_nonnull (vr, TREE_TYPE (sym));\n+\t  else\n+\t    set_value_range_to_varying (vr);\n+\t}\n+      else if (TREE_CODE (sym) == RESULT_DECL\n+\t       && DECL_BY_REFERENCE (sym))\n \tset_value_range_to_nonnull (vr, TREE_TYPE (sym));\n-      else\n-\tset_value_range_to_varying (vr);\n     }\n \n   return vr;"}]}