{"sha": "0c509e888c5f91f307b5c28725c2825136ae978c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM1MDllODg4YzVmOTFmMzA3YjVjMjg3MjVjMjgyNTEzNmFlOTc4Yw==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2013-11-20T12:28:29Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-11-20T12:28:29Z"}, "message": "dbxout.c (dbxout_type): Ignore POINTER_BOUNDS_TYPE.\n\n        * dbxout.c (dbxout_type): Ignore POINTER_BOUNDS_TYPE.\n        * dwarf2out.c (gen_subprogram_die): Ignore bound args.\n        (gen_type_die_with_usage): Skip pointer bounds.\n        (dwarf2out_global_decl): Likewise.\n\nFrom-SVN: r205109", "tree": {"sha": "f406e13e4b3d404db41eb93a87204b93ed9fd335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f406e13e4b3d404db41eb93a87204b93ed9fd335"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c509e888c5f91f307b5c28725c2825136ae978c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c509e888c5f91f307b5c28725c2825136ae978c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c509e888c5f91f307b5c28725c2825136ae978c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c509e888c5f91f307b5c28725c2825136ae978c/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e4fa4ae251be07f035bff32445d0c90e4133002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e4fa4ae251be07f035bff32445d0c90e4133002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e4fa4ae251be07f035bff32445d0c90e4133002"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "94afbfc93f7d64e802cd81b999cebd83ad883597", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c509e888c5f91f307b5c28725c2825136ae978c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c509e888c5f91f307b5c28725c2825136ae978c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c509e888c5f91f307b5c28725c2825136ae978c", "patch": "@@ -1,3 +1,10 @@\n+2013-11-20  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* dbxout.c (dbxout_type): Ignore POINTER_BOUNDS_TYPE.\n+\t* dwarf2out.c (gen_subprogram_die): Ignore bound args.\n+\t(gen_type_die_with_usage): Skip pointer bounds.\n+\t(dwarf2out_global_decl): Likewise.\n+\n 2013-11-20  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.md: Remove \"mode\" and \"mode2\" attributes"}, {"sha": "bc6a3af0f96e52c4430541c2e49158b30e0f12b8", "filename": "gcc/dbxout.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c509e888c5f91f307b5c28725c2825136ae978c/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c509e888c5f91f307b5c28725c2825136ae978c/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=0c509e888c5f91f307b5c28725c2825136ae978c", "patch": "@@ -2367,6 +2367,10 @@ dbxout_type (tree type, int full)\n       dbxout_type (TREE_TYPE (type), 0);\n       break;\n \n+    case POINTER_BOUNDS_TYPE:\n+      /* No debug info for pointer bounds type supported yet.  */\n+      break;\n+\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "23cd72666c1af197e2f49167d55fe41fce1f9a1a", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c509e888c5f91f307b5c28725c2825136ae978c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c509e888c5f91f307b5c28725c2825136ae978c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=0c509e888c5f91f307b5c28725c2825136ae978c", "patch": "@@ -18288,7 +18288,7 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t    gen_formal_parameter_pack_die (generic_decl_parm,\n \t\t\t\t\t   parm, subr_die,\n \t\t\t\t\t   &parm);\n-\t  else if (parm)\n+\t  else if (parm && !POINTER_BOUNDS_P (parm))\n \t    {\n \t      dw_die_ref parm_die = gen_decl_die (parm, NULL, subr_die);\n \n@@ -18300,6 +18300,8 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \n \t      parm = DECL_CHAIN (parm);\n \t    }\n+\t  else if (parm)\n+\t    parm = DECL_CHAIN (parm);\n \n \t  if (generic_decl_parm)\n \t    generic_decl_parm = DECL_CHAIN (generic_decl_parm);\n@@ -19798,6 +19800,7 @@ gen_type_die_with_usage (tree type, dw_die_ref context_die,\n     case FIXED_POINT_TYPE:\n     case COMPLEX_TYPE:\n     case BOOLEAN_TYPE:\n+    case POINTER_BOUNDS_TYPE:\n       /* No DIEs needed for fundamental types.  */\n       break;\n \n@@ -20445,7 +20448,8 @@ dwarf2out_global_decl (tree decl)\n      declarations, file-scope (extern) function declarations (which\n      had no corresponding body) and file-scope tagged type declarations\n      and definitions which have not yet been forced out.  */\n-  if (TREE_CODE (decl) != FUNCTION_DECL || !DECL_INITIAL (decl))\n+  if ((TREE_CODE (decl) != FUNCTION_DECL || !DECL_INITIAL (decl))\n+      && !POINTER_BOUNDS_P (decl))\n     dwarf2out_decl (decl);\n }\n "}]}