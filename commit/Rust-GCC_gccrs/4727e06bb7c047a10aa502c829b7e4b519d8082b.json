{"sha": "4727e06bb7c047a10aa502c829b7e4b519d8082b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcyN2UwNmJiN2MwNDdhMTBhYTUwMmM4MjliN2U0YjUxOWQ4MDgyYg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-01-31T09:14:36Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-01-31T09:14:36Z"}, "message": "S/390: Rename __S390_ARCH_LEVEL__ to __ARCH__.\n\nWe have recently added the predefined macro __S390_ARCH_LEVEL__ to\nexpand to a numerical value representing the architecture document\nlevel currently in use.  However, the IBM XL compiler already has a\nmacro named __ARCH__ for that purpose.  So we change our macro to that\nin order to improve portability.\n\ngcc/ChangeLog:\n\n2017-01-31  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/s390-c.c (s390_cpu_cpp_builtins_internal): Rename\n\t__S390_ARCH_LEVEL__ to __ARCH__.\n\ngcc/testsuite/ChangeLog:\n\n2017-01-31  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/s390.exp: Rename __S390_ARCH_LEVEL__ to\n\t__ARCH__.\n\nFrom-SVN: r245055", "tree": {"sha": "7be2a2a3b6a960a51ffc949be4a84ad962351659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7be2a2a3b6a960a51ffc949be4a84ad962351659"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4727e06bb7c047a10aa502c829b7e4b519d8082b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4727e06bb7c047a10aa502c829b7e4b519d8082b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4727e06bb7c047a10aa502c829b7e4b519d8082b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4727e06bb7c047a10aa502c829b7e4b519d8082b/comments", "author": null, "committer": null, "parents": [{"sha": "b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "ac133d4b356ad9925aa5d8d1abc74a357ee8f8cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4727e06bb7c047a10aa502c829b7e4b519d8082b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4727e06bb7c047a10aa502c829b7e4b519d8082b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4727e06bb7c047a10aa502c829b7e4b519d8082b", "patch": "@@ -1,3 +1,8 @@\n+2017-01-31  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390-c.c (s390_cpu_cpp_builtins_internal): Rename\n+\t__S390_ARCH_LEVEL__ to __ARCH__.\n+\n 2017-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/79267"}, {"sha": "8f184eaa9131996a2353d11b13d39dc517833476", "filename": "gcc/config/s390/s390-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4727e06bb7c047a10aa502c829b7e4b519d8082b/gcc%2Fconfig%2Fs390%2Fs390-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4727e06bb7c047a10aa502c829b7e4b519d8082b/gcc%2Fconfig%2Fs390%2Fs390-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-c.c?ref=4727e06bb7c047a10aa502c829b7e4b519d8082b", "patch": "@@ -340,8 +340,8 @@ s390_cpu_cpp_builtins_internal (cpp_reader *pfile,\n       arch_level--;\n     /* Review when a new arch is added and increase the value.  */\n     char dummy[23 - 2 * PROCESSOR_max] __attribute__((unused));\n-    sprintf (macro_def, \"__S390_ARCH_LEVEL__=%d\", arch_level);\n-    cpp_undef (pfile, \"__S390_ARCH_LEVEL__\");\n+    sprintf (macro_def, \"__ARCH__=%d\", arch_level);\n+    cpp_undef (pfile, \"__ARCH__\");\n     cpp_define (pfile, macro_def);\n   }\n "}, {"sha": "ca79200494b2d4b19c13c689ecef57306bf2bdaf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4727e06bb7c047a10aa502c829b7e4b519d8082b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4727e06bb7c047a10aa502c829b7e4b519d8082b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4727e06bb7c047a10aa502c829b7e4b519d8082b", "patch": "@@ -1,3 +1,8 @@\n+2017-01-31  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/s390.exp: Rename __S390_ARCH_LEVEL__ to\n+\t__ARCH__.\n+\n 2017-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/79267"}, {"sha": "107ba98c8d900693e34b3929a992e071ec08cda5", "filename": "gcc/testsuite/gcc.target/s390/s390.exp", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4727e06bb7c047a10aa502c829b7e4b519d8082b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4727e06bb7c047a10aa502c829b7e4b519d8082b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp?ref=4727e06bb7c047a10aa502c829b7e4b519d8082b", "patch": "@@ -100,19 +100,19 @@ proc check_effective_target_s390_useable_hw { } {\n \tint main (void)\n \t{\n \t    asm (\".machinemode zarch\" : : );\n-\t#if __S390_ARCH_LEVEL__ >= 11\n+\t#if __ARCH__ >= 11\n \t    asm (\"lcbb %%r2,0(%%r15),0\" : : );\n-\t#elif __S390_ARCH_LEVEL__ >= 10\n+\t#elif __ARCH__ >= 10\n \t    asm (\"risbgn %%r2,%%r2,0,0,0\" : : );\n-\t#elif __S390_ARCH_LEVEL__ >= 9\n+\t#elif __ARCH__ >= 9\n \t    asm (\"sgrk %%r2,%%r2,%%r2\" : : );\n-\t#elif __S390_ARCH_LEVEL__ >= 8\n+\t#elif __ARCH__ >= 8\n \t    asm (\"rosbg %%r2,%%r2,0,0,0\" : : );\n-\t#elif __S390_ARCH_LEVEL__ >= 7\n+\t#elif __ARCH__ >= 7\n \t    asm (\"nilf %%r2,0\" : : );\n-\t#elif __S390_ARCH_LEVEL__ >= 6\n+\t#elif __ARCH__ >= 6\n \t    asm (\"lay %%r2,0(%%r15)\" : : );\n-\t#elif __S390_ARCH_LEVEL__ >= 5\n+\t#elif __ARCH__ >= 5\n \t    asm (\"tam\" : : );\n \t#endif\n \t#ifdef __HTM__"}]}