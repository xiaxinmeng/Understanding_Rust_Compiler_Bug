{"sha": "14a082a364d3ae8343db57110c03224bcb933c9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRhMDgyYTM2NGQzYWU4MzQzZGI1NzExMGMwMzIyNGJjYjkzM2M5ZA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-09-09T11:25:12Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-09-09T11:25:12Z"}, "message": "[ARM][4/7] Convert FP mnemonics to UAL | vcvt patterns\n\n\t* config/arm/vfp.md (*extendsfdf2_vfp): Use UAL assembly syntax.\n\t(*truncdfsf2_vfp): Likewise.\n\t(*truncsisf2_vfp): Likewise.\n\t(*truncsidf2_vfp): Likewise.\n\t(fixuns_truncsfsi2): Likewise.\n\t(fixuns_truncdfsi2): Likewise.\n\t(*floatsisf2_vfp): Likewise.\n\t(*floatsidf2_vfp): Likewise.\n\t(floatunssisf2): Likewise.\n\t(floatunssidf2): Likewise.\n\n\t* gcc.target/arm/vfp-1.c: Updated expected assembly.\n\nFrom-SVN: r215053", "tree": {"sha": "7238d4fa46495075e4808375c9d4cccf40bcdf26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7238d4fa46495075e4808375c9d4cccf40bcdf26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14a082a364d3ae8343db57110c03224bcb933c9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a082a364d3ae8343db57110c03224bcb933c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a082a364d3ae8343db57110c03224bcb933c9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a082a364d3ae8343db57110c03224bcb933c9d/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14d9aa9fc01a369cdde5ed8d17760f09974e01cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14d9aa9fc01a369cdde5ed8d17760f09974e01cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14d9aa9fc01a369cdde5ed8d17760f09974e01cf"}], "stats": {"total": 57, "additions": 37, "deletions": 20}, "files": [{"sha": "12ed31f4d192d3d8011d784524478c56cea89122", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a082a364d3ae8343db57110c03224bcb933c9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a082a364d3ae8343db57110c03224bcb933c9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14a082a364d3ae8343db57110c03224bcb933c9d", "patch": "@@ -1,3 +1,16 @@\n+2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/vfp.md (*extendsfdf2_vfp): Use UAL assembly syntax.\n+\t(*truncdfsf2_vfp): Likewise.\n+\t(*truncsisf2_vfp): Likewise.\n+\t(*truncsidf2_vfp): Likewise.\n+\t(fixuns_truncsfsi2): Likewise.\n+\t(fixuns_truncdfsi2): Likewise.\n+\t(*floatsisf2_vfp): Likewise.\n+\t(*floatsidf2_vfp): Likewise.\n+\t(floatunssisf2): Likewise.\n+\t(floatunssidf2): Likewise.\n+\n 2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/vfp.md (*mulsf3_vfp): Use UAL assembly syntax."}, {"sha": "0afd8bf060ba1659be29d2aaab326c57a62a8490", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a082a364d3ae8343db57110c03224bcb933c9d/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a082a364d3ae8343db57110c03224bcb933c9d/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=14a082a364d3ae8343db57110c03224bcb933c9d", "patch": "@@ -953,7 +953,7 @@\n   [(set (match_operand:DF\t\t   0 \"s_register_operand\" \"=w\")\n \t(float_extend:DF (match_operand:SF 1 \"s_register_operand\" \"t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"fcvtds%?\\\\t%P0, %1\"\n+  \"vcvt%?.f64.f32\\\\t%P0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvt\")]\n@@ -963,7 +963,7 @@\n   [(set (match_operand:SF\t\t   0 \"s_register_operand\" \"=t\")\n \t(float_truncate:SF (match_operand:DF 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"fcvtsd%?\\\\t%0, %P1\"\n+  \"vcvt%?.f32.f64\\\\t%0, %P1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvt\")]\n@@ -993,7 +993,7 @@\n   [(set (match_operand:SI\t\t  0 \"s_register_operand\" \"=t\")\n \t(fix:SI (fix:SF (match_operand:SF 1 \"s_register_operand\" \"t\"))))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"ftosizs%?\\\\t%0, %1\"\n+  \"vcvt%?.s32.f32\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvtf2i\")]\n@@ -1003,7 +1003,7 @@\n   [(set (match_operand:SI\t\t  0 \"s_register_operand\" \"=t\")\n \t(fix:SI (fix:DF (match_operand:DF 1 \"s_register_operand\" \"w\"))))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"ftosizd%?\\\\t%0, %P1\"\n+  \"vcvt%?.s32.f64\\\\t%0, %P1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvtf2i\")]\n@@ -1014,7 +1014,7 @@\n   [(set (match_operand:SI\t\t  0 \"s_register_operand\" \"=t\")\n \t(unsigned_fix:SI (fix:SF (match_operand:SF 1 \"s_register_operand\" \"t\"))))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"ftouizs%?\\\\t%0, %1\"\n+  \"vcvt%?.u32.f32\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvtf2i\")]\n@@ -1024,7 +1024,7 @@\n   [(set (match_operand:SI\t\t  0 \"s_register_operand\" \"=t\")\n \t(unsigned_fix:SI (fix:DF (match_operand:DF 1 \"s_register_operand\" \"t\"))))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"ftouizd%?\\\\t%0, %P1\"\n+  \"vcvt%?.u32.f64\\\\t%0, %P1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvtf2i\")]\n@@ -1035,7 +1035,7 @@\n   [(set (match_operand:SF\t    0 \"s_register_operand\" \"=t\")\n \t(float:SF (match_operand:SI 1 \"s_register_operand\" \"t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"fsitos%?\\\\t%0, %1\"\n+  \"vcvt%?.f32.s32\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvti2f\")]\n@@ -1045,7 +1045,7 @@\n   [(set (match_operand:DF\t    0 \"s_register_operand\" \"=w\")\n \t(float:DF (match_operand:SI 1 \"s_register_operand\" \"t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"fsitod%?\\\\t%P0, %1\"\n+  \"vcvt%?.f64.s32\\\\t%P0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvti2f\")]\n@@ -1056,7 +1056,7 @@\n   [(set (match_operand:SF\t    0 \"s_register_operand\" \"=t\")\n \t(unsigned_float:SF (match_operand:SI 1 \"s_register_operand\" \"t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"fuitos%?\\\\t%0, %1\"\n+  \"vcvt%?.f32.u32\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvti2f\")]\n@@ -1066,7 +1066,7 @@\n   [(set (match_operand:DF\t    0 \"s_register_operand\" \"=w\")\n \t(unsigned_float:DF (match_operand:SI 1 \"s_register_operand\" \"t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"fuitod%?\\\\t%P0, %1\"\n+  \"vcvt%?.f64.u32\\\\t%P0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"f_cvti2f\")]"}, {"sha": "65783e1f0a335744a3de050755733a0bf603ddae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a082a364d3ae8343db57110c03224bcb933c9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a082a364d3ae8343db57110c03224bcb933c9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14a082a364d3ae8343db57110c03224bcb933c9d", "patch": "@@ -6,6 +6,10 @@\n \n \t* gcc.target/arm/vfp-1.c: Updated expected assembly.\n \n+2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/vfp-1.c: Updated expected assembly.\n+\n 2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/pr51835.c: Update expected assembly."}, {"sha": "1a970a701cd10af9cf2796e90920e5ba419d8ca2", "filename": "gcc/testsuite/gcc.target/arm/vfp-1.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a082a364d3ae8343db57110c03224bcb933c9d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a082a364d3ae8343db57110c03224bcb933c9d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c?ref=14a082a364d3ae8343db57110c03224bcb933c9d", "patch": "@@ -94,34 +94,34 @@ volatile unsigned int u1;\n \n void test_convert () {\n   /* extendsfdf2_vfp */\n-  /* { dg-final { scan-assembler \"fcvtds\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.f64.f32\" } } */\n   d1 = f1;\n   /* truncdfsf2_vfp */\n-  /* { dg-final { scan-assembler \"fcvtsd\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.f32.f64\" } } */\n   f1 = d1;\n   /* truncsisf2_vfp */\n-  /* { dg-final { scan-assembler \"ftosizs\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.s32.f32\" } } */\n   i1 = f1;\n   /* truncsidf2_vfp */\n-  /* { dg-final { scan-assembler \"ftosizd\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.s32.f64\" } } */\n   i1 = d1;\n   /* fixuns_truncsfsi2 */\n-  /* { dg-final { scan-assembler \"ftouizs\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.u32.f32\" } } */\n   u1 = f1;\n   /* fixuns_truncdfsi2 */\n-  /* { dg-final { scan-assembler \"ftouizd\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.u32.f64\" } } */\n   u1 = d1;\n   /* floatsisf2_vfp */\n-  /* { dg-final { scan-assembler \"fsitos\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.f32.s32\" } } */\n   f1 = i1;\n   /* floatsidf2_vfp */\n-  /* { dg-final { scan-assembler \"fsitod\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.f64.s32\" } } */\n   d1 = i1;\n   /* floatunssisf2 */\n-  /* { dg-final { scan-assembler \"fuitos\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.f32.u32\" } } */\n   f1 = u1;\n   /* floatunssidf2 */\n-  /* { dg-final { scan-assembler \"fuitod\" } } */\n+  /* { dg-final { scan-assembler \"vcvt.f64.u32\" } } */\n   d1 = u1;\n }\n "}]}