{"sha": "412bbe81d92ba9c32a2ebd523391bb8f6637a2f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEyYmJlODFkOTJiYTljMzJhMmViZDUyMzM5MWJiOGY2NjM3YTJmNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-08-20T07:53:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-08-20T07:53:58Z"}, "message": "re PR c++/33025 (Wrong calling of placement new with conditionals)\n\n\tPR c++/33025\n\t* init.c (build_new_1): Rename placement_var variable to placement_expr.\n\tInitialize it with save_expr rather than get_temp_regvar.\n\n\t* g++.dg/init/new23.C: New test.\n\nFrom-SVN: r127639", "tree": {"sha": "c2c802aba74aa922e346224b83ab6282792c8007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2c802aba74aa922e346224b83ab6282792c8007"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9eafe819c64a5f6dbc52dbe908ca680de8ca103"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "b12b7853f9145da1bceda46f9da848f5b3e696ab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=412bbe81d92ba9c32a2ebd523391bb8f6637a2f7", "patch": "@@ -1,3 +1,9 @@\n+2007-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/33025\n+\t* init.c (build_new_1): Rename placement_var variable to placement_expr.\n+\tInitialize it with save_expr rather than get_temp_regvar.\n+\n 2007-08-17  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR c++/28989"}, {"sha": "3c74812e01a8fe9622a1735c7805a33935904987", "filename": "gcc/cp/init.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=412bbe81d92ba9c32a2ebd523391bb8f6637a2f7", "patch": "@@ -1656,7 +1656,7 @@ build_new_1 (tree placement, tree type, tree nelts, tree init,\n      beginning of the storage allocated for an array-new expression in\n      order to store the number of elements.  */\n   tree cookie_size = NULL_TREE;\n-  tree placement_var;\n+  tree placement_expr;\n   /* True if the function we are calling is a placement allocation\n      function.  */\n   bool placement_allocation_fn_p;\n@@ -1749,17 +1749,16 @@ build_new_1 (tree placement, tree type, tree nelts, tree init,\n   alloc_fn = NULL_TREE;\n \n   /* If PLACEMENT is a simple pointer type, then copy it into\n-     PLACEMENT_VAR.  */\n+     PLACEMENT_EXPR.  */\n   if (processing_template_decl\n       || placement == NULL_TREE\n       || TREE_CHAIN (placement) != NULL_TREE\n       || TREE_CODE (TREE_TYPE (TREE_VALUE (placement))) != POINTER_TYPE)\n-    placement_var = NULL_TREE;\n+    placement_expr = NULL_TREE;\n   else\n     {\n-      placement_var = get_temp_regvar (TREE_TYPE (TREE_VALUE (placement)),\n-\t\t\t\t       TREE_VALUE (placement));\n-      placement = tree_cons (NULL_TREE, placement_var, NULL_TREE);\n+      placement_expr = save_expr (TREE_VALUE (placement));\n+      placement = tree_cons (NULL_TREE, placement_expr, NULL_TREE);\n     }\n \n   /* Allocate the object.  */\n@@ -1857,7 +1856,7 @@ build_new_1 (tree placement, tree type, tree nelts, tree init,\n     {\n       rval = build_nop (pointer_type, alloc_call);\n       if (placement != NULL)\n-\trval = avoid_placement_new_aliasing (rval, placement_var);\n+\trval = avoid_placement_new_aliasing (rval, placement_expr);\n       return rval;\n     }\n \n@@ -2122,7 +2121,7 @@ build_new_1 (tree placement, tree type, tree nelts, tree init,\n   gcc_assert (!lvalue_p (rval));\n \n   if (placement != NULL)\n-    rval = avoid_placement_new_aliasing (rval, placement_var);\n+    rval = avoid_placement_new_aliasing (rval, placement_expr);\n \n   return rval;\n }"}, {"sha": "1c792ad59de1401259c3de659612a88219ab2a6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=412bbe81d92ba9c32a2ebd523391bb8f6637a2f7", "patch": "@@ -1,3 +1,8 @@\n+2007-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/33025\n+\t* g++.dg/init/new23.C: New test.\n+\n 2007-08-20  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR middle-end/30564"}, {"sha": "cedd898b3492da479ae92846e7c2fddeea17057f", "filename": "gcc/testsuite/g++.dg/init/new23.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/412bbe81d92ba9c32a2ebd523391bb8f6637a2f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew23.C?ref=412bbe81d92ba9c32a2ebd523391bb8f6637a2f7", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/33025\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+\n+typedef __SIZE_TYPE__ size_t;\n+inline void *operator new (size_t, void *p) throw () { return p; }\n+extern \"C\" void abort ();\n+\n+int\n+main()\n+{\n+  const unsigned num = 10;\n+  unsigned *data = new unsigned[2 * num];\n+  unsigned *ptr = data;\n+  for (unsigned i = 0; i < 2 * num; ++i)\n+    (i % 2 == 0) ? new (ptr) unsigned (2) : new (ptr++) unsigned (1);\n+  if (ptr - data != num)\n+    abort ();\n+  return 0;\n+}"}]}