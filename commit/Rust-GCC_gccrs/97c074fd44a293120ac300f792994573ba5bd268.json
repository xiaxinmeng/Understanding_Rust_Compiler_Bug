{"sha": "97c074fd44a293120ac300f792994573ba5bd268", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdjMDc0ZmQ0NGEyOTMxMjBhYzMwMGY3OTI5OTQ1NzNiYTViZDI2OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-08-17T01:03:21Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-08-17T01:03:21Z"}, "message": "jvspec.c (lang_specific_driver): Add -s-bc-abi when needed.\n\ngcc/java/ChangeLog\n\t* jvspec.c (lang_specific_driver): Add -s-bc-abi when needed.\nlibjava/ChangeLog\n\t* configure, Makefile.in: Rebuilt.\n\t* Makefile.am (toolexeclib_LTLIBRARIES): Add libgcj_bc.la.\n\t(libgcj_bc_la_SOURCES): New variable.\n\t(libgcj_bc_la_LDFLAGS): Likewise.\n\t(libgcj_bc_la_LIBADD): Likewise.\n\t(libgcj_bc_la_DEPENDENCIES): Likewise.\n\t(libgcj_bc_la_LINK): Likewise.\n\t(libgcj_bc_dummy_LINK): Likewise.\n\t(libgcj_bc.la): New target.\n\t(install-exec-hook): Likewise.\n\t* libgcj.spec.in (*lib): Use LIBGCJ_SPEC.\n\t* libgcj_bc.c: New file.\n\t* configure.ac (LIBGCJ_SPEC): New subst.\n\t* configure.host (use_libgcj_bc): New variable.\n\nCo-Authored-By: Bryce McKinlay <bryce@mckinlay.net.nz>\n\nFrom-SVN: r116204", "tree": {"sha": "95b7d3068d6d990fedb42e0c637b55e97c1f98bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95b7d3068d6d990fedb42e0c637b55e97c1f98bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97c074fd44a293120ac300f792994573ba5bd268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c074fd44a293120ac300f792994573ba5bd268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97c074fd44a293120ac300f792994573ba5bd268", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c074fd44a293120ac300f792994573ba5bd268/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9180c238de746a8883e81552d446c3359284b7dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9180c238de746a8883e81552d446c3359284b7dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9180c238de746a8883e81552d446c3359284b7dd"}], "stats": {"total": 346, "additions": 307, "deletions": 39}, "files": [{"sha": "81970f5077f36fb6aa4671d08ce2542a823bbe8f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -1,3 +1,8 @@\n+2006-08-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Bryce McKinlay  <bryce@mckinlay.net.nz>\n+\n+\t* jvspec.c (lang_specific_driver): Add -s-bc-abi when needed.\n+\n 2006-08-10  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR java/8923"}, {"sha": "f64d438807c666fb4a7ba253195f8277afd37828", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -243,6 +243,9 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   /* The argument we use to specify the spec file.  */\n   char *spec_file = NULL;\n \n+  /* If linking, nonzero if the BC-ABI is in use.  */\n+  int link_for_bc_abi = 0;\n+\n   argc = *in_argc;\n   argv = *in_argv;\n   added_libraries = *in_added_libraries;\n@@ -365,6 +368,11 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n           else if (strcmp (argv[i], \"-static-libgcc\") == 0\n                    || strcmp (argv[i], \"-static\") == 0)\n \t    shared_libgcc = 0;\n+\t  else if (strcmp (argv[i], \"-findirect-dispatch\") == 0\n+\t\t   || strcmp (argv[i], \"--indirect-dispatch\") == 0)\n+\t    {\n+\t      link_for_bc_abi = 1;\n+\t    }\n \t  else\n \t    /* Pass other options through.  */\n \t    continue;\n@@ -490,6 +498,8 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   \n   num_args += shared_libgcc;\n \n+  num_args += link_for_bc_abi;\n+\n   arglist = XNEWVEC (const char *, num_args + 1);\n   j = 0;\n \n@@ -599,6 +609,9 @@ lang_specific_driver (int *in_argc, const char *const **in_argv,\n   if (shared_libgcc)\n     arglist[j++] = \"-shared-libgcc\";\n \n+  if (link_for_bc_abi)\n+    arglist[j++] = \"-s-bc-abi\";\n+\n   arglist[j] = NULL;\n \n   *in_argc = j;"}, {"sha": "5d324c23b34c18705de1f8fa81b43a667cb0f687", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -1,3 +1,21 @@\n+2006-08-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Bryce McKinlay  <bryce@mckinlay.net.nz>\n+\n+\t* configure, Makefile.in: Rebuilt.\n+\t* Makefile.am (toolexeclib_LTLIBRARIES): Add libgcj_bc.la.\n+\t(libgcj_bc_la_SOURCES): New variable.\n+\t(libgcj_bc_la_LDFLAGS): Likewise.\n+\t(libgcj_bc_la_LIBADD): Likewise.\n+\t(libgcj_bc_la_DEPENDENCIES): Likewise.\n+\t(libgcj_bc_la_LINK): Likewise.\n+\t(libgcj_bc_dummy_LINK): Likewise.\n+\t(libgcj_bc.la): New target.\n+\t(install-exec-hook): Likewise.\n+\t* libgcj.spec.in (*lib): Use LIBGCJ_SPEC.\n+\t* libgcj_bc.c: New file.\n+\t* configure.ac (LIBGCJ_SPEC): New subst.\n+\t* configure.host (use_libgcj_bc): New variable.\n+\n 2006-08-15  Kyle Galloway  <kgallowa@redhat.com>\n \n   \t* include/java-interp.h (_Jv_InterpMethod::run_debug): New method."}, {"sha": "f04f993380ae10046ccdbda6593e2feb08ffe5e7", "filename": "libjava/Makefile.am", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -36,6 +36,10 @@ libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)\n toolexeclib_LTLIBRARIES = libgcj.la libgij.la libgcj-tools.la\n toolexecmainlib_DATA = libgcj.spec\n \n+if USE_LIBGCJ_BC\n+toolexeclib_LTLIBRARIES += libgcj_bc.la\n+endif\n+\n if XLIB_AWT\n toolexeclib_LTLIBRARIES += lib-gnu-awt-xlib.la\n endif\n@@ -277,6 +281,31 @@ lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n lib_gnu_awt_xlib_la_LINK = $(LIBLINK)\n \n+## Support for libgcj_bc: dummy shared library.\n+##\n+## This lets us have one soname in BC objects and another in C++ ABI objects.\n+libgcj_bc_la_SOURCES = libgcj_bc.c\n+libgcj_bc_la_LDFLAGS = -rpath $(toolexeclibdir) -no-static -version-info 1:0:0\n+libgcj_bc_la_LIBADD = libgcj.la\n+libgcj_bc_la_DEPENDENCIES = libgcj.la\n+libgcj_bc_la_LINK = $(LIBLINK)\n+## This is specific to Linux/{Free,Net,Open}BSD/Hurd and perhaps few others.\n+## USE_LIBGCJ_BC shouldn't be set on other targets.\n+libgcj_bc_dummy_LINK = $(CC) -L$(here)/.libs $(CFLAGS) $(LDFLAGS) -shared \\\n+\t-fPIC -nostdlib\n+\n+## This rule creates the libgcj_bc dummy library in the .libs directory, for use\n+## when testing.\n+libgcj_bc.la: $(libgcj_bc_la_OBJECTS) $(libgcj_bc_la_DEPENDENCIES)\n+\t$(libgcj_bc_la_LINK) $(am_libgcj_bc_la_rpath) $(libgcj_bc_la_LDFLAGS) \\\n+\t$(libgcj_bc_la_OBJECTS) $(libgcj_bc_la_LIBADD) $(LIBS) || exit; \\\n+\trm .libs/libgcj_bc.so; \\\n+\tmv .libs/libgcj_bc.so.1.0.0 .libs/libgcj_bc.so; \\\n+\t$(libgcj_bc_dummy_LINK) -xc /dev/null -Wl,-soname,libgcj_bc.so.1 \\\n+\t-o .libs/libgcj_bc.so.1.0.0 -lgcj || exit; \\\n+\trm .libs/libgcj_bc.so.1; \\\n+\t$(LN_S) libgcj_bc.so.1.0.0 .libs/libgcj_bc.so.1\n+\n ## Note that property_files is defined in sources.am.\n propertyo_files = $(patsubst classpath/resource/%,%,$(addsuffix .lo,$(property_files)))\n \n@@ -507,6 +536,22 @@ extra_headers = java/lang/Object.h java/lang/Class.h\n $(extra_headers) $(srcdir)/java/lang/Object.h $(srcdir)/java/lang/Class.h:\n \t@:\n \n+## Support for libgcj_bc: dummy shared library used only at link-time.\n+if USE_LIBGCJ_BC\n+## Install libgcj_bc dummy lib in the target directory. We also need to delete\n+## libtool's .la file, this prevents libtool resetting the lib again \n+## later.\n+install-exec-hook: install-toolexeclibLTLIBRARIES\n+\t@echo Installing dummy lib libgcj_bc.so.1.0.0; \\\n+\trm $(toolexeclibdir)/libgcj_bc.so; \\\n+\tmv $(toolexeclibdir)/libgcj_bc.so.1.0.0 $(toolexeclibdir)/libgcj_bc.so; \\\n+\t$(libgcj_bc_dummy_LINK) -xc /dev/null -Wl,-soname,libgcj_bc.so.1 \\\n+\t-o $(toolexeclibdir)/libgcj_bc.so.1.0.0 -lgcj || exit; \\\n+\trm $(toolexeclibdir)/libgcj_bc.so.1; \\\n+\t$(LN_S) libgcj_bc.so.1.0.0 $(toolexeclibdir)/libgcj_bc.so.1; \\\n+\trm $(toolexeclibdir)/libgcj_bc.la;\n+endif\n+\n ## Install the headers.  It is fairly ugly that we have to do this by\n ## hand.\n install-data-local:"}, {"sha": "2a6f7d1c74e6d08775faf364e000ee43f5b64778", "filename": "libjava/Makefile.in", "status": "modified", "additions": 77, "deletions": 37, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -41,21 +41,22 @@ build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n @TESTSUBDIR_TRUE@am__append_1 = testsuite\n-@XLIB_AWT_TRUE@am__append_2 = lib-gnu-awt-xlib.la\n+@USE_LIBGCJ_BC_TRUE@am__append_2 = libgcj_bc.la\n+@XLIB_AWT_TRUE@am__append_3 = lib-gnu-awt-xlib.la\n @NATIVE_TRUE@bin_PROGRAMS = jv-convert$(EXEEXT) gij$(EXEEXT) \\\n @NATIVE_TRUE@\tgrmic$(EXEEXT) grmiregistry$(EXEEXT) \\\n @NATIVE_TRUE@\tgcj-dbtool$(EXEEXT) gappletviewer$(EXEEXT) \\\n @NATIVE_TRUE@\tgjarsigner$(EXEEXT) gkeytool$(EXEEXT)\n-@BASH_JAR_TRUE@am__append_3 = scripts/jar\n-@USING_GCC_TRUE@am__append_4 = $(WARNINGS)\n-@USING_BOEHMGC_TRUE@am__append_5 = boehm.cc\n-@USING_NOGC_TRUE@am__append_6 = nogc.cc\n-@USING_POSIX_PLATFORM_TRUE@am__append_7 = posix.cc\n-@USING_WIN32_PLATFORM_TRUE@am__append_8 = win32.cc\n-@USING_DARWIN_CRT_TRUE@am__append_9 = darwin.cc\n-@USING_POSIX_THREADS_TRUE@am__append_10 = posix-threads.cc\n-@USING_WIN32_THREADS_TRUE@am__append_11 = win32-threads.cc\n-@USING_NO_THREADS_TRUE@am__append_12 = no-threads.cc\n+@BASH_JAR_TRUE@am__append_4 = scripts/jar\n+@USING_GCC_TRUE@am__append_5 = $(WARNINGS)\n+@USING_BOEHMGC_TRUE@am__append_6 = boehm.cc\n+@USING_NOGC_TRUE@am__append_7 = nogc.cc\n+@USING_POSIX_PLATFORM_TRUE@am__append_8 = posix.cc\n+@USING_WIN32_PLATFORM_TRUE@am__append_9 = win32.cc\n+@USING_DARWIN_CRT_TRUE@am__append_10 = darwin.cc\n+@USING_POSIX_THREADS_TRUE@am__append_11 = posix-threads.cc\n+@USING_WIN32_THREADS_TRUE@am__append_12 = win32-threads.cc\n+@USING_NO_THREADS_TRUE@am__append_13 = no-threads.cc\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n \t$(srcdir)/../depcomp $(srcdir)/../install-sh \\\n@@ -67,7 +68,7 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(top_srcdir)/scripts/jar.in COPYING ChangeLog NEWS THANKS\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@noinst_PROGRAMS =  \\\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\tgen-from-JIS$(EXEEXT)\n-@XLIB_AWT_TRUE@am__append_13 = $(xlib_nat_headers)\n+@XLIB_AWT_TRUE@am__append_14 = $(xlib_nat_headers)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n@@ -368,6 +369,9 @@ am_libgcj_la_OBJECTS = prims.lo jni.lo jvmti.lo exception.lo \\\n \t$(am__objects_6) $(am__objects_7) $(am__objects_8) \\\n \t$(am__objects_9) $(am__objects_10)\n libgcj_la_OBJECTS = $(am_libgcj_la_OBJECTS)\n+am_libgcj_bc_la_OBJECTS = libgcj_bc.lo\n+libgcj_bc_la_OBJECTS = $(am_libgcj_bc_la_OBJECTS)\n+@USE_LIBGCJ_BC_TRUE@am_libgcj_bc_la_rpath = -rpath $(toolexeclibdir)\n am_libgij_la_OBJECTS = gij.lo\n libgij_la_OBJECTS = $(am_libgij_la_OBJECTS)\n am_libjvm_la_OBJECTS = jni-libjvm.lo\n@@ -423,18 +427,19 @@ LTGCJCOMPILE = $(LIBTOOL) --mode=compile $(GCJ) $(AM_GCJFLAGS) \\\n \t$(GCJFLAGS)\n GCJLD = $(GCJ)\n SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) $(libgcj_tools_la_SOURCES) \\\n-\t$(libgcj_la_SOURCES) $(libgij_la_SOURCES) $(libjvm_la_SOURCES) \\\n+\t$(libgcj_la_SOURCES) $(libgcj_bc_la_SOURCES) \\\n+\t$(libgij_la_SOURCES) $(libjvm_la_SOURCES) \\\n \t$(gappletviewer_SOURCES) $(gcj_dbtool_SOURCES) \\\n \t$(gen_from_JIS_SOURCES) $(gij_SOURCES) $(gjarsigner_SOURCES) \\\n \t$(gkeytool_SOURCES) $(grmic_SOURCES) $(grmiregistry_SOURCES) \\\n \t$(jv_convert_SOURCES)\n DIST_SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) \\\n \t$(libgcj_tools_la_SOURCES) $(am__libgcj_la_SOURCES_DIST) \\\n-\t$(libgij_la_SOURCES) $(libjvm_la_SOURCES) \\\n-\t$(gappletviewer_SOURCES) $(gcj_dbtool_SOURCES) \\\n-\t$(am__gen_from_JIS_SOURCES_DIST) $(gij_SOURCES) \\\n-\t$(gjarsigner_SOURCES) $(gkeytool_SOURCES) $(grmic_SOURCES) \\\n-\t$(grmiregistry_SOURCES) $(jv_convert_SOURCES)\n+\t$(libgcj_bc_la_SOURCES) $(libgij_la_SOURCES) \\\n+\t$(libjvm_la_SOURCES) $(gappletviewer_SOURCES) \\\n+\t$(gcj_dbtool_SOURCES) $(am__gen_from_JIS_SOURCES_DIST) \\\n+\t$(gij_SOURCES) $(gjarsigner_SOURCES) $(gkeytool_SOURCES) \\\n+\t$(grmic_SOURCES) $(grmiregistry_SOURCES) $(jv_convert_SOURCES)\n RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n \thtml-recursive info-recursive install-data-recursive \\\n \tinstall-exec-recursive install-info-recursive \\\n@@ -539,6 +544,7 @@ LIBGCJ_CFLAGS = @LIBGCJ_CFLAGS@\n LIBGCJ_CXXFLAGS = @LIBGCJ_CXXFLAGS@\n LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n+LIBGCJ_SPEC = @LIBGCJ_SPEC@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBOBJS = @LIBOBJS@\n@@ -584,6 +590,8 @@ THREADSPEC = @THREADSPEC@\n THREADSTARTFILESPEC = @THREADSTARTFILESPEC@\n TOOLKIT = @TOOLKIT@\n UNZIP = @UNZIP@\n+USE_LIBGCJ_BC_FALSE = @USE_LIBGCJ_BC_FALSE@\n+USE_LIBGCJ_BC_TRUE = @USE_LIBGCJ_BC_TRUE@\n USING_BOEHMGC_FALSE = @USING_BOEHMGC_FALSE@\n USING_BOEHMGC_TRUE = @USING_BOEHMGC_TRUE@\n USING_DARWIN_CRT_FALSE = @USING_DARWIN_CRT_FALSE@\n@@ -702,7 +710,7 @@ write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) $(foreach o\n # This is required by TL_AC_GXX_INCLUDE_DIR.\n libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)\n toolexeclib_LTLIBRARIES = libgcj.la libgij.la libgcj-tools.la \\\n-\t$(am__append_2)\n+\t$(am__append_2) $(am__append_3)\n toolexecmainlib_DATA = libgcj.spec\n dbexec_LTLIBRARIES = libjvm.la\n pkgconfigdir = $(libdir)/pkgconfig\n@@ -718,7 +726,7 @@ propdir = $(libdir)\n db_name = classmap.db\n db_pathtail = gcj-$(gcc_version)/$(db_name)\n @NATIVE_TRUE@dbexec_DATA = $(db_name)\n-bin_SCRIPTS = addr2name.awk $(am__append_3)\n+bin_SCRIPTS = addr2name.awk $(am__append_4)\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8 -Wno-deprecated\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) \\\n           $(LDFLAGS) -o $@\n@@ -756,7 +764,7 @@ AM_GCJFLAGS = \\\n \t--encoding=UTF-8 \\\n \t-Wno-deprecated -fbootstrap-classes\n \n-AM_CFLAGS = @LIBGCJ_CFLAGS@ $(am__append_4)\n+AM_CFLAGS = @LIBGCJ_CFLAGS@ $(am__append_5)\n PEDANTIC_CFLAGS = -ansi -pedantic -Wall -Wno-long-long\n JCFLAGS = -g\n JC1FLAGS = @LIBGCJ_JAVAFLAGS@ $(GCJFLAGS)\n@@ -781,9 +789,9 @@ libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n libgcj_la_SOURCES = prims.cc jni.cc jvmti.cc exception.cc \\\n \tstacktrace.cc link.cc defineclass.cc interpret.cc verify.cc \\\n \tjava/lang/Class.java java/lang/Object.java $(nat_source_files) \\\n-\t$(am__append_5) $(am__append_6) $(am__append_7) \\\n-\t$(am__append_8) $(am__append_9) $(am__append_10) \\\n-\t$(am__append_11) $(am__append_12)\n+\t$(am__append_6) $(am__append_7) $(am__append_8) \\\n+\t$(am__append_9) $(am__append_10) $(am__append_11) \\\n+\t$(am__append_12) $(am__append_13)\n nat_files = $(nat_source_files:.cc=.lo)\n xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n \n@@ -834,6 +842,14 @@ lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n \n lib_gnu_awt_xlib_la_LINK = $(LIBLINK)\n+libgcj_bc_la_SOURCES = libgcj_bc.c\n+libgcj_bc_la_LDFLAGS = -rpath $(toolexeclibdir) -no-static -version-info 1:0:0\n+libgcj_bc_la_LIBADD = libgcj.la\n+libgcj_bc_la_DEPENDENCIES = libgcj.la\n+libgcj_bc_la_LINK = $(LIBLINK)\n+libgcj_bc_dummy_LINK = $(CC) -L$(here)/.libs $(CFLAGS) $(LDFLAGS) -shared \\\n+\t-fPIC -nostdlib\n+\n propertyo_files = $(patsubst classpath/resource/%,%,$(addsuffix .lo,$(property_files)))\n CLEANFILES = libgcj-$(gcc_version).jar libgcj-tools-$(gcc_version).jar\n DISTCLEANFILES = native.dirs\n@@ -7446,7 +7462,7 @@ gnu/gcj/xlib/natXImage.cc \\\n gnu/gcj/xlib/natXUnmapEvent.cc\n \n sourcesdir = $(jardir)\n-headers_to_make = $(nat_headers) $(am__append_13)\n+headers_to_make = $(nat_headers) $(am__append_14)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -8269,6 +8285,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jni-libjvm.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jni.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jvmti.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgcj_bc.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/link.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/no-threads.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nogc.Plo@am__quote@\n@@ -9082,6 +9099,7 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n+@USE_LIBGCJ_BC_FALSE@install-exec-hook:\n clean: clean-recursive\n \n clean-am: clean-binPROGRAMS clean-dbexecLTLIBRARIES clean-generic \\\n@@ -9111,6 +9129,8 @@ install-data-am: install-data-local install-jarDATA \\\n install-exec-am: install-binPROGRAMS install-binSCRIPTS \\\n \tinstall-dbexecDATA install-dbexecLTLIBRARIES \\\n \tinstall-toolexeclibLTLIBRARIES install-toolexecmainlibDATA\n+\t@$(NORMAL_INSTALL)\n+\t$(MAKE) $(AM_MAKEFLAGS) install-exec-hook\n \n install-info: install-info-recursive\n \n@@ -9157,25 +9177,35 @@ uninstall-info: uninstall-info-recursive\n \tinstall install-am install-binPROGRAMS install-binSCRIPTS \\\n \tinstall-data install-data-am install-data-local \\\n \tinstall-dbexecDATA install-dbexecLTLIBRARIES install-exec \\\n-\tinstall-exec-am install-info install-info-am install-jarDATA \\\n-\tinstall-man install-pkgconfigDATA install-strip \\\n-\tinstall-toolexeclibLTLIBRARIES install-toolexecmainlibDATA \\\n-\tinstallcheck installcheck-am installdirs installdirs-am \\\n-\tmaintainer-clean maintainer-clean-generic \\\n-\tmaintainer-clean-recursive mostlyclean mostlyclean-compile \\\n-\tmostlyclean-generic mostlyclean-libtool mostlyclean-local \\\n-\tmostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \\\n-\tuninstall uninstall-am uninstall-binPROGRAMS \\\n-\tuninstall-binSCRIPTS uninstall-dbexecDATA \\\n-\tuninstall-dbexecLTLIBRARIES uninstall-info-am \\\n-\tuninstall-jarDATA uninstall-pkgconfigDATA \\\n+\tinstall-exec-am install-exec-hook install-info install-info-am \\\n+\tinstall-jarDATA install-man install-pkgconfigDATA \\\n+\tinstall-strip install-toolexeclibLTLIBRARIES \\\n+\tinstall-toolexecmainlibDATA installcheck installcheck-am \\\n+\tinstalldirs installdirs-am maintainer-clean \\\n+\tmaintainer-clean-generic maintainer-clean-recursive \\\n+\tmostlyclean mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool mostlyclean-local mostlyclean-recursive \\\n+\tpdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \\\n+\tuninstall-binPROGRAMS uninstall-binSCRIPTS \\\n+\tuninstall-dbexecDATA uninstall-dbexecLTLIBRARIES \\\n+\tuninstall-info-am uninstall-jarDATA uninstall-pkgconfigDATA \\\n \tuninstall-toolexeclibLTLIBRARIES uninstall-toolexecmainlibDATA\n \n \n $(db_name): gcj-dbtool$(EXEEXT)\n \t@rm -f $(db_name)\n \t./gcj-dbtool -n $(db_name) || touch $(db_name)\n \n+libgcj_bc.la: $(libgcj_bc_la_OBJECTS) $(libgcj_bc_la_DEPENDENCIES)\n+\t$(libgcj_bc_la_LINK) $(am_libgcj_bc_la_rpath) $(libgcj_bc_la_LDFLAGS) \\\n+\t$(libgcj_bc_la_OBJECTS) $(libgcj_bc_la_LIBADD) $(LIBS) || exit; \\\n+\trm .libs/libgcj_bc.so; \\\n+\tmv .libs/libgcj_bc.so.1.0.0 .libs/libgcj_bc.so; \\\n+\t$(libgcj_bc_dummy_LINK) -xc /dev/null -Wl,-soname,libgcj_bc.so.1 \\\n+\t-o .libs/libgcj_bc.so.1.0.0 -lgcj || exit; \\\n+\trm .libs/libgcj_bc.so.1; \\\n+\t$(LN_S) libgcj_bc.so.1.0.0 .libs/libgcj_bc.so.1\n+\n $(propertyo_files): %.lo: classpath/resource/%\n \t$(mkinstalldirs) `dirname $@`; \\\n \t$(LTGCJCOMPILE) -o $@ -c $< -Wc,--resource,$(@:.lo=)\n@@ -11742,6 +11772,16 @@ java/lang/ConcreteProcess$$ProcessManager.h: classpath/lib/java/lang/ConcretePro\n $(extra_headers) $(srcdir)/java/lang/Object.h $(srcdir)/java/lang/Class.h:\n \t@:\n \n+@USE_LIBGCJ_BC_TRUE@install-exec-hook: install-toolexeclibLTLIBRARIES\n+@USE_LIBGCJ_BC_TRUE@\t@echo Installing dummy lib libgcj_bc.so.1.0.0; \\\n+@USE_LIBGCJ_BC_TRUE@\trm $(toolexeclibdir)/libgcj_bc.so; \\\n+@USE_LIBGCJ_BC_TRUE@\tmv $(toolexeclibdir)/libgcj_bc.so.1.0.0 $(toolexeclibdir)/libgcj_bc.so; \\\n+@USE_LIBGCJ_BC_TRUE@\t$(libgcj_bc_dummy_LINK) -xc /dev/null -Wl,-soname,libgcj_bc.so.1 \\\n+@USE_LIBGCJ_BC_TRUE@\t-o $(toolexeclibdir)/libgcj_bc.so.1.0.0 -lgcj || exit; \\\n+@USE_LIBGCJ_BC_TRUE@\trm $(toolexeclibdir)/libgcj_bc.so.1; \\\n+@USE_LIBGCJ_BC_TRUE@\t$(LN_S) libgcj_bc.so.1.0.0 $(toolexeclibdir)/libgcj_bc.so.1; \\\n+@USE_LIBGCJ_BC_TRUE@\trm $(toolexeclibdir)/libgcj_bc.la;\n+\n install-data-local:\n \t$(PRE_INSTALL)\n \t@echo Creating list of headers to install..."}, {"sha": "195b035fa747cb59e3f300f89a4faa41d77706ff", "filename": "libjava/configure", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -310,7 +310,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_libsubdir build_subdir host_subdir target_subdir libgcj_basedir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical LN_S mkinstalldirs CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LDFLAGS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE AS ac_ct_AS LD ac_ct_LD AR ac_ct_AR RANLIB ac_ct_RANLIB JAR ZIP UNZIP BASH_JAR_TRUE BASH_JAR_FALSE MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBGCJ_CFLAGS LIBGCJ_CXXFLAGS LIBGCJ_JAVAFLAGS LIBGCJ_LD_SYMBOLIC LIBGCJDEBUG TOOLKIT XLIB_AWT_TRUE XLIB_AWT_FALSE GCJH INCLTDL LIBLTDL DIRLTDL LIBTOOL CXXCPP CPPFLAGS GCJ GCJFLAGS GCJDEPMODE am__fastdepGCJ_TRUE am__fastdepGCJ_FALSE subdirs TESTSUBDIR_TRUE TESTSUBDIR_FALSE JAVA_HOME_SET_TRUE JAVA_HOME_SET_FALSE JAVA_HOME INTERPRETER LIBFFI LIBFFIINCS PLATFORM_INNER_NAT_HDRS CPP EGREP USING_WIN32_PLATFORM_TRUE USING_WIN32_PLATFORM_FALSE USING_POSIX_PLATFORM_TRUE USING_POSIX_PLATFORM_FALSE USING_DARWIN_CRT_TRUE USING_DARWIN_CRT_FALSE SYSTEMSPEC LIBGCJTESTSPEC ZLIBSPEC ZLIBTESTSPEC X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS extra_ldflags_libjava GCLIBS GCINCS GCDEPS GCSPEC JC1GCSPEC GCTESTSPEC USING_BOEHMGC_TRUE USING_BOEHMGC_FALSE USING_NOGC_TRUE USING_NOGC_FALSE THREADLIBS THREADINCS THREADDEPS THREADSPEC THREADSTARTFILESPEC THREADLDFLAGS THREADCXXFLAGS USING_POSIX_THREADS_TRUE USING_POSIX_THREADS_FALSE USING_WIN32_THREADS_TRUE USING_WIN32_THREADS_FALSE USING_NO_THREADS_TRUE USING_NO_THREADS_FALSE HASH_SYNC_SPEC USING_GCC_TRUE USING_GCC_FALSE LIBICONV LTLIBICONV PKG_CONFIG GTK_CFLAGS GTK_LIBS GLIB_CFLAGS GLIB_LIBS LIBART_CFLAGS LIBART_LIBS CLASSPATH_SEPARATOR ac_ct_GCJ ZLIBS SYS_ZLIBS ZINCS DIVIDESPEC CHECKREFSPEC EXCEPTIONSPEC BACKTRACESPEC IEEESPEC NATIVE_TRUE NATIVE_FALSE NEEDS_DATA_START_TRUE NEEDS_DATA_START_FALSE GCC_UNWIND_INCLUDE toolexecdir toolexecmainlibdir toolexeclibdir dbexecdir GCJVERSION gxx_include_dir libstdcxx_incdir ALLOCA PERL SYSDEP_SOURCES LD_START_STATIC_SPEC LD_FINISH_STATIC_SPEC here LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_libsubdir build_subdir host_subdir target_subdir libgcj_basedir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical LN_S mkinstalldirs CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LDFLAGS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE AS ac_ct_AS LD ac_ct_LD AR ac_ct_AR RANLIB ac_ct_RANLIB JAR ZIP UNZIP BASH_JAR_TRUE BASH_JAR_FALSE MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBGCJ_CFLAGS LIBGCJ_CXXFLAGS LIBGCJ_JAVAFLAGS LIBGCJ_LD_SYMBOLIC LIBGCJDEBUG TOOLKIT XLIB_AWT_TRUE XLIB_AWT_FALSE GCJH INCLTDL LIBLTDL DIRLTDL LIBTOOL CXXCPP CPPFLAGS GCJ GCJFLAGS GCJDEPMODE am__fastdepGCJ_TRUE am__fastdepGCJ_FALSE subdirs TESTSUBDIR_TRUE TESTSUBDIR_FALSE JAVA_HOME_SET_TRUE JAVA_HOME_SET_FALSE JAVA_HOME INTERPRETER LIBFFI LIBFFIINCS PLATFORM_INNER_NAT_HDRS CPP EGREP USING_WIN32_PLATFORM_TRUE USING_WIN32_PLATFORM_FALSE USING_POSIX_PLATFORM_TRUE USING_POSIX_PLATFORM_FALSE USING_DARWIN_CRT_TRUE USING_DARWIN_CRT_FALSE SYSTEMSPEC LIBGCJTESTSPEC ZLIBSPEC ZLIBTESTSPEC X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS extra_ldflags_libjava GCLIBS GCINCS GCDEPS GCSPEC JC1GCSPEC GCTESTSPEC USING_BOEHMGC_TRUE USING_BOEHMGC_FALSE USING_NOGC_TRUE USING_NOGC_FALSE THREADLIBS THREADINCS THREADDEPS THREADSPEC THREADSTARTFILESPEC THREADLDFLAGS THREADCXXFLAGS USING_POSIX_THREADS_TRUE USING_POSIX_THREADS_FALSE USING_WIN32_THREADS_TRUE USING_WIN32_THREADS_FALSE USING_NO_THREADS_TRUE USING_NO_THREADS_FALSE USE_LIBGCJ_BC_TRUE USE_LIBGCJ_BC_FALSE LIBGCJ_SPEC HASH_SYNC_SPEC USING_GCC_TRUE USING_GCC_FALSE LIBICONV LTLIBICONV PKG_CONFIG GTK_CFLAGS GTK_LIBS GLIB_CFLAGS GLIB_LIBS LIBART_CFLAGS LIBART_LIBS CLASSPATH_SEPARATOR ac_ct_GCJ ZLIBS SYS_ZLIBS ZINCS DIVIDESPEC CHECKREFSPEC EXCEPTIONSPEC BACKTRACESPEC IEEESPEC NATIVE_TRUE NATIVE_FALSE NEEDS_DATA_START_TRUE NEEDS_DATA_START_FALSE GCC_UNWIND_INCLUDE toolexecdir toolexecmainlibdir toolexeclibdir dbexecdir GCJVERSION gxx_include_dir libstdcxx_incdir ALLOCA PERL SYSDEP_SOURCES LD_START_STATIC_SPEC LD_FINISH_STATIC_SPEC here LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -9263,6 +9263,16 @@ else\n fi\n \n \n+\n+if test \"$use_libgcj_bc\" = yes; then\n+  USE_LIBGCJ_BC_TRUE=\n+  USE_LIBGCJ_BC_FALSE='#'\n+else\n+  USE_LIBGCJ_BC_TRUE='#'\n+  USE_LIBGCJ_BC_FALSE=\n+fi\n+\n+\n if test -d sysdep; then true; else mkdir sysdep; fi\n           ac_config_links=\"$ac_config_links sysdep/locks.h:sysdep/$sysdeps_dir/locks.h\"\n \n@@ -9271,6 +9281,12 @@ if test -d sysdep; then true; else mkdir sysdep; fi\n           ac_config_links=\"$ac_config_links sysdep/descriptor.h:$descriptor_h\"\n \n \n+LIBGCJ_SPEC=\"%{s-bc-abi:} -lgcj\"\n+if test \"$use_libgcj_bc\" = yes; then\n+  LIBGCJ_SPEC=\"%{s-bc-abi:-lgcj_bc;:-lgcj}\"\n+fi\n+\n+\n HASH_SYNC_SPEC=\n # Hash synchronization is only useful with posix threads right now.\n if test \"$enable_hash_synchronization\" = yes && test \"$THREADS\" != \"none\"; then\n@@ -16878,6 +16894,13 @@ echo \"$as_me: error: conditional \\\"USING_NO_THREADS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${USE_LIBGCJ_BC_TRUE}\" && test -z \"${USE_LIBGCJ_BC_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"USE_LIBGCJ_BC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"USE_LIBGCJ_BC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${USING_GCC_TRUE}\" && test -z \"${USING_GCC_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"USING_GCC\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -17622,6 +17645,9 @@ s,@USING_WIN32_THREADS_TRUE@,$USING_WIN32_THREADS_TRUE,;t t\n s,@USING_WIN32_THREADS_FALSE@,$USING_WIN32_THREADS_FALSE,;t t\n s,@USING_NO_THREADS_TRUE@,$USING_NO_THREADS_TRUE,;t t\n s,@USING_NO_THREADS_FALSE@,$USING_NO_THREADS_FALSE,;t t\n+s,@USE_LIBGCJ_BC_TRUE@,$USE_LIBGCJ_BC_TRUE,;t t\n+s,@USE_LIBGCJ_BC_FALSE@,$USE_LIBGCJ_BC_FALSE,;t t\n+s,@LIBGCJ_SPEC@,$LIBGCJ_SPEC,;t t\n s,@HASH_SYNC_SPEC@,$HASH_SYNC_SPEC,;t t\n s,@USING_GCC_TRUE@,$USING_GCC_TRUE,;t t\n s,@USING_GCC_FALSE@,$USING_GCC_FALSE,;t t"}, {"sha": "72c67e4c7ab2a8b4604073598bf710ea66f5fe4f", "filename": "libjava/configure.ac", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -881,12 +881,19 @@ AC_SUBST(THREADCXXFLAGS)\n AM_CONDITIONAL(USING_POSIX_THREADS, test \"$THREADS\" = posix)\n AM_CONDITIONAL(USING_WIN32_THREADS, test \"$THREADS\" = win32)\n AM_CONDITIONAL(USING_NO_THREADS, test \"$THREADS\" = none)\n+AM_CONDITIONAL(USE_LIBGCJ_BC, test \"$use_libgcj_bc\" = yes)\n \n if test -d sysdep; then true; else mkdir sysdep; fi\n AC_CONFIG_LINKS(sysdep/locks.h:sysdep/$sysdeps_dir/locks.h)\n AC_CONFIG_LINKS(sysdep/backtrace.h:$fallback_backtrace_h)\n AC_CONFIG_LINKS(sysdep/descriptor.h:$descriptor_h)\n \n+LIBGCJ_SPEC=\"%{s-bc-abi:} -lgcj\"\n+if test \"$use_libgcj_bc\" = yes; then\n+  LIBGCJ_SPEC=\"%{s-bc-abi:-lgcj_bc;:-lgcj}\"\n+fi\n+AC_SUBST(LIBGCJ_SPEC)\n+\n HASH_SYNC_SPEC=\n # Hash synchronization is only useful with posix threads right now.\n if test \"$enable_hash_synchronization\" = yes && test \"$THREADS\" != \"none\"; then"}, {"sha": "b2bdd5355f67ae135cce271d051b782d8600d460", "filename": "libjava/configure.host", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -31,6 +31,8 @@\n #   fallback_backtrace_h  Header to use for fallback backtrace implementation\n #\t\t\t  (only for targets that don't support DWARF2 unwind)\n #   descriptor_h\tHeader to use for looking past function descriptors\n+#   use_libgcj_bc\tWhether to build a \"libgcj-bc\" library for BC-ABI\n+#\t\t\tbinaries to link against.\n \n libgcj_flags=\n libgcj_cflags=\n@@ -317,6 +319,15 @@ case \"${host}\" in\n \t;;\n esac\n \n+case \"${host}\" in\n+  *linux*)\n+    use_libgcj_bc=yes\n+  ;;\n+  *)\n+    use_libgcj_bc=no\n+  ;;\n+esac    \n+\n libgcj_cflags=\"${libgcj_cflags} ${libgcj_flags}\"\n libgcj_cxxflags=\"${libgcj_cxxflags} ${libgcj_flags}\"\n libgcj_javaflags=\"${libgcj_javaflags} ${libgcj_flags}\""}, {"sha": "116620f5073ad2059deedf0e20203fefa926ef9f", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -153,6 +153,7 @@ LIBGCJ_CFLAGS = @LIBGCJ_CFLAGS@\n LIBGCJ_CXXFLAGS = @LIBGCJ_CXXFLAGS@\n LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n+LIBGCJ_SPEC = @LIBGCJ_SPEC@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBOBJS = @LIBOBJS@\n@@ -198,6 +199,8 @@ THREADSPEC = @THREADSPEC@\n THREADSTARTFILESPEC = @THREADSTARTFILESPEC@\n TOOLKIT = @TOOLKIT@\n UNZIP = @UNZIP@\n+USE_LIBGCJ_BC_FALSE = @USE_LIBGCJ_BC_FALSE@\n+USE_LIBGCJ_BC_TRUE = @USE_LIBGCJ_BC_TRUE@\n USING_BOEHMGC_FALSE = @USING_BOEHMGC_FALSE@\n USING_BOEHMGC_TRUE = @USING_BOEHMGC_TRUE@\n USING_DARWIN_CRT_FALSE = @USING_DARWIN_CRT_FALSE@"}, {"sha": "a1018272b7125c3f4867ad7989263d58d7d993f7", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -152,6 +152,7 @@ LIBGCJ_CFLAGS = @LIBGCJ_CFLAGS@\n LIBGCJ_CXXFLAGS = @LIBGCJ_CXXFLAGS@\n LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n+LIBGCJ_SPEC = @LIBGCJ_SPEC@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBOBJS = @LIBOBJS@\n@@ -197,6 +198,8 @@ THREADSPEC = @THREADSPEC@\n THREADSTARTFILESPEC = @THREADSTARTFILESPEC@\n TOOLKIT = @TOOLKIT@\n UNZIP = @UNZIP@\n+USE_LIBGCJ_BC_FALSE = @USE_LIBGCJ_BC_FALSE@\n+USE_LIBGCJ_BC_TRUE = @USE_LIBGCJ_BC_TRUE@\n USING_BOEHMGC_FALSE = @USING_BOEHMGC_FALSE@\n USING_BOEHMGC_TRUE = @USING_BOEHMGC_TRUE@\n USING_DARWIN_CRT_FALSE = @USING_DARWIN_CRT_FALSE@"}, {"sha": "cf24170ec774399011cc9ba15a33138b77111f33", "filename": "libjava/libgcj.spec.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Flibgcj.spec.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Flibgcj.spec.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flibgcj.spec.in?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -7,6 +7,6 @@\n *startfile: @THREADSTARTFILESPEC@ %(startfileorig)\n \n %rename lib liborig\n-*lib: @LD_START_STATIC_SPEC@ -lgcj @LD_FINISH_STATIC_SPEC@ -lm @LIBICONV@ @GCSPEC@ @THREADSPEC@ @ZLIBSPEC@ @SYSTEMSPEC@ %(libgcc) %(liborig)\n+*lib: @LD_START_STATIC_SPEC@ @LIBGCJ_SPEC@ @LD_FINISH_STATIC_SPEC@ -lm @LIBICONV@ @GCSPEC@ @THREADSPEC@ @ZLIBSPEC@ @SYSTEMSPEC@ %(libgcc) %(liborig)\n \n *jc1: @HASH_SYNC_SPEC@ @DIVIDESPEC@ @CHECKREFSPEC@ @JC1GCSPEC@ @EXCEPTIONSPEC@ @BACKTRACESPEC@ @IEEESPEC@ -fkeep-inline-functions"}, {"sha": "66a14682f8cfb2f59422a0e883c101adf4d463e2", "filename": "libjava/libgcj_bc.c", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Flibgcj_bc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Flibgcj_bc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flibgcj_bc.c?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -0,0 +1,94 @@\n+/* libgcj_bc.c  */\n+\n+/* Copyright (C) 2006 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+/* This file is used to build libgcj_bc.so, a 'fake' library that is\n+   used at link time only. It ensures that binaries built with the\n+   BC-ABI link against a constant SONAME. This way, BC-ABI binaries\n+   continue to work if the SONAME underlying libgcj.so changes.  */\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+static void print_wrong_lib_msg ()\n+{\n+  fprintf (stderr, \"libgcj error: \\\n+This is libgcj_bc.so, a fake library used only for linking.\\n\\\n+Please create a symlink from libgcj_bc.so.1 to the real libgcj.so.\\n\");\n+  exit (1);\n+}\n+\n+/* Functions called from code generated by gcj.  */\n+\n+void __gcj_personality_v0 () {}\n+void _Jv_AllocObject () {}\n+void _Jv_AllocObjectNoFinalizer () {}\n+void _Jv_InitClass () {}\n+void _Jv_ResolvePoolEntry () {}\n+void _Jv_Throw () {}\n+void _Jv_MonitorEnter () {}\n+void _Jv_NewPrimArray () {}\n+void _Jv_NewObjectArray () {}\n+void _Jv_NewMultiArray () {}\n+void _Jv_ThrowBadArrayIndex () {}\n+void _Jv_ThrowNullPointerException () {}\n+void _Jv_ThrowAbstractMethodError () {}\n+void _Jv_ThrowNoSuchFieldError () {}\n+void _Jv_CheckCast () {}\n+void _Jv_IsInstanceOf () {}\n+void _Jv_CheckArrayStore () {}\n+void _Jv_LookupInterfaceMethodIdx () {}\n+\n+void _Jv_RegisterClasses () \n+{\n+  print_wrong_lib_msg ();\n+}\n+\n+void _Jv_RegisterNewClasses () \n+{\n+  print_wrong_lib_msg ();\n+}\n+\n+/* Symbols used by jvgenmain (-fmain).  */\n+\n+void JvRunMain () {}\n+const char **_Jv_Compiler_Properties;\n+\n+/* Functions used by -fjni.  */\n+\n+void _Jv_LookupJNIMethod () {}\n+void _Jv_GetJNIEnvNewFrame () {}\n+void _Jv_UnwrapJNIweakReference () {}\n+\n+\n+/* Checked divide (-fuse-divide-subroutine).  */\n+\n+void _Jv_divI () {}\n+void _Jv_remI () {}\n+void _Jv_divJ () {}\n+void _Jv_remJ () {}\n+\n+\n+/* CNI Functions.  */\n+\n+void _Jv_AllocBytes () {}\n+void _Jv_AllocString () {}\n+void _Jv_NewString () {}\n+void _Jv_NewStringLatin1 () {}\n+void _Jv_GetStringChars () {}\n+void _Jv_GetStringUTFLength () {}\n+void _Jv_GetStringUTFRegion () {}\n+void _Jv_NewStringUTF () {}\n+void _Jv_Malloc () {}\n+void _Jv_Realloc () {}\n+void _Jv_Free () {}\n+void _Jv_CreateJavaVM () {}\n+void _Jv_AttachCurrentThread () {}\n+void _Jv_AttachCurrentThreadAsDaemon () {}\n+void _Jv_DetachCurrentThread () {}"}, {"sha": "485b8eaa9a1b3539f128854312ece55188dad1c1", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c074fd44a293120ac300f792994573ba5bd268/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=97c074fd44a293120ac300f792994573ba5bd268", "patch": "@@ -141,6 +141,7 @@ LIBGCJ_CFLAGS = @LIBGCJ_CFLAGS@\n LIBGCJ_CXXFLAGS = @LIBGCJ_CXXFLAGS@\n LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n LIBGCJ_LD_SYMBOLIC = @LIBGCJ_LD_SYMBOLIC@\n+LIBGCJ_SPEC = @LIBGCJ_SPEC@\n LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBOBJS = @LIBOBJS@\n@@ -186,6 +187,8 @@ THREADSPEC = @THREADSPEC@\n THREADSTARTFILESPEC = @THREADSTARTFILESPEC@\n TOOLKIT = @TOOLKIT@\n UNZIP = @UNZIP@\n+USE_LIBGCJ_BC_FALSE = @USE_LIBGCJ_BC_FALSE@\n+USE_LIBGCJ_BC_TRUE = @USE_LIBGCJ_BC_TRUE@\n USING_BOEHMGC_FALSE = @USING_BOEHMGC_FALSE@\n USING_BOEHMGC_TRUE = @USING_BOEHMGC_TRUE@\n USING_DARWIN_CRT_FALSE = @USING_DARWIN_CRT_FALSE@"}]}