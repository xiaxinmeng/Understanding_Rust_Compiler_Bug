{"sha": "0352605f4ae03639dfdeb0c3b5e02c344807075c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM1MjYwNWY0YWUwMzYzOWRmZGViMGMzYjVlMDJjMzQ0ODA3MDc1Yw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-09T12:40:36Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-10T20:33:08Z"}, "message": "Add path probe and impl overlapping updates for TypeAliases\n\nWith the desuagaring of AST::TraitImpl and AST::InherentImpl into a generic\nHIR::ImplBlock we must ensure the existing passes can support TypeAliases\naccordingly.", "tree": {"sha": "530c886b7a862877104248a94b517195af73922a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/530c886b7a862877104248a94b517195af73922a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0352605f4ae03639dfdeb0c3b5e02c344807075c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0352605f4ae03639dfdeb0c3b5e02c344807075c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0352605f4ae03639dfdeb0c3b5e02c344807075c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0352605f4ae03639dfdeb0c3b5e02c344807075c/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "213bc11225fcbb57e2fa6d949917bd2cf44e2477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213bc11225fcbb57e2fa6d949917bd2cf44e2477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213bc11225fcbb57e2fa6d949917bd2cf44e2477"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "08793601e56f17ec48f3ac4393d596bb162d8ad8", "filename": "gcc/rust/typecheck/rust-hir-inherent-impl-overlap.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0352605f4ae03639dfdeb0c3b5e02c344807075c/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0352605f4ae03639dfdeb0c3b5e02c344807075c/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h?ref=0352605f4ae03639dfdeb0c3b5e02c344807075c", "patch": "@@ -37,6 +37,12 @@ class ImplItemToName : public TypeCheckBase\n     return resolver.ok;\n   }\n \n+  void visit (HIR::TypeAlias &alias) override\n+  {\n+    ok = true;\n+    result.assign (alias.get_new_type_name ());\n+  }\n+\n   void visit (HIR::Function &function) override\n   {\n     ok = true;"}, {"sha": "a10a5627bb5962b86d7b4914edaf8c5ee836925c", "filename": "gcc/rust/typecheck/rust-hir-path-probe.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0352605f4ae03639dfdeb0c3b5e02c344807075c/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0352605f4ae03639dfdeb0c3b5e02c344807075c/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h?ref=0352605f4ae03639dfdeb0c3b5e02c344807075c", "patch": "@@ -65,6 +65,21 @@ class PathProbeType : public TypeCheckBase\n     item->accept_vis (*this);\n   }\n \n+  void visit (HIR::TypeAlias &alias) override\n+  {\n+    Identifier name = alias.get_new_type_name ();\n+    if (search.as_string ().compare (name) == 0)\n+      {\n+\tHirId tyid = alias.get_mappings ().get_hirid ();\n+\tTyTy::BaseType *ty = nullptr;\n+\tbool ok = context->lookup_type (tyid, &ty);\n+\trust_assert (ok);\n+\n+\tPathProbeCandidate candidate{&alias, ty};\n+\tcandidates.push_back (std::move (candidate));\n+      }\n+  }\n+\n   void visit (HIR::ConstantItem &constant) override\n   {\n     Identifier name = constant.get_identifier ();\n@@ -122,6 +137,11 @@ class ReportMultipleCandidateError : private TypeCheckBase\n \t\t   query.as_string ().c_str ());\n   }\n \n+  void visit (HIR::TypeAlias &alias) override\n+  {\n+    r.add_range (alias.get_locus ());\n+  }\n+\n   void visit (HIR::ConstantItem &constant) override\n   {\n     r.add_range (constant.get_locus ());"}]}