{"sha": "34a343e634c7b155a8553e45ffabd3f24f0765ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRhMzQzZTYzNGM3YjE1NWE4NTUzZTQ1ZmZhYmQzZjI0ZjA3NjVlYw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-12-13T10:40:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:40:58Z"}, "message": "xeinfo.adb: Remove warnings\n\n2007-12-06  Robert Dewar  <dewar@adacore.com>\n\n\t* xeinfo.adb: Remove warnings\n\t* xnmake.adb: Remove warnings\n\t* xsinfo.adb: Remove warnings\n\t* xtreeprs.adb: Remove warnings\n\t* xsnames.adb: Remove warnings\n\n\t* a-ngcoar.adb: Fix typo.\n\t* s-interr.adb: Minor reformatting\n\t* env.c: Minor reformatting.\n\t* g-bytswa.adb: Minor reformatting.\n\t* g-rannum.ads: Minor documentation improvements\n\t* s-tasinf-mingw.adb: Minor header fix\n\t* a-clrefi.adb: Minor reformatting\n\t* g-sttsne.ads: Minor documentation improvement\n\t* g-sttsne-locking.ads: Minor documentation improvement\n\t* g-soliop-solaris.ads: Minor documentation improvement\n\t* g-soliop-mingw.ads: Minor documentation improvement\n\t* g-soliop.ads: Minor documentation improvement\n\t* exp_aggr.ads: Minor reformatting\n\t* debug.adb: Add documentation for the gprbuild debug flags\n\t* exp_ch2.adb: Use Nkind_In to simplify code throughout\n\t* exp_pakd.adb: Minor reformatting\n\n\t* g-altive.ads, g-alleve.adb: Remove assertions.\n\tAdd comment about minor differences between targets regarding\n\tfloating-point operations.\n\n\t* g-thread.adb: Remove pragma unreferenced.\n\t* lib.ads: Minor reformatting\n\t* par-ch9.adb: Minor reformatting of error messages\n\t* sem_case.adb: Minor reformatting\n\t* s-fileio.adb: Minor reformattinng\n\t* s-vmexta.ads: Minor typo\n\t* vxaddr2line.adb: \n\tTake into account 'Success' value as per new GNAT warning.\n\nFrom-SVN: r130870", "tree": {"sha": "b53100b51497dede67b8a55f080645b76ff2bad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b53100b51497dede67b8a55f080645b76ff2bad0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34a343e634c7b155a8553e45ffabd3f24f0765ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a343e634c7b155a8553e45ffabd3f24f0765ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34a343e634c7b155a8553e45ffabd3f24f0765ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a343e634c7b155a8553e45ffabd3f24f0765ec/comments", "author": null, "committer": null, "parents": [{"sha": "9b998381423870a80e7479c7bdd4cf3ed48324a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b998381423870a80e7479c7bdd4cf3ed48324a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b998381423870a80e7479c7bdd4cf3ed48324a5"}], "stats": {"total": 619, "additions": 341, "deletions": 278}, "files": [{"sha": "07c0d99c40d5257b238e03cba2a71a9e63ebbf6b", "filename": "gcc/ada/a-clrefi.adb", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fa-clrefi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fa-clrefi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-clrefi.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -51,8 +51,7 @@ package body Ada.Command_Line.Response_File is\n    type Argument_List_Access is access Argument_List;\n    procedure Free is new Ada.Unchecked_Deallocation\n      (Argument_List, Argument_List_Access);\n-   --  Free only the allocated Argument_List, not the allocated String\n-   --  components.\n+   --  Free only the allocated Argument_List, not allocated String components\n \n    --------------------\n    -- Arguments_From --\n@@ -76,8 +75,8 @@ package body Ada.Command_Line.Response_File is\n       --  if necessary.\n \n       procedure Recurse (File_Name : String);\n-      --  Get the arguments from the file and call itself recursively if\n-      --  one of the argument starts with character '@'.\n+      --  Get the arguments from the file and call itself recursively if one of\n+      --  the argument starts with character '@'.\n \n       ------------------\n       -- Add_Argument --\n@@ -123,13 +122,13 @@ package body Ada.Command_Line.Response_File is\n          First_Char : Positive;\n          --  Index of the first character of an argument in Line\n \n-         Last_Char  : Natural;\n+         Last_Char : Natural;\n          --  Index of the last character of an argument in Line\n \n          In_String : Boolean;\n          --  True when inside a quoted string\n \n-         Arg  : Positive;\n+         Arg : Positive;\n \n          function End_Of_File return Boolean;\n          --  True when the end of the response file has been reached\n@@ -166,6 +165,7 @@ package body Ada.Command_Line.Response_File is\n \n          procedure Get_Line is\n             Ch : Character;\n+\n          begin\n             Last := 0;\n \n@@ -230,7 +230,6 @@ package body Ada.Command_Line.Response_File is\n          if FD = Invalid_FD then\n             if Ignore_Non_Existing_Files then\n                return;\n-\n             else\n                raise File_Does_Not_Exist;\n             end if;\n@@ -245,9 +244,11 @@ package body Ada.Command_Line.Response_File is\n                  Next => null,\n                  Prev => null);\n             Last_File  := First_File;\n+\n          else\n             declare\n                Current : File_Ptr := First_File;\n+\n             begin\n                loop\n                   if Current.Name.all = File_Name then\n@@ -303,17 +304,20 @@ package body Ada.Command_Line.Response_File is\n \n                Character_Loop :\n                while Last_Char <= Last loop\n+\n                   --  Inside a string, check only for '\"'\n \n                   if In_String then\n                      if Line (Last_Char) = '\"' then\n+\n                         --  Remove the '\"'\n \n                         Line (Last_Char .. Last - 1) :=\n                           Line (Last_Char + 1 .. Last);\n                         Last := Last - 1;\n \n                         --  End of string is end of argument\n+\n                         if Last_Char > Last or else\n                           Line (Last_Char) = ' ' or else\n                           Line (Last_Char) = ASCII.HT\n@@ -339,6 +343,7 @@ package body Ada.Command_Line.Response_File is\n                      end if;\n \n                   elsif Last_Char = Last then\n+\n                      --  An opening '\"' at the end of the line is an error\n \n                      if Line (Last) = '\"' then\n@@ -351,6 +356,7 @@ package body Ada.Command_Line.Response_File is\n                      end if;\n \n                   elsif Line (Last_Char) = '\"' then\n+\n                      --  Entering a quoted string: remove the '\"'\n \n                      In_String := True;\n@@ -359,8 +365,7 @@ package body Ada.Command_Line.Response_File is\n                      Last := Last - 1;\n \n                   else\n-                     --  Outside of quoted strings, white space ends the\n-                     --  argument.\n+                     --  Outside quoted strings, white space ends the argument\n \n                      exit Character_Loop\n                           when Line (Last_Char + 1) = ' ' or else\n@@ -411,8 +416,8 @@ package body Ada.Command_Line.Response_File is\n                      Last_Arg := Last_Arg - 1;\n \n                   else\n-                     --  Save the current arguments and get those in the\n-                     --  new response file.\n+                     --  Save the current arguments and get those in the new\n+                     --  response file.\n \n                      declare\n                         Inc_File_Name     : constant String :=\n@@ -435,6 +440,7 @@ package body Ada.Command_Line.Response_File is\n \n                         begin\n                            --  Grow Arguments if it is not large enough\n+\n                            if Arguments'Last < New_Last_Arg then\n                               Last_Arg := Arguments'Last;\n                               Free (Arguments);\n@@ -504,6 +510,7 @@ package body Ada.Command_Line.Response_File is\n \n    exception\n       when others =>\n+\n          --  When an exception occurs, deallocate everything\n \n          Free (Arguments);"}, {"sha": "47f4db3674b26c7747f86f2324d61fb742836bd7", "filename": "gcc/ada/a-ngcoar.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fa-ngcoar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fa-ngcoar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoar.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--            Copyright (C) 2006-2007, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -748,7 +748,7 @@ package body Ada.Numerics.Generic_Complex_Arrays is\n    begin\n       if Left'Length (2) /= Right'Length (1) then\n          raise Constraint_Error with\n-            \"incompatible dimensions in matrix-matrix multipication\";\n+            \"incompatible dimensions in matrix-matrix multiplication\";\n       end if;\n \n       gemm (Trans_A => No_Trans'Access,"}, {"sha": "b4ab4c6e7da0d6a57edcb44574a7f16f36b57e9a", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -623,14 +623,11 @@ package body Debug is\n    --  dx  Force the binder to read (and then ignore) the xref information\n    --      in ali files (used to check that read circuit is working OK).\n \n-   ------------------------------------------------------------\n-   -- Documentation for the Debug Flags used in package Make --\n-   ------------------------------------------------------------\n-\n-   --  Please note that such flags apply to all of Make clients,\n-   --  such as gnatmake.\n+   --------------------------------------------\n+   -- Documentation for gnatmake Debug Flags --\n+   --------------------------------------------\n \n-   --  dn  Do not delete temporary files creates by Make at the end\n+   --  dn  Do not delete temporary files created by gnatmake at the end\n    --      of execution, such as temporary config pragma files, mapping\n    --      files or project path files.\n \n@@ -650,6 +647,18 @@ package body Debug is\n    --  dw  Prints the list of units withed by the unit currently explored\n    --      during the main loop of Make.Compile_Sources.\n \n+   ---------------------------------------------\n+   -- Documentation for gprbuild Debug Flags  --\n+   ---------------------------------------------\n+\n+   --  dn  Do not delete temporary files createed by gprbuild at the end\n+   --      of execution, such as temporary config pragma files, mapping\n+   --      files or project path files.\n+\n+   --  dt  When a time stamp mismatch has been found for an ALI file,\n+   --      display the source file name, the time stamp expected and\n+   --      the time stamp found.\n+\n    --------------------\n    -- Set_Debug_Flag --\n    --------------------"}, {"sha": "6cbb7057a64f4e6ae7f15983807245ec9f6d62c7", "filename": "gcc/ada/env.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -177,11 +177,12 @@ __gnat_setenv (char *name, char *value)\n \n   sprintf (expression, \"%s=%s\", name, value);\n   putenv (expression);\n-#if (defined (__FreeBSD__) && (__FreeBSD__ < 7)) || defined (__APPLE__) \\\n-   || defined (__MINGW32__) ||(defined (__vxworks) && ! defined (__RTP__))\n-  /* On some systems like pre-7 FreeBSD, MacOS X and Windows, putenv is making\n-     a copy of the expression string so we can free it after the call to\n-     putenv */\n+#if (defined (__FreeBSD__) && (__FreeBSD__ < 7)) \\\n+   || defined (__APPLE__) || defined (__MINGW32__) \\\n+   ||(defined (__vxworks) && ! defined (__RTP__))\n+  /* On some systems like FreeBSD 6.x and earlier, MacOS X and Windows,\n+     putenv is making a copy of the expression string so we can free\n+     it after the call to putenv */\n   free (expression);\n #endif\n #endif"}, {"sha": "8f9f9630a2516dd8db7f2932508580848365b1c1", "filename": "gcc/ada/exp_aggr.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fexp_aggr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fexp_aggr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -40,9 +40,9 @@ package Exp_Aggr is\n    --  This procedure performs in-place aggregate assignment.\n \n    procedure Convert_Aggr_In_Allocator\n-     (Alloc :  Node_Id;\n-      Decl  :  Node_Id;\n-      Aggr  :  Node_Id);\n+     (Alloc : Node_Id;\n+      Decl  : Node_Id;\n+      Aggr  : Node_Id);\n    --  Alloc is the allocator whose expression is the aggregate Aggr.\n    --  Decl is an N_Object_Declaration created during allocator expansion.\n    --  This procedure perform in-place aggregate assignment into the"}, {"sha": "95291d49245b77089b9845aaef494e72bca051d5", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -433,11 +433,10 @@ package body Exp_Ch2 is\n          --  ??? passing a formal as actual for a mode IN formal is\n          --  considered as an assignment?\n \n-         if Nkind (Parent (N)) = N_Procedure_Call_Statement\n-           or else Nkind (Parent (N)) = N_Entry_Call_Statement\n-           or else\n-             (Nkind (Parent (N)) = N_Assignment_Statement\n-                 and then N = Name (Parent (N)))\n+         if Nkind_In (Parent (N), N_Procedure_Call_Statement,\n+                                  N_Entry_Call_Statement)\n+           or else (Nkind (Parent (N)) = N_Assignment_Statement\n+                      and then N = Name (Parent (N)))\n          then\n             return True;\n \n@@ -451,9 +450,9 @@ package body Exp_Ch2 is\n          --  which case there is an implicit dereference, and the formal itself\n          --  is not being assigned to).\n \n-         elsif (Nkind (Parent (N)) = N_Selected_Component\n-                 or else Nkind (Parent (N)) = N_Indexed_Component\n-                 or else Nkind (Parent (N)) = N_Slice)\n+         elsif Nkind_In (Parent (N), N_Selected_Component,\n+                                     N_Indexed_Component,\n+                                     N_Slice)\n            and then N = Prefix (Parent (N))\n            and then not Is_Access_Type (Etype (N))\n            and then In_Assignment_Context (Parent (N))\n@@ -697,7 +696,7 @@ package body Exp_Ch2 is\n    begin\n       --  Simple reference case\n \n-      if Nkind (N) = N_Identifier or else Nkind (N) = N_Expanded_Name then\n+      if Nkind_In (N, N_Identifier, N_Expanded_Name) then\n          if Is_Formal (Entity (N)) then\n             return Entity (N);\n "}, {"sha": "9a753def1469a55ff24cfa99768d22a4eab0eaba", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 36, "deletions": 33, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -635,8 +635,8 @@ package body Exp_Pakd is\n                       Attribute_Name => Name_Pos,\n                       Expressions    => New_List (\n                         Make_Attribute_Reference (Loc,\n-                        Prefix         => New_Occurrence_Of (Styp, Loc),\n-                        Attribute_Name => Name_First)))));\n+                          Prefix         => New_Occurrence_Of (Styp, Loc),\n+                          Attribute_Name => Name_First)))));\n          end if;\n \n          Set_Paren_Count (Newsub, 1);\n@@ -960,23 +960,23 @@ package body Exp_Pakd is\n                                Make_Range (Loc,\n                                  Low_Bound =>\n                                    Make_Attribute_Reference (Loc,\n-                                     Prefix =>\n+                                     Prefix         =>\n                                        New_Occurrence_Of (Indx_Typ, Loc),\n                                      Attribute_Name => Name_Pos,\n-                                     Expressions => New_List (\n+                                     Expressions    => New_List (\n                                        Make_Attribute_Reference (Loc,\n-                                         Prefix =>\n+                                         Prefix         =>\n                                            New_Occurrence_Of (Indx_Typ, Loc),\n                                          Attribute_Name => Name_First))),\n \n                                  High_Bound =>\n                                    Make_Attribute_Reference (Loc,\n-                                     Prefix =>\n+                                     Prefix         =>\n                                        New_Occurrence_Of (Indx_Typ, Loc),\n                                      Attribute_Name => Name_Pos,\n-                                     Expressions => New_List (\n+                                     Expressions    => New_List (\n                                        Make_Attribute_Reference (Loc,\n-                                         Prefix =>\n+                                         Prefix         =>\n                                            New_Occurrence_Of (Indx_Typ, Loc),\n                                          Attribute_Name => Name_Last)))))));\n \n@@ -1622,8 +1622,8 @@ package body Exp_Pakd is\n                   Name => New_Occurrence_Of (Set_nn, Loc),\n                   Parameter_Associations => New_List (\n                     Make_Attribute_Reference (Loc,\n-                      Attribute_Name => Name_Address,\n-                      Prefix         => Obj),\n+                      Prefix         => Obj,\n+                      Attribute_Name => Name_Address),\n                     Subscr,\n                     Unchecked_Convert_To (Bits_nn,\n                       Convert_To (Ctyp, Rhs)))));\n@@ -1881,36 +1881,38 @@ package body Exp_Pakd is\n                   Parameter_Associations => New_List (\n \n                     Make_Byte_Aligned_Attribute_Reference (Loc,\n-                      Attribute_Name => Name_Address,\n-                      Prefix         => L),\n+                      Prefix         => L,\n+                      Attribute_Name => Name_Address),\n \n                     Make_Op_Multiply (Loc,\n                       Left_Opnd =>\n                         Make_Attribute_Reference (Loc,\n-                          Prefix =>\n+                          Prefix         =>\n                             New_Occurrence_Of\n                               (Etype (First_Index (Ltyp)), Loc),\n                           Attribute_Name => Name_Range_Length),\n+\n                       Right_Opnd =>\n                         Make_Integer_Literal (Loc, Component_Size (Ltyp))),\n \n                     Make_Byte_Aligned_Attribute_Reference (Loc,\n-                      Attribute_Name => Name_Address,\n-                      Prefix         => R),\n+                      Prefix         => R,\n+                      Attribute_Name => Name_Address),\n \n                     Make_Op_Multiply (Loc,\n                       Left_Opnd =>\n                         Make_Attribute_Reference (Loc,\n-                          Prefix =>\n+                          Prefix         =>\n                             New_Occurrence_Of\n                               (Etype (First_Index (Rtyp)), Loc),\n                           Attribute_Name => Name_Range_Length),\n+\n                       Right_Opnd =>\n                         Make_Integer_Literal (Loc, Component_Size (Rtyp))),\n \n                     Make_Byte_Aligned_Attribute_Reference (Loc,\n-                      Attribute_Name => Name_Address,\n-                      Prefix => New_Occurrence_Of (Result_Ent, Loc))))));\n+                      Prefix => New_Occurrence_Of (Result_Ent, Loc),\n+                      Attribute_Name => Name_Address)))));\n \n             Rewrite (N,\n               New_Occurrence_Of (Result_Ent, Loc));\n@@ -2032,8 +2034,8 @@ package body Exp_Pakd is\n                   Name => New_Occurrence_Of (Get_nn, Loc),\n                   Parameter_Associations => New_List (\n                     Make_Attribute_Reference (Loc,\n-                      Attribute_Name => Name_Address,\n-                      Prefix         => Obj),\n+                      Prefix         => Obj,\n+                      Attribute_Name => Name_Address),\n                     Subscr))));\n          end;\n       end if;\n@@ -2074,17 +2076,17 @@ package body Exp_Pakd is\n         Make_Op_Multiply (Loc,\n           Left_Opnd =>\n             Make_Attribute_Reference (Loc,\n-              Attribute_Name => Name_Length,\n-              Prefix         => New_Occurrence_Of (Ltyp, Loc)),\n+              Prefix         => New_Occurrence_Of (Ltyp, Loc),\n+              Attribute_Name => Name_Length),\n           Right_Opnd =>\n             Make_Integer_Literal (Loc, Component_Size (Ltyp)));\n \n       RLexpr :=\n         Make_Op_Multiply (Loc,\n           Left_Opnd =>\n             Make_Attribute_Reference (Loc,\n-              Attribute_Name => Name_Length,\n-              Prefix         => New_Occurrence_Of (Rtyp, Loc)),\n+              Prefix         => New_Occurrence_Of (Rtyp, Loc),\n+              Attribute_Name => Name_Length),\n           Right_Opnd =>\n             Make_Integer_Literal (Loc, Component_Size (Rtyp)));\n \n@@ -2125,14 +2127,14 @@ package body Exp_Pakd is\n              Name => New_Occurrence_Of (RTE (RE_Bit_Eq), Loc),\n              Parameter_Associations => New_List (\n                Make_Byte_Aligned_Attribute_Reference (Loc,\n-                 Attribute_Name => Name_Address,\n-                 Prefix         => L),\n+                 Prefix         => L,\n+                 Attribute_Name => Name_Address),\n \n                LLexpr,\n \n                Make_Byte_Aligned_Attribute_Reference (Loc,\n-                 Attribute_Name => Name_Address,\n-                 Prefix         => R),\n+                 Prefix         => R,\n+                 Attribute_Name => Name_Address),\n \n                RLexpr)));\n       end if;\n@@ -2244,22 +2246,23 @@ package body Exp_Pakd is\n                   Parameter_Associations => New_List (\n \n                     Make_Byte_Aligned_Attribute_Reference (Loc,\n-                      Attribute_Name => Name_Address,\n-                      Prefix         => Opnd),\n+                      Prefix         => Opnd,\n+                      Attribute_Name => Name_Address),\n \n                     Make_Op_Multiply (Loc,\n                       Left_Opnd =>\n                         Make_Attribute_Reference (Loc,\n-                          Prefix =>\n+                          Prefix         =>\n                             New_Occurrence_Of\n                               (Etype (First_Index (Rtyp)), Loc),\n                           Attribute_Name => Name_Range_Length),\n+\n                       Right_Opnd =>\n                         Make_Integer_Literal (Loc, Component_Size (Rtyp))),\n \n                     Make_Byte_Aligned_Attribute_Reference (Loc,\n-                      Attribute_Name => Name_Address,\n-                      Prefix => New_Occurrence_Of (Result_Ent, Loc))))));\n+                      Prefix => New_Occurrence_Of (Result_Ent, Loc),\n+                      Attribute_Name => Name_Address)))));\n \n             Rewrite (N,\n               New_Occurrence_Of (Result_Ent, Loc));"}, {"sha": "329106f8ece5206e063e1008709099e8a1589281", "filename": "gcc/ada/g-alleve.adb", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-alleve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-alleve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alleve.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                         (Soft Binding Version)                           --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,17 +49,6 @@ with GNAT.Altivec.Low_Level_Interface; use  GNAT.Altivec.Low_Level_Interface;\n \n package body GNAT.Altivec.Low_Level_Vectors is\n \n-   --  This package assumes C_float is an IEEE single-precision float type\n-\n-   pragma Assert (C_float'Machine_Radix = 2);\n-   pragma Assert (C_float'Machine_Mantissa = 24);\n-   pragma Assert (C_float'Machine_Emin = -125);\n-   pragma Assert (C_float'Machine_Emax = 128);\n-   pragma Assert (C_float'Machine_Rounds);\n-   pragma Assert (not C_float'Machine_Overflows);\n-   pragma Assert (C_float'Signed_Zeros);\n-   pragma Assert (C_float'Denorm);\n-\n    --  Pixel types. As defined in [PIM-2.1 Data types]:\n    --  A 16-bit pixel is 1/5/5/5;\n    --  A 32-bit pixel is 8/8/8/8."}, {"sha": "5951358fada2053c3687df54d8d41385c917f942", "filename": "gcc/ada/g-altive.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-altive.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-altive.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-altive.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -341,6 +341,14 @@ package GNAT.Altivec is\n \n    type C_float is digits FLOAT_DIGIT range FLOAT_MIN .. FLOAT_MAX;\n    for C_float'Size use FLOAT_BIT;\n+   --  Altivec operations always use the standard native floating-point\n+   --  support of the target. Note that this means that there may be\n+   --  minor differences in results between targets when the floating-\n+   --  point implementations are slightly different, as would happen\n+   --  with normal non-altivec floating-point operations. In particular\n+   --  the Altivec simulations may yield slightly different results\n+   --  from those obtained on a true hardware Altivec target if the\n+   --  floating-point implementation is not 100% compatible.\n \n    ----------------------\n    -- pixel components --"}, {"sha": "36eb12dcfef12d2074bbeed17833347c1611f5d1", "filename": "gcc/ada/g-bytswa.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-bytswa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-bytswa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-bytswa.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2006-2007, AdaCore                     --     --\n+--                     Copyright (C) 2006-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "cf34cee55bb4fdee12407e81636700d40f77ad18", "filename": "gcc/ada/g-rannum.ads", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-rannum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-rannum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-rannum.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -33,22 +33,21 @@\n \n --  Extended pseudo-random number generation\n \n---  This package provides a type representing pseudo-random number\n---  generators, and subprograms to extract various distributions of numbers\n---  from them. It also provides types for representing initialization values\n---  and snapshots of internal generator state, which permit reproducible\n---  pseudo-random streams.\n+--  This package provides a type representing pseudo-random number generators,\n+--  and subprograms to extract various distributions of numbers from them. It\n+--  also provides types for representing initialization values and snapshots of\n+--  internal generator state, which permit reproducible pseudo-random streams.\n \n --  The generator currently provided by this package has an extremely long\n---  period (at least 2**19937-1), and passes the Big Crush test suite, with\n---  the exception of the two linear complexity tests. Therefore, it is\n---  suitable for simulations, but should not be used as a cryptographic\n---  pseudo-random source without additional processing.\n-\n---  The design of this package effects some simplification from that of\n---  the standard Ada.Numerics packages. There is no separate State type;\n---  the Generator type itself suffices for this purpose. The parameter\n---  modes on Reset procedures better reflect the effect of these routines.\n+--  period (at least 2**19937-1), and passes the Big Crush test suite, with the\n+--  exception of the two linear complexity tests. Therefore, it is suitable for\n+--  simulations, but should not be used as a cryptographic pseudo-random source\n+--  without additional processing.\n+\n+--  The design of this package effects is simplified compared to the design\n+--  of standard Ada.Numerics packages. There is no separate State type; the\n+--  Generator type itself suffices for this purpose. The parameter modes on\n+--  Reset procedures better reflect the effect of these routines.\n \n with System.Random_Numbers;\n with Interfaces; use Interfaces;"}, {"sha": "01007ccd29180931193edff21f5823d2653ce256", "filename": "gcc/ada/g-soliop-mingw.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-soliop-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-soliop-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soliop-mingw.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2006, AdaCore                     --\n+--                     Copyright (C) 2001-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,8 @@\n \n --  This is the Windows/NT version of this package\n \n+--  This package should not be directly with'ed by an application program\n+\n package GNAT.Sockets.Linker_Options is\n private\n    pragma Linker_Options (\"-lws2_32\");"}, {"sha": "e4774c0b8f599b337b8766725fddd290140c4291", "filename": "gcc/ada/g-soliop-solaris.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-soliop-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-soliop-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soliop-solaris.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,8 @@\n \n --  This is the Solaris version of this package\n \n+--  This package should not be directly with'ed by an application program\n+\n package GNAT.Sockets.Linker_Options is\n private\n    pragma Linker_Options (\"-lnsl\");"}, {"sha": "604542f54bfacb6051103fe4cea79e7091f3f57f", "filename": "gcc/ada/g-soliop.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-soliop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-soliop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soliop.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,5 +38,7 @@\n --  are required. On some targets a target specific version of this unit\n --  ensures linking with required libraries for proper sockets operation.\n \n+--  This package should not be directly with'ed by an application program\n+\n package GNAT.Sockets.Linker_Options is\n end GNAT.Sockets.Linker_Options;"}, {"sha": "0032d8066a1031f8aeb72f20588c6e35e12ad225", "filename": "gcc/ada/g-sttsne-locking.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-sttsne-locking.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-sttsne-locking.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sttsne-locking.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -34,6 +34,8 @@\n --  This version is used on VMS, LynxOS, and VxWorks. There are two versions of\n --  the body: one for VMS and LynxOS, the other for VxWorks.\n \n+--  This package should not be directly with'ed by an application\n+\n package GNAT.Sockets.Thin.Task_Safe_NetDB is\n \n    ----------------------------------------"}, {"sha": "f438a0aea47166921ed174994ab49c97b464d577", "filename": "gcc/ada/g-sttsne.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-sttsne.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-sttsne.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sttsne.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -36,6 +36,8 @@\n --  from C; see gsocket.h for details. Different versions are provided on\n --  platforms where this functionality is implemented in Ada.\n \n+--  This package should not be directly with'ed by an application\n+\n package GNAT.Sockets.Thin.Task_Safe_NetDB is\n \n    ----------------------------------------"}, {"sha": "94719ce9bd7944b06983d0b616b1d8df83e735db", "filename": "gcc/ada/g-thread.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-thread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fg-thread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-thread.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -68,7 +68,6 @@ package body GNAT.Threads is\n       Parm : Void_Ptr;\n       Code : Code_Proc)\n    is\n-      pragma Unreferenced (Parm);\n       pragma Priority (Prio);\n       pragma Storage_Size (Stsz);\n    end Thread;"}, {"sha": "746b2c87c7eda5e51784bc44e8d7770e44816894", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -208,10 +208,10 @@ package Lib is\n    -- Special Handling of Subprogram Bodies --\n    -------------------------------------------\n \n-   --  A subprogram body (in an adb file) may stand for both a spec and a\n-   --  body. A simple model (and one that was adopted through version 2.07),\n-   --  is simply to assume that such an adb file acts as its own spec if no\n-   --  ads file is present.\n+   --  A subprogram body (in an adb file) may stand for both a spec and a body.\n+   --  A simple model (and one that was adopted through version 2.07) is simply\n+   --  to assume that such an adb file acts as its own spec if no ads file is\n+   --  is present.\n \n    --  However, this is not correct. RM 10.1.4(4) requires that such a body\n    --  act as a spec unless a subprogram declaration of the same name is"}, {"sha": "453b9ab69f8c15134986083baeb8cfb1558118b7", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -610,7 +610,7 @@ package body Ch9 is\n \n          if (Is_Overriding or else Not_Overriding) then\n             if Ada_Version < Ada_05 then\n-               Error_Msg_SP (\" overriding indicator is an Ada 2005 extension\");\n+               Error_Msg_SP (\"overriding indicator is an Ada 2005 extension\");\n                Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n \n             elsif Token = Tok_Entry then\n@@ -786,7 +786,7 @@ package body Ch9 is\n \n       if (Is_Overriding or else Not_Overriding) then\n          if Ada_Version < Ada_05 then\n-            Error_Msg_SP (\" overriding indicator is an Ada 2005 extension\");\n+            Error_Msg_SP (\"overriding indicator is an Ada 2005 extension\");\n             Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n \n          elsif Token /= Tok_Entry then"}, {"sha": "a56877e2ad63826481ee2ee9ebc1d429c1459f5d", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -1080,7 +1080,7 @@ package body System.File_IO is\n       if File.Shared_Status = Yes\n         or else File.Name'Length <= 1\n         or else File.Is_System_File\n-        or else (not File.Is_Regular_File)\n+        or else not File.Is_Regular_File\n       then\n          raise Use_Error;\n "}, {"sha": "6f112826c4a66df49dead93d3699597d53548320", "filename": "gcc/ada/s-interr.adb", "status": "modified", "additions": 31, "deletions": 32, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -140,9 +140,8 @@ package body System.Interrupts is\n    -- Local Tasks --\n    -----------------\n \n-   --  WARNING: System.Tasking.Stages performs calls to this task\n-   --  with low-level constructs. Do not change this spec without synchro-\n-   --  nizing it.\n+   --  WARNING: System.Tasking.Stages performs calls to this task with\n+   --  low-level constructs. Do not change this spec without synchronizing it.\n \n    task Interrupt_Manager is\n       entry Detach_Interrupt_Entries (T : Task_Id);\n@@ -183,10 +182,10 @@ package body System.Interrupts is\n \n    task type Server_Task (Interrupt : Interrupt_ID) is\n       pragma Priority (System.Interrupt_Priority'Last);\n-      --  Note: the above pragma Priority is strictly speaking improper\n-      --  since it is outside the range of allowed priorities, but the\n-      --  compiler treats system units specially and does not apply\n-      --  this range checking rule to system units.\n+      --  Note: the above pragma Priority is strictly speaking improper since\n+      --  it is outside the range of allowed priorities, but the compiler\n+      --  treats system units specially and does not apply this range checking\n+      --  rule to system units.\n \n    end Server_Task;\n \n@@ -210,9 +209,9 @@ package body System.Interrupts is\n                     (others => (null, Static => False));\n    pragma Volatile_Components (User_Handler);\n    --  Holds the protected procedure handler (if any) and its Static\n-   --  information  for each interrupt. A handler is a Static one if\n-   --  it is specified through the pragma Attach_Handler.\n-   --  Attach_Handler. Otherwise, not static)\n+   --  information for each interrupt. A handler is a Static one if it is\n+   --  specified through the pragma Attach_Handler. Attach_Handler. Otherwise,\n+   --  not static)\n \n    User_Entry : array (Interrupt_ID'Range) of Entry_Assoc :=\n                   (others => (T => Null_Task, E => Null_Task_Entry));\n@@ -230,16 +229,16 @@ package body System.Interrupts is\n    Last_Unblocker :\n      array (Interrupt_ID'Range) of Task_Id := (others => Null_Task);\n    pragma Atomic_Components (Last_Unblocker);\n-   --  Holds the ID of the last Task which Unblocked this Interrupt.\n-   --  It contains Null_Task if no tasks have ever requested the\n-   --  Unblocking operation or the Interrupt is currently Blocked.\n+   --  Holds the ID of the last Task which Unblocked this Interrupt. It\n+   --  contains Null_Task if no tasks have ever requested the Unblocking\n+   --  operation or the Interrupt is currently Blocked.\n \n    Server_ID : array (Interrupt_ID'Range) of Task_Id :=\n                  (others => Null_Task);\n    pragma Atomic_Components (Server_ID);\n-   --  Holds the Task_Id of the Server_Task for each interrupt.\n-   --  Task_Id is needed to accomplish locking per Interrupt base. Also\n-   --  is needed to decide whether to create a new Server_Task.\n+   --  Holds the Task_Id of the Server_Task for each interrupt. Task_Id is\n+   --  needed to accomplish locking per Interrupt base. Also is needed to\n+   --  decide whether to create a new Server_Task.\n \n    --  Type and Head, Tail of the list containing Registered Interrupt\n    --  Handlers. These definitions are used to register the handlers\n@@ -264,20 +263,20 @@ package body System.Interrupts is\n    -----------------------\n \n    function Is_Registered (Handler : Parameterless_Handler) return Boolean;\n-   --  See if the Handler has been \"pragma\"ed using Interrupt_Handler.\n-   --  Always consider a null handler as registered.\n+   --  See if the Handler has been \"pragma\"ed using Interrupt_Handler. Always\n+   --  consider a null handler as registered.\n \n    --------------------\n    -- Attach_Handler --\n    --------------------\n \n-   --  Calling this procedure with New_Handler = null and Static = True\n-   --  means we want to detach the current handler regardless of the\n-   --  previous handler's binding status (ie. do not care if it is a\n-   --  dynamic or static handler).\n+   --  Calling this procedure with New_Handler = null and Static = True means\n+   --  we want to detach the current handler regardless of the previous\n+   --  handler's binding status (ie. do not care if it is a dynamic or static\n+   --  handler).\n \n-   --  This option is needed so that during the finalization of a PO, we\n-   --  can detach handlers attached through pragma Attach_Handler.\n+   --  This option is needed so that during the finalization of a PO, we can\n+   --  detach handlers attached through pragma Attach_Handler.\n \n    procedure Attach_Handler\n      (New_Handler : Parameterless_Handler;\n@@ -298,8 +297,8 @@ package body System.Interrupts is\n    -- Bind_Interrupt_To_Entry --\n    -----------------------------\n \n-   --  This procedure raises a Program_Error if it tries to bind an\n-   --  interrupt to which an Entry or a Procedure is already bound.\n+   --  This procedure raises a Program_Error if it tries to bind an interrupt\n+   --  to which an Entry or a Procedure is already bound.\n \n    procedure Bind_Interrupt_To_Entry\n      (T       : Task_Id;\n@@ -389,13 +388,13 @@ package body System.Interrupts is\n    -- Exchange_Handler --\n    ----------------------\n \n-   --  Calling this procedure with New_Handler = null and Static = True\n-   --  means we want to detach the current handler regardless of the\n-   --  previous handler's binding status (ie. do not care if it is a\n-   --  dynamic or static handler).\n+   --  Calling this procedure with New_Handler = null and Static = True means\n+   --  we want to detach the current handler regardless of the previous\n+   --  handler's binding status (ie. do not care if it is a dynamic or static\n+   --  handler).\n \n-   --  This option is needed so that during the finalization of a PO,\n-   --  we can detach handlers attached through pragma Attach_Handler.\n+   --  This option is needed so that during the finalization of a PO, we can\n+   --  detach handlers attached through pragma Attach_Handler.\n \n    procedure Exchange_Handler\n      (Old_Handler : out Parameterless_Handler;"}, {"sha": "c992da54991347dec113a0df26ce61aece1b85d4", "filename": "gcc/ada/s-tasinf-mingw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fs-tasinf-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fs-tasinf-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-mingw.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -4,7 +4,7 @@\n --                                                                          --\n --                     S Y S T E M . T A S K _ I N F O                      --\n --                                                                          --\n---                                 S p e c                                  --\n+--                                 B o d y                                  --\n --                                                                          --\n --            Copyright (C) 2007, Free Software Foundation, Inc.            --\n --                                                                          --"}, {"sha": "82b12b3440a273182227ba4e90737dd09b9dc13a", "filename": "gcc/ada/s-vmexta.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fs-vmexta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fs-vmexta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vmexta.ads?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1997-2004 Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,7 +46,7 @@ package System.VMS_Exception_Table is\n    --  Register an exception in the hash table mapping with a VMS\n    --  condition code.\n \n-   --  LOTS more comments needed here regarding the enire scheme ???\n+   --  LOTS more comments needed here regarding the entire scheme ???\n \n private\n "}, {"sha": "3f27a4f1e7bccd662c2a79cc00cff84eda37c4c1", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -756,7 +756,6 @@ package body Sem_Case is\n \n             else\n                Choice := First (Get_Choices (Alt));\n-\n                while Present (Choice) loop\n                   Analyze (Choice);\n                   Kind := Nkind (Choice);"}, {"sha": "b64e364ff011a101c9db8bb64b787fa01efee091", "filename": "gcc/ada/vxaddr2line.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fvxaddr2line.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fvxaddr2line.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvxaddr2line.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -458,6 +458,10 @@ begin\n    Spawn (Addr2line_Cmd.all,\n           Addr2line_Args (1 .. Addr2line_Args_Count), Success);\n \n+   if not Success then\n+      Error (\"Couldn't spawn \" & Addr2line_Cmd.all);\n+   end if;\n+\n exception\n    when others =>\n "}, {"sha": "120bf397b22d55efdf1da9b8c3a4d9dc38d8a6a2", "filename": "gcc/ada/xeinfo.adb", "status": "modified", "additions": 44, "deletions": 35, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxeinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxeinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxeinfo.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -63,6 +63,9 @@ procedure XEinfo is\n \n    Err : exception;\n \n+   pragma Warnings (Off);\n+   --  These seem not to be referenced, but they are (by * operator)\n+\n    A         : VString := Nul;\n    B         : VString := Nul;\n    C         : VString := Nul;\n@@ -85,6 +88,8 @@ procedure XEinfo is\n    Rtn       : VString := Nul;\n    Term      : VString := Nul;\n \n+   pragma Warnings (On);\n+\n    InB : File_Type;\n    --  Used to read initial header from body\n \n@@ -94,41 +99,45 @@ procedure XEinfo is\n    Ofile : File_Type;\n    --  Used to write output file\n \n-   wsp      : Pattern := NSpan (' ' & ASCII.HT);\n-   Comment  : Pattern := wsp & \"--\";\n-   For_Rep  : Pattern := wsp & \"for\";\n-   Get_Func : Pattern := wsp * A & \"function\" & wsp & Break (' ') * Name;\n-   Inline   : Pattern := wsp & \"pragma Inline (\" & Break (')') * Name;\n-   Get_Pack : Pattern := wsp & \"package \";\n-   Get_Enam : Pattern := wsp & Break (',') * N & ',';\n-   Find_Fun : Pattern := wsp & \"function\";\n-   F_Subtyp : Pattern := wsp * A & \"subtype \" & Break (' ') * N;\n-   G_Subtyp : Pattern := wsp & \"subtype\" & wsp & Break (' ') * NewS\n-                           & wsp & \"is\" & wsp & Break (\" ;\") * OldS\n-                           & wsp & ';' & wsp & Rtab (0);\n-   F_Typ    : Pattern := wsp * A & \"type \" & Break (' ') * N & \" is (\";\n-   Get_Nam  : Pattern := wsp * A & Break (\",)\") * Nam & Len (1) * Term;\n-   Get_Styp : Pattern := wsp * A & \"subtype \" & Break (' ') * N;\n-   Get_N1   : Pattern := wsp & Break (' ') * N1;\n-   Get_N2   : Pattern := wsp & \"-- \" & Rest * N2;\n-   Get_N3   : Pattern := wsp & Break (';') * N3;\n-   Get_FN   : Pattern := wsp * C & \"function\" & wsp & Break (\" (\") * FN;\n-   Is_Rturn : Pattern := BreakX ('r') & \"return\";\n-   Is_Begin : Pattern := wsp & \"begin\";\n-   Get_Asrt : Pattern := wsp & \"pragma Assert\";\n-   Semicoln : Pattern := BreakX (';');\n-   Get_Cmnt : Pattern := BreakX ('-') * A & \"--\";\n-   Get_Expr : Pattern := wsp & \"return \" & Break (';') * Expr;\n-   Chek_End : Pattern := wsp & \"end\" & BreakX (';') & ';';\n-   Get_B1   : Pattern := BreakX (' ') * A & \" in \" & Rest * B;\n-   Get_B2   : Pattern := BreakX (' ') * A & \" = \" & Rest * B;\n-   Get_B3   : Pattern := BreakX (' ') * A & \" /= \" & Rest * B;\n-   To_Paren : Pattern := wsp * Filler & '(';\n-   Get_Fml  : Pattern := Break (\" :\") * Formal & wsp & ':' & wsp\n-                           & BreakX (\" );\") * Formaltyp;\n-   Nxt_Fml  : Pattern := wsp & \"; \";\n-   Get_Rtn  : Pattern := wsp & \"return\" & wsp & BreakX (\" ;\") * Rtn;\n-   Rem_Prn  : Pattern := wsp & ')';\n+   wsp      : constant Pattern := NSpan (' ' & ASCII.HT);\n+   Comment  : constant Pattern := wsp & \"--\";\n+   For_Rep  : constant Pattern := wsp & \"for\";\n+   Get_Func : constant Pattern := wsp * A & \"function\" & wsp\n+                                  & Break (' ') * Name;\n+   Inline   : constant Pattern := wsp & \"pragma Inline (\" & Break (')') * Name;\n+   Get_Pack : constant Pattern := wsp & \"package \";\n+   Get_Enam : constant Pattern := wsp & Break (',') * N & ',';\n+   Find_Fun : constant Pattern := wsp & \"function\";\n+   F_Subtyp : constant Pattern := wsp * A & \"subtype \" & Break (' ') * N;\n+   G_Subtyp : constant Pattern := wsp & \"subtype\" & wsp & Break (' ') * NewS\n+                                  & wsp & \"is\" & wsp & Break (\" ;\") * OldS\n+                                  & wsp & ';' & wsp & Rtab (0);\n+   F_Typ    : constant Pattern := wsp * A & \"type \" & Break (' ') * N &\n+                                  \" is (\";\n+   Get_Nam  : constant Pattern := wsp * A & Break (\",)\") * Nam\n+                                  & Len (1) * Term;\n+   Get_Styp : constant Pattern := wsp * A & \"subtype \" & Break (' ') * N;\n+   Get_N1   : constant Pattern := wsp & Break (' ') * N1;\n+   Get_N2   : constant Pattern := wsp & \"-- \" & Rest * N2;\n+   Get_N3   : constant Pattern := wsp & Break (';') * N3;\n+   Get_FN   : constant Pattern := wsp * C & \"function\" & wsp\n+                                  & Break (\" (\") * FN;\n+   Is_Rturn : constant Pattern := BreakX ('r') & \"return\";\n+   Is_Begin : constant Pattern := wsp & \"begin\";\n+   Get_Asrt : constant Pattern := wsp & \"pragma Assert\";\n+   Semicoln : constant Pattern := BreakX (';');\n+   Get_Cmnt : constant Pattern := BreakX ('-') * A & \"--\";\n+   Get_Expr : constant Pattern := wsp & \"return \" & Break (';') * Expr;\n+   Chek_End : constant Pattern := wsp & \"end\" & BreakX (';') & ';';\n+   Get_B1   : constant Pattern := BreakX (' ') * A & \" in \" & Rest * B;\n+   Get_B2   : constant Pattern := BreakX (' ') * A & \" = \" & Rest * B;\n+   Get_B3   : constant Pattern := BreakX (' ') * A & \" /= \" & Rest * B;\n+   To_Paren : constant Pattern := wsp * Filler & '(';\n+   Get_Fml  : constant Pattern := Break (\" :\") * Formal & wsp & ':' & wsp\n+                                  & BreakX (\" );\") * Formaltyp;\n+   Nxt_Fml  : constant Pattern := wsp & \"; \";\n+   Get_Rtn  : constant Pattern := wsp & \"return\" & wsp & BreakX (\" ;\") * Rtn;\n+   Rem_Prn  : constant Pattern := wsp & ')';\n \n    M : Match_Result;\n "}, {"sha": "3b3ed830b3a0b2e499699674d57dbbe2406dad08", "filename": "gcc/ada/xnmake.adb", "status": "modified", "additions": 41, "deletions": 32, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxnmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxnmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxnmake.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -63,18 +63,21 @@ procedure XNmake is\n    Err : exception;\n    --  Raised to terminate execution\n \n-   A          : VString := Nul;\n-   Arg        : VString := Nul;\n-   Arg_List   : VString := Nul;\n-   Comment    : VString := Nul;\n-   Default    : VString := Nul;\n-   Field      : VString := Nul;\n-   Line       : VString := Nul;\n-   Node       : VString := Nul;\n-   Op_Name    : VString := Nul;\n-   Prevl      : VString := Nul;\n-   Synonym    : VString := Nul;\n-   X          : VString := Nul;\n+   pragma Warnings (Off);\n+   --  The following are modified by * operator\n+\n+   A        : VString := Nul;\n+   Arg      : VString := Nul;\n+   Arg_List : VString := Nul;\n+   Comment  : VString := Nul;\n+   Default  : VString := Nul;\n+   Field    : VString := Nul;\n+   Line     : VString := Nul;\n+   Node     : VString := Nul;\n+   Op_Name  : VString := Nul;\n+   Prevl    : VString := Nul;\n+   Synonym  : VString := Nul;\n+   X        : VString := Nul;\n \n    NWidth : Natural;\n \n@@ -90,37 +93,43 @@ procedure XNmake is\n    InS,  InT  : Ada.Text_IO.File_Type;\n    OutS, OutB : Sfile;\n \n-   wsp : Pattern := Span (' ' & ASCII.HT);\n+   wsp : constant Pattern := Span (' ' & ASCII.HT);\n \n-   Body_Only : Pattern := BreakX (' ') * X & Span (' ') & \"--  body only\";\n-   Spec_Only : Pattern := BreakX (' ') * X & Span (' ') & \"--  spec only\";\n+   Body_Only : constant Pattern := BreakX (' ') * X\n+                                   & Span (' ') & \"--  body only\";\n+   Spec_Only : constant Pattern := BreakX (' ') * X\n+                                   & Span (' ') & \"--  spec only\";\n \n-   Node_Hdr  : Pattern := wsp & \"--  N_\" & Rest * Node;\n-   Punc      : Pattern := BreakX (\" .,\");\n+   Node_Hdr  : constant Pattern := wsp & \"--  N_\" & Rest * Node;\n+   Punc      : constant Pattern := BreakX (\" .,\");\n \n-   Binop     : Pattern := wsp & \"--  plus fields for binary operator\";\n-   Unop      : Pattern := wsp & \"--  plus fields for unary operator\";\n-   Syn       : Pattern := wsp & \"--  \" & Break (' ') * Synonym\n-                            & \" (\" & Break (')') * Field & Rest * Comment;\n+   Binop     : constant Pattern := wsp\n+                                   & \"--  plus fields for binary operator\";\n+   Unop      : constant Pattern := wsp\n+                                   & \"--  plus fields for unary operator\";\n+   Syn       : constant Pattern := wsp & \"--  \" & Break (' ') * Synonym\n+                                   & \" (\" & Break (')') * Field\n+                                   & Rest * Comment;\n \n-   Templ     : Pattern := BreakX ('T') * A & \"T e m p l a t e\";\n-   Spec      : Pattern := BreakX ('S') * A & \"S p e c\";\n+   Templ     : constant Pattern := BreakX ('T') * A & \"T e m p l a t e\";\n+   Spec      : constant Pattern := BreakX ('S') * A & \"S p e c\";\n \n-   Sem_Field : Pattern := BreakX ('-') & \"-Sem\";\n-   Lib_Field : Pattern := BreakX ('-') & \"-Lib\";\n+   Sem_Field : constant Pattern := BreakX ('-') & \"-Sem\";\n+   Lib_Field : constant Pattern := BreakX ('-') & \"-Lib\";\n \n-   Get_Field : Pattern := BreakX (Decimal_Digit_Set) * Field;\n+   Get_Field : constant Pattern := BreakX (Decimal_Digit_Set) * Field;\n \n-   Get_Dflt  : Pattern := BreakX ('(') & \"(set to \"\n-                            & Break (\" \") * Default & \" if\";\n+   Get_Dflt  : constant Pattern := BreakX ('(') & \"(set to \"\n+                                   & Break (\" \") * Default & \" if\";\n \n-   Next_Arg  : Pattern := Break (',') * Arg & ',';\n+   Next_Arg  : constant Pattern := Break (',') * Arg & ',';\n \n-   Op_Node   : Pattern := \"Op_\" & Rest * Op_Name;\n+   Op_Node   : constant Pattern := \"Op_\" & Rest * Op_Name;\n \n-   Shft_Rot  : Pattern := \"Shift_\" or \"Rotate_\";\n+   Shft_Rot  : constant Pattern := \"Shift_\" or \"Rotate_\";\n \n-   No_Ent    : Pattern := \"Or_Else\" or \"And_Then\" or \"In\" or \"Not_In\";\n+   No_Ent    : constant Pattern := \"Or_Else\" or \"And_Then\"\n+                                     or \"In\" or \"Not_In\";\n \n    M : Match_Result;\n "}, {"sha": "3a1ba2e7e4a10256fd6885119699ed090bd7b1ae", "filename": "gcc/ada/xsinfo.adb", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsinfo.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -55,6 +55,9 @@ procedure XSinfo is\n    Done : exception;\n    Err  : exception;\n \n+   pragma Warnings (Off);\n+   --  Below variables are referenced using * operator\n+\n    A         : VString := Nul;\n    Arg       : VString := Nul;\n    Comment   : VString := Nul;\n@@ -65,23 +68,26 @@ procedure XSinfo is\n    Rtn       : VString := Nul;\n    Term      : VString := Nul;\n \n+   pragma Warnings (On);\n+\n    InS       : File_Type;\n    Ofile     : File_Type;\n \n-   wsp     : Pattern := Span (' ' & ASCII.HT);\n-   Wsp_For : Pattern := wsp & \"for\";\n-   Is_Cmnt : Pattern := wsp & \"--\";\n-   Typ_Nod : Pattern := wsp * A & \"type Node_Kind is\";\n-   Get_Nam : Pattern := wsp * A & \"N_\" &  Break (\",)\") * Nam\n-                          & Len (1) * Term;\n-   Sub_Typ : Pattern := wsp * A & \"subtype \" &  Break (' ') * N;\n-   No_Cont : Pattern := wsp & Break (' ') * N1 & \" .. \" & Break (';') * N2;\n-   Cont_N1 : Pattern := wsp & Break (' ') * N1 & \" ..\" & Rpos (0);\n-   Cont_N2 : Pattern := Span (' ') & Break (';') * N2;\n-   Is_Func : Pattern := wsp * A & \"function \" & Rest * Nam;\n-   Get_Arg : Pattern := wsp & \"(N : \" & Break (')') * Arg\n-                          & \") return \" & Break (';') * Rtn\n-                          & ';' & wsp & \"--\" & wsp & Rest * Comment;\n+   wsp     : constant Pattern := Span (' ' & ASCII.HT);\n+   Wsp_For : constant Pattern := wsp & \"for\";\n+   Is_Cmnt : constant Pattern := wsp & \"--\";\n+   Typ_Nod : constant Pattern := wsp * A & \"type Node_Kind is\";\n+   Get_Nam : constant Pattern := wsp * A & \"N_\" &  Break (\",)\") * Nam\n+                                 & Len (1) * Term;\n+   Sub_Typ : constant Pattern := wsp * A & \"subtype \" &  Break (' ') * N;\n+   No_Cont : constant Pattern := wsp & Break (' ') * N1\n+                                 & \" .. \" & Break (';') * N2;\n+   Cont_N1 : constant Pattern := wsp & Break (' ') * N1 & \" ..\" & Rpos (0);\n+   Cont_N2 : constant Pattern := Span (' ') & Break (';') * N2;\n+   Is_Func : constant Pattern := wsp * A & \"function \" & Rest * Nam;\n+   Get_Arg : constant Pattern := wsp & \"(N : \" & Break (')') * Arg\n+                                 & \") return \" & Break (';') * Rtn\n+                                 & ';' & wsp & \"--\" & wsp & Rest * Comment;\n \n    NKV : Natural;\n "}, {"sha": "4e5ea56b93caf293f4305f21e5c02c5541863e19", "filename": "gcc/ada/xsnames.adb", "status": "modified", "additions": 32, "deletions": 24, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsnames.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -47,43 +47,48 @@ procedure XSnames is\n    InH  : File_Type;\n    OutH : File_Type;\n \n-   A, B    : VString := Nul;\n-   Line    : VString := Nul;\n-   Name    : VString := Nul;\n-   Name1   : VString := Nul;\n-   Oname   : VString := Nul;\n-   Oval    : VString := Nul;\n-   Restl   : VString := Nul;\n+   pragma Warnings (Off);\n+   --  Variables below are modifed by * operator\n \n-   Tdigs : Pattern := Any (Decimal_Digit_Set) &\n-                      Any (Decimal_Digit_Set) &\n-                      Any (Decimal_Digit_Set);\n+   A, B  : VString := Nul;\n+   Line  : VString := Nul;\n+   Name  : VString := Nul;\n+   Name1 : VString := Nul;\n+   Oname : VString := Nul;\n+   Oval  : VString := Nul;\n+   Restl : VString := Nul;\n \n-   Name_Ref : Pattern := Span (' ') * A & Break (' ') * Name\n-                           & Span (' ') * B\n-                           & \": constant Name_Id := N + \" & Tdigs\n-                           & ';' & Rest * Restl;\n+   pragma Warnings (On);\n \n-   Get_Name : Pattern := \"Name_\" & Rest * Name1;\n+   Tdigs : constant Pattern := Any (Decimal_Digit_Set) &\n+                               Any (Decimal_Digit_Set) &\n+                               Any (Decimal_Digit_Set);\n \n-   Chk_Low  : Pattern := Pos (0) & Any (Lower_Set) & Rest & Pos (1);\n+   Name_Ref : constant Pattern := Span (' ') * A & Break (' ') * Name\n+                                  & Span (' ') * B\n+                                  & \": constant Name_Id := N + \" & Tdigs\n+                                  & ';' & Rest * Restl;\n \n-   Findu    : Pattern := Span ('u') * A;\n+   Get_Name : constant Pattern := \"Name_\" & Rest * Name1;\n+   Chk_Low  : constant Pattern := Pos (0) & Any (Lower_Set) & Rest & Pos (1);\n+   Findu    : constant Pattern := Span ('u') * A;\n \n    Val : Natural;\n \n-   Xlate_U_Und : Character_Mapping := To_Mapping (\"u\", \"_\");\n+   Xlate_U_Und : constant Character_Mapping := To_Mapping (\"u\", \"_\");\n \n    M : Match_Result;\n \n    type Header_Symbol is (None, Attr, Conv, Prag);\n    --  A symbol in the header file\n \n-   --  Prefixes used in the header file\n+   procedure Output_Header_Line (S : Header_Symbol);\n+   --  Output header line\n \n    Header_Attr : aliased String := \"Attr\";\n    Header_Conv : aliased String := \"Convention\";\n    Header_Prag : aliased String := \"Pragma\";\n+   --  Prefixes used in the header file\n \n    type String_Ptr is access all String;\n    Header_Prefix : constant array (Header_Symbol) of String_Ptr :=\n@@ -94,9 +99,12 @@ procedure XSnames is\n \n    --  Patterns used in the spec file\n \n-   Get_Attr : Pattern := Span (' ') & \"Attribute_\" & Break (\",)\") * Name1;\n-   Get_Conv : Pattern := Span (' ') & \"Convention_\" & Break (\",)\") * Name1;\n-   Get_Prag : Pattern := Span (' ') & \"Pragma_\" & Break (\",)\") * Name1;\n+   Get_Attr : constant Pattern := Span (' ') & \"Attribute_\"\n+                                  & Break (\",)\") * Name1;\n+   Get_Conv : constant Pattern := Span (' ') & \"Convention_\"\n+                                  & Break (\",)\") * Name1;\n+   Get_Prag : constant Pattern := Span (' ') & \"Pragma_\"\n+                                  & Break (\",)\") * Name1;\n \n    type Header_Symbol_Counter is array (Header_Symbol) of Natural;\n    Header_Counter : Header_Symbol_Counter := (0, 0, 0, 0);\n@@ -117,7 +125,7 @@ procedure XSnames is\n \n       if Header_Current_Symbol /= S then\n          declare\n-            Pat : String := \"#define  \" & Header_Prefix (S).all;\n+            Pat : constant String := \"#define  \" & Header_Prefix (S).all;\n             In_Pat : Boolean := False;\n \n          begin\n@@ -129,7 +137,7 @@ procedure XSnames is\n                Line := Get_Line (InH);\n \n                if Match (Line, Pat) then\n-                  In_Pat := true;\n+                  In_Pat := True;\n                elsif In_Pat then\n                   Header_Pending_Line := Line;\n                   exit;"}, {"sha": "4d73529823029a734714b18ed681eb506cb99505", "filename": "gcc/ada/xtreeprs.adb", "status": "modified", "additions": 33, "deletions": 28, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxtreeprs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a343e634c7b155a8553e45ffabd3f24f0765ec/gcc%2Fada%2Fxtreeprs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxtreeprs.adb?ref=34a343e634c7b155a8553e45ffabd3f24f0765ec", "patch": "@@ -59,21 +59,26 @@ procedure XTreeprs is\n    Err : exception;\n    --  Raised on fatal error\n \n-   A          : VString := Nul;\n-   Ffield     : VString := Nul;\n-   Field      : VString := Nul;\n-   Fieldno    : VString := Nul;\n-   Flagno     : VString := Nul;\n-   Line       : VString := Nul;\n-   Name       : VString := Nul;\n-   Node       : VString := Nul;\n-   Outstring  : VString := Nul;\n-   Prefix     : VString := Nul;\n-   S          : VString := Nul;\n-   S1         : VString := Nul;\n-   Syn        : VString := Nul;\n-   Synonym    : VString := Nul;\n-   Term       : VString := Nul;\n+   pragma Warnings (Off);\n+   --  Following variables are assigned by * operator\n+\n+   A         : VString := Nul;\n+   Ffield    : VString := Nul;\n+   Field     : VString := Nul;\n+   Fieldno   : VString := Nul;\n+   Flagno    : VString := Nul;\n+   Line      : VString := Nul;\n+   Name      : VString := Nul;\n+   Node      : VString := Nul;\n+   Outstring : VString := Nul;\n+   Prefix    : VString := Nul;\n+   S         : VString := Nul;\n+   S1        : VString := Nul;\n+   Syn       : VString := Nul;\n+   Synonym   : VString := Nul;\n+   Term      : VString := Nul;\n+\n+   pragma Warnings (On);\n \n    subtype Sfile is Ada.Streams.Stream_IO.File_Type;\n \n@@ -123,19 +128,19 @@ procedure XTreeprs is\n    Sp : aliased Natural;\n    --  Space left on line for Pchars output\n \n-   wsp : Pattern := Span (' ' & ASCII.HT);\n-\n-   Is_Temp  : Pattern := BreakX ('T') * A & \"T e m p l a t e\";\n-   Get_Node : Pattern := wsp & \"--  N_\" & Rest * Node;\n-   Tst_Punc : Pattern := Break (\" ,.\");\n-   Get_Syn  : Pattern := Span (' ') & \"--  \" & Break (' ') * Synonym\n-                & \" (\" & Break (')') * Field;\n-   Brk_Min  : Pattern := Break ('-') * Ffield;\n-   Is_Flag  : Pattern := \"Flag\" & Rest * Flagno;\n-   Is_Field : Pattern := Rtab (1) & Len (1) * Fieldno;\n-   Is_Syn   : Pattern := wsp & \"N_\" & Break (\",)\") * Syn & Len (1) * Term;\n-   Brk_Node : Pattern := Break (' ') * Node & ' ';\n-   Chop_SP  : Pattern := Len (Sp'Unrestricted_Access) * S1;\n+   wsp      : constant Pattern := Span (' ' & ASCII.HT);\n+   Is_Temp  : constant Pattern := BreakX ('T') * A & \"T e m p l a t e\";\n+   Get_Node : constant Pattern := wsp & \"--  N_\" & Rest * Node;\n+   Tst_Punc : constant Pattern := Break (\" ,.\");\n+   Get_Syn  : constant Pattern := Span (' ') & \"--  \" & Break (' ') * Synonym\n+                                  & \" (\" & Break (')') * Field;\n+   Brk_Min  : constant Pattern := Break ('-') * Ffield;\n+   Is_Flag  : constant Pattern := \"Flag\" & Rest * Flagno;\n+   Is_Field : constant Pattern := Rtab (1) & Len (1) * Fieldno;\n+   Is_Syn   : constant Pattern := wsp & \"N_\" & Break (\",)\") * Syn\n+                                  & Len (1) * Term;\n+   Brk_Node : constant Pattern := Break (' ') * Node & ' ';\n+   Chop_SP  : constant Pattern := Len (Sp'Unrestricted_Access) * S1;\n \n    M : Match_Result;\n "}]}