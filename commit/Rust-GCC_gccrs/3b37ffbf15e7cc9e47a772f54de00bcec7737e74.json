{"sha": "3b37ffbf15e7cc9e47a772f54de00bcec7737e74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IzN2ZmYmYxNWU3Y2M5ZTQ3YTc3MmY1NGRlMDBiY2VjNzczN2U3NA==", "commit": {"author": {"name": "Jose Ruiz", "email": "ruiz@act-europe.fr", "date": "2004-10-04T14:51:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-04T14:51:59Z"}, "message": "s-tposen.adb (Service_Entry): The object must be always unlocked at the end of this procedure now that the...\n\n2004-10-04  Jose Ruiz  <ruiz@act-europe.fr>\n\n\t* s-tposen.adb (Service_Entry): The object must be always unlocked at\n\tthe end of this procedure now that the unlock operation was inserted\n\tby the expander.\n\nFrom-SVN: r88489", "tree": {"sha": "d44b5671e604bd65bd2d1f9eefcae98b57c5edc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d44b5671e604bd65bd2d1f9eefcae98b57c5edc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b37ffbf15e7cc9e47a772f54de00bcec7737e74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b37ffbf15e7cc9e47a772f54de00bcec7737e74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b37ffbf15e7cc9e47a772f54de00bcec7737e74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b37ffbf15e7cc9e47a772f54de00bcec7737e74/comments", "author": null, "committer": null, "parents": [{"sha": "b23e28d55eb5f3f601b309786fae3b262643d20e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23e28d55eb5f3f601b309786fae3b262643d20e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b23e28d55eb5f3f601b309786fae3b262643d20e"}], "stats": {"total": 65, "additions": 38, "deletions": 27}, "files": [{"sha": "898395faa6ad2d1d29d81c7bf2a4b8da1f57fe96", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b37ffbf15e7cc9e47a772f54de00bcec7737e74/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b37ffbf15e7cc9e47a772f54de00bcec7737e74/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3b37ffbf15e7cc9e47a772f54de00bcec7737e74", "patch": "@@ -1,3 +1,9 @@\n+2004-10-04  Jose Ruiz  <ruiz@act-europe.fr>\n+\n+\t* s-tposen.adb (Service_Entry): The object must be always unlocked at\n+\tthe end of this procedure now that the unlock operation was inserted\n+\tby the expander.\n+\n 2004-10-04  Jose Ruiz  <ruiz@act-europe.fr>\n \n \t* targparm.ads, targparm.adb (Targparm_Tags): Add PAS value"}, {"sha": "bb1267969c1ce4cd50b31a6eb8283fd0790f4cec", "filename": "gcc/ada/s-tposen.adb", "status": "modified", "additions": 32, "deletions": 27, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b37ffbf15e7cc9e47a772f54de00bcec7737e74/gcc%2Fada%2Fs-tposen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b37ffbf15e7cc9e47a772f54de00bcec7737e74/gcc%2Fada%2Fs-tposen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.adb?ref=3b37ffbf15e7cc9e47a772f54de00bcec7737e74", "patch": "@@ -574,43 +574,48 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n    -------------------\n \n    procedure Service_Entry (Object : Protection_Entry_Access) is\n-      Self_Id       : constant Task_Id := STPO.Self;\n-      Entry_Call    : constant Entry_Call_Link := Object.Entry_Queue;\n-      Caller        : Task_Id;\n+      Self_Id    : constant Task_Id := STPO.Self;\n+      Entry_Call : constant Entry_Call_Link := Object.Entry_Queue;\n+      Caller     : Task_Id;\n \n    begin\n-      if Entry_Call /= null then\n-         if Object.Entry_Body.Barrier (Object.Compiler_Info, 1) then\n-            Object.Entry_Queue := null;\n+      if Entry_Call /= null\n+        and then Object.Entry_Body.Barrier (Object.Compiler_Info, 1)\n+      then\n+         Object.Entry_Queue := null;\n \n-            if Object.Call_In_Progress /= null then\n-               --  This violates the No_Entry_Queue restriction, send\n-               --  Program_Error to the caller.\n+         if Object.Call_In_Progress /= null then\n \n-               Send_Program_Error (Self_Id, Entry_Call);\n-               Unlock_Entry (Object);\n-               return;\n-            end if;\n+            --  Violation of No_Entry_Queue restriction, raise exception\n \n-            Object.Call_In_Progress := Entry_Call;\n-            Object.Entry_Body.Action\n-              (Object.Compiler_Info, Entry_Call.Uninterpreted_Data, 1);\n-            Object.Call_In_Progress := null;\n-            Caller := Entry_Call.Self;\n+            Send_Program_Error (Self_Id, Entry_Call);\n             Unlock_Entry (Object);\n+            return;\n+         end if;\n \n-            if Single_Lock then\n-               STPO.Lock_RTS;\n-            end if;\n+         Object.Call_In_Progress := Entry_Call;\n+         Object.Entry_Body.Action\n+           (Object.Compiler_Info, Entry_Call.Uninterpreted_Data, 1);\n+         Object.Call_In_Progress := null;\n+         Caller := Entry_Call.Self;\n+         Unlock_Entry (Object);\n \n-            STPO.Write_Lock (Caller);\n-            Wakeup_Entry_Caller (Self_Id, Entry_Call, Done);\n-            STPO.Unlock (Caller);\n+         if Single_Lock then\n+            STPO.Lock_RTS;\n+         end if;\n \n-            if Single_Lock then\n-               STPO.Unlock_RTS;\n-            end if;\n+         STPO.Write_Lock (Caller);\n+         Wakeup_Entry_Caller (Self_Id, Entry_Call, Done);\n+         STPO.Unlock (Caller);\n+\n+         if Single_Lock then\n+            STPO.Unlock_RTS;\n          end if;\n+\n+      else\n+         --  Just unlock the entry\n+\n+         Unlock_Entry (Object);\n       end if;\n \n    exception"}]}