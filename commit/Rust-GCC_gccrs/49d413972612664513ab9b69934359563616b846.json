{"sha": "49d413972612664513ab9b69934359563616b846", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlkNDEzOTcyNjEyNjY0NTEzYWI5YjY5OTM0MzU5NTYzNjE2Yjg0Ng==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-10-20T14:24:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-20T14:24:15Z"}, "message": "gnat_rm.texi: Document No_Tagged_Streams pragma and aspect.\n\n2014-10-20  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document No_Tagged_Streams pragma and aspect.\n\t* snames.ads-tmpl: Add entry for pragma No_Tagged_Streams.\n\t* aspects.ads, aspects.adb: Add aspect No_Tagged_Streams.\n\t* einfo.adb (No_Tagged_Streams_Pragma): New field.\n\t* einfo.ads: Minor reformatting (reorder entries).\n\t(No_Tagged_Streams_Pragma): New field.\n\t* exp_ch3.adb: Minor comment update.\n\t* opt.ads (No_Tagged_Streams): New variable.\n\t* par-prag.adb: Add dummy entry for pragma No_Tagged_Streams.\n\t* sem.ads (Save_No_Tagged_Streams): New field in scope record.\n\t* sem_attr.adb (Check_Stream_Attribute): Check stream ops\n\tprohibited by No_Tagged_Streams.\n\t* sem_ch3.adb (Analyze_Full_Type_Declaration): Set\n\tNo_Tagged_Streams_Pragma.\n\t(Analyze_Subtype_Declaration): ditto.\n\t(Build_Derived_Record_Type): ditto.\n\t(Record_Type_Declaration): ditto.\n\t* sem_ch8.adb (Pop_Scope): Restore No_Tagged_Streams.\n\t(Push_Scope): Save No_Tagged_Streams.\n\t* sem_prag.adb (Analyze_Pragma, case No_Tagged_Streams): Implement new\n\tpragma.\n\nFrom-SVN: r216476", "tree": {"sha": "421e8d6e44baa89e118bcf050eb524704cf48607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/421e8d6e44baa89e118bcf050eb524704cf48607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49d413972612664513ab9b69934359563616b846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d413972612664513ab9b69934359563616b846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d413972612664513ab9b69934359563616b846", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d413972612664513ab9b69934359563616b846/comments", "author": null, "committer": null, "parents": [{"sha": "adc876a84080bb10955ca83601b9fb3ebe2f44fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc876a84080bb10955ca83601b9fb3ebe2f44fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc876a84080bb10955ca83601b9fb3ebe2f44fb"}], "stats": {"total": 304, "additions": 262, "deletions": 42}, "files": [{"sha": "e1e6b137d14deb381e406b2e53664a3384f93c62", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -1,3 +1,27 @@\n+2014-10-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document No_Tagged_Streams pragma and aspect.\n+\t* snames.ads-tmpl: Add entry for pragma No_Tagged_Streams.\n+\t* aspects.ads, aspects.adb: Add aspect No_Tagged_Streams.\n+\t* einfo.adb (No_Tagged_Streams_Pragma): New field.\n+\t* einfo.ads: Minor reformatting (reorder entries).\n+\t(No_Tagged_Streams_Pragma): New field.\n+\t* exp_ch3.adb: Minor comment update.\n+\t* opt.ads (No_Tagged_Streams): New variable.\n+\t* par-prag.adb: Add dummy entry for pragma No_Tagged_Streams.\n+\t* sem.ads (Save_No_Tagged_Streams): New field in scope record.\n+\t* sem_attr.adb (Check_Stream_Attribute): Check stream ops\n+\tprohibited by No_Tagged_Streams.\n+\t* sem_ch3.adb (Analyze_Full_Type_Declaration): Set\n+\tNo_Tagged_Streams_Pragma.\n+\t(Analyze_Subtype_Declaration): ditto.\n+\t(Build_Derived_Record_Type): ditto.\n+\t(Record_Type_Declaration): ditto.\n+\t* sem_ch8.adb (Pop_Scope): Restore No_Tagged_Streams.\n+\t(Push_Scope): Save No_Tagged_Streams.\n+\t* sem_prag.adb (Analyze_Pragma, case No_Tagged_Streams): Implement new\n+\tpragma.\n+\n 2014-10-20  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, prj-proc.adb, sem_ch4.adb, prj-env.adb, lib.ads,"}, {"sha": "ecac9ff29416c1884140d2b0c35ee3bc3a674d5a", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -546,6 +546,7 @@ package body Aspects is\n     Aspect_Machine_Radix                => Aspect_Machine_Radix,\n     Aspect_No_Elaboration_Code_All      => Aspect_No_Elaboration_Code_All,\n     Aspect_No_Return                    => Aspect_No_Return,\n+    Aspect_No_Tagged_Streams            => Aspect_No_Tagged_Streams,\n     Aspect_Obsolescent                  => Aspect_Obsolescent,\n     Aspect_Object_Size                  => Aspect_Object_Size,\n     Aspect_Output                       => Aspect_Output,"}, {"sha": "173c66db1738246e426bb8b0ceaa31d84bcc682c", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -180,6 +180,7 @@ package Aspects is\n       Aspect_Interrupt_Handler,\n       Aspect_Lock_Free,                     -- GNAT\n       Aspect_No_Return,\n+      Aspect_No_Tagged_Streams,             -- GNAT\n       Aspect_Pack,\n       Aspect_Persistent_BSS,                -- GNAT\n       Aspect_Preelaborable_Initialization,\n@@ -432,6 +433,7 @@ package Aspects is\n       Aspect_Machine_Radix                => Name_Machine_Radix,\n       Aspect_No_Elaboration_Code_All      => Name_No_Elaboration_Code_All,\n       Aspect_No_Return                    => Name_No_Return,\n+      Aspect_No_Tagged_Streams            => Name_No_Tagged_Streams,\n       Aspect_Object_Size                  => Name_Object_Size,\n       Aspect_Obsolescent                  => Name_Obsolescent,\n       Aspect_Output                       => Name_Output,\n@@ -691,6 +693,7 @@ package Aspects is\n       Aspect_Initial_Condition            => Never_Delay,\n       Aspect_Initializes                  => Never_Delay,\n       Aspect_No_Elaboration_Code_All      => Never_Delay,\n+      Aspect_No_Tagged_Streams            => Never_Delay,\n       Aspect_Obsolescent                  => Never_Delay,\n       Aspect_Part_Of                      => Never_Delay,\n       Aspect_Refined_Depends              => Never_Delay,"}, {"sha": "18cac0f9b4bbaacc605c1bc06f2512452d159a0d", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -251,6 +251,7 @@ package body Einfo is\n    --    Thunk_Entity                    Node31\n \n    --    SPARK_Pragma                    Node32\n+   --    No_Tagged_Streams_Pragma        Node32\n \n    --    Linker_Section_Pragma           Node33\n    --    SPARK_Aux_Pragma                Node33\n@@ -2594,6 +2595,12 @@ package body Einfo is\n       return Flag136 (Base_Type (Id));\n    end No_Strict_Aliasing;\n \n+   function No_Tagged_Streams_Pragma (Id : E) return N is\n+   begin\n+      pragma Assert (Is_Tagged_Type (Id));\n+      return Node32 (Id);\n+   end No_Tagged_Streams_Pragma;\n+\n    function Non_Binary_Modulus (Id : E) return B is\n    begin\n       pragma Assert (Is_Type (Id));\n@@ -5419,6 +5426,12 @@ package body Einfo is\n       Set_Flag136 (Id, V);\n    end Set_No_Strict_Aliasing;\n \n+   procedure Set_No_Tagged_Streams_Pragma (Id : E; V : E) is\n+   begin\n+      pragma Assert (Is_Tagged_Type (Id));\n+      Set_Node32 (Id, V);\n+   end Set_No_Tagged_Streams_Pragma;\n+\n    procedure Set_Non_Binary_Modulus (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Type (Id) and then Is_Base_Type (Id));\n@@ -9742,6 +9755,9 @@ package body Einfo is\n               E_Subprogram_Body                            =>\n             Write_Str (\"SPARK_Pragma\");\n \n+         when Type_Kind                                    =>\n+            Write_Str (\"No_Tagged_Streams_Pragma\");\n+\n          when others                                       =>\n             Write_Str (\"Field32??\");\n       end case;"}, {"sha": "9c2c53c7858e026208518eff54f0ce5169fe9444", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 34, "deletions": 24, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -3361,20 +3361,6 @@ package Einfo is\n --       Empty if applied to the last literal. This is actually a synonym\n --       for Next, but its use is preferred in this context.\n \n---    Non_Binary_Modulus (Flag58) [base type only]\n---       Defined in all subtype and type entities. Set for modular integer\n---       types if the modulus value is other than a power of 2.\n-\n---    Non_Limited_View (Node17)\n---       Defined in abstract states and incomplete types that act as shadow\n---       entities created when analysing a limited with clause (Ada 2005:\n---       AI-50217). Points to the defining entity of the original declaration.\n-\n---    Nonzero_Is_True (Flag162) [base type only]\n---       Defined in enumeration types. Set if any non-zero value is to be\n---       interpreted as true. Currently this is set for derived Boolean\n---       types which have a convention of C, C++ or Fortran.\n-\n --    No_Dynamic_Predicate_On_Actual (Flag276)\n --       Defined in discrete types. Set for generic formal types that are used\n --       in loops and quantified expressions. The corresponing actual cannot\n@@ -3396,6 +3382,35 @@ package Einfo is\n --       Defined in all entities. Always false except in the case of procedures\n --       and generic procedures for which a pragma No_Return is given.\n \n+--    No_Strict_Aliasing (Flag136) [base type only]\n+--       Defined in access types. Set to direct the backend to avoid any\n+--       optimizations based on an assumption about the aliasing status of\n+--       objects designated by the access type. For the case of the gcc\n+--       backend, the effect is as though all references to objects of\n+--       the type were compiled with -fno-strict-aliasing. This flag is\n+--       set if an unchecked conversion with the access type as a target\n+--       type occurs in the same source unit as the declaration of the\n+--       access type, or if an explicit pragma No_Strict_Aliasing applies.\n+\n+--    No_Tagged_Streams_Pragma (Node32)\n+--       Present in  all subtype and type entities. Set for tagged types and\n+--       subtypes (i.e. entities with Is_Tagged_Type set True) if a valid\n+--       pragma/aspect applies to the type.\n+\n+--    Non_Binary_Modulus (Flag58) [base type only]\n+--       Defined in all subtype and type entities. Set for modular integer\n+--       types if the modulus value is other than a power of 2.\n+\n+--    Non_Limited_View (Node17)\n+--       Defined in abstract states and incomplete types that act as shadow\n+--       entities created when analysing a limited with clause (Ada 2005:\n+--       AI-50217). Points to the defining entity of the original declaration.\n+\n+--    Nonzero_Is_True (Flag162) [base type only]\n+--       Defined in enumeration types. Set if any non-zero value is to be\n+--       interpreted as true. Currently this is set for derived Boolean\n+--       types which have a convention of C, C++ or Fortran.\n+\n --    Normalized_First_Bit (Uint8)\n --       Defined in components and discriminants. Indicates the normalized\n --       value of First_Bit for the component, i.e. the offset within the\n@@ -3419,16 +3434,6 @@ package Einfo is\n --       the maximum size such records (needed for allocation purposes when\n --       there are default discriminants, and also for the 'Size value).\n \n---    No_Strict_Aliasing (Flag136) [base type only]\n---       Defined in access types. Set to direct the backend to avoid any\n---       optimizations based on an assumption about the aliasing status of\n---       objects designated by the access type. For the case of the gcc\n---       backend, the effect is as though all references to objects of\n---       the type were compiled with -fno-strict-aliasing. This flag is\n---       set if an unchecked conversion with the access type as a target\n---       type occurs in the same source unit as the declaration of the\n---       access type, or if an explicit pragma No_Strict_Aliasing applies.\n-\n --    Number_Dimensions (synthesized)\n --       Applies to array types and subtypes. Returns the number of dimensions\n --       of the array type or subtype as a value of type Pos.\n@@ -5261,6 +5266,7 @@ package Einfo is\n    --    Current_Use_Clause                  (Node27)\n    --    Subprograms_For_Type                (Node29)\n    --    Derived_Type_Link                   (Node31)\n+   --    No_Tagged_Streams_Pragma            (Node32)\n    --    Linker_Section_Pragma               (Node33)\n \n    --    Depends_On_Private                  (Flag14)\n@@ -6814,6 +6820,7 @@ package Einfo is\n    function No_Predicate_On_Actual              (Id : E) return B;\n    function No_Return                           (Id : E) return B;\n    function No_Strict_Aliasing                  (Id : E) return B;\n+   function No_Tagged_Streams_Pragma            (Id : E) return N;\n    function Non_Binary_Modulus                  (Id : E) return B;\n    function Non_Limited_View                    (Id : E) return E;\n    function Nonzero_Is_True                     (Id : E) return B;\n@@ -7458,6 +7465,7 @@ package Einfo is\n    procedure Set_No_Predicate_On_Actual          (Id : E; V : B := True);\n    procedure Set_No_Return                       (Id : E; V : B := True);\n    procedure Set_No_Strict_Aliasing              (Id : E; V : B := True);\n+   procedure Set_No_Tagged_Streams_Pragma        (Id : E; V : N);\n    procedure Set_Non_Binary_Modulus              (Id : E; V : B := True);\n    procedure Set_Non_Limited_View                (Id : E; V : E);\n    procedure Set_Nonzero_Is_True                 (Id : E; V : B := True);\n@@ -8251,6 +8259,7 @@ package Einfo is\n    pragma Inline (No_Predicate_On_Actual);\n    pragma Inline (No_Return);\n    pragma Inline (No_Strict_Aliasing);\n+   pragma Inline (No_Tagged_Streams_Pragma);\n    pragma Inline (Non_Binary_Modulus);\n    pragma Inline (Non_Limited_View);\n    pragma Inline (Nonzero_Is_True);\n@@ -8693,6 +8702,7 @@ package Einfo is\n    pragma Inline (Set_No_Predicate_On_Actual);\n    pragma Inline (Set_No_Return);\n    pragma Inline (Set_No_Strict_Aliasing);\n+   pragma Inline (Set_No_Tagged_Streams_Pragma);\n    pragma Inline (Set_Non_Binary_Modulus);\n    pragma Inline (Set_Non_Limited_View);\n    pragma Inline (Set_Nonzero_Is_True);"}, {"sha": "3aecc9ba37013db0633299dd3305882ca720ffe1", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -378,7 +378,7 @@ package body Exp_Ch3 is\n    --  type. The rules for inheritance of stream attributes by type extensions\n    --  are enforced by this function. Furthermore, various restrictions prevent\n    --  the generation of these operations, as a useful optimization or for\n-   --  certification purposes.\n+   --  certification purposes and to save unnecessary generated code.\n \n    --------------------------\n    -- Adjust_Discriminants --\n@@ -10008,7 +10008,9 @@ package body Exp_Ch3 is\n \n       --  Bodies for Dispatching stream IO routines. We need these only for\n       --  non-limited types (in the limited case there is no dispatching).\n-      --  We also skip them if dispatching or finalization are not available.\n+      --  We also skip them if dispatching or finalization are not available\n+      --  or if stream operations are prohibited by restriction No_Streams or\n+      --  from use of pragma/aspect No_Tagged_Streams.\n \n       if Stream_Operation_OK (Tag_Typ, TSS_Stream_Read)\n         and then No (TSS (Tag_Typ, TSS_Stream_Read))\n@@ -10309,6 +10311,7 @@ package body Exp_Ch3 is\n                 or else Is_Synchronized_Interface (Typ)))\n         and then not Restriction_Active (No_Streams)\n         and then not Restriction_Active (No_Dispatch)\n+        and then No (No_Tagged_Streams_Pragma (Typ))\n         and then not No_Run_Time_Mode\n         and then RTE_Available (RE_Tag)\n         and then No (Type_Without_Stream_Operation (Typ))"}, {"sha": "425791f7fcab28dd9bbc39747e005bf883796ac4", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -209,6 +209,7 @@ Implementation Defined Pragmas\n * Pragma No_Return::\n * Pragma No_Run_Time::\n * Pragma No_Strict_Aliasing ::\n+* Pragma No_Tagged_Streams::\n * Pragma Normalize_Scalars::\n * Pragma Obsolescent::\n * Pragma Optimize_Alignment::\n@@ -313,6 +314,7 @@ Implementation Defined Aspects\n * Aspect Iterable::\n * Aspect Linker_Section::\n * Aspect No_Elaboration_Code_All::\n+* Aspect No_Tagged_Streams::\n * Aspect Object_Size::\n * Aspect Obsolescent::\n * Aspect Part_Of::\n@@ -1081,6 +1083,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma No_Return::\n * Pragma No_Run_Time::\n * Pragma No_Strict_Aliasing::\n+* Pragma No_Tagged_Streams::\n * Pragma Normalize_Scalars::\n * Pragma Obsolescent::\n * Pragma Optimize_Alignment::\n@@ -4778,6 +4781,41 @@ Aliasing,,, gnat_ugn, @value{EDITION} User's Guide}.\n \n This pragma currently has no effects on access to unconstrained array types.\n \n+@node Pragma No_Tagged_Streams\n+@unnumberedsec Pragma No_Tagged_Streams\n+@findex No_Tagged_Streams\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma No_Tagged_Streams;\n+pragma No_Tagged_Streams [([Entity =>] tagged_type_LOCAL_NAME)];\n+@end smallexample\n+\n+@noindent\n+Normally when a tagged type is introduced using a full type declaration,\n+part of the processing includes generating stream access routines to be\n+used by stream attributes referencing the type (or one of its subtypes\n+or derived types). This can involve the generation of significant amounts\n+of code which is wasted space if stream routines are not needed for the\n+type in question.\n+\n+The @code{No_Tagged_Streams} pragma causes the generation of these stream\n+routines to be skipped, and any attempt to use stream operations on\n+types subject to this pragma will be statically rejected as illegal.\n+\n+There are two forms of the pragma. The form with no arguments must appear\n+in a declarative sequence or in the declarations of a package spec. This\n+pragma affects all subsequent root tagged types declared in the declaration\n+sequence, and specifies that no stream routines be generated. The form with\n+an argument (for which there is also a corresponding aspect) specifies a\n+single root tagged type for which stream routines are not to be generated.\n+\n+Once the pragma has been given for a particular root tagged type, all subtypes\n+and derived types of this type inherit the pragma automatically, so the effect\n+applies to a complete hierarchy (this is necessary to deal with the class-wide\n+dispatching versions of the stream routines).\n+\n @node Pragma Normalize_Scalars\n @unnumberedsec Pragma Normalize_Scalars\n @findex Normalize_Scalars\n@@ -8110,6 +8148,7 @@ or attribute definition clause.\n * Aspect Linker_Section::\n * Aspect Lock_Free::\n * Aspect No_Elaboration_Code_All::\n+* Aspect No_Tagged_Streams::\n * Aspect Object_Size::\n * Aspect Obsolescent::\n * Aspect Part_Of::\n@@ -8388,6 +8427,14 @@ This boolean aspect is equivalent to pragma @code{Lock_Free}.\n This aspect is equivalent to a @code{pragma No_Elaboration_Code_All}\n statement for a program unit.\n \n+@node Aspect No_Tagged_Streams\n+@unnumberedsec Aspect No_Tagged_Streams\n+@findex No_Tagged_Streams\n+@noindent\n+This aspect is equivalent to a @code{pragma No_Tagged_Streams} with an\n+argument specifying a root tagged type (thus this aspect can only be\n+applied to such a type).\n+\n @node Aspect Object_Size\n @unnumberedsec Aspect Object_Size\n @findex Object_Size"}, {"sha": "7706827f8f578fa7a68025125872d14aece611fd", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -1077,6 +1077,11 @@ package Opt is\n    --  GNAT\n    --  Set True if pragma No_Strict_Aliasing with no parameters encountered.\n \n+   No_Tagged_Streams : Node_Id := Empty;\n+   --  GNAT\n+   --  If a pragma No_Tagged_Streams is active for the current scope, this\n+   --  points to the corresponding pragma.\n+\n    Normalize_Scalars : Boolean := False;\n    --  GNAT, GNATBIND\n    --  Set True if a pragma Normalize_Scalars applies to the current unit."}, {"sha": "a9fc33d59b0f2e3c588217ee99752b45bdd78c9a", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -1262,6 +1262,7 @@ begin\n            Pragma_No_Return                      |\n            Pragma_No_Run_Time                    |\n            Pragma_No_Strict_Aliasing             |\n+           Pragma_No_Tagged_Streams              |\n            Pragma_Normalize_Scalars              |\n            Pragma_Obsolescent                    |\n            Pragma_Ordered                        |"}, {"sha": "22da2233005870bee2868e0d7fdd7d0fd61d14f2", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -492,6 +492,9 @@ package Sem is\n       Save_SPARK_Mode_Pragma : Node_Id;\n       --  Setting of SPARK_Mode_Pragma on entry to restore on exit\n \n+      Save_No_Tagged_Streams : Node_Id;\n+      --  Setting of No_Tagged_Streams to restore on exit\n+\n       Save_Default_SSO : Character;\n       --  Setting of Default_SSO on entry to restore on exit\n "}, {"sha": "d0c3f0d371659b7473dbdb72b7aa9e1ef919f496", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -1909,6 +1909,17 @@ package body Sem_Attr is\n             end if;\n          end if;\n \n+         --  Check for no stream operations allowed from No_Tagged_Streams\n+\n+         if Is_Tagged_Type (P_Type)\n+           and then Present (No_Tagged_Streams_Pragma (P_Type))\n+         then\n+            Error_Msg_Sloc := Sloc (No_Tagged_Streams_Pragma (P_Type));\n+            Error_Msg_NE\n+              (\"no stream operations for & (No_Tagged_Streams #)\", N, P_Type);\n+            return;\n+         end if;\n+\n          --  Check restriction violations\n \n          --  First check the No_Streams restriction, which prohibits the use"}, {"sha": "b81d36364332ff4e68d95e493a8ca5297125b97f", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 55, "deletions": 16, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -2554,7 +2554,8 @@ package body Sem_Ch3 is\n       --  imported through a LIMITED WITH clause, it appears as incomplete\n       --  but has no full view.\n \n-      if Ekind (Prev) = E_Incomplete_Type and then Present (Full_View (Prev))\n+      if Ekind (Prev) = E_Incomplete_Type\n+        and then Present (Full_View (Prev))\n       then\n          T := Full_View (Prev);\n          Set_Incomplete_View (N, Parent (Prev));\n@@ -2847,7 +2848,8 @@ package body Sem_Ch3 is\n       --  incomplete types.\n \n       if Tagged_Present (N) then\n-         Set_Is_Tagged_Type (T);\n+         Set_Is_Tagged_Type (T, True);\n+         Set_No_Tagged_Streams_Pragma (T, No_Tagged_Streams);\n          Make_Class_Wide_Type (T);\n          Set_Direct_Primitive_Operations (T, New_Elmt_List);\n       end if;\n@@ -2879,6 +2881,7 @@ package body Sem_Ch3 is\n \n    begin\n       Set_Is_Tagged_Type (T);\n+      Set_No_Tagged_Streams_Pragma (T, No_Tagged_Streams);\n \n       Set_Is_Limited_Record (T, Limited_Present (Def)\n                                   or else Task_Present (Def)\n@@ -4663,6 +4666,8 @@ package body Sem_Ch3 is\n                Set_Is_Tagged_Type       (Id, True);\n                Set_Has_Unknown_Discriminants\n                                         (Id, True);\n+               Set_No_Tagged_Streams_Pragma\n+                                        (Id, No_Tagged_Streams_Pragma (T));\n \n                if Ekind (T) = E_Class_Wide_Subtype then\n                   Set_Equivalent_Type   (Id, Equivalent_Type    (T));\n@@ -4699,7 +4704,9 @@ package body Sem_Ch3 is\n                end if;\n \n                if Is_Tagged_Type (T) then\n-                  Set_Is_Tagged_Type    (Id);\n+                  Set_Is_Tagged_Type    (Id, True);\n+                  Set_No_Tagged_Streams_Pragma\n+                                        (Id, No_Tagged_Streams_Pragma (T));\n                   Set_Is_Abstract_Type  (Id, Is_Abstract_Type (T));\n                   Set_Direct_Primitive_Operations\n                                         (Id, Direct_Primitive_Operations (T));\n@@ -4728,6 +4735,8 @@ package body Sem_Ch3 is\n \n                if Is_Tagged_Type (T) then\n                   Set_Is_Tagged_Type              (Id);\n+                  Set_No_Tagged_Streams_Pragma    (Id,\n+                    No_Tagged_Streams_Pragma (T));\n                   Set_Is_Abstract_Type            (Id, Is_Abstract_Type (T));\n                   Set_Class_Wide_Type             (Id, Class_Wide_Type  (T));\n                   Set_Direct_Primitive_Operations (Id,\n@@ -4808,6 +4817,11 @@ package body Sem_Ch3 is\n                Set_Is_Tagged_Type       (Id, Is_Tagged_Type        (T));\n                Set_Last_Entity          (Id, Last_Entity           (T));\n \n+               if Is_Tagged_Type (T) then\n+                  Set_No_Tagged_Streams_Pragma\n+                    (Id, No_Tagged_Streams_Pragma (T));\n+               end if;\n+\n                if Has_Discriminants (T) then\n                   Set_Discriminant_Constraint (Id,\n                                            Discriminant_Constraint (T));\n@@ -4824,6 +4838,11 @@ package body Sem_Ch3 is\n                   Set_Is_Tagged_Type     (Id, Is_Tagged_Type (T));\n                   Set_Private_Dependents (Id, New_Elmt_List);\n \n+                  if Is_Tagged_Type (Id) then\n+                     Set_No_Tagged_Streams_Pragma\n+                       (Id, No_Tagged_Streams_Pragma (T));\n+                  end if;\n+\n                   --  Ada 2005 (AI-412): Decorate an incomplete subtype of an\n                   --  incomplete type visible through a limited with clause.\n \n@@ -8262,11 +8281,16 @@ package body Sem_Ch3 is\n       --  Fields inherited from the Parent_Type\n \n       Set_Has_Specified_Layout\n-        (Derived_Type, Has_Specified_Layout (Parent_Type));\n+        (Derived_Type, Has_Specified_Layout     (Parent_Type));\n       Set_Is_Limited_Composite\n-        (Derived_Type, Is_Limited_Composite (Parent_Type));\n+        (Derived_Type, Is_Limited_Composite     (Parent_Type));\n       Set_Is_Private_Composite\n-        (Derived_Type, Is_Private_Composite (Parent_Type));\n+        (Derived_Type, Is_Private_Composite     (Parent_Type));\n+\n+      if Is_Tagged_Type (Parent_Type) then\n+         Set_No_Tagged_Streams_Pragma\n+           (Derived_Type, No_Tagged_Streams_Pragma (Parent_Type));\n+      end if;\n \n       --  Fields inherited from the Parent_Base\n \n@@ -8287,7 +8311,6 @@ package body Sem_Ch3 is\n       --  Fields inherited from the Parent_Base for record types\n \n       if Is_Record_Type (Derived_Type) then\n-\n          declare\n             Parent_Full : Entity_Id;\n \n@@ -8619,6 +8642,11 @@ package body Sem_Ch3 is\n       Set_Is_Controlled  (Derived_Type, Is_Controlled  (Parent_Type));\n       Set_Is_Tagged_Type (Derived_Type, Is_Tagged_Type (Parent_Type));\n \n+      if Is_Tagged_Type (Derived_Type) then\n+         Set_No_Tagged_Streams_Pragma\n+           (Derived_Type, No_Tagged_Streams_Pragma (Parent_Type));\n+      end if;\n+\n       --  If the parent has primitive routines, set the derived type link\n \n       if Has_Primitive_Operations (Parent_Type) then\n@@ -8629,7 +8657,7 @@ package body Sem_Ch3 is\n       --  type may be set in the private part, and not propagated to the\n       --  subtype until later, so we obtain the convention from the base type.\n \n-      Set_Convention     (Derived_Type, Convention     (Parent_Base));\n+      Set_Convention (Derived_Type, Convention     (Parent_Base));\n \n       --  Set SSO default for record or array type\n \n@@ -9272,6 +9300,7 @@ package body Sem_Ch3 is\n \n       if Is_Tagged_Type (T) then\n          Set_Is_Tagged_Type (Def_Id);\n+         Set_No_Tagged_Streams_Pragma (Def_Id, No_Tagged_Streams_Pragma (T));\n          Make_Class_Wide_Type (Def_Id);\n       end if;\n \n@@ -11437,8 +11466,10 @@ package body Sem_Ch3 is\n \n       if Is_Tagged_Type (Full_Base) then\n          Set_Is_Tagged_Type (Full);\n-         Set_Direct_Primitive_Operations (Full,\n-           Direct_Primitive_Operations (Full_Base));\n+         Set_Direct_Primitive_Operations\n+           (Full, Direct_Primitive_Operations (Full_Base));\n+         Set_No_Tagged_Streams_Pragma\n+           (Full, No_Tagged_Streams_Pragma (Full_Base));\n \n          --  Inherit class_wide type of full_base in case the partial view was\n          --  not tagged. Otherwise it has already been created when the private\n@@ -13265,8 +13296,10 @@ package body Sem_Ch3 is\n       Conditional_Delay              (Full,                          Priv);\n \n       if Is_Tagged_Type (Full) then\n-         Set_Direct_Primitive_Operations (Full,\n-           Direct_Primitive_Operations (Priv));\n+         Set_Direct_Primitive_Operations\n+           (Full, Direct_Primitive_Operations (Priv));\n+         Set_No_Tagged_Streams_Pragma\n+           (Full, No_Tagged_Streams_Pragma (Priv));\n \n          if Is_Base_Type (Priv) then\n             Set_Class_Wide_Type      (Full, Class_Wide_Type         (Priv));\n@@ -17637,11 +17670,13 @@ package body Sem_Ch3 is\n       Set_Default_SSO                 (CW_Type);\n \n       if Ekind (T) = E_Class_Wide_Subtype then\n-         Set_Etype             (CW_Type, Etype (Base_Type (T)));\n+         Set_Etype (CW_Type, Etype (Base_Type (T)));\n       else\n-         Set_Etype             (CW_Type, T);\n+         Set_Etype (CW_Type, T);\n       end if;\n \n+      Set_No_Tagged_Streams_Pragma (CW_Type, No_Tagged_Streams);\n+\n       --  If this is the class_wide type of a constrained subtype, it does\n       --  not have discriminants.\n \n@@ -20527,8 +20562,12 @@ package body Sem_Ch3 is\n            Tagged_Present (Def)\n              or else (Serious_Errors_Detected > 0 and then Is_Tagged_Type (T));\n \n-         Set_Is_Tagged_Type      (T, Is_Tagged);\n-         Set_Is_Limited_Record   (T, Limited_Present (Def));\n+         Set_Is_Limited_Record (T, Limited_Present (Def));\n+\n+         if Is_Tagged then\n+            Set_Is_Tagged_Type (T, True);\n+            Set_No_Tagged_Streams_Pragma (T, No_Tagged_Streams);\n+         end if;\n \n          --  Type is abstract if full declaration carries keyword, or if\n          --  previous partial view did."}, {"sha": "798564c23c0a1fae378d33bc9155caa38d0985cd", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -7851,6 +7851,7 @@ package body Sem_Ch8 is\n       Local_Suppress_Stack_Top := SST.Save_Local_Suppress_Stack_Top;\n       Check_Policy_List        := SST.Save_Check_Policy_List;\n       Default_Pool             := SST.Save_Default_Storage_Pool;\n+      No_Tagged_Streams        := SST.Save_No_Tagged_Streams;\n       SPARK_Mode               := SST.Save_SPARK_Mode;\n       SPARK_Mode_Pragma        := SST.Save_SPARK_Mode_Pragma;\n       Default_SSO              := SST.Save_Default_SSO;\n@@ -7925,6 +7926,7 @@ package body Sem_Ch8 is\n          SST.Save_Local_Suppress_Stack_Top := Local_Suppress_Stack_Top;\n          SST.Save_Check_Policy_List        := Check_Policy_List;\n          SST.Save_Default_Storage_Pool     := Default_Pool;\n+         SST.Save_No_Tagged_Streams        := No_Tagged_Streams;\n          SST.Save_SPARK_Mode               := SPARK_Mode;\n          SST.Save_SPARK_Mode_Pragma        := SPARK_Mode_Pragma;\n          SST.Save_Default_SSO              := Default_SSO;"}, {"sha": "ea028abf06478da07885842fb9e55d5fe26c6fa3", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -16542,6 +16542,58 @@ package body Sem_Prag is\n             Set_Restriction (Max_Tasks, N, 0);\n             Set_Restriction (No_Tasking, N);\n \n+            -----------------------\n+            -- No_Tagged_Streams --\n+            -----------------------\n+\n+            --  pragma No_Tagged_Streams;\n+            --  pragma No_Tagged_Streams ([Entity => ]tagged_type_local_NAME);\n+\n+         when Pragma_No_Tagged_Streams => No_Tagged_Strms : declare\n+            E_Id : Node_Id;\n+            E    : Entity_Id;\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_At_Most_N_Arguments (1);\n+\n+            --  One argument case\n+\n+            if Arg_Count = 1 then\n+               Check_Optional_Identifier (Arg1, Name_Entity);\n+               Check_Arg_Is_Local_Name (Arg1);\n+               E_Id := Get_Pragma_Arg (Arg1);\n+\n+               if Etype (E_Id) = Any_Type then\n+                  return;\n+               end if;\n+\n+               E := Entity (E_Id);\n+\n+               Check_Duplicate_Pragma (E);\n+\n+               if not Is_Tagged_Type (E) or else Is_Derived_Type (E) then\n+                  Error_Pragma_Arg\n+                    (\"argument for pragma% must be root tagged type\", Arg1);\n+               end if;\n+\n+               if Rep_Item_Too_Early (E, N)\n+                    or else\n+                  Rep_Item_Too_Late (E, N)\n+               then\n+                  return;\n+               else\n+                  Set_No_Tagged_Streams_Pragma (E, N);\n+               end if;\n+\n+            --  Zero argument case\n+\n+            else\n+               Check_Is_In_Decl_Part_Or_Package_Spec;\n+               No_Tagged_Streams := N;\n+            end if;\n+         end No_Tagged_Strms;\n+\n          ------------------------\n          -- No_Strict_Aliasing --\n          ------------------------\n@@ -24906,6 +24958,7 @@ package body Sem_Prag is\n       Pragma_No_Inline                      =>  0,\n       Pragma_No_Run_Time                    => -1,\n       Pragma_No_Strict_Aliasing             => -1,\n+      Pragma_No_Tagged_Streams              =>  0,\n       Pragma_Normalize_Scalars              =>  0,\n       Pragma_Obsolescent                    =>  0,\n       Pragma_Optimize                       =>  0,"}, {"sha": "cd68f11376c674cd9b572059f3ea496d4d67e38d", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49d413972612664513ab9b69934359563616b846/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=49d413972612664513ab9b69934359563616b846", "patch": "@@ -408,6 +408,7 @@ package Snames is\n    Name_Loop_Optimize                  : constant Name_Id := N + $; -- GNAT\n    Name_No_Run_Time                    : constant Name_Id := N + $; -- GNAT\n    Name_No_Strict_Aliasing             : constant Name_Id := N + $; -- GNAT\n+   Name_No_Tagged_Streams              : constant Name_Id := N + $; -- GNAT\n    Name_Normalize_Scalars              : constant Name_Id := N + $;\n    Name_Optimize_Alignment             : constant Name_Id := N + $; -- GNAT\n    Name_Overflow_Mode                  : constant Name_Id := N + $; -- GNAT\n@@ -1749,6 +1750,7 @@ package Snames is\n       Pragma_Loop_Optimize,\n       Pragma_No_Run_Time,\n       Pragma_No_Strict_Aliasing,\n+      Pragma_No_Tagged_Streams,\n       Pragma_Normalize_Scalars,\n       Pragma_Optimize_Alignment,\n       Pragma_Overflow_Mode,"}]}