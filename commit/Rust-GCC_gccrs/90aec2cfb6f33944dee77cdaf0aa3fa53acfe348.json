{"sha": "90aec2cfb6f33944dee77cdaf0aa3fa53acfe348", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBhZWMyY2ZiNmYzMzk0NGRlZTc3Y2RhZjBhYTNmYTUzYWNmZTM0OA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-11-19T18:38:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-11-19T18:38:27Z"}, "message": "i386.md (jump): Explicitly set \"memory\" attribute.\n\n        * i386.md (jump): Explicitly set \"memory\" attribute.\n        (indirect_jump, prologue_set_stack_ptr): Likewise.\n        (prologue_get_pc_and_set_got, pop): Likewise.\n        (allocate_stack_worder, blockage, return_internal): Likewise.\n        (return_pop_internal, nop): Likewise.\n        (epilogue_set_stack_ptr, leave): Likewise.\n\nFrom-SVN: r23718", "tree": {"sha": "c6c7a57a8556500860401ed76f3ae2eed428aeb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6c7a57a8556500860401ed76f3ae2eed428aeb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90aec2cfb6f33944dee77cdaf0aa3fa53acfe348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90aec2cfb6f33944dee77cdaf0aa3fa53acfe348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90aec2cfb6f33944dee77cdaf0aa3fa53acfe348", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90aec2cfb6f33944dee77cdaf0aa3fa53acfe348/comments", "author": null, "committer": null, "parents": [{"sha": "233ce013956c03a5edd75851cd314fdb7a255e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233ce013956c03a5edd75851cd314fdb7a255e21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/233ce013956c03a5edd75851cd314fdb7a255e21"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "3e7f3d942f2eeb051464ec525928072890b795ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aec2cfb6f33944dee77cdaf0aa3fa53acfe348/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aec2cfb6f33944dee77cdaf0aa3fa53acfe348/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90aec2cfb6f33944dee77cdaf0aa3fa53acfe348", "patch": "@@ -1,3 +1,12 @@\n+Thu Nov 19 19:34:13 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* i386.md (jump): Explicitly set \"memory\" attribute.\n+\t(indirect_jump, prologue_set_stack_ptr): Likewise.\n+\t(prologue_get_pc_and_set_got, pop): Likewise.\n+\t(allocate_stack_worder, blockage, return_internal): Likewise.\n+\t(return_pop_internal, nop): Likewise.\n+\t(epilogue_set_stack_ptr, leave): Likewise.\n+\n Thu Nov 19 15:42:54 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/coff.h: Set USER_LABEL_PREFIX to \"_\"."}, {"sha": "70d585d3ba8fc21874a95eb056e8e954403121d4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90aec2cfb6f33944dee77cdaf0aa3fa53acfe348/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90aec2cfb6f33944dee77cdaf0aa3fa53acfe348/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=90aec2cfb6f33944dee77cdaf0aa3fa53acfe348", "patch": "@@ -5789,7 +5789,8 @@ byte_xor_operation:\n   [(set (pc)\n \t(label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n-  \"jmp %l0\")\n+  \"jmp %l0\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_insn \"indirect_jump\"\n   [(set (pc) (match_operand:SI 0 \"nonimmediate_operand\" \"rm\"))]\n@@ -5799,7 +5800,8 @@ byte_xor_operation:\n   CC_STATUS_INIT;\n \n   return AS1 (jmp,%*%0);\n-}\")\n+}\"\n+  [(set_attr \"memory\" \"none\")])\n \n ;; ??? could transform while(--i > 0) S; to if (--i > 0) do S; while(--i);\n ;;     if S does not change i\n@@ -6354,7 +6356,8 @@ byte_xor_operation:\n (define_insn \"blockage\"\n   [(unspec_volatile [(const_int 0)] 0)]\n   \"\"\n-  \"\")\n+  \"\"\n+  [(set_attr \"memory\" \"none\")])\n \n ;; Insn emitted into the body of a function to return from a function.\n ;; This is only done if the function's epilogue is known to be simple.\n@@ -6368,18 +6371,21 @@ byte_xor_operation:\n (define_insn \"return_internal\"\n   [(return)]\n   \"reload_completed\"\n-  \"ret\")\n+  \"ret\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_insn \"return_pop_internal\"\n   [(return)\n    (use (match_operand:SI 0 \"const_int_operand\" \"\"))]\n   \"reload_completed\"\n-  \"ret %0\")\n+  \"ret %0\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_insn \"nop\"\n   [(const_int 0)]\n   \"\"\n-  \"nop\")\n+  \"nop\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_expand \"prologue\"\n   [(const_int 1)]\n@@ -6406,7 +6412,8 @@ byte_xor_operation:\n   xops[1] = stack_pointer_rtx;\n   output_asm_insn (AS2 (sub%L1,%0,%1), xops);\n   RET;\n-}\")\n+}\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_insn \"prologue_set_got\"\n   [(set (match_operand:SI 0 \"\" \"\")\n@@ -6446,7 +6453,8 @@ byte_xor_operation:\n       ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (operands[1]));\n     }    \n   RET;\n-}\")\n+}\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_insn \"prologue_get_pc_and_set_got\"\n   [(unspec_volatile [(match_operand:SI 0 \"\" \"\")] 3)]\n@@ -6460,7 +6468,8 @@ byte_xor_operation:\n   output_asm_insn (AS1 (pop%L0,%0), operands);\n   output_asm_insn (\\\"addl $_GLOBAL_OFFSET_TABLE_+[.-%X1],%0\\\", operands);\n   RET;\n-}\")\n+}\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_expand \"epilogue\"\n   [(const_int 1)]\n@@ -6483,14 +6492,16 @@ byte_xor_operation:\n     xops[1] = stack_pointer_rtx;\n     output_asm_insn (AS2 (mov%L0,%0,%1), xops);\n     RET;\n-}\")\n+}\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_insn \"leave\"\n   [(const_int 2)\n       (clobber (reg:SI 6))\n       (clobber (reg:SI 7))]\n   \"\"\n-  \"leave\")\n+  \"leave\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_insn \"pop\"\n   [(set (match_operand:SI 0 \"register_operand\" \"r\")\n@@ -6501,7 +6512,8 @@ byte_xor_operation:\n {\n     output_asm_insn (AS1 (pop%L0,%P0), operands);\n     RET;\n-}\")\n+}\"\n+  [(set_attr \"memory\" \"load\")])\n \n (define_expand \"movstrsi\"\n   [(parallel [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n@@ -7688,7 +7700,8 @@ byte_xor_operation:\n    (set (reg:SI 7) (minus:SI (reg:SI 7) (match_dup 0)))\n    (clobber (match_dup 0))]\n   \"TARGET_STACK_PROBE\"\n-  \"* return AS1(call,__alloca);\")\n+  \"* return AS1(call,__alloca);\"\n+  [(set_attr \"memory\" \"none\")])\n \n (define_expand \"allocate_stack\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")"}]}