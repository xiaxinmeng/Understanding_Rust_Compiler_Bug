{"sha": "e06a584e59c7268af77d09945bd50edd85435295", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA2YTU4NGU1OWM3MjY4YWY3N2QwOTk0NWJkNTBlZGQ4NTQzNTI5NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-02-10T13:54:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-02-10T13:54:58Z"}, "message": "make.adb (Gnatmake): Do not fail when the main project has no object directory.\n\n\t* make.adb (Gnatmake): Do not fail when the main project has no object\n\tdirectory.\n\nFrom-SVN: r94817", "tree": {"sha": "78448b142bdc5bc8be19352cf2033b0be2151249", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78448b142bdc5bc8be19352cf2033b0be2151249"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e06a584e59c7268af77d09945bd50edd85435295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e06a584e59c7268af77d09945bd50edd85435295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e06a584e59c7268af77d09945bd50edd85435295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e06a584e59c7268af77d09945bd50edd85435295/comments", "author": null, "committer": null, "parents": [{"sha": "5f57ad31792778dd585481c39f0deffef3aaa0a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f57ad31792778dd585481c39f0deffef3aaa0a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f57ad31792778dd585481c39f0deffef3aaa0a5"}], "stats": {"total": 94, "additions": 48, "deletions": 46}, "files": [{"sha": "e799e05d8da28065a3d0c5aafde995d475347d1f", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 48, "deletions": 46, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e06a584e59c7268af77d09945bd50edd85435295/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e06a584e59c7268af77d09945bd50edd85435295/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=e06a584e59c7268af77d09945bd50edd85435295", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4079,63 +4079,65 @@ package body Make is\n \n       if Main_Project /= No_Project then\n \n-         if Projects.Table (Main_Project).Object_Directory = No_Name then\n-            Make_Failed (\"no sources to compile\");\n-         end if;\n+         if Projects.Table (Main_Project).Object_Directory /= No_Name then\n \n-         --  Change the current directory to the object directory of the main\n-         --  project.\n+            --  Change the current directory to the object directory of\n+            --  the main project.\n \n-         begin\n-            Project_Object_Directory := No_Project;\n-            Change_To_Object_Directory (Main_Project);\n+            begin\n+               Project_Object_Directory := No_Project;\n+               Change_To_Object_Directory (Main_Project);\n \n-         exception\n-            when Directory_Error =>\n+            exception\n+               when Directory_Error =>\n \n-               --  This should never happen. But, if it does, display the\n-               --  content of the parent directory of the obj dir.\n+                  --  This should never happen. But, if it does, display the\n+                  --  content of the parent directory of the obj dir.\n \n-               declare\n-                  Parent : constant Dir_Name_Str :=\n-                    Dir_Name\n-                      (Get_Name_String\n-                           (Projects.Table (Main_Project).Object_Directory));\n-                  Dir : Dir_Type;\n-                  Str : String (1 .. 200);\n-                  Last : Natural;\n+                  declare\n+                     Parent : constant Dir_Name_Str :=\n+                                Dir_Name\n+                                  (Get_Name_String\n+                                     (Projects.Table\n+                                        (Main_Project).Object_Directory));\n \n-               begin\n-                  Write_Str (\"Contents of directory \"\"\");\n-                  Write_Str (Parent);\n-                  Write_Line (\"\"\":\");\n+                     Dir  : Dir_Type;\n+                     Str  : String (1 .. 200);\n+                     Last : Natural;\n \n-                  Open (Dir, Parent);\n+                  begin\n+                     Write_Str (\"Contents of directory \"\"\");\n+                     Write_Str (Parent);\n+                     Write_Line (\"\"\":\");\n \n-                  loop\n-                     Read (Dir, Str, Last);\n-                     exit when Last = 0;\n-                     Write_Str (\"   \");\n-                     Write_Line (Str (1 .. Last));\n-                  end loop;\n+                     Open (Dir, Parent);\n \n-                  Close (Dir);\n+                     loop\n+                        Read (Dir, Str, Last);\n+                        exit when Last = 0;\n+                        Write_Str (\"   \");\n+                        Write_Line (Str (1 .. Last));\n+                     end loop;\n \n-               exception\n-                  when X : others =>\n-                     Write_Line (\"(unexpected exception)\");\n-                     Write_Line (Exception_Information (X));\n+                     Close (Dir);\n \n-                     if Is_Open (Dir) then\n-                        Close (Dir);\n-                     end if;\n-               end;\n+                  exception\n+                     when X : others =>\n+                        Write_Line (\"(unexpected exception)\");\n+                        Write_Line (Exception_Information (X));\n \n-               Make_Failed (\"unable to change working directory to \"\"\",\n-                            Get_Name_String\n-                             (Projects.Table (Main_Project).Object_Directory),\n-                            \"\"\"\");\n-         end;\n+                        if Is_Open (Dir) then\n+                           Close (Dir);\n+                        end if;\n+                  end;\n+\n+                  Make_Failed\n+                    (\"unable to change working directory to \"\"\",\n+                     Get_Name_String\n+                       (Projects.Table (Main_Project).Object_Directory),\n+                     \"\"\"\");\n+            end;\n+         end if;\n \n          --  Source file lookups should be cached for efficiency.\n          --  Source files are not supposed to change."}]}