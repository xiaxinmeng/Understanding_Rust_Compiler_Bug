{"sha": "b864825e85c6c651d5a7488aa60743ec3781591f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg2NDgyNWU4NWM2YzY1MWQ1YTc0ODhhYTYwNzQzZWMzNzgxNTkxZg==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2000-07-30T08:29:01Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-07-30T08:29:01Z"}, "message": "* config/c4x/c4x.c (c4x_rptb_insert): Make more robust.\n\nFrom-SVN: r35338", "tree": {"sha": "b8264fb6a248d8d15bd97d377c6dbdc3c0fc9870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8264fb6a248d8d15bd97d377c6dbdc3c0fc9870"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b864825e85c6c651d5a7488aa60743ec3781591f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b864825e85c6c651d5a7488aa60743ec3781591f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b864825e85c6c651d5a7488aa60743ec3781591f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b864825e85c6c651d5a7488aa60743ec3781591f/comments", "author": null, "committer": null, "parents": [{"sha": "b61ba1ef516df2f7337a3af0ddcbbbe5f328cb5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b61ba1ef516df2f7337a3af0ddcbbbe5f328cb5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b61ba1ef516df2f7337a3af0ddcbbbe5f328cb5e"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "f8c208286b7fd5b45a4a0a47adc4dd665a7544f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b864825e85c6c651d5a7488aa60743ec3781591f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b864825e85c6c651d5a7488aa60743ec3781591f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b864825e85c6c651d5a7488aa60743ec3781591f", "patch": "@@ -1,5 +1,9 @@\n 2000-07-30  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n-\t\n+\n+\t* config/c4x/c4x.c (c4x_rptb_insert): Make more robust.\n+\n+2000-07-30  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n \t* config/c4x/c4x.h (ASM_FORMAT_PRIVATE_NAME): Output $ in label.\n \n 2000-07-30  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>"}, {"sha": "dcc48ff7873ccca3b4deb1c84ef652539d200eb8", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b864825e85c6c651d5a7488aa60743ec3781591f/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b864825e85c6c651d5a7488aa60743ec3781591f/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=b864825e85c6c651d5a7488aa60743ec3781591f", "patch": "@@ -2214,6 +2214,7 @@ c4x_rptb_insert (insn)\n {\n   rtx end_label;\n   rtx start_label;\n+  rtx new_start_label;\n   rtx count_reg;\n \n   /* If the count register has not been allocated to RC, say if\n@@ -2227,21 +2228,32 @@ c4x_rptb_insert (insn)\n   /* Extract the start label from the jump pattern (rptb_end).  */\n   start_label = XEXP (XEXP (SET_SRC (XVECEXP (PATTERN (insn), 0, 0)), 1), 0);\n   \n-  /* We'll have to update the basic blocks.  */\n   end_label = gen_label_rtx ();\n+  LABEL_NUSES (end_label)++;\n   emit_label_after (end_label, insn);\n \n+  new_start_label = gen_label_rtx ();\n+  LABEL_NUSES (new_start_label)++;\n+\n   for (; insn; insn = PREV_INSN (insn))\n-    if (insn == start_label)\n-      break;\n+    {\n+      if (insn == start_label)\n+\t break;\n+      if (GET_CODE (insn) == JUMP_INSN &&\n+\t  JUMP_LABEL (insn) == start_label)\n+\tredirect_jump (insn, new_start_label, 0);\n+    }\n   if (! insn)\n     fatal_insn (\"c4x_rptb_insert: Cannot find start label\", start_label);\n \n-  /* We'll have to update the basic blocks.  */\n+  emit_label_after (new_start_label, insn);\n+\n   if (TARGET_RPTS && c4x_rptb_rpts_p (PREV_INSN (insn), 0))\n-    emit_insn_before (gen_rpts_top (start_label, end_label), insn);\n+    emit_insn_after (gen_rpts_top (new_start_label, end_label), insn);\n   else\n-    emit_insn_before (gen_rptb_top (start_label, end_label), insn);\n+    emit_insn_after (gen_rptb_top (new_start_label, end_label), insn);\n+  if (LABEL_NUSES (start_label) == 0)\n+    delete_insn (start_label);\n }\n \n "}]}