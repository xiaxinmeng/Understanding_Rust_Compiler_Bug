{"sha": "6342b2c5924b2879cdf1cf566a72a2eccec91390", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM0MmIyYzU5MjRiMjg3OWNkZjFjZjU2NmE3MmEyZWNjZWM5MTM5MA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-11-30T19:03:29Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-11-30T19:03:29Z"}, "message": "lib1funcs.S: Check value of __SHMEDIA__ instead of checking whether it's defined.\n\nlibgcc/\n\t* config/sh/lib1funcs.S: Check value of __SHMEDIA__ instead of checking\n\twhether it's defined.\n\nFrom-SVN: r218190", "tree": {"sha": "295c1cbe62c57515aa6f68b4b06668dac171b45b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/295c1cbe62c57515aa6f68b4b06668dac171b45b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6342b2c5924b2879cdf1cf566a72a2eccec91390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6342b2c5924b2879cdf1cf566a72a2eccec91390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6342b2c5924b2879cdf1cf566a72a2eccec91390", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6342b2c5924b2879cdf1cf566a72a2eccec91390/comments", "author": null, "committer": null, "parents": [{"sha": "565aed1a1e71b105d12e3111d691f813facad986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/565aed1a1e71b105d12e3111d691f813facad986", "html_url": "https://github.com/Rust-GCC/gccrs/commit/565aed1a1e71b105d12e3111d691f813facad986"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "d7a522d5ef1ba0496651e38fd3c8ce66c78c4425", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6342b2c5924b2879cdf1cf566a72a2eccec91390/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6342b2c5924b2879cdf1cf566a72a2eccec91390/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=6342b2c5924b2879cdf1cf566a72a2eccec91390", "patch": "@@ -1,3 +1,8 @@\n+2014-11-30  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/lib1funcs.S: Check value of __SHMEDIA__ instead of checking\n+\twhether it's defined.\n+\n 2014-11-27  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* config/i386/cpuinfo.c (processor_features): Add FEATURE_AVX512F."}, {"sha": "cfd6dc2a2834a1de36cff6abd13386fc7c2caecb", "filename": "libgcc/config/sh/lib1funcs.S", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6342b2c5924b2879cdf1cf566a72a2eccec91390/libgcc%2Fconfig%2Fsh%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6342b2c5924b2879cdf1cf566a72a2eccec91390/libgcc%2Fconfig%2Fsh%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Flib1funcs.S?ref=6342b2c5924b2879cdf1cf566a72a2eccec91390", "patch": "@@ -1278,7 +1278,7 @@ GLOBAL(sdivsi3_2):\n #endif\n \tENDFUNC(GLOBAL(sdivsi3_2))\n #endif\n-#elif defined __SHMEDIA__\n+#elif __SHMEDIA__\n /* m5compact-nofpu */\n  // clobbered: r18,r19,r20,r21,r25,tr0,tr1,tr2\n \t.mode\tSHmedia\n@@ -1683,7 +1683,7 @@ GLOBAL(udivsi3):\n  add.l r18,r25,r0\n  blink tr0,r63\n #endif\n-#elif defined (__SHMEDIA__)\n+#elif __SHMEDIA__\n /* m5compact-nofpu - more emphasis on code size than on speed, but don't\n    ignore speed altogether - div1 needs 9 cycles, subc 7 and rotcl 4.\n    So use a short shmedia loop.  */\n@@ -1707,7 +1707,7 @@ LOCAL(udivsi3_dontsub):\n  bnei r25,-32,tr1\n  add.l r20,r63,r0\n  blink tr2,r63\n-#else /* ! defined (__SHMEDIA__) */\n+#else /* ! __SHMEDIA__ */\n LOCAL(div8):\n  div1 r5,r4\n LOCAL(div7):\n@@ -1773,7 +1773,7 @@ LOCAL(large_divisor):\n #endif /* L_udivsi3 */\n \n #ifdef L_udivdi3\n-#ifdef __SHMEDIA__\n+#if __SHMEDIA__\n \t.mode\tSHmedia\n \t.section\t.text..SHmedia32,\"ax\"\n \t.align\t2\n@@ -1901,7 +1901,7 @@ LOCAL(no_lo_adj):\n #endif /* L_udivdi3 */\n \n #ifdef L_divdi3\n-#ifdef __SHMEDIA__\n+#if __SHMEDIA__\n \t.mode\tSHmedia\n \t.section\t.text..SHmedia32,\"ax\"\n \t.align\t2\n@@ -1925,7 +1925,7 @@ GLOBAL(divdi3):\n #endif /* L_divdi3 */\n \n #ifdef L_umoddi3\n-#ifdef __SHMEDIA__\n+#if __SHMEDIA__\n \t.mode\tSHmedia\n \t.section\t.text..SHmedia32,\"ax\"\n \t.align\t2\n@@ -2054,7 +2054,7 @@ LOCAL(no_lo_adj):\n #endif /* L_umoddi3 */\n \n #ifdef L_moddi3\n-#ifdef __SHMEDIA__\n+#if __SHMEDIA__\n \t.mode\tSHmedia\n \t.section\t.text..SHmedia32,\"ax\"\n \t.align\t2\n@@ -3142,7 +3142,7 @@ GLOBAL(GCC_pop_shmedia_regs_nofpu):\n \n #ifdef L_div_table\n #if __SH5__\n-#if defined(__pic__) && defined(__SHMEDIA__)\n+#if defined(__pic__) && __SHMEDIA__\n \t.global\tGLOBAL(sdivsi3)\n \tFUNC(GLOBAL(sdivsi3))\n #if __SH5__ == 32\n@@ -3215,7 +3215,7 @@ Defects for bias -330:\n #else /* ! __pic__ || ! __SHMEDIA__ */\n \t.section\t.rodata\n #endif /* __pic__ */\n-#if defined(TEXT_DATA_BUG) && defined(__pic__) && defined(__SHMEDIA__)\n+#if defined(TEXT_DATA_BUG) && defined(__pic__) && __SHMEDIA__\n \t.balign 2\n \t.type\tLocal_div_table,@object\n \t.size\tLocal_div_table,128"}]}