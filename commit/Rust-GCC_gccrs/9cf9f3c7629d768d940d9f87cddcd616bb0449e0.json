{"sha": "9cf9f3c7629d768d940d9f87cddcd616bb0449e0", "node_id": "C_kwDOANBUbNoAKDljZjlmM2M3NjI5ZDc2OGQ5NDBkOWY4N2NkZGNkNjE2YmIwNDQ5ZTA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-15T12:57:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-15T12:57:43Z"}, "message": "testsuite: Add support for Rust and Modula-2 effective target tests\n\nThis patch allows magic comments also for Rust and Modula-2\nfor effective target tests etc. and fixes up the Assembly entry\n- it is a glob, so /* Assembly can match /whatever Assembly and\nnot just /* Assembly.\n\nTested on x86_64-linux with\nmake check-g++ RUNTESTFLAGS=i386.exp=pr35513*\nand verifying it still uses *.S extension for the property_1_needed\neffective target test.\n\n2022-12-15  Jakub Jelinek  <jakub@redhat.com>\n\n\t* lib/target-supports.exp (check_compile): Add support for\n\tRust and Modula-2.  Use \\* rather than * for /* comment for\n\tAssembly.", "tree": {"sha": "a05e20b308db44b7aae40d4b71af21e1f961027b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a05e20b308db44b7aae40d4b71af21e1f961027b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cf9f3c7629d768d940d9f87cddcd616bb0449e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf9f3c7629d768d940d9f87cddcd616bb0449e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf9f3c7629d768d940d9f87cddcd616bb0449e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf9f3c7629d768d940d9f87cddcd616bb0449e0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32582c190b91287a0d1239162333f5ad0ac81e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32582c190b91287a0d1239162333f5ad0ac81e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32582c190b91287a0d1239162333f5ad0ac81e72"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "e9867a4529cf4cda2197b67c58fc8e85441d84a1", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cf9f3c7629d768d940d9f87cddcd616bb0449e0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cf9f3c7629d768d940d9f87cddcd616bb0449e0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=9cf9f3c7629d768d940d9f87cddcd616bb0449e0", "patch": "@@ -36,7 +36,9 @@\n # \"! Fortran\" for Fortran code,\n # \"/* ObjC\", for ObjC\n # \"// ObjC++\" for ObjC++\n-# and \"// Go\" for Go\n+# \"// Go\" for Go\n+# \"// Rust\" for Rust\n+# and \"(* Modula-2\" for Modula-2\n # If the tool is ObjC/ObjC++ then we overide the extension to .m/.mm to \n # allow for ObjC/ObjC++ specific flags.\n \n@@ -58,13 +60,15 @@ proc check_compile {basename type contents args} {\n \tset options \"\"\n     }\n     switch -glob -- $contents {\n-\t\"*/* Assembly*\" { set src ${basename}[pid].S }\n+\t\"*/\\* Assembly*\" { set src ${basename}[pid].S }\n \t\"*! Fortran*\" { set src ${basename}[pid].f90 }\n \t\"*// C++*\" { set src ${basename}[pid].cc }\n \t\"*// D*\" { set src ${basename}[pid].d }\n \t\"*// ObjC++*\" { set src ${basename}[pid].mm }\n \t\"*/* ObjC*\" { set src ${basename}[pid].m }\n \t\"*// Go*\" { set src ${basename}[pid].go }\n+\t\"*// Rust*\" { set src ${basename}[pid].rs }\n+\t\"*(\\* Modula-2*\" { set src ${basename}[pid].mod }\n \tdefault {\n \t    switch -- $tool {\n \t\t\"objc\" { set src ${basename}[pid].m }"}]}