{"sha": "91ab2a1d6e137c2eaa6f8f5966b611bca700ef96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFhYjJhMWQ2ZTEzN2MyZWFhNmY4ZjU5NjZiNjExYmNhNzAwZWY5Ng==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2018-10-16T18:32:11Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2018-10-16T18:32:11Z"}, "message": "Handle form_team w/ function args\n\n        PR fortran/87556\n        * trans-stmt.c (form_team, change_team, sync_team):\n        Don't ignore argse.pre/argse.post.\n\nFrom-SVN: r265211", "tree": {"sha": "93de0face33e8641d8622699028847418d7c8095", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93de0face33e8641d8622699028847418d7c8095"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91ab2a1d6e137c2eaa6f8f5966b611bca700ef96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91ab2a1d6e137c2eaa6f8f5966b611bca700ef96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91ab2a1d6e137c2eaa6f8f5966b611bca700ef96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91ab2a1d6e137c2eaa6f8f5966b611bca700ef96/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21cebf90b6547434d1ccb3f09287d02c1e8d2004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21cebf90b6547434d1ccb3f09287d02c1e8d2004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21cebf90b6547434d1ccb3f09287d02c1e8d2004"}], "stats": {"total": 65, "additions": 44, "deletions": 21}, "files": [{"sha": "af57bdeb8ac99db6688758df32a63b4d7edaa898", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91ab2a1d6e137c2eaa6f8f5966b611bca700ef96/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91ab2a1d6e137c2eaa6f8f5966b611bca700ef96/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=91ab2a1d6e137c2eaa6f8f5966b611bca700ef96", "patch": "@@ -1,3 +1,9 @@\n+2018-10-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/87556\n+\t* trans-stmt.c (form_team, change_team, sync_team):\n+\tDon't ignore argse.pre/argse.post.\n+\n 2018-10-15  Paul Thomas  <pault@gcc.gnu.org>\n \tTobias Burnus  <burnus@gcc.gnu.org>\n "}, {"sha": "130e67ba1e446a0aa7c31d231e504ae8e684a564", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 38, "deletions": 21, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91ab2a1d6e137c2eaa6f8f5966b611bca700ef96/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91ab2a1d6e137c2eaa6f8f5966b611bca700ef96/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=91ab2a1d6e137c2eaa6f8f5966b611bca700ef96", "patch": "@@ -707,19 +707,30 @@ gfc_trans_form_team (gfc_code *code)\n {\n   if (flag_coarray == GFC_FCOARRAY_LIB)\n     {\n-      gfc_se argse;\n-      tree team_id,team_type;\n-      gfc_init_se (&argse, NULL);\n-      gfc_conv_expr_val (&argse, code->expr1);\n-      team_id = fold_convert (integer_type_node, argse.expr);\n-      gfc_init_se (&argse, NULL);\n-      gfc_conv_expr_val (&argse, code->expr2);\n-      team_type = gfc_build_addr_expr (ppvoid_type_node, argse.expr);\n+      gfc_se se;\n+      gfc_se argse1, argse2;\n+      tree team_id, team_type, tmp;\n \n-      return build_call_expr_loc (input_location,\n-\t\t\t\t  gfor_fndecl_caf_form_team, 3,\n-\t\t\t\t  team_id, team_type,\n-\t\t\t\t  build_int_cst (integer_type_node, 0));\n+      gfc_init_se (&se, NULL);\n+      gfc_init_se (&argse1, NULL);\n+      gfc_init_se (&argse2, NULL);\n+      gfc_start_block (&se.pre);\n+\n+      gfc_conv_expr_val (&argse1, code->expr1);\n+      gfc_conv_expr_val (&argse2, code->expr2);\n+      team_id = fold_convert (integer_type_node, argse1.expr);\n+      team_type = gfc_build_addr_expr (ppvoid_type_node, argse2.expr);\n+\n+      gfc_add_block_to_block (&se.pre, &argse1.pre);\n+      gfc_add_block_to_block (&se.pre, &argse2.pre);\n+      tmp = build_call_expr_loc (input_location,\n+\t\t\t\t gfor_fndecl_caf_form_team, 3,\n+\t\t\t\t team_id, team_type,\n+\t\t\t\t build_int_cst (integer_type_node, 0));\n+      gfc_add_expr_to_block (&se.pre, tmp);\n+      gfc_add_block_to_block (&se.pre, &argse1.post);\n+      gfc_add_block_to_block (&se.pre, &argse2.post);\n+      return gfc_finish_block (&se.pre);\n     }\n   else\n     {\n@@ -738,15 +749,18 @@ gfc_trans_change_team (gfc_code *code)\n   if (flag_coarray == GFC_FCOARRAY_LIB)\n     {\n       gfc_se argse;\n-      tree team_type;\n+      tree team_type, tmp;\n \n       gfc_init_se (&argse, NULL);\n       gfc_conv_expr_val (&argse, code->expr1);\n       team_type = gfc_build_addr_expr (ppvoid_type_node, argse.expr);\n \n-      return build_call_expr_loc (input_location,\n-\t\t\t\t  gfor_fndecl_caf_change_team, 2, team_type,\n-\t\t\t\t  build_int_cst (integer_type_node, 0));\n+      tmp = build_call_expr_loc (input_location,\n+\t\t\t\t gfor_fndecl_caf_change_team, 2, team_type,\n+\t\t\t\t build_int_cst (integer_type_node, 0));\n+      gfc_add_expr_to_block (&argse.pre, tmp);\n+      gfc_add_block_to_block (&argse.pre, &argse.post);\n+      return gfc_finish_block (&argse.pre);\n     }\n   else\n     {\n@@ -785,16 +799,19 @@ gfc_trans_sync_team (gfc_code *code)\n   if (flag_coarray == GFC_FCOARRAY_LIB)\n     {\n       gfc_se argse;\n-      tree team_type;\n+      tree team_type, tmp;\n \n       gfc_init_se (&argse, NULL);\n       gfc_conv_expr_val (&argse, code->expr1);\n       team_type = gfc_build_addr_expr (ppvoid_type_node, argse.expr);\n \n-      return build_call_expr_loc (input_location,\n-\t\t\t\t  gfor_fndecl_caf_sync_team, 2,\n-\t\t\t\t  team_type,\n-\t\t\t\t  build_int_cst (integer_type_node, 0));\n+      tmp = build_call_expr_loc (input_location,\n+\t\t\t\t gfor_fndecl_caf_sync_team, 2,\n+\t\t\t\t team_type,\n+\t\t\t\t build_int_cst (integer_type_node, 0));\n+      gfc_add_expr_to_block (&argse.pre, tmp);\n+      gfc_add_block_to_block (&argse.pre, &argse.post);\n+      return gfc_finish_block (&argse.pre);\n     }\n   else\n     {"}]}