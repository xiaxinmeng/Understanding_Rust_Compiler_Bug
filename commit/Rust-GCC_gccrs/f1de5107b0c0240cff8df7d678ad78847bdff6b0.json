{"sha": "f1de5107b0c0240cff8df7d678ad78847bdff6b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFkZTUxMDdiMGMwMjQwY2ZmOGRmN2Q2NzhhZDc4ODQ3YmRmZjZiMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-05-17T17:18:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-17T17:18:24Z"}, "message": "re PR middle-end/44102 (ICE with asm goto + __builtin_unreachable () in C++)\n\n\tPR middle-end/44102\n\t* cfgcleanup.c (try_optimize_cfg): When removing trivially empty\n\tbb with no successors, move footer whenever in IR_RTL_CFGLAYOUT\n\tmode, not just when CLEANUP_CFGLAYOUT, and when in IR_RTL_CFGRTL\n\tadd BARRIER after previous bb if needed.\n\n\t* g++.dg/ext/asmgoto1.C: New test.\n\nFrom-SVN: r159495", "tree": {"sha": "853ebe1e37eec54e09a73297268d1cf4b6fd5c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/853ebe1e37eec54e09a73297268d1cf4b6fd5c1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1de5107b0c0240cff8df7d678ad78847bdff6b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1de5107b0c0240cff8df7d678ad78847bdff6b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1de5107b0c0240cff8df7d678ad78847bdff6b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1de5107b0c0240cff8df7d678ad78847bdff6b0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1eabc6beae22790e518ab4657e28fc4823d1bc3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eabc6beae22790e518ab4657e28fc4823d1bc3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eabc6beae22790e518ab4657e28fc4823d1bc3f"}], "stats": {"total": 89, "additions": 75, "deletions": 14}, "files": [{"sha": "eeb5110118ac08b59b1e5883b0ec2a515f5d0ef0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1de5107b0c0240cff8df7d678ad78847bdff6b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1de5107b0c0240cff8df7d678ad78847bdff6b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1de5107b0c0240cff8df7d678ad78847bdff6b0", "patch": "@@ -1,3 +1,11 @@\n+2010-05-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/44102\n+\t* cfgcleanup.c (try_optimize_cfg): When removing trivially empty\n+\tbb with no successors, move footer whenever in IR_RTL_CFGLAYOUT\n+\tmode, not just when CLEANUP_CFGLAYOUT, and when in IR_RTL_CFGRTL\n+\tadd BARRIER after previous bb if needed.\n+\n 2010-05-17  Nathan Froyd  <froydnj@codesourcery.com>\n  \n \t* tree.c (build_function_type_list_1): Remove bogus assert condition."}, {"sha": "7139e3a7bcec6b234f03b7590ffbc2facf459543", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 30, "deletions": 14, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1de5107b0c0240cff8df7d678ad78847bdff6b0/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1de5107b0c0240cff8df7d678ad78847bdff6b0/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=f1de5107b0c0240cff8df7d678ad78847bdff6b0", "patch": "@@ -1999,24 +1999,40 @@ try_optimize_cfg (int mode)\n \t\t      && single_succ_edge (ENTRY_BLOCK_PTR)->dest != b))\n \t\t{\n \t\t  c = b->prev_bb;\n-\t\t  if ((mode & CLEANUP_CFGLAYOUT)\n-\t\t      && EDGE_COUNT (b->preds) > 0\n-\t\t      && b->il.rtl->footer\n-\t\t      && BARRIER_P (b->il.rtl->footer))\n+\t\t  if (EDGE_COUNT (b->preds) > 0)\n \t\t    {\n \t\t      edge e;\n \t\t      edge_iterator ei;\n \n-\t\t      FOR_EACH_EDGE (e, ei, b->preds)\n-\t\t\tif (e->flags & EDGE_FALLTHRU)\n-\t\t\t  {\n-\t\t\t    if (e->src->il.rtl->footer == NULL)\n-\t\t\t      {\n-\t\t\t\te->src->il.rtl->footer = b->il.rtl->footer;\n-\t\t\t\tb->il.rtl->footer = NULL;\n-\t\t\t      }\n-\t\t\t    break;\n-\t\t\t  }\n+\t\t      if (current_ir_type () == IR_RTL_CFGLAYOUT)\n+\t\t\t{\n+\t\t\t  if (b->il.rtl->footer\n+\t\t\t      && BARRIER_P (b->il.rtl->footer))\n+\t\t\t    FOR_EACH_EDGE (e, ei, b->preds)\n+\t\t\t      if ((e->flags & EDGE_FALLTHRU)\n+\t\t\t\t  && e->src->il.rtl->footer == NULL)\n+\t\t\t\t{\n+\t\t\t\t  if (b->il.rtl->footer)\n+\t\t\t\t    {\n+\t\t\t\t      e->src->il.rtl->footer = b->il.rtl->footer;\n+\t\t\t\t      b->il.rtl->footer = NULL;\n+\t\t\t\t    }\n+\t\t\t\t  else\n+\t\t\t\t    {\n+\t\t\t\t      start_sequence ();\n+\t\t\t\t      e->src->il.rtl->footer = emit_barrier ();\n+\t\t\t\t      end_sequence ();\n+\t\t\t\t    }\n+\t\t\t\t}\n+\t\t\t}\n+\t\t      else\n+\t\t\t{\n+\t\t\t  rtx last = get_last_bb_insn (b);\n+\t\t\t  if (last && BARRIER_P (last))\n+\t\t\t    FOR_EACH_EDGE (e, ei, b->preds)\n+\t\t\t      if ((e->flags & EDGE_FALLTHRU))\n+\t\t\t\temit_barrier_after (BB_END (e->src));\n+\t\t\t}\n \t\t    }\n \t\t  delete_basic_block (b);\n \t\t  if (!(mode & CLEANUP_CFGLAYOUT))"}, {"sha": "dfe8de74e4decc1effd1157c0ceaccda9c1df0d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1de5107b0c0240cff8df7d678ad78847bdff6b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1de5107b0c0240cff8df7d678ad78847bdff6b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1de5107b0c0240cff8df7d678ad78847bdff6b0", "patch": "@@ -1,3 +1,8 @@\n+2010-05-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/44102\n+\t* g++.dg/ext/asmgoto1.C: New test.\n+\n 2010-05-17  Martin Jambor  <mjambor@suse.cz>\n \n \tPR middle-end/44133"}, {"sha": "dda51679791a96153d067741b9cef6abd176e0bc", "filename": "gcc/testsuite/g++.dg/ext/asmgoto1.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1de5107b0c0240cff8df7d678ad78847bdff6b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasmgoto1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1de5107b0c0240cff8df7d678ad78847bdff6b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasmgoto1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasmgoto1.C?ref=f1de5107b0c0240cff8df7d678ad78847bdff6b0", "patch": "@@ -0,0 +1,32 @@\n+// PR middle-end/44102\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+void baz (void);\n+struct A { A (); ~A (); };\n+\n+static inline int\n+foo (void)\n+{\n+  asm goto (\"\" : : : : l1, l2);\n+  __builtin_unreachable ();\n+ l1:\n+  return 1;\n+ l2:\n+  return 0;\n+}\n+\n+int\n+bar (int x)\n+{\n+  if (x == 5)\n+    {\n+      A a, b;\n+      baz ();\n+    }\n+  if (foo () || x == 6)\n+    x = 1;\n+  else\n+    x = 2;\n+  return x;\n+}"}]}