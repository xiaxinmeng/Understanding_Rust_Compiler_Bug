{"sha": "ef72faafed9afb201c610dba63a17296829ce9b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3MmZhYWZlZDlhZmIyMDFjNjEwZGJhNjNhMTcyOTY4MjljZTliNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-12-21T08:35:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-12-21T08:35:16Z"}, "message": "re PR middle-end/45852 (volatile structs are broken!)\n\n\tPR middle-end/45852\n\t* expr.c (store_expr): Ignore alt_rtl if equal to target,\n\tbut has side-effects.\n\n\t* gcc.target/i386/pr45852.c: New test.\n\nFrom-SVN: r168105", "tree": {"sha": "4c2830d0ded232e8700d8c5b92786884bddbd587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c2830d0ded232e8700d8c5b92786884bddbd587"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef72faafed9afb201c610dba63a17296829ce9b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef72faafed9afb201c610dba63a17296829ce9b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef72faafed9afb201c610dba63a17296829ce9b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef72faafed9afb201c610dba63a17296829ce9b5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "486b10aa89499699906fecc6630fbdc7b26996b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486b10aa89499699906fecc6630fbdc7b26996b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486b10aa89499699906fecc6630fbdc7b26996b2"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "e71e5110e60e30d9b88572b743b994e25a6316e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef72faafed9afb201c610dba63a17296829ce9b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef72faafed9afb201c610dba63a17296829ce9b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef72faafed9afb201c610dba63a17296829ce9b5", "patch": "@@ -1,3 +1,9 @@\n+2010-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/45852\n+\t* expr.c (store_expr): Ignore alt_rtl if equal to target,\n+\tbut has side-effects.\n+\n 2010-12-21  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/sh/sh.h (PREFERRED_RELOAD_CLASS): Remove."}, {"sha": "cd32f4fd6ad020e81e52528efed94bad0cdb4670", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef72faafed9afb201c610dba63a17296829ce9b5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef72faafed9afb201c610dba63a17296829ce9b5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ef72faafed9afb201c610dba63a17296829ce9b5", "patch": "@@ -4712,7 +4712,10 @@ store_expr (tree exp, rtx target, int call_param_p, bool nontemporal)\n       /* If store_expr stores a DECL whose DECL_RTL(exp) == TARGET,\n \t but TARGET is not valid memory reference, TEMP will differ\n \t from TARGET although it is really the same location.  */\n-      && !(alt_rtl && rtx_equal_p (alt_rtl, target))\n+      && !(alt_rtl\n+\t   && rtx_equal_p (alt_rtl, target)\n+\t   && !side_effects_p (alt_rtl)\n+\t   && !side_effects_p (target))\n       /* If there's nothing to copy, don't bother.  Don't call\n \t expr_size unless necessary, because some front-ends (C++)\n \t expr_size-hook must not be given objects that are not"}, {"sha": "7b97962ddfe3b88f7a3765c79e1ab111354737ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef72faafed9afb201c610dba63a17296829ce9b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef72faafed9afb201c610dba63a17296829ce9b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef72faafed9afb201c610dba63a17296829ce9b5", "patch": "@@ -1,3 +1,8 @@\n+2010-12-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/45852\n+\t* gcc.target/i386/pr45852.c: New test.\n+\n 2010-12-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/46974"}, {"sha": "b0ba0935debd372cbced8506ae9874893547bd9e", "filename": "gcc/testsuite/gcc.target/i386/pr45852.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef72faafed9afb201c610dba63a17296829ce9b5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45852.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef72faafed9afb201c610dba63a17296829ce9b5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45852.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45852.c?ref=ef72faafed9afb201c610dba63a17296829ce9b5", "patch": "@@ -0,0 +1,16 @@\n+/* PR middle-end/45852 */\n+/* { dg-options \"-O2 -mcmodel=small\" } */\n+/* { dg-do compile { target { { i?86-*-linux* x86_64-*-linux* } && lp64 } } } */\n+/* { dg-require-visibility \"\" } */\n+\n+struct S { int s; };\n+\n+volatile struct S globvar __attribute__((visibility (\"hidden\"))) = { -6 };\n+\n+void\n+foo (void)\n+{\n+  globvar = globvar;\n+}\n+\n+/* { dg-final { scan-assembler-times \"globvar.%?rip\" 2 } } */"}]}