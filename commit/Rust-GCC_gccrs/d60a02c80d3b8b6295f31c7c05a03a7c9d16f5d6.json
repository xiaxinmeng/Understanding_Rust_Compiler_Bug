{"sha": "d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwYTAyYzgwZDNiOGI2Mjk1ZjMxYzdjMDVhMDNhN2M5ZDE2ZjVkNg==", "commit": {"author": {"name": "Xiong Hu Luo", "email": "luoxhu@linux.vnet.ibm.com", "date": "2019-02-13T06:31:01Z"}, "committer": {"name": "Xiong Hu Luo", "email": "luoxhu@gcc.gnu.org", "date": "2019-02-13T06:31:01Z"}, "message": "rs6000: Add support for the vec_sbox_be, vec_cipher_be etc. builtins.\n\nThe 5 new builtins vec_sbox_be, vec_cipher_be, vec_cipherlast_be, vec_ncipher_be\nand vec_ncipherlast_be only support vector unsigned char type parameters.\nAdd new instruction crypto_vsbox_<mode> and crypto_<CR_insn>_<mode> to handle\nthem accordingly, where the new mode CR_vqdi can be expanded to vector unsigned\nlong long for none _be postfix builtins or vector unsigned char for _be postfix\nbuiltins.\n\ngcc/ChangeLog\n\n2019-02-13  Xiong Hu Luo  <luoxhu@linux.vnet.ibm.com>\n\n\t* config/rs6000/altivec.h (vec_sbox_be, vec_cipher_be,\n\tvec_cipherlast_be, vec_ncipher_be, vec_ncipherlast_be): New #defines.\n\t* config/rs6000/crypto.md (CR_vqdi): New define_mode_iterator.\n\t(crypto_vsbox_<mode>, crypto_<CR_insn>_<mode>): New define_insns.\n\t* config/rs6000/rs6000-builtin.def (VSBOX_BE): New BU_CRYPTO_1.\n\t(VCIPHER_BE, VCIPHERLAST_BE, VNCIPHER_BE, VNCIPHERLAST_BE):\n\tNew BU_CRYPTO_2.\n\t* config/rs6000/rs6000.c (builtin_function_type)\n\t<CRYPTO_BUILTIN_VSBOX_BE, CRYPTO_BUILTIN_VCIPHER_BE,\n\tCRYPTO_BUILTIN_VCIPHERLAST_BE, CRYPTO_BUILTIN_VNCIPHER_BE,\n\tCRYPTO_BUILTIN_VNCIPHERLAST_BE>: New switch options.\n\t* doc/extend.texi (vec_sbox_be, vec_cipher_be, vec_cipherlast_be,\n\tvec_ncipher_be, vec_ncipherlast_be): New builtin functions.\n\ngcc/testsuite/ChangeLog\n\n2019-02-13  Xiong Hu Luo  <luoxhu@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/crypto-builtin-1.c\n\t(crypto1_be, crypto2_be, crypto3_be, crypto4_be, crypto5_be):\n\tNew testcases.\n\nFrom-SVN: r268834", "tree": {"sha": "5f701419f2027f67914312d13917f53d61c0df22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f701419f2027f67914312d13917f53d61c0df22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/comments", "author": null, "committer": null, "parents": [{"sha": "ce22f324ff13dab95da4ee818dfd700114e48249", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce22f324ff13dab95da4ee818dfd700114e48249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce22f324ff13dab95da4ee818dfd700114e48249"}], "stats": {"total": 119, "additions": 101, "deletions": 18}, "files": [{"sha": "c866e2d6dc93a2adea766dfffd1aa1b979840e17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "patch": "@@ -1,3 +1,19 @@\n+2019-02-13  Xiong Hu Luo  <luoxhu@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/altivec.h (vec_sbox_be, vec_cipher_be,\n+\tvec_cipherlast_be, vec_ncipher_be, vec_ncipherlast_be): New #defines.\n+\t* config/rs6000/crypto.md (CR_vqdi): New define_mode_iterator.\n+\t(crypto_vsbox_<mode>, crypto_<CR_insn>_<mode>): New define_insns.\n+\t* config/rs6000/rs6000-builtin.def (VSBOX_BE): New BU_CRYPTO_1.\n+\t(VCIPHER_BE, VCIPHERLAST_BE, VNCIPHER_BE, VNCIPHERLAST_BE):\n+\tNew BU_CRYPTO_2.\n+\t* config/rs6000/rs6000.c (builtin_function_type)\n+\t<CRYPTO_BUILTIN_VSBOX_BE, CRYPTO_BUILTIN_VCIPHER_BE,\n+\tCRYPTO_BUILTIN_VCIPHERLAST_BE, CRYPTO_BUILTIN_VNCIPHER_BE,\n+\tCRYPTO_BUILTIN_VNCIPHERLAST_BE>: New switch options.\n+\t* doc/extend.texi (vec_sbox_be, vec_cipher_be, vec_cipherlast_be,\n+\tvec_ncipher_be, vec_ncipherlast_be): New builtin functions.\n+\n 2019-02-12  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* doc/invoke.texi (RS/6000 and PowerPC Options): Remove duplicate"}, {"sha": "d66ae7ca2c73ea4a6ef44914828661d362e31464", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "patch": "@@ -418,6 +418,11 @@\n #define vec_vupkhsw __builtin_vec_vupkhsw\n #define vec_vupklsw __builtin_vec_vupklsw\n #define vec_revb __builtin_vec_revb\n+#define vec_sbox_be __builtin_crypto_vsbox_be\n+#define vec_cipher_be __builtin_crypto_vcipher_be\n+#define vec_cipherlast_be __builtin_crypto_vcipherlast_be\n+#define vec_ncipher_be __builtin_crypto_vncipher_be\n+#define vec_ncipherlast_be __builtin_crypto_vncipherlast_be\n #endif\n \n #ifdef __POWER9_VECTOR__"}, {"sha": "b9917b08d984574424398c2be3ee71e685260e62", "filename": "gcc/config/rs6000/crypto.md", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fconfig%2Frs6000%2Fcrypto.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fconfig%2Frs6000%2Fcrypto.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcrypto.md?ref=d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "patch": "@@ -48,6 +48,9 @@\n ;; Iterator for VSHASIGMAD/VSHASIGMAW\n (define_mode_iterator CR_hash [V4SI V2DI])\n \n+;; Iterator for VSBOX/VCIPHER/VNCIPHER/VCIPHERLAST/VNCIPHERLAST\n+(define_mode_iterator CR_vqdi [V16QI V2DI])\n+\n ;; Iterator for the other crypto functions\n (define_int_iterator CR_code   [UNSPEC_VCIPHER\n \t\t\t\tUNSPEC_VNCIPHER\n@@ -60,10 +63,10 @@\n \t\t\t  (UNSPEC_VNCIPHERLAST \"vncipherlast\")])\n \n ;; 2 operand crypto instructions\n-(define_insn \"crypto_<CR_insn>\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V2DI 2 \"register_operand\" \"v\")]\n+(define_insn \"crypto_<CR_insn>_<mode>\"\n+  [(set (match_operand:CR_vqdi 0 \"register_operand\" \"=v\")\n+\t(unspec:CR_vqdi [(match_operand:CR_vqdi 1 \"register_operand\" \"v\")\n+\t\t      (match_operand:CR_vqdi 2 \"register_operand\" \"v\")]\n \t\t     CR_code))]\n   \"TARGET_CRYPTO\"\n   \"<CR_insn> %0,%1,%2\"\n@@ -90,9 +93,9 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n ;; 1 operand crypto instruction\n-(define_insn \"crypto_vsbox\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"v\")]\n+(define_insn \"crypto_vsbox_<mode>\"\n+  [(set (match_operand:CR_vqdi 0 \"register_operand\" \"=v\")\n+\t(unspec:CR_vqdi [(match_operand:CR_vqdi 1 \"register_operand\" \"v\")]\n \t\t     UNSPEC_VSBOX))]\n   \"TARGET_CRYPTO\"\n   \"vsbox %0,%1\""}, {"sha": "0a2bdb79e15c638b4cd9cef3c9632eb0f2a76cf3", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "patch": "@@ -2418,13 +2418,22 @@ BU_P9_OVERLOAD_2 (CMPRB2,\t\"byte_in_either_range\")\n BU_P9_OVERLOAD_2 (CMPEQB,\t\"byte_in_set\")\n \f\n /* 1 argument crypto functions.  */\n-BU_CRYPTO_1 (VSBOX,\t\t\"vsbox\",\t  CONST, crypto_vsbox)\n+BU_CRYPTO_1 (VSBOX,\t\t\"vsbox\",\t  CONST, crypto_vsbox_v2di)\n+BU_CRYPTO_1 (VSBOX_BE,\t\t\"vsbox_be\",\t  CONST, crypto_vsbox_v16qi)\n \n /* 2 argument crypto functions.  */\n-BU_CRYPTO_2 (VCIPHER,\t\t\"vcipher\",\t  CONST, crypto_vcipher)\n-BU_CRYPTO_2 (VCIPHERLAST,\t\"vcipherlast\",\t  CONST, crypto_vcipherlast)\n-BU_CRYPTO_2 (VNCIPHER,\t\t\"vncipher\",\t  CONST, crypto_vncipher)\n-BU_CRYPTO_2 (VNCIPHERLAST,\t\"vncipherlast\",\t  CONST, crypto_vncipherlast)\n+BU_CRYPTO_2 (VCIPHER,\t\t\"vcipher\",\t  CONST, crypto_vcipher_v2di)\n+BU_CRYPTO_2 (VCIPHER_BE,\t\"vcipher_be\",\t  CONST, crypto_vcipher_v16qi)\n+BU_CRYPTO_2 (VCIPHERLAST,\t\"vcipherlast\",\n+\t     CONST, crypto_vcipherlast_v2di)\n+BU_CRYPTO_2 (VCIPHERLAST_BE,\t\"vcipherlast_be\",\n+\t     CONST, crypto_vcipherlast_v16qi)\n+BU_CRYPTO_2 (VNCIPHER,\t\t\"vncipher\",\t  CONST, crypto_vncipher_v2di)\n+BU_CRYPTO_2 (VNCIPHER_BE,\t\"vncipher_be\",\t  CONST, crypto_vncipher_v16qi)\n+BU_CRYPTO_2 (VNCIPHERLAST,\t\"vncipherlast\",\n+\t     CONST, crypto_vncipherlast_v2di)\n+BU_CRYPTO_2 (VNCIPHERLAST_BE,\t\"vncipherlast_be\",\n+\t     CONST, crypto_vncipherlast_v16qi)\n BU_CRYPTO_2A (VPMSUMB,\t\t\"vpmsumb\",\t  CONST, crypto_vpmsumb)\n BU_CRYPTO_2A (VPMSUMH,\t\t\"vpmsumh\",\t  CONST, crypto_vpmsumh)\n BU_CRYPTO_2A (VPMSUMW,\t\t\"vpmsumw\",\t  CONST, crypto_vpmsumw)"}, {"sha": "aea7925d4cfab670e978e79673a19c7ce1880d7b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "patch": "@@ -17687,6 +17687,7 @@ builtin_function_type (machine_mode mode_ret, machine_mode mode_arg0,\n     {\n     /* unsigned 1 argument functions.  */\n     case CRYPTO_BUILTIN_VSBOX:\n+    case CRYPTO_BUILTIN_VSBOX_BE:\n     case P8V_BUILTIN_VGBBD:\n     case MISC_BUILTIN_CDTBCD:\n     case MISC_BUILTIN_CBCDTD:\n@@ -17702,9 +17703,13 @@ builtin_function_type (machine_mode mode_ret, machine_mode mode_arg0,\n     case ALTIVEC_BUILTIN_VMULOUH:\n     case P8V_BUILTIN_VMULOUW:\n     case CRYPTO_BUILTIN_VCIPHER:\n+    case CRYPTO_BUILTIN_VCIPHER_BE:\n     case CRYPTO_BUILTIN_VCIPHERLAST:\n+    case CRYPTO_BUILTIN_VCIPHERLAST_BE:\n     case CRYPTO_BUILTIN_VNCIPHER:\n+    case CRYPTO_BUILTIN_VNCIPHER_BE:\n     case CRYPTO_BUILTIN_VNCIPHERLAST:\n+    case CRYPTO_BUILTIN_VNCIPHERLAST_BE:\n     case CRYPTO_BUILTIN_VPMSUMB:\n     case CRYPTO_BUILTIN_VPMSUMH:\n     case CRYPTO_BUILTIN_VPMSUMW:"}, {"sha": "e7af5a6aa53a88924c6a157973d41ae6aa68247f", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "patch": "@@ -20136,19 +20136,32 @@ If the cryptographic instructions are enabled (@option{-mcrypto} or\n @smallexample\n vector unsigned long long __builtin_crypto_vsbox (vector unsigned long long);\n \n+vector unsigned char vec_sbox_be (vector unsigned char);\n+\n vector unsigned long long __builtin_crypto_vcipher (vector unsigned long long,\n                                                     vector unsigned long long);\n \n+vector unsigned char vec_cipher_be (vector unsigned char, vector unsigned char);\n+\n vector unsigned long long __builtin_crypto_vcipherlast\n                                      (vector unsigned long long,\n                                       vector unsigned long long);\n \n+vector unsigned char vec_cipherlast_be (vector unsigned char,\n+                                        vector unsigned char);\n+\n vector unsigned long long __builtin_crypto_vncipher (vector unsigned long long,\n                                                      vector unsigned long long);\n \n+vector unsigned char vec_ncipher_be (vector unsigned char,\n+                                     vector unsigned char);\n+\n vector unsigned long long __builtin_crypto_vncipherlast (vector unsigned long long,\n                                                          vector unsigned long long);\n \n+vector unsigned char vec_ncipherlast_be (vector unsigned char,\n+                                         vector unsigned char);\n+\n vector unsigned char __builtin_crypto_vpermxor (vector unsigned char,\n                                                 vector unsigned char,\n                                                 vector unsigned char);"}, {"sha": "43d84f68b49ed3084d2f3663feb9a6f14be600f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "patch": "@@ -1,3 +1,9 @@\n+2019-01-23  Xiong Hu Luo  <luoxhu@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/crypto-builtin-1.c\n+\t(crypto1_be, crypto2_be, crypto3_be, crypto4_be, crypto5_be):\n+\tNew testcases.\n+\n 2019-02-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89229"}, {"sha": "38245ffc3702cc089bfbd484d87ec4710034c5a4", "filename": "gcc/testsuite/gcc.target/powerpc/crypto-builtin-1.c", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-1.c?ref=d60a02c80d3b8b6295f31c7c05a03a7c9d16f5d6", "patch": "@@ -4,37 +4,63 @@\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n /* { dg-options \"-mcpu=power8 -O2 -ftree-vectorize -fvect-cost-model=dynamic -fno-unroll-loops -fno-unroll-all-loops\" } */\n \n+#include <altivec.h>\n typedef vector unsigned long long\tcrypto_t;\n typedef vector unsigned long long\tv2di_t;\n typedef vector unsigned int\t\tv4si_t;\n typedef vector unsigned short\t\tv8hi_t;\n typedef vector unsigned char\t\tv16qi_t;\n \n-crypto_t crpyto1 (crypto_t a)\n+crypto_t crypto1 (crypto_t a)\n {\n   return __builtin_crypto_vsbox (a);\n }\n \n+v16qi_t crypto1_be (v16qi_t a)\n+{\n+  return vec_sbox_be (a);\n+}\n+\n crypto_t crypto2 (crypto_t a, crypto_t b)\n {\n   return __builtin_crypto_vcipher (a, b);\n }\n \n+v16qi_t crypto2_be (v16qi_t a, v16qi_t b)\n+{\n+  return vec_cipher_be (a, b);\n+}\n+\n crypto_t crypto3 (crypto_t a, crypto_t b)\n {\n   return __builtin_crypto_vcipherlast (a, b);\n }\n \n+v16qi_t crypto3_be (v16qi_t a, v16qi_t b)\n+{\n+  return vec_cipherlast_be (a, b);\n+}\n+\n crypto_t crypto4 (crypto_t a, crypto_t b)\n {\n   return __builtin_crypto_vncipher (a, b);\n }\n \n+v16qi_t crypto4_be (v16qi_t a, v16qi_t b)\n+{\n+  return vec_ncipher_be (a, b);\n+}\n+\n crypto_t crypto5 (crypto_t a, crypto_t b)\n {\n   return __builtin_crypto_vncipherlast (a, b);\n }\n \n+v16qi_t crypto5_be (v16qi_t a, v16qi_t b)\n+{\n+  return vec_ncipherlast_be (a, b);\n+}\n+\n v16qi_t crypto6a (v16qi_t a, v16qi_t b, v16qi_t c)\n {\n   return __builtin_crypto_vpermxor (a, b, c);\n@@ -117,15 +143,15 @@ v4si_t crypto8d (v4si_t a)\n \n /* Note space is used after the instruction so that vcipherlast does not match\n    vcipher.  */\n-/* { dg-final { scan-assembler-times \"vcipher \"      1 } } */\n-/* { dg-final { scan-assembler-times \"vcipherlast \"  1 } } */\n-/* { dg-final { scan-assembler-times \"vncipher \"     1 } } */\n-/* { dg-final { scan-assembler-times \"vncipherlast \" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcipher \"      2 } } */\n+/* { dg-final { scan-assembler-times \"vcipherlast \"  2 } } */\n+/* { dg-final { scan-assembler-times \"vncipher \"     2 } } */\n+/* { dg-final { scan-assembler-times \"vncipherlast \" 2 } } */\n /* { dg-final { scan-assembler-times \"vpermxor \"     4 } } */\n /* { dg-final { scan-assembler-times \"vpmsumb \"      2 } } */\n /* { dg-final { scan-assembler-times \"vpmsumd \"      2 } } */\n /* { dg-final { scan-assembler-times \"vpmsumh \"      2 } } */\n /* { dg-final { scan-assembler-times \"vpmsumw \"      2 } } */\n-/* { dg-final { scan-assembler-times \"vsbox \"        1 } } */\n+/* { dg-final { scan-assembler-times \"vsbox \"        2 } } */\n /* { dg-final { scan-assembler-times \"vshasigmad \"   2 } } */\n /* { dg-final { scan-assembler-times \"vshasigmaw \"   2 } } */"}]}