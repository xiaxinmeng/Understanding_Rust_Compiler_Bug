{"sha": "125f02edbd9384baf312f2bb0bbbcf435a65cd18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI1ZjAyZWRiZDkzODRiYWYzMTJmMmJiMGJiYmNmNDM1YTY1Y2QxOA==", "commit": {"author": {"name": "Senthil Kumar Selvaraj", "email": "senthil_kumar.selvaraj@atmel.com", "date": "2016-05-25T19:51:49Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2016-05-25T19:51:49Z"}, "message": "Wduplicated-cond-1.c: Use smaller const literal.\n\n2016-05-25  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n\n\t* c-c++-common/Wduplicated-cond-1.c: Use smaller const literal.\n\t* c-c++-common/pr60226.c: Require int32plus.\n\t* gcc.c-torture/execute/pr70602.c: Likewise.\n\t* gcc.dg/Warray-bounds-11.c: Use __SIZE_TYPE__ instead of\n\tunsigned long for malloc arg type.\n\t* gcc.dg/asr_div1.c: Require int32plus.\n\t* gcc.dg/enum-mode-1.c: XFAIL for int16.\n\t* gcc.dg/pie-1.c: Require pie.\n\t* gcc.dg/pie-2.c: Likewise.\n\t* gcc.dg/pr59471.c: Require int32plus.\n\t* gcc.dg/pr59963-2.c: XFAIL for int16.\n\t* gcc.dg/pr60114.c: Require int32plus.\n\t* gcc.dg/pr62090-2.c: Use __SIZE_TYPE__ instead of\n\tunsigned long for typedef of size_t.\n\t* gcc.dg/pr63914.c: Require int32plus.\n\t* gcc.dg/pr64536.c: Require pt32plus.\n\t* gcc.dg/pr65658.c: Likewise.\n\t* gcc.dg/pr67271.c: Require int32plus.\n\t* gcc.dg/pr68112.c: Likewise.\n\t* gcc.dg/pr69071.c: Skip for avr target.\n\t* gcc.dg/pr69973.c: Require int32plus.\n\t* gcc.dg/pr70169.c: Skip for avr target.\n\t* gcc.dg/sso-6.c: Require int32plus.\n\t* gcc.dg/sso-7.c: Likewise.\n\t* gcc.dg/sso-8.c: Likewise.\n\t* gcc.dg/vrp-min-max-2.c: Likewise.\n\nFrom-SVN: r236741", "tree": {"sha": "3c4dca140a7a30c949e747bfa8ac14cb222aa9b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c4dca140a7a30c949e747bfa8ac14cb222aa9b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/125f02edbd9384baf312f2bb0bbbcf435a65cd18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125f02edbd9384baf312f2bb0bbbcf435a65cd18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/125f02edbd9384baf312f2bb0bbbcf435a65cd18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125f02edbd9384baf312f2bb0bbbcf435a65cd18/comments", "author": null, "committer": null, "parents": [{"sha": "c6e434f5b73538b766aed99c2d33a46f6e547006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e434f5b73538b766aed99c2d33a46f6e547006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6e434f5b73538b766aed99c2d33a46f6e547006"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "f89efd337885543fd205bb20061a2b7a58077e02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,3 +1,32 @@\n+2016-05-25  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n+\n+\t* c-c++-common/Wduplicated-cond-1.c: Use smaller const literal.\n+\t* c-c++-common/pr60226.c: Require int32plus.\n+\t* gcc.c-torture/execute/pr70602.c: Likewise.\n+\t* gcc.dg/Warray-bounds-11.c: Use __SIZE_TYPE__ instead of\n+\tunsigned long for malloc arg type.\n+\t* gcc.dg/asr_div1.c: Require int32plus.\n+\t* gcc.dg/enum-mode-1.c: XFAIL for int16.\n+\t* gcc.dg/pie-1.c: Require pie.\n+\t* gcc.dg/pie-2.c: Likewise.\n+\t* gcc.dg/pr59471.c: Require int32plus.\n+\t* gcc.dg/pr59963-2.c: XFAIL for int16.\n+\t* gcc.dg/pr60114.c: Require int32plus.\n+\t* gcc.dg/pr62090-2.c: Use __SIZE_TYPE__ instead of\n+\tunsigned long for typedef of size_t.\n+\t* gcc.dg/pr63914.c: Require int32plus.\n+\t* gcc.dg/pr64536.c: Require pt32plus.\n+\t* gcc.dg/pr65658.c: Likewise.\n+\t* gcc.dg/pr67271.c: Require int32plus.\n+\t* gcc.dg/pr68112.c: Likewise.\n+\t* gcc.dg/pr69071.c: Skip for avr target.\n+\t* gcc.dg/pr69973.c: Require int32plus.\n+\t* gcc.dg/pr70169.c: Skip for avr target.\n+\t* gcc.dg/sso-6.c: Require int32plus.\n+\t* gcc.dg/sso-7.c: Likewise.\n+\t* gcc.dg/sso-8.c: Likewise.\n+\t* gcc.dg/vrp-min-max-2.c: Likewise.\n+\n 2016-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/70738"}, {"sha": "179c4194da7de7abeebdb21e6b7482fd1dd65b5e", "filename": "gcc/testsuite/c-c++-common/Wduplicated-cond-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWduplicated-cond-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWduplicated-cond-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWduplicated-cond-1.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -183,7 +183,7 @@ int\n fn10 (void)\n {\n   if (foo ())\n-    return 1732984;\n+    return 17329;\n   else if (foo ())\n     return 18409;\n   return 0;"}, {"sha": "aeb132b849860681a770af5cf15754cb400dc6eb", "filename": "gcc/testsuite/c-c++-common/pr60226.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60226.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60226.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60226.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,6 +1,7 @@\n /* PR c/60226 */\n /* { dg-do compile } */\n /* { dg-options \"-Wno-c++-compat\" { target c } } */\n+/* { dg-require-effective-target int32plus } */\n \n typedef int __attribute__ ((aligned (1 << 28))) int28;\n int28 foo[4] = {}; /* { dg-error \"alignment of array elements is greater than element size\" } */"}, {"sha": "4a931fc4b74326e30181d0a9b7d352a4ee20e238", "filename": "gcc/testsuite/gcc.c-torture/execute/pr70602.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70602.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70602.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70602.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/70602 */\n+/* { dg-require-effective-target int32plus } */\n \n struct __attribute__((packed)) S\n {"}, {"sha": "089fa00f35ade7f23e85d77c8f04e6e415c25d8e", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-11.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -Warray-bounds=2\" } */\n \n-extern void* malloc(unsigned long x);\n+typedef __SIZE_TYPE__ size_t;\n+extern void* malloc(size_t x);\n \n int e[3];\n "}, {"sha": "bf374b82c3fc0d3a6ee1748b4e9a2bee2b71d7d9", "filename": "gcc/testsuite/gcc.dg/asr_div1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fasr_div1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fasr_div1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasr_div1.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,6 +1,7 @@\n /* Test division by const int generates only one shift.  */\n /* { dg-do run } */\n /* { dg-options \"-O2 -fdump-rtl-combine-all\" } */\n+/* { dg-require-effective-target int32plus } */\n \n extern void abort (void);\n "}, {"sha": "09276b7fac005fd677152d8d0caa1785432f5d26", "filename": "gcc/testsuite/gcc.dg/enum-mode-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-mode-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-mode-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fenum-mode-1.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -6,5 +6,5 @@ enum e2 { B = 256 } __attribute__((__packed__, __mode__(__byte__))); /* { dg-err\n enum e3 { C = __INT_MAX__ } __attribute__((__mode__(__QI__))); /* { dg-error \"specified mode too small for enumeral values\" } */\n enum e4 { D = __INT_MAX__ } __attribute__((__packed__, __mode__(__QI__))); /* { dg-error \"specified mode too small for enumeral values\" } */\n \n-enum e5 { E = __INT_MAX__ } __attribute__((__mode__(__HI__))); /* { dg-error \"specified mode too small for enumeral values\" } */\n-enum e6 { F = __INT_MAX__ } __attribute__((__packed__, __mode__(__HI__))); /* { dg-error \"specified mode too small for enumeral values\" } */\n+enum e5 { E = __INT_MAX__ } __attribute__((__mode__(__HI__))); /* { dg-error \"specified mode too small for enumeral values\" \"\" { xfail int16 } } */\n+enum e6 { F = __INT_MAX__ } __attribute__((__packed__, __mode__(__HI__))); /* { dg-error \"specified mode too small for enumeral values\" \"\" { xfail int16 } } */"}, {"sha": "3f6e3716682ee6a43b3c9f0a441cffc6bc2d6b9a", "filename": "gcc/testsuite/gcc.dg/pie-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-1.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile { target { ! { *-*-darwin* hppa*-*-* } } } } */\n /* { dg-options \"-fpie\" } */\n+/* { dg-require-effective-target pie } */\n \n #if __PIC__ != 1\n # error __PIC__ is not 1!"}, {"sha": "7bdc4ac622dd65e70ebd9f93ef34a1c275edae85", "filename": "gcc/testsuite/gcc.dg/pie-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpie-2.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-fPIE\" } */\n+/* { dg-require-effective-target pie } */\n \n #if __PIC__ != 2\n # error __PIC__ is not 2!"}, {"sha": "bb27fbe3395bd22fe84f589aac585a8f2d977aef", "filename": "gcc/testsuite/gcc.dg/pr59471.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59471.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59471.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59471.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target int32plus } */\n \n typedef unsigned char uint8x4_t\n __attribute__ ((__vector_size__ (4)));"}, {"sha": "6e0a6d62816e7fa8fe30e02dfcc49e278a0e944e", "filename": "gcc/testsuite/gcc.dg/pr59963-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59963-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59963-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59963-2.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -32,5 +32,5 @@ foo (int i)\n \t      -7, /* { dg-warning \"8:negative integer implicitly converted to unsigned type\" } */\n \t       -8); /* { dg-warning \"9:negative integer implicitly converted to unsigned type\" } */\n   bazu (i, i); /* { dg-warning \"9:conversion\" } */\n-  bazi (0x8, 0x80000000); /* { dg-warning \"14:conversion of unsigned constant value to negative integer\" } */\n+  bazi (0x8, 0x80000000); /* { dg-warning \"14:conversion of unsigned constant value to negative integer\" \"\" { xfail int16 } } */\n }"}, {"sha": "a2db9c9480c8fa3cb473adc14b1525890c67f0a9", "filename": "gcc/testsuite/gcc.dg/pr60114.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60114.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60114.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60114.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,6 +1,7 @@\n /* PR c/60114 */\n /* { dg-do compile } */\n /* { dg-options \"-Wconversion\" } */\n+/* { dg-require-effective-target int32plus } */\n \n struct S { int n, u[2]; };\n const signed char z[] = {"}, {"sha": "af82edeb4e8190b9b6d6aa3dbd844458da211929", "filename": "gcc/testsuite/gcc.dg/pr62090-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62090-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62090-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr62090-2.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-typedef long unsigned int size_t;\n+typedef __SIZE_TYPE__ size_t;\n extern __inline __attribute__ ((__always_inline__))\n __attribute__ ((__gnu_inline__)) int\n snprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, ...)"}, {"sha": "df8f537b29f3c0e42a40082eebb96c937f2d763c", "filename": "gcc/testsuite/gcc.dg/pr63914.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63914.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63914.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63914.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -3,6 +3,7 @@\n /* { dg-prune-output \"non-standard ABI extension\" } */\n /* { dg-additional-options \"-fno-common\" { target hppa*-*-hpux* } } */\n /* { dg-additional-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-require-effective-target int32plus } */\n \n typedef float __m128 __attribute__ ((__vector_size__ (16)));\n __m128 a, d, e;"}, {"sha": "f2728fbc938153724fb41bced97724c46c50e21f", "filename": "gcc/testsuite/gcc.dg/pr64536.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64536.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64536.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64536.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do link } */\n /* { dg-options \"-O2\" } */\n /* { dg-additional-options \"-fPIC\" { target fpic } } */\n+/* { dg-require-effective-target ptr32plus } */\n \n struct S { long q; } *h;\n long a, b, g, j, k, *c, *d, *e, *f, *i;"}, {"sha": "bb5c37adbe321da1eaa0ebfe92f21de1d7a394e1", "filename": "gcc/testsuite/gcc.dg/pr65658.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65658.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65658.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65658.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wuninitialized -O2 -Wno-implicit\" } */\n+/* { dg-require-effective-target ptr32plus } */\n \n extern int optind;\n struct undefinfo"}, {"sha": "977e25317924aa117b4ca3739105294273f2baf0", "filename": "gcc/testsuite/gcc.dg/pr67271.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67271.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67271.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67271.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O\" } */\n+/* { dg-require-effective-target int32plus } */\n \n extern long int labs (long int j);\n int"}, {"sha": "9c7a59c650e68ecd363e3144a78686a71cc032f7", "filename": "gcc/testsuite/gcc.dg/pr68112.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68112.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68112.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68112.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -Waggressive-loop-optimizations\" } */\n+/* { dg-require-effective-target int32plus } */\n \n int *a;\n "}, {"sha": "0396bbc70e209cd87827fee152e85066c4aca437", "filename": "gcc/testsuite/gcc.dg/pr69071.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69071.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69071.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69071.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,6 +1,7 @@\n /* PR target/69071 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -g\" } */\n+/* { dg-skip-if \"Array too big\" { \"avr-*-*\" } } */\n \n void *bar (void *);\n "}, {"sha": "86989548ed737ff53603777b62cfe7326589146e", "filename": "gcc/testsuite/gcc.dg/pr69973.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69973.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69973.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69973.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,2 +1,3 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target int32plus } */\n typedef int v4si __attribute__ ((vector_size (1 << 29)));"}, {"sha": "41381e721e6f3522862965d9e22539c5536c29c6", "filename": "gcc/testsuite/gcc.dg/pr70169.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70169.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70169.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70169.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,6 +1,7 @@\n /* PR tree-optimization/70169 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fno-strict-aliasing -fno-tree-dce\" } */\n+/* { dg-skip-if \"Program and data reside in different address spaces\" { \"avr-*-*\" } } */\n \n int printf (const char *, ...); \n "}, {"sha": "e955fa93686f599adf625159e04fb87fc8cc89a2", "filename": "gcc/testsuite/gcc.dg/sso-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-6.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,6 +1,7 @@\n /* Test support of scalar_storage_order pragma */\n \n /* { dg-do run } */\n+/* { dg-require-effective-target int32plus } */\n \n #pragma scalar_storage_order /* { dg-warning \"missing .big-endian.little-endian.default.\" } */\n "}, {"sha": "51902ab0e28d1ad72d4dd6c18e4eb8a8b0b3d17c", "filename": "gcc/testsuite/gcc.dg/sso-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-7.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -2,6 +2,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-fsso-struct=big-endian\" } */\n+/* { dg-require-effective-target int32plus } */\n \n struct S1\n {"}, {"sha": "5148188485fe4241eac90a422c967886d1cb3adc", "filename": "gcc/testsuite/gcc.dg/sso-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-8.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -2,6 +2,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-fsso-struct=little-endian\" } */\n+/* { dg-require-effective-target int32plus } */\n \n struct S1\n {"}, {"sha": "393608888230e1fd362f34d961126c039912d6fd", "filename": "gcc/testsuite/gcc.dg/vrp-min-max-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125f02edbd9384baf312f2bb0bbbcf435a65cd18/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-2.c?ref=125f02edbd9384baf312f2bb0bbbcf435a65cd18", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-vrp2\" } */\n+/* { dg-require-effective-target int32plus } */\n \n int Foo (int X)\n {"}]}