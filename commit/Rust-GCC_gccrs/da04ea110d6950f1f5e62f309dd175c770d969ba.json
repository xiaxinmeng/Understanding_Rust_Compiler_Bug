{"sha": "da04ea110d6950f1f5e62f309dd175c770d969ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEwNGVhMTEwZDY5NTBmMWY1ZTYyZjMwOWRkMTc1Yzc3MGQ5NjliYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-11-04T14:03:50Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-11-04T14:03:50Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r193134", "tree": {"sha": "f5811af0a22ef45158dca3b43aae37916730acdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5811af0a22ef45158dca3b43aae37916730acdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da04ea110d6950f1f5e62f309dd175c770d969ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da04ea110d6950f1f5e62f309dd175c770d969ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da04ea110d6950f1f5e62f309dd175c770d969ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da04ea110d6950f1f5e62f309dd175c770d969ba/comments", "author": null, "committer": null, "parents": [{"sha": "6ac8c2bec0aaa2f9f92764cc54348cde1b1bb9ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac8c2bec0aaa2f9f92764cc54348cde1b1bb9ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac8c2bec0aaa2f9f92764cc54348cde1b1bb9ad"}], "stats": {"total": 61, "additions": 25, "deletions": 36}, "files": [{"sha": "b2b4394f20bddb7fcd244b996e36f6498c3c5aa0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 28, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da04ea110d6950f1f5e62f309dd175c770d969ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da04ea110d6950f1f5e62f309dd175c770d969ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da04ea110d6950f1f5e62f309dd175c770d969ba", "patch": "@@ -33,7 +33,8 @@\n \n \tPR rtl-opt/54524\n \t* simplify-rtx.c (simplify_relational_operation_1): Don't simplify\n-\t(LTU/GEU (PLUS a 0) 0) into (GEU/LTU a 0) since they are not equivalent.\n+\t(LTU/GEU (PLUS a 0) 0) into (GEU/LTU a 0) since they are not\n+\tequivalent.\n \n 2012-11-02  Jan Hubicka  <jh@suse.cz>\n \n@@ -43,8 +44,7 @@\n \n 2012-11-02  Jan Hubicka  <jh@suse.cz>\n \n-\t* predict.c (predict_loops): Predict also exits not dominating\n-\tlatch.\n+\t* predict.c (predict_loops): Predict also exits not dominating latch.\n \n 2012-11-02  Jan Hubicka  <jh@suse.cz>\n \n@@ -108,8 +108,7 @@\n \n 2012-11-01  Gerald Pfeifer  <gerald@pfeifer.com>\n \n-\t* doc/standards.texi (Standards): Adjust reference to Go\n-\tspecification.\n+\t* doc/standards.texi (Standards): Adjust reference to Go specification.\n \n 2012-11-01  Lawrence Crowl  <crowl@google.com>\n \n@@ -239,8 +238,7 @@\n \t* optabs.c (emit_cmp_and_jump_insn_1): Add REG_BR_PROB note\n \tonly if it doesn't already exist.\n \t* stmt.c (get_outgoing_edge_probs): Return 0 if BB is NULL.\n-\t(emit_case_dispatch_table): Handle the case where STMT_BB is\n-\tNULL.\n+\t(emit_case_dispatch_table): Handle the case where STMT_BB is NULL.\n \t(expand_sjlj_dispatch_table): Pass BB containing before_case\n \tto emit_case_dispatch_table.\n \n@@ -278,9 +276,8 @@\n \t* cfganal.c (dfs_find_deadend): No longer static.  Use bitmap\n \tinstead of sbitmap for visited.\n \t(flow_dfs_compute_reverse_execute): Use dfs_find_deadend here, too.\n-\t* dominance.c (calc_dfs_tree): If saw_unconnected,\n-\ttraverse from dfs_find_deadend of unconnected b\n-\tinstead of b directly.\n+\t* dominance.c (calc_dfs_tree): If saw_unconnected, traverse from\n+\tdfs_find_deadend of unconnected b instead of b directly.\n \n 2012-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -314,8 +311,7 @@\n \tPR tree-optimization/46309\n \t* tree-ssa-reassoc.c (init_range_entry): Add STMT argument\n \tand use it if EXP is NULL.\n-\t(update_range_test): Handle OPCODE equal to ERROR_MARK\n-\tand oe->op NULL.\n+\t(update_range_test): Handle OPCODE equal to ERROR_MARK and oe->op NULL.\n \t(optimize_range_tests): Likewise.\n \t(final_range_test_p, suitable_cond_bb, no_side_effect_bb, get_ops,\n \tmaybe_optimize_range_tests): New functions.\n@@ -324,7 +320,8 @@\n \n 2012-10-31  Richard Sandiford  <rdsandiford@googlemail.com>\n \n-\t* config/rs6000/rs6000.md (insvsi, insvdi, extvsi, extvdi): Rename to...\n+\t* config/rs6000/rs6000.md (insvsi, insvdi, extvsi, extvdi): Rename\n+\tto...\n \t(insvsi_internal, insvdi_internal, extvsi_internal)\n \t(extvdi_internal): ...this.\n \t(insv, extv): Update accordingly.\n@@ -400,8 +397,7 @@\n \tPR debug/54551\n \tPR debug/54693\n \t* valtrack.c (dead_debug_promote_uses): Assert-check that\n-\tglobal used bit was clear and initialize entry\n-\tunconditionally.\n+\tglobal used bit was clear and initialize entry unconditionally.\n \n 2012-10-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -485,8 +481,7 @@\n 2012-10-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/55111\n-\t* tree-ssa-pre.c (eliminate_insert): Properly fold the built\n-\tstmt.\n+\t* tree-ssa-pre.c (eliminate_insert): Properly fold the built stmt.\n \n 2012-10-30  Oleg Endo  <olegendo@gcc.gnu.org>\n \n@@ -501,8 +496,7 @@\n \tbefore reload.\n \t(*negabssi2, *negabsdi2): Fold into *negabs<mode>2.  Add T_REG clobber.\n \tSplit insns before reload.\n-\t(negsi_cond): Reformat.  Use emit_move_insn instead of\n-\tgen_movesi.\n+\t(negsi_cond): Reformat.  Use emit_move_insn instead of gen_movesi.\n \t(negdi_cond): Reformat.  Use emit_move_insn instead of a pair\n \tof gen_movsi.  Split insn before reload.\n \n@@ -626,13 +620,12 @@\n \n 2012-10-29  Andrew Pinski  <apinski@cavium.com>\n \n-        * config/aarch64/aarch64-protos.h (aarch64_load_tp): New proto.\n-        * config/aarch64/aarch64.c (aarch64_load_tp): Export.\n-        (aarch64_init_builtins): Don't add __builtin_thread_pointer builtin.\n-        * config/aarch64/aarch64.h (aarch64_builtins): Delete\n-\n-AARCH64_BUILTIN_THREAD_POINTER.\n-        * config/aarch64/aarch64.md (get_thread_pointerdi): New pattern.\n+\t* config/aarch64/aarch64-protos.h (aarch64_load_tp): New proto.\n+\t* config/aarch64/aarch64.c (aarch64_load_tp): Export.\n+\t(aarch64_init_builtins): Don't add __builtin_thread_pointer builtin.\n+\t* config/aarch64/aarch64.h (aarch64_builtins): Delete\n+\tAARCH64_BUILTIN_THREAD_POINTER.\n+\t* config/aarch64/aarch64.md (get_thread_pointerdi): New pattern.\n \n 2012-10-29  Marc Glisse  <marc.glisse@inria.fr>\n \n@@ -642,8 +635,7 @@ AARCH64_BUILTIN_THREAD_POINTER.\n \n 2012-10-29  Vladimir Makarov  <vmakarov@redhat.com>\n \n-\t* rtlanal.c (strip_address_mutation): Use SUBREG_REG instead of\n-\tXEXP.\n+\t* rtlanal.c (strip_address_mutation): Use SUBREG_REG instead of XEXP.\n \n 2012-10-29  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "0473976ccffdfd1668018d4cb42a070d870541a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da04ea110d6950f1f5e62f309dd175c770d969ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da04ea110d6950f1f5e62f309dd175c770d969ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da04ea110d6950f1f5e62f309dd175c770d969ba", "patch": "@@ -9,15 +9,13 @@\n 2012-11-03  H.J. Lu  <hjl.tools@gmail.com>\n \t    Jack Howarth  <howarth@bromo.med.uc.edu>\n \n-\t* lib/target-supports.exp (check_effective_target_maybe_x32): New\n-\tproc.\n-\t* gcc.target/i386/pr54457.c: Use dg-require-effective-target\n-\tmaybe_x32.\n+\t* lib/target-supports.exp (check_effective_target_maybe_x32): New proc.\n+\t* gcc.target/i386/pr54457.c: Use dg-require-effective-target maybe_x32.\n \t* gcc.target/i386/pr53249.c: Likewise.\n \n 2012-11-03  Andrew Pinski  <apinski@cavium.com>\n \n-\t * gcc.target/mips/octeon-bbit-3.c: Change the second call to abort to\n+\t* gcc.target/mips/octeon-bbit-3.c: Change the second call to abort to\n \tcall abort1 so that cross jumping does not happen.\n \n 2012-11-03  Oleg Endo  <olegendo@gcc.gnu.org>\n@@ -40,9 +38,8 @@\n \t* gcc.target/powerpc/pr48258-2.c: Simplfy the acceptance\n \tconditions to verify the reduction code is vectorized.\n \n-\t* gcc.target/powerpc/pr46728-1.c: Pass -fno-ident to eliminate\n-\tfailures in case 'pow', such as 'powerpc' is used in the compiler\n-\tversion name.\n+\t* gcc.target/powerpc/pr46728-1.c: Pass -fno-ident to eliminate failures\n+\tin case 'pow', such as 'powerpc' is used in the compiler version name.\n \t* gcc.target/powerpc/pr46728-2.c: Likewise.\n \t* gcc.target/powerpc/pr46728-3.c: Likewise.\n \t* gcc.target/powerpc/pr46728-4.c: Likewise."}]}