{"sha": "e158a5fb34c21d4ed432b125c4a78853dce4a328", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE1OGE1ZmIzNGMyMWQ0ZWQ0MzJiMTI1YzRhNzg4NTNkY2U0YTMyOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-08-26T18:47:26Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-08-26T18:47:26Z"}, "message": "install.texi (Prerequisites): Mention GNU make requirement.\n\n\t* doc/install.texi (Prerequisites): Mention GNU make requirement.\n\n\t* Makefile.in (AR_FOR_TARGET): Export it.\n\t(AR_CREATE_FOR_TARGET): Likewise.\n\t(AR_FLAGS_FOR_TARGET): Likewise.\n\t(AR_EXTRACT_FOR_TARGET): Likewise.\n\t(AWK): Likewise.\n\t(BUILD_PREFIX): Likewise.\n\t(BUILD_PREFIX_1): Likewise.\n\t(DESTDIR): Likewise.\n\t(GCC_FOR_TARGET): Likewise.\n\t(INCLUDES): Likewise.\n\t(INSTALL_DATA): Likewise.\n\t(LIB1ASMSRC): Likewise.\n\t(LIBGCC2_CFLAGS): Likewise.\n\t(MACHMODE_H): Likewise.\n\t(NM_FOR_TARGET): Likewise.\n\t(RANLIB_FOR_TARGET): Likewise.\n\t(libsubdir): Likewise.\n\t(slibdir): Likewise.\n\t(ORDINARY_FLAGS_TO_PASS): Remove stuff that we're\n\texporting.\n\t(libgcc.a): Don't pass them here.\n\t(stmp-multilib): Or here.\n\t(install-libgcc): Or here.\n\t(install-multilib): Or here.\n\t(POSTSTAGE1_FLAGS_TO_PASS): Or here.\n\t(stage1_build): Or here.\n\nFrom-SVN: r70817", "tree": {"sha": "0d8731415b69dd39e22f9ae42a8f5ad13bb136e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d8731415b69dd39e22f9ae42a8f5ad13bb136e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e158a5fb34c21d4ed432b125c4a78853dce4a328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e158a5fb34c21d4ed432b125c4a78853dce4a328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e158a5fb34c21d4ed432b125c4a78853dce4a328", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e158a5fb34c21d4ed432b125c4a78853dce4a328/comments", "author": null, "committer": null, "parents": [{"sha": "a638cfb0fc84ce38a029bca0ea64431c9a3fb0fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a638cfb0fc84ce38a029bca0ea64431c9a3fb0fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a638cfb0fc84ce38a029bca0ea64431c9a3fb0fc"}], "stats": {"total": 125, "additions": 63, "deletions": 62}, "files": [{"sha": "620dd7fa78c6e34face2efa70fe44fd1e62f33a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e158a5fb34c21d4ed432b125c4a78853dce4a328/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e158a5fb34c21d4ed432b125c4a78853dce4a328/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e158a5fb34c21d4ed432b125c4a78853dce4a328", "patch": "@@ -1,3 +1,34 @@\n+2003-08-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* doc/install.texi (Prerequisites): Mention GNU make requirement.\n+\n+\t* Makefile.in (AR_FOR_TARGET): Export it.\n+\t(AR_CREATE_FOR_TARGET): Likewise.\n+\t(AR_FLAGS_FOR_TARGET): Likewise.\n+\t(AR_EXTRACT_FOR_TARGET): Likewise.\n+\t(AWK): Likewise.\n+\t(BUILD_PREFIX): Likewise.\n+\t(BUILD_PREFIX_1): Likewise.\n+\t(DESTDIR): Likewise.\n+\t(GCC_FOR_TARGET): Likewise.\n+\t(INCLUDES): Likewise.\n+\t(INSTALL_DATA): Likewise.\n+\t(LIB1ASMSRC): Likewise.\n+\t(LIBGCC2_CFLAGS): Likewise.\n+\t(MACHMODE_H): Likewise.\n+\t(NM_FOR_TARGET): Likewise.\n+\t(RANLIB_FOR_TARGET): Likewise.\n+\t(libsubdir): Likewise.\n+\t(slibdir): Likewise.\n+\t(ORDINARY_FLAGS_TO_PASS): Remove stuff that we're\n+\texporting.\n+\t(libgcc.a): Don't pass them here.\n+\t(stmp-multilib): Or here.\n+\t(install-libgcc): Or here.\n+\t(install-multilib): Or here.\n+\t(POSTSTAGE1_FLAGS_TO_PASS): Or here.\n+\t(stage1_build): Or here.\n+\n 2003-08-26  Andreas Krebbel <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.md (\"*llgt_sisi\", \"*llgt_sisi_split\", \"*llgt_didi\","}, {"sha": "e7c323f888dfa2a1e5d3ea53a80c71f92cfed73b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 28, "deletions": 62, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e158a5fb34c21d4ed432b125c4a78853dce4a328/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e158a5fb34c21d4ed432b125c4a78853dce4a328/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e158a5fb34c21d4ed432b125c4a78853dce4a328", "patch": "@@ -743,16 +743,30 @@ LANG_STAGESTUFF = @all_stagestuff@\n # because we need CC=\"stage1/xgcc -Bstage1/\" to work in the language\n # subdirectories.\n # ??? The choices here will need some experimenting with.\n+\n+export AR_FOR_TARGET\n+export AR_CREATE_FOR_TARGET\n+export AR_FLAGS_FOR_TARGET\n+export AR_EXTRACT_FOR_TARGET\n+export AWK\n+export BUILD_PREFIX\n+export BUILD_PREFIX_1\n+export DESTDIR\n+export GCC_FOR_TARGET\n+export INCLUDES\n+export INSTALL_DATA\n+export LIB1ASMSRC\n+export LIBGCC2_CFLAGS\n+export MACHMODE_H\n+export NM_FOR_TARGET\n+export RANLIB_FOR_TARGET\n+export libsubdir\n+export slibdir\n+\n ORDINARY_FLAGS_TO_PASS = \\\n-\t\"AR_FLAGS_FOR_TARGET=$(AR_FLAGS_FOR_TARGET)\" \\\n-\t\"AR_CREATE_FOR_TARGET=$(AR_CREATE_FOR_TARGET)\" \\\n-\t\"AR_EXTRACT_FOR_TARGET=$(AR_EXTRACT_FOR_TARGET)\" \\\n-\t\"AR_FOR_TARGET=$(AR_FOR_TARGET)\" \\\n \t\"BISON=$(BISON)\" \\\n \t\"BISONFLAGS=$(BISONFLAGS)\" \\\n \t\"CFLAGS=$(CFLAGS) $(WARN_CFLAGS)\" \\\n-\t\"DESTDIR=$(DESTDIR)\" \\\n-\t\"GCC_FOR_TARGET=$(GCC_FOR_TARGET)\" \\\n \t\"LDFLAGS=$(LDFLAGS)\" \\\n \t\"FLEX=$(FLEX)\" \\\n \t\"FLEXFLAGS=$(FLEXFLAGS)\" \\\n@@ -761,7 +775,6 @@ ORDINARY_FLAGS_TO_PASS = \\\n \t\"MAKEINFO=$(MAKEINFO)\" \\\n \t\"MAKEINFOFLAGS=$(MAKEINFOFLAGS)\" \\\n \t\"MAKEOVERRIDES=\" \\\n-\t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n \t\"SHELL=$(SHELL)\" \\\n \t\"exeext=$(exeext)\" \\\n \t\"build_exeext=$(build_exeext)\" \\\n@@ -773,7 +786,6 @@ ORDINARY_FLAGS_TO_PASS = \\\n \t\"build_tooldir=$(build_tooldir)\" \\\n \t\"gcc_tooldir=$(gcc_tooldir)\" \\\n \t\"bindir=$(bindir)\" \\\n-\t\"libsubdir=$(libsubdir)\" \\\n \t\"libexecsubdir=$(libsubdir)\" \\\n \t\"datadir=$(datadir)\" \\\n \t\"localedir=$(localedir)\"\n@@ -1134,18 +1146,9 @@ LIBGCC_DEPS = $(GCC_PASSES) $(LANGUAGES) stmp-int-hdrs $(STMP_FIXPROTO) \\\n libgcov.a: libgcc.a; @true\n \n libgcc.a: $(LIBGCC_DEPS)\n-\t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n-\t  BUILD_PREFIX=\"$(BUILD_PREFIX)\" BUILD_PREFIX_1=\"$(BUILD_PREFIX_1)\" \\\n-\t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n-\t  AR_CREATE_FOR_TARGET=\"$(AR_CREATE_FOR_TARGET)\" \\\n-\t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n+\t$(MAKE) \\\n \t  CFLAGS=\"$(CFLAGS) $(WARN_CFLAGS)\" \\\n-\t  RANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\" \\\n-\t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n-\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n-\t  INCLUDES=\"$(INCLUDES)\" \\\n-\t  CONFIG_H=\"$(TCONFIG_H)\" MACHMODE_H=\"$(MACHMODE_H)\" TM_H=\"$(TM_H)\" \\\n-\t  LIB1ASMSRC='$(LIB1ASMSRC)' \\\n+\t  CONFIG_H=\"$(TCONFIG_H)\" TM_H=\"$(TM_H)\" \\\n \t  MAKEOVERRIDES= \\\n \t  -f libgcc.mk all\n \n@@ -1175,18 +1178,9 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \n # Build multiple copies of libgcc.a, one for each target switch.\n stmp-multilib: $(LIBGCC_DEPS)\n-\t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n-\t  BUILD_PREFIX=\"$(BUILD_PREFIX)\" BUILD_PREFIX_1=\"$(BUILD_PREFIX_1)\" \\\n-\t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n-\t  AR_CREATE_FOR_TARGET=\"$(AR_CREATE_FOR_TARGET)\" \\\n-\t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n+\t$(MAKE) \\\n \t  CFLAGS=\"$(CFLAGS) $(WARN_CFLAGS)\" \\\n-\t  RANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\" \\\n-\t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n-\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n-\t  INCLUDES=\"$(INCLUDES)\" \\\n-\t  CONFIG_H=\"$(CONFIG_H)\" MACHMODE_H=\"$(MACHMODE_H)\" \\\n-\t  LIB1ASMSRC='$(LIB1ASMSRC)' \\\n+\t  CONFIG_H=\"$(CONFIG_H)\" \\\n \t  MAKEOVERRIDES= \\\n \t  -f libgcc.mk all\n \t$(STAMP) stmp-multilib\n@@ -3089,44 +3083,18 @@ install-man: installdirs $(GENERATED_MANPAGES) lang.install-man\n \n # Install the library.\n install-libgcc: libgcc.mk libgcc.a libgcov.a installdirs\n-\t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n-\t  BUILD_PREFIX=\"$(BUILD_PREFIX)\" BUILD_PREFIX_1=\"$(BUILD_PREFIX_1)\" \\\n-\t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n-\t  AR_CREATE_FOR_TARGET=\"$(AR_CREATE_FOR_TARGET)\" \\\n-\t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n+\t$(MAKE) \\\n \t  CFLAGS=\"$(CFLAGS) $(WARN_CFLAGS)\" \\\n-\t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n-\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n-\t  INCLUDES=\"$(INCLUDES)\" \\\n-\t  CONFIG_H=\"$(TCONFIG_H)\" MACHMODE_H=\"$(MACHMODE_H)\" \\\n-\t  LIB1ASMSRC='$(LIB1ASMSRC)' \\\n+\t  CONFIG_H=\"$(TCONFIG_H)\" \\\n \t  MAKEOVERRIDES= \\\n-\t  INSTALL_DATA=\"$(INSTALL_DATA)\" \\\n-\t  RANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\" \\\n-\t  DESTDIR=\"$(DESTDIR)\" \\\n-\t  libsubdir=\"$(libsubdir)\" \\\n-\t  slibdir=\"$(slibdir)\" \\\n \t  -f libgcc.mk install\n \n # Install multiple versions of libgcc.a, libgcov.a.\n install-multilib: stmp-multilib installdirs\n-\t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n-\t  BUILD_PREFIX=\"$(BUILD_PREFIX)\" BUILD_PREFIX_1=\"$(BUILD_PREFIX_1)\" \\\n-\t  AR_FOR_TARGET=\"$(AR_FOR_TARGET)\" \\\n-\t  AR_CREATE_FOR_TARGET=\"$(AR_CREATE_FOR_TARGET)\" \\\n-\t  AR_FLAGS_FOR_TARGET=\"$(AR_FLAGS_FOR_TARGET)\" \\\n+\t$(MAKE) \\\n \t  CFLAGS=\"$(CFLAGS) $(WARN_CFLAGS)\" \\\n-\t  NM_FOR_TARGET=\"$(NM_FOR_TARGET)\" AWK=\"$(AWK)\" \\\n-\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" \\\n-\t  INCLUDES=\"$(INCLUDES)\" \\\n-\t  CONFIG_H=\"$(CONFIG_H)\" MACHMODE_H=\"$(MACHMODE_H)\" \\\n-\t  LIB1ASMSRC='$(LIB1ASMSRC)' \\\n+\t  CONFIG_H=\"$(CONFIG_H)\" \\\n \t  MAKEOVERRIDES= \\\n-\t  INSTALL_DATA=\"$(INSTALL_DATA)\" \\\n-\t  RANLIB_FOR_TARGET=\"$(RANLIB_FOR_TARGET)\" \\\n-\t  DESTDIR=\"$(DESTDIR)\" \\\n-\t  libsubdir=\"$(libsubdir)\" \\\n-\t  slibdir=\"$(slibdir)\" \\\n \t  -f libgcc.mk install\n \n # Install all the header files built in the include subdirectory.\n@@ -3479,7 +3447,6 @@ VOL_FILES=`echo $(BACKEND) $(OBJS) $(C_OBJS) $(LIBCPP_OBJS) *.c *.h gen*`\n \n POSTSTAGE1_FLAGS_TO_PASS = \\\n \tADAC=\"\\$$(CC)\" \\\n-\tGCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLDFLAGS=\"$(BOOT_LDFLAGS)\" \\\n \tWARN_CFLAGS=\"\\$$(GCC_WARN_CFLAGS)\" \\\n@@ -3509,7 +3476,6 @@ STAGEFEEDBACK_FLAGS_TO_PASS = \\\n stage1_build:\n \t$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\" \\\n \t\tCFLAGS=\"$(STAGE1_CFLAGS)\" MAKEINFO=\"$(MAKEINFO)\" \\\n-\t\tGCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t\tMAKEINFOFLAGS=\"$(MAKEINFOFLAGS)\" COVERAGE_FLAGS= \\\n \t\tOBJS-onestep=\"$(OBJS)\"\n \t$(STAMP) stage1_build"}, {"sha": "84bede6b29a76b8a51e23f26d5c62ebb4e331854", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e158a5fb34c21d4ed432b125c4a78853dce4a328/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e158a5fb34c21d4ed432b125c4a78853dce4a328/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=e158a5fb34c21d4ed432b125c4a78853dce4a328", "patch": "@@ -268,6 +268,10 @@ requirements.\n Necessary to uncompress GCC @command{tar} files when source code is\n obtained via FTP mirror sites.\n \n+@item GNU make version 3.79.1 (or later)\n+\n+You must have GNU make installed to build GCC.\n+\n @item GNU tar version 1.12 (or later)\n \n Necessary (only on some platforms) to untar the source code.  Many"}]}