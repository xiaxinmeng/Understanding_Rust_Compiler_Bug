{"sha": "f0b5ac2e821924f5c2288daac32db311d262369c", "node_id": "C_kwDOANBUbNoAKGYwYjVhYzJlODIxOTI0ZjVjMjI4OGRhYWMzMmRiMzExZDI2MjM2OWM", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-03-22T13:18:00Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-03-22T13:51:53Z"}, "message": "Document 'Continuous Integration', 'Compiler Diagnostics' in 'README.md'", "tree": {"sha": "be6e6c832df40fa5a1843305aae9ecc2e9d43fc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be6e6c832df40fa5a1843305aae9ecc2e9d43fc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0b5ac2e821924f5c2288daac32db311d262369c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b5ac2e821924f5c2288daac32db311d262369c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b5ac2e821924f5c2288daac32db311d262369c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b5ac2e821924f5c2288daac32db311d262369c/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f91f637652250127e5e88b48df09e0106cf5ad26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91f637652250127e5e88b48df09e0106cf5ad26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f91f637652250127e5e88b48df09e0106cf5ad26"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "9675b11e669b4fca3a965c3a0a9db66d8c3f3e4b", "filename": "README.md", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b5ac2e821924f5c2288daac32db311d262369c/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b5ac2e821924f5c2288daac32db311d262369c/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=f0b5ac2e821924f5c2288daac32db311d262369c", "patch": "@@ -202,6 +202,45 @@ Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide\n Not all contributions must be code; we would love to see new test cases or bugs and issues to be reported. \n Feel free to add any comments on open PRs\n \n+\n+## Continuous Integration\n+\n+When submitting (or updating) a [GitHub Pull Request](https://github.com/Rust-GCC/gccrs/pull/),\n+several automated checks are run.\n+Generally, a \"green status\" is necessary before merge.\n+\n+\n+### Compiler Diagnostics\n+\n+That is, here, diagnostics emitted by the \"initial\" compiler used to build GCC/Rust.\n+\n+If building a native toolchain,\n+GCC by default does a 3-stage bootstrap build (<https://gcc.gnu.org/install/configure.html>).\n+In addition to making sure that GCC is able to reproduce itself bit-by-bit,\n+this also means that stages 2+ are built with `-Werror`\n+(turning most _warning_ into _error_ diagnostics; see `--enable-werror`,\n+possibly enabled by default).\n+This helps to catch a good number of bugs, because it enforces that GCC compiles without compiler diagnostics;\n+it's a requirement for upstream patch submission (<https://gcc.gnu.org/contribute.html#testing>).\n+\n+GCC generally is only expected to be \"warning-clean\" without `--disable-bootstrap`\n+(that is, default `--enable-bootstrap` for a native build),\n+and not for the initial stage where it's using the \"initial\" compiler -- otherwise\n+we're at the mercy of whatever \"initial\" compiler we're using.\n+Doing a `--disable-bootstrap` build is much faster, of course, so we're often doing that:\n+for example, per the instructions above, or in the standard CI.\n+With that, we're missing out on the aspect that _enforces that GCC compiles without compiler diagnostics_.\n+\n+To encounter that, the default CI has a [_check for new warnings_ step](https://github.com/Rust-GCC/gccrs/pull/1026)\n+that verifies in the CI `--disable-bootstrap` build configuration that no new warnings are introduced.\n+If that step fails, it usually points out a new _warning_ you've introduced erroneously, and should address.\n+Occasionally it means that simply the `.github/bors_log_expected_warnings` file needs to be updated,\n+for example if due to any kind of \"environmental changes\" (for example, CI \"initial\" compiler changes).\n+Unless diligently reproducing the CI configuration (in particular \"initial\" compiler, GCC version),\n+it's not really feasible to reproduce this check locally.\n+If in doubt, do a local `--enable-bootstrap` build, or submit your changes, and wait for the CI system's results.\n+\n+\n ## Community\n \n We can be found on all usual Rust channels such as Zulip, but we also have our own channels:"}]}