{"sha": "19c29b2fc41bad4e3676f3977e4ebc88ee936b64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTljMjliMmZjNDFiYWQ0ZTM2NzZmMzk3N2U0ZWJjODhlZTkzNmI2NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-08-30T22:54:06Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-08-30T22:54:06Z"}, "message": "cp-tree.h (initialize_artificial_var): Declare.\n\n\t* cp-tree.h (initialize_artificial_var): Declare.\n\t* decl.c (initialize_artifical_var): New function.\n\t* class.c (initialize_array): Remove.\n\t(initialize_vtable): Use initialize_artificial_var.\n\t(build_vtt): Likewise.\n\t(build_ctor_vtbl_group): Likewise.\n\nFrom-SVN: r86809", "tree": {"sha": "cb48a2f26270dff9ebb3b93323918ba903e7d7e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb48a2f26270dff9ebb3b93323918ba903e7d7e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19c29b2fc41bad4e3676f3977e4ebc88ee936b64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c29b2fc41bad4e3676f3977e4ebc88ee936b64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19c29b2fc41bad4e3676f3977e4ebc88ee936b64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/comments", "author": null, "committer": null, "parents": [{"sha": "ff164b22d364c830b43d08e521a768b2a2957bbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff164b22d364c830b43d08e521a768b2a2957bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff164b22d364c830b43d08e521a768b2a2957bbc"}], "stats": {"total": 43, "additions": 29, "deletions": 14}, "files": [{"sha": "eea871b4c82bed630e523b76a6bc604a2e88d5a6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=19c29b2fc41bad4e3676f3977e4ebc88ee936b64", "patch": "@@ -1,3 +1,12 @@\n+2004-08-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (initialize_artificial_var): Declare.\n+\t* decl.c (initialize_artifical_var): New function.\n+\t* class.c (initialize_array): Remove.\n+\t(initialize_vtable): Use initialize_artificial_var.\n+\t(build_vtt): Likewise.\n+\t(build_ctor_vtbl_group): Likewise.\n+\n 2004-08-30  Richard Henderson  <rth@redhat.com>\n \n \t* class.c (build_base_path): Use build_address directly."}, {"sha": "21bdfdd2f6f13ee0bbf35fa96ce752b29f54ece3", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=19c29b2fc41bad4e3676f3977e4ebc88ee936b64", "patch": "@@ -170,7 +170,6 @@ static void dump_vtt (tree, tree);\n static void dump_thunk (FILE *, int, tree);\n static tree build_vtable (tree, tree, tree);\n static void initialize_vtable (tree, tree);\n-static void initialize_array (tree, tree);\n static void layout_nonempty_base_or_field (record_layout_info,\n \t\t\t\t\t\t   tree, tree, splay_tree);\n static tree end_of_class (tree, int);\n@@ -6681,20 +6680,10 @@ initialize_vtable (tree binfo, tree inits)\n \n   layout_vtable_decl (binfo, list_length (inits));\n   decl = get_vtbl_decl_for_binfo (binfo);\n-  initialize_array (decl, inits);\n+  initialize_artificial_var (decl, inits);\n   dump_vtable (BINFO_TYPE (binfo), binfo, decl);\n }\n \n-/* Initialize DECL (a declaration for a namespace-scope array) with\n-   the INITS.  */\n-\n-static void\n-initialize_array (tree decl, tree inits)\n-{\n-  DECL_INITIAL (decl) = build_constructor (NULL_TREE, inits);\n-  cp_finish_decl (decl, DECL_INITIAL (decl), NULL_TREE, 0);\n-}\n-\n /* Build the VTT (virtual table table) for T.\n    A class requires a VTT if it has virtual bases.\n    \n@@ -6731,7 +6720,7 @@ build_vtt (tree t)\n \t\t\t\t \n   /* Now, build the VTT object itself.  */\n   vtt = build_vtable (t, get_vtt_name (t), type);\n-  initialize_array (vtt, inits);\n+  initialize_artificial_var (vtt, inits);\n   /* Add the VTT to the vtables list.  */\n   TREE_CHAIN (vtt) = TREE_CHAIN (CLASSTYPE_VTABLES (t));\n   TREE_CHAIN (CLASSTYPE_VTABLES (t)) = vtt;\n@@ -7018,7 +7007,7 @@ build_ctor_vtbl_group (tree binfo, tree t)\n \n   /* Initialize the construction vtable.  */\n   CLASSTYPE_VTABLES (t) = chainon (CLASSTYPE_VTABLES (t), vtbl);\n-  initialize_array (vtbl, inits);\n+  initialize_artificial_var (vtbl, inits);\n   dump_vtable (t, binfo, vtbl);\n }\n "}, {"sha": "9e894ff2370a18102966f57fe75c14b239d5a73b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=19c29b2fc41bad4e3676f3977e4ebc88ee936b64", "patch": "@@ -3795,6 +3795,7 @@ extern tree builtin_function (const char *name, tree type,\n extern tree check_elaborated_type_specifier     (enum tag_types, tree, bool);\n extern void warn_extern_redeclared_static (tree, tree);\n extern bool cp_missing_noreturn_ok_p\t\t(tree);\n+extern void initialize_artificial_var            (tree, tree);\n \n extern bool have_extern_spec;\n "}, {"sha": "2932ae9a484fce3af031909ec8729f13c107ed05", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19c29b2fc41bad4e3676f3977e4ebc88ee936b64/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=19c29b2fc41bad4e3676f3977e4ebc88ee936b64", "patch": "@@ -4640,6 +4640,22 @@ initialize_local_var (tree decl, tree init)\n     finish_decl_cleanup (decl, cleanup);\n }\n \n+/* DECL is a VAR_DECL for a compiler-generated variable with static\n+   storage duration (like a virtual table) whose initializer is a\n+   compile-time constant.  Initialize the variable and provide it to\n+   the back end.  */\n+\n+void\n+initialize_artificial_var (tree decl, tree init)\n+{\n+  DECL_INITIAL (decl) = build_constructor (NULL_TREE, init);\n+  DECL_INITIALIZED_P (decl) = 1;\n+  determine_visibility (decl);\n+  layout_var_decl (decl);\n+  maybe_commonize_var (decl);\n+  make_rtl_for_nonlocal_decl (decl, init, /*asmspec=*/NULL);\n+}\n+\n /* Finish processing of a declaration;\n    install its line number and initial value.\n    If the length of an array type is not known before,"}]}