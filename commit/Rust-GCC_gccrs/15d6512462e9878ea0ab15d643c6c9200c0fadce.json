{"sha": "15d6512462e9878ea0ab15d643c6c9200c0fadce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVkNjUxMjQ2MmU5ODc4ZWEwYWIxNWQ2NDNjNmM5MjAwYzBmYWRjZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-28T16:38:13Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-28T16:38:13Z"}, "message": "pr18178.C, [...]: Use cleanup-tree-dump.\n\n\t* g++.dg/tree-ssa/pr18178.C, gcc.dg/tree-ssa/20030821-1.c,\n\tgcc.dg/tree-ssa/20050314-1.c, gcc.dg/tree-ssa/alias-1.c,\n\tgcc.dg/tree-ssa/phi-opt-1.c, gcc.dg/tree-ssa/phi-opt-2.c,\n\tgcc.dg/tree-ssa/phi-opt-3.c, gcc.dg/tree-ssa/phi-opt-4.c,\n\tgcc.dg/tree-ssa/phi-opt-5.c, gcc.dg/tree-ssa/pr18133-1.c,\n\tgcc.dg/tree-ssa/pr18133-2.c, gcc.dg/tree-ssa/pr18134.c,\n\tgcc.dg/tree-ssa/pr20470.c, gcc.dg/tree-ssa/pr20657.c,\n\tgcc.dg/tree-ssa/pr20702.c, gcc.dg/tree-ssa/pr20913.c,\n\tgcc.dg/tree-ssa/pr21001.c, gcc.dg/tree-ssa/stdarg-1.c,\n\tgcc.dg/tree-ssa/stdarg-2.c, gcc.dg/tree-ssa/stdarg-3.c,\n\tgcc.dg/tree-ssa/stdarg-4.c, gcc.dg/tree-ssa/stdarg-5.c,\n\tgcc.dg/tree-ssa/structopt-1.c, gcc.dg/tree-ssa/structopt-2.c,\n\tgcc.dg/tree-ssa/structopt-3.c: Use cleanup-tree-dump.\n\nFrom-SVN: r98928", "tree": {"sha": "bc3d39ed9c4852741b81dd7b595967e62c17a5aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc3d39ed9c4852741b81dd7b595967e62c17a5aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15d6512462e9878ea0ab15d643c6c9200c0fadce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15d6512462e9878ea0ab15d643c6c9200c0fadce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15d6512462e9878ea0ab15d643c6c9200c0fadce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15d6512462e9878ea0ab15d643c6c9200c0fadce/comments", "author": null, "committer": null, "parents": [{"sha": "c4db6655d620043502242e9a837c0b14edb8f751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4db6655d620043502242e9a837c0b14edb8f751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4db6655d620043502242e9a837c0b14edb8f751"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "f02ae0f54274e66914ac9110c78a32ff469f3411", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -1,3 +1,19 @@\n+2005-04-28  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* g++.dg/tree-ssa/pr18178.C, gcc.dg/tree-ssa/20030821-1.c,\n+\tgcc.dg/tree-ssa/20050314-1.c, gcc.dg/tree-ssa/alias-1.c,\n+\tgcc.dg/tree-ssa/phi-opt-1.c, gcc.dg/tree-ssa/phi-opt-2.c,\n+\tgcc.dg/tree-ssa/phi-opt-3.c, gcc.dg/tree-ssa/phi-opt-4.c,\n+\tgcc.dg/tree-ssa/phi-opt-5.c, gcc.dg/tree-ssa/pr18133-1.c,\n+\tgcc.dg/tree-ssa/pr18133-2.c, gcc.dg/tree-ssa/pr18134.c,\n+\tgcc.dg/tree-ssa/pr20470.c, gcc.dg/tree-ssa/pr20657.c,\n+\tgcc.dg/tree-ssa/pr20702.c, gcc.dg/tree-ssa/pr20913.c,\n+\tgcc.dg/tree-ssa/pr21001.c, gcc.dg/tree-ssa/stdarg-1.c,\n+\tgcc.dg/tree-ssa/stdarg-2.c, gcc.dg/tree-ssa/stdarg-3.c,\n+\tgcc.dg/tree-ssa/stdarg-4.c, gcc.dg/tree-ssa/stdarg-5.c,\n+\tgcc.dg/tree-ssa/structopt-1.c, gcc.dg/tree-ssa/structopt-2.c,\n+\tgcc.dg/tree-ssa/structopt-3.c: Use cleanup-tree-dump.\n+\n 2005-04-28  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/20865"}, {"sha": "430a625f75d2d160b926a254f3440f3e1ea6d2f5", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr18178.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr18178.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr18178.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr18178.C?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -44,3 +44,4 @@ void doit (array *a)\n /* VRP should remove all but 1 if() in the loop.  */\n \n /* { dg-final { scan-tree-dump-times \"if \" 1 \"vrp\"} } */\n+/* { dg-final { cleanup-tree-dump \"vrp\" } } */"}, {"sha": "c92e22862eb2109100f82bfd5a5310e78e7ac2b8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030821-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030821-1.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -24,3 +24,4 @@ y: ;\n \n /* We should have folded away the goto &x  */\n /* { dg-final { scan-tree-dump-times \"goto &x\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "04f202835df05ea46b8fa8559acbf69a49e7cbfc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20050314-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -18,4 +18,4 @@ void xxx (void)\n    cannot read nor write the memory.  */\n \n /* { dg-final { scan-tree-dump-times \"Moving statement\" 1 \"lim\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"lim\" } } */"}, {"sha": "6e88eb1ce23613c0c488e679266f17eab1de3b18", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-1.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -14,3 +14,4 @@ void g(int *i)\n /* We should have removed the link_error on the tree level as we told GCC\n    that *i cannot point to f via the option -fargument-noalias-global. */\n /* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "b295169365e2bc486384c8414a51f8ab83261854", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-1.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -16,4 +16,4 @@ int f(int a, int b, int c)\n    optimize this before because PHI-OPT did not look at \n    PHIs which have more than two arguments.  */\n /* { dg-final { scan-tree-dump-times \"if\" 0 \"optimized\"} } */\n-\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "415c11777b31c36804d08a7519aa277a307fe8a4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-2.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -19,3 +19,4 @@ _Bool f1(_Bool a, _Bool b)\n    value of b (except that we don't fold ! (b != 0) into b\n    which can be fixed in a different patch).  */\n /* { dg-final { scan-tree-dump-times \"if\" 1 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "54970ad80e0870aea50c31d30bfecfb60e036dcc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-3.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -14,4 +14,4 @@ int f(int a, int b)\n    optimize this before because PHI-OPT did not look at \n    PHIs which have more than two arguments.  */\n /* { dg-final { scan-tree-dump-times \"if\" 0 \"optimized\"} } */\n-\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "efd9228b610468be273ade7bcd78ccaf9ead7892", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-4.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -14,4 +14,4 @@ _Bool f1()\n    value of b (except that we don't fold ! (b != 0) into b\n    which means that we miss a sib calling opportunity).  */\n /* { dg-final { scan-tree-dump-times \"if \" 1 \"optimized\"} } */\n-\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "7a930dd455ee05a46f35ab57289b37919b985dcd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/phi-opt-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fphi-opt-5.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -56,3 +56,4 @@ float repl3 (float varz, float vara, float varb)\n \n /* { dg-final { scan-tree-dump \"if .*varz\" \"phiopt1\"} } */\n /* { dg-final { scan-tree-dump \"vara.*MAX_EXPR\" \"phiopt1\"} } */\n+/* { dg-final { cleanup-tree-dump \"phiopt1\" } } */"}, {"sha": "f225f662da4379a08d15bfe68ab375fe48cbc261", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr18133-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-1.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -25,3 +25,4 @@ return;\n    scan for 3 instances of \"fallthru\".  */\n \n /* { dg-final { scan-tree-dump-times \"fallthru\" 3 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "9d04ded45da1ce21b4d53a26a779081877f8e338", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr18133-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18133-2.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -40,3 +40,4 @@ bar (int a)\n    computed goto.  */\n \n /* { dg-final { scan-tree-dump-times \"ab\" 0 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "d126313feed220e3e61c0b6eee5b8eb10ccb5194", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr18134.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18134.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18134.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr18134.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -23,3 +23,4 @@ return 0;\n    computed gotos.  */\n \n /* { dg-final { scan-tree-dump-times \"ab\" 0 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "ad293ec6d739661744f5205097aa59f2c2558418", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20470.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20470.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20470.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20470.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -12,3 +12,4 @@ void f1()\n }\n \n /* { dg-final { scan-tree-dump-times \"ABS_EXPR\" 1 \"generic\" } } */\n+/* { dg-final { cleanup-tree-dump \"generic\" } } */"}, {"sha": "abb14e604f2579212ae1575f1b7fae3207d439d3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20657.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20657.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20657.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20657.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -15,3 +15,4 @@ foo (int a)\n }\n \n /* { dg-final { scan-tree-dump-times \"Folding predicate\" 1 \"vrp\"} } */\n+/* { dg-final { cleanup-tree-dump \"vrp\" } } */"}, {"sha": "0ed09df9a7b3cc6e167da609f6d9861b9ff82ebb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20702.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20702.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20702.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20702.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -26,3 +26,4 @@ foo (int *p, int b)\n }\n \n /* { dg-final { scan-tree-dump-times \"Folding predicate\" 1 \"vrp\"} } */\n+/* { dg-final { cleanup-tree-dump \"vrp\" } } */"}, {"sha": "43abc81c81c875f27448c444117c20ad7fa516a5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr20913.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr20913.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -23,3 +23,4 @@ foo (int a, int b, int c, int d)\n }\n \n /* { dg-final { scan-tree-dump-times \"with if \\\\(1\\\\)\" 2 \"copyprop1\"} } */\n+/* { dg-final { cleanup-tree-dump \"copyprop1\" } } */"}, {"sha": "99a9efe4b6b0b5d591492d60d278a8585b5d1eb2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21001.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21001.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21001.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21001.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -18,3 +18,4 @@ foo (int a)\n }\n \n /* { dg-final { scan-tree-dump-times \"Folding predicate\" 1 \"vrp\"} } */\n+/* { dg-final { cleanup-tree-dump \"vrp\" } } */"}, {"sha": "3cba2928f57fcadfaa2e843d848055eae3f91437", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-1.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -10,3 +10,4 @@ f1 (int i, ...)\n {\n }\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" } } */\n+/* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "77a430fd3ce6a2119ff0eee77e1e7ce1695aaffe", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -265,3 +265,4 @@ f15 (int i, ...)\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump-not \"f15: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target i?86-*-* ia64-*-* } } } */\n /* { dg-final { scan-tree-dump-not \"f15: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n+/* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "306f7a93ec8e96de3881024d1857cd885f114401", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -168,3 +168,4 @@ f12 (int i, ...)\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target i?86-*-* ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n+/* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "840d04a1f49832fb75088cb3d6ba4f02e88b3137", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -83,3 +83,4 @@ f4 (int i, ...)\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 8 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target i?86-*-* ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n+/* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "ff7b104bceb7bf1949d8852c9a54f66e48669dda", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -109,3 +109,4 @@ f7 (int i, ...)\n }\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 0 GPR units and 64 FPR units\" \"stdarg\" { target { x86_64-*-* && lp64 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 32 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n+/* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "bc69c4fe0d7a8e9913735228c673822f4f1c24d9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/structopt-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-1.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -12,4 +12,4 @@ int foo() {\n \n /* { dg-final { scan-tree-dump-times \"Executing store motion of global.y\" 1 \"lim\" } } */\n /* XXX: We should also check for the load motion of global.x, but there is no easy way to do this.  */\n-\n+/* { dg-final { cleanup-tree-dump \"lim\" } } */"}, {"sha": "b4d28257e3542caabb0293527a5209b162d7d2b6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/structopt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-2.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -43,3 +43,4 @@ int main(void)\n /* { dg-final { scan-tree-dump-times \"a.f\" 0 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"a.g\" 0 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"b.e\" 0 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "a7fcb5bf8ab41e2d9c53b785bb25474aeb78d5ba", "filename": "gcc/testsuite/gcc.dg/tree-ssa/structopt-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d6512462e9878ea0ab15d643c6c9200c0fadce/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-3.c?ref=15d6512462e9878ea0ab15d643c6c9200c0fadce", "patch": "@@ -14,3 +14,4 @@ int main(void)\n \treturn temp.a + temp.b;\n }\n /* { dg-final { scan-tree-dump-times \"return 11\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}