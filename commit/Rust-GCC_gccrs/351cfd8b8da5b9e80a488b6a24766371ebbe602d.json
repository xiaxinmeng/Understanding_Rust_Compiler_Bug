{"sha": "351cfd8b8da5b9e80a488b6a24766371ebbe602d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUxY2ZkOGI4ZGE1YjllODBhNDg4YjZhMjQ3NjYzNzFlYmJlNjAyZA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-09-04T03:30:12Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-09-04T03:30:12Z"}, "message": "re PR libgcj/17290 (Wrong Java dependencies are generated)\n\n2004-09-03  Bryce McKinlay  <mckinlay@redhat.com>\n            H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR libgcj/17290\n\t* Makefile.am (GCJCOMPILE): Remove definition.\n\t(AM_CFLAGS): Add -fclasspath and -fbootclasspath flags.\n\tUse LTGCJCOMPILE, not GCJCOMPILE, to build .lo targets.\n\t* Makefile.in: Rebuilt.\n\nCo-Authored-By: H.J. Lu <hongjiu.lu@intel.com>\n\nFrom-SVN: r87074", "tree": {"sha": "b26ac7afee609fdac1e21c2c2ddfbc324b49287e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b26ac7afee609fdac1e21c2c2ddfbc324b49287e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/351cfd8b8da5b9e80a488b6a24766371ebbe602d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/351cfd8b8da5b9e80a488b6a24766371ebbe602d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/351cfd8b8da5b9e80a488b6a24766371ebbe602d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/351cfd8b8da5b9e80a488b6a24766371ebbe602d/comments", "author": null, "committer": null, "parents": [{"sha": "40923b202de784a0554d6a084464da3c1be4d976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40923b202de784a0554d6a084464da3c1be4d976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40923b202de784a0554d6a084464da3c1be4d976"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "94ed50de23a76528b4c16e71c45622a3674e57bb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351cfd8b8da5b9e80a488b6a24766371ebbe602d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351cfd8b8da5b9e80a488b6a24766371ebbe602d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=351cfd8b8da5b9e80a488b6a24766371ebbe602d", "patch": "@@ -1,3 +1,12 @@\n+2004-09-03  Bryce McKinlay  <mckinlay@redhat.com>\n+            H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libgcj/17290\n+\t* Makefile.am (GCJCOMPILE): Remove definition.\n+\t(AM_CFLAGS): Add -fclasspath and -fbootclasspath flags.\n+\tUse LTGCJCOMPILE, not GCJCOMPILE, to build .lo targets.\n+\t* Makefile.in: Rebuilt.\n+\n 2004-09-03  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* configure.ac (enable-gc-debug): Update help for new syntax."}, {"sha": "a959c4c2b0499afd9e8d5804e4e5eba2e0116268", "filename": "libjava/Makefile.am", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351cfd8b8da5b9e80a488b6a24766371ebbe602d/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351cfd8b8da5b9e80a488b6a24766371ebbe602d/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=351cfd8b8da5b9e80a488b6a24766371ebbe602d", "patch": "@@ -137,7 +137,6 @@ ZIP = @ZIP@\n ## compiles.\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8 -Wno-deprecated\n \n-GCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ_WITH_FLAGS) -fclasspath= -fbootclasspath=$(here) $(JC1FLAGS) -MD -MT $@ -MF $(@:.lo=.d) -c\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n \n@@ -170,6 +169,7 @@ AM_CXXFLAGS = \\\n \n AM_GCJFLAGS = \\\n \t@LIBGCJ_JAVAFLAGS@ \\\n+\t-fclasspath= -fbootclasspath=$(here) \\\n \t--encoding=UTF-8 \\\n \t-Wno-deprecated\n \n@@ -453,7 +453,7 @@ gnu/regexp/MessagesBundle_fr.properties\n propertyo_files = $(property_files:.properties=.properties.lo) \n \n %.properties.lo: %.properties\n-\t$(GCJCOMPILE) -o $@ -c $< -Wc,--resource,`echo $@ | sed \"s/\\.lo$$//\"`\n+\t$(LTGCJCOMPILE) -o $@ -c $< -Wc,--resource,`echo $@ | sed \"s/\\.lo$$//\"`\n \n if ONESTEP\n \n@@ -519,16 +519,16 @@ SUFFIXES = .class .java .h .properties\n ## Note: we omit StackTrace here, since it has an explicit rule a bit\n ## later, and GNU make will warn in this case.\n $(filter-out gnu/gcj/runtime/StackTrace.lo, $(javao_files)) $(xlib_javao_files) $(lib_org_w3c_dom_la_OBJECTS) $(lib_org_xml_sax_la_OBJECTS): %.lo: %.java\n-\t$(GCJCOMPILE) -o $@ $<\n+\t$(LTGCJCOMPILE) -o $@ -c $<\n \n $(gtk_awt_peer_sources:.java=.lo): %.lo: %.java\n-\t$(GCJCOMPILE) -fjni -o $@ $<\n+\t$(LTGCJCOMPILE) -fjni -o $@ -c $<\n \n ## A special case.  The sibcall optimization can change the number of\n ## frames on the stack, and StackTrace makes assumptions about this\n ## number.\n gnu/gcj/runtime/StackTrace.lo: gnu/gcj/runtime/StackTrace.java\n-\t$(GCJCOMPILE) -fno-optimize-sibling-calls -o $@ $<\n+\t$(LTGCJCOMPILE) -fno-optimize-sibling-calls -o $@ -c $<\n \n lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)\n \t@echo Creating list of files to link..."}, {"sha": "e2783abb2694dc69ac2898bec0ed406d9995a305", "filename": "libjava/Makefile.in", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/351cfd8b8da5b9e80a488b6a24766371ebbe602d/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/351cfd8b8da5b9e80a488b6a24766371ebbe602d/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=351cfd8b8da5b9e80a488b6a24766371ebbe602d", "patch": "@@ -3827,6 +3827,7 @@ LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \\\n CXXLD = $(CXX)\n CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \\\n \t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n+GCJCOMPILE = $(GCJ) $(AM_GCJFLAGS) $(GCJFLAGS)\n LTGCJCOMPILE = $(LIBTOOL) --mode=compile $(GCJ) $(AM_GCJFLAGS) \\\n \t$(GCJFLAGS)\n GCJLD = $(GCJ)\n@@ -4129,7 +4130,6 @@ secdir = $(libdir)/security\n propdir = $(libdir)\n bin_SCRIPTS = addr2name.awk\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8 -Wno-deprecated\n-GCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ_WITH_FLAGS) -fclasspath= -fbootclasspath=$(here) $(JC1FLAGS) -MD -MT $@ -MF $(@:.lo=.d) -c\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n JAVAC = $(GCJ_WITH_FLAGS) -C\n@@ -4152,6 +4152,7 @@ AM_CXXFLAGS = \\\n \n AM_GCJFLAGS = \\\n \t@LIBGCJ_JAVAFLAGS@ \\\n+\t-fclasspath= -fbootclasspath=$(here) \\\n \t--encoding=UTF-8 \\\n \t-Wno-deprecated\n \n@@ -21748,7 +21749,7 @@ $(gtk_jni_headers): $(gtk_awt_peer_sources)\n $(lib_gnu_java_awt_peer_gtk_la_OBJECTS): $(lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES)\n \n %.properties.lo: %.properties\n-\t$(GCJCOMPILE) -o $@ -c $< -Wc,--resource,`echo $@ | sed \"s/\\.lo$$//\"`\n+\t$(LTGCJCOMPILE) -o $@ -c $< -Wc,--resource,`echo $@ | sed \"s/\\.lo$$//\"`\n \n # Compile all classfiles in one go.\n \n@@ -21793,13 +21794,13 @@ clean-nat:\n \trm -f $(nat_files) $(xlib_nat_files)\n \n $(filter-out gnu/gcj/runtime/StackTrace.lo, $(javao_files)) $(xlib_javao_files) $(lib_org_w3c_dom_la_OBJECTS) $(lib_org_xml_sax_la_OBJECTS): %.lo: %.java\n-\t$(GCJCOMPILE) -o $@ $<\n+\t$(LTGCJCOMPILE) -o $@ -c $<\n \n $(gtk_awt_peer_sources:.java=.lo): %.lo: %.java\n-\t$(GCJCOMPILE) -fjni -o $@ $<\n+\t$(LTGCJCOMPILE) -fjni -o $@ -c $<\n \n gnu/gcj/runtime/StackTrace.lo: gnu/gcj/runtime/StackTrace.java\n-\t$(GCJCOMPILE) -fno-optimize-sibling-calls -o $@ $<\n+\t$(LTGCJCOMPILE) -fno-optimize-sibling-calls -o $@ -c $<\n \n lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)\n \t@echo Creating list of files to link..."}]}