{"sha": "3b97715af0e848ef8703ac04665bde562b2ac159", "node_id": "C_kwDOANBUbNoAKDNiOTc3MTVhZjBlODQ4ZWY4NzAzYWMwNDY2NWJkZTU2MmIyYWMxNTk", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2023-03-17T11:04:12Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2023-03-23T11:00:54Z"}, "message": "amdgcn: Fix register size bug\n\nFix an issue in which \"vectors\" of duplicate entries placed in scalar\nregisters caused the following 63 registers to be marked live, for the\npurpose of prologue generation, which resulted in stack corruption.\n\ngcc/ChangeLog:\n\n\t* config/gcn/gcn.cc (gcn_class_max_nregs): Handle vectors in SGPRs.\n\t(move_callee_saved_registers): Detect the bug condition early.", "tree": {"sha": "84c028c9f97b7caa87781b54eb2021ba6be108bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84c028c9f97b7caa87781b54eb2021ba6be108bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b97715af0e848ef8703ac04665bde562b2ac159", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b97715af0e848ef8703ac04665bde562b2ac159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b97715af0e848ef8703ac04665bde562b2ac159", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b97715af0e848ef8703ac04665bde562b2ac159/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db80ccd34365c14e529111c94b93d3fb201b6eef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db80ccd34365c14e529111c94b93d3fb201b6eef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db80ccd34365c14e529111c94b93d3fb201b6eef"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "a7d278cd2f856f258a6c0ca566a0882491e3738e", "filename": "gcc/config/gcn/gcn.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b97715af0e848ef8703ac04665bde562b2ac159/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b97715af0e848ef8703ac04665bde562b2ac159/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.cc?ref=3b97715af0e848ef8703ac04665bde562b2ac159", "patch": "@@ -492,6 +492,15 @@ gcn_class_max_nregs (reg_class_t rclass, machine_mode mode)\n     }\n   else if (rclass == VCC_CONDITIONAL_REG && mode == BImode)\n     return 2;\n+\n+  /* Vector modes in SGPRs are not supposed to happen (disallowed by\n+     gcn_hard_regno_mode_ok), but there are some patterns that have an \"Sv\"\n+     constraint and are used by splitters, post-reload.\n+     This ensures that we don't accidentally mark the following 63 scalar\n+     registers as \"live\".  */\n+  if (rclass == SGPR_REGS && VECTOR_MODE_P (mode))\n+    return CEIL (GET_MODE_SIZE (GET_MODE_INNER (mode)), 4);\n+\n   return CEIL (GET_MODE_SIZE (mode), 4);\n }\n \n@@ -3239,6 +3248,10 @@ move_callee_saved_registers (rtx sp, machine_function *offsets,\n       emit_insn (move_vectors);\n       emit_insn (move_scalars);\n     }\n+\n+  /* This happens when a new register becomes \"live\" after reload.\n+     Check your splitters!  */\n+  gcc_assert (offset <= offsets->callee_saves);\n }\n \n /* Generate prologue.  Called from gen_prologue during pro_and_epilogue pass."}]}