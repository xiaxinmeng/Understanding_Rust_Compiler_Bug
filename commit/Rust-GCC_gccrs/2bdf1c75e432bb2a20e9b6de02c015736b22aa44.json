{"sha": "2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkZjFjNzVlNDMyYmIyYTIwZTliNmRlMDJjMDE1NzM2YjIyYWE0NA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-05-31T09:41:53Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-05-31T09:41:53Z"}, "message": "re PR fortran/57456 ([OOP] CLASS + CHARACTER ALLOCATE with typespec: For arrays, the typespec is ignored)\n\n2013-05-31  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57456\n        * trans-array.c (gfc_array_init_size): Use passed type spec,\n        when available.\n        (gfc_array_allocate): Pass typespec on.\n        * trans-array.h (gfc_array_allocate): Update prototype.\n        * trans-stmt.c (gfc_trans_allocate): Pass typespec on.\n\n2013-05-31  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57456\n        * gfortran.dg/class_array_17.f90: New.\n\nFrom-SVN: r199528", "tree": {"sha": "4511aef20055a51c7a4900e5ca7da1efa573f5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4511aef20055a51c7a4900e5ca7da1efa573f5b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6af05a9b34eab3b8aafa34b54adbec2c70a304f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6af05a9b34eab3b8aafa34b54adbec2c70a304f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6af05a9b34eab3b8aafa34b54adbec2c70a304f"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "8447e7a3496b6d001108dc71a2e21945d5f146f1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "patch": "@@ -1,3 +1,12 @@\n+2013-05-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57456\n+\t* trans-array.c (gfc_array_init_size): Use passed type spec,\n+\twhen available.\n+\t(gfc_array_allocate): Pass typespec on.\n+\t* trans-array.h (gfc_array_allocate): Update prototype.\n+\t* trans-stmt.c (gfc_trans_allocate): Pass typespec on.\n+\n 2013-05-31  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/54190"}, {"sha": "855627889c315d4866c4dd72306813fe8963dd57", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "patch": "@@ -4834,7 +4834,8 @@ static tree\n gfc_array_init_size (tree descriptor, int rank, int corank, tree * poffset,\n \t\t     gfc_expr ** lower, gfc_expr ** upper, stmtblock_t * pblock,\n \t\t     stmtblock_t * descriptor_block, tree * overflow,\n-\t\t     tree expr3_elem_size, tree *nelems, gfc_expr *expr3)\n+\t\t     tree expr3_elem_size, tree *nelems, gfc_expr *expr3,\n+\t\t     gfc_typespec *ts)\n {\n   tree type;\n   tree tmp;\n@@ -5012,6 +5013,9 @@ gfc_array_init_size (tree descriptor, int rank, int corank, tree * poffset,\n \t  tmp = TYPE_SIZE_UNIT (tmp);\n \t}\n     }\n+  else if (ts->type != BT_UNKNOWN && ts->type != BT_CHARACTER)\n+    /* FIXME: Properly handle characters.  See PR 57456.  */\n+    tmp = TYPE_SIZE_UNIT (gfc_typenode_for_spec (ts));\n   else\n     tmp = TYPE_SIZE_UNIT (gfc_get_element_type (type));\n \n@@ -5081,7 +5085,7 @@ gfc_array_init_size (tree descriptor, int rank, int corank, tree * poffset,\n bool\n gfc_array_allocate (gfc_se * se, gfc_expr * expr, tree status, tree errmsg,\n \t\t    tree errlen, tree label_finish, tree expr3_elem_size,\n-\t\t    tree *nelems, gfc_expr *expr3)\n+\t\t    tree *nelems, gfc_expr *expr3, gfc_typespec *ts)\n {\n   tree tmp;\n   tree pointer;\n@@ -5166,7 +5170,7 @@ gfc_array_allocate (gfc_se * se, gfc_expr * expr, tree status, tree errmsg,\n   size = gfc_array_init_size (se->expr, ref->u.ar.as->rank,\n \t\t\t      ref->u.ar.as->corank, &offset, lower, upper,\n \t\t\t      &se->pre, &set_descriptor_block, &overflow,\n-\t\t\t      expr3_elem_size, nelems, expr3);\n+\t\t\t      expr3_elem_size, nelems, expr3, ts);\n \n   if (dimension)\n     {"}, {"sha": "d00e156de22110219c7d4a0337416242534fab16", "filename": "gcc/fortran/trans-array.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ffortran%2Ftrans-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ffortran%2Ftrans-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.h?ref=2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "patch": "@@ -24,7 +24,7 @@ tree gfc_array_deallocate (tree, tree, tree, tree, tree, gfc_expr*);\n /* Generate code to initialize and allocate an array.  Statements are added to\n    se, which should contain an expression for the array descriptor.  */\n bool gfc_array_allocate (gfc_se *, gfc_expr *, tree, tree, tree, tree,\n-\t\t\t tree, tree *, gfc_expr *);\n+\t\t\t tree, tree *, gfc_expr *, gfc_typespec *);\n \n /* Allow the bounds of a loop to be set from a callee's array spec.  */\n void gfc_set_loop_bounds_from_array_spec (gfc_interface_mapping *,"}, {"sha": "7759b869e4891d41673204763ee22a722d31004f", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "patch": "@@ -4925,7 +4925,7 @@ gfc_trans_allocate (gfc_code * code)\n \n       nelems = NULL_TREE;\n       if (!gfc_array_allocate (&se, expr, stat, errmsg, errlen, label_finish,\n-\t\t\t       memsz, &nelems, code->expr3))\n+\t\t\t       memsz, &nelems, code->expr3, &code->ext.alloc.ts))\n \t{\n \t  bool unlimited_char;\n "}, {"sha": "c2f600f847520753bd6c8261a10a8e18a7630ed8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "patch": "@@ -1,3 +1,8 @@\n+2013-05-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57456\n+\t* gfortran.dg/class_array_17.f90: New.\n+\n 2013-05-31  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/56315"}, {"sha": "4b3d5ddc3af6c6386e94d3c5b6a40a03d46de92e", "filename": "gcc/testsuite/gfortran.dg/class_array_17.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bdf1c75e432bb2a20e9b6de02c015736b22aa44/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_array_17.f90?ref=2bdf1c75e432bb2a20e9b6de02c015736b22aa44", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/57456\n+!\n+module m\n+  implicit none\n+  type t\n+    integer :: i\n+   end type t\n+  type, extends(t) :: t2\n+    integer :: j\n+   end type t2\n+end module m\n+\n+program test\n+  use m\n+  implicit none\n+  integer :: i\n+  class(t), save, allocatable :: y(:)\n+\n+  allocate (t2 :: y(5))\n+  select type(y)\n+  type is (t2)\n+    do i = 1, 5\n+      y(i)%i = i\n+      y(i)%j = i*10\n+    end do\n+  end select\n+  deallocate(y)\n+end\n+\n+! { dg-final { scan-tree-dump-times \"__builtin_malloc (40);\" 0 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}