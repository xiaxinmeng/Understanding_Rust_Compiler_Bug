{"sha": "385b73ab1dd53d3815d929792166e07cc37f969f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg1YjczYWIxZGQ1M2QzODE1ZDkyOTc5MjE2NmUwN2NjMzdmOTY5Zg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2011-10-13T18:25:10Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2011-10-13T18:25:10Z"}, "message": "class.c (sorted_fields_type_new): Factor out of ...\n\n\t* class.c (sorted_fields_type_new): Factor out of ...\n\t(finish_struct_1): ... here.\n\nFrom-SVN: r179939", "tree": {"sha": "8afb69dc05087ed6a7ddcb5c82f4429de08c3999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8afb69dc05087ed6a7ddcb5c82f4429de08c3999"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/385b73ab1dd53d3815d929792166e07cc37f969f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385b73ab1dd53d3815d929792166e07cc37f969f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/385b73ab1dd53d3815d929792166e07cc37f969f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385b73ab1dd53d3815d929792166e07cc37f969f/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1fb0b80148f60850b5e2595d5e125cb826eafd6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fb0b80148f60850b5e2595d5e125cb826eafd6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fb0b80148f60850b5e2595d5e125cb826eafd6c"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "18c98bb3f3539cec1f6db32ea925b3fa24f6eb7b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385b73ab1dd53d3815d929792166e07cc37f969f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385b73ab1dd53d3815d929792166e07cc37f969f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=385b73ab1dd53d3815d929792166e07cc37f969f", "patch": "@@ -1,3 +1,8 @@\n+2011-10-13   Diego Novillo  <dnovillo@google.com>\n+\n+\t* class.c (sorted_fields_type_new): Factor out of ...\n+\t(finish_struct_1): ... here.\n+\n 2011-10-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50618"}, {"sha": "61850543b5471983648b34f9076ef2a42f18c076", "filename": "gcc/cp/class.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385b73ab1dd53d3815d929792166e07cc37f969f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385b73ab1dd53d3815d929792166e07cc37f969f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=385b73ab1dd53d3815d929792166e07cc37f969f", "patch": "@@ -5663,6 +5663,22 @@ determine_key_method (tree type)\n   return;\n }\n \n+\n+/* Allocate and return an instance of struct sorted_fields_type with\n+   N fields.  */\n+\n+static struct sorted_fields_type *\n+sorted_fields_type_new (int n)\n+{\n+  struct sorted_fields_type *sft;\n+  sft = ggc_alloc_sorted_fields_type (sizeof (struct sorted_fields_type)\n+\t\t\t\t      + n * sizeof (tree));\n+  sft->len = n;\n+\n+  return sft;\n+}\n+\n+\n /* Perform processing required when the definition of T (a class type)\n    is complete.  */\n \n@@ -5792,9 +5808,7 @@ finish_struct_1 (tree t)\n   n_fields = count_fields (TYPE_FIELDS (t));\n   if (n_fields > 7)\n     {\n-      struct sorted_fields_type *field_vec = ggc_alloc_sorted_fields_type\n-\t (sizeof (struct sorted_fields_type) + n_fields * sizeof (tree));\n-      field_vec->len = n_fields;\n+      struct sorted_fields_type *field_vec = sorted_fields_type_new (n_fields);\n       add_fields_to_record_type (TYPE_FIELDS (t), field_vec, 0);\n       qsort (field_vec->elts, n_fields, sizeof (tree),\n \t     field_decl_cmp);"}]}