{"sha": "599122fa690d55e5e14d74f4d514b2d8b6a98505", "node_id": "C_kwDOANBUbNoAKDU5OTEyMmZhNjkwZDU1ZTVlMTRkNzRmNGQ1MTRiMmQ4YjZhOTg1MDU", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-02-03T21:24:21Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-02-03T21:25:21Z"}, "message": "i386: Do not use %ecx DRAP for functions that use __builtin_eh_return [PR104362]\n\n%ecx can't be used for both DRAP register and eh_return.  Adjust find_drap_reg\nto choose %edi for functions that uses __builtin_eh_return to avoid the assert\nin ix86_expand_epilogue that enforces this rule.\n\n2022-02-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\tPR target/104362\n\t* config/i386/i386.cc (find_drap_reg): For 32bit targets\n\treturn DI_REG if function uses __builtin_eh_return.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/104362\n\t* gcc.target/i386/pr104362.c: New test.", "tree": {"sha": "bd23a9ee07d4d97be6e321a47aef1c71d5141c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd23a9ee07d4d97be6e321a47aef1c71d5141c32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/599122fa690d55e5e14d74f4d514b2d8b6a98505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599122fa690d55e5e14d74f4d514b2d8b6a98505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/599122fa690d55e5e14d74f4d514b2d8b6a98505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599122fa690d55e5e14d74f4d514b2d8b6a98505/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30d15b512e375dee1b288d66c398513b8cb3e2aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30d15b512e375dee1b288d66c398513b8cb3e2aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30d15b512e375dee1b288d66c398513b8cb3e2aa"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "dd5584fb8edfaec3d46a868c6ebc2844e3fccf6e", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599122fa690d55e5e14d74f4d514b2d8b6a98505/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599122fa690d55e5e14d74f4d514b2d8b6a98505/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=599122fa690d55e5e14d74f4d514b2d8b6a98505", "patch": "@@ -7400,7 +7400,8 @@ find_drap_reg (void)\n \t register in such case.  */\n       if (DECL_STATIC_CHAIN (decl)\n \t  || cfun->machine->no_caller_saved_registers\n-\t  || crtl->tail_call_emit)\n+\t  || crtl->tail_call_emit\n+\t  || crtl->calls_eh_return)\n \treturn DI_REG;\n \n       /* Reuse static chain register if it isn't used for parameter"}, {"sha": "5e5422e267923cc97e562b6b04d00abba19e37c1", "filename": "gcc/testsuite/gcc.target/i386/pr104362.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599122fa690d55e5e14d74f4d514b2d8b6a98505/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104362.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599122fa690d55e5e14d74f4d514b2d8b6a98505/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104362.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104362.c?ref=599122fa690d55e5e14d74f4d514b2d8b6a98505", "patch": "@@ -0,0 +1,24 @@\n+/* PR target/104362 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f\" } */\n+\n+struct _Unwind_Context\n+{\n+  void *ra;\n+  char array[48];\n+};\n+\n+extern long uw_install_context_1 (struct _Unwind_Context *);\n+\n+void\n+_Unwind_RaiseException (void)\n+{\n+  struct _Unwind_Context this_context, cur_context;\n+  __builtin_memset(&this_context, 55, sizeof(this_context));\n+  long offset = uw_install_context_1 (&this_context);\n+  __builtin_memcpy (&this_context, &cur_context,\n+                    sizeof (struct _Unwind_Context));\n+  void *handler = __builtin_frob_return_addr ((&cur_context)->ra);\n+  uw_install_context_1 (&cur_context);\n+  __builtin_eh_return (offset, handler);\n+}"}]}