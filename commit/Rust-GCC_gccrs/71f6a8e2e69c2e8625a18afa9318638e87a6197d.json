{"sha": "71f6a8e2e69c2e8625a18afa9318638e87a6197d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFmNmE4ZTJlNjljMmU4NjI1YTE4YWZhOTMxODYzOGU4N2E2MTk3ZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1998-10-22T16:30:34Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1998-10-22T16:30:34Z"}, "message": "jcf-path.c (add_entry): Don't add trailing separator if entry is a .zip file.\n\n\t* jcf-path.c (add_entry): Don't add trailing separator if entry is\n\ta .zip file.\n\t(add_path): Don't add trailing separator to non-empty path\n\telements.\n\t* lang.c (lang_decode_option): Check for -fclasspath and\n\t-fCLASSPATH before examining other `-f' options.\n\nFrom-SVN: r23229", "tree": {"sha": "c41434d35bb694b5425a55169cd7fc73f7d24062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c41434d35bb694b5425a55169cd7fc73f7d24062"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71f6a8e2e69c2e8625a18afa9318638e87a6197d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f6a8e2e69c2e8625a18afa9318638e87a6197d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71f6a8e2e69c2e8625a18afa9318638e87a6197d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f6a8e2e69c2e8625a18afa9318638e87a6197d/comments", "author": null, "committer": null, "parents": [{"sha": "b18cfc286169fd26073ec1655f6a72d10fd6552d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b18cfc286169fd26073ec1655f6a72d10fd6552d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b18cfc286169fd26073ec1655f6a72d10fd6552d"}], "stats": {"total": 62, "additions": 35, "deletions": 27}, "files": [{"sha": "67da72669740f3512b290dc38df258ec78b1fb06", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f6a8e2e69c2e8625a18afa9318638e87a6197d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f6a8e2e69c2e8625a18afa9318638e87a6197d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=71f6a8e2e69c2e8625a18afa9318638e87a6197d", "patch": "@@ -1,5 +1,13 @@\n 1998-10-22  Tom Tromey  <tromey@cygnus.com>\n \n+\t* jcf-path.c (add_entry): Don't add trailing separator if entry is\n+\ta .zip file.\n+\t(add_path): Don't add trailing separator to non-empty path\n+\telements.\n+\n+\t* lang.c (lang_decode_option): Check for -fclasspath and\n+\t-fCLASSPATH before examining other `-f' options.\n+\n \t* java-tree.h (finalize_identifier_node): Don't declare.\n \t* class.c (make_class_data): Don't push \"final\" field.\n \t* decl.c (init_decl_processing): Don't push \"final\" field."}, {"sha": "829f99a194777204e91c90d15718b8fd521d254f", "filename": "gcc/java/jcf-path.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f6a8e2e69c2e8625a18afa9318638e87a6197d/gcc%2Fjava%2Fjcf-path.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f6a8e2e69c2e8625a18afa9318638e87a6197d/gcc%2Fjava%2Fjcf-path.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-path.c?ref=71f6a8e2e69c2e8625a18afa9318638e87a6197d", "patch": "@@ -152,7 +152,9 @@ add_entry (entp, filename, is_system)\n \tn->flags |= FLAG_SYSTEM;\n     }\n \n-  if (filename[len - 1] != '/' && filename[len - 1] != DIR_SEPARATOR)\n+  if (! (n->flags & FLAG_ZIP)\n+      && filename[len - 1] != '/'\n+      && filename[len - 1] != DIR_SEPARATOR)\n     {\n       char *f2 = (char *) alloca (len + 1);\n       strcpy (f2, filename);\n@@ -186,20 +188,17 @@ add_path (entp, cp, is_system)\n \t{\n \t  if (! *endp || *endp == PATH_SEPARATOR)\n \t    {\n-\t      strncpy (buf, startp, endp - startp);\n \t      if (endp == startp)\n \t\t{\n \t\t  buf[0] = '.';\n \t\t  buf[1] = DIR_SEPARATOR;\n \t\t  buf[2] = '\\0';\n \t\t}\n-\t      else if (endp[-1] != '/' && endp[1] != DIR_SEPARATOR)\n+\t      else\n \t\t{\n-\t\t  buf[endp - startp] = DIR_SEPARATOR;\n-\t\t  buf[endp - startp + 1] = '\\0';\n+\t\t  strncpy (buf, startp, endp - startp);\n+\t\t  buf[endp - startp] = '\\0';\n \t\t}\n-\t      else\n-\t\tbuf[endp - startp] = '\\0';\n \t      add_entry (entp, buf, is_system);\n \t      if (! *endp)\n \t\tbreak;"}, {"sha": "96debd018476b16cfe1ef982c65766005b560fc8", "filename": "gcc/java/lang.c", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f6a8e2e69c2e8625a18afa9318638e87a6197d/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f6a8e2e69c2e8625a18afa9318638e87a6197d/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=71f6a8e2e69c2e8625a18afa9318638e87a6197d", "patch": "@@ -126,6 +126,27 @@ lang_decode_option (argc, argv)\n      char **argv;\n {\n   char *p = argv[0];\n+\n+#define CLARG \"-fclasspath=\"\n+  if (strncmp (p, CLARG, sizeof (CLARG) - 1) == 0)\n+    {\n+      jcf_path_classpath_arg (p + sizeof (CLARG) - 1);\n+      return 1;\n+    }\n+#undef CLARG\n+#define CLARG \"-fCLASSPATH=\"\n+  else if (strncmp (p, CLARG, sizeof (CLARG) - 1) == 0)\n+    {\n+      jcf_path_CLASSPATH_arg (p + sizeof (CLARG) - 1);\n+      return 1;\n+    }\n+#undef CLARG\n+  else if (strncmp (p, \"-I\", 2) == 0)\n+    {\n+      jcf_path_include_arg (p + 2);\n+      return 1;\n+    }\n+\n   if (p[0] == '-' && p[1] == 'f')\n     {\n       /* Some kind of -f option.\n@@ -183,26 +204,6 @@ lang_decode_option (argc, argv)\n       return 1;\n     }\n \n-#define CLARG \"-fclasspath=\"\n-  if (strncmp (p, CLARG, sizeof (CLARG) - 1) == 0)\n-    {\n-      jcf_path_classpath_arg (p + sizeof (CLARG));\n-      return 1;\n-    }\n-#undef CLARG\n-#define CLARG \"-fCLASSPATH=\"\n-  else if (strncmp (p, CLARG, sizeof (CLARG) - 1) == 0)\n-    {\n-      jcf_path_CLASSPATH_arg (p + sizeof (CLARG));\n-      return 1;\n-    }\n-#undef CLARG\n-  else if (strncmp (p, \"-I\", 2) == 0)\n-    {\n-      jcf_path_include_arg (p + 2);\n-      return 1;\n-    }\n-\n   return 0;\n }\n "}]}