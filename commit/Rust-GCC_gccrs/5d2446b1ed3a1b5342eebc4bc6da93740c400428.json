{"sha": "5d2446b1ed3a1b5342eebc4bc6da93740c400428", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQyNDQ2YjFlZDNhMWI1MzQyZWViYzRiYzZkYTkzNzQwYzQwMDQyOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-05-19T07:10:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-05-19T07:10:15Z"}, "message": "caller-save.c (init_caller_save): Use word_mode and FIRST_PSEUDO_REGISTER when creating temporary rtxes.\n\ngcc/\n\t* caller-save.c (init_caller_save): Use word_mode and\n\tFIRST_PSEUDO_REGISTER when creating temporary rtxes.\n\t* expr.c (init_expr_target): Likewise.\n\t* ira.c (setup_prohibited_mode_move_regs): Likewise.\n\t* postreload.c (reload_cse_regs_1): Likewise.\n\nFrom-SVN: r223340", "tree": {"sha": "660647f16402a255959c61c4d4b8128ae70e90d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/660647f16402a255959c61c4d4b8128ae70e90d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d2446b1ed3a1b5342eebc4bc6da93740c400428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2446b1ed3a1b5342eebc4bc6da93740c400428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2446b1ed3a1b5342eebc4bc6da93740c400428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2446b1ed3a1b5342eebc4bc6da93740c400428/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fccb3359422e2c649e55e20713b9a8fa2c1d0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fccb3359422e2c649e55e20713b9a8fa2c1d0be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fccb3359422e2c649e55e20713b9a8fa2c1d0be"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "f2ce42bd115c4a9e8468c7f46e3c692104d4162b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d2446b1ed3a1b5342eebc4bc6da93740c400428", "patch": "@@ -1,3 +1,11 @@\n+2015-05-19  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* caller-save.c (init_caller_save): Use word_mode and\n+\tFIRST_PSEUDO_REGISTER when creating temporary rtxes.\n+\t* expr.c (init_expr_target): Likewise.\n+\t* ira.c (setup_prohibited_mode_move_regs): Likewise.\n+\t* postreload.c (reload_cse_regs_1): Likewise.\n+\n 2015-05-19  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* rtl.def (REG): Change format to \"r\"."}, {"sha": "fcc36488bcab7b2f39a68d60ae292660a3e142c6", "filename": "gcc/caller-save.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=5d2446b1ed3a1b5342eebc4bc6da93740c400428", "patch": "@@ -287,8 +287,8 @@ init_caller_save (void)\n      To avoid lots of unnecessary RTL allocation, we construct all the RTL\n      once, then modify the memory and register operands in-place.  */\n \n-  test_reg = gen_rtx_REG (VOIDmode, 0);\n-  test_mem = gen_rtx_MEM (VOIDmode, address);\n+  test_reg = gen_rtx_REG (word_mode, FIRST_PSEUDO_REGISTER);\n+  test_mem = gen_rtx_MEM (word_mode, address);\n   savepat = gen_rtx_SET (test_mem, test_reg);\n   restpat = gen_rtx_SET (test_reg, test_mem);\n "}, {"sha": "80e6350d2d50d784358dff295cee280492583961", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=5d2446b1ed3a1b5342eebc4bc6da93740c400428", "patch": "@@ -202,12 +202,12 @@ init_expr_target (void)\n   /* Try indexing by frame ptr and try by stack ptr.\n      It is known that on the Convex the stack ptr isn't a valid index.\n      With luck, one or the other is valid on any machine.  */\n-  mem = gen_rtx_MEM (VOIDmode, stack_pointer_rtx);\n-  mem1 = gen_rtx_MEM (VOIDmode, frame_pointer_rtx);\n+  mem = gen_rtx_MEM (word_mode, stack_pointer_rtx);\n+  mem1 = gen_rtx_MEM (word_mode, frame_pointer_rtx);\n \n   /* A scratch register we can modify in-place below to avoid\n      useless RTL allocations.  */\n-  reg = gen_rtx_REG (VOIDmode, -1);\n+  reg = gen_rtx_REG (word_mode, FIRST_PSEUDO_REGISTER);\n \n   insn = rtx_alloc (INSN);\n   pat = gen_rtx_SET (NULL_RTX, NULL_RTX);"}, {"sha": "0c7c6ac1f292c084f788f20a2b58fc34661f9c9d", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=5d2446b1ed3a1b5342eebc4bc6da93740c400428", "patch": "@@ -1767,8 +1767,8 @@ setup_prohibited_mode_move_regs (void)\n   if (ira_prohibited_mode_move_regs_initialized_p)\n     return;\n   ira_prohibited_mode_move_regs_initialized_p = true;\n-  test_reg1 = gen_rtx_REG (VOIDmode, 0);\n-  test_reg2 = gen_rtx_REG (VOIDmode, 0);\n+  test_reg1 = gen_rtx_REG (word_mode, FIRST_PSEUDO_REGISTER);\n+  test_reg2 = gen_rtx_REG (word_mode, FIRST_PSEUDO_REGISTER);\n   move_pat = gen_rtx_SET (test_reg1, test_reg2);\n   move_insn = gen_rtx_INSN (VOIDmode, 0, 0, 0, move_pat, 0, -1, 0);\n   for (i = 0; i < NUM_MACHINE_MODES; i++)"}, {"sha": "a0026db0f50d20aae2305e19e9a49f6791c5a12b", "filename": "gcc/postreload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2446b1ed3a1b5342eebc4bc6da93740c400428/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=5d2446b1ed3a1b5342eebc4bc6da93740c400428", "patch": "@@ -234,7 +234,7 @@ reload_cse_regs_1 (void)\n   bool cfg_changed = false;\n   basic_block bb;\n   rtx_insn *insn;\n-  rtx testreg = gen_rtx_REG (VOIDmode, -1);\n+  rtx testreg = gen_rtx_REG (word_mode, FIRST_PSEUDO_REGISTER);\n \n   cselib_init (CSELIB_RECORD_MEMORY);\n   init_alias_analysis ();"}]}