{"sha": "83d7e8f06ecf948275efda077533032fe65a4855", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNkN2U4ZjA2ZWNmOTQ4Mjc1ZWZkYTA3NzUzMzAzMmZlNjVhNDg1NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2007-08-27T20:02:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-08-27T20:02:22Z"}, "message": "re PR c++/31337 (ICE with statement expression)\n\n        PR c++/31337\n        * gimplify.c (gimplify_modify_expr): Discard the assignment of\n        zero-sized types after calling gimplify_modify_expr_rhs.\n        * testsuite/g++.dg/ext/stmtexpr11.C: New.\n\nFrom-SVN: r127838", "tree": {"sha": "0beec1120900beb0a9e1598d152f7637242092b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0beec1120900beb0a9e1598d152f7637242092b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83d7e8f06ecf948275efda077533032fe65a4855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d7e8f06ecf948275efda077533032fe65a4855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83d7e8f06ecf948275efda077533032fe65a4855", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d7e8f06ecf948275efda077533032fe65a4855/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9da72d66843838db60867accef31278aa961833c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da72d66843838db60867accef31278aa961833c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9da72d66843838db60867accef31278aa961833c"}], "stats": {"total": 44, "additions": 36, "deletions": 8}, "files": [{"sha": "995a7d4eaee705596f9ee7563492aa9853599736", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d7e8f06ecf948275efda077533032fe65a4855/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d7e8f06ecf948275efda077533032fe65a4855/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83d7e8f06ecf948275efda077533032fe65a4855", "patch": "@@ -1,3 +1,9 @@\n+2007-08-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/31337\n+\t* gimplify.c (gimplify_modify_expr): Discard the assignment of \n+\tzero-sized types after calling gimplify_modify_expr_rhs.\n+\n 2007-08-27  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* regclass.c (init_reg_autoinc): Fix typo."}, {"sha": "aed8ab769496883b7ea995b0ecdae8fd672cdcb3", "filename": "gcc/gimplify.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d7e8f06ecf948275efda077533032fe65a4855/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d7e8f06ecf948275efda077533032fe65a4855/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=83d7e8f06ecf948275efda077533032fe65a4855", "patch": "@@ -3654,8 +3654,16 @@ gimplify_modify_expr (tree *expr_p, tree *pre_p, tree *post_p, bool want_value)\n \t      || TREE_CODE (*expr_p) == GIMPLE_MODIFY_STMT\n \t      || TREE_CODE (*expr_p) == INIT_EXPR);\n \n-  /* For zero sized types only gimplify the left hand side and right hand side\n-     as statements and throw away the assignment.  */\n+  /* See if any simplifications can be done based on what the RHS is.  */\n+  ret = gimplify_modify_expr_rhs (expr_p, from_p, to_p, pre_p, post_p,\n+\t\t\t\t  want_value);\n+  if (ret != GS_UNHANDLED)\n+    return ret;\n+\n+  /* For zero sized types only gimplify the left hand side and right hand\n+     side as statements and throw away the assignment.  Do this after\n+     gimplify_modify_expr_rhs so we handle TARGET_EXPRs of addressable\n+     types properly.  */\n   if (zero_sized_type (TREE_TYPE (*from_p)))\n     {\n       gimplify_stmt (from_p);\n@@ -3666,12 +3674,6 @@ gimplify_modify_expr (tree *expr_p, tree *pre_p, tree *post_p, bool want_value)\n       return GS_ALL_DONE;\n     }\n \n-  /* See if any simplifications can be done based on what the RHS is.  */\n-  ret = gimplify_modify_expr_rhs (expr_p, from_p, to_p, pre_p, post_p,\n-\t\t\t\t  want_value);\n-  if (ret != GS_UNHANDLED)\n-    return ret;\n-\n   /* If the value being copied is of variable width, compute the length\n      of the copy into a WITH_SIZE_EXPR.   Note that we need to do this\n      before gimplifying any of the operands so that we can resolve any"}, {"sha": "3795be363daa61eaecea253314f7ce5d911777f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d7e8f06ecf948275efda077533032fe65a4855/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d7e8f06ecf948275efda077533032fe65a4855/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=83d7e8f06ecf948275efda077533032fe65a4855", "patch": "@@ -1,3 +1,8 @@\n+2007-08-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/31337\n+\t* g++.dg/ext/stmtexpr11.C: New.\n+\n 2007-08-27  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* lib/target-supports.exp (check_profiling_available):"}, {"sha": "8b5c5f8476873a46d0ebfb015f4dc82671c09b8b", "filename": "gcc/testsuite/g++.dg/ext/stmtexpr11.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d7e8f06ecf948275efda077533032fe65a4855/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstmtexpr11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d7e8f06ecf948275efda077533032fe65a4855/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstmtexpr11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstmtexpr11.C?ref=83d7e8f06ecf948275efda077533032fe65a4855", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/31337\n+// { dg-options \"\" }\n+\n+struct A\n+{\n+  int i[0];\n+  A();\n+  A(const A&);\n+  ~A();\n+};\n+\n+void foo()\n+{\n+  A a = ({ A(); });\n+}"}]}