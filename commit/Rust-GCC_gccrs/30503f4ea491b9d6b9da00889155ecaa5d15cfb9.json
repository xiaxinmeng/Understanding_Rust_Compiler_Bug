{"sha": "30503f4ea491b9d6b9da00889155ecaa5d15cfb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA1MDNmNGVhNDkxYjlkNmI5ZGEwMDg4OTE1NWVjYWE1ZDE1Y2ZiOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-30T16:21:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-30T16:21:14Z"}, "message": "Remove global call sets: regcprop.c\n\nThis is a direct replacement of an existing test for fully and\npartially clobbered registers.\n\n2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* regcprop.c (copyprop_hardreg_forward_1): Use the recorded\n\tmode of the register when deciding whether it is no longer\n\tavailable after a call.\n\nFrom-SVN: r276331", "tree": {"sha": "120247e7798e2e7298525223dc422afc36979c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/120247e7798e2e7298525223dc422afc36979c44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30503f4ea491b9d6b9da00889155ecaa5d15cfb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30503f4ea491b9d6b9da00889155ecaa5d15cfb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30503f4ea491b9d6b9da00889155ecaa5d15cfb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30503f4ea491b9d6b9da00889155ecaa5d15cfb9/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35b81ea3f7412360d6f108c5b9b7a8a1b9f3b138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35b81ea3f7412360d6f108c5b9b7a8a1b9f3b138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35b81ea3f7412360d6f108c5b9b7a8a1b9f3b138"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "d1534e472c5e433365a36cacdeb39b0d26a106d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30503f4ea491b9d6b9da00889155ecaa5d15cfb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30503f4ea491b9d6b9da00889155ecaa5d15cfb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30503f4ea491b9d6b9da00889155ecaa5d15cfb9", "patch": "@@ -1,3 +1,9 @@\n+2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* regcprop.c (copyprop_hardreg_forward_1): Use the recorded\n+\tmode of the register when deciding whether it is no longer\n+\tavailable after a call.\n+\n 2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* recog.c: Include function-abi.h."}, {"sha": "87cc394ecf33308d8cbd8347e220649ec597403e", "filename": "gcc/regcprop.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30503f4ea491b9d6b9da00889155ecaa5d15cfb9/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30503f4ea491b9d6b9da00889155ecaa5d15cfb9/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=30503f4ea491b9d6b9da00889155ecaa5d15cfb9", "patch": "@@ -1055,16 +1055,15 @@ copyprop_hardreg_forward_1 (basic_block bb, struct value_data *vd)\n \n \t  function_abi callee_abi = insn_callee_abi (insn);\n \t  for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n-\t    if ((callee_abi.clobbers_full_reg_p (regno)\n-\t\t || (targetm.hard_regno_call_part_clobbered\n-\t\t     (callee_abi.id (), regno, vd->e[regno].mode)))\n+\t    if (vd->e[regno].mode != VOIDmode\n+\t\t&& callee_abi.clobbers_reg_p (vd->e[regno].mode, regno)\n \t\t&& (regno < set_regno || regno >= set_regno + set_nregs))\n \t      kill_value_regno (regno, 1, vd);\n \n \t  /* If SET was seen in CALL_INSN_FUNCTION_USAGE, and SET_SRC\n-\t     of the SET isn't in regs_invalidated_by_call hard reg set,\n-\t     but instead among CLOBBERs on the CALL_INSN, we could wrongly\n-\t     assume the value in it is still live.  */\n+\t     of the SET isn't clobbered by CALLEE_ABI, but instead among\n+\t     CLOBBERs on the CALL_INSN, we could wrongly assume the\n+\t     value in it is still live.  */\n \t  if (ksvd.ignore_set_reg)\n \t    kill_clobbered_values (insn, vd);\n \t}"}]}