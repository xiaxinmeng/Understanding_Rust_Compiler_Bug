{"sha": "8af6d9cdfecbe6691480819e9048b99d1aa0a2b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFmNmQ5Y2RmZWNiZTY2OTE0ODA4MTllOTA0OGI5OWQxYWEwYTJiNg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-08-11T20:28:07Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:28:07Z"}, "message": "Special case non close-phi nodes with one argument in rewrite_close_phi_out_of_ssa.\n\n2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Special\n\tcase non close-phi nodes with one argument.\n\nFrom-SVN: r163145", "tree": {"sha": "e51a72025e735b09b2fe60c5c54ba3760b873556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e51a72025e735b09b2fe60c5c54ba3760b873556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f36fc876e239306bf5236ac84c2d17d198c3ebf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36fc876e239306bf5236ac84c2d17d198c3ebf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36fc876e239306bf5236ac84c2d17d198c3ebf7"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "c40f769afd0c4d5cad25c2b9e602e52e99b6d6aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8af6d9cdfecbe6691480819e9048b99d1aa0a2b6", "patch": "@@ -1,3 +1,8 @@\n+2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Special\n+\tcase non close-phi nodes with one argument.\n+\n 2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* sese.h (scev_analyzable_p): Scevs could be expressions without"}, {"sha": "965ed2530c099fe88934cf81d200faf9a3436953", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=8af6d9cdfecbe6691480819e9048b99d1aa0a2b6", "patch": "@@ -1,3 +1,8 @@\n+2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Special\n+\tcase non close-phi nodes with one argument.\n+\n 2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* sese.h (scev_analyzable_p): Scevs could be expressions without"}, {"sha": "bea9c9f4c5ecae83a35047bc2938692ef677e8e2", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af6d9cdfecbe6691480819e9048b99d1aa0a2b6/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=8af6d9cdfecbe6691480819e9048b99d1aa0a2b6", "patch": "@@ -2203,22 +2203,34 @@ rewrite_close_phi_out_of_ssa (gimple_stmt_iterator *psi)\n   gimple phi = gsi_stmt (*psi);\n   tree res = gimple_phi_result (phi);\n   tree var = SSA_NAME_VAR (res);\n-  tree zero_dim_array = create_zero_dim_array (var, \"Close_Phi\");\n-  gimple_stmt_iterator gsi = gsi_after_labels (gimple_bb (phi));\n-  gimple stmt = gimple_build_assign (res, zero_dim_array);\n+  basic_block bb = gimple_bb (phi);\n+  gimple_stmt_iterator gsi = gsi_after_labels (bb);\n   tree arg = gimple_phi_arg_def (phi, 0);\n+  gimple stmt;\n \n   /* Note that loop close phi nodes should have a single argument\n      because we translated the representation into a canonical form\n      before Graphite: see canonicalize_loop_closed_ssa_form.  */\n   gcc_assert (gimple_phi_num_args (phi) == 1);\n \n-  if (TREE_CODE (arg) == SSA_NAME\n-      && !SSA_NAME_IS_DEFAULT_DEF (arg))\n-    insert_out_of_ssa_copy (zero_dim_array, arg, SSA_NAME_DEF_STMT (arg));\n+  /* The phi node can be a non close phi node, when its argument is\n+     invariant, or when it is defined in the same loop as the phi node.  */\n+  if (is_gimple_min_invariant (arg)\n+      || gimple_bb (SSA_NAME_DEF_STMT (arg))->loop_father == bb->loop_father)\n+    stmt = gimple_build_assign (res, arg);\n   else\n-    insert_out_of_ssa_copy_on_edge (single_pred_edge (gimple_bb (phi)),\n-\t\t\t\t    zero_dim_array, arg);\n+    {\n+      tree zero_dim_array = create_zero_dim_array (var, \"Close_Phi\");\n+\n+      stmt = gimple_build_assign (res, zero_dim_array);\n+\n+      if (TREE_CODE (arg) == SSA_NAME\n+\t  && !SSA_NAME_IS_DEFAULT_DEF (arg))\n+\tinsert_out_of_ssa_copy (zero_dim_array, arg, SSA_NAME_DEF_STMT (arg));\n+      else\n+\tinsert_out_of_ssa_copy_on_edge (single_pred_edge (bb),\n+\t\t\t\t\tzero_dim_array, arg);\n+    }\n \n   remove_phi_node (psi, false);\n   gsi_insert_before (&gsi, stmt, GSI_NEW_STMT);"}]}