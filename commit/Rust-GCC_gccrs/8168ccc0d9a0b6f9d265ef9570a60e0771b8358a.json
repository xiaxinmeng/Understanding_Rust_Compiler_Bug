{"sha": "8168ccc0d9a0b6f9d265ef9570a60e0771b8358a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE2OGNjYzBkOWEwYjZmOWQyNjVlZjk1NzBhNjBlMDc3MWI4MzU4YQ==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2010-02-18T17:29:58Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2010-02-18T17:29:58Z"}, "message": "lib1funcs.asm (__prefer_thumb__): New define.\n\n2010-02-18  Sebastian Huber <sebastian.huber@embedded-brains.de>\n\n\t* config/arm/lib1funcs.asm (__prefer_thumb__): New define.\n\t(udivsi3, aeabi_uidivmod, divsi3, aeabi_idivmod): Use Thumb-1 variant\n\tif __prefer_thumb__ is defined.\n\nFrom-SVN: r156868", "tree": {"sha": "74f1ddd834fa15feb129b2c92c6e8e6ffd96025a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74f1ddd834fa15feb129b2c92c6e8e6ffd96025a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8168ccc0d9a0b6f9d265ef9570a60e0771b8358a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8168ccc0d9a0b6f9d265ef9570a60e0771b8358a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8168ccc0d9a0b6f9d265ef9570a60e0771b8358a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8168ccc0d9a0b6f9d265ef9570a60e0771b8358a/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f95713bd99dda1e17866184eafbb404be5abde9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f95713bd99dda1e17866184eafbb404be5abde9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f95713bd99dda1e17866184eafbb404be5abde9"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "e483f91c386ad8e2312069effe8ff7a0ceb1d333", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8168ccc0d9a0b6f9d265ef9570a60e0771b8358a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8168ccc0d9a0b6f9d265ef9570a60e0771b8358a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8168ccc0d9a0b6f9d265ef9570a60e0771b8358a", "patch": "@@ -1,3 +1,9 @@\n+2010-02-18  Sebastian Huber <sebastian.huber@embedded-brains.de>\n+\n+\t* config/arm/lib1funcs.asm (__prefer_thumb__): New define.\n+\t(udivsi3, aeabi_uidivmod, divsi3, aeabi_idivmod): Use Thumb-1 variant\n+\tif __prefer_thumb__ is defined.\n+\n 2010-02-18  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/43066"}, {"sha": "d383b8ec477001bdc22b0eefe44d9699349e8844", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8168ccc0d9a0b6f9d265ef9570a60e0771b8358a/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8168ccc0d9a0b6f9d265ef9570a60e0771b8358a/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=8168ccc0d9a0b6f9d265ef9570a60e0771b8358a", "patch": "@@ -112,6 +112,18 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #error Unable to determine architecture.\n #endif\n \n+/* There are times when we might prefer Thumb1 code even if ARM code is\n+   permitted, for example, the code might be smaller, or there might be\n+   interworking problems with switching to ARM state if interworking is\n+   disabled.  */\n+#if (defined(__thumb__)\t\t\t\\\n+     && !defined(__thumb2__)\t\t\\\n+     && (!defined(__THUMB_INTERWORK__)\t\\\n+\t || defined (__OPTIMIZE_SIZE__)\t\\\n+\t || defined(__ARM_ARCH_6M__)))\n+# define __prefer_thumb__\n+#endif\n+\n /* How to return from a function call depends on the architecture variant.  */\n \n #if (__ARM_ARCH__ > 4) || defined(__ARM_ARCH_4T__)\n@@ -917,7 +929,7 @@ LSYM(Lgot_result):\n /* ------------------------------------------------------------------------ */\n #ifdef L_udivsi3\n \n-#if defined(__ARM_ARCH_6M__)\n+#if defined(__prefer_thumb__)\n \n \tFUNC_START udivsi3\n \tFUNC_ALIAS aeabi_uidiv udivsi3\n@@ -974,7 +986,7 @@ LSYM(udivsi3_skip_div0_test):\n \n \tDIV_FUNC_END udivsi3 unsigned\n \n-#if defined(__ARM_ARCH_6M__)\n+#if defined(__prefer_thumb__)\n FUNC_START aeabi_uidivmod\n \tcmp\tr1, #0\n \tbeq\tLSYM(Ldiv0)\n@@ -1042,7 +1054,7 @@ LSYM(Lover10):\n /* ------------------------------------------------------------------------ */\n #ifdef L_divsi3\n \n-#if defined(__ARM_ARCH_6M__)\n+#if defined(__prefer_thumb__)\n \n \tFUNC_START divsi3\t\n \tFUNC_ALIAS aeabi_idiv divsi3\n@@ -1130,7 +1142,7 @@ LSYM(divsi3_skip_div0_test):\n \t\n \tDIV_FUNC_END divsi3 signed\n \n-#if defined(__ARM_ARCH_6M__)\n+#if defined(__prefer_thumb__)\n FUNC_START aeabi_idivmod\n \tcmp\tr1, #0\n \tbeq\tLSYM(Ldiv0)"}]}