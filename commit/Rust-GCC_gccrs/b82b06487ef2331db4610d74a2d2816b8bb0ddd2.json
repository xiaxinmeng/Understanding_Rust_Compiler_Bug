{"sha": "b82b06487ef2331db4610d74a2d2816b8bb0ddd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgyYjA2NDg3ZWYyMzMxZGI0NjEwZDc0YTJkMjgxNmI4YmIwZGRkMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-04-14T04:25:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-04-14T04:25:55Z"}, "message": "revert: gcc-dg.exp (dg-build-dso): New.\n\n\tRevert:\n\t* lib/gcc-dg.exp (dg-build-dso): New.\n\t(gcc-dg-test-1): Handle dg-do-what \"dso\".\n\nFrom-SVN: r209353", "tree": {"sha": "d157c8c92ff1eedeaa33f92bd477482a1cb4eb70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d157c8c92ff1eedeaa33f92bd477482a1cb4eb70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b82b06487ef2331db4610d74a2d2816b8bb0ddd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82b06487ef2331db4610d74a2d2816b8bb0ddd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82b06487ef2331db4610d74a2d2816b8bb0ddd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82b06487ef2331db4610d74a2d2816b8bb0ddd2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dc85053e1831cb0bb2320b67d7731221cf44869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc85053e1831cb0bb2320b67d7731221cf44869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc85053e1831cb0bb2320b67d7731221cf44869"}], "stats": {"total": 71, "additions": 6, "deletions": 65}, "files": [{"sha": "cb235b32071d1caeea5b9d446f6967b318204b1d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82b06487ef2331db4610d74a2d2816b8bb0ddd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82b06487ef2331db4610d74a2d2816b8bb0ddd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b82b06487ef2331db4610d74a2d2816b8bb0ddd2", "patch": "@@ -1,3 +1,9 @@\n+2014-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tRevert:\n+\t* lib/gcc-dg.exp (dg-build-dso): New.\n+\t(gcc-dg-test-1): Handle dg-do-what \"dso\".\n+\n 2014-04-13  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/60717"}, {"sha": "cede4839bc0b1b9a4c531f8b4711cbe348eea34a", "filename": "gcc/testsuite/g++.dg/dso/dlclose1-dso.cc", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc85053e1831cb0bb2320b67d7731221cf44869/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdso%2Fdlclose1-dso.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc85053e1831cb0bb2320b67d7731221cf44869/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdso%2Fdlclose1-dso.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdso%2Fdlclose1-dso.cc?ref=9dc85053e1831cb0bb2320b67d7731221cf44869", "patch": "@@ -1,9 +0,0 @@\n-// { dg-options \"-fno-gnu-unique\" }\n-\n-// A static variable in an inline function uses STB_GNU_UNIQUE normally.\n-inline int foo() { static int i; return ++i; }\n-\n-extern \"C\" int fn()\n-{\n-  return foo();\n-}"}, {"sha": "80f270c20596fd511de6a3bccb2a8fb76ee88b62", "filename": "gcc/testsuite/g++.dg/dso/dlclose1.C", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dc85053e1831cb0bb2320b67d7731221cf44869/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdso%2Fdlclose1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dc85053e1831cb0bb2320b67d7731221cf44869/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdso%2Fdlclose1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdso%2Fdlclose1.C?ref=9dc85053e1831cb0bb2320b67d7731221cf44869", "patch": "@@ -1,30 +0,0 @@\n-// PR c++/60731\n-// { dg-do run { target { dlopen && disable-for-4.9 } } }\n-// { dg-add-options dlopen }\n-// { dg-build-dso \"dlclose1-dso.cc\" }\n-\n-#include <dlfcn.h>\n-extern \"C\" void abort();\n-extern \"C\" int printf (const char *, ...);\n-\n-// Open and close the DSO for each call so that statics are reinitialized.\n-int call()\n-{\n-  void *h = dlopen (\"./dlclose1-dso.so\", RTLD_NOW);\n-  if (!h) { printf (\"dlopen failed: %s\\n\", dlerror()); abort(); }\n-  int (*fn)() = (int(*)())dlsym (h, \"fn\");\n-  if (!fn) { printf (\"dlsym failed: %s\\n\", dlerror()); abort(); }\n-  int r = fn();\n-  dlclose (h);\n-  return r;\n-}\n-\n-int main() {\n-  int i = call();\n-  int j = call();\n-  if (i != j)\n-    {\n-      printf (\"mismatch: %d != %d\\n\", i, j);\n-      abort();\n-    }\n-}"}, {"sha": "a758d4740fdd7f8a0ffd50bc02de5f3c04f2084e", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82b06487ef2331db4610d74a2d2816b8bb0ddd2/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82b06487ef2331db4610d74a2d2816b8bb0ddd2/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=b82b06487ef2331db4610d74a2d2816b8bb0ddd2", "patch": "@@ -144,11 +144,6 @@ proc gcc-dg-test-1 { target_compile prog do_what extra_tool_flags } {\n \t    # The following line is needed for targets like the i960 where\n \t    # the default output file is b.out.  Sigh.\n \t}\n-\t\"dso\" {\n-\t    set compile_type \"executable\"\n-\t    set output_file \"[file rootname [file tail $prog]].so\"\n-\t    set extra_tool_flags \"$extra_tool_flags -fPIC -shared\"\n-\t}\n \t\"repo\" {\n \t    set compile_type \"object\"\n \t    set output_file \"[file rootname [file tail $prog]].o\"\n@@ -214,27 +209,6 @@ proc gcc-dg-test { prog do_what extra_tool_flags } {\n     return [gcc-dg-test-1 gcc_target_compile $prog $do_what $extra_tool_flags]\n }\n \n-# Usage: { dg-build-dso \"file.ext\" }\n-# Compiles the specified file into \"file.so\" (treating that compilation as\n-# a separate test) for use by the main test, and schedules it for removal\n-# when the main test is complete.  The DSO source file should not use \"dg-do\".\n-# This relies on a couple of local variable names in dg-test.\n-\n-proc dg-build-dso { args } {\n-    global dg-do-what-default\n-    upvar prog main_file\n-    upvar dg-final-code final-code\n-\n-    set file [lindex $args 1]\n-    set dir \"[file dirname $main_file]\"\n-    set dg-do-what-default dso\n-    dg-test -keep-output $dir/$file \"\" \"\"\n-    set dg-do-what-default compile\n-\n-    set output_file \"[file rootname [file tail $file]].so\"\n-    append final-code \"remove-build-file $output_file\"\n-}\n-\n proc gcc-dg-prune { system text } {\n     global additional_prunes\n "}]}