{"sha": "3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QwYTcxYjNlZDBjYzVkOTAzMTkwYTA5ODhmMmQ3YjY3N2IwZTc3ZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-01-06T01:57:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-06T01:57:27Z"}, "message": "Makefile.in: Add some missing $(exeext).\n\n        * Makefile.in: Add some missing $(exeext).  Remove some obsolete\n        runtime stuff.\n        * Make-lang.in: Similarly.\n\nFrom-SVN: r24508", "tree": {"sha": "8f26008db638564fd570c40a9ba4b6e18cc7d450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f26008db638564fd570c40a9ba4b6e18cc7d450"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e/comments", "author": null, "committer": null, "parents": [{"sha": "12f06d174c8ce495b31b4e64f399c1eeb2e83672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f06d174c8ce495b31b4e64f399c1eeb2e83672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f06d174c8ce495b31b4e64f399c1eeb2e83672"}], "stats": {"total": 49, "additions": 19, "deletions": 30}, "files": [{"sha": "f0aa04fa24fe01c3f200b9f8e825c959b5cfa729", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e", "patch": "@@ -1,3 +1,9 @@\n+Wed Jan  6 02:53:38 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Makefile.in: Add some missing $(exeext).  Remove some obsolete\n+\truntime stuff.\n+\t* Make-lang.in: Similarly.\n+\t\n Tue Nov 24 09:57:34 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* Makefile.in (lex.c): Do not depend on hash.h."}, {"sha": "a4011f3ad7f122d768d835c93d6a9a5de31b2d5a", "filename": "gcc/ch/Make-lang.in", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e/gcc%2Fch%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e/gcc%2Fch%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMake-lang.in?ref=3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e", "patch": "@@ -64,14 +64,14 @@ CHILL_FLAGS_TO_PASS = \\\n \t\"GNUCHILL_VERSION=$(GNUCHILL_VERSION)\"\n #\f\n # Define the names for selecting languages in LANGUAGES.\n-CHILL: chill cc1chill chill-runtime\n+CHILL: chill cc1chill$(exeext)\n \n # handle startfile in chill script and build script to install\n chill: $(srcdir)/ch/chill.in Makefile\n \tthisdir=`pwd` ; \\\n \tsed -e \"s:startfile=chillrt0:startfile=$${thisdir}/ch/runtime/chillrt0.o:\" \\\n \t    -e \"s:libpath=chillrt:libpath=-L$${thisdir}/ch/runtime/:\" \\\n-\t    -e \"s:whatgcc=gcc:whatgcc=\\\"$${thisdir}/xgcc -B$${thisdir}/\\\":\" \\\n+\t    -e \"s:whatgcc=gcc:whatgcc=\\\"$${thisdir}/xgcc$(exeext) -B$${thisdir}/\\\":\" \\\n \t    -e \"s:gnuchill_version=unknown:gnuchill_version=$(GNUCHILL_VERSION):\" \\\n \t    -e \"s:gnuchill_script_flags=:gnuchill_script_flags=\\\"$(GNUCHILL_SCRIPT_FLAGS)\\\":\" $(srcdir)/ch/chill.in > chill ; \\\n \tchmod a+x chill ; \\\n@@ -87,24 +87,17 @@ chill: $(srcdir)/ch/chill.in Makefile\n \t    -e \"s:gnuchill_script_flags=:gnuchill_script_flags=\\\"$(GNUCHILL_SCRIPT_FLAGS)\\\":\" $(srcdir)/ch/chill.in > chill.install ; \\\n \tchmod a+x chill.install\n \n-# Don't depend on cc1chill, because chill-cross is always built for cross,\n-# and thus a cc1chill dependence would force cc1chill to always be built.\n+# Don't depend on cc1chill$(exeext), because chill-cross is always built for cross,\n+# and thus a cc1chill$(exeext) dependence would force cc1chill$(exeext) to always be built.\n # Note that gcc-cross and g++-cross do not have cc1 or cc1plus dependencies.\n chill-cross: $(srcdir)/ch/chill.in\n \ttouch $@\n \n-cc1chill: $(P) $(CHILL_SRCS) $(LIBDEPS) stamp-objlist \\\n+cc1chill$(exeext): $(P) $(CHILL_SRCS) $(LIBDEPS) stamp-objlist \\\n \tinsn-config.h insn-flags.h insn-attr.h insn-codes.h \\\n \tc-typeck.o c-aux-info.o c-common.o c-iterate.o\n-\tcd ch; $(MAKE) $(FLAGS_TO_PASS) $(CHILL_FLAGS_TO_PASS) ../cc1chill\n-\n-chill-runtime: stmp-headers $(GCC_PASSES)\n-\tcase \"$(LANGUAGES)\" in \\\n-\t*CHILL*) if [ -f ch/runtime/Makefile -a -z \"$(CROSS)\" ] ; then \\\n-\t\t   thisdir1=`pwd`; \\\n-\t\t   cd ch/runtime; $(MAKE) $(FLAGS_TO_PASS) $(CHILL_FLAGS_TO_PASS) GCC_FOR_TARGET=\"$${thisdir1}/xgcc -B$${thisdir1}/\" all ; \\\n-\t\t else true; fi ;; \\\n-\tesac\n+\tcd ch; $(MAKE) $(FLAGS_TO_PASS) $(CHILL_FLAGS_TO_PASS) ../cc1chill$(exeext)\n+\n #\f\n # Build hooks:\n \n@@ -127,21 +120,11 @@ chill.dvi: $(srcdir)/ch/chill.texi $(srcdir)/extend.texi $(srcdir)/invoke.texi $\n # Install hooks:\n # cc1chill is installed elsewhere as part of $(COMPILERS).\n \n-CHILL.install-normal: install-libchill\n-\n-# Install the CHILL run time library.\n-install-libchill: chill-runtime\n-\tif [ -f ch/runtime/libchill.a ] ; then \\\n-\t  $(INSTALL_DATA) ch/runtime/libchill.a $(libsubdir)/libchill.a; \\\n-\t  if $(RANLIB_TEST) ; then \\\n-\t    (cd $(libsubdir); $(RANLIB) libchill.a); else true; fi; \\\n-\t  chmod a-x $(libsubdir)/libchill.a; \\\n-\t  $(INSTALL_DATA) ch/runtime/chillrt0.o $(libsubdir)/chillrt0.o; \\\n-\telse true; fi\n+CHILL.install-normal:\n \n # Install the driver program\n CHILL.install-common:\n-\t-if [ -f cc1chill ] ; then \\\n+\t-if [ -f cc1chill$(exeext) ] ; then \\\n \t  if [ -f chill.install ] ; then \\\n \t    if [ -f gcc-cross$(exeext) ]; then \\\n \t      rm -f $(bindir)/$(CHILL_CROSS_NAME); \\"}, {"sha": "24ac23ba28764cf9f91f8fd575dfb0f18017e736", "filename": "gcc/ch/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e/gcc%2Fch%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e/gcc%2Fch%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMakefile.in?ref=3d0a71b3ed0cc5d903190a0988f2d7b677b0e77e", "patch": "@@ -126,7 +126,7 @@ all: all.indirect\n \f\n # Now figure out from those variables how to compile and link.\n \n-all.indirect: Makefile ../chill ../cc1chill\n+all.indirect: Makefile ../chill ../cc1chill$(exeext)\n \n # IN_GCC tells obstack.h that we are using gcc's <stddef.h> file.\n INTERNAL_CFLAGS = $(CROSS) -DIN_GCC\n@@ -202,7 +202,7 @@ CHILL_OBJS = parse.o actions.o except.o grant.o lang.o \\\n OBJS = `cat ../stamp-objlist`\n OBJDEPS = ../stamp-objlist\n \n-../cc1chill: $(P) $(CHILL_OBJS) $(OBJDEPS) $(LIBDEPS)\n+../cc1chill$(exeext): $(P) $(CHILL_OBJS) $(OBJDEPS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(CHILL_OBJS) \\\n \t      $(OBJS) $(C_OBJS) $(LIBS)\n \n@@ -215,7 +215,7 @@ utils/printf : $(srcdir)/utils/printf.c\n # This is the top-level trigger for a CHILL regression test.\n # It also builds those tools needed for CHILL regression testing.\n #\n-check: ../cc1chill utils/printf\n+check: ../cc1chill$(exeext) utils/printf\n \tcd ..; $(MAKE) $(FLAGS_TO_PASS) xgcc gcov cpp cc1 ld\n \t$(srcdir)/regression.sh -d -p\n \n@@ -238,7 +238,7 @@ clean:  mostlyclean\n Makefile: $(srcdir)/Makefile.in $(srcdir)/../configure\n \tcd ..; $(SHELL) config.status\n \n-native: config.status ../cc1chill ../chill\n+native: config.status ../cc1chill$(exeext) ../chill\n \f\n # Compiling object files from source files.\n "}]}