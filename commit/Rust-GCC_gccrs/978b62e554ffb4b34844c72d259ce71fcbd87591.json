{"sha": "978b62e554ffb4b34844c72d259ce71fcbd87591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc4YjYyZTU1NGZmYjRiMzQ4NDRjNzJkMjU5Y2U3MWZjYmQ4NzU5MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-18T08:10:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-18T08:10:17Z"}, "message": "function: Set dummy DECL_ASSEMBLER_NAME in push_dummy_function [PR100580]\n\nLast year I've added cgraph_node::get_create calls for the dummy\nfunctions used for -fdump-passes, so that it interacts well with pass\ndisabling/enabling which is cgraph uid based.\nUnfortunately, as the following testcase shows, when assembler hash\nis present, that wants to compute DECL_ASSEMBLER_NAME and the C++ FE\nis unprepared to handle it on the dummy functions which don't have\nDECL_NAME etc.\nThe following patch fixes it by setting up a dummy DECL_ASSEMBLER_NAME\non these, so that the FEs don't need to compute it.\n\n2021-05-18  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/100580\n\t* function.c (push_dummy_function): Set DECL_ARTIFICIAL and\n\tDECL_ASSEMBLER_NAME on the fn_decl.\n\n\t* g++.dg/other/pr100580.C: New test.", "tree": {"sha": "672c357f4404ac10712d3b7df7d53af49463a3f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/672c357f4404ac10712d3b7df7d53af49463a3f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/978b62e554ffb4b34844c72d259ce71fcbd87591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978b62e554ffb4b34844c72d259ce71fcbd87591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978b62e554ffb4b34844c72d259ce71fcbd87591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978b62e554ffb4b34844c72d259ce71fcbd87591/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65061ea287a80cfb214e402cfd2373a14bfec95a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65061ea287a80cfb214e402cfd2373a14bfec95a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65061ea287a80cfb214e402cfd2373a14bfec95a"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "fc7b147b5f1b0109114a202826d4ef677471097f", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978b62e554ffb4b34844c72d259ce71fcbd87591/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978b62e554ffb4b34844c72d259ce71fcbd87591/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=978b62e554ffb4b34844c72d259ce71fcbd87591", "patch": "@@ -4930,6 +4930,9 @@ push_dummy_function (bool with_decl)\n       fn_result_decl = build_decl (UNKNOWN_LOCATION, RESULT_DECL,\n \t\t\t\t\t NULL_TREE, void_type_node);\n       DECL_RESULT (fn_decl) = fn_result_decl;\n+      DECL_ARTIFICIAL (fn_decl) = 1;\n+      tree fn_name = get_identifier (\" \");\n+      SET_DECL_ASSEMBLER_NAME (fn_decl, fn_name);\n     }\n   else\n     fn_decl = NULL_TREE;"}, {"sha": "d6cc0a6dc616682b53e6fcab6dea856cf2f00779", "filename": "gcc/testsuite/g++.dg/other/pr100580.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/978b62e554ffb4b34844c72d259ce71fcbd87591/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr100580.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/978b62e554ffb4b34844c72d259ce71fcbd87591/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr100580.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr100580.C?ref=978b62e554ffb4b34844c72d259ce71fcbd87591", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/100580\n+// { dg-do compile }\n+// { dg-require-weak \"\" }\n+// { dg-options \"-fdump-passes\" }\n+// { dg-prune-output \".*\" }\n+\n+int foo;\n+static __typeof(foo) bar __attribute__((__weakref__(\"foo\")));"}]}