{"sha": "f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI3ZTUwZGIxYWI1YzkwYWRmNGNlNzc5MDJhNGU1NzgzMTk2ZDdkNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-09-07T21:26:34Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-09-07T21:26:34Z"}, "message": "tree-inline.c (tree_inlinable_function_p): Do not test DECL_REPLACEABLE_P.\n\n\n\t* tree-inline.c (tree_inlinable_function_p): Do not test DECL_REPLACEABLE_P.\n\t* ipa-inline.c (cgraph_default_inline_p, update_caller_keys, update_callee_keys,\n\tcgraph_decide_inlining): Test function availability.\n\t* cif-code.def (OVERWRITABLE): New code.\n\nFrom-SVN: r163972", "tree": {"sha": "9387799cf71631d4729cdd22bf7ff6259166a129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9387799cf71631d4729cdd22bf7ff6259166a129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/comments", "author": null, "committer": null, "parents": [{"sha": "a0766cdbb98bcbfb85f977930d3cead1f02f292a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0766cdbb98bcbfb85f977930d3cead1f02f292a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0766cdbb98bcbfb85f977930d3cead1f02f292a"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "3f027bd2e1544fd49593e60220a16f9afbd8d410", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "patch": "@@ -1,3 +1,10 @@\n+2010-09-07  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-inline.c (tree_inlinable_function_p): Do not test DECL_REPLACEABLE_P.\n+\t* ipa-inline.c (cgraph_default_inline_p, update_caller_keys, update_callee_keys,\n+\tcgraph_decide_inlining): Test function availability.\n+\t* cif-code.def (OVERWRITABLE): New code.\n+\n 2010-09-07  H.J. Lu  <hjl.tools@gmail.com>\n \t    Jack Howarth <howarth@bromo.med.uc.edu>\n "}, {"sha": "fda104a51bd137cd5c5b84bd9d7264f7031be076", "filename": "gcc/cif-code.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/gcc%2Fcif-code.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/gcc%2Fcif-code.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcif-code.def?ref=f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "patch": "@@ -88,3 +88,5 @@ DEFCIFCODE(ORIGINALLY_INDIRECT_CALL,\n /* Ths edge represents an indirect edge with a yet-undetermined callee .  */\n DEFCIFCODE(INDIRECT_UNKNOWN_CALL,\n \t   N_(\"indirect function call with a yet undetermined callee\"))\n+\n+DEFCIFCODE(OVERWRITABLE, N_(\"function body can be overwriten at linktime\"))"}, {"sha": "964d03ba21a39c211a292394f7977e60819eeb83", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "patch": "@@ -480,13 +480,19 @@ cgraph_default_inline_p (struct cgraph_node *n, cgraph_inline_failed_t *reason)\n \t*reason = CIF_FUNCTION_NOT_INLINE_CANDIDATE;\n       return false;\n     }\n-\n   if (!n->analyzed)\n     {\n       if (reason)\n \t*reason = CIF_BODY_NOT_AVAILABLE;\n       return false;\n     }\n+  if (cgraph_function_body_availability (n) <= AVAIL_OVERWRITABLE)\n+    {\n+      if (reason)\n+\t*reason = CIF_OVERWRITABLE;\n+      return false;\n+    }\n+\n \n   if (DECL_DECLARED_INLINE_P (decl))\n     {\n@@ -697,6 +703,7 @@ update_caller_keys (fibheap_t heap, struct cgraph_node *node,\n   cgraph_inline_failed_t failed_reason;\n \n   if (!node->local.inlinable\n+      || cgraph_function_body_availability (node) <= AVAIL_OVERWRITABLE\n       || node->global.inlined_to)\n     return;\n   if (!bitmap_set_bit (updated_nodes, node->uid))\n@@ -749,6 +756,7 @@ update_callee_keys (fibheap_t heap, struct cgraph_node *node,\n       {\n \tif (e->inline_failed\n \t    && e->callee->local.inlinable\n+\t    && cgraph_function_body_availability (e->callee) >= AVAIL_AVAILABLE\n \t    && !bitmap_bit_p (updated_nodes, e->callee->uid))\n \t  {\n \t    node->global.estimated_growth = INT_MIN;\n@@ -1499,6 +1507,7 @@ cgraph_decide_inlining (void)\n \t      && !node->callers->next_caller\n \t      && cgraph_will_be_removed_from_program_if_no_direct_calls (node)\n \t      && node->local.inlinable\n+\t      && cgraph_function_body_availability (node) >= AVAIL_AVAILABLE\n \t      && node->callers->inline_failed\n \t      && node->callers->caller != node\n \t      && node->callers->caller->global.inlined_to != node"}, {"sha": "362211aa7b05889e640702d27010d55bdec7f7a6", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27e50db1ab5c90adf4ce77902a4e5783196d7d7/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=f27e50db1ab5c90adf4ce77902a4e5783196d7d7", "patch": "@@ -3197,12 +3197,6 @@ tree_inlinable_function_p (tree fn)\n       inlinable = false;\n     }\n \n-  /* Don't auto-inline anything that might not be bound within\n-     this unit of translation.  */\n-  else if (!DECL_DECLARED_INLINE_P (fn)\n-\t   && DECL_REPLACEABLE_P (fn))\n-    inlinable = false;\n-\n   else if (!function_attribute_inlinable_p (fn))\n     {\n       if (do_warning)"}]}