{"sha": "a35f1a13b97200c2644c8e956e8fb2db63adb8a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM1ZjFhMTNiOTcyMDBjMjY0NGM4ZTk1NmU4ZmIyZGI2M2FkYjhhNw==", "commit": {"author": {"name": "Lawrence Lim", "email": "llim@redhat.com", "date": "2005-08-24T20:29:27Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2005-08-24T20:29:27Z"}, "message": "re PR libstdc++/23550 (char_traits requirements/1.cc test bad math)\n\n\n2005-08-24  Lawrence Lim  <llim@redhat.com>\n            Jakub Jelinek  <jakub@redhat.com>\n\t    Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/23550\n\t* testsuite/21_strings/char_traits/requirements/char/1.cc\n\t(test01): Simplify counting.\n\t* testsuite/21_strings/char_traits/requirements/wchar_t/1.cc\n\t(test02): Same.\n\nCo-Authored-By: Benjamin Kosnik <bkoz@redhat.com>\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r103451", "tree": {"sha": "fe2c518ff720a6dc13057bf73b9bda7da0fb23c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe2c518ff720a6dc13057bf73b9bda7da0fb23c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a35f1a13b97200c2644c8e956e8fb2db63adb8a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35f1a13b97200c2644c8e956e8fb2db63adb8a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a35f1a13b97200c2644c8e956e8fb2db63adb8a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35f1a13b97200c2644c8e956e8fb2db63adb8a7/comments", "author": null, "committer": null, "parents": [{"sha": "6f48c21a63d2e0564b51ff7260b63cf1ccab24e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f48c21a63d2e0564b51ff7260b63cf1ccab24e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f48c21a63d2e0564b51ff7260b63cf1ccab24e4"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "5145d6f93059bcb666ff2a500df8bbb16173b7f3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35f1a13b97200c2644c8e956e8fb2db63adb8a7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35f1a13b97200c2644c8e956e8fb2db63adb8a7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a35f1a13b97200c2644c8e956e8fb2db63adb8a7", "patch": "@@ -1,3 +1,13 @@\n+2005-08-24  Lawrence Lim  <llim@redhat.com>\n+            Jakub Jelinek  <jakub@redhat.com>\n+\t    Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/23550\n+\t* testsuite/21_strings/char_traits/requirements/char/1.cc\n+\t(test01): Simplify counting.\n+\t* testsuite/21_strings/char_traits/requirements/wchar_t/1.cc\n+\t(test02): Same.\n+\n 2005-08-24  Paolo Carlini  <pcarlini@suse.de>\n \t    Chris Jefferson  <chris@bubblescope.net>\n "}, {"sha": "d040d775712c31706b9ea725205fba315cbf28a2", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/char/1.cc", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35f1a13b97200c2644c8e956e8fb2db63adb8a7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35f1a13b97200c2644c8e956e8fb2db63adb8a7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fchar%2F1.cc?ref=a35f1a13b97200c2644c8e956e8fb2db63adb8a7", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-03 bkoz\n \n-// Copyright (C) 1999, 2000, 2001, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,12 +33,12 @@ void test01(void)\n   // 21.1.1 character traits requirements\n \n   // Key for decoding what function signatures really mean:\n-  // X                == char_traits<_CharT>\n+  // X        == char_traits<_CharT>\n   // [c,d]    == _CharT\n   // [p,q]    == const _CharT*\n-  // s                == _CharT*\n+  // s        == _CharT*\n   // [n,i,j]  == size_t\n-  // f                == X::int_type\n+  // f        == X::int_type\n   // pos      == X::pos_type\n   // state    == X::state_type\n \n@@ -54,9 +55,11 @@ void test01(void)\n   // correctly even where p is in [s, s + n), and yields s.   \n   char array1[] = {'z', 'u', 'm', 'a', ' ', 'b', 'e', 'a', 'c', 'h',  0};\n   const char str_lit1[] = \"montara and ocean beach\";\n-  int len = sizeof(str_lit1) + sizeof(array1) - 1; // two terminating chars\n-  char array2[len];\n-  std::char_traits<char>::copy(array2, \"boracay, philippines\", len);\n+  const char str_lit2[] = \"boracay, philippines\";\n+  const int len1 = sizeof(str_lit1)/sizeof(char);\n+  const int len2 = sizeof(str_lit2)/sizeof(char);\n+  char array2[len1 + len2 - 1]; // two terminating chars\n+  std::char_traits<char>::copy(array2, str_lit2, len2);\n \n   VERIFY( str_lit1[0] == 'm' );\n   c1 = array2[0];"}, {"sha": "3a8a20cf88dc618f3972dbf06695caa7f073a54f", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/wchar_t/1.cc", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35f1a13b97200c2644c8e956e8fb2db63adb8a7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35f1a13b97200c2644c8e956e8fb2db63adb8a7/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fwchar_t%2F1.cc?ref=a35f1a13b97200c2644c8e956e8fb2db63adb8a7", "patch": "@@ -1,6 +1,7 @@\n // 1999-06-03 bkoz\n \n-// Copyright (C) 1999, 2000, 2001, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,12 +33,12 @@ void test02(void)\n   // 21.1.1 character traits requirements\n \n   // Key for decoding what function signatures really mean:\n-  // X                == char_traits<_CharT>\n+  // X        == char_traits<_CharT>\n   // [c,d]    == _CharT\n   // [p,q]    == const _CharT*\n-  // s                == _CharT*\n+  // s        == _CharT*\n   // [n,i,j]  == size_t\n-  // f                == X::int_type\n+  // f        == X::int_type\n   // pos      == X::pos_type\n   // state    == X::state_type\n \n@@ -54,9 +55,11 @@ void test02(void)\n   // correctly even where p is in [s, s + n), and yields s.   \n   wchar_t array1[] = {L'z', L'u', L'm', L'a', L' ', L'b', L'e', L'a', L'c', L'h',  0};\n   const wchar_t str_lit1[] = L\"montara and ocean beach\";\n-  int len = sizeof(str_lit1) + sizeof(array1) - 1; // two terminating chars\n-  wchar_t array2[len];\n-  std::char_traits<wchar_t>::copy(array2, L\"boracay, philippines\", len);\n+  const wchar_t str_lit2[] = L\"boracay, philippines\";\n+  const int len1 = sizeof(str_lit1)/sizeof(wchar_t);\n+  const int len2 = sizeof(str_lit2)/sizeof(wchar_t);\n+  wchar_t array2[len1 + len2 - 1]; // two terminating chars\n+  std::char_traits<wchar_t>::copy(array2, str_lit2, len2);\n \n   VERIFY( str_lit1[0] == 'm' );\n   c1 = array2[0];"}]}