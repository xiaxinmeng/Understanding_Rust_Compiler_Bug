{"sha": "b9e3afe9b40563997820b5f4952cc5c672f020e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjllM2FmZTliNDA1NjM5OTc4MjBiNWY0OTUyY2M1YzY3MmYwMjBlNA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-06-03T22:44:39Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2014-06-03T22:44:39Z"}, "message": "aarch64.c (aarch64_if_then_else_costs): Allow non comparisons for OP0.\n\n2014-06-03  Andrew Pinski  <apinski@cavium.com>\n\n\t* config/aarch64/aarch64.c (aarch64_if_then_else_costs): Allow non comparisons\n\tfor OP0.\n\n2014-06-03  Andrew Pinski  <apinski@cavium.com>\n\n\t* gcc.c-torture/compile/20140528-1.c: New testcase.\n\nFrom-SVN: r211206", "tree": {"sha": "03b5345c81566adeaa235cfc83ef61923d9ce9a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03b5345c81566adeaa235cfc83ef61923d9ce9a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9e3afe9b40563997820b5f4952cc5c672f020e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e3afe9b40563997820b5f4952cc5c672f020e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e3afe9b40563997820b5f4952cc5c672f020e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e3afe9b40563997820b5f4952cc5c672f020e4/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d5ffe4631cfaf0322d2174a32cbb65bbee6c18f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d5ffe4631cfaf0322d2174a32cbb65bbee6c18f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d5ffe4631cfaf0322d2174a32cbb65bbee6c18f"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "ece0da1eee6aea15886206de5b50ddf7b870cdb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e3afe9b40563997820b5f4952cc5c672f020e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e3afe9b40563997820b5f4952cc5c672f020e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9e3afe9b40563997820b5f4952cc5c672f020e4", "patch": "@@ -1,4 +1,9 @@\n-014-06-03  Andrew Pinski  <apinski@cavium.com>\n+2014-06-03  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_if_then_else_costs): Allow non comparisons\n+\tfor OP0.\n+\n+2014-06-03  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/aarch64.c (aarch64_if_then_else_costs): New function.\n \t(aarch64_rtx_costs): Use aarch64_if_then_else_costs."}, {"sha": "3d5f48ce26a74a764ffda9ffe6534737b123c25b", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e3afe9b40563997820b5f4952cc5c672f020e4/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e3afe9b40563997820b5f4952cc5c672f020e4/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=b9e3afe9b40563997820b5f4952cc5c672f020e4", "patch": "@@ -4855,19 +4855,32 @@ aarch64_rtx_arith_op_extract_p (rtx x, enum machine_mode mode)\n static bool\n aarch64_if_then_else_costs (rtx op0, rtx op1, rtx op2, int *cost, bool speed)\n {\n+  rtx inner;\n+  rtx comparator;\n+  enum rtx_code cmpcode;\n+\n+  if (COMPARISON_P (op0))\n+    {\n+      inner = XEXP (op0, 0);\n+      comparator = XEXP (op0, 1);\n+      cmpcode = GET_CODE (op0);\n+    }\n+  else\n+    {\n+      inner = op0;\n+      comparator = const0_rtx;\n+      cmpcode = NE;\n+    }\n+\n   if (GET_CODE (op1) == PC || GET_CODE (op2) == PC)\n     {\n       /* Conditional branch.  */\n-      if (GET_MODE_CLASS (GET_MODE (XEXP (op0, 0))) == MODE_CC)\n+      if (GET_MODE_CLASS (GET_MODE (inner)) == MODE_CC)\n \treturn true;\n       else\n \t{\n-\t  if (GET_CODE (op0) == NE\n-\t      || GET_CODE (op0) == EQ)\n+\t  if (cmpcode == NE || cmpcode == EQ)\n \t    {\n-\t      rtx inner = XEXP (op0, 0);\n-\t      rtx comparator = XEXP (op0, 1);\n-\n \t      if (comparator == const0_rtx)\n \t\t{\n \t\t  /* TBZ/TBNZ/CBZ/CBNZ.  */\n@@ -4877,23 +4890,20 @@ aarch64_if_then_else_costs (rtx op0, rtx op1, rtx op2, int *cost, bool speed)\n \t\t\t \t       0, speed);\n \t\telse\n \t\t  /* CBZ/CBNZ.  */\n-\t\t  *cost += rtx_cost (inner, GET_CODE (op0), 0, speed);\n+\t\t  *cost += rtx_cost (inner, cmpcode, 0, speed);\n \n \t        return true;\n \t      }\n \t    }\n-\t  else if (GET_CODE (op0) == LT\n-\t\t   || GET_CODE (op0) == GE)\n+\t  else if (cmpcode == LT || cmpcode == GE)\n \t    {\n-\t      rtx comparator = XEXP (op0, 1);\n-\n \t      /* TBZ/TBNZ.  */\n \t      if (comparator == const0_rtx)\n \t\treturn true;\n \t    }\n \t}\n     }\n-  else if (GET_MODE_CLASS (GET_MODE (XEXP (op0, 0))) == MODE_CC)\n+  else if (GET_MODE_CLASS (GET_MODE (inner)) == MODE_CC)\n     {\n       /* It's a conditional operation based on the status flags,\n \t so it must be some flavor of CSEL.  */"}, {"sha": "5098d409e8923ee3a877c610ad6a86d682134303", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e3afe9b40563997820b5f4952cc5c672f020e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e3afe9b40563997820b5f4952cc5c672f020e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9e3afe9b40563997820b5f4952cc5c672f020e4", "patch": "@@ -1,3 +1,7 @@\n+2014-06-03  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* gcc.c-torture/compile/20140528-1.c: New testcase.\n+\n 2014-06-03  Dehao Chen  <dehao@google.com>\n \n \t* gcc.dg/tree-prof/merge_block.c: New test."}, {"sha": "d22780280b771496284df89d2333c2e2cacad723", "filename": "gcc/testsuite/gcc.c-torture/compile/20140528-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9e3afe9b40563997820b5f4952cc5c672f020e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20140528-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9e3afe9b40563997820b5f4952cc5c672f020e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20140528-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20140528-1.c?ref=b9e3afe9b40563997820b5f4952cc5c672f020e4", "patch": "@@ -0,0 +1,9 @@\n+unsigned f(unsigned flags, unsigned capabilities)\n+{\n+  unsigned gfp_mask;\n+  unsigned gfp_notmask = 0;\n+  gfp_mask = flags & ((1 << 25) - 1);\n+  if (!(capabilities & 0x00000001))\n+    gfp_mask |= 0x1000000u;\n+  return (gfp_mask & ~gfp_notmask);\n+}"}]}