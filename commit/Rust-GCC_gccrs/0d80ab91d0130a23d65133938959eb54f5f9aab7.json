{"sha": "0d80ab91d0130a23d65133938959eb54f5f9aab7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ4MGFiOTFkMDEzMGEyM2Q2NTEzMzkzODk1OWViNTRmNWY5YWFiNw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-01-17T16:33:44Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-01-17T16:33:44Z"}, "message": "Fix wording of -Wmisleading-indentation (PR c++/71497)\n\ngcc/c-family/ChangeLog:\n\tPR c++/71497\n\t* c-indentation.c (warn_for_misleading_indentation): Use the past\n\tsubjunctive in the note.\n\ngcc/testsuite/ChangeLog:\n\tPR c++/71497\n\t* c-c++-common/Wmisleading-indentation-3.c: Update wording of\n\texpected messages.\n\t* c-c++-common/Wmisleading-indentation.c: Likewise.\n\nFrom-SVN: r244536", "tree": {"sha": "5e254d4a2eaa144056a375f52351db61a9ba681d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e254d4a2eaa144056a375f52351db61a9ba681d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d80ab91d0130a23d65133938959eb54f5f9aab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d80ab91d0130a23d65133938959eb54f5f9aab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d80ab91d0130a23d65133938959eb54f5f9aab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d80ab91d0130a23d65133938959eb54f5f9aab7/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31b61548d62e7982630d63c7912db2ed3faf5321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31b61548d62e7982630d63c7912db2ed3faf5321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31b61548d62e7982630d63c7912db2ed3faf5321"}], "stats": {"total": 75, "additions": 44, "deletions": 31}, "files": [{"sha": "778f8b187f2ba2cd070d828149bdbe7a87d1527b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=0d80ab91d0130a23d65133938959eb54f5f9aab7", "patch": "@@ -1,3 +1,9 @@\n+2017-01-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/71497\n+\t* c-indentation.c (warn_for_misleading_indentation): Use the past\n+\tsubjunctive in the note.\n+\n 2017-01-17  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR c/79116"}, {"sha": "329f4708345e0a6fcd34fa1e11d4862fe1975b59", "filename": "gcc/c-family/c-indentation.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Fc-family%2Fc-indentation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Fc-family%2Fc-indentation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-indentation.c?ref=0d80ab91d0130a23d65133938959eb54f5f9aab7", "patch": "@@ -608,7 +608,7 @@ warn_for_misleading_indentation (const token_indent_info &guard_tinfo,\n \t\t      guard_tinfo_to_string (guard_tinfo)))\n \tinform (next_tinfo.location,\n \t\t(\"...this statement, but the latter is misleadingly indented\"\n-\t\t \" as if it is guarded by the %qs\"),\n+\t\t \" as if it were guarded by the %qs\"),\n \t\tguard_tinfo_to_string (guard_tinfo));\n     }\n }"}, {"sha": "d687e3ac194673e638a2b04eebfac4027e7dcaca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d80ab91d0130a23d65133938959eb54f5f9aab7", "patch": "@@ -1,3 +1,10 @@\n+2017-01-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/71497\n+\t* c-c++-common/Wmisleading-indentation-3.c: Update wording of\n+\texpected messages.\n+\t* c-c++-common/Wmisleading-indentation.c: Likewise.\n+\n 2017-01-17  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/79058"}, {"sha": "6482b006c7fc7f05ca9fdd9e55c8f54547f219b5", "filename": "gcc/testsuite/c-c++-common/Wmisleading-indentation-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation-3.c?ref=0d80ab91d0130a23d65133938959eb54f5f9aab7", "patch": "@@ -17,7 +17,7 @@ fn_5 (double *a, double *b, double *sum, double *prod)\n   int i = 0;\n   for (i = 0; i < 10; i++) /* { dg-warning \"3: this 'for' clause does not guard...\" } */\n     sum[i] = a[i] * b[i];\n-    prod[i] = a[i] * b[i]; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'for'\" } */\n+    prod[i] = a[i] * b[i]; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'for'\" } */\n /* { dg-begin-multiline-output \"\" }\n    for (i = 0; i < 10; i++)\n    ^~~\n@@ -38,7 +38,7 @@ int fn_6 (int a, int b, int c)\n \t\tgoto fail;\n \tif ((err = foo (b)) != 0) /* { dg-message \"2: this 'if' clause does not guard...\" } */\n \t\tgoto fail;\n-\t\tgoto fail; /* { dg-message \"3: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+\t\tgoto fail; /* { dg-message \"3: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n \tif ((err = foo (c)) != 0)\n \t\tgoto fail;\n \t/* ... */\n@@ -64,7 +64,7 @@ void fn_14 (void)\n   int i;\n   FOR_EACH (i, 0, 10) /* { dg-message \"in expansion of macro .FOR_EACH.\" } */\n     foo (i);\n-    bar (i, i); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'for'\" } */\n+    bar (i, i); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'for'\" } */\n \n /* { dg-begin-multiline-output \"\" }\n    for ((VAR) = (START); (VAR) < (STOP); (VAR++))"}, {"sha": "5cdeba1cbba5162c595be1f683537b48e8ba9f1e", "filename": "gcc/testsuite/c-c++-common/Wmisleading-indentation.c", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d80ab91d0130a23d65133938959eb54f5f9aab7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmisleading-indentation.c?ref=0d80ab91d0130a23d65133938959eb54f5f9aab7", "patch": "@@ -14,15 +14,15 @@ fn_1 (int flag)\n   int x = 4, y = 5;\n   if (flag) /* { dg-warning \"3: this 'if' clause does not guard...\" } */\n     x = 3;\n-    y = 2; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    y = 2; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n   return x * y;\n }\n \n int\n fn_2 (int flag, int x, int y)\n {\n   if (flag) /* { dg-warning \"3: this 'if' clause does not guard...\" } */\n-    x++; y++; /* { dg-message \"10: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    x++; y++; /* { dg-message \"10: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n \n   return x * y;\n }\n@@ -35,7 +35,7 @@ fn_3 (int flag)\n     x = 3;\n   else /* { dg-warning \"3: this 'else' clause does not guard...\" } */\n     x = 2;\n-    y = 2; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'else'\" } */\n+    y = 2; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'else'\" } */\n   return x * y;\n }\n \n@@ -45,7 +45,7 @@ fn_4 (double *a, double *b, double *c)\n   int i = 0;\n   while (i < 10) /* { dg-warning \"3: this 'while' clause does not guard...\" } */\n     a[i] = b[i] * c[i];\n-    i++; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'while'\" } */\n+    i++; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'while'\" } */\n }\n \n void\n@@ -54,7 +54,7 @@ fn_5 (double *a, double *b, double *sum, double *prod)\n   int i = 0;\n   for (i = 0; i < 10; i++) /* { dg-warning \"3: this 'for' clause does not guard...\" } */\n     sum[i] = a[i] * b[i];\n-    prod[i] = a[i] * b[i]; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'for'\" } */\n+    prod[i] = a[i] * b[i]; /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'for'\" } */\n }\n \n /* Based on CVE-2014-1266 aka \"goto fail\" */\n@@ -67,7 +67,7 @@ int fn_6 (int a, int b, int c)\n \t\tgoto fail;\n \tif ((err = foo (b)) != 0) /* { dg-message \"2: this 'if' clause does not guard...\" } */\n \t\tgoto fail;\n-\t\tgoto fail; /* { dg-message \"3: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+\t\tgoto fail; /* { dg-message \"3: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n \tif ((err = foo (c)) != 0)\n \t\tgoto fail;\n \t/* ... */\n@@ -81,7 +81,7 @@ int fn_7 (int p, int q, int r, int s, int t)\n   if (bar (p, q))\n     {\n       if (p) /* { dg-message \"7: this 'if' clause does not guard...\" } */\n-        q++; r++; /* { dg-message \"14: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+        q++; r++; /* { dg-message \"14: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n       t++;\n     }\n   return p + q + r + s + t;\n@@ -97,7 +97,7 @@ void fn_9 (int flag)\n {\n   if (flag) /* { dg-warning \"3: this 'if' clause does not guard...\" } */\n     foo (0);\n-    foo (1); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    foo (1); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n }\n \n void fn_10 (int flag)\n@@ -108,7 +108,7 @@ void fn_10 (int flag)\n         foo (0);\n         foo (1);\n       }\n-    foo (2); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    foo (2); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n   foo (3);\n }\n \n@@ -118,7 +118,7 @@ void fn_11 (void)\n     if (flagB)\n       if (flagC) /* { dg-message \"7: this 'if' clause does not guard...\" } */\n         foo (0);\n-        bar (1, 2); /* { dg-message \"9: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+        bar (1, 2); /* { dg-message \"9: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n }\n \n void fn_12 (void)\n@@ -127,7 +127,7 @@ void fn_12 (void)\n     if (flagB) /* { dg-message \"5: this 'if' clause does not guard...\" } */\n       if (flagC)\n         foo (0);\n-      bar (1, 2); /* { dg-message \"7: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+      bar (1, 2); /* { dg-message \"7: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n }\n \n void fn_13 (void)\n@@ -136,7 +136,7 @@ void fn_13 (void)\n     if (flagB)\n       if (flagC)\n         foo (0);\n-    bar (1, 2); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    bar (1, 2); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n }\n \n #define FOR_EACH(VAR, START, STOP) \\\n@@ -147,7 +147,7 @@ void fn_14 (void)\n   int i;\n   FOR_EACH (i, 0, 10) /* { dg-message \"in expansion of macro .FOR_EACH.\" } */\n     foo (i);\n-    bar (i, i); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'for'\" } */\n+    bar (i, i); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'for'\" } */\n }\n #undef FOR_EACH\n \n@@ -157,7 +157,7 @@ void fn_15 (void)\n   int i;\n   FOR_EACH (i, 0, 10) /* { dg-message \"in expansion of macro .FOR_EACH.\" } */\n     foo (i);\n-    bar (i, i); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'for'\" } */\n+    bar (i, i); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'for'\" } */\n }\n #undef FOR_EACH\n \n@@ -168,7 +168,7 @@ void fn_16_spaces (void)\n     while (flagA)\n       if (flagB) /* { dg-message \"7: this 'if' clause does not guard...\" } */\n         foo (0);\n-        foo (1); /* { dg-message \"9: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+        foo (1); /* { dg-message \"9: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n }\n \n void fn_16_tabs (void)\n@@ -178,7 +178,7 @@ void fn_16_tabs (void)\n     while (flagA)\n       if (flagB) /* { dg-message \"7: this 'if' clause does not guard...\" } */\n \tfoo (0);\n-\tfoo (1);/* { dg-message \"2: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+\tfoo (1);/* { dg-message \"2: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n }\n \n void fn_17_spaces (void)\n@@ -188,7 +188,7 @@ void fn_17_spaces (void)\n     while (flagA)\n       if (flagB)\n         foo (0);\n-    foo (1);/* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'for'\" } */\n+    foo (1);/* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'for'\" } */\n }\n \n void fn_17_tabs (void)\n@@ -198,7 +198,7 @@ void fn_17_tabs (void)\n     while (flagA)\n       if (flagB)\n \tfoo (0);\n-    foo (1);/* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'for'\" } */\n+    foo (1);/* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'for'\" } */\n }\n \n void fn_18_spaces (void)\n@@ -208,7 +208,7 @@ void fn_18_spaces (void)\n     while (flagA) /* { dg-message \"5: this 'while' clause does not guard...\" } */\n       if (flagB)\n         foo (0);\n-      foo (1);/* { dg-message \"7: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'while'\" } */\n+      foo (1);/* { dg-message \"7: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'while'\" } */\n }\n \n void fn_18_tabs (void)\n@@ -218,7 +218,7 @@ void fn_18_tabs (void)\n     while (flagA) /* { dg-message \"5: this 'while' clause does not guard...\" } */\n       if (flagB)\n \tfoo (0);\n-      foo (1);/* { dg-message \"7: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'while'\" } */\n+      foo (1);/* { dg-message \"7: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'while'\" } */\n }\n \n /* This shouldn't lead to a warning.  */\n@@ -704,37 +704,37 @@ fn_37 (void)\n #define FOR_EACH(VAR, START, STOP) for (VAR = START; VAR < STOP; VAR++) /* { dg-warning \"this 'for' clause\" } */\n \n   while (flagA); /* { dg-warning \"3: this 'while' clause\" } */\n-    foo (0); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'while'\" } */\n+    foo (0); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'while'\" } */\n \n   if (flagA)\n     ;\n   else if (flagB); /* { dg-warning \"8: this 'if' clause\" } */\n-    foo (0); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    foo (0); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n   while (flagA) /* { dg-warning \"3: this 'while' clause\" } */\n     /* blah */;\n-    foo (0); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'while'\" } */\n+    foo (0); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'while'\" } */\n \n   if (flagA)\n     ;\n   else if (flagB) /* { dg-warning \"8: this 'if' clause\" } */\n     foo (1);\n-    foo (2); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    foo (2); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n \n   if (flagA)\n     foo (1);\n   else if (flagB) /* { dg-warning \"8: this 'if' clause\" } */\n     foo (2);\n-    foo (3); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    foo (3); /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n \n   if (flagB) /* { dg-warning \"3: this 'if' clause\" } */\n     /* blah */;\n-    { /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+    { /* { dg-message \"5: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n       foo (0);\n     }\n \n   if (flagB) /* { dg-warning \"3: this 'if' clause\" } */\n     /* blah */;\n-   { /* { dg-message \"4: ...this statement, but the latter is misleadingly indented as if it is guarded by the 'if'\" } */\n+   { /* { dg-message \"4: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'\" } */\n      foo (0);\n    }\n "}]}