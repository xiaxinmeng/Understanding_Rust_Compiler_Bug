{"sha": "e97cac0271d7322d643fed8c6bf6ba8ec3aad451", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3Y2FjMDI3MWQ3MzIyZDY0M2ZlZDhjNmJmNmJhOGVjM2FhZDQ1MQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-05-11T09:54:30Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-05-11T09:54:30Z"}, "message": "tree-ssa-loop-ivopts.c (find_interesting_uses): Move inv vars dump to ...\n\n\t* tree-ssa-loop-ivopts.c (find_interesting_uses): Move inv vars dump\n\tto ...\n\t(determine_group_iv_costs): ... here.\n\t(find_inv_vars_cb): Record inv var if it's not recorded before.\n\nFrom-SVN: r247896", "tree": {"sha": "1ae568056f23d40e1a98ba1ba15172d4e1a3f73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ae568056f23d40e1a98ba1ba15172d4e1a3f73c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e97cac0271d7322d643fed8c6bf6ba8ec3aad451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97cac0271d7322d643fed8c6bf6ba8ec3aad451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97cac0271d7322d643fed8c6bf6ba8ec3aad451", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97cac0271d7322d643fed8c6bf6ba8ec3aad451/comments", "author": null, "committer": null, "parents": [{"sha": "ac5344e0be57c845430e6b4aad97096531536d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5344e0be57c845430e6b4aad97096531536d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac5344e0be57c845430e6b4aad97096531536d5c"}], "stats": {"total": 63, "additions": 43, "deletions": 20}, "files": [{"sha": "0b5b6f3d0473b3d31b7adecb2a160782f1f8eea1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97cac0271d7322d643fed8c6bf6ba8ec3aad451/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97cac0271d7322d643fed8c6bf6ba8ec3aad451/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e97cac0271d7322d643fed8c6bf6ba8ec3aad451", "patch": "@@ -1,3 +1,10 @@\n+2017-05-11  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-ssa-loop-ivopts.c (find_interesting_uses): Move inv vars dump\n+\tto ...\n+\t(determine_group_iv_costs): ... here.\n+\t(find_inv_vars_cb): Record inv var if it's not recorded before.\n+\n 2017-05-11  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-ssa-loop-ivopts.c (allow_ip_end_pos_p): Refine comments."}, {"sha": "f95e01e19e3c15189f30f7aa3cd369422cc93752", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 36, "deletions": 20, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97cac0271d7322d643fed8c6bf6ba8ec3aad451/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97cac0271d7322d643fed8c6bf6ba8ec3aad451/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=e97cac0271d7322d643fed8c6bf6ba8ec3aad451", "patch": "@@ -2676,32 +2676,16 @@ find_interesting_uses (struct ivopts_data *data)\n \tif (!is_gimple_debug (gsi_stmt (bsi)))\n \t  find_interesting_uses_stmt (data, gsi_stmt (bsi));\n     }\n+  free (body);\n \n   split_address_groups (data);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n-      bitmap_iterator bi;\n-\n-      fprintf (dump_file, \"\\n<Invariant Vars>:\\n\");\n-      EXECUTE_IF_SET_IN_BITMAP (data->relevant, 0, i, bi)\n-\t{\n-\t  struct version_info *info = ver_info (data, i);\n-\t  if (info->inv_id)\n-\t    {\n-\t      fprintf (dump_file, \"Inv %d:\\t\", info->inv_id);\n-\t      print_generic_expr (dump_file, info->name, TDF_SLIM);\n-\t      fprintf (dump_file, \"%s\\n\",\n-\t\t       info->has_nonlin_use ? \"\" : \"\\t(eliminable)\");\n-\t    }\n-\t}\n-\n       fprintf (dump_file, \"\\n<IV Groups>:\\n\");\n       dump_groups (dump_file, data);\n       fprintf (dump_file, \"\\n\");\n     }\n-\n-  free (body);\n }\n \n /* Strips constant offsets from EXPR and stores them to OFFSET.  If INSIDE_ADDR\n@@ -2918,13 +2902,28 @@ struct walk_tree_data\n static tree\n find_inv_vars_cb (tree *expr_p, int *ws ATTRIBUTE_UNUSED, void *data)\n {\n-  struct walk_tree_data *wdata = (struct walk_tree_data*) data;\n+  tree op = *expr_p;\n   struct version_info *info;\n+  struct walk_tree_data *wdata = (struct walk_tree_data*) data;\n \n-  if (TREE_CODE (*expr_p) != SSA_NAME)\n+  if (TREE_CODE (op) != SSA_NAME)\n     return NULL_TREE;\n \n-  info = name_info (wdata->idata, *expr_p);\n+  info = name_info (wdata->idata, op);\n+  /* Because we expand simple operations when finding IVs, loop invariant\n+     variable that isn't referred by the original loop could be used now.\n+     Record such invariant variables here.  */\n+  if (!info->iv)\n+    {\n+      struct ivopts_data *idata = wdata->idata;\n+      basic_block bb = gimple_bb (SSA_NAME_DEF_STMT (op));\n+\n+      if (!bb || !flow_bb_inside_loop_p (idata->current_loop, bb))\n+\t{\n+\t  set_iv (idata, op, op, build_int_cst (TREE_TYPE (op), 0), true);\n+\t  record_invariant (idata, op, false);\n+\t}\n+    }\n   if (!info->inv_id || info->has_nonlin_use)\n     return NULL_TREE;\n \n@@ -5389,6 +5388,23 @@ determine_group_iv_costs (struct ivopts_data *data)\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n+      bitmap_iterator bi;\n+\n+      /* Dump invariant variables.  */\n+      fprintf (dump_file, \"\\n<Invariant Vars>:\\n\");\n+      EXECUTE_IF_SET_IN_BITMAP (data->relevant, 0, i, bi)\n+\t{\n+\t  struct version_info *info = ver_info (data, i);\n+\t  if (info->inv_id)\n+\t    {\n+\t      fprintf (dump_file, \"Inv %d:\\t\", info->inv_id);\n+\t      print_generic_expr (dump_file, info->name, TDF_SLIM);\n+\t      fprintf (dump_file, \"%s\\n\",\n+\t\t       info->has_nonlin_use ? \"\" : \"\\t(eliminable)\");\n+\t    }\n+\t}\n+\n+      /* Dump invariant expressions.  */\n       fprintf (dump_file, \"\\n<Invariant Expressions>:\\n\");\n       auto_vec <iv_inv_expr_ent *> list (data->inv_expr_tab->elements ());\n "}]}