{"sha": "59caab22b5f31eef1b5b89a0caf2fc1c155585bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTljYWFiMjJiNWYzMWVlZjFiNWI4OWEwY2FmMmZjMWMxNTU1ODViZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-11T14:26:27Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-11T14:26:27Z"}, "message": "i386.md (*ashr<mode>3_cconly): Fix wrong mode of scratch register.\n\n\t* config/i386/i386.md (*ashr<mode>3_cconly): Fix wrong mode of\n\tscratch register.\n\t(*lshr<mode>3_cconly): Ditto.\n\nFrom-SVN: r158204", "tree": {"sha": "3e4a073465185c0cf90bee29a169a458d7162cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e4a073465185c0cf90bee29a169a458d7162cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59caab22b5f31eef1b5b89a0caf2fc1c155585bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59caab22b5f31eef1b5b89a0caf2fc1c155585bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59caab22b5f31eef1b5b89a0caf2fc1c155585bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59caab22b5f31eef1b5b89a0caf2fc1c155585bd/comments", "author": null, "committer": null, "parents": [{"sha": "9200ac720c5fe547870939a0a1ec5c8d72ad7aff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9200ac720c5fe547870939a0a1ec5c8d72ad7aff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9200ac720c5fe547870939a0a1ec5c8d72ad7aff"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "6e467e5c79fcd18105d931c59e32f78741192839", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59caab22b5f31eef1b5b89a0caf2fc1c155585bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59caab22b5f31eef1b5b89a0caf2fc1c155585bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59caab22b5f31eef1b5b89a0caf2fc1c155585bd", "patch": "@@ -1,3 +1,9 @@\n+2010-04-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*ashr<mode>3_cconly): Fix wrong mode of\n+\tscratch register.\n+\t(*lshr<mode>3_cconly): Ditto.\n+\n 2010-04-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (lshr<mode>3): Macroize expander from\n@@ -46,7 +52,7 @@\n \t*ashrdi3_one_bit_cconly_rex64. Macroize insn from\n \t*ashr{qi,hi,si}3_cconly and *ashrdi3_cconly_rex64 using\n \tSWI mode iterator.\n-\t(sign_extend splitters): Update for renamed ashr{di,si}3_31 patterns.\n+\t(sign_extend splitters): Update for renamed ashr{di,si}3_cvt patterns.\n \t* config/i386/i386.c (ix86_split_ashr): Update for renamed\n \tx86_shift<mode>_adj_3 expanders.\n \n@@ -221,7 +227,7 @@\n \n \t* tree-vectorizer.h (struct _stmt_vec_info): Document\n \tthat vectype is the type of the LHS.\n-\t(supportable_widening_operation, supportable_narrowing_operation): \n+\t(supportable_widening_operation, supportable_narrowing_operation):\n \tGet both input and output vector types as arguments.\n \t(vect_is_simple_use_1): Declare.\n \t(get_same_sized_vectype): Likewise.\n@@ -474,7 +480,7 @@\n \tinserting GIMPLE_NOPs into the IL.\n \t* tree-ssa-structalias.c (get_constraint_for_component_ref):\n \tExplicitly strip handled components and indirect references.\n- \n+\n \t* fold-const.c (fold_unary_loc): Do not strip qualifiers when\n \tfolding address expressions.\n \t* gimple.c (gimple_ior_addresses_taken_1): Use get_base_address."}, {"sha": "8ff8643582eeca11910526714118a749ad5344bd", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59caab22b5f31eef1b5b89a0caf2fc1c155585bd/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59caab22b5f31eef1b5b89a0caf2fc1c155585bd/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=59caab22b5f31eef1b5b89a0caf2fc1c155585bd", "patch": "@@ -10505,7 +10505,7 @@\n \t  (ashiftrt:SWI (match_operand:SWI 1 \"nonimmediate_operand\" \"0\")\n \t\t\t(match_operand:QI 2 \"<shift_immediate_operand>\" \"<S>\"))\n \t  (const_int 0)))\n-   (clobber (match_scratch:DI 0 \"=<r>\"))]\n+   (clobber (match_scratch:SWI 0 \"=<r>\"))]\n   \"(optimize_function_for_size_p (cfun)\n     || !TARGET_PARTIAL_FLAG_REG_STALL\n     || (operands[2] == const1_rtx\n@@ -10719,7 +10719,7 @@\n \t  (lshiftrt:SWI (match_operand:SWI 1 \"nonimmediate_operand\" \"0\")\n \t\t\t(match_operand:QI 2 \"<shift_immediate_operand>\" \"<S>\"))\n \t  (const_int 0)))\n-   (clobber (match_scratch:DI 0 \"=<r>\"))]\n+   (clobber (match_scratch:SWI 0 \"=<r>\"))]\n   \"(optimize_function_for_size_p (cfun)\n     || !TARGET_PARTIAL_FLAG_REG_STALL\n     || (operands[2] == const1_rtx"}]}