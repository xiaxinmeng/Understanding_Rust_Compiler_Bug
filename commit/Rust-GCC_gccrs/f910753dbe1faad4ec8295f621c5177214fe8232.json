{"sha": "f910753dbe1faad4ec8295f621c5177214fe8232", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxMDc1M2RiZTFmYWFkNGVjODI5NWY2MjFjNTE3NzIxNGZlODIzMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2014-01-17T01:04:59Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-01-17T01:04:59Z"}, "message": "re PR ipa/59775 (internal compiler error: Segmentation fault)\n\n\n\tPR ipa/59775\n\t* tree.c (get_binfo_at_offset): Look harder for virtual bases.\n\nFrom-SVN: r206694", "tree": {"sha": "a2d3c118085cdca5895c149b8c25b020c147fc99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2d3c118085cdca5895c149b8c25b020c147fc99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f910753dbe1faad4ec8295f621c5177214fe8232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f910753dbe1faad4ec8295f621c5177214fe8232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f910753dbe1faad4ec8295f621c5177214fe8232", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f910753dbe1faad4ec8295f621c5177214fe8232/comments", "author": null, "committer": null, "parents": [{"sha": "906641605ffa86e1ab4173779dd72ea5e04ae78b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/906641605ffa86e1ab4173779dd72ea5e04ae78b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/906641605ffa86e1ab4173779dd72ea5e04ae78b"}], "stats": {"total": 70, "additions": 60, "deletions": 10}, "files": [{"sha": "5a575e01303e8986afc4ece106ada0b4e2e03e54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910753dbe1faad4ec8295f621c5177214fe8232/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910753dbe1faad4ec8295f621c5177214fe8232/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f910753dbe1faad4ec8295f621c5177214fe8232", "patch": "@@ -1,3 +1,8 @@\n+2014-01-16  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR ipa/59775\n+\t* tree.c (get_binfo_at_offset): Look harder for virtual bases.\n+\n 2014-01-16  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR middle-end/56791"}, {"sha": "a85acbeac849bb1d42b0c5786d7d661fce4b03af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910753dbe1faad4ec8295f621c5177214fe8232/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910753dbe1faad4ec8295f621c5177214fe8232/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f910753dbe1faad4ec8295f621c5177214fe8232", "patch": "@@ -1,3 +1,8 @@\n+2014-01-16  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR ipa/59775\n+\t* g++.dg/torture/pr59775.C: New testcase.\n+\n 2014-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/58344"}, {"sha": "10c497587e1d9de0ddf37c63c39ef0bed03430bd", "filename": "gcc/testsuite/g++.dg/torture/pr59775.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910753dbe1faad4ec8295f621c5177214fe8232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr59775.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910753dbe1faad4ec8295f621c5177214fe8232/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr59775.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr59775.C?ref=f910753dbe1faad4ec8295f621c5177214fe8232", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+struct A\n+{\n+  virtual void foo () = 0;\n+  void bar () { foo (); }\n+  bool a;\n+};\n+struct B : public virtual A\n+{\n+  virtual void foo ();\n+};\n+struct C : public B\n+{\n+  C ();\n+};\n+void\n+baz ()\n+{\n+  C c;\n+  c.bar ();\n+}"}, {"sha": "76e3efb4920d1b17e0033090313066caac6c8582", "filename": "gcc/tree.c", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f910753dbe1faad4ec8295f621c5177214fe8232/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f910753dbe1faad4ec8295f621c5177214fe8232/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f910753dbe1faad4ec8295f621c5177214fe8232", "patch": "@@ -11995,16 +11995,35 @@ get_binfo_at_offset (tree binfo, HOST_WIDE_INT offset, tree expected_type)\n \t represented in the binfo for the derived class.  */\n       else if (offset != 0)\n \t{\n-\t  tree base_binfo, found_binfo = NULL_TREE;\n-\t  for (i = 0; BINFO_BASE_ITERATE (binfo, i, base_binfo); i++)\n-\t    if (types_same_for_odr (TREE_TYPE (base_binfo), TREE_TYPE (fld)))\n-\t      {\n-\t\tfound_binfo = base_binfo;\n-\t\tbreak;\n-\t      }\n-\t  if (!found_binfo)\n-\t    return NULL_TREE;\n-\t  binfo = found_binfo;\n+\t  tree base_binfo, binfo2 = binfo;\n+\n+\t  /* Find BINFO corresponding to FLD.  This is bit harder\n+\t     by a fact that in virtual inheritance we may need to walk down\n+\t     the non-virtual inheritance chain.  */\n+\t  while (true)\n+\t    {\n+\t      tree containing_binfo = NULL, found_binfo = NULL;\n+\t      for (i = 0; BINFO_BASE_ITERATE (binfo2, i, base_binfo); i++)\n+\t\tif (types_same_for_odr (TREE_TYPE (base_binfo), TREE_TYPE (fld)))\n+\t\t  {\n+\t\t    found_binfo = base_binfo;\n+\t\t    break;\n+\t\t  }\n+\t\telse\n+\t\t  if (BINFO_OFFSET (base_binfo) - BINFO_OFFSET (binfo) < pos\n+\t\t      && (!containing_binfo\n+\t\t\t  || (BINFO_OFFSET (containing_binfo)\n+\t\t\t      < BINFO_OFFSET (base_binfo))))\n+\t\t    containing_binfo = base_binfo;\n+\t      if (found_binfo)\n+\t\t{\n+\t\t  binfo = found_binfo;\n+\t\t  break;\n+\t\t}\n+\t      if (!containing_binfo)\n+\t\treturn NULL_TREE;\n+\t      binfo2 = containing_binfo;\n+\t    }\n \t}\n \n       type = TREE_TYPE (fld);"}]}