{"sha": "91f161b03b649984991573c2f2605555da4a678c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFmMTYxYjAzYjY0OTk4NDk5MTU3M2MyZjI2MDU1NTVkYTRhNjc4Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-11-21T17:43:24Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-11-21T17:43:24Z"}, "message": "Add more markup to vect-alias-check-{1,18}.c (PR 92543)\n\nIn vect-alias-check-1.c we unroll the inner loop and then vectorise\nthe stores at a[c + 1][b].  Since the access has no guaranteed\nalignemnt, we need a realignment mechanism or support for unaligned\naccesses in order to vectorise.\n\nIn vect-alias-check-18.c we use a reverse access and so need\npermute support in order to vectorise.\n\nI'm not really sure when this part of the testsuite prefers\n{ xfail { ! foo } } and when it prefers { target foo }.  xfail\nseems like the most common choice for the alignment restriction,\nwhereas vect_int and vect_perm are mostly dg-require-effective-target\nstyle features, so I went with that combination.\n\n2019-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/testsuite/\n\tPR testsuite/92543\n\t* gcc.dg/vect/vect-alias-check-1.c: XFAIL the alias check message\n\tif there is no realignment support and no support for unaligned\n\taccesses.\n\t* gcc.dg/vect/vect-alias-check-18.c: Restrict the test for the\n\talias message to targets that have permute support.\n\nFrom-SVN: r278591", "tree": {"sha": "4035d017f68ce2f82cb189e9204ddbb89a9f0687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4035d017f68ce2f82cb189e9204ddbb89a9f0687"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91f161b03b649984991573c2f2605555da4a678c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f161b03b649984991573c2f2605555da4a678c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f161b03b649984991573c2f2605555da4a678c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f161b03b649984991573c2f2605555da4a678c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "934f135b967c7501be6e2e10a2c3c03c54a198d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/934f135b967c7501be6e2e10a2c3c03c54a198d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/934f135b967c7501be6e2e10a2c3c03c54a198d3"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "0250eebb312cd1e35c15ebdcd174b2692d2d8298", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f161b03b649984991573c2f2605555da4a678c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f161b03b649984991573c2f2605555da4a678c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=91f161b03b649984991573c2f2605555da4a678c", "patch": "@@ -1,3 +1,12 @@\n+2019-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR testsuite/92543\n+\t* gcc.dg/vect/vect-alias-check-1.c: XFAIL the alias check message\n+\tif there is no realignment support and no support for unaligned\n+\taccesses.\n+\t* gcc.dg/vect/vect-alias-check-18.c: Restrict the test for the\n+\talias message to targets that have permute support.\n+\n 2019-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/92595"}, {"sha": "6a2cef1586f50b60b1e37410861dce9631c9e9ee", "filename": "gcc/testsuite/gcc.dg/vect/vect-alias-check-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f161b03b649984991573c2f2605555da4a678c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f161b03b649984991573c2f2605555da4a678c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-1.c?ref=91f161b03b649984991573c2f2605555da4a678c", "patch": "@@ -15,5 +15,5 @@ fn1 ()\n }\n \n /* { dg-final { scan-tree-dump \"improved number of alias checks from \\[0-9\\]* to 1\" \"vect\" } } */\n-/* { dg-final { scan-tree-dump \"using an address-based overlap test\" \"vect\" } } */\n+/* { dg-final { scan-tree-dump \"using an address-based overlap test\" \"vect\" { xfail { vect_no_align && { ! vect_hw_misalign } } } } } */\n /* { dg-final { scan-tree-dump-not \"using an index-based\" \"vect\" } } */"}, {"sha": "b9f5d2bbc9f6437e3e8058264cc0c9aaa522b3e2", "filename": "gcc/testsuite/gcc.dg/vect/vect-alias-check-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f161b03b649984991573c2f2605555da4a678c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f161b03b649984991573c2f2605555da4a678c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-18.c?ref=91f161b03b649984991573c2f2605555da4a678c", "patch": "@@ -60,5 +60,5 @@ main (void)\n }\n \n /* { dg-final { scan-tree-dump {flags: *WAR\\n} \"vect\" { target vect_int } } } */\n-/* { dg-final { scan-tree-dump \"using an index-based WAR/WAW test\" \"vect\" } } */\n+/* { dg-final { scan-tree-dump \"using an index-based WAR/WAW test\" \"vect\" { target { vect_int && vect_perm } } } } */\n /* { dg-final { scan-tree-dump-not \"using an address-based\" \"vect\" } } */"}]}