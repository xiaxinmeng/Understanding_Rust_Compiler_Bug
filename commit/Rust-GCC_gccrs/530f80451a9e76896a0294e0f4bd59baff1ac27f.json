{"sha": "530f80451a9e76896a0294e0f4bd59baff1ac27f", "node_id": "C_kwDOANBUbNoAKDUzMGY4MDQ1MWE5ZTc2ODk2YTAyOTRlMGY0YmQ1OWJhZmYxYWMyN2Y", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-08-24T12:53:27Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-08-24T14:22:44Z"}, "message": "libstdc++: Fix regression in std::stable_sort\n\nThe recent change to split out the cold path of std::stable_sort caused\na regression for some Qt code. The problem is that the library now adds\na value of type ptrdiff_t to the iterator, which is ambiguous with\n-pedantic. The addition could either convert the iterator to a built-in\npointer and add the ptrdiff_t to that, or it could convert the ptrdiff_t\nto the iterator's difference_type and use the iterator's own operator+.\n\nThe fix is to cast the ptrdiff_t value to the difference type first.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stl_algo.h (__stable_sort): Cast size to\n\titerator's difference type.\n\t* testsuite/25_algorithms/stable_sort/4.cc: New test.", "tree": {"sha": "e8fea123ff26374a51fa5ed4a907f16072df79d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8fea123ff26374a51fa5ed4a907f16072df79d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/530f80451a9e76896a0294e0f4bd59baff1ac27f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/530f80451a9e76896a0294e0f4bd59baff1ac27f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/530f80451a9e76896a0294e0f4bd59baff1ac27f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/530f80451a9e76896a0294e0f4bd59baff1ac27f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b7c9254998b3fb2c39f6b86b5b196f415530205", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7c9254998b3fb2c39f6b86b5b196f415530205", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b7c9254998b3fb2c39f6b86b5b196f415530205"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "57fa1c1dc55171dbf39d634ae019cdcc26bb800b", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/530f80451a9e76896a0294e0f4bd59baff1ac27f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/530f80451a9e76896a0294e0f4bd59baff1ac27f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=530f80451a9e76896a0294e0f4bd59baff1ac27f", "patch": "@@ -5026,8 +5026,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n       _TmpBuf __buf(__first, (__last - __first + 1) / 2);\n \n       if (__builtin_expect(__buf.requested_size() == __buf.size(), true))\n-\tstd::__stable_sort_adaptive(__first, __first + __buf.size(), __last,\n-\t\t\t\t    __buf.begin(), __comp);\n+\tstd::__stable_sort_adaptive(__first,\n+\t\t\t\t    __first + _DistanceType(__buf.size()),\n+\t\t\t\t    __last, __buf.begin(), __comp);\n       else if (__builtin_expect(__buf.begin() == 0, false))\n \tstd::__inplace_stable_sort(__first, __last, __comp);\n       else"}, {"sha": "b7bda4eeacaa39849a370f5cc3c49101ee86dac4", "filename": "libstdc++-v3/testsuite/25_algorithms/stable_sort/4.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/530f80451a9e76896a0294e0f4bd59baff1ac27f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/530f80451a9e76896a0294e0f4bd59baff1ac27f/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2F4.cc?ref=530f80451a9e76896a0294e0f4bd59baff1ac27f", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-pedantic\" }\n+// { dg-do compile }\n+\n+#include <algorithm>\n+\n+/* This type is reduced from QTypedArrayData::iterator which has an implicit\n+ * conversion to its pointer type and a difference type of int.\n+ * The expression Iter() + ptrdiff_t(0) is ambiguous with -pedantic because it\n+ * could either convert the RHS to int and use Iter::operator+(int)\n+ * or it could convert the LHS to pointer and use built-in pointer arithmetic.\n+ */\n+struct Iter\n+{\n+  struct value_type { bool operator<(value_type) const; };\n+  typedef value_type* pointer;\n+  typedef value_type& reference;\n+  typedef std::random_access_iterator_tag iterator_category;\n+  typedef int difference_type;\n+\n+  reference operator*() const;\n+  pointer operator->() const;\n+\n+  reference operator[](difference_type) const;\n+\n+  Iter& operator++();\n+  Iter& operator--();\n+  Iter operator++(int);\n+  Iter operator--(int);\n+\n+  Iter& operator+=(difference_type);\n+  Iter& operator-=(difference_type);\n+\n+  Iter operator+(difference_type) const;\n+  Iter operator-(difference_type) const;\n+\n+  difference_type operator-(Iter) const;\n+\n+  operator pointer() const; // XXX this causes the ambiguity\n+\n+  bool operator==(Iter) const;\n+  bool operator!=(Iter) const;\n+\n+  bool operator<(Iter) const;\n+};\n+\n+Iter operator+(Iter::difference_type, Iter);\n+\n+int main()\n+{\n+  std::stable_sort(Iter(), Iter());\n+}"}]}