{"sha": "df6018fd2855dde2f06d355760e61d3eda587074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY2MDE4ZmQyODU1ZGRlMmYwNmQzNTU3NjBlNjFkM2VkYTU4NzA3NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-11-08T13:10:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-11-08T13:10:00Z"}, "message": "expr.c (expand_expr): Handle when op0 is RETURN_DECL passed in multiple non-contiguous locations.\n\n\t* expr.c (expand_expr) [ADDR_EXPR]: Handle when op0 is RETURN_DECL\n\tpassed in multiple non-contiguous locations.\n\nFrom-SVN: r37316", "tree": {"sha": "ba1b8d1af8c7165a8360784aadc7676cbba1be34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba1b8d1af8c7165a8360784aadc7676cbba1be34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df6018fd2855dde2f06d355760e61d3eda587074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6018fd2855dde2f06d355760e61d3eda587074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df6018fd2855dde2f06d355760e61d3eda587074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6018fd2855dde2f06d355760e61d3eda587074/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14ae1d508d156407fdb838a39b9eaee2f5c427b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14ae1d508d156407fdb838a39b9eaee2f5c427b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14ae1d508d156407fdb838a39b9eaee2f5c427b5"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "053253f967434f03728aaa9efa3f44b1cb3f5f5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df6018fd2855dde2f06d355760e61d3eda587074/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df6018fd2855dde2f06d355760e61d3eda587074/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df6018fd2855dde2f06d355760e61d3eda587074", "patch": "@@ -1,3 +1,8 @@\n+2000-11-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (expand_expr) [ADDR_EXPR]: Handle when op0 is RETURN_DECL\n+\tpassed in multiple non-contiguous locations.\n+\n 2000-11-08  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* README.gnat: Remove file."}, {"sha": "b28db7f67b8cc3b8bd10b9d1239bbaab54422b3d", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df6018fd2855dde2f06d355760e61d3eda587074/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df6018fd2855dde2f06d355760e61d3eda587074/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=df6018fd2855dde2f06d355760e61d3eda587074", "patch": "@@ -8371,15 +8371,23 @@ expand_expr (exp, target, tmode, modifier)\n \t    }\n \n \t  else if (GET_CODE (op0) == REG || GET_CODE (op0) == SUBREG\n-\t\t   || GET_CODE (op0) == CONCAT || GET_CODE (op0) == ADDRESSOF)\n+\t\t   || GET_CODE (op0) == CONCAT || GET_CODE (op0) == ADDRESSOF\n+\t\t   || GET_CODE (op0) == PARALLEL)\n \t    {\n \t      /* If this object is in a register, it must be not\n \t\t be BLKmode.  */\n \t      tree inner_type = TREE_TYPE (TREE_OPERAND (exp, 0));\n \t      rtx memloc = assign_temp (inner_type, 1, 1, 1);\n \n \t      mark_temp_addr_taken (memloc);\n-\t      emit_move_insn (memloc, op0);\n+\t      if (GET_CODE (op0) == PARALLEL)\n+\t\t/* Handle calls that pass values in multiple non-contiguous\n+\t\t   locations.  The Irix 6 ABI has examples of this.  */\n+\t\temit_group_store (memloc, op0,\n+\t\t\t\t  int_size_in_bytes (inner_type),\n+\t\t\t\t  TYPE_ALIGN (inner_type));\n+\t      else\n+\t\temit_move_insn (memloc, op0);\n \t      op0 = memloc;\n \t    }\n "}]}