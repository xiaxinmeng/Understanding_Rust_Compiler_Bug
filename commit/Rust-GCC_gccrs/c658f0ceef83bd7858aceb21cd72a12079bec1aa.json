{"sha": "c658f0ceef83bd7858aceb21cd72a12079bec1aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY1OGYwY2VlZjgzYmQ3ODU4YWNlYjIxY2Q3MmExMjA3OWJlYzFhYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2010-12-07T21:04:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-07T21:04:33Z"}, "message": "re PR bootstrap/46810 (sparc64-linux bootstrap fails with \"C++ preprocessor \"/lib/cpp\" fails sanity check\")\n\n\tPR bootstrap/46810\n\t* configure.ac: Disable AC_MSG_ERROR while looking for the C++\n\tpreprocessor.\n\t* configure: Rebuild.\n\nCo-Authored-By: Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\nFrom-SVN: r167572", "tree": {"sha": "89b9523a0edf23a3a05b8b3299d17c579701c470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89b9523a0edf23a3a05b8b3299d17c579701c470"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c658f0ceef83bd7858aceb21cd72a12079bec1aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c658f0ceef83bd7858aceb21cd72a12079bec1aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c658f0ceef83bd7858aceb21cd72a12079bec1aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c658f0ceef83bd7858aceb21cd72a12079bec1aa/comments", "author": null, "committer": null, "parents": [{"sha": "9a14c44d46d12a49b3e1cde59dd235a7a44b02b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a14c44d46d12a49b3e1cde59dd235a7a44b02b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a14c44d46d12a49b3e1cde59dd235a7a44b02b6"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "c5865ddbf062fa5934cd11c1317b5a119ead6479", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c658f0ceef83bd7858aceb21cd72a12079bec1aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c658f0ceef83bd7858aceb21cd72a12079bec1aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c658f0ceef83bd7858aceb21cd72a12079bec1aa", "patch": "@@ -1,3 +1,11 @@\n+2010-12-07  Ian Lance Taylor  <iant@google.com>\n+\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR bootstrap/46810\n+\t* configure.ac: Disable AC_MSG_ERROR while looking for the C++\n+\tpreprocessor.\n+\t* configure: Rebuild.\n+\n 2010-12-07  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11.c (output_addr_const_pdp11): Output negative"}, {"sha": "84c327cbf7b5d8414c71958a35b9648f222449f6", "filename": "gcc/configure", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c658f0ceef83bd7858aceb21cd72a12079bec1aa/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c658f0ceef83bd7858aceb21cd72a12079bec1aa/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c658f0ceef83bd7858aceb21cd72a12079bec1aa", "patch": "@@ -8428,14 +8428,6 @@ $as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n # Checks for C++ headers\n # ----------------------\n \n-ac_ext=cpp\n-ac_cpp='$CXXCPP $CPPFLAGS'\n-ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n-\n-\n-\n ac_ext=cpp\n ac_cpp='$CXXCPP $CPPFLAGS'\n ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -8559,17 +8551,28 @@ if $ac_preproc_ok; then :\n else\n   { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n $as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n-as_fn_error \"C++ preprocessor \\\"$CXXCPP\\\" fails sanity check\n-See \\`config.log' for more details.\" \"$LINENO\" 5; }\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: C++ preprocessor \\\"$CXXCPP\\\" fails sanity check\n+See \\`config.log' for more details.\" >&5\n+$as_echo \"$as_me: WARNING: C++ preprocessor \\\"$CXXCPP\\\" fails sanity check\n+See \\`config.log' for more details.\" >&2;}; }\n fi\n \n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n ac_ext=cpp\n ac_cpp='$CXXCPP $CPPFLAGS'\n ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n \n+\n+\n for ac_header in unordered_map\n do :\n   ac_fn_cxx_check_header_preproc \"$LINENO\" \"unordered_map\" \"ac_cv_header_unordered_map\"\n@@ -17506,7 +17509,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17509 \"configure\"\n+#line 17512 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17612,7 +17615,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17615 \"configure\"\n+#line 17618 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "b2fd6418fe9029277de32de3b72fb86f0b840eb0", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c658f0ceef83bd7858aceb21cd72a12079bec1aa/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c658f0ceef83bd7858aceb21cd72a12079bec1aa/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=c658f0ceef83bd7858aceb21cd72a12079bec1aa", "patch": "@@ -913,6 +913,12 @@ AC_C_BIGENDIAN\n # Checks for C++ headers\n # ----------------------\n \n+dnl Autoconf will give an error in the configure script if there is no\n+dnl C++ preprocessor.  Hack to prevent that.\n+m4_pushdef([AC_MSG_ERROR], m4_defn([AC_MSG_WARN]))[]dnl\n+AC_PROG_CXXCPP\n+m4_popdef([AC_MSG_ERROR])[]dnl\n+\n AC_LANG_PUSH(C++)\n \n AC_CHECK_HEADERS(unordered_map)"}]}