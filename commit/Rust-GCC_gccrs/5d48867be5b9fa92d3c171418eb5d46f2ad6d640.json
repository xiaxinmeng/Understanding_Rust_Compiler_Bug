{"sha": "5d48867be5b9fa92d3c171418eb5d46f2ad6d640", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ0ODg2N2JlNWI5ZmE5MmQzYzE3MTQxOGViNWQ0NmYyYWQ2ZDY0MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-15T15:08:38Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:08:38Z"}, "message": "i386: Emulate MMX ashr<mode>3/<shift_insn><mode>3 with SSE\n\nEmulate MMX ashr<mode>3/<shift_insn><mode>3 with SSE.  Only SSE register\nsource operand is allowed.\n\n\tPR target/89021\n\t* config/i386/mmx.md (mmx_ashr<mode>3): Also allow\n\tTARGET_MMX_WITH_SSE.  Add SSE emulation.\n\t(mmx_<shift_insn><mode>3): Likewise.\n\t(ashr<mode>3): New.\n\t(<shift_insn><mode>3): Likewise.\n\nFrom-SVN: r271221", "tree": {"sha": "225f5d9da0373c5a46fb5a8e5009a8ae5eff5dc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/225f5d9da0373c5a46fb5a8e5009a8ae5eff5dc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d48867be5b9fa92d3c171418eb5d46f2ad6d640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d48867be5b9fa92d3c171418eb5d46f2ad6d640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d48867be5b9fa92d3c171418eb5d46f2ad6d640", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d48867be5b9fa92d3c171418eb5d46f2ad6d640/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0e9bf2a6db4df95b776c5bcd728f0e159116659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0e9bf2a6db4df95b776c5bcd728f0e159116659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0e9bf2a6db4df95b776c5bcd728f0e159116659"}], "stats": {"total": 59, "additions": 45, "deletions": 14}, "files": [{"sha": "ecf9f7b98a5dbbc50fe3cf8d9f031f2c54378e53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d48867be5b9fa92d3c171418eb5d46f2ad6d640/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d48867be5b9fa92d3c171418eb5d46f2ad6d640/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d48867be5b9fa92d3c171418eb5d46f2ad6d640", "patch": "@@ -1,3 +1,12 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* config/i386/mmx.md (mmx_ashr<mode>3): Also allow\n+\tTARGET_MMX_WITH_SSE.  Add SSE emulation.\n+\t(mmx_<shift_insn><mode>3): Likewise.\n+\t(ashr<mode>3): New.\n+\t(<shift_insn><mode>3): Likewise.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}, {"sha": "73110b5e43c5d0c5eb3b3a0263145be2d6fd964a", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 36, "deletions": 14, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d48867be5b9fa92d3c171418eb5d46f2ad6d640/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d48867be5b9fa92d3c171418eb5d46f2ad6d640/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=5d48867be5b9fa92d3c171418eb5d46f2ad6d640", "patch": "@@ -984,32 +984,54 @@\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"mmx_ashr<mode>3\"\n-  [(set (match_operand:MMXMODE24 0 \"register_operand\" \"=y\")\n+  [(set (match_operand:MMXMODE24 0 \"register_operand\" \"=y,x,Yv\")\n         (ashiftrt:MMXMODE24\n-\t  (match_operand:MMXMODE24 1 \"register_operand\" \"0\")\n-\t  (match_operand:DI 2 \"nonmemory_operand\" \"yN\")))]\n-  \"TARGET_MMX\"\n-  \"psra<mmxvecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxshft\")\n+\t  (match_operand:MMXMODE24 1 \"register_operand\" \"0,0,Yv\")\n+\t  (match_operand:DI 2 \"nonmemory_operand\" \"yN,xN,YvN\")))]\n+  \"TARGET_MMX || TARGET_MMX_WITH_SSE\"\n+  \"@\n+   psra<mmxvecsize>\\t{%2, %0|%0, %2}\n+   psra<mmxvecsize>\\t{%2, %0|%0, %2}\n+   vpsra<mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+   (set_attr \"type\" \"mmxshft,sseishft,sseishft\")\n    (set (attr \"length_immediate\")\n      (if_then_else (match_operand 2 \"const_int_operand\")\n        (const_string \"1\")\n        (const_string \"0\")))\n-   (set_attr \"mode\" \"DI\")])\n+   (set_attr \"mode\" \"DI,TI,TI\")])\n+\n+(define_expand \"ashr<mode>3\"\n+  [(set (match_operand:MMXMODE24 0 \"register_operand\")\n+        (ashiftrt:MMXMODE24\n+\t  (match_operand:MMXMODE24 1 \"register_operand\")\n+\t  (match_operand:DI 2 \"nonmemory_operand\")))]\n+  \"TARGET_MMX_WITH_SSE\")\n \n (define_insn \"mmx_<shift_insn><mode>3\"\n-  [(set (match_operand:MMXMODE248 0 \"register_operand\" \"=y\")\n+  [(set (match_operand:MMXMODE248 0 \"register_operand\" \"=y,x,Yv\")\n         (any_lshift:MMXMODE248\n-\t  (match_operand:MMXMODE248 1 \"register_operand\" \"0\")\n-\t  (match_operand:DI 2 \"nonmemory_operand\" \"yN\")))]\n-  \"TARGET_MMX\"\n-  \"p<vshift><mmxvecsize>\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxshft\")\n+\t  (match_operand:MMXMODE248 1 \"register_operand\" \"0,0,Yv\")\n+\t  (match_operand:DI 2 \"nonmemory_operand\" \"yN,xN,YvN\")))]\n+  \"TARGET_MMX || TARGET_MMX_WITH_SSE\"\n+  \"@\n+   p<vshift><mmxvecsize>\\t{%2, %0|%0, %2}\n+   p<vshift><mmxvecsize>\\t{%2, %0|%0, %2}\n+   vp<vshift><mmxvecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+   (set_attr \"type\" \"mmxshft,sseishft,sseishft\")\n    (set (attr \"length_immediate\")\n      (if_then_else (match_operand 2 \"const_int_operand\")\n        (const_string \"1\")\n        (const_string \"0\")))\n-   (set_attr \"mode\" \"DI\")])\n+   (set_attr \"mode\" \"DI,TI,TI\")])\n+\n+(define_expand \"<shift_insn><mode>3\"\n+  [(set (match_operand:MMXMODE248 0 \"register_operand\")\n+        (any_lshift:MMXMODE248\n+\t  (match_operand:MMXMODE248 1 \"register_operand\")\n+\t  (match_operand:DI 2 \"nonmemory_operand\")))]\n+  \"TARGET_MMX_WITH_SSE\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;"}]}