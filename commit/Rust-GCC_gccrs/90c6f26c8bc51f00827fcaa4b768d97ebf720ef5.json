{"sha": "90c6f26c8bc51f00827fcaa4b768d97ebf720ef5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBjNmYyNmM4YmM1MWYwMDgyN2ZjYWE0Yjc2OGQ5N2ViZjcyMGVmNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-02-02T15:19:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-02-02T15:19:32Z"}, "message": "re PR tree-optimization/69595 (Bogus -Warray-bound warning due to missed optimization)\n\n2016-02-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69595\n\t* match.pd: Add range test simplifications to true/false.\n\n\t* gcc.dg/Warray-bounds-17.c: New testcase.\n\nFrom-SVN: r233076", "tree": {"sha": "0fb720ef1b494a46acb199b90cbc2d028079a1e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fb720ef1b494a46acb199b90cbc2d028079a1e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18f60146494a8c90d5dfc1f640b48f2f34a1588c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18f60146494a8c90d5dfc1f640b48f2f34a1588c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18f60146494a8c90d5dfc1f640b48f2f34a1588c"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "3b548f56a9d07c4edf4614d1cd3f0b67d80657b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90c6f26c8bc51f00827fcaa4b768d97ebf720ef5", "patch": "@@ -1,3 +1,8 @@\n+2016-02-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69595\n+\t* match.pd: Add range test simplifications to true/false.\n+\n 2016-02-02  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* omp-builtins.def (BUILT_IN_GOACC_HOST_DATA): Remove."}, {"sha": "6c8ebd5e0906fc8700961723cf08c969fc58534e", "filename": "gcc/match.pd", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=90c6f26c8bc51f00827fcaa4b768d97ebf720ef5", "patch": "@@ -2094,6 +2094,24 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (bit_and:c (ordered @0 @0) (ordered:c@2 @0 @1))\n  @2)\n \n+/* Simple range test simplifications.  */\n+/* A < B || A >= B -> true.  */\n+(for test1 (lt le ne)\n+     test2 (ge gt eq)\n+ (simplify\n+  (bit_ior:c (test1 @0 @1) (test2 @0 @1))\n+  (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       || VECTOR_INTEGER_TYPE_P (TREE_TYPE (@0)))\n+   { constant_boolean_node (true, type); })))\n+/* A < B && A >= B -> false.  */\n+(for test1 (lt lt lt le ne eq)\n+     test2 (ge gt eq gt eq gt)\n+ (simplify\n+  (bit_and:c (test1 @0 @1) (test2 @0 @1))\n+  (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       || VECTOR_INTEGER_TYPE_P (TREE_TYPE (@0)))\n+   { constant_boolean_node (false, type); })))\n+\n /* -A CMP -B -> B CMP A.  */\n (for cmp (tcc_comparison)\n      scmp (swapped_tcc_comparison)"}, {"sha": "9ed6c54535bdc024e7e0363f00eea32ac9616f85", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90c6f26c8bc51f00827fcaa4b768d97ebf720ef5", "patch": "@@ -1,3 +1,8 @@\n+2016-02-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69595\n+\t* gcc.dg/Warray-bounds-17.c: New testcase.\n+\n 2016-02-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69606"}, {"sha": "e790037feb15aaa12041ef0b1c53036bc072b194", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-17.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90c6f26c8bc51f00827fcaa4b768d97ebf720ef5/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-17.c?ref=90c6f26c8bc51f00827fcaa4b768d97ebf720ef5", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Warray-bounds\" } */\n+\n+char *y;\n+void foo (int sysnum)\n+{\n+  static char *x[] = {};\n+  int nsyscalls = sizeof x / sizeof x[0];\n+  if (sysnum < 0 || sysnum >= nsyscalls)\n+    return;\n+  else\n+    y = x[sysnum]; /* { dg-bogus \"above array bounds\" } */\n+}"}]}