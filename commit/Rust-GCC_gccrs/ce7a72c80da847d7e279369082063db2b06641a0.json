{"sha": "ce7a72c80da847d7e279369082063db2b06641a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U3YTcyYzgwZGE4NDdkN2UyNzkzNjkwODIwNjNkYjJiMDY2NDFhMA==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2003-10-08T15:49:33Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2003-10-08T15:49:33Z"}, "message": "GtkMenuItemPeer.java (setEnabled): Stub out.\n\n2003-10-08  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkMenuItemPeer.java (setEnabled): Stub\n\tout.\n\t* jni/classpath/jcl.c [!__GNUC__]: Elide __attribute__.\n\t(JCL_free): Attach \"unused\" attribute to env parameter.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c,\n\tjni/gtk-peer/gthread-jni.c: Attach \"unused\" attribute to unused\n\tparameters.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c:\n\t(initNativeState): Pass 0 as info argument to\n\tgtk_selection_add_target.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c:\n\t(setVisible, gtkFixedNew, gtkFixedPut, gtkFixedMove): Remove\n\tunused method implementations.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n\t(awt_event_handler): Add break statement after default label.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c\n\t(drawPixels): Remove unused variable i.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c\n\t(setEnabled): Remove method implementation.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c\n\t(accel_attach): Call _gtk_accel_group_attach with G_OBJECT\n\targument.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.c (sr): Remove\n\tunused function.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c\n\t(menu_pos): Assign TRUE to push_in.\n\t(setupAccelGroup): Call _gtk_accel_group_attach with G_OBJECT\n\targument.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.c\n\t(create): Remove unused variable layout.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c (create):\n\tPass window_widget, rather than window, to\n\tgtk_widget_set_size_request.\n\t* jni/gtk-peer/gthread-jni.c (g_thread_jni_functions): Fill out\n\tstructure initialization with NULL values.\n\t* jni/gtk-peer/gtkpeer.h [!__GNUC__]: Elide __attribute__.\n\nFrom-SVN: r72231", "tree": {"sha": "2643da1632ea6b07e07e4f0f07c9e93b5e98bb31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2643da1632ea6b07e07e4f0f07c9e93b5e98bb31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce7a72c80da847d7e279369082063db2b06641a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7a72c80da847d7e279369082063db2b06641a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce7a72c80da847d7e279369082063db2b06641a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce7a72c80da847d7e279369082063db2b06641a0/comments", "author": null, "committer": null, "parents": [{"sha": "51a398a00efc536cebe54c9c0009000c85bc02ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a398a00efc536cebe54c9c0009000c85bc02ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51a398a00efc536cebe54c9c0009000c85bc02ac"}], "stats": {"total": 356, "additions": 146, "deletions": 210}, "files": [{"sha": "5950b352c66c2c2acd4321f9a22428c6970d7880", "filename": "libjava/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -1,3 +1,53 @@\n+2003-10-08  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkMenuItemPeer.java (setEnabled): Stub\n+\tout.\n+\t* jni/classpath/jcl.c [!__GNUC__]: Elide __attribute__.\n+\t(JCL_free): Attach \"unused\" attribute to env parameter.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c,\n+\tjni/gtk-peer/gthread-jni.c: Attach \"unused\" attribute to unused\n+\tparameters.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c:\n+\t(initNativeState): Pass 0 as info argument to\n+\tgtk_selection_add_target.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c:\n+\t(setVisible, gtkFixedNew, gtkFixedPut, gtkFixedMove): Remove\n+\tunused method implementations.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(awt_event_handler): Add break statement after default label.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c\n+\t(drawPixels): Remove unused variable i.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c\n+\t(setEnabled): Remove method implementation.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c\n+\t(accel_attach): Call _gtk_accel_group_attach with G_OBJECT\n+\targument.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.c (sr): Remove\n+\tunused function.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c\n+\t(menu_pos): Assign TRUE to push_in.\n+\t(setupAccelGroup): Call _gtk_accel_group_attach with G_OBJECT\n+\targument.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.c\n+\t(create): Remove unused variable layout.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c (create):\n+\tPass window_widget, rather than window, to\n+\tgtk_widget_set_size_request.\n+\t* jni/gtk-peer/gthread-jni.c (g_thread_jni_functions): Fill out\n+\tstructure initialization with NULL values.\n+\t* jni/gtk-peer/gtkpeer.h [!__GNUC__]: Elide __attribute__.\n+\n 2003-10-08  Michael Koch  <konqueror@gmx.de>\n \n \t* java/util/LinkedList.java:"}, {"sha": "4e338f6496714d303ab0f941f0f0d50b11318b5d", "filename": "libjava/gnu/java/awt/peer/gtk/GtkMenuItemPeer.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuItemPeer.java?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -85,7 +85,10 @@ public void enable ()\n     setEnabled (true);\n   }\n \n-  native public void setEnabled (boolean b);\n+  public void setEnabled (boolean b)\n+  {\n+    // do nothing, for now.\n+  }\n   native public void setLabel (String label);\n \n   protected void postMenuActionEvent ()"}, {"sha": "629d0716389e0817e8164b9439e4cf0d359ed25c", "filename": "libjava/jni/classpath/jcl.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fclasspath%2Fjcl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fclasspath%2Fjcl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fclasspath%2Fjcl.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -39,6 +39,10 @@ exception statement from your version. */\n #include <jcl.h>\n #include <malloc.h>\n \n+#ifndef __GNUC__\n+#define __attribute__(x) /* nothing */\n+#endif\n+\n static char errstr[4098]; // this way the memory is pre-allocated, so that we do not have to worry if we are out of memory.\n \n JNIEXPORT void JNICALL JCL_ThrowException(JNIEnv * env, char * className, char * errMsg) {\n@@ -85,7 +89,9 @@ JNIEXPORT void * JNICALL JCL_realloc(JNIEnv *env, void *ptr, size_t size)\n   return(ptr);\n }\n \n-JNIEXPORT void JNICALL JCL_free(JNIEnv * env, void * p) {\n+JNIEXPORT void JNICALL JCL_free(JNIEnv * env __attribute__((unused)),\n+\t\t\t\tvoid * p)\n+{\n \tif(p != NULL) {\n \t\tfree(p);\n \t}"}, {"sha": "b0130408c6be139f2658cf2652463ca89af04032", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -177,7 +177,8 @@ Java_gnu_java_awt_peer_gtk_GtkChoicePeer_select\n \n \n static void\n-item_activate (GtkItem *item, struct item_event_hook_info *ie)\n+item_activate (GtkItem *item __attribute__((unused)),\n+\t       struct item_event_hook_info *ie)\n {\n   gdk_threads_leave ();\n   (*gdk_env)->CallVoidMethod (gdk_env, ie->peer_obj,"}, {"sha": "cf197115aa5960bd35097d44741c1555d3771003", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkClipboard.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkClipboard.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkClipboard.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -82,7 +82,7 @@ Java_gnu_java_awt_peer_gtk_GtkClipboard_initNativeState (JNIEnv *env,\n \t\t      GTK_SIGNAL_FUNC (selection_clear), NULL);\n \n   gtk_selection_add_target (clipboard, GDK_SELECTION_PRIMARY, \n-\t\t\t    GDK_TARGET_STRING, GDK_TARGET_STRING);\n+\t\t\t    GDK_TARGET_STRING, 0);\n \n   gtk_signal_connect (GTK_OBJECT(clipboard), \"selection_get\",\n                       GTK_SIGNAL_FUNC (selection_get), NULL);\n@@ -91,8 +91,8 @@ Java_gnu_java_awt_peer_gtk_GtkClipboard_initNativeState (JNIEnv *env,\n }\n \n JNIEXPORT void JNICALL\n-Java_gnu_java_awt_peer_gtk_GtkClipboard_requestStringConversion (JNIEnv *env, \n-\t\t\t\t\t\t\t\t jclass clazz)\n+Java_gnu_java_awt_peer_gtk_GtkClipboard_requestStringConversion\n+  (JNIEnv *env __attribute__((unused)), jclass clazz __attribute__((unused)))\n {\n   gdk_threads_enter ();\n   gtk_selection_convert (clipboard, GDK_SELECTION_PRIMARY, \n@@ -101,8 +101,10 @@ Java_gnu_java_awt_peer_gtk_GtkClipboard_requestStringConversion (JNIEnv *env,\n }\n \n void\n-selection_received (GtkWidget *widget, GtkSelectionData *selection_data, \n-\t\t    guint time, gpointer data)\n+selection_received (GtkWidget *widget __attribute__((unused)),\n+\t\t    GtkSelectionData *selection_data __attribute__((unused)),\n+\t\t    guint time __attribute__((unused)),\n+\t\t    gpointer data __attribute__((unused)))\n {\n   /* Check to see if retrieval succeeded  */\n   if (selection_data->length < 0\n@@ -123,11 +125,11 @@ selection_received (GtkWidget *widget, GtkSelectionData *selection_data,\n }\n \n void\n-selection_get (GtkWidget *widget, \n+selection_get (GtkWidget *widget __attribute__((unused)), \n                GtkSelectionData *selection_data,\n-               guint      info,\n-               guint      time,\n-               gpointer   data)\n+               guint      info __attribute__((unused)),\n+               guint      time __attribute__((unused)),\n+               gpointer   data __attribute__((unused)))\n {\n   jstring jstr;\n   const char *utf;\n@@ -153,8 +155,8 @@ selection_get (GtkWidget *widget,\n }\n \n JNIEXPORT void JNICALL\n-Java_gnu_java_awt_peer_gtk_GtkClipboard_selectionGet (JNIEnv *env, \n-\t\t\t\t\t\t      jclass clazz)\n+Java_gnu_java_awt_peer_gtk_GtkClipboard_selectionGet\n+  (JNIEnv *env, jclass clazz __attribute__((unused)))\n {\n   GdkWindow *owner;\n \n@@ -172,7 +174,8 @@ Java_gnu_java_awt_peer_gtk_GtkClipboard_selectionGet (JNIEnv *env,\n }\n \n gint\n-selection_clear (GtkWidget *widget, GdkEventSelection *event)\n+selection_clear (GtkWidget *widget __attribute__((unused)),\n+\t\t GdkEventSelection *event __attribute__((unused)))\n {\n   (*gdk_env)->CallVoidMethod (gdk_env, cb_obj, selectionClearID);\n "}, {"sha": "0499b27363879877abe5be3aae9f9b9e17c46e5e", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 1, "deletions": 124, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -133,31 +133,6 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_requestFocus\n   gdk_threads_leave ();\n }\n \n-\n-/*\n- * Show a widget (NO LONGER USED)\n- */\n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkComponentPeer_setVisible\n-  (JNIEnv *env, jobject obj, jboolean visible)\n-{\n-  GtkWidget *widget;\n-  void *ptr;\n-\n-  ptr = NSA_GET_PTR (env, obj);\n-\n-  gdk_threads_enter ();\n-  widget = GTK_WIDGET (ptr);\n-\n-  if (visible)\n-    gtk_widget_show (widget);\n-  else\n-    gtk_widget_hide (widget);\n-\n-  gdk_flush ();\n-  gdk_threads_leave ();\n-}\n-\n /*\n  * Find the origin of a widget's window.\n  */\n@@ -225,104 +200,6 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetUsize (JNIEnv *env,\n   gdk_threads_leave ();\n }\n \n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkFixedNew (JNIEnv *env, \n-    jobject obj, jint width, jint height, jboolean visible)\n-{\n-  GtkWidget *layout;\n-\n-  gdk_threads_enter ();\n-  layout = gtk_layout_new (NULL, NULL);\n-  gtk_widget_realize (layout);\n-  connect_awt_hook (env, obj, 1, GTK_LAYOUT (layout)->bin_window);\n-  set_visible (layout, visible);\n-  gdk_threads_leave ();\n-\n-  NSA_SET_PTR (env, obj, layout);\n-}\n-\n-/*\n- * Place a widget on the layout widget. \n- */\n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkFixedPut \n-    (JNIEnv *env, jobject obj, jobject container, jint x, jint y)\n-{\n-  GList *child;\n-  GtkWidget *fix;\n-  void *containerptr=NULL;\n-  void *objptr=NULL;\n-\n-  /* We hawe a container which, if it is a window, will have\n-     this component added to its fixed.  If it is a fixed, we add the\n-     component to it. */\n-  \n-  containerptr=NSA_GET_PTR (env, container);\n-  objptr=NSA_GET_PTR (env, obj);\n-  \n-  gdk_threads_enter ();\n-  if (GTK_IS_WINDOW(GTK_OBJECT(containerptr)))\n-    {\n-      child=gtk_container_children (GTK_CONTAINER(containerptr));\n-      \n-      while (child && !GTK_IS_FIXED(child->data))\n-\t{\n-\t  child=g_list_next(child);\n-\t}\n-      \n-      fix=GTK_WIDGET(child->data);\n-      g_list_free(child);\n-    }\n-  else\n-    if (GTK_IS_SCROLLED_WINDOW(GTK_OBJECT(containerptr)))\n-    {\n-      child=gtk_container_children (GTK_CONTAINER (GTK_BIN(containerptr)->child));\n-      \n-      while (child && !GTK_IS_FIXED(child->data))\n-\t{\n-\t  child=g_list_next(child);\n-\t}\n-      \n-      fix=GTK_WIDGET(child->data);\n-\n-      g_list_free(child);\n-    }\n-  else\n-    {\n-      fix=GTK_WIDGET(containerptr);\n-    }\n-  \n-  gtk_fixed_put(GTK_FIXED(fix),GTK_WIDGET(objptr),x,y);\n-  gtk_widget_realize (GTK_WIDGET (objptr));\n-  gtk_widget_show (GTK_WIDGET (objptr));\n-  \n-  gdk_threads_leave ();\n-}\n-\n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkFixedMove (JNIEnv *env, \n-    jobject obj, jint x, jint y)\n-{\n-  GtkWidget *widget;\n-  void *ptr=NULL;\n-\n-  /* For some reason, ScrolledWindow tries to scroll its contents\n-     by moving them using this function.  Since we want to use GTK's\n-     nice fast scrolling, we try to second guess it here.  This\n-     might cause problems later.  */\n-  \n-  if (x >= 0 && y >= 0) \n-    {\n-      ptr = NSA_GET_PTR (env, obj);\n-      \n-      gdk_threads_enter ();\n-      widget=GTK_WIDGET (ptr);\n-      if (!GTK_IS_WINDOW (widget))\n-\t  gtk_fixed_move (GTK_FIXED (widget->parent), widget, x, y);\n-      gdk_threads_leave ();\n-    }\n-}\n-\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_setNativeBounds\n   (JNIEnv *env, jobject obj, jint x, jint y, jint width, jint height)\n {\n@@ -482,7 +359,7 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_isEnabled\n \n JNIEXPORT jboolean JNICALL \n Java_gnu_java_awt_peer_gtk_GtkComponentPeer_modalHasGrab\n-  (JNIEnv *env, jclass clazz)\n+  (JNIEnv *env __attribute__((unused)), jclass clazz __attribute__((unused)))\n {\n   GtkWidget *widget;\n   jboolean retval;"}, {"sha": "b6a172d7ab885bdb64950cdd9b5218962ccf2f6f", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -1142,6 +1142,7 @@ awt_event_handler (GdkEvent *event)\n \t\t\t\t      JNI_FALSE);\n \t  break;\n         default:\n+\t  break;\n \t}\n       g_free (obj_ptr);\n     }"}, {"sha": "f4e9c3599b39501c844f8bf3193e44e33f2732a7", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkImagePainter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkImagePainter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkImagePainter.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -44,9 +44,10 @@ exception statement from your version. */\n   (((w) << 24) | (((w) & 0xff00) << 8) | (((w) >> 8) & 0xff00) | ((w) >> 24))\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImagePainter_drawPixels\n-(JNIEnv *env, jobject obj, jobject gc_obj, jint bg_red, jint bg_green, \n- jint bg_blue, jint x, jint y, jint width, jint height, jintArray jpixels, \n- jint offset, jint scansize, jdoubleArray jaffine)\n+(JNIEnv *env, jobject obj __attribute__((unused)), jobject gc_obj,\n+ jint bg_red, jint bg_green, jint bg_blue, jint x, jint y, jint width,\n+ jint height, jintArray jpixels, jint offset, jint scansize,\n+ jdoubleArray jaffine)\n {\n   struct graphics *g;\n   jint *pixels, *elems;\n@@ -114,8 +115,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImagePainter_drawPixels\n       ArtAlphaGamma *alphagamma = NULL;\n       art_u8 *dst;\n       int new_width, new_height;\n-      int i;\n-      \n+\n       affine = (*env)->GetDoubleArrayElements (env, jaffine, NULL);\n \n       new_width = abs (width * affine[0]);"}, {"sha": "944bc2139451f50856b0b41f8af803e77011ff22", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -322,7 +322,9 @@ Java_gnu_java_awt_peer_gtk_GtkListPeer_setMultipleMode\n }\n \n static void\n-item_select (GtkCList *list, int row, int col, GdkEventButton *event, \n+item_select (GtkCList *list __attribute__((unused)),\n+\t     int row, int col __attribute__((unused)),\n+\t     GdkEventButton *event __attribute__((unused)), \n \t     jobject *peer_obj)\n {\n   (*gdk_env)->CallVoidMethod (gdk_env, *peer_obj,\n@@ -332,8 +334,11 @@ item_select (GtkCList *list, int row, int col, GdkEventButton *event,\n }\n \n static void\n-item_unselect (GtkCList *list, int row, int col, GdkEventButton *event, \n-\t     jobject *peer_obj)\n+item_unselect (GtkCList *list __attribute__((unused)),\n+\t       int row,\n+\t       int col __attribute__((unused)),\n+\t       GdkEventButton *event __attribute__((unused)),\n+\t       jobject *peer_obj)\n {\n   (*gdk_env)->CallVoidMethod (gdk_env, *peer_obj,\n \t\t\t      postListItemEventID,"}, {"sha": "d936a598734cc1600e064d27f66901c77412857b", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -185,7 +185,8 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n  * Run gtk_main and block.\n  */ \n JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkMain (JNIEnv *env, jobject obj)\n+Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkMain\n+  (JNIEnv *env __attribute__((unused)), jobject obj __attribute__((unused)))\n {\n   gdk_threads_enter ();\n   gtk_main ();"}, {"sha": "10c9e4cab7458a63afdccdb31b15b041063b622a", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuItemPeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -94,14 +94,8 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkMenuItemPeer_setLabel\n   (*env)->ReleaseStringUTFChars (env, label, str);\n }\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkMenuItemPeer_setEnabled\n-  (JNIEnv *env, jobject obj, jboolean enabled)\n-{\n-/*    Java_gnu_java_awt_peer_gtk_GtkComponentPeer_setEnabled (env, obj, enabled); */\n-}\n-\n static void\n-item_activate (GtkMenuItem *item, jobject *peer_obj)\n+item_activate (GtkMenuItem *item __attribute__((unused)), jobject *peer_obj)\n {\n   (*gdk_env)->CallVoidMethod (gdk_env, *peer_obj,\n \t\t\t      postMenuActionEventID);"}, {"sha": "e8cd78cb11da8c0944aecf6b9919e97d54b601fd", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMenuPeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -40,13 +40,14 @@ exception statement from your version. */\n #include \"gnu_java_awt_peer_gtk_GtkMenuPeer.h\"\n \n static void\n-accel_attach (GtkMenuItem *menu_item, gpointer *user_data)\n+accel_attach (GtkMenuItem *menu_item,\n+\t      gpointer *user_data __attribute__((unused)))\n {\n   GtkAccelGroup *accel;\n \n   accel = gtk_menu_get_accel_group (GTK_MENU (menu_item->submenu));\n-  gtk_accel_group_attach (accel, \n-    GTK_OBJECT (gtk_widget_get_toplevel (GTK_WIDGET(menu_item))));\n+  _gtk_accel_group_attach (accel, \n+    G_OBJECT (gtk_widget_get_toplevel (GTK_WIDGET(menu_item))));\n }\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkMenuPeer_setupAccelGroup"}, {"sha": "5d389895456892f506b0c71dbe18d46d26ff3fd5", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.c", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPanelPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPanelPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPanelPeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -60,38 +60,6 @@ struct _GtkLayoutChild {\n   gint y;\n };\n \n-static\n-void sr (GtkWidget *widget, GtkRequisition *requisition, gpointer user_data)\n-{\n-  GtkLayout *layout;\n-  GtkLayoutChild *child;\n-  GList *children;\n-\n-  layout = GTK_LAYOUT (widget);\n-  requisition->width = GTK_WIDGET (widget)->allocation.width;\n-  requisition->height = GTK_WIDGET (widget)->allocation.height;\n-\n-  children = layout->children;\n-  while (children)\n-    {\n-      child = children->data;\n-      children = children->next;\n-\n-      if (GTK_WIDGET_VISIBLE (child->widget))\n-\t{\n-          requisition->height = MAX (requisition->height,\n-                                     child->y +\n-                                     child->widget->allocation.height);\n-          requisition->width = MAX (requisition->width,\n-                                    child->x +\n-                                    child->widget->allocation.width);\n-\t}\n-    }\n-\n-  requisition->height += GTK_CONTAINER (layout)->border_width * 2;\n-  requisition->width += GTK_CONTAINER (layout)->border_width * 2;\n-}\n-\n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkPanelPeer_connectHooks\n   (JNIEnv *env, jobject obj)"}, {"sha": "c5a223037e079c86b716212a5971a0f72bdd6074", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPopupMenuPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPopupMenuPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkPopupMenuPeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -46,12 +46,16 @@ struct pos\n };\n \n void \n-menu_pos (GtkMenu *menu, gint *x, gint *y, gpointer user_data)\n+menu_pos (GtkMenu *menu __attribute__((unused)),\n+\t  gint *x, gint *y,\n+\t  gboolean *push_in,\n+\t  gpointer user_data)\n {\n   struct pos *p = (struct pos *) user_data;\n \n   *x = p->x;\n   *y = p->y;\n+  *push_in = TRUE;\n }\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkPopupMenuPeer_show\n@@ -87,7 +91,7 @@ Java_gnu_java_awt_peer_gtk_GtkPopupMenuPeer_setupAccelGroup\n   gdk_threads_enter ();\n   menu = GTK_MENU (GTK_MENU_ITEM (ptr1)->submenu);\n   gtk_menu_set_accel_group (menu, gtk_accel_group_new ());\n-  gtk_accel_group_attach (gtk_menu_get_accel_group (menu),\n-\t\t\t  GTK_OBJECT (gtk_widget_get_toplevel (ptr2)));\n+  _gtk_accel_group_attach (gtk_menu_get_accel_group (menu),\n+\t\t\t   G_OBJECT (gtk_widget_get_toplevel (ptr2)));\n   gdk_threads_leave ();\n }"}, {"sha": "08ae7e5cf63f48ec7825f7564783181aa2df8347", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollPanePeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollPanePeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollPanePeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -44,7 +44,6 @@ Java_gnu_java_awt_peer_gtk_GtkScrollPanePeer_create\n   (JNIEnv *env, jobject obj)\n {\n   gpointer window;\n-  GtkWidget *layout;\n \n   gdk_threads_enter ();\n   window = gtk_scrolled_window_new (NULL, NULL);"}, {"sha": "95e114ebd10a3944979259a707fcd9237cb77834", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -450,7 +450,7 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_setText\n }\n \n static void\n-textcomponent_commit_cb (GtkIMContext *context,\n+textcomponent_commit_cb (GtkIMContext *context __attribute__((unused)),\n                          const gchar  *str,\n                          jobject peer)\n {\n@@ -472,7 +472,7 @@ textcomponent_commit_cb (GtkIMContext *context,\n }\n \n static void\n-textcomponent_changed_cb (GtkEditable *editable,\n+textcomponent_changed_cb (GtkEditable *editable __attribute__((unused)),\n \t\t\t  jobject peer)\n {\n   (*gdk_env)->CallVoidMethod (gdk_env, peer, postTextEventID);"}, {"sha": "37c36906277aa1184d253456d9b679ad7700d47e", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkToolkit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkToolkit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkToolkit.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -40,15 +40,17 @@ exception statement from your version. */\n #include \"gnu_java_awt_peer_gtk_GtkToolkit.h\"\n \n JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkToolkit_beep (JNIEnv *env, jobject obj)\n+Java_gnu_java_awt_peer_gtk_GtkToolkit_beep\n+  (JNIEnv *env __attribute__((unused)), jobject obj __attribute__((unused)))\n {\n   gdk_threads_enter ();\n   gdk_beep ();\n   gdk_threads_leave ();\n }\n \n JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkToolkit_sync (JNIEnv *env, jobject obj)\n+Java_gnu_java_awt_peer_gtk_GtkToolkit_sync\n+  (JNIEnv *env __attribute__((unused)), jobject obj __attribute__((unused)))\n {\n   gdk_threads_enter ();\n   gdk_flush ();\n@@ -57,7 +59,8 @@ Java_gnu_java_awt_peer_gtk_GtkToolkit_sync (JNIEnv *env, jobject obj)\n \n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkToolkit_getScreenSizeDimensions\n-(JNIEnv *env, jobject obj, jintArray jdims)\n+  (JNIEnv *env __attribute__((unused)), jobject obj __attribute__((unused)),\n+   jintArray jdims)\n {\n   jint *dims = (*env)->GetIntArrayElements (env, jdims, 0);  \n \n@@ -72,8 +75,8 @@ Java_gnu_java_awt_peer_gtk_GtkToolkit_getScreenSizeDimensions\n }\n \n JNIEXPORT jint JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkToolkit_getScreenResolution (JNIEnv *env, \n-\t\t\t\t\t\t\t   jobject obj)\n+Java_gnu_java_awt_peer_gtk_GtkToolkit_getScreenResolution\n+  (JNIEnv *env __attribute__((unused)), jobject obj __attribute__((unused)))\n {\n   jint res;\n "}, {"sha": "0674b3ac36c784f02c2b4f228a8ccf4ac3d4e312", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -67,7 +67,7 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create\n      window will snap to its default requisition of 0x0.  If we omit\n      this call, Frames and Dialogs shrink to degenerate 1x1 windows\n      when their resizable property changes. */\n-  gtk_widget_set_size_request (window, width, height);\n+  gtk_widget_set_size_request (window_widget, width, height);\n \n   /* Keep this window in front of its parent, if it has one. */\n   if (parent)\n@@ -235,8 +235,8 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_toFront (JNIEnv *env,\n \n JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setBoundsCallback\n-  (JNIEnv *env, jobject obj, jobject window,\n-   jint x, jint y, jint width, jint height)\n+  (JNIEnv *env __attribute__((unused)), jobject obj __attribute__((unused)),\n+   jobject window, jint x, jint y, jint width, jint height)\n {\n   /* Circumvent package-private access to call Window's\n      setBoundsCallback method. */"}, {"sha": "a762b4e56edf87018b910ecc0bc73a1f1948de6f", "filename": "libjava/jni/gtk-peer/gthread-jni.c", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -189,7 +189,7 @@ static GMutex *g_mutex_new_jni_impl (void) {\n }\n \n /* Lock a mutex. */\n-static void g_mutex_lock_jni_impl (GMutex *mutex) {\n+static void g_mutex_lock_jni_impl (GMutex *mutex __attribute__((unused))) {\n   JNIEnv *gdk_env;\n \n   (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n@@ -201,7 +201,9 @@ static void g_mutex_lock_jni_impl (GMutex *mutex) {\n  * do not provide such an interface.  To be at least minimally correct,\n  * pretend we tried and failed.\n  */\n-static gboolean g_mutex_trylock_jni_impl (GMutex *mutex) {\n+static gboolean g_mutex_trylock_jni_impl\n+  (GMutex *mutex __attribute__((unused)))\n+{\n   // Shall we implement this in a JikesRVM-specific way under a flag?\n   return FALSE;\n }\n@@ -285,7 +287,9 @@ static void g_cond_broadcast_jni_impl (GCond *cond) {\n /*  Wait on a condition variable.  For us, this simply means call\n  * Object.wait.\n  */\n-static void g_cond_wait_jni_impl (GCond *cond, GMutex *mutex) {\n+static void g_cond_wait_jni_impl\n+  (GCond *cond, GMutex *mutex __attribute__((unused)))\n+{\n   jclass lcl_class;\n   jmethodID wait_mth;\n   JNIEnv *gdk_env;\n@@ -313,7 +317,10 @@ static void g_cond_wait_jni_impl (GCond *cond, GMutex *mutex) {\n  * so, that is Java-speak for wait timing out.\n  */\n static gboolean\n-g_cond_timed_wait_jni_impl (GCond *cond, GMutex *mutex, GTimeVal *end_time) {\n+g_cond_timed_wait_jni_impl\n+  (GCond *cond, GMutex *mutex __attribute__((unused)),\n+   GTimeVal *end_time)\n+{\n   jclass lcl_class;\n   jmethodID wait_mth;\n   JNIEnv *gdk_env;\n@@ -364,7 +371,9 @@ static void g_cond_free_jni_impl (GCond *cond) {\n /*  Create a new thread-local key.  We use java.lang.ThreadLocal objects\n  * for this.\n  */\n-static GPrivate *g_private_new_jni_impl (GDestroyNotify notify) {\n+static GPrivate *g_private_new_jni_impl\n+  (GDestroyNotify notify __attribute__((unused)))\n+{\n   jclass lcl_class;\n   jobject *local;\n   JNIEnv *gdk_env;\n@@ -474,7 +483,14 @@ GThreadFunctions g_thread_jni_functions =\n   g_cond_free_jni_impl,       /* cond_free */\n   g_private_new_jni_impl,     /* private_new */\n   g_private_get_jni_impl,     /* private_get */\n-  g_private_set_jni_impl      /* private_set */\n+  g_private_set_jni_impl,     /* private_set */\n+  NULL,\n+  NULL,\n+  NULL,\n+  NULL,\n+  NULL,\n+  NULL,\n+  NULL\n };\n \n /* ??? */"}, {"sha": "5f9d215f1d5904b5589405b34b8e43f590328550", "filename": "libjava/jni/gtk-peer/gtkpeer.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce7a72c80da847d7e279369082063db2b06641a0/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h?ref=ce7a72c80da847d7e279369082063db2b06641a0", "patch": "@@ -54,6 +54,10 @@ exception statement from your version. */\n #ifndef __GTKPEER_H__\n #define __GTKPEER_H__\n \n+#ifndef __GNUC__\n+#define __attribute__(x) /* nothing */\n+#endif\n+\n #ifdef JVM_SUN\n \n extern struct state_table *native_state_table;"}]}