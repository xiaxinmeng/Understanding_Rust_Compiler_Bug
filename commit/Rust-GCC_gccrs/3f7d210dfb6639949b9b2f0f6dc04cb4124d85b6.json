{"sha": "3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y3ZDIxMGRmYjY2Mzk5NDliOWIyZjBmNmRjMDRjYjQxMjRkODViNg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2004-07-16T22:51:48Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2004-07-16T22:51:48Z"}, "message": "tree-ssa-pre.c (insert_aux): Break out if we hit a critical edge.\n\n2004-07-16  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-pre.c (insert_aux): Break out if we hit\n\ta critical edge.\n\nFrom-SVN: r84841", "tree": {"sha": "17780a64a3a502b08cf76f16cfb78be263315d05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17780a64a3a502b08cf76f16cfb78be263315d05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6809cbf90dffd5a6fccf96d67c5f520e1a162eb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6809cbf90dffd5a6fccf96d67c5f520e1a162eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6809cbf90dffd5a6fccf96d67c5f520e1a162eb6"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "a89927f3f143e634e4470f5d496b166c06a519a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6", "patch": "@@ -1,3 +1,8 @@\n+2004-07-16  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-pre.c (insert_aux): Break out if we hit\n+\ta critical edge.\n+\n 2004-07-16  Richard Henderson  <rth@redhat.com>\n \n \t* basic-block.h (remove_fake_exit_edges): Declare."}, {"sha": "a6943980229ae6a52ba3b9fe9867821ac20c29ac", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=3f7d210dfb6639949b9b2f0f6dc04cb4124d85b6", "patch": "@@ -1457,6 +1457,15 @@ insert_aux (basic_block block)\n \t\t\t{\n \t\t\t  tree vprime;\n \t\t\t  tree edoubleprime;\n+\n+\t\t\t  /* This can happen in the very weird case\n+\t\t\t     that our fake infinite loop edges have caused a\n+\t\t\t     critical edge to appear.  */\n+\t\t\t  if (EDGE_CRITICAL_P (pred))\n+\t\t\t    {\n+\t\t\t      cant_insert = true;\n+\t\t\t      break;\n+\t\t\t    }\n \t\t\t  bprime = pred->src;\n \t\t\t  eprime = phi_translate (node->expr,\n \t\t\t\t\t\t  ANTIC_IN (block),"}]}