{"sha": "434eba35c00fe13a817a4f799e8b6b1fcb1f8065", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM0ZWJhMzVjMDBmZTEzYTgxN2E0Zjc5OWU4YjZiMWZjYjFmODA2NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-01-04T08:05:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-01-04T08:05:29Z"}, "message": "re PR debug/25562 (cannot debug VLA local)\n\n\tPR debug/25562\n\t* function.c (instantiate_expr): New function.\n\t(instantiate_decls_1, instantiate_decls): If DECL_HAS_VALUE_EXPR_P,\n\twalk its DECL_VALUE_EXPR with instantiate_expr.\n\n\t* dwarf2out.c (loc_descriptor_from_tree_1): Don't add\n\tDW_OP_deref{,_size} if address isn't going to be added.\n\nFrom-SVN: r109315", "tree": {"sha": "b1683e1d380b9d2469d81bb04642c70217286a89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1683e1d380b9d2469d81bb04642c70217286a89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/434eba35c00fe13a817a4f799e8b6b1fcb1f8065", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/434eba35c00fe13a817a4f799e8b6b1fcb1f8065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/434eba35c00fe13a817a4f799e8b6b1fcb1f8065", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/434eba35c00fe13a817a4f799e8b6b1fcb1f8065/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c3b204ab89bdf9fa42fc0e8b8f3c710f03d35a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3b204ab89bdf9fa42fc0e8b8f3c710f03d35a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3b204ab89bdf9fa42fc0e8b8f3c710f03d35a4"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "c4f8b626fe21ff959f7c6098de02276e29d1e05e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434eba35c00fe13a817a4f799e8b6b1fcb1f8065/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434eba35c00fe13a817a4f799e8b6b1fcb1f8065/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=434eba35c00fe13a817a4f799e8b6b1fcb1f8065", "patch": "@@ -1,3 +1,13 @@\n+2006-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/25562\n+\t* function.c (instantiate_expr): New function.\n+\t(instantiate_decls_1, instantiate_decls): If DECL_HAS_VALUE_EXPR_P,\n+\twalk its DECL_VALUE_EXPR with instantiate_expr.\n+\n+\t* dwarf2out.c (loc_descriptor_from_tree_1): Don't add\n+\tDW_OP_deref{,_size} if address isn't going to be added.\n+\n 2006-01-04  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/fp-bit.h: Use top-of-file comment from libgcc2.c."}, {"sha": "572bfc9a5bee7e9187e052fc38485f9193f09dac", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434eba35c00fe13a817a4f799e8b6b1fcb1f8065/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434eba35c00fe13a817a4f799e8b6b1fcb1f8065/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=434eba35c00fe13a817a4f799e8b6b1fcb1f8065", "patch": "@@ -9420,7 +9420,7 @@ loc_descriptor_from_tree_1 (tree loc, int want_address)\n     return 0;\n \n   /* If we've got an address and don't want one, dereference.  */\n-  if (!want_address && have_address)\n+  if (!want_address && have_address && ret)\n     {\n       HOST_WIDE_INT size = int_size_in_bytes (TREE_TYPE (loc));\n "}, {"sha": "f5da84c8241288fde9672f36934e84af504d49fe", "filename": "gcc/function.c", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434eba35c00fe13a817a4f799e8b6b1fcb1f8065/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434eba35c00fe13a817a4f799e8b6b1fcb1f8065/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=434eba35c00fe13a817a4f799e8b6b1fcb1f8065", "patch": "@@ -1590,6 +1590,22 @@ instantiate_decl (rtx x)\n   for_each_rtx (&XEXP (x, 0), instantiate_virtual_regs_in_rtx, NULL);\n }\n \n+/* Helper for instantiate_decls called via walk_tree: Process all decls\n+   in the given DECL_VALUE_EXPR.  */\n+\n+static tree\n+instantiate_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n+{\n+  tree t = *tp;\n+  if (! EXPR_P (t))\n+    {\n+      *walk_subtrees = 0;\n+      if (DECL_P (t) && DECL_RTL_SET_P (t))\n+\tinstantiate_decl (DECL_RTL (t));\n+    }\n+  return NULL;\n+}\n+\n /* Subroutine of instantiate_decls: Process all decls in the given\n    BLOCK node and all its subblocks.  */\n \n@@ -1599,8 +1615,15 @@ instantiate_decls_1 (tree let)\n   tree t;\n \n   for (t = BLOCK_VARS (let); t; t = TREE_CHAIN (t))\n-    if (DECL_RTL_SET_P (t))\n-      instantiate_decl (DECL_RTL (t));\n+    {\n+      if (DECL_RTL_SET_P (t))\n+\tinstantiate_decl (DECL_RTL (t));\n+      if (TREE_CODE (t) == VAR_DECL && DECL_HAS_VALUE_EXPR_P (t))\n+\t{\n+\t  tree v = DECL_VALUE_EXPR (t);\n+\t  walk_tree (&v, instantiate_expr, NULL, NULL);\n+\t}\n+    }\n \n   /* Process all subblocks.  */\n   for (t = BLOCK_SUBBLOCKS (let); t; t = TREE_CHAIN (t))\n@@ -1620,6 +1643,11 @@ instantiate_decls (tree fndecl)\n     {\n       instantiate_decl (DECL_RTL (decl));\n       instantiate_decl (DECL_INCOMING_RTL (decl));\n+      if (DECL_HAS_VALUE_EXPR_P (decl))\n+\t{\n+\t  tree v = DECL_VALUE_EXPR (decl);\n+\t  walk_tree (&v, instantiate_expr, NULL, NULL);\n+\t}\n     }\n \n   /* Now process all variables defined in the function or its subblocks.  */"}]}