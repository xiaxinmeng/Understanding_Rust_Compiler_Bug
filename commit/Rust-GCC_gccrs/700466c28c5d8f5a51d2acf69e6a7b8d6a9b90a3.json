{"sha": "700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAwNDY2YzI4YzVkOGY1YTUxZDJhY2Y2OWU2YTdiOGQ2YTliOTBhMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-02-07T15:44:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-02-07T15:44:12Z"}, "message": "pt.c (maybe_process_partial_specialization): Complain about specialization in wrong namespace.\n\n\t* pt.c (maybe_process_partial_specialization): Complain about\n\tspecialization in wrong namespace.\n\t* tree.c (decl_namespace_context): New fn.\ng++.pt/explicit73.C\n\t* decl2.c (arg_assoc_type): Handle TEMPLATE_TEMPLATE_PARM.\n\t* pt.c (coerce_template_template_parms): Handle nested\n\ttemplate template parameters.\ng++.pt/nttp[12].C\n\nFrom-SVN: r25072", "tree": {"sha": "bbc39d5158cb55376023d1e1dafbfdeb94061479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbc39d5158cb55376023d1e1dafbfdeb94061479"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/comments", "author": null, "committer": null, "parents": [{"sha": "561cb39b358c410673d0f8ffb1f886094c1e36a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561cb39b358c410673d0f8ffb1f886094c1e36a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/561cb39b358c410673d0f8ffb1f886094c1e36a8"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "975769f4105a000e02eafc8e58d672a85c08e25b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "patch": "@@ -1,3 +1,15 @@\n+1999-02-07  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (maybe_process_partial_specialization): Complain about\n+\tspecialization in wrong namespace.\n+\t* tree.c (decl_namespace_context): New fn.\n+\n+1999-02-06  Kriang Lerdsuwanakij <lerdsuwa@scf-fs.usc.edu>\n+\n+\t* decl2.c (arg_assoc_type): Handle TEMPLATE_TEMPLATE_PARM.\n+\t* pt.c (coerce_template_template_parms): Handle nested \n+\ttemplate template parameters.\n+\n Sat Feb  6 18:08:40 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* typeck2.c: Update email addrsses."}, {"sha": "6bed0bcded3c2b6bcc2823934ab9259ce01e6b14", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "patch": "@@ -3288,6 +3288,7 @@ extern tree break_out_target_exprs\t\tPROTO((tree));\n extern tree get_type_decl\t\t\tPROTO((tree));\n extern tree vec_binfo_member\t\t\tPROTO((tree, tree));\n extern tree hack_decl_function_context \t\tPROTO((tree));\n+extern tree decl_namespace_context \t\tPROTO((tree));\n extern tree lvalue_type\t\t\t\tPROTO((tree));\n extern tree error_type\t\t\t\tPROTO((tree));\n extern tree make_temp_vec\t\t\tPROTO((int));"}, {"sha": "87a257787489b0ed7a9191508cab5ad67d4eb098", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "patch": "@@ -4483,6 +4483,7 @@ arg_assoc_type (k, type)\n       /* Associate the return type. */\n       return arg_assoc_type (k, TREE_TYPE (type));\n     case TEMPLATE_TYPE_PARM:\n+    case TEMPLATE_TEMPLATE_PARM:\n       return 0;\n     case LANG_TYPE:\n       if (type == unknown_type_node)"}, {"sha": "72cf9d0b60fe8b5fb6c03fd8176f4ef0dcc70806", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "patch": "@@ -672,6 +672,13 @@ maybe_process_partial_specialization (type)\n       if (CLASSTYPE_IMPLICIT_INSTANTIATION (type)\n \t  && TYPE_SIZE (type) == NULL_TREE)\n \t{\n+\t  if (current_namespace\n+\t      != decl_namespace_context (CLASSTYPE_TI_TEMPLATE (type)))\n+\t    {\n+\t      cp_pedwarn (\"specializing `%#T' in different namespace\", type);\n+\t      cp_pedwarn_at (\"  from definition of `%#D'\",\n+\t\t\t     CLASSTYPE_TI_TEMPLATE (type));\n+\t    }\n \t  SET_CLASSTYPE_TEMPLATE_SPECIALIZATION (type);\n \t  if (processing_template_decl)\n \t    push_template_decl (TYPE_MAIN_DECL (type));\n@@ -2804,8 +2811,15 @@ coerce_template_template_parms (parm_parms, arg_parms, in_decl, outer_args)\n \t  /* We encounter instantiations of templates like\n \t       template <template <template <class> class> class TT>\n \t       class C;  */\n-\t  sorry (\"nested template template parameter\");\n-\t  return 0;\n+\t  {\n+\t    tree parmparm = DECL_INNERMOST_TEMPLATE_PARMS (parm);\n+\t    tree argparm = DECL_INNERMOST_TEMPLATE_PARMS (arg);\n+\n+\t    if (!coerce_template_template_parms (parmparm, argparm, \n+\t\t\t\t\t         in_decl, outer_args))\n+\t      return 0;\n+\t  }\n+\t  break;\n \n \tcase PARM_DECL:\n \t  /* The tsubst call is used to handle cases such as"}, {"sha": "bc5a18eba7d40bf4f73fca794037040b57c30e0a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=700466c28c5d8f5a51d2acf69e6a7b8d6a9b90a3", "patch": "@@ -2384,6 +2384,24 @@ hack_decl_function_context (decl)\n   return decl_function_context (decl);\n }\n \n+/* Returns the namespace that contains DECL, whether directly or\n+   indirectly.  */\n+\n+tree\n+decl_namespace_context (decl)\n+     tree decl;\n+{\n+  while (1)\n+    {\n+      if (TREE_CODE (decl) == NAMESPACE_DECL)\n+\treturn decl;\n+      else if (TYPE_P (decl))\n+\tdecl = CP_DECL_CONTEXT (TYPE_MAIN_DECL (decl));\n+      else\n+\tdecl = CP_DECL_CONTEXT (decl);\n+    }\n+}\n+\n /* Return truthvalue of whether T1 is the same tree structure as T2.\n    Return 1 if they are the same.\n    Return 0 if they are understandably different."}]}