{"sha": "0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNkYzA0ZThkNWI2MWQ0ZGU3NzBiNDQ3NGE2YWEwMzUxZWQ1Yjc0YQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb.gcc@gmail.com", "date": "2008-05-30T18:21:31Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2008-05-30T18:21:31Z"}, "message": "rs6000.c (rs6000_legitimize_address, [...]): Make sure an rtx is a SYMBOL_REF before calling get_pool_constant.\n\n2008-05-30  Steven Bosscher  <stevenb.gcc@gmail.com>\n\n        * config/rs6000/rs6000.c (rs6000_legitimize_address,\n        rs6000_legitimize_reload_address, rs6000_emit_move): Make sure an\n        rtx is a SYMBOL_REF before calling get_pool_constant.\n\nFrom-SVN: r136216", "tree": {"sha": "84f15d801604f31632fd4cdd31558c46ab3d302c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84f15d801604f31632fd4cdd31558c46ab3d302c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a/comments", "author": null, "committer": null, "parents": [{"sha": "3f6383d38bc996a01dfa086a42b83c452386fa00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6383d38bc996a01dfa086a42b83c452386fa00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f6383d38bc996a01dfa086a42b83c452386fa00"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "1a76fd3e7beb8b2eb2219f90f8bf3b452f665066", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a", "patch": "@@ -1,3 +1,9 @@\n+2008-05-30  Steven Bosscher  <stevenb.gcc@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_address,\n+\trs6000_legitimize_reload_address, rs6000_emit_move): Make sure an\n+\trtx is a SYMBOL_REF before calling get_pool_constant.\n+\n 2008-05-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (fold_unary) <CASE_CONVERT>: Add ??? comment."}, {"sha": "f91225fe1c8ca73d2f598f733b646a8993e99cb8", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0cdc04e8d5b61d4de770b4474a6aa0351ed5b74a", "patch": "@@ -3746,6 +3746,7 @@ rs6000_legitimize_address (rtx x, rtx oldx ATTRIBUTE_UNUSED,\n       return gen_rtx_LO_SUM (Pmode, reg, x);\n     }\n   else if (TARGET_TOC\n+\t   && GET_CODE (x) == SYMBOL_REF\n \t   && constant_pool_expr_p (x)\n \t   && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (get_pool_constant (x), Pmode))\n     {\n@@ -4191,6 +4192,7 @@ rs6000_legitimize_reload_address (rtx x, enum machine_mode mode,\n     }\n \n   if (TARGET_TOC\n+      && GET_CODE (x) == SYMBOL_REF\n       && constant_pool_expr_p (x)\n       && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (get_pool_constant (x), mode))\n     {\n@@ -5041,6 +5043,7 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n \t  operands[1] = force_const_mem (mode, operands[1]);\n \n \t  if (TARGET_TOC\n+\t      && GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF\n \t      && constant_pool_expr_p (XEXP (operands[1], 0))\n \t      && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (\n \t\t\tget_pool_constant (XEXP (operands[1], 0)),\n@@ -12359,6 +12362,7 @@ print_operand_address (FILE *file, rtx x)\n \n \t  minus = XEXP (contains_minus, 0);\n \t  symref = XEXP (minus, 0);\n+\t  gcc_assert (GET_CODE (XEXP (minus, 1)) == SYMBOL_REF);\n \t  XEXP (contains_minus, 0) = symref;\n \t  if (TARGET_ELF)\n \t    {"}]}