{"sha": "a6ec530cdf84df101a4cefa987f74546f4c8de0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZlYzUzMGNkZjg0ZGYxMDFhNGNlZmE5ODdmNzQ1NDZmNGM4ZGUwZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T17:23:51Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T17:23:51Z"}, "message": "(adddi3, subdi3, negdi2): Add constraints so output reg does not\noverlap one reg with one of the inputs.\n\nFrom-SVN: r10325", "tree": {"sha": "4e5577189d07dba07be296c17e7ff17e540b816d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e5577189d07dba07be296c17e7ff17e540b816d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6ec530cdf84df101a4cefa987f74546f4c8de0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ec530cdf84df101a4cefa987f74546f4c8de0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ec530cdf84df101a4cefa987f74546f4c8de0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ec530cdf84df101a4cefa987f74546f4c8de0d/comments", "author": null, "committer": null, "parents": [{"sha": "ac1bc2ca68418a939c82f5e4d6fc217a64731e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1bc2ca68418a939c82f5e4d6fc217a64731e9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac1bc2ca68418a939c82f5e4d6fc217a64731e9c"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "a0b56fb433bc3036120d06141c60332ee7e79448", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ec530cdf84df101a4cefa987f74546f4c8de0d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ec530cdf84df101a4cefa987f74546f4c8de0d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=a6ec530cdf84df101a4cefa987f74546f4c8de0d", "patch": "@@ -3510,7 +3510,11 @@\n   [(set_attr \"type\" \"fp\")])\n \f\n ;; Define the DImode operations that can be done in a small number\n-;; of instructions.\n+;; of instructions.  The & constraints are to prevent the register\n+;; allocator from allocating registers that overlap with the inputs\n+;; (for example, having an input in 7,8 and an output in 6,7).  We\n+;; also allow for the the output being the same as one of the inputs.\n+\n (define_expand \"adddi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n@@ -3524,19 +3528,21 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t (match_operand:DI 2 \"reg_or_short_operand\" \"r,I\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,&r,r,r\")\n+\t(plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r,0,0\")\n+\t\t (match_operand:DI 2 \"reg_or_short_operand\" \"r,I,r,I\")))]\n   \"TARGET_POWER && ! TARGET_POWERPC64\"\n   \"@\n+   {a|addc} %L0,%L1,%L2\\;{ae|adde} %0,%1,%2\n+   {ai|addic} %L0,%L1,%2\\;{a%G2e|add%G2e} %0,%1\n    {a|addc} %L0,%L1,%L2\\;{ae|adde} %0,%1,%2\n    {ai|addic} %L0,%L1,%2\\;{a%G2e|add%G2e} %0,%1\"\n   [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r\")\n-\t\t (match_operand:DI 2 \"gpc_reg_operand\" \"r\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,r\")\n+\t(plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,0\")\n+\t\t (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\")))]\n   \"! TARGET_POWER && ! TARGET_POWERPC64\"\n   \"*\n {\n@@ -3547,9 +3553,9 @@\n   [(set_attr \"length\" \"8\")])\n \n (define_expand \"subdi3\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(minus:DI (match_operand:DI 1 \"reg_or_short_operand\" \"r,I\")\n-\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n+\t(minus:DI (match_operand:DI 1 \"reg_or_short_operand\" \"\")\n+\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -3559,19 +3565,21 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(minus:DI (match_operand:DI 1 \"reg_or_short_operand\" \"r,I\")\n-\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,&r,r,r\")\n+\t(minus:DI (match_operand:DI 1 \"reg_or_short_operand\" \"r,I,0,r\")\n+\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r,r,0\")))]\n   \"TARGET_POWER && ! TARGET_POWERPC64\"\n   \"@\n+   {sf|subfc} %L0,%L2,%L1\\;{sfe|subfe} %0,%2,%1\n+   {sfi|subfic} %L0,%L2,%1\\;{sf%G1e|subf%G1e} %0,%2\n    {sf|subfc} %L0,%L2,%L1\\;{sfe|subfe} %0,%2,%1\n    {sfi|subfic} %L0,%L2,%1\\;{sf%G1e|subf%G1e} %0,%2\"\n   [(set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(minus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n-\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,r,r\")\n+\t(minus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,0,r\")\n+\t\t  (match_operand:DI 2 \"gpc_reg_operand\" \"r,r,0\")))]\n   \"! TARGET_POWER && ! TARGET_POWERPC64\"\n   \"*\n {\n@@ -3588,8 +3596,8 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(neg:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,r\")\n+\t(neg:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,0\")))]\n   \"! TARGET_POWERPC64\"\n   \"*\n {"}]}