{"sha": "eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4N2M3YzQ4OTBiODdkNWYyMjhiOTI2MWMyZTNiM2E1YjgxYWNkNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-08-13T12:39:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-08-13T12:39:54Z"}, "message": "re PR c/53968 (integer undefined behaviors in GCC)\n\n\tPR c/53968\n\t* tree.c (integer_pow2p): Avoid undefined signed overflows.\n\t* simplify-rtx.c (neg_const_int): Likewise.\n\t* expr.c (fixup_args_size_notes): Likewise.\n\t* stor-layout.c (set_min_and_max_values_for_integral_type): Likewise.\n\t* double-int.c (mul_double_wide_with_sign): Likewise.\n\t(double_int_mask): Likewise.\n\t* tree-ssa-loop-ivopts.c (get_address_cost): Likewise.\n\nFrom-SVN: r190342", "tree": {"sha": "ad4832638401fe5e5c7f1ec4cd85012761658f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad4832638401fe5e5c7f1ec4cd85012761658f24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a9573cc7b1d527e61f4ef7900c0a1c21203e24a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9573cc7b1d527e61f4ef7900c0a1c21203e24a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9573cc7b1d527e61f4ef7900c0a1c21203e24a"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "9c7fffe1053093069cc6212326b6776e22b003ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "patch": "@@ -1,3 +1,14 @@\n+2012-08-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/53968\n+\t* tree.c (integer_pow2p): Avoid undefined signed overflows.\n+\t* simplify-rtx.c (neg_const_int): Likewise.\n+\t* expr.c (fixup_args_size_notes): Likewise.\n+\t* stor-layout.c (set_min_and_max_values_for_integral_type): Likewise.\n+\t* double-int.c (mul_double_wide_with_sign): Likewise.\n+\t(double_int_mask): Likewise.\n+\t* tree-ssa-loop-ivopts.c (get_address_cost): Likewise.\n+\n 2012-08-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/54200"}, {"sha": "ea518e3b41101307de0fcb53626d7c31836f713f", "filename": "gcc/double-int.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Fdouble-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Fdouble-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdouble-int.c?ref=eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "patch": "@@ -170,7 +170,7 @@ mul_double_wide_with_sign (unsigned HOST_WIDE_INT l1, HOST_WIDE_INT h1,\n \t{\n \t  k = i + j;\n \t  /* This product is <= 0xFFFE0001, the sum <= 0xFFFF0000.  */\n-\t  carry += arg1[i] * arg2[j];\n+\t  carry += (unsigned HOST_WIDE_INT) arg1[i] * arg2[j];\n \t  /* Since prod[p] < 0xFFFF, this sum <= 0xFFFFFFFF.  */\n \t  carry += prod[k];\n \t  prod[k] = LOWPART (carry);\n@@ -625,7 +625,7 @@ double_int_mask (unsigned prec)\n   else\n     {\n       mask.high = 0;\n-      mask.low = ((unsigned HOST_WIDE_INT) 2 << (prec - 1)) - 1;\n+      mask.low = prec ? ((unsigned HOST_WIDE_INT) 2 << (prec - 1)) - 1 : 0;\n     }\n \n   return mask;"}, {"sha": "4e7eb5fbf4ce1c0444bcef7807893334fc0ea436", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "patch": "@@ -3828,7 +3828,7 @@ fixup_args_size_notes (rtx prev, rtx last, int end_args_size)\n \n       add_reg_note (insn, REG_ARGS_SIZE, GEN_INT (args_size));\n #ifdef STACK_GROWS_DOWNWARD\n-      this_delta = -this_delta;\n+      this_delta = -(unsigned HOST_WIDE_INT) this_delta;\n #endif\n       args_size -= this_delta;\n     }"}, {"sha": "16dbd8a03eaf3f0503e52f6a003f10736db288a5", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "patch": "@@ -66,7 +66,7 @@ static rtx simplify_binary_operation_1 (enum rtx_code, enum machine_mode,\n static rtx\n neg_const_int (enum machine_mode mode, const_rtx i)\n {\n-  return gen_int_mode (- INTVAL (i), mode);\n+  return gen_int_mode (-(unsigned HOST_WIDE_INT) INTVAL (i), mode);\n }\n \n /* Test whether expression, X, is an immediate constant that represents"}, {"sha": "53554a9f45ea848e99bf0996688792624f5eb40d", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "patch": "@@ -1,7 +1,7 @@\n /* C-compiler utilities for types and variables storage layout\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1996, 1998,\n    1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n-   2011 Free Software Foundation, Inc.\n+   2011, 2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -2568,10 +2568,14 @@ set_min_and_max_values_for_integral_type (tree type,\n \t= build_int_cst_wide (type,\n \t\t\t      (precision - HOST_BITS_PER_WIDE_INT > 0\n \t\t\t       ? -1\n-\t\t\t       : ((HOST_WIDE_INT) 1 << (precision - 1)) - 1),\n+\t\t\t       : (HOST_WIDE_INT)\n+\t\t\t\t (((unsigned HOST_WIDE_INT) 1\n+\t\t\t\t   << (precision - 1)) - 1)),\n \t\t\t      (precision - HOST_BITS_PER_WIDE_INT - 1 > 0\n-\t\t\t       ? (((HOST_WIDE_INT) 1\n-\t\t\t\t   << (precision - HOST_BITS_PER_WIDE_INT - 1))) - 1\n+\t\t\t       ? (HOST_WIDE_INT)\n+\t\t\t\t ((((unsigned HOST_WIDE_INT) 1\n+\t\t\t\t    << (precision - HOST_BITS_PER_WIDE_INT\n+\t\t\t\t\t- 1))) - 1)\n \t\t\t       : 0));\n     }\n "}, {"sha": "81271a705bae6aea5995c7539eb7f387be5d6fa9", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "patch": "@@ -1,5 +1,5 @@\n /* Induction variable optimizations.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -3173,7 +3173,7 @@ get_address_cost (bool symbol_present, bool var_present,\n \n       for (i = width; i >= 0; i--)\n \t{\n-\t  off = -((HOST_WIDE_INT) 1 << i);\n+\t  off = -((unsigned HOST_WIDE_INT) 1 << i);\n \t  XEXP (addr, 1) = gen_int_mode (off, address_mode);\n \t  if (memory_address_addr_space_p (mem_mode, addr, as))\n \t    break;\n@@ -3182,7 +3182,7 @@ get_address_cost (bool symbol_present, bool var_present,\n \n       for (i = width; i >= 0; i--)\n \t{\n-\t  off = ((HOST_WIDE_INT) 1 << i) - 1;\n+\t  off = ((unsigned HOST_WIDE_INT) 1 << i) - 1;\n \t  XEXP (addr, 1) = gen_int_mode (off, address_mode);\n \t  if (memory_address_addr_space_p (mem_mode, addr, as))\n \t    break;"}, {"sha": "279850a1a84a8c7e31881b83e8bafb1db13610a5", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=eb87c7c4890b87d5f228b9261c2e3b3a5b81acd7", "patch": "@@ -1849,7 +1849,7 @@ int\n integer_pow2p (const_tree expr)\n {\n   int prec;\n-  HOST_WIDE_INT high, low;\n+  unsigned HOST_WIDE_INT high, low;\n \n   STRIP_NOPS (expr);\n "}]}