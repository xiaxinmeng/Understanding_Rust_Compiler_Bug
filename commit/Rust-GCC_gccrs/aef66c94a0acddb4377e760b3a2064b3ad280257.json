{"sha": "aef66c94a0acddb4377e760b3a2064b3ad280257", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmNjZjOTRhMGFjZGRiNDM3N2U3NjBiM2EyMDY0YjNhZDI4MDI1Nw==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2014-01-29T15:42:37Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2014-01-29T15:42:37Z"}, "message": "[AArch64] Fix various white space issues.\n\n2014-01-29  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n\n\t* config/aarch64/aarch64.c (aarch64_expand_mov_immediate)\n\t(aarch64_legitimate_address_p, aarch64_class_max_nregs): Adjust\n\twhitespace.\n\nFrom-SVN: r207258", "tree": {"sha": "3a3be15627c5629546398262954c1932e48c2000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a3be15627c5629546398262954c1932e48c2000"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef66c94a0acddb4377e760b3a2064b3ad280257", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef66c94a0acddb4377e760b3a2064b3ad280257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef66c94a0acddb4377e760b3a2064b3ad280257", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef66c94a0acddb4377e760b3a2064b3ad280257/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d66cee51db569b3b4c4de2cb4b2292f9df4eaa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d66cee51db569b3b4c4de2cb4b2292f9df4eaa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d66cee51db569b3b4c4de2cb4b2292f9df4eaa5"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "737f5b19cfcdc70133749e81fe8f8bf14a49f661", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef66c94a0acddb4377e760b3a2064b3ad280257/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef66c94a0acddb4377e760b3a2064b3ad280257/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aef66c94a0acddb4377e760b3a2064b3ad280257", "patch": "@@ -1,3 +1,9 @@\n+2014-01-29  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_expand_mov_immediate)\n+\t(aarch64_legitimate_address_p, aarch64_class_max_nregs): Adjust\n+\twhitespace.\n+\n 2014-01-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/58742"}, {"sha": "d3c5cbc7ace9e042ad2575b2ba2356bd17781bf0", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef66c94a0acddb4377e760b3a2064b3ad280257/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef66c94a0acddb4377e760b3a2064b3ad280257/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=aef66c94a0acddb4377e760b3a2064b3ad280257", "patch": "@@ -916,7 +916,7 @@ aarch64_expand_mov_immediate (rtx dest, rtx imm)\n \t  if (offset != const0_rtx\n \t      && targetm.cannot_force_const_mem (mode, imm))\n \t    {\n-\t      gcc_assert(can_create_pseudo_p ());\n+\t      gcc_assert (can_create_pseudo_p ());\n \t      base = aarch64_force_temporary (mode, dest, base);\n \t      base = aarch64_add_offset (mode, NULL, base, INTVAL (offset));\n \t      aarch64_emit_move (dest, base);\n@@ -3249,7 +3249,7 @@ aarch64_legitimate_address_hook_p (enum machine_mode mode, rtx x, bool strict_p)\n    pair operation.  */\n bool\n aarch64_legitimate_address_p (enum machine_mode mode, rtx x,\n-\t\t\t   RTX_CODE outer_code, bool strict_p)\n+\t\t\t      RTX_CODE outer_code, bool strict_p)\n {\n   struct aarch64_address_info addr;\n \n@@ -4256,7 +4256,7 @@ aarch64_class_max_nregs (reg_class_t regclass, enum machine_mode mode)\n     case FP_LO_REGS:\n       return\n \taarch64_vector_mode_p (mode) ? (GET_MODE_SIZE (mode) + 15) / 16 :\n- \t\t\t\t       (GET_MODE_SIZE (mode) + 7) / 8;\n+\t\t\t\t       (GET_MODE_SIZE (mode) + 7) / 8;\n     case STACK_REG:\n       return 1;\n "}]}