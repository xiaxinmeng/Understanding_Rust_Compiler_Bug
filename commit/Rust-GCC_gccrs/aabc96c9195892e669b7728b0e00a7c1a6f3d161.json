{"sha": "aabc96c9195892e669b7728b0e00a7c1a6f3d161", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFiYzk2YzkxOTU4OTJlNjY5Yjc3MjhiMGUwMGE3YzFhNmYzZDE2MQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-16T19:06:44Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-16T19:06:44Z"}, "message": "Don't invoke range_of_expr multiple times.\n\nCall evrp_folder::range_of_expr directly so we dont end up calling\nhybrid_folder::range_of_expr and doing double lookups/comparisons.\n\n\t* gimple-ssa-evrp.c (hybrid_folder::value_on_edge): Call\n\tevrp_folder::value_of_expr directly.\n\t(hybrid_folder::value_of_stmt): Ditto.", "tree": {"sha": "795de82ac3c336f561ef72151447aed24fcfbe62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/795de82ac3c336f561ef72151447aed24fcfbe62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aabc96c9195892e669b7728b0e00a7c1a6f3d161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aabc96c9195892e669b7728b0e00a7c1a6f3d161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aabc96c9195892e669b7728b0e00a7c1a6f3d161", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aabc96c9195892e669b7728b0e00a7c1a6f3d161/comments", "author": null, "committer": null, "parents": [{"sha": "4a135bd987e7bff6d3b94efa085e0c246348b486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a135bd987e7bff6d3b94efa085e0c246348b486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a135bd987e7bff6d3b94efa085e0c246348b486"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "309cdd94c21313d5a555530e3d8b450e144659ef", "filename": "gcc/gimple-ssa-evrp.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aabc96c9195892e669b7728b0e00a7c1a6f3d161/gcc%2Fgimple-ssa-evrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aabc96c9195892e669b7728b0e00a7c1a6f3d161/gcc%2Fgimple-ssa-evrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-evrp.c?ref=aabc96c9195892e669b7728b0e00a7c1a6f3d161", "patch": "@@ -239,15 +239,24 @@ hybrid_folder::value_of_expr (tree op, gimple *stmt)\n tree\n hybrid_folder::value_on_edge (edge e, tree op)\n {\n-  tree evrp_ret = evrp_folder::value_on_edge (e, op);\n+  // Call evrp::value_of_expr directly.  Otherwise another dual call is made\n+  // via hybrid_folder::value_of_expr, but without an edge.\n+  tree evrp_ret = evrp_folder::value_of_expr (op, NULL);\n   tree ranger_ret = m_ranger->value_on_edge (e, op);\n   return choose_value (evrp_ret, ranger_ret);\n }\n \n tree\n hybrid_folder::value_of_stmt (gimple *stmt, tree op) \n {\n-  tree evrp_ret = evrp_folder::value_of_stmt (stmt, op);\n+  // Call evrp::value_of_expr directly.  Otherwise another dual call is made\n+  // via hybrid_folder::value_of_expr, but without a stmt.\n+  tree evrp_ret;\n+  if (op)\n+    evrp_ret = evrp_folder::value_of_expr (op, NULL);\n+  else\n+    evrp_ret = NULL_TREE;\n+\n   tree ranger_ret = m_ranger->value_of_stmt (stmt, op);\n   return choose_value (evrp_ret, ranger_ret);\n }"}]}