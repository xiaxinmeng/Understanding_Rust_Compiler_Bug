{"sha": "e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlkMDhmZDc1ZjZkN2JiNWVkZmU4MWYxNGJlNzk3ZmZiMTcwN2I1MA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-21T14:52:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-21T14:52:24Z"}, "message": "[Ada] Aspects on stubs\n\nThis patch ensures that aspect specifications which appear on package,\nprotected, and task body stubs are properly analyzed.\n\n------------\n-- Source --\n------------\n\n--  pack.ads\n\npackage Pack\n  with SPARK_Mode,\n       Abstract_State => State\nis\n   -------------------------------------\n   -- Refined_Depends, Refined_Global --\n   -------------------------------------\n\n   procedure Proc_1;\n   procedure Proc_2\n     with Global  => (In_Out => State),\n          Depends => (State  => State);\n\n   task Task_Obj_1;\n   task Task_Obj_2\n     with Global  => (In_Out => State),\n          Depends => (State  => State);\n\n   ------------------\n   -- Refined_Post --\n   ------------------\n\n   function Func_1 (Formal : Integer) return Integer;\n   function Func_2 (Formal : Integer) return Integer\n     with Post => Func_2'Result > Formal;\n\n   -------------------\n   -- Refined_State --\n   -------------------\n\n   package Pack_1 is end Pack_1;\n   package Pack_2 with Abstract_State => State_2 is end Pack_2;\n\n   ----------------\n   -- SPARK_Mode --\n   ----------------\n\n   package Pack_3 with SPARK_Mode => Off is end Pack_3;\n   package Pack_4 with SPARK_Mode => Off is end Pack_4;\n   package Pack_5 is end Pack_5;\n\n   protected type Prot_Typ_1 with SPARK_Mode => Off is end Prot_Typ_1;\n   protected type Prot_Typ_2 with SPARK_Mode => Off is end Prot_Typ_2;\n   protected type Prot_Typ_3 is end Prot_Typ_3;\n\n   procedure Proc_3 with SPARK_Mode => Off;\n   procedure Proc_4 with SPARK_Mode => Off;\n   procedure Proc_5;\n\n   task type Task_Typ_1 with SPARK_Mode => Off;\n   task type Task_Typ_2 with SPARK_Mode => Off;\n   task type Task_Typ_3;\nend Pack;\n\n--  pack.adb\n\npackage body Pack\n  with SPARK_Mode,\n       Refined_State => (State => Constit)\nis\n   Constit : Integer := 0;\n\n   -------------------------------------\n   -- Refined_Depends, Refined_Global --\n   -------------------------------------\n\n   procedure Proc_1 is separate\n     with Refined_Global  => (In_Out  => Constit),                   --  Error\n          Refined_Depends => (Constit => Constit);                   --  Error\n\n   procedure Proc_2 is separate\n     with Refined_Global  => (In_Out  => Constit),                   --  OK\n          Refined_Depends => (Constit => Constit);                   --  OK\n\n   task body Task_Obj_1 is separate\n     with Refined_Global  => (In_Out  => Constit),                   --  Error\n          Refined_Depends => (Constit => Constit);                   --  Error\n\n   task body Task_Obj_2 is separate\n     with Refined_Global  => (In_Out  => Constit),                   --  OK\n          Refined_Depends => (Constit => Constit);                   --  OK\n\n   ------------------\n   -- Refined_Post --\n   ------------------\n\n   function Func_1 (Formal : Integer) return Integer is separate\n     with Refined_Post => Func_1'Result > Formal;                    --  OK\n\n   function Func_2 (Formal : Integer) return Integer is separate\n     with Refined_Post => Func_2'Result > Formal;                    --  OK\n\n   -------------------\n   -- Refined_State --\n   -------------------\n\n   package body Pack_1 is separate\n     with Refined_State => (State_1 => Constit_1);                   --  Error\n\n   package body Pack_2 is separate\n     with Refined_State => (State_2 => Constit_2);                   --  Error\n\n   ----------------\n   -- SPARK_Mode --\n   ----------------\n\n   package body Pack_3 is separate with SPARK_Mode => On;            --  Error\n   package body Pack_4 is separate;\n   package body Pack_5 is separate with SPARK_Mode => Off;           --  Error\n\n   protected body Prot_Typ_1 is separate with SPARK_Mode => On;      --  Error\n   protected body Prot_Typ_2 is separate;\n   protected body Prot_Typ_3 is separate with SPARK_Mode => Off;     --  Error\n\n   procedure Proc_3 is separate with SPARK_Mode => On;               --  Error\n   procedure Proc_4 is separate;\n   procedure Proc_5 is separate with SPARK_Mode => Off;              --  Error\n\n   task body Task_Typ_1 is separate with SPARK_Mode => On;           --  Error\n   task body Task_Typ_2 is separate;\n   task body Task_Typ_3 is separate with SPARK_Mode => Off;          --  Error\nend Pack;\n\n--  pack-func_1.adb\n\nseparate (Pack)\n\nfunction Func_1 (Formal : Integer) return Integer\n  with Refined_Post => Func_1'Result > Formal                        --  Error\nis\nbegin\n   return Formal * 10;\nend Func_1;\n\n--  pack-func_2.adb\n\nseparate (Pack)\n\nfunction Func_2 (Formal : Integer) return Integer\n  with Refined_Post => Func_2'Result > Formal                        --  Error\nis\nbegin\n   return Formal * 10;\nend Func_2;\n\n--  pack-pack_1.adb\n\nseparate (Pack)\n\npackage body Pack_1\n  with SPARK_Mode,\n       Refined_State => (State_1 => Constit_1)                       --  Error\nis\n   Constit_1 : Integer := 1;\nend Pack_1;\n\n--  pack-pack_2.adb\n\nseparate (Pack)\n\npackage body Pack_2\n  with SPARK_Mode,\n       Refined_State => (State_2 => Constit_2)                       --  OK\nis\n   Constit_2 : Integer := 2;\nend Pack_2;\n\n--  pack-pack_3.adb\n\nseparate (Pack)\n\npackage body Pack_3 is end Pack_3;\n\n--  pack-pack_4.adb\n\nseparate (Pack)\n\npackage body Pack_4 with SPARK_Mode => On is end Pack_4;             --  OK\n\n--  pack-pack_5.adb\n\nseparate (Pack)\n\npackage body Pack_5 with SPARK_Mode => On is end Pack_5;             --  OK\n\n--  pack-proc_1.adb\n\nseparate (Pack)\n\nprocedure Proc_1\n  with Refined_Global  => (In_Out  => Constit),                      --  Error\n       Refined_Depends => (Constit => Constit)                       --  Error\nis begin null; end Proc_1;\n\n--  pack-proc_2.adb\n\nseparate (Pack)\n\nprocedure Proc_2\n  with Refined_Global  => (In_Out  => Constit),                      --  Error\n       Refined_Depends => (Constit => Constit)                       --  Error\nis begin null; end Proc_2;\n\n--  pack-proc_3.adb\n\nseparate (Pack)\n\nprocedure Proc_3 is begin null; end Proc_3;\n\n--  pack-proc_4.adb\n\nseparate (Pack)\n\nprocedure Proc_4 with SPARK_Mode => On is begin null; end Proc_4;    --  OK\n\n--  pack-proc_5.adb\n\nseparate (Pack)\n\nprocedure Proc_5 with SPARK_Mode => On is begin null; end Proc_5;    --  OK\n\n--  pack-prot_typ_1.adb\n\nseparate (Pack)\n\nprotected body Prot_Typ_1 is end Prot_Typ_1;\n\n--  pack-prot_typ_2.adb\n\nseparate (Pack)\n\nprotected body Prot_Typ_2 with SPARK_Mode => On is end Prot_Typ_2;   --  OK\n\n--  pack-prot_typ_3.adb\n\nseparate (Pack)\n\nprotected body Prot_Typ_3 with SPARK_Mode => On is end Prot_Typ_3;   --  OK\n\n--  pack-task_obj_1.adb\n\nseparate (Pack)\n\ntask body Task_Obj_1\n  with Refined_Global  => (In_Out  => Constit),                      --  Error\n       Refined_Depends => (Constit => Constit)                       --  Error\nis begin null; end Task_Obj_1;\n\n--  pack-task_obj_2.adb\n\nseparate (Pack)\n\ntask body Task_Obj_2\n  with Refined_Global  => (In_Out  => Constit),                      --  Error\n       Refined_Depends => (Constit => Constit)                       --  Error\nis begin null; end Task_Obj_2;\n\n--  pack-task_typ_1.adb\n\nseparate (Pack)\n\ntask body Task_Typ_1 is begin null; end Task_Typ_1;\n\n--  pack-task_typ_2.adb\n\nseparate (Pack)\n\ntask body Task_Typ_2 with SPARK_Mode => On is                        --  OK\nbegin null; end Task_Typ_2;\n\n--  pack-task_typ_3.adb\n\nseparate (Pack)\n\ntask body Task_Typ_3 with SPARK_Mode => On is                        --  OK\nbegin null; end Task_Typ_3;\n\n----------------------------\n-- Compilation and output --\n----------------------------\n\n$ gcc -c pack.adb\npack.adb:12:11: useless refinement, declaration of subprogram \"Proc_1\" lacks\n  aspect or pragma Global\npack.adb:13:11: useless refinement, declaration of subprogram \"Proc_1\" lacks\n  aspect or pragma Depends\npack.adb:20:11: useless refinement, declaration of task type \"Task_Obj_1\" lacks\n  aspect or pragma Global\npack.adb:21:11: useless refinement, declaration of task type \"Task_Obj_1\" lacks\n  aspect or pragma Depends\npack.adb:42:11: aspect \"Refined_State\" must apply to a package body\npack.adb:45:11: aspect \"Refined_State\" must apply to a package body\npack.adb:51:41: incorrect placement of aspect \"Spark_Mode\"\npack.adb:53:41: incorrect placement of aspect \"Spark_Mode\"\npack.adb:55:47: incorrect placement of aspect \"Spark_Mode\"\npack.adb:57:47: incorrect placement of aspect \"Spark_Mode\"\npack.adb:59:38: incorrect placement of aspect \"Spark_Mode\"\npack.adb:61:38: incorrect placement of aspect \"Spark_Mode\"\npack.adb:63:42: incorrect placement of aspect \"Spark_Mode\"\npack.adb:65:42: incorrect placement of aspect \"Spark_Mode\"\npack-proc_1.adb:4:08: aspect \"Refined_Global\" cannot apply to a subunit\npack-proc_1.adb:5:08: aspect \"Refined_Depends\" cannot apply to a subunit\npack-proc_2.adb:4:08: aspect \"Refined_Global\" cannot apply to a subunit\npack-proc_2.adb:5:08: aspect \"Refined_Depends\" cannot apply to a subunit\npack-task_obj_1.adb:4:08: aspect \"Refined_Global\" cannot apply to a subunit\npack-task_obj_1.adb:5:08: aspect \"Refined_Depends\" cannot apply to a subunit\npack-task_obj_2.adb:4:08: aspect \"Refined_Global\" cannot apply to a subunit\npack-task_obj_2.adb:5:08: aspect \"Refined_Depends\" cannot apply to a subunit\npack-func_1.adb:4:08: aspect \"Refined_Post\" cannot apply to a subunit\npack-func_2.adb:4:08: aspect \"Refined_Post\" cannot apply to a subunit\npack-pack_1.adb:3:14: body of package \"Pack_1\" has unused hidden states\npack-pack_1.adb:3:14: variable \"Constit_1\" defined at line 7\npack-pack_1.adb:5:08: useless refinement, package \"Pack_1\" does not define\n  abstract states\npack-pack_1.adb:5:26: \"State_1\" is undefined\npack-pack_3.adb:3:01: incorrect use of SPARK_Mode at pack.adb:2\npack-pack_3.adb:3:01: value Off was set for SPARK_Mode on \"Pack_3\" at\n  pack.ads:38\npack-pack_4.adb:3:01: incorrect use of SPARK_Mode at pack.adb:2\npack-pack_4.adb:3:01: value Off was set for SPARK_Mode on \"Pack_4\" at\n  pack.ads:39\npack-pack_4.adb:3:26: incorrect use of SPARK_Mode\npack-pack_4.adb:3:26: value Off was set for SPARK_Mode on \"Pack_4\" at\n  pack.ads:39\npack-prot_typ_2.adb:3:32: incorrect use of SPARK_Mode\npack-prot_typ_2.adb:3:32: value Off was set for SPARK_Mode on \"Prot_Typ_2\" at\n  pack.ads:43\npack-proc_3.adb:3:01: incorrect use of SPARK_Mode at pack.adb:2\npack-proc_3.adb:3:01: value Off was set for SPARK_Mode on \"Proc_3\" at\n  pack.ads:46\npack-proc_4.adb:3:01: incorrect use of SPARK_Mode at pack.adb:2\npack-proc_4.adb:3:01: value Off was set for SPARK_Mode on \"Proc_4\" at\n  pack.ads:47\npack-proc_4.adb:3:23: incorrect use of SPARK_Mode\npack-proc_4.adb:3:23: value Off was set for SPARK_Mode on \"Proc_4\" at\n  pack.ads:47\npack-task_typ_2.adb:3:27: incorrect use of SPARK_Mode\npack-task_typ_2.adb:3:27: value Off was set for SPARK_Mode on \"Task_Typ_2\" at\n  pack.ads:51\n\n2018-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch6.adb (Analyze_Generic_Subprogram_Body): Rename the call to\n\tAnalyze_Aspect_Specifications_On_Body_Or_Stub.\n\t(Analyze_Subprogram_Body_Helper): Rename the calls to\n\tAnalyze_Aspect_Specifications_On_Body_Or_Stub.\n\t* sem_ch9.adb (Analyze_Entry_Body): Rename the call to\n\tAnalyze_Aspect_Specifications_On_Body_Or_Stub.\n\t* sem_ch10.adb: Add with and use clause for Sem_Ch13.\n\t(Analyze_Package_Body_Stub): Add constant Id. Decorate the package stub\n\tprior to analyzing its aspects.\n\t(Analyze_Protected_Body_Stub): Add constant Id. Decorate the package\n\tstub prior to analyzing its aspects. Save and restore the configuration\n\tswitches.\n\t(Analyze_Task_Body_Stub): Add constant Id. Decorate the package stub\n\tprior to analyzing its aspects.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications_On_Body_Or_Stub): Renamed\n\tto Analyze_Aspects_On_Subprogram_Body_Or_Stub.\n\t* sem_ch13.ads (Analyze_Aspect_Specifications_On_Body_Or_Stub): Renamed\n\tto Analyze_Aspects_On_Subprogram_Body_Or_Stub.\n\t* sem_prag.adb: Code reformatting.\n\t(Analyze_Refined_Depends_Global_Post): Consider task body stubs.\n\nFrom-SVN: r260469", "tree": {"sha": "783de27c9f05a038d31e2cd882cddb7fc96c82ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783de27c9f05a038d31e2cd882cddb7fc96c82ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f35b3e3894af5ae82bffcb05962e5bcfc11f269f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f35b3e3894af5ae82bffcb05962e5bcfc11f269f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f35b3e3894af5ae82bffcb05962e5bcfc11f269f"}], "stats": {"total": 190, "additions": 92, "deletions": 98}, "files": [{"sha": "a439064b9452122ce52b528f1f44109e6309ac2b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "patch": "@@ -1,3 +1,26 @@\n+2018-04-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Generic_Subprogram_Body): Rename the call to\n+\tAnalyze_Aspect_Specifications_On_Body_Or_Stub.\n+\t(Analyze_Subprogram_Body_Helper): Rename the calls to\n+\tAnalyze_Aspect_Specifications_On_Body_Or_Stub.\n+\t* sem_ch9.adb (Analyze_Entry_Body): Rename the call to\n+\tAnalyze_Aspect_Specifications_On_Body_Or_Stub.\n+\t* sem_ch10.adb: Add with and use clause for Sem_Ch13.\n+\t(Analyze_Package_Body_Stub): Add constant Id. Decorate the package stub\n+\tprior to analyzing its aspects.\n+\t(Analyze_Protected_Body_Stub): Add constant Id. Decorate the package\n+\tstub prior to analyzing its aspects. Save and restore the configuration\n+\tswitches.\n+\t(Analyze_Task_Body_Stub): Add constant Id. Decorate the package stub\n+\tprior to analyzing its aspects.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications_On_Body_Or_Stub): Renamed\n+\tto Analyze_Aspects_On_Subprogram_Body_Or_Stub.\n+\t* sem_ch13.ads (Analyze_Aspect_Specifications_On_Body_Or_Stub): Renamed\n+\tto Analyze_Aspects_On_Subprogram_Body_Or_Stub.\n+\t* sem_prag.adb: Code reformatting.\n+\t(Analyze_Refined_Depends_Global_Post): Consider task body stubs.\n+\n 2018-04-04  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* gcc-interface/Makefile.in: Add g-soliop__qnx.ads to the runtime build"}, {"sha": "ec8a651cd1d115f30ab0c7328a4ae0fff72a9139", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 40, "deletions": 11, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "patch": "@@ -55,6 +55,7 @@ with Sem_Ch3;   use Sem_Ch3;\n with Sem_Ch6;   use Sem_Ch6;\n with Sem_Ch7;   use Sem_Ch7;\n with Sem_Ch8;   use Sem_Ch8;\n+with Sem_Ch13;  use Sem_Ch13;\n with Sem_Dist;  use Sem_Dist;\n with Sem_Prag;  use Sem_Prag;\n with Sem_Util;  use Sem_Util;\n@@ -1594,7 +1595,7 @@ package body Sem_Ch10 is\n    -------------------------------\n \n    procedure Analyze_Package_Body_Stub (N : Node_Id) is\n-      Id   : constant Entity_Id := Defining_Identifier (N);\n+      Id   : constant Entity_Id := Defining_Entity (N);\n       Nam  : Entity_Id;\n       Opts : Config_Switches_Type;\n \n@@ -1623,9 +1624,15 @@ package body Sem_Ch10 is\n          --  generating code, the existence of the body will be confirmed\n          --  when we load the proper body.\n \n+         Set_Scope (Id, Current_Scope);\n+         Set_Ekind (Id, E_Package_Body);\n+         Set_Etype (Id, Standard_Void_Type);\n+\n+         if Has_Aspects (N) then\n+            Analyze_Aspect_Specifications (N, Id);\n+         end if;\n+\n          Set_Has_Completion (Nam);\n-         Set_Scope (Defining_Entity (N), Current_Scope);\n-         Set_Ekind (Defining_Entity (N), E_Package_Body);\n          Set_Corresponding_Spec_Of_Stub (N, Nam);\n          Generate_Reference (Nam, Id, 'b');\n          Analyze_Proper_Body (N, Nam);\n@@ -1951,7 +1958,9 @@ package body Sem_Ch10 is\n    ----------------------------------\n \n    procedure Analyze_Protected_Body_Stub (N : Node_Id) is\n-      Nam : Entity_Id := Current_Entity_In_Scope (Defining_Identifier (N));\n+      Id   : constant Entity_Id := Defining_Entity (N);\n+      Nam  : Entity_Id          := Current_Entity_In_Scope (Id);\n+      Opts : Config_Switches_Type;\n \n    begin\n       Check_Stub_Level (N);\n@@ -1966,12 +1975,25 @@ package body Sem_Ch10 is\n          Error_Msg_N (\"missing specification for Protected body\", N);\n \n       else\n-         Set_Scope (Defining_Entity (N), Current_Scope);\n-         Set_Ekind (Defining_Entity (N), E_Protected_Body);\n+         --  Retain and restore the configuration options of the enclosing\n+         --  context as the proper body may introduce a set of its own.\n+\n+         Save_Opt_Config_Switches (Opts);\n+\n+         Set_Scope (Id, Current_Scope);\n+         Set_Ekind (Id, E_Protected_Body);\n+         Set_Etype (Id, Standard_Void_Type);\n+\n+         if Has_Aspects (N) then\n+            Analyze_Aspect_Specifications (N, Id);\n+         end if;\n+\n          Set_Has_Completion (Etype (Nam));\n          Set_Corresponding_Spec_Of_Stub (N, Nam);\n-         Generate_Reference (Nam, Defining_Identifier (N), 'b');\n+         Generate_Reference (Nam, Id, 'b');\n          Analyze_Proper_Body (N, Etype (Nam));\n+\n+         Restore_Opt_Config_Switches (Opts);\n       end if;\n    end Analyze_Protected_Body_Stub;\n \n@@ -2427,8 +2449,9 @@ package body Sem_Ch10 is\n    ----------------------------\n \n    procedure Analyze_Task_Body_Stub (N : Node_Id) is\n+      Id  : constant Entity_Id  := Defining_Entity (N);\n       Loc : constant Source_Ptr := Sloc (N);\n-      Nam : Entity_Id := Current_Entity_In_Scope (Defining_Identifier (N));\n+      Nam : Entity_Id           := Current_Entity_In_Scope (Id);\n \n    begin\n       Check_Stub_Level (N);\n@@ -2443,9 +2466,15 @@ package body Sem_Ch10 is\n          Error_Msg_N (\"missing specification for task body\", N);\n \n       else\n-         Set_Scope (Defining_Entity (N), Current_Scope);\n-         Set_Ekind (Defining_Entity (N), E_Task_Body);\n-         Generate_Reference (Nam, Defining_Identifier (N), 'b');\n+         Set_Scope (Id, Current_Scope);\n+         Set_Ekind (Id, E_Task_Body);\n+         Set_Etype (Id, Standard_Void_Type);\n+\n+         if Has_Aspects (N) then\n+            Analyze_Aspect_Specifications (N, Id);\n+         end if;\n+\n+         Generate_Reference (Nam, Id, 'b');\n          Set_Corresponding_Spec_Of_Stub (N, Nam);\n \n          --  Check for duplicate stub, if so give message and terminate"}, {"sha": "c0118b49e75a944f7da90866bc06b0974d6a9959", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "patch": "@@ -3865,11 +3865,11 @@ package body Sem_Ch13 is\n       end if;\n    end Analyze_Aspect_Specifications;\n \n-   ---------------------------------------------------\n-   -- Analyze_Aspect_Specifications_On_Body_Or_Stub --\n-   ---------------------------------------------------\n+   ------------------------------------------------\n+   -- Analyze_Aspects_On_Subprogram_Body_Or_Stub --\n+   ------------------------------------------------\n \n-   procedure Analyze_Aspect_Specifications_On_Body_Or_Stub (N : Node_Id) is\n+   procedure Analyze_Aspects_On_Subprogram_Body_Or_Stub (N : Node_Id) is\n       Body_Id : constant Entity_Id := Defining_Entity (N);\n \n       procedure Diagnose_Misplaced_Aspects (Spec_Id : Entity_Id);\n@@ -3985,7 +3985,7 @@ package body Sem_Ch13 is\n \n       Spec_Id : constant Entity_Id := Unique_Defining_Entity (N);\n \n-   --  Start of processing for Analyze_Aspects_On_Body_Or_Stub\n+   --  Start of processing for Analyze_Aspects_On_Subprogram_Body_Or_Stub\n \n    begin\n       --  Language-defined aspects cannot be associated with a subprogram body\n@@ -3998,7 +3998,7 @@ package body Sem_Ch13 is\n       else\n          Analyze_Aspect_Specifications (N, Body_Id);\n       end if;\n-   end Analyze_Aspect_Specifications_On_Body_Or_Stub;\n+   end Analyze_Aspects_On_Subprogram_Body_Or_Stub;\n \n    -----------------------\n    -- Analyze_At_Clause --"}, {"sha": "3c626e84d63283098cde224c2657779eb3619ba6", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "patch": "@@ -42,7 +42,7 @@ package Sem_Ch13 is\n    --  is the corresponding entity declared by the declaration node N. Callers\n    --  should check that Has_Aspects (N) is True before calling this routine.\n \n-   procedure Analyze_Aspect_Specifications_On_Body_Or_Stub (N : Node_Id);\n+   procedure Analyze_Aspects_On_Subprogram_Body_Or_Stub (N : Node_Id);\n    --  Analyze the aspect specifications of [generic] subprogram body or stub\n    --  N. Callers should check that Has_Aspects (N) is True before calling the\n    --  routine. This routine diagnoses misplaced aspects that should appear on"}, {"sha": "3dece02f81e1461cd09662e69c0ec0e0adc45879", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "patch": "@@ -1502,7 +1502,7 @@ package body Sem_Ch6 is\n          --  subprogram body.\n \n          if Has_Aspects (N) then\n-            Analyze_Aspect_Specifications_On_Body_Or_Stub (N);\n+            Analyze_Aspects_On_Subprogram_Body_Or_Stub (N);\n          end if;\n \n          Analyze_Declarations (Declarations (N));\n@@ -4155,7 +4155,7 @@ package body Sem_Ch6 is\n \n       if Nkind (N) = N_Subprogram_Body_Stub then\n          if Has_Aspects (N) then\n-            Analyze_Aspect_Specifications_On_Body_Or_Stub (N);\n+            Analyze_Aspects_On_Subprogram_Body_Or_Stub (N);\n          end if;\n \n          goto Leave;\n@@ -4370,7 +4370,7 @@ package body Sem_Ch6 is\n       --  Analyze any aspect specifications that appear on the subprogram body\n \n       if Has_Aspects (N) then\n-         Analyze_Aspect_Specifications_On_Body_Or_Stub (N);\n+         Analyze_Aspects_On_Subprogram_Body_Or_Stub (N);\n       end if;\n \n       Analyze_Declarations (Declarations (N));"}, {"sha": "e487391bb277522932f3cf7289f2330c3a9f5c9f", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "patch": "@@ -1246,7 +1246,7 @@ package body Sem_Ch9 is\n       --  Analyze any aspect specifications that appear on the entry body\n \n       if Has_Aspects (N) then\n-         Analyze_Aspect_Specifications_On_Body_Or_Stub (N);\n+         Analyze_Aspects_On_Subprogram_Body_Or_Stub (N);\n       end if;\n \n       E := First_Entity (P_Type);"}, {"sha": "f235905229d63dd27e0374c5204624cabfd071ce", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 18, "deletions": 76, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d08fd75f6d7bb5edfe81f14be797ffb1707b50/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=e9d08fd75f6d7bb5edfe81f14be797ffb1707b50", "patch": "@@ -2010,8 +2010,9 @@ package body Sem_Prag is\n      (N        : Node_Id;\n       Expr_Val : out Boolean)\n    is\n-      Arg1     : constant Node_Id := First (Pragma_Argument_Associations (N));\n-      Obj_Decl : constant Node_Id := Find_Related_Context (N);\n+      Arg1     : constant Node_Id   :=\n+                   First (Pragma_Argument_Associations (N));\n+      Obj_Decl : constant Node_Id   := Find_Related_Context (N);\n       Obj_Id   : constant Entity_Id := Defining_Entity (Obj_Decl);\n       Expr     : Node_Id;\n \n@@ -4709,27 +4710,12 @@ package body Sem_Prag is\n \n          Body_Decl := Find_Related_Declaration_Or_Body (N, Do_Checks => True);\n \n-         --  Entry body\n-\n-         if Nkind (Body_Decl) = N_Entry_Body then\n-            null;\n-\n-         --  Subprogram body\n-\n-         elsif Nkind (Body_Decl) = N_Subprogram_Body then\n-            null;\n-\n-         --  Subprogram body stub\n-\n-         elsif Nkind (Body_Decl) = N_Subprogram_Body_Stub then\n-            null;\n-\n-         --  Task body\n-\n-         elsif Nkind (Body_Decl) = N_Task_Body then\n-            null;\n-\n-         else\n+         if not Nkind_In (Body_Decl, N_Entry_Body,\n+                                     N_Subprogram_Body,\n+                                     N_Subprogram_Body_Stub,\n+                                     N_Task_Body,\n+                                     N_Task_Body_Stub)\n+         then\n             Pragma_Misplaced;\n             return;\n          end if;\n@@ -11929,17 +11915,9 @@ package body Sem_Prag is\n \n             Pack_Decl := Find_Related_Package_Or_Body (N, Do_Checks => True);\n \n-            --  Ensure the proper placement of the pragma. Abstract states must\n-            --  be associated with a package declaration.\n-\n-            if Nkind_In (Pack_Decl, N_Generic_Package_Declaration,\n-                                    N_Package_Declaration)\n+            if not Nkind_In (Pack_Decl, N_Generic_Package_Declaration,\n+                                        N_Package_Declaration)\n             then\n-               null;\n-\n-            --  Otherwise the pragma is associated with an illegal construct\n-\n-            else\n                Pragma_Misplaced;\n                return;\n             end if;\n@@ -12858,12 +12836,7 @@ package body Sem_Prag is\n \n             --  Object declaration\n \n-            if Nkind (Obj_Decl) = N_Object_Declaration then\n-               null;\n-\n-            --  Otherwise the pragma is associated with an illegal construact\n-\n-            else\n+            if Nkind (Obj_Decl) /= N_Object_Declaration then\n                Pragma_Misplaced;\n                return;\n             end if;\n@@ -13903,14 +13876,7 @@ package body Sem_Prag is\n \n             Obj_Decl := Find_Related_Context (N, Do_Checks => True);\n \n-            --  Object declaration\n-\n-            if Nkind (Obj_Decl) = N_Object_Declaration then\n-               null;\n-\n-            --  Otherwise the pragma is associated with an illegal construct\n-\n-            else\n+            if Nkind (Obj_Decl) /= N_Object_Declaration then\n                Pragma_Misplaced;\n                return;\n             end if;\n@@ -17109,17 +17075,9 @@ package body Sem_Prag is\n \n             Pack_Decl := Find_Related_Package_Or_Body (N, Do_Checks => True);\n \n-            --  Ensure the proper placement of the pragma. Initial_Condition\n-            --  must be associated with a package declaration.\n-\n-            if Nkind_In (Pack_Decl, N_Generic_Package_Declaration,\n-                                    N_Package_Declaration)\n+            if not Nkind_In (Pack_Decl, N_Generic_Package_Declaration,\n+                                        N_Package_Declaration)\n             then\n-               null;\n-\n-            --  Otherwise the pragma is associated with an illegal context\n-\n-            else\n                Pragma_Misplaced;\n                return;\n             end if;\n@@ -17223,17 +17181,9 @@ package body Sem_Prag is\n \n             Pack_Decl := Find_Related_Package_Or_Body (N, Do_Checks => True);\n \n-            --  Ensure the proper placement of the pragma. Initializes must be\n-            --  associated with a package declaration.\n-\n-            if Nkind_In (Pack_Decl, N_Generic_Package_Declaration,\n-                                    N_Package_Declaration)\n+            if not Nkind_In (Pack_Decl, N_Generic_Package_Declaration,\n+                                        N_Package_Declaration)\n             then\n-               null;\n-\n-            --  Otherwise the pragma is associated with an illegal construc\n-\n-            else\n                Pragma_Misplaced;\n                return;\n             end if;\n@@ -21442,15 +21392,7 @@ package body Sem_Prag is\n \n             Pack_Decl := Find_Related_Package_Or_Body (N, Do_Checks => True);\n \n-            --  Ensure the proper placement of the pragma. Refined states must\n-            --  be associated with a package body.\n-\n-            if Nkind (Pack_Decl) = N_Package_Body then\n-               null;\n-\n-            --  Otherwise the pragma is associated with an illegal construct\n-\n-            else\n+            if Nkind (Pack_Decl) /= N_Package_Body then\n                Pragma_Misplaced;\n                return;\n             end if;"}]}