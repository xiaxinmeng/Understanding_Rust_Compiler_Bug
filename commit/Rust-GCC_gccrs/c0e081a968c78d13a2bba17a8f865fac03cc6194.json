{"sha": "c0e081a968c78d13a2bba17a8f865fac03cc6194", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBlMDgxYTk2OGM3OGQxM2EyYmJhMTdhOGY4NjVmYWMwM2NjNjE5NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-10-18T08:36:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-10-18T08:36:28Z"}, "message": "stor-layout.c (layout_type): Do not change TYPE_PRECISION or TYPE_UNSIGNED of integral types.\n\n2013-10-18  Richard Biener  <rguenther@suse.de>\n\n\t* stor-layout.c (layout_type): Do not change TYPE_PRECISION\n\tor TYPE_UNSIGNED of integral types.\n\t(set_min_and_max_values_for_integral_type): Leave TYPE_MIN/MAX_VALUE\n\tNULL_TREE for zero-precision integral types.\n\nFrom-SVN: r203813", "tree": {"sha": "6ac87ce50110858e62204b3bb3df8bca29b549ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ac87ce50110858e62204b3bb3df8bca29b549ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0e081a968c78d13a2bba17a8f865fac03cc6194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e081a968c78d13a2bba17a8f865fac03cc6194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e081a968c78d13a2bba17a8f865fac03cc6194", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e081a968c78d13a2bba17a8f865fac03cc6194/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "054fceb5eef383cad943cc695fe25ccbff66d2d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054fceb5eef383cad943cc695fe25ccbff66d2d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/054fceb5eef383cad943cc695fe25ccbff66d2d2"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "28b8e495f2a3faa31b97f7a966216de24ea2822d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e081a968c78d13a2bba17a8f865fac03cc6194/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e081a968c78d13a2bba17a8f865fac03cc6194/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0e081a968c78d13a2bba17a8f865fac03cc6194", "patch": "@@ -1,3 +1,10 @@\n+2013-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* stor-layout.c (layout_type): Do not change TYPE_PRECISION\n+\tor TYPE_UNSIGNED of integral types.\n+\t(set_min_and_max_values_for_integral_type): Leave TYPE_MIN/MAX_VALUE\n+\tNULL_TREE for zero-precision integral types.\n+\n 2013-10-18  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/arm_neon.h"}, {"sha": "20e577d848269e16194ce00ff9760a842242f5fa", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e081a968c78d13a2bba17a8f865fac03cc6194/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e081a968c78d13a2bba17a8f865fac03cc6194/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=c0e081a968c78d13a2bba17a8f865fac03cc6194", "patch": "@@ -2052,18 +2052,9 @@ layout_type (tree type)\n \t of the language-specific code.  */\n       gcc_unreachable ();\n \n-    case BOOLEAN_TYPE:  /* Used for Java, Pascal, and Chill.  */\n-      if (TYPE_PRECISION (type) == 0)\n-\tTYPE_PRECISION (type) = 1; /* default to one byte/boolean.  */\n-\n-      /* ... fall through ...  */\n-\n+    case BOOLEAN_TYPE:\n     case INTEGER_TYPE:\n     case ENUMERAL_TYPE:\n-      if (TREE_CODE (TYPE_MIN_VALUE (type)) == INTEGER_CST\n-\t  && tree_int_cst_sgn (TYPE_MIN_VALUE (type)) >= 0)\n-\tTYPE_UNSIGNED (type) = 1;\n-\n       SET_TYPE_MODE (type,\n \t\t     smallest_mode_for_size (TYPE_PRECISION (type), MODE_INT));\n       TYPE_SIZE (type) = bitsize_int (GET_MODE_BITSIZE (TYPE_MODE (type)));\n@@ -2520,6 +2511,12 @@ set_min_and_max_values_for_integral_type (tree type,\n   tree min_value;\n   tree max_value;\n \n+  /* For bitfields with zero width we end up creating integer types\n+     with zero precision.  Don't assign any minimum/maximum values\n+     to those types, they don't have any valid value.  */\n+  if (precision < 1)\n+    return;\n+\n   if (is_unsigned)\n     {\n       min_value = build_int_cst (type, 0);"}]}