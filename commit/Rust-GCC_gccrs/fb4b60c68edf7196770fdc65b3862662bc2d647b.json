{"sha": "fb4b60c68edf7196770fdc65b3862662bc2d647b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0YjYwYzY4ZWRmNzE5Njc3MGZkYzY1YjM4NjI2NjJiYzJkNjQ3Yg==", "commit": {"author": {"name": "Vladislav Ivanishin", "email": "vlad@ispras.ru", "date": "2019-05-15T12:40:04Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2019-05-15T12:40:04Z"}, "message": "tree-ssa-uninit: clean up is_value_included_in\n\n2019-05-15  Vladislav Ivanishin  <vlad@ispras.ru>\n\n\t* tree-ssa-uninit.c (is_value_included_in): Remove is_unsigned and merge\n\tsemantically equivalent branches (left over after prior refactorings).\n\nFrom-SVN: r271207", "tree": {"sha": "d8249b8d4e7703e16dc8b9f50cec875c1b087259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8249b8d4e7703e16dc8b9f50cec875c1b087259"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb4b60c68edf7196770fdc65b3862662bc2d647b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4b60c68edf7196770fdc65b3862662bc2d647b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb4b60c68edf7196770fdc65b3862662bc2d647b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4b60c68edf7196770fdc65b3862662bc2d647b/comments", "author": {"login": "ivladak", "id": 3601329, "node_id": "MDQ6VXNlcjM2MDEzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/3601329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivladak", "html_url": "https://github.com/ivladak", "followers_url": "https://api.github.com/users/ivladak/followers", "following_url": "https://api.github.com/users/ivladak/following{/other_user}", "gists_url": "https://api.github.com/users/ivladak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivladak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivladak/subscriptions", "organizations_url": "https://api.github.com/users/ivladak/orgs", "repos_url": "https://api.github.com/users/ivladak/repos", "events_url": "https://api.github.com/users/ivladak/events{/privacy}", "received_events_url": "https://api.github.com/users/ivladak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b94351209e4f044abdea22e8a8eb529abe0109b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b94351209e4f044abdea22e8a8eb529abe0109b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b94351209e4f044abdea22e8a8eb529abe0109b"}], "stats": {"total": 36, "additions": 11, "deletions": 25}, "files": [{"sha": "fe85101e4357481fa4c1c9f14e4427c92049b614", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4b60c68edf7196770fdc65b3862662bc2d647b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4b60c68edf7196770fdc65b3862662bc2d647b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb4b60c68edf7196770fdc65b3862662bc2d647b", "patch": "@@ -1,3 +1,8 @@\n+2019-05-15  Vladislav Ivanishin  <vlad@ispras.ru>\n+\n+\t* tree-ssa-uninit.c (is_value_included_in): Remove is_unsigned and merge\n+\tsemantically equivalent branches (left over after prior refactorings).\n+\n 2019-05-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88828"}, {"sha": "7362e374dea752cd9760441ce682859a77eac8df", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 6, "deletions": 25, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4b60c68edf7196770fdc65b3862662bc2d647b/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4b60c68edf7196770fdc65b3862662bc2d647b/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=fb4b60c68edf7196770fdc65b3862662bc2d647b", "patch": "@@ -1017,45 +1017,26 @@ static bool\n is_value_included_in (tree val, tree boundary, enum tree_code cmpc)\n {\n   bool inverted = false;\n-  bool is_unsigned;\n   bool result;\n \n   /* Only handle integer constant here.  */\n   if (TREE_CODE (val) != INTEGER_CST || TREE_CODE (boundary) != INTEGER_CST)\n     return true;\n \n-  is_unsigned = TYPE_UNSIGNED (TREE_TYPE (val));\n-\n   if (cmpc == GE_EXPR || cmpc == GT_EXPR || cmpc == NE_EXPR)\n     {\n       cmpc = invert_tree_comparison (cmpc, false);\n       inverted = true;\n     }\n \n-  if (is_unsigned)\n-    {\n-      if (cmpc == EQ_EXPR)\n-\tresult = tree_int_cst_equal (val, boundary);\n-      else if (cmpc == LT_EXPR)\n-\tresult = tree_int_cst_lt (val, boundary);\n-      else\n-\t{\n-\t  gcc_assert (cmpc == LE_EXPR);\n-\t  result = tree_int_cst_le (val, boundary);\n-\t}\n-    }\n+  if (cmpc == EQ_EXPR)\n+    result = tree_int_cst_equal (val, boundary);\n+  else if (cmpc == LT_EXPR)\n+    result = tree_int_cst_lt (val, boundary);\n   else\n     {\n-      if (cmpc == EQ_EXPR)\n-\tresult = tree_int_cst_equal (val, boundary);\n-      else if (cmpc == LT_EXPR)\n-\tresult = tree_int_cst_lt (val, boundary);\n-      else\n-\t{\n-\t  gcc_assert (cmpc == LE_EXPR);\n-\t  result = (tree_int_cst_equal (val, boundary)\n-\t\t    || tree_int_cst_lt (val, boundary));\n-\t}\n+      gcc_assert (cmpc == LE_EXPR);\n+      result = tree_int_cst_le (val, boundary);\n     }\n \n   if (inverted)"}]}