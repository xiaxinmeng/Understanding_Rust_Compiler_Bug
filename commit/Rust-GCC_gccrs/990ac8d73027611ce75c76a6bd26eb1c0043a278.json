{"sha": "990ac8d73027611ce75c76a6bd26eb1c0043a278", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkwYWM4ZDczMDI3NjExY2U3NWM3NmE2YmQyNmViMWMwMDQzYTI3OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "1998-03-23T22:59:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-23T22:59:18Z"}, "message": "c-parse.in: Recognize protocol qualifiers in class definitions for objc.\n\n        * c-parse.in: Recognize protocol qualifiers in class\n        definitions for objc.\n        Include \"output.h\".\n        (yyerror): Remove redundant decl.\n        (yyprint): Fix prototype.\n\nFrom-SVN: r18788", "tree": {"sha": "6efc2323844d0a320c4bbb2d9ba8cc52342a73a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6efc2323844d0a320c4bbb2d9ba8cc52342a73a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/990ac8d73027611ce75c76a6bd26eb1c0043a278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/990ac8d73027611ce75c76a6bd26eb1c0043a278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/990ac8d73027611ce75c76a6bd26eb1c0043a278", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/990ac8d73027611ce75c76a6bd26eb1c0043a278/comments", "author": null, "committer": null, "parents": [{"sha": "47a0b68fb68b1691ac4980ac48b4f0dcde437c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a0b68fb68b1691ac4980ac48b4f0dcde437c14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47a0b68fb68b1691ac4980ac48b4f0dcde437c14"}], "stats": {"total": 775, "additions": 394, "deletions": 381}, "files": [{"sha": "32846c42f2d423b485e454fc0ce782467e36f3b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=990ac8d73027611ce75c76a6bd26eb1c0043a278", "patch": "@@ -1,3 +1,11 @@\n+Mon Mar 23 23:59:11 1998  H.J. Lu  (hjl@gnu.org)\n+\n+\t* c-parse.in: Recognize protocol qualifiers in class\n+\tdefinitions for objc.\n+\tInclude \"output.h\".\n+\t(yyerror): Remove redundant decl.\n+\t(yyprint): Fix prototype.\n+\n Mon Mar 23 23:49:47 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* cse.c (rtx_cost): Only call CONST_COSTS if it is defined."}, {"sha": "9b473277fe7459219d2d5b2316926c28cc247f63", "filename": "gcc/c-parse.c", "status": "modified", "additions": 367, "deletions": 368, "changes": 735, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=990ac8d73027611ce75c76a6bd26eb1c0043a278", "patch": "@@ -78,6 +78,7 @@\n #include \"c-lex.h\"\n #include \"c-tree.h\"\n #include \"flags.h\"\n+#include \"output.h\"\n \n #ifdef MULTIBYTE_CHARS\n #include <stdlib.h>\n@@ -93,18 +94,16 @@ char *language_string = \"GNU C\";\n extern int errno;\n #endif\n \n-void yyerror ();\n-\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n \n /* Cause the `yydebug' variable to be defined.  */\n #define YYDEBUG 1\n \n-#line 94 \"c-parse.y\"\n+#line 93 \"c-parse.y\"\n typedef union {long itype; tree ttype; enum tree_code code;\n \tchar *filename; int lineno; int ends_in_label; } YYSTYPE;\n-#line 210 \"c-parse.y\"\n+#line 209 \"c-parse.y\"\n \n /* Number of statements (loosely speaking) and compound statements \n    seen so far.  */\n@@ -130,7 +129,7 @@ static int undeclared_variable_notice;\n /* Tell yyparse how to print a token's value, if yydebug is set.  */\n \n #define YYPRINT(FILE,YYCHAR,YYLVAL) yyprint(FILE,YYCHAR,YYLVAL)\n-extern void yyprint ();\n+extern void yyprint\t\t\tPROTO ((FILE *, int, YYSTYPE));\n #include <stdio.h>\n \n #ifndef __cplusplus\n@@ -360,46 +359,46 @@ static const short yyrhs[] = {    -1,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   239,   244,   258,   260,   260,   261,   263,   265,   266,   274,\n-   278,   289,   294,   299,   301,   303,   304,   305,   310,   317,\n-   319,   324,   329,   335,   337,   342,   347,   353,   355,   360,\n-   367,   369,   372,   374,   376,   378,   380,   382,   384,   388,\n-   392,   395,   398,   401,   405,   407,   410,   413,   417,   445,\n-   451,   454,   457,   460,   462,   466,   470,   474,   476,   479,\n-   483,   510,   512,   514,   516,   518,   520,   522,   524,   526,\n-   528,   530,   532,   534,   536,   540,   542,   546,   548,   551,\n-   555,   557,   564,   567,   570,   576,   675,   676,   678,   684,\n-   686,   700,   723,   725,   727,   731,   737,   739,   744,   746,\n-   751,   753,   754,   764,   769,   771,   772,   773,   780,   786,\n-   791,   794,   802,   807,   809,   810,   811,   818,   829,   833,\n-   839,   844,   849,   854,   856,   858,   867,   870,   874,   876,\n-   878,   883,   887,   890,   894,   897,   899,   911,   914,   916,\n-   918,   922,   926,   928,   931,   944,   947,   951,   953,   961,\n-   962,   963,   967,   969,   975,   976,   977,   980,   982,   985,\n-   987,   990,   993,   999,  1006,  1008,  1015,  1022,  1025,  1032,\n-  1035,  1039,  1042,  1046,  1051,  1054,  1058,  1061,  1063,  1065,\n-  1067,  1074,  1076,  1077,  1078,  1083,  1085,  1090,  1098,  1103,\n-  1107,  1110,  1112,  1117,  1120,  1122,  1124,  1128,  1131,  1131,\n-  1134,  1134,  1137,  1137,  1140,  1140,  1143,  1145,  1156,  1164,\n-  1168,  1179,  1187,  1194,  1196,  1201,  1204,  1209,  1211,  1213,\n-  1220,  1222,  1230,  1236,  1238,  1240,  1247,  1249,  1255,  1261,\n-  1263,  1265,  1267,  1274,  1276,  1279,  1284,  1286,  1290,  1292,\n-  1294,  1296,  1300,  1302,  1305,  1308,  1311,  1314,  1318,  1320,\n-  1323,  1325,  1329,  1332,  1337,  1339,  1341,  1355,  1362,  1367,\n-  1373,  1378,  1380,  1385,  1387,  1391,  1395,  1399,  1409,  1411,\n-  1416,  1421,  1424,  1428,  1431,  1435,  1438,  1441,  1444,  1448,\n-  1451,  1455,  1459,  1461,  1463,  1465,  1467,  1469,  1471,  1473,\n-  1483,  1491,  1493,  1495,  1499,  1501,  1504,  1507,  1518,  1520,\n-  1525,  1527,  1530,  1544,  1547,  1550,  1552,  1554,  1562,  1570,\n-  1581,  1586,  1589,  1603,  1612,  1616,  1620,  1624,  1630,  1634,\n-  1639,  1642,  1647,  1650,  1651,  1668,  1673,  1676,  1688,  1690,\n-  1700,  1710,  1711,  1719,  1722,  1734,  1738,  1755,  1765,  1774,\n-  1779,  1784,  1789,  1793,  1797,  1808,  1815,  1822,  1829,  1840,\n-  1846,  1849,  1854,  1877,  1911,  1936,  1967,  1982,  1993,  1997,\n-  2001,  2004,  2009,  2011,  2014,  2016,  2020,  2025,  2028,  2034,\n-  2039,  2044,  2046,  2055,  2056,  2062,  2064,  2074,  2076,  2080,\n-  2083,  2089,  2099,  2108,  2117,  2127,  2141,  2146,  2151,  2153,\n-  2162,  2165,  2170,  2173,  2177\n+   238,   243,   257,   259,   259,   260,   262,   264,   265,   273,\n+   277,   288,   293,   298,   300,   302,   303,   304,   309,   316,\n+   318,   323,   328,   334,   336,   341,   346,   352,   354,   359,\n+   366,   368,   371,   373,   375,   377,   379,   381,   383,   387,\n+   391,   394,   397,   400,   404,   406,   409,   412,   416,   444,\n+   450,   453,   456,   459,   461,   465,   469,   473,   475,   478,\n+   482,   509,   511,   513,   515,   517,   519,   521,   523,   525,\n+   527,   529,   531,   533,   535,   539,   541,   545,   547,   550,\n+   554,   556,   563,   566,   569,   575,   674,   675,   677,   683,\n+   685,   699,   722,   724,   726,   730,   736,   738,   743,   745,\n+   750,   752,   753,   763,   768,   770,   771,   772,   779,   785,\n+   790,   793,   801,   806,   808,   809,   810,   817,   828,   832,\n+   838,   843,   848,   853,   855,   857,   866,   869,   873,   875,\n+   877,   882,   886,   889,   893,   896,   898,   910,   913,   915,\n+   917,   921,   925,   927,   930,   943,   946,   950,   952,   960,\n+   961,   962,   966,   968,   974,   975,   976,   979,   981,   984,\n+   986,   989,   992,   998,  1005,  1007,  1014,  1021,  1024,  1031,\n+  1034,  1038,  1041,  1045,  1050,  1053,  1057,  1060,  1062,  1064,\n+  1066,  1073,  1075,  1076,  1077,  1082,  1084,  1089,  1097,  1102,\n+  1106,  1109,  1111,  1116,  1119,  1121,  1123,  1127,  1130,  1130,\n+  1133,  1133,  1136,  1136,  1139,  1139,  1142,  1144,  1155,  1163,\n+  1167,  1178,  1186,  1193,  1195,  1200,  1203,  1208,  1210,  1212,\n+  1219,  1221,  1229,  1235,  1237,  1239,  1246,  1248,  1254,  1260,\n+  1262,  1264,  1266,  1273,  1275,  1278,  1283,  1285,  1289,  1291,\n+  1293,  1295,  1299,  1301,  1304,  1307,  1310,  1313,  1317,  1319,\n+  1322,  1324,  1328,  1331,  1336,  1338,  1340,  1354,  1361,  1366,\n+  1372,  1377,  1379,  1384,  1386,  1390,  1394,  1398,  1408,  1410,\n+  1415,  1420,  1423,  1427,  1430,  1434,  1437,  1440,  1443,  1447,\n+  1450,  1454,  1458,  1460,  1462,  1464,  1466,  1468,  1470,  1472,\n+  1482,  1490,  1492,  1494,  1498,  1500,  1503,  1506,  1517,  1519,\n+  1524,  1526,  1529,  1543,  1546,  1549,  1551,  1553,  1561,  1569,\n+  1580,  1585,  1588,  1602,  1611,  1615,  1619,  1623,  1629,  1633,\n+  1638,  1641,  1646,  1649,  1650,  1667,  1672,  1675,  1687,  1689,\n+  1699,  1709,  1710,  1718,  1721,  1733,  1737,  1754,  1764,  1773,\n+  1778,  1783,  1788,  1792,  1796,  1807,  1814,  1821,  1828,  1839,\n+  1845,  1848,  1853,  1876,  1910,  1935,  1966,  1981,  1992,  1996,\n+  2000,  2003,  2008,  2010,  2013,  2015,  2019,  2024,  2027,  2033,\n+  2038,  2043,  2045,  2054,  2055,  2061,  2063,  2073,  2075,  2079,\n+  2082,  2088,  2098,  2107,  2116,  2126,  2140,  2145,  2150,  2152,\n+  2161,  2164,  2169,  2172,  2176\n };\n #endif\n \n@@ -1170,7 +1169,7 @@ static const short yycheck[] = {    40,\n     48,    49,    50,    51,    52\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/bison.simple\"\n+#line 3 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1363,7 +1362,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/share/bison.simple\"\n+#line 196 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -1668,14 +1667,14 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 240 \"c-parse.y\"\n+#line 239 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids an empty source file\");\n \t\t  finish_file ();\n \t\t;\n     break;}\n case 2:\n-#line 245 \"c-parse.y\"\n+#line 244 \"c-parse.y\"\n {\n \t\t  /* In case there were missing closebraces,\n \t\t     get us back to the global binding level.  */\n@@ -1685,15 +1684,15 @@ case 2:\n \t\t;\n     break;}\n case 3:\n-#line 259 \"c-parse.y\"\n+#line 258 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 5:\n-#line 260 \"c-parse.y\"\n+#line 259 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 9:\n-#line 267 \"c-parse.y\"\n+#line 266 \"c-parse.y\"\n { STRIP_NOPS (yyvsp[-2].ttype);\n \t\t  if ((TREE_CODE (yyvsp[-2].ttype) == ADDR_EXPR\n \t\t       && TREE_CODE (TREE_OPERAND (yyvsp[-2].ttype, 0)) == STRING_CST)\n@@ -1703,11 +1702,11 @@ case 9:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 10:\n-#line 275 \"c-parse.y\"\n+#line 274 \"c-parse.y\"\n { pedantic = yyvsp[-1].itype; ;\n     break;}\n case 11:\n-#line 280 \"c-parse.y\"\n+#line 279 \"c-parse.y\"\n { if (pedantic)\n \t\t    error (\"ANSI C forbids data definition with no type or storage class\");\n \t\t  else if (!flag_traditional)\n@@ -1719,170 +1718,170 @@ case 11:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 12:\n-#line 290 \"c-parse.y\"\n+#line 289 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 13:\n-#line 295 \"c-parse.y\"\n+#line 294 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 14:\n-#line 300 \"c-parse.y\"\n+#line 299 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 15:\n-#line 302 \"c-parse.y\"\n+#line 301 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 18:\n-#line 306 \"c-parse.y\"\n+#line 305 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C does not allow extra `;' outside of a function\"); ;\n     break;}\n case 19:\n-#line 312 \"c-parse.y\"\n+#line 311 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 20:\n-#line 317 \"c-parse.y\"\n+#line 316 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 21:\n-#line 319 \"c-parse.y\"\n+#line 318 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 22:\n-#line 325 \"c-parse.y\"\n+#line 324 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 23:\n-#line 330 \"c-parse.y\"\n+#line 329 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 24:\n-#line 335 \"c-parse.y\"\n+#line 334 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 25:\n-#line 337 \"c-parse.y\"\n+#line 336 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 26:\n-#line 343 \"c-parse.y\"\n+#line 342 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 27:\n-#line 348 \"c-parse.y\"\n+#line 347 \"c-parse.y\"\n { if (! start_function (NULL_TREE, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 28:\n-#line 353 \"c-parse.y\"\n+#line 352 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 29:\n-#line 355 \"c-parse.y\"\n+#line 354 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 30:\n-#line 361 \"c-parse.y\"\n+#line 360 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 33:\n-#line 373 \"c-parse.y\"\n+#line 372 \"c-parse.y\"\n { yyval.code = ADDR_EXPR; ;\n     break;}\n case 34:\n-#line 375 \"c-parse.y\"\n+#line 374 \"c-parse.y\"\n { yyval.code = NEGATE_EXPR; ;\n     break;}\n case 35:\n-#line 377 \"c-parse.y\"\n+#line 376 \"c-parse.y\"\n { yyval.code = CONVERT_EXPR; ;\n     break;}\n case 36:\n-#line 379 \"c-parse.y\"\n+#line 378 \"c-parse.y\"\n { yyval.code = PREINCREMENT_EXPR; ;\n     break;}\n case 37:\n-#line 381 \"c-parse.y\"\n+#line 380 \"c-parse.y\"\n { yyval.code = PREDECREMENT_EXPR; ;\n     break;}\n case 38:\n-#line 383 \"c-parse.y\"\n+#line 382 \"c-parse.y\"\n { yyval.code = BIT_NOT_EXPR; ;\n     break;}\n case 39:\n-#line 385 \"c-parse.y\"\n+#line 384 \"c-parse.y\"\n { yyval.code = TRUTH_NOT_EXPR; ;\n     break;}\n case 40:\n-#line 389 \"c-parse.y\"\n+#line 388 \"c-parse.y\"\n { yyval.ttype = build_compound_expr (yyvsp[0].ttype); ;\n     break;}\n case 41:\n-#line 394 \"c-parse.y\"\n+#line 393 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 43:\n-#line 400 \"c-parse.y\"\n+#line 399 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 44:\n-#line 402 \"c-parse.y\"\n+#line 401 \"c-parse.y\"\n { chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 46:\n-#line 408 \"c-parse.y\"\n+#line 407 \"c-parse.y\"\n { yyval.ttype = build_indirect_ref (yyvsp[0].ttype, \"unary *\"); ;\n     break;}\n case 47:\n-#line 411 \"c-parse.y\"\n+#line 410 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 48:\n-#line 414 \"c-parse.y\"\n+#line 413 \"c-parse.y\"\n { yyval.ttype = build_unary_op (yyvsp[-1].code, yyvsp[0].ttype, 0);\n \t\t  overflow_warning (yyval.ttype); ;\n     break;}\n case 49:\n-#line 418 \"c-parse.y\"\n+#line 417 \"c-parse.y\"\n { tree label = lookup_label (yyvsp[0].ttype);\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `&&'\");\n@@ -1897,57 +1896,57 @@ case 49:\n \t\t;\n     break;}\n case 50:\n-#line 446 \"c-parse.y\"\n+#line 445 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == COMPONENT_REF\n \t\t      && DECL_C_BIT_FIELD (TREE_OPERAND (yyvsp[0].ttype, 1)))\n \t\t    error (\"`sizeof' applied to a bit-field\");\n \t\t  yyval.ttype = c_sizeof (TREE_TYPE (yyvsp[0].ttype)); ;\n     break;}\n case 51:\n-#line 452 \"c-parse.y\"\n+#line 451 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_sizeof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 52:\n-#line 455 \"c-parse.y\"\n+#line 454 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof_expr (yyvsp[0].ttype); ;\n     break;}\n case 53:\n-#line 458 \"c-parse.y\"\n+#line 457 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 54:\n-#line 461 \"c-parse.y\"\n+#line 460 \"c-parse.y\"\n { yyval.ttype = build_unary_op (REALPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 55:\n-#line 463 \"c-parse.y\"\n+#line 462 \"c-parse.y\"\n { yyval.ttype = build_unary_op (IMAGPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 56:\n-#line 467 \"c-parse.y\"\n+#line 466 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 57:\n-#line 471 \"c-parse.y\"\n+#line 470 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 59:\n-#line 477 \"c-parse.y\"\n+#line 476 \"c-parse.y\"\n { tree type = groktypename (yyvsp[-2].ttype);\n \t\t  yyval.ttype = build_c_cast (type, yyvsp[0].ttype); ;\n     break;}\n case 60:\n-#line 480 \"c-parse.y\"\n+#line 479 \"c-parse.y\"\n { start_init (NULL_TREE, NULL, 0);\n \t\t  yyvsp[-2].ttype = groktypename (yyvsp[-2].ttype);\n \t\t  really_start_incremental_init (yyvsp[-2].ttype); ;\n     break;}\n case 61:\n-#line 484 \"c-parse.y\"\n+#line 483 \"c-parse.y\"\n { char *name;\n \t\t  tree result = pop_init_level (0);\n \t\t  tree type = yyvsp[-5].ttype;\n@@ -1974,90 +1973,90 @@ case 61:\n \t\t;\n     break;}\n case 63:\n-#line 513 \"c-parse.y\"\n+#line 512 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 64:\n-#line 515 \"c-parse.y\"\n+#line 514 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 65:\n-#line 517 \"c-parse.y\"\n+#line 516 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 66:\n-#line 519 \"c-parse.y\"\n+#line 518 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 67:\n-#line 521 \"c-parse.y\"\n+#line 520 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 68:\n-#line 523 \"c-parse.y\"\n+#line 522 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 69:\n-#line 525 \"c-parse.y\"\n+#line 524 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 70:\n-#line 527 \"c-parse.y\"\n+#line 526 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 71:\n-#line 529 \"c-parse.y\"\n+#line 528 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 72:\n-#line 531 \"c-parse.y\"\n+#line 530 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 73:\n-#line 533 \"c-parse.y\"\n+#line 532 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 74:\n-#line 535 \"c-parse.y\"\n+#line 534 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 75:\n-#line 537 \"c-parse.y\"\n+#line 536 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 76:\n-#line 540 \"c-parse.y\"\n+#line 539 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_false_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ANDIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 77:\n-#line 543 \"c-parse.y\"\n+#line 542 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 78:\n-#line 546 \"c-parse.y\"\n+#line 545 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_true_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ORIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 79:\n-#line 549 \"c-parse.y\"\n+#line 548 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 80:\n-#line 552 \"c-parse.y\"\n+#line 551 \"c-parse.y\"\n { skip_evaluation += ((yyvsp[-4].ttype == boolean_true_node)\n \t\t\t\t      - (yyvsp[-4].ttype == boolean_false_node)); ;\n     break;}\n case 81:\n-#line 555 \"c-parse.y\"\n+#line 554 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-6].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-6].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 82:\n-#line 558 \"c-parse.y\"\n+#line 557 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids omitting the middle term of a ?: expression\");\n \t\t  /* Make sure first operand is calculated only once.  */\n@@ -2066,23 +2065,23 @@ case 82:\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 83:\n-#line 565 \"c-parse.y\"\n+#line 564 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-4].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-4].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 84:\n-#line 568 \"c-parse.y\"\n+#line 567 \"c-parse.y\"\n { yyval.ttype = build_modify_expr (yyvsp[-2].ttype, NOP_EXPR, yyvsp[0].ttype);\n \t\t  C_SET_EXP_ORIGINAL_CODE (yyval.ttype, MODIFY_EXPR); ;\n     break;}\n case 85:\n-#line 571 \"c-parse.y\"\n+#line 570 \"c-parse.y\"\n { yyval.ttype = build_modify_expr (yyvsp[-2].ttype, yyvsp[-1].code, yyvsp[0].ttype);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n \t\t  C_SET_EXP_ORIGINAL_CODE (yyval.ttype, ERROR_MARK); ;\n     break;}\n case 86:\n-#line 578 \"c-parse.y\"\n+#line 577 \"c-parse.y\"\n {\n \t\t  yyval.ttype = lastiddecl;\n \t\t  if (!yyval.ttype || yyval.ttype == error_mark_node)\n@@ -2182,23 +2181,23 @@ case 86:\n \t\t;\n     break;}\n case 88:\n-#line 677 \"c-parse.y\"\n+#line 676 \"c-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 89:\n-#line 679 \"c-parse.y\"\n+#line 678 \"c-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 90:\n-#line 685 \"c-parse.y\"\n+#line 684 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 91:\n-#line 687 \"c-parse.y\"\n+#line 686 \"c-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -2214,7 +2213,7 @@ case 91:\n \t\t  yyval.ttype = expand_start_stmt_expr (); ;\n     break;}\n case 92:\n-#line 701 \"c-parse.y\"\n+#line 700 \"c-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2239,78 +2238,78 @@ case 92:\n \t\t;\n     break;}\n case 93:\n-#line 724 \"c-parse.y\"\n+#line 723 \"c-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 94:\n-#line 726 \"c-parse.y\"\n+#line 725 \"c-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 95:\n-#line 728 \"c-parse.y\"\n+#line 727 \"c-parse.y\"\n {\n \t\t    yyval.ttype = build_component_ref (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 96:\n-#line 732 \"c-parse.y\"\n+#line 731 \"c-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n                     yyval.ttype = build_component_ref (expr, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 97:\n-#line 738 \"c-parse.y\"\n+#line 737 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 98:\n-#line 740 \"c-parse.y\"\n+#line 739 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 100:\n-#line 747 \"c-parse.y\"\n+#line 746 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 103:\n-#line 756 \"c-parse.y\"\n+#line 755 \"c-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 104:\n-#line 766 \"c-parse.y\"\n+#line 765 \"c-parse.y\"\n { ;\n     break;}\n case 109:\n-#line 782 \"c-parse.y\"\n+#line 781 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 110:\n-#line 787 \"c-parse.y\"\n+#line 786 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 111:\n-#line 792 \"c-parse.y\"\n+#line 791 \"c-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 112:\n-#line 795 \"c-parse.y\"\n+#line 794 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 113:\n-#line 804 \"c-parse.y\"\n+#line 803 \"c-parse.y\"\n { ;\n     break;}\n case 118:\n-#line 819 \"c-parse.y\"\n+#line 818 \"c-parse.y\"\n { yyval.itype = suspend_momentary ();\n \t\t  pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n@@ -2320,270 +2319,270 @@ case 118:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 119:\n-#line 830 \"c-parse.y\"\n+#line 829 \"c-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 120:\n-#line 835 \"c-parse.y\"\n+#line 834 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 121:\n-#line 840 \"c-parse.y\"\n+#line 839 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 122:\n-#line 845 \"c-parse.y\"\n+#line 844 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 123:\n-#line 850 \"c-parse.y\"\n+#line 849 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 124:\n-#line 855 \"c-parse.y\"\n+#line 854 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 125:\n-#line 857 \"c-parse.y\"\n+#line 856 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 126:\n-#line 859 \"c-parse.y\"\n+#line 858 \"c-parse.y\"\n { pedantic = yyvsp[-1].itype; ;\n     break;}\n case 127:\n-#line 869 \"c-parse.y\"\n+#line 868 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 128:\n-#line 871 \"c-parse.y\"\n+#line 870 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 129:\n-#line 875 \"c-parse.y\"\n+#line 874 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 130:\n-#line 877 \"c-parse.y\"\n+#line 876 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 131:\n-#line 879 \"c-parse.y\"\n+#line 878 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 132:\n-#line 884 \"c-parse.y\"\n+#line 883 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 133:\n-#line 889 \"c-parse.y\"\n+#line 888 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 134:\n-#line 891 \"c-parse.y\"\n+#line 890 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 135:\n-#line 896 \"c-parse.y\"\n+#line 895 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 136:\n-#line 898 \"c-parse.y\"\n+#line 897 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 137:\n-#line 900 \"c-parse.y\"\n+#line 899 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 913 \"c-parse.y\"\n+#line 912 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 139:\n-#line 915 \"c-parse.y\"\n+#line 914 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 140:\n-#line 917 \"c-parse.y\"\n+#line 916 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 141:\n-#line 919 \"c-parse.y\"\n+#line 918 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 924 \"c-parse.y\"\n+#line 923 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 143:\n-#line 927 \"c-parse.y\"\n+#line 926 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 144:\n-#line 929 \"c-parse.y\"\n+#line 928 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 145:\n-#line 932 \"c-parse.y\"\n+#line 931 \"c-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 146:\n-#line 946 \"c-parse.y\"\n+#line 945 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 147:\n-#line 948 \"c-parse.y\"\n+#line 947 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 148:\n-#line 952 \"c-parse.y\"\n+#line 951 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 149:\n-#line 954 \"c-parse.y\"\n+#line 953 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 152:\n-#line 964 \"c-parse.y\"\n+#line 963 \"c-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 153:\n-#line 968 \"c-parse.y\"\n+#line 967 \"c-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 154:\n-#line 970 \"c-parse.y\"\n+#line 969 \"c-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 162:\n-#line 992 \"c-parse.y\"\n+#line 991 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 163:\n-#line 994 \"c-parse.y\"\n+#line 993 \"c-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 164:\n-#line 1001 \"c-parse.y\"\n+#line 1000 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 165:\n-#line 1006 \"c-parse.y\"\n+#line 1005 \"c-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 166:\n-#line 1009 \"c-parse.y\"\n+#line 1008 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 167:\n-#line 1017 \"c-parse.y\"\n+#line 1016 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 168:\n-#line 1022 \"c-parse.y\"\n+#line 1021 \"c-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 169:\n-#line 1026 \"c-parse.y\"\n+#line 1025 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 170:\n-#line 1034 \"c-parse.y\"\n+#line 1033 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 171:\n-#line 1036 \"c-parse.y\"\n+#line 1035 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 172:\n-#line 1041 \"c-parse.y\"\n+#line 1040 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 173:\n-#line 1043 \"c-parse.y\"\n+#line 1042 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 174:\n-#line 1048 \"c-parse.y\"\n+#line 1047 \"c-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 175:\n-#line 1053 \"c-parse.y\"\n+#line 1052 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 176:\n-#line 1055 \"c-parse.y\"\n+#line 1054 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 177:\n-#line 1060 \"c-parse.y\"\n+#line 1059 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 178:\n-#line 1062 \"c-parse.y\"\n+#line 1061 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 179:\n-#line 1064 \"c-parse.y\"\n+#line 1063 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 180:\n-#line 1066 \"c-parse.y\"\n+#line 1065 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 181:\n-#line 1068 \"c-parse.y\"\n+#line 1067 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 187:\n-#line 1086 \"c-parse.y\"\n+#line 1085 \"c-parse.y\"\n { really_start_incremental_init (NULL_TREE);\n \t\t  /* Note that the call to clear_momentary\n \t\t     is in process_init_element.  */\n \t\t  push_momentary (); ;\n     break;}\n case 188:\n-#line 1091 \"c-parse.y\"\n+#line 1090 \"c-parse.y\"\n { yyval.ttype = pop_init_level (0);\n \t\t  if (yyval.ttype == error_mark_node\n \t\t      && ! (yychar == STRING || yychar == CONSTANT))\n@@ -2592,48 +2591,48 @@ case 188:\n \t\t    pop_momentary_nofree (); ;\n     break;}\n case 189:\n-#line 1099 \"c-parse.y\"\n+#line 1098 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 190:\n-#line 1105 \"c-parse.y\"\n+#line 1104 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 194:\n-#line 1119 \"c-parse.y\"\n+#line 1118 \"c-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 195:\n-#line 1121 \"c-parse.y\"\n+#line 1120 \"c-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 196:\n-#line 1123 \"c-parse.y\"\n+#line 1122 \"c-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 198:\n-#line 1129 \"c-parse.y\"\n+#line 1128 \"c-parse.y\"\n { set_init_index (yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 200:\n-#line 1132 \"c-parse.y\"\n+#line 1131 \"c-parse.y\"\n { set_init_index (yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 202:\n-#line 1135 \"c-parse.y\"\n+#line 1134 \"c-parse.y\"\n { set_init_index (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 204:\n-#line 1138 \"c-parse.y\"\n+#line 1137 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 206:\n-#line 1141 \"c-parse.y\"\n+#line 1140 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 208:\n-#line 1147 \"c-parse.y\"\n+#line 1146 \"c-parse.y\"\n { push_c_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n@@ -2644,16 +2643,16 @@ case 208:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 209:\n-#line 1156 \"c-parse.y\"\n+#line 1155 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 210:\n-#line 1164 \"c-parse.y\"\n+#line 1163 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_c_function_context (); ;\n     break;}\n case 211:\n-#line 1170 \"c-parse.y\"\n+#line 1169 \"c-parse.y\"\n { push_c_function_context ();\n \t\t  if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n@@ -2664,328 +2663,328 @@ case 211:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 212:\n-#line 1179 \"c-parse.y\"\n+#line 1178 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 213:\n-#line 1187 \"c-parse.y\"\n+#line 1186 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_c_function_context (); ;\n     break;}\n case 216:\n-#line 1203 \"c-parse.y\"\n+#line 1202 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 217:\n-#line 1205 \"c-parse.y\"\n+#line 1204 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 218:\n-#line 1210 \"c-parse.y\"\n+#line 1209 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 219:\n-#line 1212 \"c-parse.y\"\n+#line 1211 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 220:\n-#line 1214 \"c-parse.y\"\n+#line 1213 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 221:\n-#line 1221 \"c-parse.y\"\n+#line 1220 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 223:\n-#line 1232 \"c-parse.y\"\n+#line 1231 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 224:\n-#line 1237 \"c-parse.y\"\n+#line 1236 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 225:\n-#line 1239 \"c-parse.y\"\n+#line 1238 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 226:\n-#line 1241 \"c-parse.y\"\n+#line 1240 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 227:\n-#line 1248 \"c-parse.y\"\n+#line 1247 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 229:\n-#line 1257 \"c-parse.y\"\n+#line 1256 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 230:\n-#line 1262 \"c-parse.y\"\n+#line 1261 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 231:\n-#line 1264 \"c-parse.y\"\n+#line 1263 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 232:\n-#line 1266 \"c-parse.y\"\n+#line 1265 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 233:\n-#line 1268 \"c-parse.y\"\n+#line 1267 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 234:\n-#line 1275 \"c-parse.y\"\n+#line 1274 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 236:\n-#line 1281 \"c-parse.y\"\n+#line 1280 \"c-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 237:\n-#line 1285 \"c-parse.y\"\n+#line 1284 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 238:\n-#line 1287 \"c-parse.y\"\n+#line 1286 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 239:\n-#line 1291 \"c-parse.y\"\n+#line 1290 \"c-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 240:\n-#line 1293 \"c-parse.y\"\n+#line 1292 \"c-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 241:\n-#line 1295 \"c-parse.y\"\n+#line 1294 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 242:\n-#line 1297 \"c-parse.y\"\n+#line 1296 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 243:\n-#line 1301 \"c-parse.y\"\n+#line 1300 \"c-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 244:\n-#line 1303 \"c-parse.y\"\n+#line 1302 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 245:\n-#line 1306 \"c-parse.y\"\n+#line 1305 \"c-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), yyvsp[0].ttype);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 246:\n-#line 1309 \"c-parse.y\"\n+#line 1308 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 247:\n-#line 1312 \"c-parse.y\"\n+#line 1311 \"c-parse.y\"\n { yyval.ttype = finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), yyvsp[0].ttype);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 248:\n-#line 1315 \"c-parse.y\"\n+#line 1314 \"c-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 252:\n-#line 1326 \"c-parse.y\"\n+#line 1325 \"c-parse.y\"\n { if (pedantic) pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 253:\n-#line 1331 \"c-parse.y\"\n+#line 1330 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 254:\n-#line 1333 \"c-parse.y\"\n+#line 1332 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 255:\n-#line 1338 \"c-parse.y\"\n+#line 1337 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 256:\n-#line 1340 \"c-parse.y\"\n+#line 1339 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 257:\n-#line 1342 \"c-parse.y\"\n+#line 1341 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 258:\n-#line 1357 \"c-parse.y\"\n+#line 1356 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 259:\n-#line 1363 \"c-parse.y\"\n+#line 1362 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1368 \"c-parse.y\"\n+#line 1367 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 261:\n-#line 1374 \"c-parse.y\"\n+#line 1373 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1379 \"c-parse.y\"\n+#line 1378 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1381 \"c-parse.y\"\n+#line 1380 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 265:\n-#line 1388 \"c-parse.y\"\n+#line 1387 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 266:\n-#line 1393 \"c-parse.y\"\n+#line 1392 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 267:\n-#line 1397 \"c-parse.y\"\n+#line 1396 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 268:\n-#line 1400 \"c-parse.y\"\n+#line 1399 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 270:\n-#line 1412 \"c-parse.y\"\n+#line 1411 \"c-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 271:\n-#line 1417 \"c-parse.y\"\n+#line 1416 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 272:\n-#line 1423 \"c-parse.y\"\n+#line 1422 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 273:\n-#line 1425 \"c-parse.y\"\n+#line 1424 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 274:\n-#line 1430 \"c-parse.y\"\n+#line 1429 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 275:\n-#line 1432 \"c-parse.y\"\n+#line 1431 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 276:\n-#line 1437 \"c-parse.y\"\n+#line 1436 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 278:\n-#line 1443 \"c-parse.y\"\n+#line 1442 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 279:\n-#line 1445 \"c-parse.y\"\n+#line 1444 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 280:\n-#line 1450 \"c-parse.y\"\n+#line 1449 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 281:\n-#line 1452 \"c-parse.y\"\n+#line 1451 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 282:\n-#line 1457 \"c-parse.y\"\n+#line 1456 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 283:\n-#line 1460 \"c-parse.y\"\n+#line 1459 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 284:\n-#line 1462 \"c-parse.y\"\n+#line 1461 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 285:\n-#line 1464 \"c-parse.y\"\n+#line 1463 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 286:\n-#line 1466 \"c-parse.y\"\n+#line 1465 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 287:\n-#line 1468 \"c-parse.y\"\n+#line 1467 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 288:\n-#line 1470 \"c-parse.y\"\n+#line 1469 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 289:\n-#line 1472 \"c-parse.y\"\n+#line 1471 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 290:\n-#line 1474 \"c-parse.y\"\n+#line 1473 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 291:\n-#line 1485 \"c-parse.y\"\n+#line 1484 \"c-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 293:\n-#line 1494 \"c-parse.y\"\n+#line 1493 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 294:\n-#line 1496 \"c-parse.y\"\n+#line 1495 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 298:\n-#line 1508 \"c-parse.y\"\n+#line 1507 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -2994,12 +2993,12 @@ case 298:\n \t\t;\n     break;}\n case 300:\n-#line 1521 \"c-parse.y\"\n+#line 1520 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 303:\n-#line 1532 \"c-parse.y\"\n+#line 1531 \"c-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3010,19 +3009,19 @@ case 303:\n \t\t;\n     break;}\n case 304:\n-#line 1546 \"c-parse.y\"\n+#line 1545 \"c-parse.y\"\n {;\n     break;}\n case 306:\n-#line 1550 \"c-parse.y\"\n+#line 1549 \"c-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 307:\n-#line 1553 \"c-parse.y\"\n+#line 1552 \"c-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 308:\n-#line 1555 \"c-parse.y\"\n+#line 1554 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0);\n@@ -3032,7 +3031,7 @@ case 308:\n \t\t    pop_momentary (); ;\n     break;}\n case 309:\n-#line 1563 \"c-parse.y\"\n+#line 1562 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3042,7 +3041,7 @@ case 309:\n \t\t    pop_momentary (); ;\n     break;}\n case 310:\n-#line 1571 \"c-parse.y\"\n+#line 1570 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3052,7 +3051,7 @@ case 310:\n \t\t    pop_momentary (); ;\n     break;}\n case 313:\n-#line 1591 \"c-parse.y\"\n+#line 1590 \"c-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3062,7 +3061,7 @@ case 313:\n \t\t  position_after_white_space (); ;\n     break;}\n case 314:\n-#line 1605 \"c-parse.y\"\n+#line 1604 \"c-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3072,43 +3071,43 @@ case 314:\n \t\t  position_after_white_space (); ;\n     break;}\n case 315:\n-#line 1613 \"c-parse.y\"\n+#line 1612 \"c-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 316:\n-#line 1617 \"c-parse.y\"\n+#line 1616 \"c-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 317:\n-#line 1621 \"c-parse.y\"\n+#line 1620 \"c-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 318:\n-#line 1626 \"c-parse.y\"\n+#line 1625 \"c-parse.y\"\n { ;\n     break;}\n case 319:\n-#line 1631 \"c-parse.y\"\n+#line 1630 \"c-parse.y\"\n { ;\n     break;}\n case 320:\n-#line 1636 \"c-parse.y\"\n+#line 1635 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 321:\n-#line 1641 \"c-parse.y\"\n+#line 1640 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 322:\n-#line 1643 \"c-parse.y\"\n+#line 1642 \"c-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 323:\n-#line 1649 \"c-parse.y\"\n+#line 1648 \"c-parse.y\"\n { stmt_count++; ;\n     break;}\n case 325:\n-#line 1652 \"c-parse.y\"\n+#line 1651 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3127,19 +3126,19 @@ case 325:\n \t\t  clear_momentary (); ;\n     break;}\n case 326:\n-#line 1669 \"c-parse.y\"\n+#line 1668 \"c-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 327:\n-#line 1673 \"c-parse.y\"\n+#line 1672 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 328:\n-#line 1677 \"c-parse.y\"\n+#line 1676 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3150,11 +3149,11 @@ case 328:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 329:\n-#line 1689 \"c-parse.y\"\n+#line 1688 \"c-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 330:\n-#line 1691 \"c-parse.y\"\n+#line 1690 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3166,7 +3165,7 @@ case 330:\n \t\t  emit_nop (); ;\n     break;}\n case 331:\n-#line 1701 \"c-parse.y\"\n+#line 1700 \"c-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3177,24 +3176,24 @@ case 331:\n \t\t  position_after_white_space (); ;\n     break;}\n case 332:\n-#line 1710 \"c-parse.y\"\n+#line 1709 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 333:\n-#line 1713 \"c-parse.y\"\n+#line 1712 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 334:\n-#line 1720 \"c-parse.y\"\n+#line 1719 \"c-parse.y\"\n { expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 335:\n-#line 1724 \"c-parse.y\"\n+#line 1723 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3207,12 +3206,12 @@ case 335:\n \t\t;\n     break;}\n case 336:\n-#line 1736 \"c-parse.y\"\n+#line 1735 \"c-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 337:\n-#line 1739 \"c-parse.y\"\n+#line 1738 \"c-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3230,7 +3229,7 @@ case 337:\n \t\t  position_after_white_space (); ;\n     break;}\n case 338:\n-#line 1755 \"c-parse.y\"\n+#line 1754 \"c-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -3243,7 +3242,7 @@ case 338:\n \t\t  expand_end_loop (); ;\n     break;}\n case 339:\n-#line 1766 \"c-parse.y\"\n+#line 1765 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n@@ -3253,41 +3252,41 @@ case 339:\n \t\t  position_after_white_space (); ;\n     break;}\n case 340:\n-#line 1774 \"c-parse.y\"\n+#line 1773 \"c-parse.y\"\n { expand_end_case (yyvsp[-3].ttype);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); ;\n     break;}\n case 341:\n-#line 1780 \"c-parse.y\"\n+#line 1779 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 342:\n-#line 1785 \"c-parse.y\"\n+#line 1784 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 343:\n-#line 1790 \"c-parse.y\"\n+#line 1789 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 344:\n-#line 1794 \"c-parse.y\"\n+#line 1793 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 345:\n-#line 1798 \"c-parse.y\"\n+#line 1797 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3299,31 +3298,31 @@ case 345:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 346:\n-#line 1809 \"c-parse.y\"\n+#line 1808 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 347:\n-#line 1816 \"c-parse.y\"\n+#line 1815 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 348:\n-#line 1824 \"c-parse.y\"\n+#line 1823 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 349:\n-#line 1830 \"c-parse.y\"\n+#line 1829 \"c-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3336,15 +3335,15 @@ case 349:\n \t\t;\n     break;}\n case 350:\n-#line 1841 \"c-parse.y\"\n+#line 1840 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 353:\n-#line 1856 \"c-parse.y\"\n+#line 1855 \"c-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3367,14 +3366,14 @@ case 353:\n \t  ;\n     break;}\n case 354:\n-#line 1877 \"c-parse.y\"\n+#line 1876 \"c-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 355:\n-#line 1912 \"c-parse.y\"\n+#line 1911 \"c-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -3401,7 +3400,7 @@ case 355:\n \t\t  position_after_white_space (); ;\n     break;}\n case 356:\n-#line 1937 \"c-parse.y\"\n+#line 1936 \"c-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -3434,7 +3433,7 @@ case 356:\n \t\t  position_after_white_space (); ;\n     break;}\n case 357:\n-#line 1968 \"c-parse.y\"\n+#line 1967 \"c-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -3451,7 +3450,7 @@ case 357:\n \t\t  position_after_white_space (); ;\n     break;}\n case 358:\n-#line 1983 \"c-parse.y\"\n+#line 1982 \"c-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -3460,52 +3459,52 @@ case 358:\n \t\t  position_after_white_space (); ;\n     break;}\n case 359:\n-#line 1995 \"c-parse.y\"\n+#line 1994 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 360:\n-#line 1998 \"c-parse.y\"\n+#line 1997 \"c-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 361:\n-#line 2003 \"c-parse.y\"\n+#line 2002 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 363:\n-#line 2010 \"c-parse.y\"\n+#line 2009 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 366:\n-#line 2017 \"c-parse.y\"\n+#line 2016 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 367:\n-#line 2022 \"c-parse.y\"\n+#line 2021 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 368:\n-#line 2027 \"c-parse.y\"\n+#line 2026 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 369:\n-#line 2029 \"c-parse.y\"\n+#line 2028 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 370:\n-#line 2035 \"c-parse.y\"\n+#line 2034 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 371:\n-#line 2039 \"c-parse.y\"\n+#line 2038 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 373:\n-#line 2047 \"c-parse.y\"\n+#line 2046 \"c-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -3515,19 +3514,19 @@ case 373:\n \t\t  clear_parm_order (); ;\n     break;}\n case 374:\n-#line 2055 \"c-parse.y\"\n+#line 2054 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 375:\n-#line 2057 \"c-parse.y\"\n+#line 2056 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 376:\n-#line 2063 \"c-parse.y\"\n+#line 2062 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 377:\n-#line 2065 \"c-parse.y\"\n+#line 2064 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -3539,23 +3538,23 @@ case 377:\n \t\t;\n     break;}\n case 378:\n-#line 2075 \"c-parse.y\"\n+#line 2074 \"c-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 379:\n-#line 2077 \"c-parse.y\"\n+#line 2076 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 380:\n-#line 2082 \"c-parse.y\"\n+#line 2081 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 381:\n-#line 2084 \"c-parse.y\"\n+#line 2083 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 382:\n-#line 2091 \"c-parse.y\"\n+#line 2090 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3566,7 +3565,7 @@ case 382:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 383:\n-#line 2100 \"c-parse.y\"\n+#line 2099 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3577,7 +3576,7 @@ case 383:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 384:\n-#line 2109 \"c-parse.y\"\n+#line 2108 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3588,7 +3587,7 @@ case 384:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 385:\n-#line 2118 \"c-parse.y\"\n+#line 2117 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3599,7 +3598,7 @@ case 385:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 386:\n-#line 2128 \"c-parse.y\"\n+#line 2127 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3610,49 +3609,49 @@ case 386:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 387:\n-#line 2142 \"c-parse.y\"\n+#line 2141 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 388:\n-#line 2146 \"c-parse.y\"\n+#line 2145 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 390:\n-#line 2154 \"c-parse.y\"\n+#line 2153 \"c-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 391:\n-#line 2164 \"c-parse.y\"\n+#line 2163 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 392:\n-#line 2166 \"c-parse.y\"\n+#line 2165 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 393:\n-#line 2172 \"c-parse.y\"\n+#line 2171 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 394:\n-#line 2174 \"c-parse.y\"\n+#line 2173 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 395:\n-#line 2179 \"c-parse.y\"\n+#line 2178 \"c-parse.y\"\n { yyval.itype = pedantic;\n \t\t  pedantic = 0; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/share/bison.simple\"\n+#line 498 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -3848,5 +3847,5 @@ case 395:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2183 \"c-parse.y\"\n+#line 2182 \"c-parse.y\"\n "}, {"sha": "c870557624386707d6a64565d897e9f059436e09", "filename": "gcc/c-parse.in", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=990ac8d73027611ce75c76a6bd26eb1c0043a278", "patch": "@@ -69,6 +69,7 @@ end ifc\n #include \"c-lex.h\"\n #include \"c-tree.h\"\n #include \"flags.h\"\n+#include \"output.h\"\n \n #ifdef MULTIBYTE_CHARS\n #include <stdlib.h>\n@@ -92,8 +93,6 @@ end ifc\n extern int errno;\n #endif\n \n-void yyerror ();\n-\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n \n@@ -270,7 +269,7 @@ end ifobjc\n /* Tell yyparse how to print a token's value, if yydebug is set.  */\n \n #define YYPRINT(FILE,YYCHAR,YYLVAL) yyprint(FILE,YYCHAR,YYLVAL)\n-extern void yyprint ();\n+extern void yyprint\t\t\tPROTO ((FILE *, int, YYSTYPE));\n %}\n \f\n %%\n@@ -2726,20 +2725,28 @@ semi_or_error:\n methodproto:\n \t  '+'\n \t\t{\n+\t\t  /* Remember protocol qualifiers in prototypes.  */\n+\t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = CLASS_METHOD_DECL;\n \t\t}\n \t  methoddecl\n \t\t{\n+\t\t  /* Forget protocol qualifiers here.  */\n+\t\t  forget_protocol_qualifiers ();\n \t\t  add_class_method (objc_interface_context, $3);\n \t\t}\n \t  semi_or_error\n \n \t| '-'\n \t\t{\n+\t\t  /* Remember protocol qualifiers in prototypes.  */\n+\t\t  remember_protocol_qualifiers ();\n \t\t  objc_inherit_code = INSTANCE_METHOD_DECL;\n \t\t}\n \t  methoddecl\n \t\t{\n+\t\t  /* Forget protocol qualifiers here.  */\n+\t\t  forget_protocol_qualifiers ();\n \t\t  add_instance_method (objc_interface_context, $3);\n \t\t}\n \t  semi_or_error"}, {"sha": "bb783f0acf692d00881efaa00d117cd37ab61468", "filename": "gcc/c-parse.y", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=990ac8d73027611ce75c76a6bd26eb1c0043a278", "patch": "@@ -65,6 +65,7 @@ State 434 contains 2 shift/reduce conflicts.  (Four ways to parse this.)  */\n #include \"c-lex.h\"\n #include \"c-tree.h\"\n #include \"flags.h\"\n+#include \"output.h\"\n \n #ifdef MULTIBYTE_CHARS\n #include <stdlib.h>\n@@ -80,8 +81,6 @@ char *language_string = \"GNU C\";\n extern int errno;\n #endif\n \n-void yyerror ();\n-\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n \n@@ -232,7 +231,7 @@ static int undeclared_variable_notice;\n /* Tell yyparse how to print a token's value, if yydebug is set.  */\n \n #define YYPRINT(FILE,YYCHAR,YYLVAL) yyprint(FILE,YYCHAR,YYLVAL)\n-extern void yyprint ();\n+extern void yyprint\t\t\tPROTO ((FILE *, int, YYSTYPE));\n %}\n \f\n %%"}, {"sha": "dde94809539f45c584c0c850cf6ce347e88c566c", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=990ac8d73027611ce75c76a6bd26eb1c0043a278", "patch": "@@ -141,7 +141,7 @@ int objc_public_flag;\n /* Tell yyparse how to print a token's value, if yydebug is set.  */\n \n #define YYPRINT(FILE,YYCHAR,YYLVAL) yyprint(FILE,YYCHAR,YYLVAL)\n-extern void yyprint \t\t\tPROTO ((FILE *, int, YYSTYPE));\n+extern void yyprint\t\t\tPROTO ((FILE *, int, YYSTYPE));\n #include <stdio.h>\n \n #ifndef __cplusplus\n@@ -1638,7 +1638,7 @@ static const short yycheck[] = {     9,\n     48,    49,    50,    51,    52\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/bison.simple\"\n+#line 3 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1831,7 +1831,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/share/bison.simple\"\n+#line 196 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2609,7 +2609,7 @@ case 89:\n \t\t\t      if (IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype) != error_mark_node\n \t\t\t\t  || IDENTIFIER_ERROR_LOCUS (yyvsp[0].ttype) != current_function_decl)\n \t\t\t\t{\n-\t\t\t\t  error (\"`%s' undeclared (first use this function)\",\n+\t\t\t\t  error (\"`%s' undeclared (first use in this function)\",\n \t\t\t\t\t IDENTIFIER_POINTER (yyvsp[0].ttype));\n \n \t\t\t\t  if (! undeclared_variable_notice)\n@@ -4911,7 +4911,7 @@ case 556:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/share/bison.simple\"\n+#line 498 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;"}, {"sha": "115547325d4fc3ce18bf2833fc1845eb70074778", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/990ac8d73027611ce75c76a6bd26eb1c0043a278/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=990ac8d73027611ce75c76a6bd26eb1c0043a278", "patch": "@@ -231,7 +231,7 @@ int objc_public_flag;\n /* Tell yyparse how to print a token's value, if yydebug is set.  */\n \n #define YYPRINT(FILE,YYCHAR,YYLVAL) yyprint(FILE,YYCHAR,YYLVAL)\n-extern void yyprint \t\t\tPROTO ((FILE *, int, YYSTYPE));\n+extern void yyprint\t\t\tPROTO ((FILE *, int, YYSTYPE));\n %}\n \f\n %%\n@@ -635,7 +635,7 @@ primary:\n \t\t\t      if (IDENTIFIER_GLOBAL_VALUE ($1) != error_mark_node\n \t\t\t\t  || IDENTIFIER_ERROR_LOCUS ($1) != current_function_decl)\n \t\t\t\t{\n-\t\t\t\t  error (\"`%s' undeclared (first use this function)\",\n+\t\t\t\t  error (\"`%s' undeclared (first use in this function)\",\n \t\t\t\t\t IDENTIFIER_POINTER ($1));\n \n \t\t\t\t  if (! undeclared_variable_notice)"}]}