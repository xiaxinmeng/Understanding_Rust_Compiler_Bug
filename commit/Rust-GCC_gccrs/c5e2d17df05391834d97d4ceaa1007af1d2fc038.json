{"sha": "c5e2d17df05391834d97d4ceaa1007af1d2fc038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVlMmQxN2RmMDUzOTE4MzRkOTdkNGNlYWExMDA3YWYxZDJmYzAzOA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-04-17T05:22:19Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-04-17T05:22:19Z"}, "message": "Add debug_varinfo and debug_varmap\n\n2016-04-17  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/70256\n\t* tree-ssa-structalias.c (dump_varinfo, debug_varinfo, dump_varmap)\n\t(debug_varmap): New function.\n\nFrom-SVN: r235073", "tree": {"sha": "4080653010a4cc36867b96e8a8642620dbad4fc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4080653010a4cc36867b96e8a8642620dbad4fc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5e2d17df05391834d97d4ceaa1007af1d2fc038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e2d17df05391834d97d4ceaa1007af1d2fc038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e2d17df05391834d97d4ceaa1007af1d2fc038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e2d17df05391834d97d4ceaa1007af1d2fc038/comments", "author": null, "committer": null, "parents": [{"sha": "da152c9f7bee5cd40dfcbb4511d882bd65a3d2ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da152c9f7bee5cd40dfcbb4511d882bd65a3d2ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da152c9f7bee5cd40dfcbb4511d882bd65a3d2ae"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "23f04c23dac760a5e621fb15faf3e1d3edbb4e2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e2d17df05391834d97d4ceaa1007af1d2fc038/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e2d17df05391834d97d4ceaa1007af1d2fc038/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5e2d17df05391834d97d4ceaa1007af1d2fc038", "patch": "@@ -1,3 +1,9 @@\n+2016-04-17  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/70256\n+\t* tree-ssa-structalias.c (dump_varinfo, debug_varinfo, dump_varmap)\n+\t(debug_varmap): New function.\n+\n 2016-04-17  Tom de Vries  <tom@codesourcery.com>\n \n \tPR other/70183"}, {"sha": "e88869f0b4318247dd7ecf567aa07d74dcf28208", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e2d17df05391834d97d4ceaa1007af1d2fc038/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e2d17df05391834d97d4ceaa1007af1d2fc038/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=c5e2d17df05391834d97d4ceaa1007af1d2fc038", "patch": "@@ -682,6 +682,8 @@ void debug_constraints (void);\n void debug_constraint_graph (void);\n void debug_solution_for_var (unsigned int);\n void debug_sa_points_to_info (void);\n+void debug_varinfo (varinfo_t);\n+void debug_varmap (void);\n \n /* Print out constraint C to stderr.  */\n \n@@ -7496,6 +7498,112 @@ associate_varinfo_to_alias (struct cgraph_node *node, void *data)\n   return false;\n }\n \n+/* Dump varinfo VI to FILE.  */\n+\n+static void\n+dump_varinfo (FILE *file, varinfo_t vi)\n+{\n+  if (vi == NULL)\n+    return;\n+\n+  fprintf (file, \"%u: %s\\n\", vi->id, vi->name);\n+\n+  const char *sep = \" \";\n+  if (vi->is_artificial_var)\n+    fprintf (file, \"%sartificial\", sep);\n+  if (vi->is_special_var)\n+    fprintf (file, \"%sspecial\", sep);\n+  if (vi->is_unknown_size_var)\n+    fprintf (file, \"%sunknown-size\", sep);\n+  if (vi->is_full_var)\n+    fprintf (file, \"%sfull\", sep);\n+  if (vi->is_heap_var)\n+    fprintf (file, \"%sheap\", sep);\n+  if (vi->may_have_pointers)\n+    fprintf (file, \"%smay-have-pointers\", sep);\n+  if (vi->only_restrict_pointers)\n+    fprintf (file, \"%sonly-restrict-pointers\", sep);\n+  if (vi->is_restrict_var)\n+    fprintf (file, \"%sis-restrict-var\", sep);\n+  if (vi->is_global_var)\n+    fprintf (file, \"%sglobal\", sep);\n+  if (vi->is_ipa_escape_point)\n+    fprintf (file, \"%sipa-escape-point\", sep);\n+  if (vi->is_fn_info)\n+    fprintf (file, \"%sfn-info\", sep);\n+  if (vi->ruid)\n+    fprintf (file, \"%srestrict-uid:%u\", sep, vi->ruid);\n+  if (vi->next)\n+    fprintf (file, \"%snext:%u\", sep, vi->next);\n+  if (vi->head != vi->id)\n+    fprintf (file, \"%shead:%u\", sep, vi->head);\n+  if (vi->offset)\n+    fprintf (file, \"%soffset:\" HOST_WIDE_INT_PRINT_DEC, sep, vi->offset);\n+  if (vi->size != ~(unsigned HOST_WIDE_INT)0)\n+    fprintf (file, \"%ssize:\" HOST_WIDE_INT_PRINT_DEC, sep, vi->size);\n+  if (vi->fullsize != ~(unsigned HOST_WIDE_INT)0\n+      && vi->fullsize != vi->size)\n+    fprintf (file, \"%sfullsize:\" HOST_WIDE_INT_PRINT_DEC, sep,\n+\t     vi->fullsize);\n+  fprintf (file, \"\\n\");\n+\n+  if (vi->solution && !bitmap_empty_p (vi->solution))\n+    {\n+      bitmap_iterator bi;\n+      unsigned i;\n+      fprintf (file, \" solution: {\");\n+      EXECUTE_IF_SET_IN_BITMAP (vi->solution, 0, i, bi)\n+\tfprintf (file, \" %u\", i);\n+      fprintf (file, \" }\\n\");\n+    }\n+\n+  if (vi->oldsolution && !bitmap_empty_p (vi->oldsolution)\n+      && !bitmap_equal_p (vi->solution, vi->oldsolution))\n+    {\n+      bitmap_iterator bi;\n+      unsigned i;\n+      fprintf (file, \" oldsolution: {\");\n+      EXECUTE_IF_SET_IN_BITMAP (vi->oldsolution, 0, i, bi)\n+\tfprintf (file, \" %u\", i);\n+      fprintf (file, \" }\\n\");\n+    }\n+}\n+\n+/* Dump varinfo VI to stderr.  */\n+\n+DEBUG_FUNCTION void\n+debug_varinfo (varinfo_t vi)\n+{\n+  dump_varinfo (stderr, vi);\n+}\n+\n+/* Dump varmap to FILE.  */\n+\n+static void\n+dump_varmap (FILE *file)\n+{\n+  if (varmap.length () == 0)\n+    return;\n+\n+  fprintf (file, \"variables:\\n\");\n+\n+  for (unsigned int i = 0; i < varmap.length (); ++i)\n+    {\n+      varinfo_t vi = get_varinfo (i);\n+      dump_varinfo (file, vi);\n+    }\n+\n+  fprintf (file, \"\\n\");\n+}\n+\n+/* Dump varmap to stderr.  */\n+\n+DEBUG_FUNCTION void\n+debug_varmap (void)\n+{\n+  dump_varmap (stderr);\n+}\n+\n /* Execute the driver for IPA PTA.  */\n static unsigned int\n ipa_pta_execute (void)"}]}