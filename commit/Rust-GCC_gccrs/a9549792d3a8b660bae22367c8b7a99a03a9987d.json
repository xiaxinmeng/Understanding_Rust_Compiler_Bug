{"sha": "a9549792d3a8b660bae22367c8b7a99a03a9987d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk1NDk3OTJkM2E4YjY2MGJhZTIyMzY3YzhiN2E5OWEwM2E5OTg3ZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@inria.fr", "date": "2007-03-16T11:30:48Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2007-03-16T11:30:48Z"}, "message": "re PR tree-optimization/31183 (ICE in int_cst_value, at tree.c:7684   with -O3 -ftree-loop-linear)\n\n\tPR tree-optimization/31183\n\t* tree-loop-linear.c (gather_interchange_stats, try_interchange_loops): \n\tUse double_int instead of unsigned int for representing access_strides.\n\t* testsuite/gcc.dg/tree-ssa/pr31183.c: New.\n\nFrom-SVN: r122988", "tree": {"sha": "5828cf7eb97ac7a4f865bcdde201a2e9412da7fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5828cf7eb97ac7a4f865bcdde201a2e9412da7fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9549792d3a8b660bae22367c8b7a99a03a9987d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9549792d3a8b660bae22367c8b7a99a03a9987d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9549792d3a8b660bae22367c8b7a99a03a9987d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9549792d3a8b660bae22367c8b7a99a03a9987d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "945a98a4b2deb725bdd3f93801a2eeb8e262cca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945a98a4b2deb725bdd3f93801a2eeb8e262cca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/945a98a4b2deb725bdd3f93801a2eeb8e262cca0"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "235258cd3c19f45141a1dfbe18fb11320f047d7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9549792d3a8b660bae22367c8b7a99a03a9987d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9549792d3a8b660bae22367c8b7a99a03a9987d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9549792d3a8b660bae22367c8b7a99a03a9987d", "patch": "@@ -1,3 +1,10 @@\n+2007-03-16  Sebastian Pop  <sebastian.pop@inria.fr>\n+\n+\tPR tree-optimization/31183\n+\t* tree-loop-linear.c (gather_interchange_stats, try_interchange_loops): \n+\tUse double_int instead of unsigned int for representing access_strides.\n+\t* testsuite/gcc.dg/tree-ssa/pr31183.c: New.\n+\n 2007-03-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/31146"}, {"sha": "000d7b5bfc3b16a6125d51cc8070b3da7c578b2c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr31183.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9549792d3a8b660bae22367c8b7a99a03a9987d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr31183.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9549792d3a8b660bae22367c8b7a99a03a9987d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr31183.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr31183.c?ref=a9549792d3a8b660bae22367c8b7a99a03a9987d", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */ \n+/* { dg-options \"-O2 -ftree-loop-linear\" } */\n+\n+int buf[256 * 9];\n+int f() \n+{\n+  int i, j;\n+\n+  for (i = 0; i < 256; ++i)\n+    for (j = 0; j < 8; ++j)\n+      buf[j + 1] = buf[j] + 1;\n+\n+  return buf[10];\n+}"}, {"sha": "76bb2dd1f284bb06e90a78586eb98ce72e79e2b8", "filename": "gcc/tree-loop-linear.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9549792d3a8b660bae22367c8b7a99a03a9987d/gcc%2Ftree-loop-linear.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9549792d3a8b660bae22367c8b7a99a03a9987d/gcc%2Ftree-loop-linear.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-linear.c?ref=a9549792d3a8b660bae22367c8b7a99a03a9987d", "patch": "@@ -95,15 +95,15 @@ gather_interchange_stats (VEC (ddr_p, heap) *dependence_relations,\n \t\t\t  struct loop *first_loop,\n \t\t\t  unsigned int *dependence_steps, \n \t\t\t  unsigned int *nb_deps_not_carried_by_loop, \n-\t\t\t  unsigned int *access_strides)\n+\t\t\t  double_int *access_strides)\n {\n   unsigned int i, j;\n   struct data_dependence_relation *ddr;\n   struct data_reference *dr;\n \n   *dependence_steps = 0;\n   *nb_deps_not_carried_by_loop = 0;\n-  *access_strides = 0;\n+  *access_strides = double_int_zero;\n \n   for (i = 0; VEC_iterate (ddr_p, dependence_relations, i, ddr); i++)\n     {\n@@ -149,15 +149,17 @@ gather_interchange_stats (VEC (ddr_p, heap) *dependence_relations,\n \t  tree chrec = DR_ACCESS_FN (dr, it);\n \t  tree tstride = evolution_part_in_loop_num (chrec, loop->num);\n \t  tree array_size = TYPE_SIZE (TREE_TYPE (ref));\n+\t  double_int dstride;\n \n \t  if (tstride == NULL_TREE\n \t      || array_size == NULL_TREE \n \t      || TREE_CODE (tstride) != INTEGER_CST\n \t      || TREE_CODE (array_size) != INTEGER_CST)\n \t    continue;\n \n-\t  (*access_strides) += \n-\t    int_cst_value (array_size) * int_cst_value (tstride);\n+\t  dstride = double_int_mul (tree_to_double_int (array_size), \n+\t\t\t\t    tree_to_double_int (tstride));\n+\t  (*access_strides) = double_int_add (*access_strides, dstride);\n \t}\n     }\n }\n@@ -180,7 +182,7 @@ try_interchange_loops (lambda_trans_matrix trans,\n   struct loop *loop_i;\n   struct loop *loop_j;\n   unsigned int dependence_steps_i, dependence_steps_j;\n-  unsigned int access_strides_i, access_strides_j;\n+  double_int access_strides_i, access_strides_j;\n   unsigned int nb_deps_not_carried_by_i, nb_deps_not_carried_by_j;\n   struct data_dependence_relation *ddr;\n \n@@ -225,7 +227,7 @@ try_interchange_loops (lambda_trans_matrix trans,\n \t*/\n \tif (dependence_steps_i < dependence_steps_j \n \t    || nb_deps_not_carried_by_i > nb_deps_not_carried_by_j\n-\t    || access_strides_i < access_strides_j)\n+\t    || double_int_ucmp (access_strides_i, access_strides_j) < 0)\n \t  {\n \t    lambda_matrix_row_exchange (LTM_MATRIX (trans),\n \t\t\t\t\tloop_i->depth - first_loop->depth,"}]}