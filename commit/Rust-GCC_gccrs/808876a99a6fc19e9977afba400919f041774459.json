{"sha": "808876a99a6fc19e9977afba400919f041774459", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA4ODc2YTk5YTZmYzE5ZTk5NzdhZmJhNDAwOTE5ZjA0MTc3NDQ1OQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-10-14T13:42:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T13:42:26Z"}, "message": "sem_ch3.adb: Minor fix to error message.\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb: Minor fix to error message.\n\t* a-exexpr-gcc.adb, sem_util.adb, sem_case.adb, exp_ch11.adb: Minor\n\treformatting.\n\nFrom-SVN: r203554", "tree": {"sha": "75a5dc69e760fdf43c1ecb566f7d668ba3f3c0b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75a5dc69e760fdf43c1ecb566f7d668ba3f3c0b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/808876a99a6fc19e9977afba400919f041774459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808876a99a6fc19e9977afba400919f041774459", "html_url": "https://github.com/Rust-GCC/gccrs/commit/808876a99a6fc19e9977afba400919f041774459", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808876a99a6fc19e9977afba400919f041774459/comments", "author": null, "committer": null, "parents": [{"sha": "63bb4268049d7a6a1944c3a15b374bca8ccf2b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63bb4268049d7a6a1944c3a15b374bca8ccf2b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63bb4268049d7a6a1944c3a15b374bca8ccf2b45"}], "stats": {"total": 100, "additions": 50, "deletions": 50}, "files": [{"sha": "b9092f91d670db7cc8ffbce17ab325b0e4375241", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=808876a99a6fc19e9977afba400919f041774459", "patch": "@@ -1,3 +1,9 @@\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb: Minor fix to error message.\n+\t* a-exexpr-gcc.adb, sem_util.adb, sem_case.adb, exp_ch11.adb: Minor\n+\treformatting.\n+\n 2013-10-14  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_ch11.adb: Fix typo."}, {"sha": "98d575810c17e22cbc0598b41bfd796a9858142b", "filename": "gcc/ada/a-exexpr-gcc.adb", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fa-exexpr-gcc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fa-exexpr-gcc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr-gcc.adb?ref=808876a99a6fc19e9977afba400919f041774459", "patch": "@@ -206,7 +206,7 @@ package body Exception_Propagation is\n      (GCC_Exception : not null GCC_Exception_Access) return EOA;\n    pragma Export (C, Setup_Current_Excep, \"__gnat_setup_current_excep\");\n    --  Write Get_Current_Excep.all from GCC_Exception. Called by the\n-   --  personnality routine.\n+   --  personality routine.\n \n    procedure Unhandled_Except_Handler\n      (GCC_Exception : not null GCC_Exception_Access);\n@@ -245,15 +245,16 @@ package body Exception_Propagation is\n    pragma Import (C, Unwind_ForcedUnwind, \"__gnat_Unwind_ForcedUnwind\");\n \n    procedure Set_Exception_Parameter\n-     (Excep : EOA;\n+     (Excep         : EOA;\n       GCC_Exception : not null GCC_Exception_Access);\n-   pragma Export (C, Set_Exception_Parameter,\n-                    \"__gnat_set_exception_parameter\");\n+   pragma Export\n+     (C, Set_Exception_Parameter, \"__gnat_set_exception_parameter\");\n    --  Called inserted by gigi to initialize the exception parameter\n \n    procedure Set_Foreign_Occurrence (Excep : EOA; Mo : System.Address);\n-   --  Utility routine to initialize occurrence Excep for a foreign exception\n-   --  whose machine occurrence is Mo.\n+   --  Utility routine to initialize occurrence Excep from a foreign exception\n+   --  whose machine occurrence is Mo. The message is empty, the backtrace\n+   --  is empty too and the exception identity is Foreign_Exception.\n \n    --  Hooks called when entering/leaving an exception handler for a given\n    --  occurrence, aimed at handling the stack of active occurrences. The\n@@ -356,12 +357,12 @@ package body Exception_Propagation is\n \n    procedure Set_Foreign_Occurrence (Excep : EOA; Mo : System.Address) is\n    begin\n-      Excep.Id := Foreign_Exception'Access;\n+      Excep.Id                 := Foreign_Exception'Access;\n       Excep.Machine_Occurrence := Mo;\n-      Excep.Msg_Length := 0;\n-      Excep.Exception_Raised := True;\n-      Excep.Pid := Local_Partition_ID;\n-      Excep.Num_Tracebacks := 0;\n+      Excep.Msg_Length         := 0;\n+      Excep.Exception_Raised   := True;\n+      Excep.Pid                := Local_Partition_ID;\n+      Excep.Num_Tracebacks     := 0;\n    end Set_Foreign_Occurrence;\n \n    -------------------------\n@@ -382,14 +383,13 @@ package body Exception_Propagation is\n \n          declare\n             GNAT_Occurrence : constant GNAT_GCC_Exception_Access :=\n-              To_GNAT_GCC_Exception (GCC_Exception);\n+                                To_GNAT_GCC_Exception (GCC_Exception);\n          begin\n             Excep.all := GNAT_Occurrence.Occurrence;\n-\n             return GNAT_Occurrence.Occurrence'Access;\n          end;\n-      else\n \n+      else\n          --  A default one\n \n          Set_Foreign_Occurrence (Excep, GCC_Exception.all'Address);\n@@ -491,8 +491,9 @@ package body Exception_Propagation is\n    -----------------------------\n \n    procedure Set_Exception_Parameter\n-     (Excep : EOA;\n-      GCC_Exception : not null GCC_Exception_Access) is\n+     (Excep         : EOA;\n+      GCC_Exception : not null GCC_Exception_Access)\n+   is\n    begin\n       --  Setup the exception occurrence\n \n@@ -506,8 +507,8 @@ package body Exception_Propagation is\n          begin\n             Save_Occurrence (Excep.all, GNAT_Occurrence.Occurrence);\n          end;\n-      else\n \n+      else\n          --  A default one\n \n          Set_Foreign_Occurrence (Excep, GCC_Exception.all'Address);"}, {"sha": "c5abb228a17668d7f95086ff07cc8bfd82f6cdb6", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=808876a99a6fc19e9977afba400919f041774459", "patch": "@@ -1044,7 +1044,7 @@ package body Exp_Ch11 is\n \n                      Save :=\n                        Make_Procedure_Call_Statement (No_Location,\n-                         Name =>\n+                         Name                   =>\n                            New_Occurrence_Of\n                              (RTE (RE_Save_Occurrence), No_Location),\n                          Parameter_Associations => New_List (\n@@ -1061,20 +1061,18 @@ package body Exp_Ch11 is\n                      Prepend (Save, Statements (Handler));\n \n                      Obj_Decl :=\n-                       Make_Object_Declaration\n-                         (Cloc,\n-                          Defining_Identifier => Cparm,\n-                          Object_Definition   =>\n-                            New_Occurrence_Of\n-                              (RTE (RE_Exception_Occurrence), Cloc));\n+                       Make_Object_Declaration (Cloc,\n+                         Defining_Identifier => Cparm,\n+                         Object_Definition   =>\n+                           New_Occurrence_Of\n+                             (RTE (RE_Exception_Occurrence), Cloc));\n                      Set_No_Initialization (Obj_Decl, True);\n \n                      Rewrite (Handler,\n                        Make_Exception_Handler (Hloc,\n                          Choice_Parameter  => Empty,\n                          Exception_Choices => Exception_Choices (Handler),\n-\n-                         Statements => New_List (\n+                         Statements        => New_List (\n                            Make_Block_Statement (Hloc,\n                              Declarations => New_List (Obj_Decl),\n                              Handled_Statement_Sequence =>"}, {"sha": "b3f47a6df9b1cee911b97c000ecda9ca5bd8ccca", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=808876a99a6fc19e9977afba400919f041774459", "patch": "@@ -393,7 +393,7 @@ package body Sem_Case is\n                Prev_Lo := Choice_Lo;\n                Prev_Hi := Choice_Hi;\n \n-               --  Check whether  predicate set is fully covered by choice\n+               --  Check whether predicate set is fully covered by choice\n \n                if Pred_Hi = Choice_Hi then\n                   Next (Pred);"}, {"sha": "f7cb18ce3d5dfc4b1b7564071d0085fccd1d24b5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=808876a99a6fc19e9977afba400919f041774459", "patch": "@@ -982,7 +982,6 @@ package body Sem_Ch3 is\n      (T_Name : Entity_Id;\n       T_Def  : Node_Id)\n    is\n-\n       procedure Check_For_Premature_Usage (Def : Node_Id);\n       --  Check that type T_Name is not used, directly or recursively, as a\n       --  parameter or a return type in Def. Def is either a subtype, an\n@@ -1001,7 +1000,7 @@ package body Sem_Ch3 is\n          if Nkind (Def) in N_Has_Etype then\n             if Etype (Def) = T_Name then\n                Error_Msg_N\n-                 (\"typer cannot be used before end of its declaration\", Def);\n+                 (\"type& cannot be used before end of its declaration\", Def);\n             end if;\n \n          --  If this is not a subtype, then this is an access_definition\n@@ -7341,8 +7340,7 @@ package body Sem_Ch3 is\n          --  declaration.\n \n          if Constraint_Present then\n-            New_Discrs :=\n-              Build_Discriminant_Constraints (Parent_Type, Indic);\n+            New_Discrs := Build_Discriminant_Constraints (Parent_Type, Indic);\n \n          --  If there is no explicit constraint, there might be one that is\n          --  inherited from a constrained parent type. In that case verify that\n@@ -7366,8 +7364,7 @@ package body Sem_Ch3 is\n             --  those given in the partial view.\n \n             declare\n-               C1, C2     : Elmt_Id;\n-               Error_Node : Node_Id;\n+               C1, C2 : Elmt_Id;\n \n             begin\n                C1 := First_Elmt (New_Discrs);\n@@ -7376,22 +7373,21 @@ package body Sem_Ch3 is\n                   if Fully_Conformant_Expressions (Node (C1), Node (C2))\n                     or else\n                       (Is_OK_Static_Expression (Node (C1))\n-                         and then\n-                       Is_OK_Static_Expression (Node (C2))\n-                         and then\n-                       Expr_Value (Node (C1)) = Expr_Value (Node (C2)))\n+                        and then Is_OK_Static_Expression (Node (C2))\n+                        and then\n+                          Expr_Value (Node (C1)) = Expr_Value (Node (C2)))\n                   then\n                      null;\n \n                   else\n                      if Constraint_Present then\n-                        Error_Msg_N (\n-                          \"constraint not conformant to previous declaration\",\n-                             Node (C1));\n+                        Error_Msg_N\n+                          (\"constraint not conformant to previous declaration\",\n+                           Node (C1));\n                      else\n-                        Error_Msg_N (\n-                          \"constraint of full view is incompatible \" &\n-                           \"with partial view\", N);\n+                        Error_Msg_N\n+                          (\"constraint of full view is incompatible \"\n+                           & \"with partial view\", N);\n                      end if;\n                   end if;\n "}, {"sha": "b28c7a2f0c513e45283979716e2c4c7f0efb190f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808876a99a6fc19e9977afba400919f041774459/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=808876a99a6fc19e9977afba400919f041774459", "patch": "@@ -10219,14 +10219,14 @@ package body Sem_Util is\n          S    : Entity_Id;\n \n       begin\n-         if Is_Type (E) then\n-            --  E is the current instance of a type.\n+         --  E is the current instance of a type\n \n+         if Is_Type (E) then\n             Prot := E;\n \n-         else\n-            --  E is an object.\n+         --  E is an object\n \n+         else\n             Prot := Scope (E);\n          end if;\n \n@@ -10353,9 +10353,8 @@ package body Sem_Util is\n               or else  K = E_In_Out_Parameter\n               or else  K = E_Generic_In_Out_Parameter\n \n-               --  Current instance of type. If this is a protected type, check\n-               --  that we are not within the body of one of its protected\n-               --  functions.\n+              --  Current instance of type. If this is a protected type, check\n+              --  we are not within the body of one of its protected functions.\n \n               or else (Is_Type (E)\n                         and then In_Open_Scopes (E)"}]}