{"sha": "7e53359d446a7904474486bfb7c1e947cca326f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U1MzM1OWQ0NDZhNzkwNDQ3NDQ4NmJmYjdjMWU5NDdjY2EzMjZmMw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-05-16T23:41:12Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-05-16T23:41:12Z"}, "message": "avr.c (avr_output_function_prologue, [...]): Fix format specifier warnings.\n\n\t* avr.c (avr_output_function_prologue,\n\tavr_output_function_epilogue, print_operand): Fix format specifier\n\twarnings.\n\t(init_cumulative_args): Mark parameter with ATTRIBUTE_UNUSED.\n\t* avr.h (FUNCTION_VALUE_REGNO_P): Fix signed/unsigned warnings.\n\nFrom-SVN: r66895", "tree": {"sha": "f221c79bd8721174ee68246d30b84d9a5bda8c36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f221c79bd8721174ee68246d30b84d9a5bda8c36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e53359d446a7904474486bfb7c1e947cca326f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e53359d446a7904474486bfb7c1e947cca326f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e53359d446a7904474486bfb7c1e947cca326f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e53359d446a7904474486bfb7c1e947cca326f3/comments", "author": null, "committer": null, "parents": [{"sha": "79406520e945ecace14f56e3af4b88936153649c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79406520e945ecace14f56e3af4b88936153649c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79406520e945ecace14f56e3af4b88936153649c"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "e59d1751f2ea86e7f68f59c3d94d64c9e4fa41f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e53359d446a7904474486bfb7c1e947cca326f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e53359d446a7904474486bfb7c1e947cca326f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e53359d446a7904474486bfb7c1e947cca326f3", "patch": "@@ -1,3 +1,11 @@\n+2003-05-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* avr.c (avr_output_function_prologue,\n+\tavr_output_function_epilogue, print_operand): Fix format specifier\n+\twarnings.\n+\t(init_cumulative_args): Mark parameter with ATTRIBUTE_UNUSED.\n+\t* avr.h (FUNCTION_VALUE_REGNO_P): Fix signed/unsigned warnings.\n+\n 2003-05-16  Geoffrey Keating  <geoffk@apple.com>\n \n \t* doc/cppopts.texi (-undef): Fix texinfo warning."}, {"sha": "5e4f1c0e9bdeeddaed83312167bbd556d0989d2e", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e53359d446a7904474486bfb7c1e947cca326f3/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e53359d446a7904474486bfb7c1e947cca326f3/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=7e53359d446a7904474486bfb7c1e947cca326f3", "patch": "@@ -650,7 +650,8 @@ avr_output_function_prologue (file, size)\n   last_insn_address = 0;\n   jump_tables_size = 0;\n   prologue_size = 0;\n-  fprintf (file, \"/* prologue: frame size=%d */\\n\", size);\n+  fprintf (file, \"/* prologue: frame size=\" HOST_WIDE_INT_PRINT_DEC \" */\\n\",\n+\t   size);\n \n   if (avr_naked_function_p (current_function_decl))\n     {\n@@ -683,8 +684,8 @@ avr_output_function_prologue (file, size)\n   if (main_p)\n     {\n       fprintf (file, (\"\\t\" \n-\t\t      AS2 (ldi,r28,lo8(%s - %d)) CR_TAB\n-\t\t      AS2 (ldi,r29,hi8(%s - %d)) CR_TAB\n+\t\t      AS1 (ldi,r28) \",lo8(%s - \" HOST_WIDE_INT_PRINT_DEC \")\" CR_TAB\n+\t\t      AS1 (ldi,r29) \",hi8(%s - \" HOST_WIDE_INT_PRINT_DEC \")\" CR_TAB\n \t\t      AS2 (out,__SP_H__,r29)     CR_TAB\n \t\t      AS2 (out,__SP_L__,r28) \"\\n\"),\n \t       avr_init_stack, size, avr_init_stack, size);\n@@ -694,8 +695,8 @@ avr_output_function_prologue (file, size)\n   else if (minimize && (frame_pointer_needed || live_seq > 6)) \n     {\n       fprintf (file, (\"\\t\"\n-\t\t      AS2 (ldi, r26, lo8(%d)) CR_TAB\n-\t\t      AS2 (ldi, r27, hi8(%d)) CR_TAB), size, size);\n+\t\t      AS1 (ldi, r26) \",lo8(\" HOST_WIDE_INT_PRINT_DEC \")\" CR_TAB\n+\t\t      AS1 (ldi, r27) \",hi8(\" HOST_WIDE_INT_PRINT_DEC \")\" CR_TAB), size, size);\n \n       fprintf (file, (AS2 (ldi, r30, pm_lo8(.L_%s_body)) CR_TAB\n \t\t      AS2 (ldi, r31, pm_hi8(.L_%s_body)) CR_TAB)\n@@ -789,7 +790,7 @@ avr_output_function_epilogue (file, size)\n       function_size += get_attr_length (last);\n     }\n \n-  fprintf (file, \"/* epilogue: frame size=%d */\\n\", size);\n+  fprintf (file, \"/* epilogue: frame size=\" HOST_WIDE_INT_PRINT_DEC \" */\\n\", size);\n   epilogue_size = 0;\n \n   if (avr_naked_function_p (current_function_decl))\n@@ -1130,7 +1131,7 @@ print_operand (file, x, code)\n \tfprintf (file, reg_names[true_regnum (x) + abcd]);\n     }\n   else if (GET_CODE (x) == CONST_INT)\n-    fprintf (file, \"%d\", INTVAL (x) + abcd);\n+    fprintf (file, HOST_WIDE_INT_PRINT_DEC, INTVAL (x) + abcd);\n   else if (GET_CODE (x) == MEM)\n     {\n       rtx addr = XEXP (x,0);\n@@ -1495,7 +1496,7 @@ init_cumulative_args (cum, fntype, libname, fndecl)\n      CUMULATIVE_ARGS *cum;\n      tree fntype;\n      rtx libname;\n-     tree fndecl;\n+     tree fndecl ATTRIBUTE_UNUSED;\n {\n   cum->nregs = 18;\n   cum->regno = FIRST_CUM_REG;"}, {"sha": "2c6699e923571a37d1d46752e46cdf3ce429d87d", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e53359d446a7904474486bfb7c1e947cca326f3/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e53359d446a7904474486bfb7c1e947cca326f3/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=7e53359d446a7904474486bfb7c1e947cca326f3", "patch": "@@ -1224,7 +1224,7 @@ extern int avr_reg_order[];\n    data types, because none of the library functions returns such\n    types.  */\n \n-#define FUNCTION_VALUE_REGNO_P(N) ((N) == RET_REGISTER)\n+#define FUNCTION_VALUE_REGNO_P(N) ((int) (N) == RET_REGISTER)\n /* A C expression that is nonzero if REGNO is the number of a hard\n    register in which the values of called function may come back.\n "}]}