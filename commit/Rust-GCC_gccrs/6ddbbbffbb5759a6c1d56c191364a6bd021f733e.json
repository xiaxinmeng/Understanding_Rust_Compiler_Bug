{"sha": "6ddbbbffbb5759a6c1d56c191364a6bd021f733e", "node_id": "C_kwDOANBUbNoAKDZkZGJiYmZmYmI1NzU5YTZjMWQ1NmMxOTEzNjRhNmJkMDIxZjczM2U", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-04T12:00:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-04T16:42:59Z"}, "message": "libstdc++: Use new built-ins __remove_cv, __remove_reference etc.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/type_traits (remove_cv): Use __remove_cv built-in.\n\t(remove_reference): Use __remove_reference built-in.\n\t(remove_cvref): Use __remove_cvref built-in. Remove inheritance\n\tfor fallback implementation.", "tree": {"sha": "e6feef8ceba7d62a9a38d24a060667fba47ba66c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6feef8ceba7d62a9a38d24a060667fba47ba66c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ddbbbffbb5759a6c1d56c191364a6bd021f733e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddbbbffbb5759a6c1d56c191364a6bd021f733e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ddbbbffbb5759a6c1d56c191364a6bd021f733e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddbbbffbb5759a6c1d56c191364a6bd021f733e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68ed966793526db02fe96605ba9c0f8bbfd59ef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ed966793526db02fe96605ba9c0f8bbfd59ef0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ed966793526db02fe96605ba9c0f8bbfd59ef0"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "b74565eb521ee55159caff17e8771463f3264c8c", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddbbbffbb5759a6c1d56c191364a6bd021f733e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddbbbffbb5759a6c1d56c191364a6bd021f733e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=6ddbbbffbb5759a6c1d56c191364a6bd021f733e", "patch": "@@ -1507,6 +1507,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { typedef _Tp     type; };\n \n   /// remove_cv\n+#if __has_builtin(__remove_cv)\n+  template<typename _Tp>\n+    struct remove_cv\n+    { using type = __remove_cv(_Tp); };\n+#else\n   template<typename _Tp>\n     struct remove_cv\n     { using type = _Tp; };\n@@ -1522,6 +1527,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Tp>\n     struct remove_cv<const volatile _Tp>\n     { using type = _Tp; };\n+#endif\n \n   /// add_const\n   template<typename _Tp>\n@@ -1570,17 +1576,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Reference transformations.\n \n   /// remove_reference\n+#if __has_builtin(__remove_reference)\n   template<typename _Tp>\n     struct remove_reference\n-    { typedef _Tp   type; };\n+    { using type = __remove_reference(_Tp); };\n+#else\n+  template<typename _Tp>\n+    struct remove_reference\n+    { using type = _Tp; };\n \n   template<typename _Tp>\n     struct remove_reference<_Tp&>\n-    { typedef _Tp   type; };\n+    { using type = _Tp; };\n \n   template<typename _Tp>\n     struct remove_reference<_Tp&&>\n-    { typedef _Tp   type; };\n+    { using type = _Tp; };\n+#endif\n \n   /// add_lvalue_reference\n   template<typename _Tp>\n@@ -3358,20 +3370,23 @@ template<typename _Ret, typename _Fn, typename... _Args>\n    */\n #define __cpp_lib_remove_cvref 201711L\n \n+#if __has_builtin(__remove_cvref)\n   template<typename _Tp>\n     struct remove_cvref\n-    : remove_cv<_Tp>\n-    { };\n+    { using type = __remove_cvref(_Tp); };\n+#else\n+  template<typename _Tp>\n+    struct remove_cvref\n+    { using type = typename remove_cv<_Tp>::type; };\n \n   template<typename _Tp>\n     struct remove_cvref<_Tp&>\n-    : remove_cv<_Tp>\n-    { };\n+    { using type = typename remove_cv<_Tp>::type; };\n \n   template<typename _Tp>\n     struct remove_cvref<_Tp&&>\n-    : remove_cv<_Tp>\n-    { };\n+    { using type = typename remove_cv<_Tp>::type; };\n+#endif\n \n   template<typename _Tp>\n     using remove_cvref_t = typename remove_cvref<_Tp>::type;"}]}