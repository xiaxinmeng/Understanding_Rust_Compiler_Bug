{"sha": "6cb3421f1f940dd093331ed494df9db4e7194e9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNiMzQyMWYxZjk0MGRkMDkzMzMxZWQ0OTRkZjlkYjRlNzE5NGU5YQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-01-25T18:06:24Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-01-25T18:06:24Z"}, "message": "gc.h (GC_INIT): Add DATASTART and DATAEND roots on AIX.\n\n\t* include/gc.h (GC_INIT): Add DATASTART and DATAEND roots on AIX.\n\t* include/private/gcconfig.h (RS6000): Add 64-bit AIX support.\n\tDefine USE_GENERIC_PUSH_REGS.  Use AIX _data and _end symbols for\n\tDATASTART and DATAEND roots.\n\t* rs6000_mach_dep.s: Add function descriptor and traceback table.\n\nFrom-SVN: r49218", "tree": {"sha": "e5a833a73574d5e62d52532dad7b1f72cb709cba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5a833a73574d5e62d52532dad7b1f72cb709cba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cb3421f1f940dd093331ed494df9db4e7194e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb3421f1f940dd093331ed494df9db4e7194e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb3421f1f940dd093331ed494df9db4e7194e9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb3421f1f940dd093331ed494df9db4e7194e9a/comments", "author": null, "committer": null, "parents": [{"sha": "01a2ccd010c3587d7db5d54e2c8d5b880415b414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a2ccd010c3587d7db5d54e2c8d5b880415b414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01a2ccd010c3587d7db5d54e2c8d5b880415b414"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "df5c8e123d1c1381461718a48a0e02a5d17a6767", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb3421f1f940dd093331ed494df9db4e7194e9a/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb3421f1f940dd093331ed494df9db4e7194e9a/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=6cb3421f1f940dd093331ed494df9db4e7194e9a", "patch": "@@ -1,3 +1,11 @@\n+2002-01-25  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* include/gc.h (GC_INIT): Add DATASTART and DATAEND roots on AIX.\n+\t* include/private/gcconfig.h (RS6000): Add 64-bit AIX support.\n+\tDefine USE_GENERIC_PUSH_REGS.  Use AIX _data and _end symbols for\n+\tDATASTART and DATAEND roots.\n+\t* rs6000_mach_dep.s: Add function descriptor and traceback table.\n+\n 2001-12-16  Jeff Sturm  <jsturm@one-point.com>\n \n \t* dyn_load.c: Define ElfW (if needed) for all targets,"}, {"sha": "7d5bd250b8b41e4e96eb913dc75e897390cd983e", "filename": "boehm-gc/include/gc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb3421f1f940dd093331ed494df9db4e7194e9a/boehm-gc%2Finclude%2Fgc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb3421f1f940dd093331ed494df9db4e7194e9a/boehm-gc%2Finclude%2Fgc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc.h?ref=6cb3421f1f940dd093331ed494df9db4e7194e9a", "patch": "@@ -888,7 +888,7 @@ extern void GC_thr_init();\t/* Needed for Solaris/X86\t*/\n #   define GC_INIT() { extern end, etext; \\\n \t\t       GC_noop(&end, &etext); }\n #else\n-# if defined(__CYGWIN32__) && defined(GC_USE_DLL)\n+# if (defined(__CYGWIN32__) && defined(GC_USE_DLL)) || defined (_AIX)\n     /*\n      * Similarly gnu-win32 DLLs need explicit initialization\n      */"}, {"sha": "1c92ee31f2fdfb276aa6c5b7100a10ca26beeb7d", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb3421f1f940dd093331ed494df9db4e7194e9a/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb3421f1f940dd093331ed494df9db4e7194e9a/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=6cb3421f1f940dd093331ed494df9db4e7194e9a", "patch": "@@ -1174,10 +1174,19 @@\n \n # ifdef RS6000\n #   define MACH_TYPE \"RS6000\"\n-#   define ALIGNMENT 4\n-#   define DATASTART ((ptr_t)0x20000000)\n+#   ifdef __64BIT__\n+#     define ALIGNMENT 8\n+#     define CPP_WORDSZ 64\n+#   else\n+#     define ALIGNMENT 4\n+#     define CPP_WORDSZ 32\n+#   endif\n+    extern int _data, _end;\n+#   define DATASTART ((ptr_t)((ulong)&_data))\n+#   define DATAEND ((ptr_t)((ulong)&_end))\n     extern int errno;\n #   define STACKBOTTOM ((ptr_t)((ulong)&errno))\n+#   define USE_GENERIC_PUSH_REGS\n #   define DYNAMIC_LOADING\n \t/* For really old versions of AIX, this may have to be removed. */\n # endif\n@@ -1582,7 +1591,7 @@\n \n # if defined(SVR4) || defined(LINUX) || defined(IRIX) || defined(HPUX) \\\n     || defined(OPENBSD) || defined(NETBSD) || defined(FREEBSD) \\\n-    || defined(BSD) || defined(AIX) || defined(MACOSX) || defined(OSF1)\n+    || defined(BSD) || defined(_AIX) || defined(MACOSX) || defined(OSF1)\n #   define UNIX_LIKE   /* Basic Unix-like system calls work.\t*/\n # endif\n "}, {"sha": "12bf9a84d51ce8bfbf83cd7153b47a2f7fe537eb", "filename": "boehm-gc/rs6000_mach_dep.s", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb3421f1f940dd093331ed494df9db4e7194e9a/boehm-gc%2Frs6000_mach_dep.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb3421f1f940dd093331ed494df9db4e7194e9a/boehm-gc%2Frs6000_mach_dep.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Frs6000_mach_dep.s?ref=6cb3421f1f940dd093331ed494df9db4e7194e9a", "patch": "@@ -1,4 +1,3 @@\n-    .csect\n     .set   r0,0\n     .set   r1,1\n     .set   r2,2\n@@ -32,10 +31,18 @@\n     .set   r30,30\n     .set   r31,31\n \n+    .extern .GC_push_one\n  # Mark from machine registers that are saved by C compiler\n     .globl  .GC_push_regs\n+.csect .text[PR]\n+    .align 2\n+    .globl  GC_push_regs\n+    .globl  .GC_push_regs\n+.csect GC_push_regs[DS]\n+GC_push_regs:\n+    .long .GC_push_regs, TOC[tc0], 0\n+.csect .text[PR]\n .GC_push_regs:\n-    .extern .GC_push_one\n     stu\t    r1,-64(r1)  # reserve stack frame\n     mflr    r0\t\t# save link register\n     st      r0,0x48(r1)\n@@ -103,3 +110,5 @@\n     mtlr    r0\n     ai      r1,r1,64\n     br\n+    .long 0\n+    .byte 0,0,0,0,0,0,0,0"}]}