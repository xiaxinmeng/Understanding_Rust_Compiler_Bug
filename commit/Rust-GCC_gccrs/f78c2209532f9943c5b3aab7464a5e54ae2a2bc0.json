{"sha": "f78c2209532f9943c5b3aab7464a5e54ae2a2bc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4YzIyMDk1MzJmOTk0M2M1YjNhYWI3NDY0YTVlNTRhZTJhMmJjMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-06-04T23:33:18Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-06-04T23:33:18Z"}, "message": "rs6000: VSa->wa for some more cases\n\n\n\t* config/rs6000/vsx.md (vsx_<VS_spdp_insn>): Use wa instead of <VSa>.\n\t(vsx_extract_<mode>_var): Ditto.\n\nFrom-SVN: r271934", "tree": {"sha": "26ed67571ae4ca7629454cb8e11e0603edd240f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26ed67571ae4ca7629454cb8e11e0603edd240f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f78c2209532f9943c5b3aab7464a5e54ae2a2bc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78c2209532f9943c5b3aab7464a5e54ae2a2bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78c2209532f9943c5b3aab7464a5e54ae2a2bc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78c2209532f9943c5b3aab7464a5e54ae2a2bc0/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd9346a157c48d3fc5a059ca763ecb74178abeb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9346a157c48d3fc5a059ca763ecb74178abeb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9346a157c48d3fc5a059ca763ecb74178abeb8"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "55463f0416c360b558aa875c0eb923169cc60225", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78c2209532f9943c5b3aab7464a5e54ae2a2bc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78c2209532f9943c5b3aab7464a5e54ae2a2bc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f78c2209532f9943c5b3aab7464a5e54ae2a2bc0", "patch": "@@ -1,3 +1,8 @@\n+2019-06-04  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/vsx.md (vsx_<VS_spdp_insn>): Use wa instead of <VSa>.\n+\t(vsx_extract_<mode>_var): Ditto.\n+\n 2019-06-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/vsx.md: Replace all <VSa> that are used with VSX_TI"}, {"sha": "519f1a01ce200bfb40fdfa4a83927b8db585c756", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78c2209532f9943c5b3aab7464a5e54ae2a2bc0/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78c2209532f9943c5b3aab7464a5e54ae2a2bc0/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=f78c2209532f9943c5b3aab7464a5e54ae2a2bc0", "patch": "@@ -2164,8 +2164,8 @@\n ;; scalar single precision instructions internally use the double format.\n ;; Prefer the altivec registers, since we likely will need to do a vperm\n (define_insn \"vsx_<VS_spdp_insn>\"\n-  [(set (match_operand:<VS_spdp_res> 0 \"vsx_register_operand\" \"=<VSr4>,?<VSa>\")\n-\t(unspec:<VS_spdp_res> [(match_operand:VSX_SPDP 1 \"vsx_register_operand\" \"<VSr5>,<VSa>\")]\n+  [(set (match_operand:<VS_spdp_res> 0 \"vsx_register_operand\" \"=<VSr4>,?wa\")\n+\t(unspec:<VS_spdp_res> [(match_operand:VSX_SPDP 1 \"vsx_register_operand\" \"<VSr5>,wa\")]\n \t\t\t      UNSPEC_VSX_CVSPDP))]\n   \"VECTOR_UNIT_VSX_P (<MODE>mode)\"\n   \"<VS_spdp_insn> %x0,%x1\"\n@@ -3269,7 +3269,7 @@\n \n ;; Variable V2DI/V2DF extract\n (define_insn_and_split \"vsx_extract_<mode>_var\"\n-  [(set (match_operand:<VS_scalar> 0 \"gpc_reg_operand\" \"=v,<VSa>,r\")\n+  [(set (match_operand:<VS_scalar> 0 \"gpc_reg_operand\" \"=v,wa,r\")\n \t(unspec:<VS_scalar> [(match_operand:VSX_D 1 \"input_operand\" \"v,m,m\")\n \t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"r,r,r\")]\n \t\t\t    UNSPEC_VSX_EXTRACT))"}]}