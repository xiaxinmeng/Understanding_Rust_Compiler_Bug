{"sha": "2f4f3f3f1ba3d24476c27386e596929fc241dba2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY0ZjNmM2YxYmEzZDI0NDc2YzI3Mzg2ZTU5NjkyOWZjMjQxZGJhMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-22T14:58:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-22T14:58:15Z"}, "message": "[multiple changes]\n\n2009-07-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Do not generate extra formal for function\n\tin initialization expression if function does not have convention Ada.\n\n2009-07-22  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi, vms_data.ads: Add qualifier for new gnatpp option\n\t'--separate-label' to control label layout.\n\nFrom-SVN: r149936", "tree": {"sha": "58b442ba0f8e875978f239775441c8932450f840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58b442ba0f8e875978f239775441c8932450f840"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f4f3f3f1ba3d24476c27386e596929fc241dba2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f4f3f3f1ba3d24476c27386e596929fc241dba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f4f3f3f1ba3d24476c27386e596929fc241dba2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f4f3f3f1ba3d24476c27386e596929fc241dba2/comments", "author": null, "committer": null, "parents": [{"sha": "1d1bd8ad317ea3453838ffef748e489c91f1760e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d1bd8ad317ea3453838ffef748e489c91f1760e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d1bd8ad317ea3453838ffef748e489c91f1760e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "b75fad2b02693bf5e7c60c80f9b6c06f2d3a7920", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f4f3f3f1ba3d24476c27386e596929fc241dba2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f4f3f3f1ba3d24476c27386e596929fc241dba2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2f4f3f3f1ba3d24476c27386e596929fc241dba2", "patch": "@@ -1,3 +1,13 @@\n+2009-07-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Do not generate extra formal for function\n+\tin initialization expression if function does not have convention Ada.\n+\n+2009-07-22  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi, vms_data.ads: Add qualifier for new gnatpp option\n+\t'--separate-label' to control label layout.\n+\n 2009-07-22  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_tss.ads, sem_eval.adb: Minor reformatting"}, {"sha": "b4cc4edd2f42c950cc2a0a6d6cb85a0a23866ed8", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f4f3f3f1ba3d24476c27386e596929fc241dba2/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f4f3f3f1ba3d24476c27386e596929fc241dba2/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=2f4f3f3f1ba3d24476c27386e596929fc241dba2", "patch": "@@ -4125,7 +4125,8 @@ package body Freeze is\n       --  is frozen, but a function call may appear in an initialization proc.\n       --  before the declaration is frozen. We need to generate the extra\n       --  formals, if any, to ensure that the expansion of the call includes\n-      --  the proper actuals.\n+      --  the proper actuals. This only applies to Ada subprograms, not to\n+      --  imported ones.\n \n       Desig_Typ := Empty;\n \n@@ -4152,6 +4153,7 @@ package body Freeze is\n             if Present (Nam)\n               and then Ekind (Nam) = E_Function\n               and then Nkind (Parent (N)) = N_Function_Call\n+              and then Convention (Nam) = Convention_Ada\n             then\n                Create_Extra_Formals (Nam);\n             end if;"}, {"sha": "df99d910756777dbadd84d36ddaf936e202d4720", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f4f3f3f1ba3d24476c27386e596929fc241dba2/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f4f3f3f1ba3d24476c27386e596929fc241dba2/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=2f4f3f3f1ba3d24476c27386e596929fc241dba2", "patch": "@@ -16316,6 +16316,10 @@ stops.\n Do not place the keyword @code{is} on a separate line in a subprogram body in\n case if the spec occupies more then one line.\n \n+@cindex @option{^--separate-label^/SEPARATE_LABEL^} (@command{gnatpp})\n+@item ^--separate-label^/SEPARATE_LABEL^\n+Place the satemement label(s) and the statement itself on separate lines.\n+\n @cindex @option{^--separate-loop-then^/SEPARATE_LOOP_THEN^} (@command{gnatpp})\n @item ^--separate-loop-then^/SEPARATE_LOOP_THEN^\n Place the keyword @code{loop} in FOR and WHILE loop statements and the"}, {"sha": "3e917743943c7c6e5a532666cc58e898d09ce605", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f4f3f3f1ba3d24476c27386e596929fc241dba2/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f4f3f3f1ba3d24476c27386e596929fc241dba2/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=2f4f3f3f1ba3d24476c27386e596929fc241dba2", "patch": "@@ -5755,6 +5755,12 @@ package VMS_Data is\n    --   Do not place the IS keyword on a separate line in a subprogram body in\n    --   case if the specification occupies more then one line.\n \n+   S_Pretty_Sep_Label : aliased constant S := \"/SEPARATE_LABEL \"           &\n+                                                    \"--separate-label\";\n+   --        /SEPARATE_LABEL\n+   --\n+   --   Place statement label(s) and the statement itself on separate lines.\n+\n    S_Pretty_Sep_Loop_Then : aliased constant S := \"/SEPARATE_LOOP_THEN \"   &\n                                                     \"--separate-loop-then\";\n    --        /SEPARATE_LOOP_THEN\n@@ -6141,6 +6147,7 @@ package VMS_Data is\n                         S_Pretty_Project          'Access,\n                         S_Pretty_RTS              'Access,\n                         S_Pretty_Search           'Access,\n+                        S_Pretty_Sep_Label        'Access,\n                         S_Pretty_Sep_Loop_Then    'Access,\n                         S_Pretty_N_Sep_Loop_Then  'Access,\n                         S_Pretty_Subdirs          'Access,"}]}