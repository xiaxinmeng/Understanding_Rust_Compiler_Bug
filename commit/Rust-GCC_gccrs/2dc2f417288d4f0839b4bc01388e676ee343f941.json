{"sha": "2dc2f417288d4f0839b4bc01388e676ee343f941", "node_id": "C_kwDOANBUbNoAKDJkYzJmNDE3Mjg4ZDRmMDgzOWI0YmMwMTM4OGU2NzZlZTM0M2Y5NDE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-01T14:02:56Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-01T21:56:35Z"}, "message": "libstdc++: Add more tests for filesystem directory iterators\n\nThe PR 97731 test was added to verify a fix to the Filesystem TS code,\nbut we should also have the same test to avoid similar regressions in\nthe C++17 std::filesystem code.\n\nAlso add tests for directory_options::follow_directory_symlink\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/27_io/filesystem/iterators/97731.cc: New test.\n\t* testsuite/27_io/filesystem/iterators/recursive_directory_iterator.cc:\n\tCheck follow_directory_symlink option.\n\t* testsuite/experimental/filesystem/iterators/recursive_directory_iterator.cc:\n\tLikewise.", "tree": {"sha": "6e7d9054b3461d8960f8b40102175a03158db5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e7d9054b3461d8960f8b40102175a03158db5bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dc2f417288d4f0839b4bc01388e676ee343f941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc2f417288d4f0839b4bc01388e676ee343f941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dc2f417288d4f0839b4bc01388e676ee343f941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc2f417288d4f0839b4bc01388e676ee343f941/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec09a5335f0ade7071f6157dfd97dbb3de3e4f97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec09a5335f0ade7071f6157dfd97dbb3de3e4f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec09a5335f0ade7071f6157dfd97dbb3de3e4f97"}], "stats": {"total": 88, "additions": 87, "deletions": 1}, "files": [{"sha": "9021e6edf41f09069e62977920620a41e81f54a0", "filename": "libstdc++-v3/testsuite/27_io/filesystem/iterators/97731.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc2f417288d4f0839b4bc01388e676ee343f941/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2F97731.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc2f417288d4f0839b4bc01388e676ee343f941/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2F97731.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2F97731.cc?ref=2dc2f417288d4f0839b4bc01388e676ee343f941", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++17 } }\n+// { dg-require-filesystem-ts \"\" }\n+\n+#include <filesystem>\n+#include <cerrno>\n+#include <testsuite_hooks.h>\n+\n+bool used_custom_readdir = false;\n+\n+extern \"C\" void* readdir(void*)\n+{\n+  used_custom_readdir = true;\n+  errno = EIO;\n+  return nullptr;\n+}\n+\n+void\n+test01()\n+{\n+  using std::filesystem::recursive_directory_iterator;\n+  std::error_code ec;\n+  recursive_directory_iterator it(\".\", ec);\n+  if (used_custom_readdir)\n+    VERIFY( ec.value() == EIO );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "e67e2cf38f7540240a0334985e1b2d4cb0a723a5", "filename": "libstdc++-v3/testsuite/27_io/filesystem/iterators/recursive_directory_iterator.cc", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc2f417288d4f0839b4bc01388e676ee343f941/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc2f417288d4f0839b4bc01388e676ee343f941/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc?ref=2dc2f417288d4f0839b4bc01388e676ee343f941", "patch": "@@ -184,6 +184,24 @@ test05()\n   remove_all(p, ec);\n }\n \n+void\n+test06()\n+{\n+#if !(defined __MINGW32__ || defined __MINGW64__)\n+  auto p = __gnu_test::nonexistent_path();\n+  create_directories(p/\"d1/d2\");\n+  create_directory_symlink(\"d1\", p/\"link\");\n+  fs::recursive_directory_iterator it(p), endit;\n+  VERIFY( std::distance(it, endit) == 3 ); // d1 and d2 and link\n+\n+  it = fs::recursive_directory_iterator(p, fs::directory_options::follow_directory_symlink);\n+  VERIFY( std::distance(it, endit) == 4 ); // d1 and d1/d2 and link and link/d2\n+\n+  std::error_code ec;\n+  remove_all(p, ec);\n+#endif\n+}\n+\n int\n main()\n {\n@@ -192,4 +210,5 @@ main()\n   test03();\n   test04();\n   test05();\n+  test06();\n }"}, {"sha": "a201415921cfc3eb894e68db638d80ca15b7cb03", "filename": "libstdc++-v3/testsuite/experimental/filesystem/iterators/recursive_directory_iterator.cc", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc2f417288d4f0839b4bc01388e676ee343f941/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc2f417288d4f0839b4bc01388e676ee343f941/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Frecursive_directory_iterator.cc?ref=2dc2f417288d4f0839b4bc01388e676ee343f941", "patch": "@@ -174,7 +174,7 @@ test05()\n {\n   auto p = __gnu_test::nonexistent_path();\n   create_directory(p);\n-  create_directory_symlink(p, p / \"l\");\n+  create_directory(p / \"x\");\n   fs::recursive_directory_iterator it(p), endit;\n   VERIFY( begin(it) == it );\n   static_assert( noexcept(begin(it)), \"begin is noexcept\" );\n@@ -185,6 +185,24 @@ test05()\n   remove_all(p, ec);\n }\n \n+void\n+test06()\n+{\n+#if !(defined __MINGW32__ || defined __MINGW64__)\n+  auto p = __gnu_test::nonexistent_path();\n+  create_directories(p/\"d1/d2\");\n+  create_directory_symlink(\"d1\", p/\"link\");\n+  fs::recursive_directory_iterator it(p), endit;\n+  VERIFY( std::distance(it, endit) == 3 ); // d1 and d2 and link\n+\n+  it = fs::recursive_directory_iterator(p, fs::directory_options::follow_directory_symlink);\n+  VERIFY( std::distance(it, endit) == 4 ); // d1 and d1/d2 and link and link/d2\n+\n+  std::error_code ec;\n+  remove_all(p, ec);\n+#endif\n+}\n+\n int\n main()\n {\n@@ -193,4 +211,5 @@ main()\n   test03();\n   test04();\n   test05();\n+  test06();\n }"}]}