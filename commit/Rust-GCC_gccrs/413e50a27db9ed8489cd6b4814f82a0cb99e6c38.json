{"sha": "413e50a27db9ed8489cd6b4814f82a0cb99e6c38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEzZTUwYTI3ZGI5ZWQ4NDg5Y2Q2YjQ4MTRmODJhMGNiOTllNmMzOA==", "commit": {"author": {"name": "Revital Eres", "email": "revital.eres@linaro.org", "date": "2011-07-31T10:21:01Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2011-07-31T10:21:01Z"}, "message": "SMS: Misc. fixes\n\nFrom-SVN: r176970", "tree": {"sha": "3219b92dd93b47947ff786bf17c144a4584ee3ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3219b92dd93b47947ff786bf17c144a4584ee3ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/413e50a27db9ed8489cd6b4814f82a0cb99e6c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/413e50a27db9ed8489cd6b4814f82a0cb99e6c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/413e50a27db9ed8489cd6b4814f82a0cb99e6c38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/413e50a27db9ed8489cd6b4814f82a0cb99e6c38/comments", "author": null, "committer": null, "parents": [{"sha": "f047e5183b142d9f0c64b17d8e51f328fe02d2f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f047e5183b142d9f0c64b17d8e51f328fe02d2f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f047e5183b142d9f0c64b17d8e51f328fe02d2f1"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "5372f24cb4ec3f8f49c983ba1f4cb5606a5b669f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/413e50a27db9ed8489cd6b4814f82a0cb99e6c38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/413e50a27db9ed8489cd6b4814f82a0cb99e6c38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=413e50a27db9ed8489cd6b4814f82a0cb99e6c38", "patch": "@@ -1,3 +1,9 @@\n+2011-07-31  Revital Eres  <revital.eres@linaro.org>\n+\n+\t* modulo-sched.c: Change comment.\n+\t(reset_sched_times): Fix print message.\n+\t(print_partial_schedule): Add print info.\n+\n 2011-07-31  Tom de Vries  <tom@codesourcery.com>\n \n \tPR middle-end/43513"}, {"sha": "8c349d39ed52d7c79e5733fbb0c1f60750eb43ec", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/413e50a27db9ed8489cd6b4814f82a0cb99e6c38/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/413e50a27db9ed8489cd6b4814f82a0cb99e6c38/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=413e50a27db9ed8489cd6b4814f82a0cb99e6c38", "patch": "@@ -84,13 +84,14 @@ along with GCC; see the file COPYING3.  If not see\n       II cycles (i.e. use register copies to prevent a def from overwriting\n       itself before reaching the use).\n \n-    SMS works with countable loops whose loop count can be easily\n-    adjusted.  This is because we peel a constant number of iterations\n-    into a prologue and epilogue for which we want to avoid emitting\n-    the control part, and a kernel which is to iterate that constant\n-    number of iterations less than the original loop.  So the control\n-    part should be a set of insns clearly identified and having its\n-    own iv, not otherwise used in the loop (at-least for now), which\n+    SMS works with countable loops (1) whose control part can be easily\n+    decoupled from the rest of the loop and (2) whose loop count can\n+    be easily adjusted.  This is because we peel a constant number of\n+    iterations into a prologue and epilogue for which we want to avoid\n+    emitting the control part, and a kernel which is to iterate that\n+    constant number of iterations less than the original loop.  So the\n+    control part should be a set of insns clearly identified and having\n+    its own iv, not otherwise used in the loop (at-least for now), which\n     initializes a register before the loop to the number of iterations.\n     Currently SMS relies on the do-loop pattern to recognize such loops,\n     where (1) the control part comprises of all insns defining and/or\n@@ -598,8 +599,8 @@ reset_sched_times (partial_schedule_ptr ps, int amount)\n             /* Print the scheduling times after the rotation.  */\n             fprintf (dump_file, \"crr_insn->node=%d (insn id %d), \"\n                      \"crr_insn->cycle=%d, min_cycle=%d\", crr_insn->node->cuid,\n-                     INSN_UID (crr_insn->node->insn), SCHED_TIME (u),\n-                     normalized_time);\n+                     INSN_UID (crr_insn->node->insn), normalized_time,\n+                     new_min_cycle);\n             if (JUMP_P (crr_insn->node->insn))\n               fprintf (dump_file, \" (branch)\");\n             fprintf (dump_file, \"\\n\");\n@@ -2550,8 +2551,13 @@ print_partial_schedule (partial_schedule_ptr ps, FILE *dump)\n       fprintf (dump, \"\\n[ROW %d ]: \", i);\n       while (ps_i)\n \t{\n-\t  fprintf (dump, \"%d, \",\n-\t\t   INSN_UID (ps_i->node->insn));\n+\t  if (JUMP_P (ps_i->node->insn))\n+\t    fprintf (dump, \"%d (branch), \",\n+\t\t     INSN_UID (ps_i->node->insn));\n+\t  else\n+\t    fprintf (dump, \"%d, \",\n+\t\t     INSN_UID (ps_i->node->insn));\n+\t\n \t  ps_i = ps_i->next_in_row;\n \t}\n     }"}]}