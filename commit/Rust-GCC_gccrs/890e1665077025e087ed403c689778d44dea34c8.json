{"sha": "890e1665077025e087ed403c689778d44dea34c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkwZTE2NjUwNzcwMjVlMDg3ZWQ0MDNjNjg5Nzc4ZDQ0ZGVhMzRjOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-01-08T21:01:14Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-01-08T21:01:14Z"}, "message": "re PR c++/55908 (Problem binding a const member function to a const object)\n\n\tPR libstdc++/55908\n\t* include/std/functional (_Mem_fn::operator()): Fix constraints to\n\tavoid ambiguity.\n\t* testsuite/20_util/function_objects/mem_fn/55908.cc: New.\n\t* testsuite/20_util/bind/ref_neg.cc: Adjust dg-error line numbers.\n\nFrom-SVN: r195035", "tree": {"sha": "33cae8c916152de48d116ff24d515a45580a560e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33cae8c916152de48d116ff24d515a45580a560e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/890e1665077025e087ed403c689778d44dea34c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890e1665077025e087ed403c689778d44dea34c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/890e1665077025e087ed403c689778d44dea34c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890e1665077025e087ed403c689778d44dea34c8/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36b729105699ba208e17f22fd04f69c9d9cff72d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b729105699ba208e17f22fd04f69c9d9cff72d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36b729105699ba208e17f22fd04f69c9d9cff72d"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "2b701cb772c30b8d7da59c03278b8e604f20ace4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890e1665077025e087ed403c689778d44dea34c8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890e1665077025e087ed403c689778d44dea34c8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=890e1665077025e087ed403c689778d44dea34c8", "patch": "@@ -1,3 +1,11 @@\n+2013-01-08  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/55908\n+\t* include/std/functional (_Mem_fn::operator()): Fix constraints to\n+\tavoid ambiguity.\n+\t* testsuite/20_util/function_objects/mem_fn/55908.cc: New.\n+\t* testsuite/20_util/bind/ref_neg.cc: Adjust dg-error line numbers.\n+\n 2013-01-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libstdc++/55594"}, {"sha": "714b3ed9ecf4219aa82b2ba05ed233c5357f5d11", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890e1665077025e087ed403c689778d44dea34c8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890e1665077025e087ed403c689778d44dea34c8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=890e1665077025e087ed403c689778d44dea34c8", "patch": "@@ -648,7 +648,7 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n       template<typename _Tp, typename... _Args>\n \tusing _RequireValidArgs2\n-\t  = _Require<_NotSame<_Class, _Tp>, _NotSame<_Class*, _Tp>,\n+\t  = _Require<_NotSame<_Class, _Tp>, _NotSame<const _Class*, _Tp>,\n \t\t     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;\n \n       template<typename _Tp, typename... _Args>\n@@ -727,7 +727,7 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n       template<typename _Tp, typename... _Args>\n \tusing _RequireValidArgs2\n-\t  = _Require<_NotSame<_Class, _Tp>, _NotSame<_Class*, _Tp>,\n+\t  = _Require<_NotSame<_Class, _Tp>, _NotSame<volatile _Class*, _Tp>,\n \t\t     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;\n \n       template<typename _Tp, typename... _Args>\n@@ -807,7 +807,8 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n       template<typename _Tp, typename... _Args>\n \tusing _RequireValidArgs2\n-\t  = _Require<_NotSame<_Class, _Tp>, _NotSame<_Class*, _Tp>,\n+\t  = _Require<_NotSame<_Class, _Tp>,\n+\t\t     _NotSame<const volatile _Class*, _Tp>,\n \t\t     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;\n \n       template<typename _Tp, typename... _Args>"}, {"sha": "f65baa0ca5e319131c52fdaca9334c74845ccaee", "filename": "libstdc++-v3/testsuite/20_util/bind/ref_neg.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890e1665077025e087ed403c689778d44dea34c8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890e1665077025e087ed403c689778d44dea34c8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref_neg.cc?ref=890e1665077025e087ed403c689778d44dea34c8", "patch": "@@ -30,10 +30,10 @@ void test01()\n {\n   const int dummy = 0;\n   std::bind(&inc, _1)(0);               // { dg-error  \"no match\" }\n-  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1346 }\n-  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1360 }\n-  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1374 }\n-  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1388 }\n+  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1347 }\n+  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1361 }\n+  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1375 }\n+  // { dg-error \"rvalue|const\" \"\" { target *-*-* } 1389 }\n   std::bind(&inc, std::ref(dummy))();\t// { dg-error  \"no match\" }\n }\n "}, {"sha": "7bbdb3474d003a36bb8deb9ce60cb1d27a2fa8b6", "filename": "libstdc++-v3/testsuite/20_util/function_objects/mem_fn/55908.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890e1665077025e087ed403c689778d44dea34c8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fmem_fn%2F55908.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890e1665077025e087ed403c689778d44dea34c8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fmem_fn%2F55908.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fmem_fn%2F55908.cc?ref=890e1665077025e087ed403c689778d44dea34c8", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// PR libstdc++/55908 calling const member function via const pointer\n+\n+#include <functional>\n+\n+struct foo\n+{\n+  void f(int) const { }\n+\n+  void g() const\n+  {\n+    auto mf = std::mem_fn(&foo::f);\n+    mf(this, 1);\n+  }\n+};"}]}