{"sha": "d2a6f3c03ee1da2110de65370db171f1548d6d66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJhNmYzYzAzZWUxZGEyMTEwZGU2NTM3MGRiMTcxZjE1NDhkNmQ2Ng==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-07T05:33:12Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-07T05:33:12Z"}, "message": "call.c: Include intl.h.\n\n        * call.c: Include intl.h.\n        (print_z_candidate): Always use inform; get rid of errfn\n        argument. Reorganize so that all the strings get picked up\n        by xgettext.  Note obligation of caller to pass first argument\n        through gettext.\n        (print_z_candidates): Update to match.  Indent second and\n        successive candidates by strlen() of translated message.\n        (joust): Restructure ambiguous-conversion pedwarn so that\n        translators see a complete sentence.  Update calls to\n        print_z_candidate.\n\n        * Make-lang.in (cp/call.o): Update dependencies.\n\nFrom-SVN: r65320", "tree": {"sha": "2c3696fe1f738ecab87828abd22917cec1393322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c3696fe1f738ecab87828abd22917cec1393322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2a6f3c03ee1da2110de65370db171f1548d6d66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a6f3c03ee1da2110de65370db171f1548d6d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2a6f3c03ee1da2110de65370db171f1548d6d66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a6f3c03ee1da2110de65370db171f1548d6d66/comments", "author": null, "committer": null, "parents": [{"sha": "993f19a873fcf28b589560276ae92f14823faa1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/993f19a873fcf28b589560276ae92f14823faa1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/993f19a873fcf28b589560276ae92f14823faa1a"}], "stats": {"total": 170, "additions": 103, "deletions": 67}, "files": [{"sha": "ce68f07756a8b178125bf3c4f6adfc557f257766", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 53, "deletions": 38, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a6f3c03ee1da2110de65370db171f1548d6d66/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a6f3c03ee1da2110de65370db171f1548d6d66/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d2a6f3c03ee1da2110de65370db171f1548d6d66", "patch": "@@ -1,3 +1,18 @@\n+2003-04-06  Zack Weinberg   <zack@codesourcery.com>\n+\n+\t* call.c: Include intl.h.\n+\t(print_z_candidate): Always use inform; get rid of errfn\n+\targument. Reorganize so that all the strings get picked up\n+\tby xgettext.  Note obligation of caller to pass first argument\n+\tthrough gettext.\n+\t(print_z_candidates): Update to match.  Indent second and\n+\tsuccessive candidates by strlen() of translated message.\n+\t(joust): Restructure ambiguous-conversion pedwarn so that\n+\ttranslators see a complete sentence.  Update calls to\n+\tprint_z_candidate.\n+\n+\t* Make-lang.in (cp/call.o): Update dependencies.\n+\n 2003-04-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* decl.c (set_current_binding_level): Delete, revert last change.\n@@ -73,7 +88,7 @@\n \tof ggc_alloc.  Include gt-cp-name-lookup.h at the end of the file.\n \t* Make-lang.in: (gt-cp-name-lookup.h): Is generated by gengtype.\n \t(cp/name-lookup.o): Depends on gt-cp-name-lookup.h.\n-\t\n+\n 2003-03-31  Jason Merrill  <jason@redhat.com>\n \n \tPR java/10145\n@@ -93,7 +108,7 @@\n 2003-03-30  Gabriel Dos Reis <gdr@integrable-solutions.net>\n \n \t* cp-tree.h (binding_for_name: Move to name-lookup.h  Adjust\n-\tprototype. \n+\tprototype.\n \t(cxx_scope_find_binding_for_name): Likewise.\n \t* decl.c (find_binding: Move to name-lookup.c.\n \t(binding_for_name): Likewise.\n@@ -195,7 +210,7 @@\n \t(joust): Add comment for translators.\n \n 2003-03-24  Nathan Sidwell  <nathan@codesourcery.com>\n-\t\n+\n \tPR c++/9898, PR c++/383, DR 322\n \t* pt.c (maybe_adjust_types_for_deduction) <DEDUCE_CONV>: Look\n \tthrough reference types on both PARM and ARG.\n@@ -6925,7 +6940,7 @@\n \t* decl.c: Include c-common.h.\n \t(shadow_warning): Move to c-common.c.\n \n-Wed Dec  5 17:00:49 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2001-12-05  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* decl.c (duplicate_decls): Don't copy DECL_NO_CHECK_MEMORY_USAGE.\n \n@@ -7042,7 +7057,7 @@ Wed Dec  5 17:00:49 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* Make-lang.in (c++.generated-manpages): New dummy target.\n \n-Tue Nov 27 09:03:47 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2001-11-27  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* Make-lang.in (cp-lang.o): Depends on c-common.h.\n \t* cp-lang.c (c-common.h): Include.\n@@ -7306,7 +7321,7 @@ Tue Nov 27 09:03:47 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* cp-lang.c: Redefine LANG_HOOKS_CLEAR_BINDING_STACK to\n \tpop_everything.\n \n-Tue Oct 23 14:00:20 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2001-10-23  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* cp-lang.c (cxx_get_alias_set): New function.\n \tPoint LANG_HOOKS_GET_ALIAS_SET to it.\n@@ -7578,7 +7593,7 @@ Tue Oct 23 14:00:20 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \tinstead of deleted print_* routines.  Handle %C, %L, %O, %Q also.\n \t(init_error): Adjust to match.\n \n-Sat Sep 22 09:15:31 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2001-09-22  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* Make-lang.in (CXX_C_OBJS): Add attribs.o.\n \n@@ -7592,7 +7607,7 @@ Sat Sep 22 09:15:31 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* decl2.c (mark_vtable_entries): Mark FDESC_EXPR.\n \t* typeck.c (get_member_function_from_ptrfunc): Mind descriptors.\n \n-Fri Sep 21 08:16:19 2001  J\"orn Rennecke <amylaar@redhat.com>\n+2001-09-21  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* decl.c (grokdeclarator): Use C syntax for attr_flags declaration.\n \n@@ -8806,7 +8821,7 @@ Fri Sep 21 08:16:19 2001  J\"orn Rennecke <amylaar@redhat.com>\n \t* gxxint.texi: Remove.\n \t* Make-lang.in: Remove all traces of gxxint.texi.\n \n-Mon Apr 30 16:14:10 2001  Mark P Mitchell  <mark@codesourcery.com>\n+2001-04-30  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* decl2.c (start_static_initialization_or_destruction): Correct\n \tlogic to handle the -fno-use-cxa-atexit case.\n@@ -9096,7 +9111,7 @@ Mon Apr 30 16:14:10 2001  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* lang-specs.h: Add __DEPRECATED.\n \n-Thu Apr  5 16:54:29 2001  J\"orn Rennecke <amylaar@redhat.com>\n+2001-04-05  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* search.c (get_dynamic_cast_base_type): When building a new\n \tconstant, set its type to ssizetype.\n@@ -9997,7 +10012,7 @@ Thu Apr  5 16:54:29 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* Makefile.in (g++spec.o): Adjust use of DRIVER_DEFINES.\n \n-Sun Feb  4 15:52:44 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2001-02-04  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* decl.c (pushdecl): Call abort instead of fatal.\n \t* except.c (decl_is_java_type): Call fatal_error instead of fatal.\n@@ -10952,7 +10967,7 @@ Sun Feb  4 15:52:44 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \tCope when there is no partial instantiation of a template\n \ttemplate member.\n \n-Thu Nov 23 02:16:47 2000  J\"orn Rennecke <amylaar@redhat.com>\n+2000-11-23  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* Make-lang.in (g++spec.o, cxxmain.o): Depend on $(CONFIG_H).\n \n@@ -11283,7 +11298,7 @@ Thu Nov 23 02:16:47 2000  J\"orn Rennecke <amylaar@redhat.com>\n \t* typeck2.c (abstract_virtuals_error): Use \"because\" instead of\n \t\"since\" in error message.\n \n-Fri Oct 20 13:54:59 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-10-20  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* typeck.c (dubious_conversion_warning): Suppress if TYPE_IS_SIZETYPE.\n \n@@ -11352,7 +11367,7 @@ Fri Oct 20 13:54:59 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* dump.c (dequeue_and_dump): Dump TREE_USED.\n \n-Tue Oct 17 20:19:06 2000  Brad Lucier <lucier@math.purdue.edu>\n+2000-10-17  Brad Lucier <lucier@math.purdue.edu>\n \n \t* spew.c (snarf_defarg): Cast 2nd arg to obstack_blank to (int).\n \n@@ -11590,7 +11605,7 @@ Tue Oct 17 20:19:06 2000  Brad Lucier <lucier@math.purdue.edu>\n \n \t* lex.c (reswords): Add _Complex.\n \n-Thu Sep 14 12:10:45 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-09-14  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* Make-lang.in (cplib2.txt): Depend on cp/Makefile.\n \n@@ -12604,7 +12619,7 @@ Thu Sep 14 12:10:45 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \trest_of_decl_compilation, for local guards.\n \t* lex.c (do_identifier): Remove unused variable.\n \n-Wed Jul 26 15:05:51 CEST 2000\tMarc Espie <espie@cvs.openbsd.org>\n+2000-07-26\tMarc Espie <espie@cvs.openbsd.org>\n \n \t* parse.y:  Add missing ';'.\n \n@@ -13629,7 +13644,7 @@ Wed Jul 26 15:05:51 CEST 2000\tMarc Espie <espie@cvs.openbsd.org>\n \t* cp-tree.h (struct lang_type): Add user_align member.\n \t(CLASSTYPE_USER_ALIGN): Define.\n \n-Tue Jun 13 15:48:03 2000  Maciej W. Rozycki  <macro@ds2.pg.gda.pl>\n+2000-06-13  Maciej W. Rozycki  <macro@ds2.pg.gda.pl>\n \n \t* Make-lang.in (c++.install-common): Install g++-cross in\n \t$(gcc_tooldir)/bin as g++ and c++; g++ in $(bindir) as\n@@ -13805,7 +13820,7 @@ Tue Jun 13 15:48:03 2000  Maciej W. Rozycki  <macro@ds2.pg.gda.pl>\n \tAvoid unnecessary searching.\n \t(__dynamic_cast): Adjust for __dyncast_result::whole_details.\n \n-Mon Jun  5 06:48:55 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-06-05  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* decl.c (init_decl_processing): Don't call record_component_aliases.\n \t* tree.c (build_cplus_array_type_1): Likewise.\n@@ -13946,7 +13961,7 @@ Mon Jun  5 06:48:55 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* init.c (resolve_offset_ref): Remove check for TREE_ADDRESSABLE\n \ton FIELD_DECLs.\n \n-Wed May 31 14:09:00 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-05-31  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* cp-tree.h (c_get_alias_set): Deleted.\n \t* Makefile.in (decl.o): Include ../expr.h.\n@@ -14114,7 +14129,7 @@ Wed May 31 14:09:00 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* Make-lang.in (cplib2.ready): Eradicate.\n \n-Sat May 27 11:25:46 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-05-27  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* method.c (mangle_expression): Use TREE_CODE_LENGTH.\n \t* tree.c (break_out_calls, build_min_nt): Use TREE_CODE_LENGTH.\n@@ -14272,7 +14287,7 @@ Sat May 27 11:25:46 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* init.c (sort_member_init): Fix typo in error message generation\n \tcode.\n \n-Mon May 15 11:46:29 2000  Donald Lindsay  <dlindsay@cygnus.com>\n+2000-05-15  Donald Lindsay  <dlindsay@cygnus.com>\n \n \t* semantics.c (begin_class_definition): make the packed\n \tattribute be sensitive to the \"-fpack-struct\" command line flag\n@@ -14492,7 +14507,7 @@ Mon May 15 11:46:29 2000  Donald Lindsay  <dlindsay@cygnus.com>\n \treference.\n \t* typeck.c (build_component_ref): Fix formatting.\n \n-Wed May 17 17:27:44 2000  Andrew Cagney  <cagney@b1.cygnus.com>\n+2000-05-17  Andrew Cagney  <cagney@b1.cygnus.com>\n \n \t* decl.c (pop_label): Replace warn_unused with warn_unused_label.\n \t* typeck.c (build_x_compound_expr): Replace warn_unused with\n@@ -14914,7 +14929,7 @@ Wed May 17 17:27:44 2000  Andrew Cagney  <cagney@b1.cygnus.com>\n \t* decl2.c (grokfield): Issue error on illegal data member\n \tdeclaration.\n \n-Mon Apr 17 17:11:16 2000  Mark P Mitchell  <mark@codesourcery.com>\n+2000-04-17  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* method.c (make_thunk): Set DECL_CONTEXT for a THUNK_DECL.\n \n@@ -14951,7 +14966,7 @@ Mon Apr 17 17:11:16 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tUse int_size_in_bytes.\n \t(emit_thunk): Handle vcall offset thunks.\n \n-Sat Apr 15 16:00:01 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-04-15  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* decl2.c (parse_time, varconst_time): Delete declarations.\n \t(finish_file): Delete LINENO declaration.\n@@ -15639,7 +15654,7 @@ Wed Apr  5 15:12:18 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \t* tinfo.cc (__dynamic_cast): Look for vtable_prefix at appropriate\n \tnegative offset.\n \n-Sun Mar 26 20:15:26 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-03-26  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (check_field_decl): Fix typo.\n \t(build_vtbl_or_vbase_field): Don't clear DECL_SAVED_INSNS.\n@@ -15674,7 +15689,7 @@ Sun Mar 26 20:15:26 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* dump.c (dequeue_and_dump): Dump DECL_TEMPLATE_RESULT.\n \n-Sat Mar 25 09:12:10 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-03-25  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (build_vbase_pointer_fields): layout_field now place_field.\n \t(get_vfield_offset): Use byte_position.\n@@ -15913,7 +15928,7 @@ Sat Mar 25 09:12:10 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t(note_name_declared_in_class): Use OVL_CURRENT to get at a\n \tpotential overload.\n \n-Fri Mar 17 08:09:14 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-03-17  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (build_vbase_path): Use integer_zerop.\n \t(build_vtable_entry): Use tree_low_cst.\n@@ -16192,7 +16207,7 @@ Fri Mar 17 08:09:14 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* typeck.c (dubious_conversion_warnings): Look through\n \tREFERENCE_TYPE.\n \n-Mon Mar  6 08:46:47 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-03-06  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (dfs_modify_vtables): I is now unsigned.\n \t(check_bitfield_decl): Use tree_int_cst_sgn and compare_tree_int.\n@@ -16337,7 +16352,7 @@ Mon Mar  6 08:46:47 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \tpush_eh_cleanup() when handling a Java-style \"catch\".  Pass Java\n \tclass reference to build_catch_block.\n \n-Thu Mar  2 13:32:01 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-03-02  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* typeck.c (comptypes): Treat sizetype like its language equivalent.\n \n@@ -16366,7 +16381,7 @@ Thu Mar  2 13:32:01 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* class.c (resolve_address_of_overloaded_function): Pass desired\n \treturn type to fn_type_unification.\n \n-Mon Feb 28 08:15:23 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-02-28  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (build_vtbl_or_vbase_field, check_methods): Don't clear\n \tDECL_FIELD_SIZE.\n@@ -16384,7 +16399,7 @@ Mon Feb 28 08:15:23 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t(friend_accessible_p): Lose TYPE parm.\n \t(accessible_p): Adjust.\n \n-Sun Feb 27 16:40:33 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-02-27  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (dfs_build_vtable_offset_vtbl_entries): Don't use size_binop\n \ton things that are not sizes; ssize_binop deleted.\n@@ -16471,7 +16486,7 @@ Sun Feb 27 16:40:33 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* lex.c (check_newline): Tweak filename/lineno setting.\n \t* semantics.c (begin_while_stmt): Fix typo in comment.\n \n-Sat Feb 26 19:50:23 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-02-26  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* lang-options.h (-fmessage-length=): Add missing option.\n \n@@ -16481,7 +16496,7 @@ Sat Feb 26 19:50:23 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* Make-lang.in: Delete refs to LIBGCC2_DEPS.\n \n-Fri Feb 25 14:52:33 2000  Jim Wilson  <wilson@cygnus.com>\n+2000-02-25  Jim Wilson  <wilson@cygnus.com>\n \n \t* optimize.c (expand_call_inline): Emit the return label before\n \tevaluating the return value.\n@@ -16610,7 +16625,7 @@ Fri Feb 25 14:52:33 2000  Jim Wilson  <wilson@cygnus.com>\n \n \t* pt.c (tsubst_decl): Fix formatting.\n \n-Sat Feb 19 18:43:13 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2000-02-19  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (build_primary_vtable, layout_vtable_decl): Likewise.\n \t(avoid_overlap, build_base_field): Likewise.\n@@ -16881,7 +16896,7 @@ Sat Feb 19 18:43:13 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* parse.y (simple_stmt): Allow :: token in asm parameter list.\n \t* parse.c: Rebuilt.\n \n-Mon Jan 31 15:35:29 2000  Jim Wilson  <wilson@cygnus.com>\n+2000-01-31  Jim Wilson  <wilson@cygnus.com>\n \n \t* class.c (build_vtbl_or_vbase_field): New parameter fcontext.\n \tStore it in DECL_FCONTEXT.\n@@ -17093,12 +17108,12 @@ Mon Jan 31 15:35:29 2000  Jim Wilson  <wilson@cygnus.com>\n \t(build_vtbl_initializer): Likewise.\n \t* decl2.c (finish_file): Likewise.\n \n-Thu Jan 27 20:53:36 2000  Jim Wilson  <wilson@cygnus.com>\n+2000-01-27  Jim Wilson  <wilson@cygnus.com>\n \n \t* optimize.c (remap_decl): Add walk_tree calls for DECL_SIZE (t)\n \tand TYPE_MAX_VALUE (TYPE_DOMAIN (TREE_TYPE (t))).\n \n-Thu Jan 27 13:54:12 2000  Mike Stump  <mrs@wrs.com>\n+2000-01-27  Mike Stump  <mrs@wrs.com>\n \n \t* decl.c (pushdecl): Fix up shadow warnings with respect to implicit\n \tfor scopes.\n@@ -17107,7 +17122,7 @@ Thu Jan 27 13:54:12 2000  Mike Stump  <mrs@wrs.com>\n \n \t* pt.c (unify): Use fold, not maybe_fold_nontype_arg.\n \n-Wed Jan 26 22:19:14 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+2000-01-26  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* optimize.c (calls_setjmp_r): Supply new argument\n \tto special_function_p."}, {"sha": "fd669f8d892ec15fe8a097c0a92a128d26c96048", "filename": "gcc/cp/call.c", "status": "modified", "additions": 50, "deletions": 29, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a6f3c03ee1da2110de65370db171f1548d6d66/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a6f3c03ee1da2110de65370db171f1548d6d66/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d2a6f3c03ee1da2110de65370db171f1548d6d66", "patch": "@@ -36,6 +36,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"expr.h\"\n #include \"diagnostic.h\"\n+#include \"intl.h\"\n \n extern int inhibit_warnings;\n \n@@ -56,8 +57,7 @@ static void op_error (enum tree_code, enum tree_code, tree, tree,\n static tree build_object_call (tree, tree);\n static tree resolve_args (tree);\n static struct z_candidate *build_user_type_conversion_1 (tree, tree, int);\n-static void print_z_candidate (const char *msgid, struct z_candidate *,\n-\t\t\t       void (*)(const char *, ...));\n+static void print_z_candidate (const char *, struct z_candidate *);\n static void print_z_candidates (struct z_candidate *);\n static tree build_this (tree);\n static struct z_candidate *splice_viable (struct z_candidate *, bool, bool *);\n@@ -2437,34 +2437,39 @@ equal_functions (tree fn1, tree fn2)\n   return fn1 == fn2;\n }\n \n-/* Print information about one overload candidate CANDIDATE.  STR is the\n-   text to print before the candidate itself and ERRFN is the routine\n-   (i.e. error, warning or pedwarn) used to do the printing.  */\n+/* Print information about one overload candidate CANDIDATE.  MSGSTR\n+   is the text to print before the candidate itself.\n+\n+   NOTE: Unlike most diagnostic functions in GCC, MSGSTR is expected\n+   to have been run through gettext by the caller.  This wart makes\n+   life simpler in print_z_candidates and for the translators.  */\n \n static void\n-print_z_candidate (const char *msgid, struct z_candidate *candidate,\n-\t\t   void (*errfn)(const char *, ...))\n+print_z_candidate (const char *msgstr, struct z_candidate *candidate)\n {\n   if (TREE_CODE (candidate->fn) == IDENTIFIER_NODE)\n     {\n       if (TREE_VEC_LENGTH (candidate->convs) == 3)\n-\terrfn (\"%s %D(%T, %T, %T) <built-in>\", msgid, candidate->fn,\n-\t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)),\n-\t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 1)),\n-\t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 2)));\n+\tinform (\"%s %D(%T, %T, %T) <built-in>\", msgstr, candidate->fn,\n+\t\tTREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)),\n+\t\tTREE_TYPE (TREE_VEC_ELT (candidate->convs, 1)),\n+\t\tTREE_TYPE (TREE_VEC_ELT (candidate->convs, 2)));\n       else if (TREE_VEC_LENGTH (candidate->convs) == 2)\n-\terrfn (\"%s %D(%T, %T) <built-in>\", msgid, candidate->fn,\n-\t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)),\n-\t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 1)));\n+\tinform (\"%s %D(%T, %T) <built-in>\", msgstr, candidate->fn,\n+\t\tTREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)),\n+\t\tTREE_TYPE (TREE_VEC_ELT (candidate->convs, 1)));\n       else\n-\terrfn (\"%s %D(%T) <built-in>\", msgid, candidate->fn,\n-\t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)));\n+\tinform (\"%s %D(%T) <built-in>\", msgstr, candidate->fn,\n+\t\tTREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)));\n     }\n   else if (TYPE_P (candidate->fn))\n-    errfn (\"%s %T <conversion>\", msgid, candidate->fn);\n+    inform (\"%s %T <conversion>\", msgstr, candidate->fn);\n+  else if (candidate->viable == -1)\n+    inform (\"%H%s %+#D <near match>\",\n+\t    &DECL_SOURCE_LOCATION (candidate->fn), msgstr, candidate->fn);\n   else\n-    errfn (\"%H%s %+#D%s\", &DECL_SOURCE_LOCATION (candidate->fn), msgid,\n-\t   candidate->fn, candidate->viable == -1 ? \" <near match>\" : \"\");\n+    inform (\"%H%s %+#D\",\n+\t    &DECL_SOURCE_LOCATION (candidate->fn), msgstr, candidate->fn);\n }\n \n static void\n@@ -2496,11 +2501,27 @@ print_z_candidates (struct z_candidate *candidates)\n \t}\n     }\n \n-  str = \"candidates are:\";\n-  for (; candidates; candidates = candidates->next)\n+  if (!candidates)\n+    return;\n+\n+  str = _(\"candidates are:\");\n+  print_z_candidate (str, candidates);\n+  if (candidates->next)\n     {\n-      print_z_candidate (str, candidates, error);\n-      str = \"               \"; \n+      /* Indent successive candidates by the length of the translation of\n+\t the above string.  */\n+      size_t len = strlen (str) + 1;\n+      char *spaces = alloca (len);\n+      memset (spaces, ' ', len-1);\n+      spaces[len] = '\\0';\n+\n+      candidates = candidates->next;\n+      do\n+\t{\n+\t  print_z_candidate (spaces, candidates);\n+\t  candidates = candidates->next;\n+\t}\n+      while (candidates);\n     }\n }\n \n@@ -5866,12 +5887,12 @@ joust (struct z_candidate *cand1, struct z_candidate *cand2, bool warn)\n         {\n \t  if (warn)\n \t    {\n-\t      print_z_candidate (\"ISO C++ says that \", w, pedwarn);\n-\t      /* Translators note: This message is a continuation of the\n-\t         previous one, aligned on the right.  */\n-\t      print_z_candidate (\"              and \", l, pedwarn);\n-\t      pedwarn (\"are ambiguous even though the worst conversion \\\n-for the former is better than the worst conversion for the latter\");\n+\t      pedwarn (\"\\\n+ISO C++ says that these are ambiguous, even \\\n+though the worst conversion for the first is better than \\\n+the worst conversion for the second:\");\n+\t      print_z_candidate (_(\"candidate 1:\"), w);\n+\t      print_z_candidate (_(\"candidate 2:\"), l);\n \t    }\n \t  else\n \t    add_warning (w, l);"}]}