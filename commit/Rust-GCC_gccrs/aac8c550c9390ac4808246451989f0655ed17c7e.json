{"sha": "aac8c550c9390ac4808246451989f0655ed17c7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFjOGM1NTBjOTM5MGFjNDgwODI0NjQ1MTk4OWYwNjU1ZWQxN2M3ZQ==", "commit": {"author": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2018-08-29T08:22:19Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2018-08-29T08:22:19Z"}, "message": "[AARCH64] Use stdint integers in vect_su_add_sub.c\n\n2018-08-29  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* gcc.target/aarch64/simd/vect_su_add_sub.c: Use 32 and 64-bit types\n\twhere appropriate.\n\nFrom-SVN: r263946", "tree": {"sha": "44535bd9886322da32b903123000e052d3f9789a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44535bd9886322da32b903123000e052d3f9789a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aac8c550c9390ac4808246451989f0655ed17c7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac8c550c9390ac4808246451989f0655ed17c7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aac8c550c9390ac4808246451989f0655ed17c7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac8c550c9390ac4808246451989f0655ed17c7e/comments", "author": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95f0c81630e237f4f42ae6ae6eac73af3f96da5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95f0c81630e237f4f42ae6ae6eac73af3f96da5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95f0c81630e237f4f42ae6ae6eac73af3f96da5b"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "bd9d31aec7b0da85afa1059348c2d962b2e70b71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aac8c550c9390ac4808246451989f0655ed17c7e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aac8c550c9390ac4808246451989f0655ed17c7e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aac8c550c9390ac4808246451989f0655ed17c7e", "patch": "@@ -1,3 +1,8 @@\n+2018-08-29  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* gcc.target/aarch64/simd/vect_su_add_sub.c: Use 32 and 64-bit types\n+\twhere appropriate.\n+\n 2018-08-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87117"}, {"sha": "921c5f15c74ce02d106f9b5290244532fc56d480", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vect_su_add_sub.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aac8c550c9390ac4808246451989f0655ed17c7e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvect_su_add_sub.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aac8c550c9390ac4808246451989f0655ed17c7e/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvect_su_add_sub.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvect_su_add_sub.c?ref=aac8c550c9390ac4808246451989f0655ed17c7e", "patch": "@@ -1,21 +1,27 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n \n+typedef int __attribute__ ((mode (SI))) int32_t;\n+typedef int __attribute__ ((mode (DI))) int64_t;\n+typedef unsigned __attribute__ ((mode (SI))) size_t;\n+typedef unsigned __attribute__ ((mode (SI))) uint32_t;\n+typedef unsigned __attribute__ ((mode (DI))) uint64_t;\n+\n /* Ensure we use the signed/unsigned extend vectorized add and sub\n    instructions.  */\n #define N 1024\n \n-int a[N];\n-long c[N];\n-long d[N];\n-unsigned int ua[N];\n-unsigned long uc[N];\n-unsigned long ud[N];\n+int32_t a[N];\n+int64_t c[N];\n+int64_t d[N];\n+uint32_t ua[N];\n+uint64_t uc[N];\n+uint64_t ud[N];\n \n void\n add ()\n {\n-  for (int i = 0; i < N; i++)\n+  for (size_t i = 0; i < N; i++)\n     d[i] = a[i] + c[i];\n }\n /* { dg-final { scan-assembler-times \"\\[ \\t\\]saddw2\\[ \\t\\]+\" 1 } } */\n@@ -24,7 +30,7 @@ add ()\n void\n subtract ()\n {\n-  for (int i = 0; i < N; i++)\n+  for (size_t i = 0; i < N; i++)\n     d[i] = c[i] - a[i];\n }\n /* { dg-final { scan-assembler-times \"\\[ \\t\\]ssubw2\\[ \\t\\]+\" 1 } } */\n@@ -33,7 +39,7 @@ subtract ()\n void\n uadd ()\n {\n-  for (int i = 0; i < N; i++)\n+  for (size_t i = 0; i < N; i++)\n     ud[i] = ua[i] + uc[i];\n }\n /* { dg-final { scan-assembler-times \"\\[ \\t\\]uaddw2\\[ \\t\\]+\" 1 } } */\n@@ -42,7 +48,7 @@ uadd ()\n void\n usubtract ()\n {\n-  for (int i = 0; i < N; i++)\n+  for (size_t i = 0; i < N; i++)\n     ud[i] = uc[i] - ua[i];\n }\n /* { dg-final { scan-assembler-times \"\\[ \\t\\]usubw2\\[ \\t\\]+\" 1 } } */"}]}