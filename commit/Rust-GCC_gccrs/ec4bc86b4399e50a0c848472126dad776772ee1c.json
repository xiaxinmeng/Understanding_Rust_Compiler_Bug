{"sha": "ec4bc86b4399e50a0c848472126dad776772ee1c", "node_id": "C_kwDOANBUbNoAKGVjNGJjODZiNDM5OWU1MGEwYzg0ODQ3MjEyNmRhZDc3Njc3MmVlMWM", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2023-03-09T19:43:08Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2023-03-09T19:43:08Z"}, "message": "middle-end: On emergency dumps finish the graph generation.\n\nWhen doing an emergency dump the cfg output dumps are corrupted because the\nending \"}\" is missing.\n\nNormally when the pass manager finishes it would call finish_graph_dump_file to\nproduce this.  This is called here because each pass can dump multiple digraphs.\n\nHowever during an emergency dump we only dump the current function and so after\nthat is done we never go back to the pass manager.\n\nAs such, we need to manually call finish_graph_dump_file in order to properly\nfinish off graph generation.\n\nWith this -ftree-dump-*-graph works properly during a crash dump.\n\ngcc/ChangeLog:\n\n\t* passes.cc (emergency_dump_function): Finish graph generation.", "tree": {"sha": "64ca50383f5d65a0ef11cb781fc5c062ad7106bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64ca50383f5d65a0ef11cb781fc5c062ad7106bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec4bc86b4399e50a0c848472126dad776772ee1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4bc86b4399e50a0c848472126dad776772ee1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec4bc86b4399e50a0c848472126dad776772ee1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4bc86b4399e50a0c848472126dad776772ee1c/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e26ac4749c5ddf827e18a846b1010b091f76fa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e26ac4749c5ddf827e18a846b1010b091f76fa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e26ac4749c5ddf827e18a846b1010b091f76fa2"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "2f0e378b8b2c02fc278f1e48346a0444e5cfbf39", "filename": "gcc/passes.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4bc86b4399e50a0c848472126dad776772ee1c/gcc%2Fpasses.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4bc86b4399e50a0c848472126dad776772ee1c/gcc%2Fpasses.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.cc?ref=ec4bc86b4399e50a0c848472126dad776772ee1c", "patch": "@@ -1845,6 +1845,13 @@ emergency_dump_function ()\n   fprintf (dump_file, \"\\n\\n\\nEMERGENCY DUMP:\\n\\n\");\n   execute_function_dump (cfun, current_pass);\n \n+  /* Normally the passmanager will close the graphs as a pass could be wanting\n+     to print multiple digraphs. But during an emergency dump there can only be\n+     one and we must finish the graph manually.  */\n+  if ((cfun->curr_properties & PROP_cfg)\n+      && (dump_flags & TDF_GRAPH))\n+    finish_graph_dump_file (dump_file_name);\n+\n   if (symtab && current_pass->type == IPA_PASS)\n     symtab->dump (dump_file);\n }"}]}