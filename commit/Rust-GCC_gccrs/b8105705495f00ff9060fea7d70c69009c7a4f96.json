{"sha": "b8105705495f00ff9060fea7d70c69009c7a4f96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgxMDU3MDU0OTVmMDBmZjkwNjBmZWE3ZDcwYzY5MDA5YzdhNGY5Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-17T16:10:42Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-17T16:10:42Z"}, "message": "* explow.c (validize_mem): Do not modify the argument in-place.\n\nFrom-SVN: r241247", "tree": {"sha": "65f73aad4b6e2da29e0fae1adc780367d6b3b3a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65f73aad4b6e2da29e0fae1adc780367d6b3b3a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8105705495f00ff9060fea7d70c69009c7a4f96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8105705495f00ff9060fea7d70c69009c7a4f96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8105705495f00ff9060fea7d70c69009c7a4f96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8105705495f00ff9060fea7d70c69009c7a4f96/comments", "author": null, "committer": null, "parents": [{"sha": "80b841ba52a689712da44a91954c17a8aeace5c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b841ba52a689712da44a91954c17a8aeace5c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b841ba52a689712da44a91954c17a8aeace5c8"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "2ad0bb5cd4d5466b37d34c4a07b26926d764c0cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8105705495f00ff9060fea7d70c69009c7a4f96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8105705495f00ff9060fea7d70c69009c7a4f96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8105705495f00ff9060fea7d70c69009c7a4f96", "patch": "@@ -1,3 +1,7 @@\n+2016-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* explow.c (validize_mem): Do not modify the argument in-place.\n+\n 2016-10-17  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* tree-streamer.c (record_common_node): Explicitly list expected\n@@ -95,7 +99,7 @@\n \t(lookup_descr_for_decl): New function.\n \t(convert_tramp_reference_op): Deal with descriptors.\n \t(build_init_call_stmt): New function extracted from...\n-\t(finalize_nesting_tree_1): ...here.  Adjust and deal withdescriptors.\n+\t(finalize_nesting_tree_1): ...here.  Adjust and deal with descriptors.\n \t* defaults.h (FUNCTION_ALIGNMENT): Define.\n \t(TRAMPOLINE_ALIGNMENT): Set to above instead of FUNCTION_BOUNDARY.\n \t* config/i386/i386.h (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): Define."}, {"sha": "1c59c862f93722639d0a702e246d397de692a532", "filename": "gcc/explow.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8105705495f00ff9060fea7d70c69009c7a4f96/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8105705495f00ff9060fea7d70c69009c7a4f96/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=b8105705495f00ff9060fea7d70c69009c7a4f96", "patch": "@@ -496,9 +496,8 @@ memory_address_addr_space (machine_mode mode, rtx x, addr_space_t as)\n   return x;\n }\n \n-/* If REF is a MEM with an invalid address, change it into a valid address.\n-   Pass through anything else unchanged.  REF must be an unshared rtx and\n-   the function may modify it in-place.  */\n+/* Convert a mem ref into one with a valid memory address.\n+   Pass through anything else unchanged.  */\n \n rtx\n validize_mem (rtx ref)\n@@ -510,7 +509,8 @@ validize_mem (rtx ref)\n \t\t\t\t   MEM_ADDR_SPACE (ref)))\n     return ref;\n \n-  return replace_equiv_address (ref, XEXP (ref, 0), true);\n+  /* Don't alter REF itself, since that is probably a stack slot.  */\n+  return replace_equiv_address (ref, XEXP (ref, 0));\n }\n \n /* If X is a memory reference to a member of an object block, try rewriting"}]}