{"sha": "7511142254795beb9417f1c226d3ba471a9272fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUxMTE0MjI1NDc5NWJlYjk0MTdmMWMyMjZkM2JhNDcxYTkyNzJmYw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-09-20T06:43:23Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-09-20T06:43:23Z"}, "message": "Warning fixes:\n\n\t* Makefile.in (actions.o, convert.o, decl.o, expr.o, lang.o,\n\tlex.o, loop.o, parse.o, satisfy.o, timing.o, tasking.o, tree.o,\n\ttypeck.o): Depend on system.h and toplev.h.\n\t(except.o): Depend on toplev.h.\n\t(grant.o): Depend on system.h, toplev.h and output.h.\n\t* actions.c: Include system.h and toplev.h.  Remove redundant\n \tprototypes.\n\t(build_cause_exception): Add default case in switch.\n\t(update_else_range_for_range): Add parentheses around && within ||.\n\t(chill_handle_multi_case_label_list): Remove unused variable\n\t`selector_value'.\n\t(print_missing_cases): Reconcile format specifiers vs arguments in\n \tcalls to sprintf.\n\t* ch-tree.h: Don't include stdio.h.  Wrap prototypes using FILE*\n \twith macro BUFSIZ.  Add missing prototypes.\n\t* convert.c: Include system.h and toplev.h.  Remove redundant\n\tprototypes.\n  \t(convert): Remove unused variable `errstr'.\n\t* decl.c: Include system.h and toplev.h.  Remove redundant\n \tprototypes.\n\t(builtin_scope): Add missing initializers.\n\t(clear_scope): Likewise.\n\t(allocate_lang_decl): Mark parameter `t' with ATTRIBUTE_UNUSED.\n\t(copy_lang_decl): Likewise for parameter `node'.\n\t(c_decode_option): Likewise for parameter `argc'.\n\t(push_extern_function): Likewise for parameter `granting'.\n\t(switch_to_pass_2): Hide declaration of errorcount/sorrycount.\n\t(pushdecl): Remove unused variable `t'.\n\t(lookup_name_current_level): Make static and hide.\n\t(lookup_name_for_seizing): Make static.\n\t(finish_decl): Remove unused variable `type'.\n\t(maybe_build_cleanup): Mark parameter `decl' with ATTRIBUTE_UNUSED.\n\t(complete_array_type): Mark parameters `type', `initial_value' and\n \t`do_default' with ATTRIBUTE_UNUSED.\n\t(start_struct): Mark parameter `name' with ATTRIBUTE_UNUSED.\n\t(start_enum): Likewise.\n\t(shadow_record_fields): Remove unused variables `type' and `parent'.\n\t* except.c: Include toplev.h.  Remove redundant prototypes.\n\t* expr.c: Include system.h and toplev.h.  Don't define NULL.\n  \tRemove redundant prototypes.\n\t(internal_build_compound_expr): Mark parameter `first_p' with\n\tATTRIBUTE_UNUSED.\n\t(build_allocate_getstack): Remove unused variable `init'.\n\t(build_chill_pred_or_succ): Likewise for variable `limit'.\n\t(varying_to_slice): Likewise for variable `doamin' [sic].\n\t(finish_chill_binary_op): Likewise for variables `code0' and\n\t`code1'.  Remove unused label `finish'.  Add explicit braces to\n\tavoid ambiguous `else'.\n\t(build_chill_addr_expr): Remove extra parameter in call to `error'.\n\t(build_chill_unary_op): Remove unused variables `class' and `type0'.\n\t(powersetlen): Remove unused variables `domain' and `temp'.\n\t* grant.c: Include system.h, toplev.h and output.h.  Don't handle\n \tstrchr/strrchr.  Remove redundant prototypes.\n  \t(decode_constant_selective): Remove unused variables `op' and `wrk'.\n\t(push_granted): Mark parameters `name' and `decl' with\n \tATTRIBUTE_UNUSED.\n\t* inout.c: Include system.h and toplev.h.  Remove redundant\n \tprototypes.\n\t(textlocation_mode): Use &&, not &, when comparing two truth\n\tvalues.\n\t(scanformcont): Remove unused label `do_the_action'.\n\t* lang.c: Include system.h and toplev.h.  Remove redundant\n \tprototypes.\n\t(lookup_interface): Mark parameter `arg' with ATTRIBUTE_UNUSED.\n\t(maybe_objc_comptypes): Likewise for parameters `lhs' and `rhs'.\n\t(lang_print_xnode): Likewise for parameters `file', `node' and\n\t`indent'.\n\t(lang_decode_option): Explicitly declare `explicit_ignore_case'.\n\t(incomplete_type_error): Mark parameters `value' and `type' with\n\tATTRIBUTE_UNUSED.\n\t* lex.c: Include system.h and toplev.h.  Remove redundant\n \tprototypes.  Don't handle strchr/strrchr.  Use CAPITALIZED\n\tversions of ctype macros from system.h.  Cast ctype arguments to\n\tunsigned char when necessary.\n\t(last_token, RETURN_TOKEN): Hide definition.\n\t(push_back): Remove unused function.\n\t(readstring): Change variable `i' to unsigned.\n\t(yywrap): Remove unused variable `node'.\n\t* loop.c: Include system.h and toplev.h.  Remove redundant\n\tprototypes.\n\t(chill_unsigned_type): Hide prototype and definition.\n\t(begin_loop_scope): Remove unused variable `firstp'.\n\t(nonvalue_begin_loop_scope): Likewise.\n\t* parse.c: Include system.h and toplev.h.  Remove redundant\n\tprototypes.\n\t(quasi_signal): Hide.\n\t(PEEK_TOKEN): Change return type to `enum terminal'.\n\t(parse_mode_definition_statement): Remove unused variable `names'.\n\t(parse_formpar): Remove unused parameter `in_spec_module'.  All\n\tcallers changed.\n\t(parse_formparlist): Likewise.\n\t(parse_processpar): Remove unused variable `parms'.\n\t(parse_definition): Add explicit braces to avoid ambiguous `else'.\n\t(parse_multi_dimension_case_action): Initialize variable\n\t`begin_test_label'.  Remove unused variable `new_test'.\n\t(parse_case_action): Remove unused variable `caseaction_flag'.\n\t(parse_asm_clobbers): Remove unused variable `expr'.\n\t(parse_delay_case_action): Initialize variable `label_cnt'.\n\t(parse_action): Make function static.\n\t(parse_tuple_element): Remove unused variable `list'.\n\t(parse_primval): Add default case in switch.\n\t(parse_variant_alternative): Remove unused variables `x' and\n\t`variant_fields'.\n\t* satisfy.c: Include system.h and toplev.h.  Remove redundant\n\tprototypes.\n\t* tasking.c Include system.h and toplev.h.  Remove redundant\n\tprototypes.\n\t(data_name): Hide.\n\t(get_struct_variable_name): Likewise.\n\t(validate_process_parameters): Mark parameter `parms' with\n\tATTRIBUTE_UNUSED.\n\t(build_start_process): Initialize variable `tuple'.\n\t(build_receive_buffer_case_end): Remove unused variable `buffer_ptr'.\n\t* timing.c: Include system.h and toplev.h.\n\t(build_after_timeout_start): Remove unused variable `goto_where'.\n\t* tree.c: Include system.h and toplev.h.  Remove redundant\n\tprototypes.\n\t* typeck.c: Include system.h and toplev.h.  Remove redundant\n\tprototypes.\n\t(extract_constant_from_buffer): Make function static.  Add\n \texplicit braces to avoid ambiguous `else'.\n\t(expand_constant_to_buffer): Likewise.\n\t(build_chill_slice): remove unused variable `is_static'.\n\t(chill_compatible): Add explicit braces to avoid ambiguous `else'.\n\t(apply_chill_array_layout): Remove unused variable `offset'.\n\t(smash_dummy_type): Remove unused variable `save_lang_specific'.\n\t(initializer_constant_valid_p): Add default case in switch.\n\nFrom-SVN: r22493", "tree": {"sha": "d27f7048847bc13ea36b08616d926a32a195fdac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d27f7048847bc13ea36b08616d926a32a195fdac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7511142254795beb9417f1c226d3ba471a9272fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7511142254795beb9417f1c226d3ba471a9272fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7511142254795beb9417f1c226d3ba471a9272fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7511142254795beb9417f1c226d3ba471a9272fc/comments", "author": null, "committer": null, "parents": [{"sha": "9a8a3666686731ec5447bc93b6dc27a9b9d97ec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a8a3666686731ec5447bc93b6dc27a9b9d97ec0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a8a3666686731ec5447bc93b6dc27a9b9d97ec0"}], "stats": {"total": 809, "additions": 410, "deletions": 399}, "files": [{"sha": "b27ba2ee7a06ae0a383c6f27c222afffaddf4eb3", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 147, "deletions": 0, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -1,3 +1,150 @@\n+Sun Sep 20 09:25:13 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (actions.o, convert.o, decl.o, expr.o, lang.o,\n+\tlex.o, loop.o, parse.o, satisfy.o, timing.o, tasking.o, tree.o,\n+\ttypeck.o): Depend on system.h and toplev.h.\n+\t(except.o): Depend on toplev.h.\n+\t(grant.o): Depend on system.h, toplev.h and output.h.\n+\n+\t* actions.c: Include system.h and toplev.h.  Remove redundant\n+ \tprototypes.\n+\t(build_cause_exception): Add default case in switch.\n+\t(update_else_range_for_range): Add parentheses around && within ||.\n+\t(chill_handle_multi_case_label_list): Remove unused variable\n+\t`selector_value'.\n+\t(print_missing_cases): Reconcile format specifiers vs arguments in\n+ \tcalls to sprintf.\n+\n+\t* ch-tree.h: Don't include stdio.h.  Wrap prototypes using FILE*\n+ \twith macro BUFSIZ.  Add missing prototypes.\n+\n+\t* convert.c: Include system.h and toplev.h.  Remove redundant\n+\tprototypes.\n+  \t(convert): Remove unused variable `errstr'.\n+\n+\t* decl.c: Include system.h and toplev.h.  Remove redundant\n+ \tprototypes.\n+\t(builtin_scope): Add missing initializers.\n+\t(clear_scope): Likewise.\n+\t(allocate_lang_decl): Mark parameter `t' with ATTRIBUTE_UNUSED.\n+\t(copy_lang_decl): Likewise for parameter `node'.\n+\t(c_decode_option): Likewise for parameter `argc'.\n+\t(push_extern_function): Likewise for parameter `granting'.\n+\t(switch_to_pass_2): Hide declaration of errorcount/sorrycount.\n+\t(pushdecl): Remove unused variable `t'.\n+\t(lookup_name_current_level): Make static and hide.\n+\t(lookup_name_for_seizing): Make static.\n+\t(finish_decl): Remove unused variable `type'.\n+\t(maybe_build_cleanup): Mark parameter `decl' with ATTRIBUTE_UNUSED.\n+\t(complete_array_type): Mark parameters `type', `initial_value' and\n+ \t`do_default' with ATTRIBUTE_UNUSED.\n+\t(start_struct): Mark parameter `name' with ATTRIBUTE_UNUSED.\n+\t(start_enum): Likewise.\n+\t(shadow_record_fields): Remove unused variables `type' and `parent'.\n+\n+\t* except.c: Include toplev.h.  Remove redundant prototypes.\n+\n+\t* expr.c: Include system.h and toplev.h.  Don't define NULL.\n+  \tRemove redundant prototypes.\n+\t(internal_build_compound_expr): Mark parameter `first_p' with\n+\tATTRIBUTE_UNUSED.\n+\t(build_allocate_getstack): Remove unused variable `init'.\n+\t(build_chill_pred_or_succ): Likewise for variable `limit'.\n+\t(varying_to_slice): Likewise for variable `doamin' [sic].\n+\t(finish_chill_binary_op): Likewise for variables `code0' and\n+\t`code1'.  Remove unused label `finish'.  Add explicit braces to\n+\tavoid ambiguous `else'.\n+\t(build_chill_addr_expr): Remove extra parameter in call to `error'.\n+\t(build_chill_unary_op): Remove unused variables `class' and `type0'.\n+\t(powersetlen): Remove unused variables `domain' and `temp'.\n+\n+\t* grant.c: Include system.h, toplev.h and output.h.  Don't handle\n+ \tstrchr/strrchr.  Remove redundant prototypes.\n+  \t(decode_constant_selective): Remove unused variables `op' and `wrk'.\n+\t(push_granted): Mark parameters `name' and `decl' with\n+ \tATTRIBUTE_UNUSED.\n+\n+\t* inout.c: Include system.h and toplev.h.  Remove redundant\n+ \tprototypes.\n+\t(textlocation_mode): Use &&, not &, when comparing two truth\n+\tvalues.\n+\t(scanformcont): Remove unused label `do_the_action'.\n+\n+\t* lang.c: Include system.h and toplev.h.  Remove redundant\n+ \tprototypes.\n+\t(lookup_interface): Mark parameter `arg' with ATTRIBUTE_UNUSED.\n+\t(maybe_objc_comptypes): Likewise for parameters `lhs' and `rhs'.\n+\t(lang_print_xnode): Likewise for parameters `file', `node' and\n+\t`indent'.\n+\t(lang_decode_option): Explicitly declare `explicit_ignore_case'.\n+\t(incomplete_type_error): Mark parameters `value' and `type' with\n+\tATTRIBUTE_UNUSED.\n+\n+\t* lex.c: Include system.h and toplev.h.  Remove redundant\n+ \tprototypes.  Don't handle strchr/strrchr.  Use CAPITALIZED\n+\tversions of ctype macros from system.h.  Cast ctype arguments to\n+\tunsigned char when necessary.\n+\t(last_token, RETURN_TOKEN): Hide definition.\n+\t(push_back): Remove unused function.\n+\t(readstring): Change variable `i' to unsigned.\n+\t(yywrap): Remove unused variable `node'.\n+\n+\t* loop.c: Include system.h and toplev.h.  Remove redundant\n+\tprototypes.\n+\t(chill_unsigned_type): Hide prototype and definition.\n+\t(begin_loop_scope): Remove unused variable `firstp'.\n+\t(nonvalue_begin_loop_scope): Likewise.\n+\n+\t* parse.c: Include system.h and toplev.h.  Remove redundant\n+\tprototypes.\n+\t(quasi_signal): Hide.\n+\t(PEEK_TOKEN): Change return type to `enum terminal'.\n+\t(parse_mode_definition_statement): Remove unused variable `names'.\n+\t(parse_formpar): Remove unused parameter `in_spec_module'.  All\n+\tcallers changed.\n+\t(parse_formparlist): Likewise.\n+\t(parse_processpar): Remove unused variable `parms'.\n+\t(parse_definition): Add explicit braces to avoid ambiguous `else'.\n+\t(parse_multi_dimension_case_action): Initialize variable\n+\t`begin_test_label'.  Remove unused variable `new_test'.\n+\t(parse_case_action): Remove unused variable `caseaction_flag'.\n+\t(parse_asm_clobbers): Remove unused variable `expr'.\n+\t(parse_delay_case_action): Initialize variable `label_cnt'.\n+\t(parse_action): Make function static.\n+\t(parse_tuple_element): Remove unused variable `list'.\n+\t(parse_primval): Add default case in switch.\n+\t(parse_variant_alternative): Remove unused variables `x' and\n+\t`variant_fields'.\n+\n+\t* satisfy.c: Include system.h and toplev.h.  Remove redundant\n+\tprototypes.\n+\n+\t* tasking.c Include system.h and toplev.h.  Remove redundant\n+\tprototypes.\n+\t(data_name): Hide.\n+\t(get_struct_variable_name): Likewise.\n+\t(validate_process_parameters): Mark parameter `parms' with\n+\tATTRIBUTE_UNUSED.\n+\t(build_start_process): Initialize variable `tuple'.\n+\t(build_receive_buffer_case_end): Remove unused variable `buffer_ptr'.\n+\n+\t* timing.c: Include system.h and toplev.h.\n+\t(build_after_timeout_start): Remove unused variable `goto_where'.\n+\n+\t* tree.c: Include system.h and toplev.h.  Remove redundant\n+\tprototypes.\n+\n+\t* typeck.c: Include system.h and toplev.h.  Remove redundant\n+\tprototypes.\n+\t(extract_constant_from_buffer): Make function static.  Add\n+ \texplicit braces to avoid ambiguous `else'.\n+\t(expand_constant_to_buffer): Likewise.\n+\t(build_chill_slice): remove unused variable `is_static'.\n+\t(chill_compatible): Add explicit braces to avoid ambiguous `else'. \n+\t(apply_chill_array_layout): Remove unused variable `offset'.\n+\t(smash_dummy_type): Remove unused variable `save_lang_specific'.\n+\t(initializer_constant_valid_p): Add default case in switch.\n+\n Mon Sep 14 16:46:36 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* typeck.c (build_chill_slice): Always use TYPE_DOMAIN to get the"}, {"sha": "712272b85e6b536732dc7aba2a46db70fbb5c26e", "filename": "gcc/ch/Makefile.in", "status": "modified", "additions": 33, "deletions": 18, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMakefile.in?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -270,34 +270,49 @@ $(srcdir)/hash.h:\n \t$(RM) gperf.tmp gperf.tmp2 sed.tmp\n \n actions.o : actions.c $(CONFIG_H) $(CHILL_TREE_H) actions.h $(RTL_H) \\\n-\t      lex.h $(srcdir)/../flags.h $(srcdir)/../../include/obstack.h $(srcdir)/../input.h $(srcdir)/../expr.h ../insn-codes.h\n-convert.o : convert.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h $(srcdir)/../tree.h\n-decl.o : decl.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h lex.h\n-except.o : except.c $(CONFIG_H) $(srcdir)/../tree.h $(RTL_H) $(CHILL_TREE_H)\n+\tlex.h $(srcdir)/../flags.h $(srcdir)/../../include/obstack.h \\\n+\t$(srcdir)/../input.h $(srcdir)/../expr.h ../insn-codes.h \\\n+\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n+convert.o : convert.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n+\t$(srcdir)/../tree.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n+decl.o : decl.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h lex.h \\\n+\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n+except.o : except.c $(CONFIG_H) $(srcdir)/../tree.h $(RTL_H) $(CHILL_TREE_H) \\\n+\t$(srcdir)/../toplev.h\n expr.o : expr.c $(CONFIG_H) $(RTL_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n-\t$(srcdir)/../expr.h ../insn-codes.h $(srcdir)/../tree.h lex.h\n-grant.o: grant.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h $(srcdir)/../input.h \\\n-            lex.h actions.h $(srcdir)/../input.h\n-inout.o : inout.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h $(srcdir)/../input.h\n-lang.o : lang.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../input.h lex.h\n-lex.o : lex.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h $(srcdir)/../input.h \\\n-           $(srcdir)/parse.h $(srcdir)/../../include/obstack.h lex.h\n+\t$(srcdir)/../expr.h ../insn-codes.h $(srcdir)/../tree.h lex.h \\\n+\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n+grant.o: grant.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n+\t$(srcdir)/../input.h lex.h actions.h $(srcdir)/../system.h \\\n+\t$(srcdir)/../toplev.h $(srcdir)/../output.h\n+inout.o : inout.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n+\t$(srcdir)/../input.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n+lang.o : lang.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../input.h lex.h \\\n+\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n+lex.o : lex.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n+\t$(srcdir)/../input.h $(srcdir)/parse.h $(srcdir)/../system.h \\\n+\t$(srcdir)/../toplev.h $(srcdir)/../../include/obstack.h lex.h\n lex.c: hash.h\n loop.o : loop.c $(CONFIG_H) $(RTL_H) $(CHILL_TREE_H) lex.h \\\n \t$(srcdir)/../flags.h $(srcdir)/../input.h \\\n-\t$(srcdir)/../../include/obstack.h $(srcdir)/../tree.h\n+\t$(srcdir)/../../include/obstack.h $(srcdir)/../tree.h \\\n+\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n parse.o : parse.c $(CONFIG_H) $(CHILL_TREE_H) parse.h \\\n-\tlex.h actions.h tasking.h\n+\tlex.h actions.h tasking.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n satisfy.o : satisfy.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../tree.h \\\n-\t$(srcdir)/../flags.h lex.h\n+\t$(srcdir)/../flags.h lex.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n timing.o : timing.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n-\t$(srcdir)/../input.h $(srcdir)/../../include/obstack.h lex.h\n+\t$(srcdir)/../input.h $(srcdir)/../../include/obstack.h lex.h \\\n+\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n tasking.o : tasking.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) \\\n \t$(srcdir)/../flags.h $(srcdir)/../input.h \\\n-\t$(srcdir)/../../include/obstack.h lex.h\n-tree.o : tree.c $(CONFIG_H) $(CHILL_TREE_H)\n+\t$(srcdir)/../../include/obstack.h lex.h $(srcdir)/../system.h \\\n+\t$(srcdir)/../toplev.h\n+tree.o : tree.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../system.h \\\n+\t$(srcdir)/../toplev.h\n typeck.o : typeck.c $(CONFIG_H) $(CHILL_TREE_H) ../insn-codes.h \\\n-\t$(srcdir)/../expr.h $(srcdir)/../flags.h lex.h\n+\t$(srcdir)/../expr.h $(srcdir)/../flags.h lex.h $(srcdir)/../system.h \\\n+\t$(srcdir)/../toplev.h\n ch-version.o : ch-version.c\n ch-version.c : Makefile\n \techo 'char *gnuchill_version = \"$(GNUCHILL_VERSION)\";' > $@"}, {"sha": "11722197f8edfbd4f13d60113f21cb97d60ce258", "filename": "gcc/ch/actions.c", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Factions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Factions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Factions.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -18,9 +18,8 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#include <stdio.h>\n-#include <limits.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"expr.h\"\n@@ -30,6 +29,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"actions.h\"\n #include \"obstack.h\"\n #include \"assert.h\"\n+#include \"toplev.h\"\n \n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n@@ -43,18 +43,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n extern int flag_short_enums;\n extern int current_nesting_level;\n \n-extern tree build_chill_compound_expr PROTO((tree));\n-extern tree build_chill_exception_decl PROTO((char *));\n-extern tree convert                   PROTO((tree, tree));\n-extern rtx  emit_line_note_force      PROTO((char *, int));\n-extern void error                     PROTO((char *, ...));\n-extern void error_with_decl           PROTO((tree, char *, ...));\n-extern rtx  gen_nop                   PROTO((void));\n-extern tree get_identifier            PROTO((char *));\n-extern void pedwarn                   PROTO((char *, ...));\n-extern void sorry                     PROTO((char *, ...));\n-extern void warning                   PROTO((char *, ...));\n-\n extern struct obstack *expression_obstack, permanent_obstack;\n extern struct obstack *current_obstack, *saveable_obstack;\n \n@@ -337,6 +325,8 @@ build_cause_exception (exp_name, warn_if_unhandled)\n       if (lineno == NULL_TREE)\n \tlineno = error_mark_node;\n       break;\n+    default:\n+      abort();\n     }\n   result =\n     build_chill_function_call (function,\n@@ -849,8 +839,8 @@ update_else_range_for_range (else_range, low_target, high_target)\n     {\n       low_range_val  = TREE_INT_CST_LOW (TREE_PURPOSE (this_range));\n       high_range_val = TREE_INT_CST_LOW (TREE_VALUE (this_range));\n-      if (low_target_val >= low_range_val && low_target_val <= high_range_val\n-\t  || high_target_val >= low_range_val && high_target_val <= high_range_val)\n+      if ((low_target_val >= low_range_val && low_target_val <= high_range_val)\n+\t  || (high_target_val >= low_range_val && high_target_val <= high_range_val))\n \tbreak;\n       prev_range = this_range;\n     }\n@@ -1305,7 +1295,7 @@ static tree\n chill_handle_multi_case_label_list (selector, labels)\n   tree selector, labels;\n {\n-  tree one_label, selector_value, larg, rarg;\n+  tree one_label, larg, rarg;\n \n   one_label = TREE_VALUE (labels);\n   larg = chill_handle_multi_case_label (selector, TREE_VALUE (one_label));\n@@ -1352,9 +1342,6 @@ build_multi_case_selector_expression (selector_list, label_spec)\n   ((ARRAY)[(unsigned)(INDEX) / HOST_BITS_PER_CHAR]\\\n \t\t\t  |= 1 << ((unsigned)(INDEX) % HOST_BITS_PER_CHAR))\n \n-extern HOST_WIDE_INT all_cases_count PROTO((tree, int*));\n-extern void mark_seen_cases PROTO((tree, unsigned char*, long, int));\n-\n /* CASES_SEEN is a set (bitarray) of length COUNT.\n    For each element that is zero, print an error message,\n    assume the element have the given TYPE. */\n@@ -1388,9 +1375,9 @@ print_missing_cases (type, cases_seen, count)\n \t      break;\n \t    case CHAR_TYPE:\n \t      if ((x >= ' ' && x < 127) && x != '\\'' && x != '^')\n-\t\tsprintf (buf, \"'%c'\", x);\n+\t\tsprintf (buf, \"'%c'\", (char)x);\n \t      else\n-\t\tsprintf (buf, \"'^(%d)'\", x);\n+\t\tsprintf (buf, \"'^(%ld)'\", x);\n \t      err_val_name = buf;\n \t      j = i;\n \t      while (j < count && !BITARRAY_TEST(cases_seen, j))\n@@ -1400,9 +1387,9 @@ print_missing_cases (type, cases_seen, count)\n \t\t  long y = x+j-i-1;\n \t\t  err_val_name += strlen (err_val_name);\n \t\t  if ((y >= ' ' && y < 127) && y != '\\'' && y != '^')\n-\t\t    sprintf (err_val_name, \"%s:'%c'\", buf, y);\n+\t\t    sprintf (err_val_name, \"%s:'%c'\", buf, (char)y);\n \t\t  else\n-\t\t    sprintf (err_val_name, \"%s:'^(%d)'\", buf, y);\n+\t\t    sprintf (err_val_name, \"%s:'^(%ld)'\", buf, y);\n \t\t  i = j - 1;      \n \t\t}\n \t      break;\n@@ -1417,9 +1404,9 @@ print_missing_cases (type, cases_seen, count)\n \t      while (j < count && !BITARRAY_TEST(cases_seen, j))\n \t\tj++;\n \t      if (j == i + 1)\n-\t\tsprintf (buf, \"%d\", x);\n+\t\tsprintf (buf, \"%ld\", x);\n \t      else\n-\t\tsprintf (buf, \"%d:%d\", x, x+j-i-1);\n+\t\tsprintf (buf, \"%ld:%ld\", x, x+j-i-1);\n \t      i = j - 1;      \n \t      err_val_name = buf;\n \t      break;"}, {"sha": "cb3fd3d659373f87e68740f79e223eb11a900b5b", "filename": "gcc/ch/ch-tree.h", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fch-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fch-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fch-tree.h?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -20,8 +20,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #ifndef _CH_TREE_H\n #define _CH_TREE_H\n \n-#include <stdio.h>\n-\n /* Usage of TREE_LANG_FLAG_?:\n    1: TUPLE_NAMED_FIELD\n    \"  TYPE_FIELDS_READONLY (in ARRAY_TYPE, RECORD_TYPE or UNION_TYPE)\n@@ -643,7 +641,9 @@ extern tree combine_strings                     PROTO((tree));\n extern void constant_expression_warning         PROTO((tree));\n extern void decl_attributes                     PROTO((tree, tree));\n extern void declare_function_name               PROTO((void));\n+#ifdef BUFSIZ\n extern char *get_directive_line                 PROTO((FILE *));\n+#endif\n extern tree shorten_compare                     PROTO((tree *, tree *, tree *, enum tree_code *));\n \n /* in c-decl.c */\n@@ -718,9 +718,11 @@ extern void parmlist_tags_warning               PROTO((void));\n extern void pending_xref_error                  PROTO((void));\n extern void pop_chill_function_context          PROTO((void));\n extern tree poplevel                            PROTO((int, int, int));\n+#ifdef BUFSIZ\n extern void print_lang_decl                     PROTO((FILE *,tree, int));\n extern void print_lang_identifier               PROTO((FILE *,tree, int));\n extern void print_lang_type                     PROTO((FILE *,tree, int));\n+#endif\n extern void push_chill_function_context         PROTO((void));\n extern void push_parm_decl                      PROTO((tree));\n extern tree pushdecl                            PROTO((tree));\n@@ -783,6 +785,7 @@ extern tree build_chill_binary_op               PROTO((enum chill_tree_code, tre\n extern tree build_chill_card                    PROTO((tree));\n extern tree build_chill_case_expr               PROTO((tree, tree, tree)); \n extern tree build_cause_exception               PROTO((tree, int));\n+extern tree build_chill_exception_decl          PROTO((char *));\n extern tree build_chill_function_call           PROTO((tree, tree));\n extern tree build_chill_length                  PROTO((tree));\n extern tree build_chill_indirect_ref            PROTO((tree, tree, int));\n@@ -807,11 +810,13 @@ extern void chill_check_decl                    PROTO((tree));\n extern tree chill_convert_for_assignment        PROTO((tree, tree, char*));\n extern void chill_expand_return                 PROTO((tree, int));\n extern void chill_expand_result                 PROTO((tree, int));\n+extern void chill_handle_case_default           PROTO((void));\n extern void chill_handle_case_label\t\tPROTO((tree, tree));\n extern int  chill_varying_string_type_p         PROTO((tree));\n extern int  chill_varying_type_p                PROTO((tree));\n extern int  ch_singleton_set                    PROTO((tree));\n extern tree check_expression                    PROTO((tree, tree, tree));\n+extern void check_missing_cases                 PROTO((tree));\n extern tree check_non_null                      PROTO((tree));\n extern tree check_range                         PROTO((tree, tree, tree,tree));\n extern void cond_type_range_exception           PROTO((tree));\n@@ -841,37 +846,52 @@ extern void do_chill_outparms                   PROTO((void));\n extern tree do_decl                             PROTO((tree, tree, int, int, tree, int));\n extern void do_decls                            PROTO((tree, tree, int, int, tree, int));\n extern void expand_chill_outparms               PROTO((void));\n+extern void find_granted_decls\t\t        PROTO((void));\n extern void finish_chill_function               PROTO(());\n extern tree finish_enum\t\t                PROTO((tree, tree));\n extern void fixup_chill_parms                   PROTO((tree));\n extern void finish_outer_function               PROTO((void));\n+extern unsigned get_type_precision              PROTO((tree, tree));\n extern tree grok_chill_fixedfields              PROTO((tree, tree, tree));\n extern tree grok_chill_variantdefs              PROTO((tree, tree, tree));\n+extern void layout_enum                         PROTO((tree));\n /* extern tree lookup_remembered_decl PROTO((HOST_WIDE_INT, tree)); */\n+extern void lookup_and_expand_goto\t\tPROTO((tree));\n extern tree lookup_tag_fields\t\t        PROTO((tree, tree));\n+extern void lookup_and_handle_exit              PROTO((tree));\n extern tree massage_param_node\t\t\tPROTO((tree, tree));\n extern void pop_module                          PROTO((void));\n extern void print_mode                          PROTO((tree));\n extern tree push_extern_function                PROTO((tree, tree, tree, tree, int));\n extern void push_extern_process                 PROTO((tree, tree, tree, int));\n extern void push_extern_signal                  PROTO((tree, tree, tree));\n+extern void push_granted                        PROTO((tree, tree));\n extern tree push_modedef                        PROTO((tree, tree, int));\n extern tree push_module                         PROTO((tree, int));\n extern void push_parms                          PROTO((tree, tree, tree));\n extern void push_syndecl                        PROTO((tree, tree, tree));\n extern int result_never_set;\n+extern void save_expr_under_name                PROTO((tree, tree));\n+extern tree set_module_name                     PROTO((tree));\n extern int  start_chill_function                PROTO((tree, tree, tree, tree, tree));\n extern void start_outer_function\t        PROTO((void));\n extern void switch_to_pass_2 \t                PROTO((void));\n \n /* in ch/except.c */\n extern void chill_check_no_handlers             PROTO((void));\n+extern void chill_finish_on                     PROTO((void));\n+extern void chill_handle_on_labels              PROTO((tree));\n extern void chill_reraise_exceptions            PROTO((tree));\n+extern void chill_start_default_handler         PROTO((void));\n+extern void chill_start_on                      PROTO((void));\n+extern void expand_goto_except_cleanup          PROTO((int));\n+extern int is_handled\t\t\t\tPROTO((tree));\n \n /* in ch/expr.c */\n extern tree build_chill_addr_expr               PROTO((tree, char *));\n extern tree build_chill_arrow_expr              PROTO((tree, int));\n extern tree build_component_ref\t\t        PROTO((tree, tree));\n+extern tree build_chill_compound_expr           PROTO((tree));\n extern tree build_chill_descr                   PROTO((tree));\n extern void build_chill_descr_type              PROTO((void));\n extern void build_chill_inttime_type            PROTO((void));\n@@ -900,6 +920,7 @@ extern void start_outer_function\t        PROTO((void));\n extern void finish_chill_seize                  PROTO((tree));\n extern void chill_grant                         PROTO((tree,tree, tree, tree));\n extern void set_default_grant_file              PROTO((void));\n+extern void set_identifier_size                 PROTO((int));\n extern void write_grant_file                    PROTO((void));\n extern void write_spec_module                   PROTO((tree, tree));\n \n@@ -982,6 +1003,7 @@ extern tree build_chill_variable                PROTO((tree));\n extern tree build_chill_writeable               PROTO((tree));\n extern tree build_chill_writerecord             PROTO((tree, tree));\n extern tree build_chill_writetext               PROTO((tree, tree));\n+extern void build_enum_tables                   PROTO((void));\n extern tree build_text_mode                     PROTO((tree, tree, int));\n extern tree check_text_length                   PROTO((tree, tree));\n extern void init_access_location                PROTO((tree, tree));\n@@ -1048,6 +1070,9 @@ extern tree get_tasking_code_name               PROTO((tree));\n extern tree make_process_struct                 PROTO((tree, tree));\n extern tree make_signal_struct                  PROTO((tree));\n extern tree max_queue_size                      PROTO((tree));\n+extern void tasking_init                        PROTO((void));\n+extern void tasking_registry                    PROTO((void));\n+extern void tasking_setup                       PROTO((void));\n \n /* in ch/timing.c */\n extern tree abs_timing_type_node;\n@@ -1097,6 +1122,7 @@ extern ch_class chill_resulting_class           PROTO((ch_class, ch_class));\n extern tree chill_resulting_mode                PROTO((tree, tree));\n extern int  chill_similar\t                PROTO((tree, tree, struct mode_chain*));\n extern int  discrete_type_p\t\t\tPROTO((tree));\n+extern tree initializer_constant_valid_p        PROTO((tree, tree));\n extern tree convert_to_discrete                 PROTO((tree));\n extern tree smash_dummy_type                    PROTO((tree));\n extern tree string_assignment_condition         PROTO((tree, tree));"}, {"sha": "48becd0f36032586b866f9738c0ea06f31c8e9c7", "filename": "gcc/ch/convert.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fconvert.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -24,14 +24,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    but what kind of conversions it does will depend on the language.  */\n \n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"ch-tree.h\"\n #include \"flags.h\"\n #include \"convert.h\"\n #include \"lex.h\"\n+#include \"toplev.h\"\n \n-extern void error                              PROTO((char *, ...));\n-extern tree initializer_constant_valid_p       PROTO((tree, tree));\n extern tree bit_one_node, bit_zero_node;\n extern tree string_one_type_node;\n extern tree bitstring_one_type_node;\n@@ -932,7 +932,6 @@ convert (type, expr)\n {\n   register tree e = expr;\n   register enum chill_tree_code code;\n-  char *errstr;\n   int type_varying;\n \n   if (e == NULL_TREE || TREE_CODE (e) == ERROR_MARK)"}, {"sha": "da0822264a0c365cffe8477a70320d46bd10c692", "filename": "gcc/ch/decl.c", "status": "modified", "additions": 27, "deletions": 49, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fdecl.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -179,15 +179,16 @@\n /* ??? not all decl nodes are given the most useful possible\n    line numbers.  For example, the CONST_DECLs for enum values.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"ch-tree.h\"\n #include \"lex.h\"\n #include \"obstack.h\"\n #include \"input.h\"\n #include \"rtl.h\"\n+#include \"toplev.h\"\n \n #define IS_UNKNOWN_TYPE(type) (TYPE_SIZE(type)==0)\n #define BUILTIN_NESTING_LEVEL (-1)\n@@ -203,30 +204,12 @@ extern struct obstack *saveable_obstack;\n extern tree signal_code;\n extern int special_UC;\n \n-extern void tasking_init              PROTO((void));\n-extern void error                     PROTO((char *, ...));\n-extern void error_with_decl           PROTO((tree, char *, ...));\n-extern void expand_decl               PROTO((tree));\n static tree get_next_decl             PROTO((void));\n-extern tree get_parm_decls            PROTO((void));\n-extern void end_temporary_allocation  PROTO((void));\n-extern void indent_to                 PROTO((FILE *, int));\n-#ifdef RTX_CODE\n-extern rtx  label_rtx                 PROTO((tree));\n+static tree lookup_name_for_seizing   PROTO((tree));\n+#if 0\n+static tree lookup_name_current_level PROTO((tree));\n #endif\n-extern tree lookup_name_for_seizing   PROTO((tree));\n-extern tree lookup_name_current_level PROTO((tree));\n-extern int  operand_equal_p           PROTO((tree, tree, int));\n-extern void pedwarn_with_decl         PROTO((tree, char *, ...));\n-extern void print_node                PROTO((FILE *, char *, tree, int));\n-extern void push_granted              PROTO((tree, tree));\n-extern void push_obstacks             PROTO((struct obstack *, struct obstack *));\n-extern void rest_of_decl_compilation  PROTO((tree, char *, int, int));\n-extern void sorry                     PROTO((char *, ...));\n static void save_decl                 PROTO((tree));\n-extern void start_identifier_warnings PROTO((void));\n-extern void temporary_allocation      PROTO((void));\n-extern void warning                   PROTO((char *, ...));\n \n extern struct obstack permanent_obstack;\n extern int in_pseudo_module;\n@@ -547,7 +530,9 @@ struct scope\n \n /* The outermost binding level, for pre-defined (builtin) names. */\n \n-static struct scope builtin_scope = { NULL, NULL, NULL_TREE};\n+static struct scope builtin_scope = {\n+  NULL, NULL, NULL_TREE, NULL_TREE, NULL_TREE, NULL_TREE, NULL_TREE,\n+  NULL_TREE, NULL_TREE, NULL, 0, 0, NULL, NULL, NULL};\n \n struct scope *global_scope;\n \n@@ -560,21 +545,14 @@ struct scope *last_scope = &builtin_scope;\n \n /* Binding level structures are initialized by copying this one.  */\n \n-static struct scope clear_scope\n-  = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0};\n+static struct scope clear_scope = {\n+  NULL, NULL, NULL_TREE, NULL_TREE, NULL_TREE, NULL_TREE, NULL_TREE,\n+  NULL_TREE, NULL_TREE, NULL, 0, 0, NULL, NULL, NULL};\n \n /* Chain of decls accessible through IDENTIFIER_OUTER_VALUE.\n    Decls with the same DECL_NAME are adjacent in the chain. */\n \n static tree outer_decls = NULL_TREE;\n-\n-/* Forward declarations.  */\n-\n-tree pushdecl ();\n-tree builtin_function ();\n-\n-tree lookup_name_current_level ();\n-static void layout_array_type ();\n \f\n /* C-specific option variables.  */\n \n@@ -730,14 +708,14 @@ tree ALL_POSTFIX;\n \f\n void\n allocate_lang_decl (t)\n-     tree t;\n+     tree t ATTRIBUTE_UNUSED;\n {\n   /* Nothing needed */\n }\n \n void\n copy_lang_decl (node)\n-     tree node;\n+     tree node ATTRIBUTE_UNUSED;\n {\n   /* Nothing needed */\n }\n@@ -757,7 +735,7 @@ build_lang_decl (code, name, type)\n \n int\n c_decode_option (argc, argv)\n-     int argc;\n+     int argc ATTRIBUTE_UNUSED;\n      char **argv;\n {\n   char *p = argv[0];\n@@ -1342,8 +1320,8 @@ build_chill_function_type (return_type, argtypes, exceptions, recurse_p)\n  */\n tree\n push_extern_function (name, typespec, argtypes, exceptions, granting)\n-     tree name, typespec, argtypes, exceptions;\n-     int granting; /* If 0 do pushdecl(); if 1 do push_granted(). */\n+  tree name, typespec, argtypes, exceptions;\n+  int granting ATTRIBUTE_UNUSED;/*If 0 do pushdecl(); if 1 do push_granted()*/\n {\n   tree ftype, fndecl;\n   \n@@ -2211,7 +2189,9 @@ get_next_decl ()\n void\n switch_to_pass_2 ()\n {\n+#if 0\n   extern int errorcount, sorrycount;\n+#endif\n   if (current_scope != &builtin_scope)\n     abort ();\n   last_scope = &builtin_scope;\n@@ -3163,7 +3143,6 @@ tree\n pushdecl (x)\n      tree x;\n {\n-  register tree t;\n   register tree name = DECL_NAME (x);\n   register struct scope *b = current_scope;\n \n@@ -3336,9 +3315,10 @@ lookup_name (name)\n   return val;\n }\n \n+#if 0\n /* Similar to `lookup_name' but look only at current binding level.  */\n \n-tree\n+static tree\n lookup_name_current_level (name)\n      tree name;\n {\n@@ -3347,8 +3327,9 @@ lookup_name_current_level (name)\n     return val;\n   return NULL_TREE;\n }\n+#endif\n \n-tree\n+static tree\n lookup_name_for_seizing (seize_decl)\n      tree seize_decl;\n {\n@@ -4320,7 +4301,6 @@ void\n finish_decl (decl)\n      tree decl;\n {\n-  register tree type = TREE_TYPE (decl);\n   int was_incomplete = (DECL_SIZE (decl) == 0);\n   int temporary = allocation_temporary_p ();\n \n@@ -4425,7 +4405,7 @@ finish_decl (decl)\n \n tree\n maybe_build_cleanup (decl)\n-     tree decl;\n+     tree decl ATTRIBUTE_UNUSED;\n {\n   /* There are no cleanups in C.  */\n   return NULL_TREE;\n@@ -4437,8 +4417,8 @@ maybe_build_cleanup (decl)\n \n int\n complete_array_type (type, initial_value, do_default)\n-     tree type, initial_value;\n-     int do_default;\n+     tree type ATTRIBUTE_UNUSED, initial_value ATTRIBUTE_UNUSED;\n+     int do_default ATTRIBUTE_UNUSED;\n {\n   /* Only needed so we can link with ../c-typeck.c. */\n   abort ();\n@@ -4454,7 +4434,7 @@ complete_array_type (type, initial_value, do_default)\n tree\n start_struct (code, name)\n      enum chill_tree_code code;\n-     tree name;\n+     tree name ATTRIBUTE_UNUSED;\n {\n   /* If there is already a tag defined at this binding level\n      (as a forward reference), just return it.  */\n@@ -4538,7 +4518,7 @@ layout_array_type (t)\n \n tree\n start_enum (name)\n-     tree name;\n+     tree name ATTRIBUTE_UNUSED;\n {\n   register tree enumtype;\n \n@@ -5075,8 +5055,6 @@ void\n shadow_record_fields (struct_val)\n      tree struct_val;\n {\n-    tree type, parent;\n-\n     if (pass == 1 || struct_val == NULL_TREE)\n       return;\n "}, {"sha": "db02a920c5cbdec92937715638fe5cd8c794150f", "filename": "gcc/ch/except.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fexcept.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -22,6 +22,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"tree.h\"\n #include \"ch-tree.h\"\n #include \"rtl.h\"\n+#include \"toplev.h\"\n \n /* On Suns this can get you to the right definition if you\n    set the right value for TARGET.  */\n@@ -51,13 +52,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #endif\n \n extern int  expand_exit_needed;\n-extern tree build_chill_exception_decl PROTO((char *));\n-extern void chill_handle_case_default  PROTO((void));\n-extern void emit_jump                  PROTO((rtx));\n-extern void expand_decl                PROTO((tree));\n-extern void fatal                      PROTO((char *, ...));\n-extern void make_decl_rtl              PROTO((tree, char *, int));\n-extern void rest_of_decl_compilation   PROTO((tree, char *, int, int));\n \n static tree link_handler_decl;\n static tree handler_link_pointer_type;"}, {"sha": "3326eead38fa5ba6f2322d063a3fb6a365cffa2a", "filename": "gcc/ch/expr.c", "status": "modified", "additions": 24, "deletions": 44, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fexpr.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -20,7 +20,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n@@ -29,26 +29,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"assert.h\"\n #include \"lex.h\"\n #include \"convert.h\"\n-\n-#ifndef NULL\n-#define NULL 0\n-#endif\n+#include \"toplev.h\"\n \n extern char **boolean_code_name;\n extern int  flag_old_strings;\n extern tree long_unsigned_type_node;\n extern int  ignore_case;\n extern int  special_UC;\n \n-extern void check_for_full_enumeration_handling PROTO((tree));\n-extern void chill_handle_case_default           PROTO((void));\n-extern void error                               PROTO((char *, ...));\n-extern void error_with_decl                     PROTO((tree, char *, ...));\n-extern void fatal                               PROTO((char *, ...));\n-extern void sorry                               PROTO((char *, ...));\n-extern tree stabilize_reference                 PROTO((tree));\n-extern void warning                             PROTO((char *, ...));\n-\n /* definitions for duration built-ins */\n #define MILLISECS_MULTIPLIER                                 1\n #define SECS_MULTIPLIER            MILLISECS_MULTIPLIER * 1000\n@@ -557,7 +545,6 @@ chill_expand_expr (exp, target, tmode, modifier)\n \n     case SET_IN_EXPR:\n       {\n-\textern tree lookup_name PROTO((tree));\n \ttree set = TREE_OPERAND (exp, 1);\n \ttree pos = convert (long_unsigned_type_node, TREE_OPERAND (exp, 0));\n \ttree set_type = TREE_TYPE (set);\n@@ -602,7 +589,6 @@ chill_expand_expr (exp, target, tmode, modifier)\n \n     case PACKED_ARRAY_REF:\n       {\n-\textern tree lookup_name PROTO((tree));\n \ttree array = TREE_OPERAND (exp, 0);\n \ttree pos = save_expr (TREE_OPERAND (exp, 1));\n \ttree array_type = TREE_TYPE (array);\n@@ -679,7 +665,7 @@ check_arglist_length (args, min_length, max_length, name)\n static tree\n internal_build_compound_expr (list, first_p)\n      tree list;\n-     int first_p;\n+     int first_p ATTRIBUTE_UNUSED;\n {\n   register tree rest;\n \n@@ -1564,7 +1550,7 @@ build_allocate_getstack (mode, value, chill_name, fnname, filename, linenumber)\n {\n   tree type, result;\n   tree expr = NULL_TREE;\n-  tree args, tmpvar, fncall, ptr, init, outlist = NULL_TREE;\n+  tree args, tmpvar, fncall, ptr, outlist = NULL_TREE;\n \n   if (mode == NULL_TREE || TREE_CODE (mode) == ERROR_MARK)\n     return error_mark_node;\n@@ -2125,7 +2111,6 @@ build_chill_pred_or_succ (expr, op)\n {\n   struct ch_class class;\n   tree etype, cond;\n-  tree limit;\n \n   if (pass == 1)\n     return NULL_TREE;\n@@ -3241,7 +3226,7 @@ varying_to_slice (exp)\n   if (!chill_varying_type_p (TREE_TYPE (exp)))\n     return exp;\n   else\n-    { tree size, data, data_domain, doamin, min;\n+    { tree size, data, data_domain, min;\n       tree novelty = CH_NOVELTY (TREE_TYPE (exp));\n       exp = save_if_needed (exp);\n       size = build_component_ref (exp, var_length_id);\n@@ -3732,8 +3717,6 @@ finish_chill_binary_op (node)\n   tree op1 = check_have_mode (TREE_OPERAND (node, 1), \"binary expression\");\n   tree type0 = TREE_TYPE (op0);\n   tree type1 = TREE_TYPE (op1);\n-  enum tree_code code0;\n-  enum tree_code code1;\n   tree folded;\n \n   if (TREE_CODE (op0) == ERROR_MARK || TREE_CODE (op1) == ERROR_MARK)\n@@ -3902,8 +3885,6 @@ finish_chill_binary_op (node)\n       return error_mark_node;\n     }\n \n-\n- finish:\n   if (TREE_TYPE (node) == NULL_TREE)\n     {\n       struct ch_class class;\n@@ -3922,23 +3903,26 @@ finish_chill_binary_op (node)\n     TREE_CONSTANT (folded) = TREE_CONSTANT (op0) & TREE_CONSTANT (op1);\n #endif\n   if (TREE_CODE (node) == TRUNC_DIV_EXPR)\n-    if (TREE_CONSTANT (op1))\n-      {\n-\tif (tree_int_cst_equal (op1, integer_zero_node))\n-\t  {\n-\t    error (\"division by zero\");\n-\t    return integer_zero_node;\n-\t  }\n-      }\n-    else if (range_checking)\n-      {\n+    {\n+      if (TREE_CONSTANT (op1))\n+\t{\n+\t  if (tree_int_cst_equal (op1, integer_zero_node))\n+\t    {\n+\t      error (\"division by zero\");\n+\t      return integer_zero_node;\n+\t    }\n+\t}\n+      else if (range_checking)\n+\t{\n #if 0\n-\ttree test = build (EQ_EXPR, boolean_type_node, op1, integer_zero_node);\n-\t/* Should this be overflow? */\n-\tfolded = check_expression (folded, test,\n-\t\t\t\t   ridpointers[(int) RID_RANGEFAIL]);\n+\t  tree test =\n+\t    build (EQ_EXPR, boolean_type_node, op1, integer_zero_node);\n+\t  /* Should this be overflow? */\n+\t  folded = check_expression (folded, test,\n+\t\t\t\t     ridpointers[(int) RID_RANGEFAIL]);\n #endif\n-      }\n+\t}\n+    }\n   return folded;\n }\n \f\n@@ -4035,7 +4019,7 @@ build_chill_addr_expr (ref, errormsg)\n   if (! CH_LOCATION_P (ref)\n       && TREE_CODE (TREE_TYPE (ref)) != FUNCTION_TYPE)\n     {\n-      error (\"ADDR parameter must be a LOCATION\", errormsg);\n+      error (\"ADDR parameter must be a LOCATION\");\n       return error_mark_node;\n     }\n   ref = build_chill_arrow_expr (ref, 1);\n@@ -4358,8 +4342,6 @@ build_chill_unary_op (code, op0)\n      tree op0;\n {\n   register tree result = NULL_TREE;\n-  struct ch_class class;\n-  tree type0 = TREE_TYPE (op0);\n \n   if (op0 == NULL_TREE || TREE_CODE (op0) == ERROR_MARK)\n     return error_mark_node;\n@@ -4482,8 +4464,6 @@ tree\n powersetlen (powerset)\n      tree powerset;\n {\n-  tree domain, temp;\n-\n   if (powerset == NULL_TREE || TREE_CODE (powerset) == ERROR_MARK)\n     return error_mark_node;\n "}, {"sha": "eb441d86cc108c23a5a7c02409bea027dcc7062c", "filename": "gcc/ch/grant.c", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fgrant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fgrant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fgrant.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -17,24 +17,18 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#include <stdio.h>\n-#include <string.h>\n-#include <limits.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"ch-tree.h\"\n #include \"lex.h\"\n #include \"flags.h\"\n #include \"actions.h\"\n #include \"input.h\"\n-#include \"errno.h\"\n #include \"rtl.h\"\n #include \"tasking.h\"\n-\n-/* Disable possible macro over-rides, so the externs parse\n-   portably. */\n-#undef strchr\n-#undef strrchr\n+#include \"toplev.h\"\n+#include \"output.h\"\n \n #define APPEND(X,Y) X = append (X, Y)\n #define PREPEND(X,Y) X = prepend (X, Y);\n@@ -49,16 +43,7 @@ do                                             \\\n     APPEND (X, \";\\n\");                         \\\n } while (0)\n \n-extern void assemble_constructor PROTO((char *));\n-extern void assemble_name PROTO((FILE *, char *));\n-extern void error PROTO((char *, ...));\n-extern tree tasking_list;\n-extern void tasking_registry PROTO((void));\n-extern void tasking_setup PROTO((void));\n-extern void build_enum_tables PROTO((void));\n extern tree process_type;\n-extern void warning PROTO((char *, ...));\n-extern tree get_file_function_name PROTO((int));\n extern char *asm_file_name;\n extern char *dump_base_name;\n \n@@ -1988,8 +1973,6 @@ decode_constant_selective (init, all_decls)\n   MYSTRING *tmp_string;\n   tree\t    type = TREE_TYPE (init);\n   tree\tval = init;\n-  char *op;\n-  char\twrk[256];\n   MYSTRING *mode_string;\n     \n   switch ((enum chill_tree_code)TREE_CODE (val))\n@@ -2650,7 +2633,6 @@ write_grant_file ()\n   p = gstring->str;\n   while (*p)\n     {\n-      extern char* strchr ();\n       p1 = strchr (p, '\\n');\n       c = *++p1;\n       *p1 = '\\0';\n@@ -2677,8 +2659,6 @@ write_grant_file ()\n void\n set_default_grant_file ()\n {\n-#undef strrchr\n-    extern\tchar *strrchr ();\n     char\t*p, *tmp, *fname;\n \n     if (dump_base_name)\n@@ -2721,7 +2701,7 @@ set_default_grant_file ()\n \n void\n push_granted (name, decl)\n-     tree name, decl;\n+     tree name ATTRIBUTE_UNUSED, decl ATTRIBUTE_UNUSED;\n {\n #if 0\n   IDENTIFIER_GRANTED_VALUE (name) = decl;"}, {"sha": "2c5f6281a874423d551e6170431476e5c37a423e", "filename": "gcc/ch/inout.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Finout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Finout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Finout.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -17,30 +17,23 @@\n    along with GNU CC; see the file COPYING.  If not, write to\n    the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#include <stdio.h>\n-#include <string.h>\n-#include <limits.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"ch-tree.h\"\n #include \"rtl.h\"\n #include \"lex.h\"\n #include \"flags.h\"\n #include \"input.h\"\n #include \"assert.h\"\n+#include \"toplev.h\"\n \n /* set non-zero if input text is forced to lowercase */\n extern int ignore_case;\n \n /* set non-zero if special words are to be entered in uppercase */\n extern int special_UC;\n \n-extern void error   PROTO((char *, ...));\n-extern void sorry   PROTO((char *, ...));\n-extern void warning PROTO((char *, ...));\n-\n-extern tree build_chill_compound_expr PROTO((tree));\n-\n static int intsize_of_charsexpr PROTO((tree));\n \n /* association mode */\n@@ -1722,7 +1715,7 @@ textlocation_mode (text)\n   field = TYPE_FIELDS (text);\n   for ( ; field != NULL_TREE; field = TREE_CHAIN (field))\n     {\n-      if (TREE_CODE (field) == FIELD_DECL &\n+      if (TREE_CODE (field) == FIELD_DECL &&\n \t  DECL_NAME (field) == get_identifier (\"tloc\"))\n \treturn TREE_TYPE (field);\n     }\n@@ -4161,7 +4154,6 @@ scanformcont (fcs, len, fcsptr, lenptr, exprlist, exprptr,\n \t      break;\n \t    }\n \t  \n-\tdo_the_action: ;\n \t  state = FormatText;\n \t  break;\n \t  "}, {"sha": "86d649009c4ec61571cc4de3905cdf9c5fe5cf3c", "filename": "gcc/ch/lang.c", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Flang.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -19,11 +19,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n \n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"ch-tree.h\"\n #include \"lex.h\"\n-#include <stdio.h>\n #include \"input.h\"\n+#include \"toplev.h\"\n \n /* Type node for boolean types.  */\n \n@@ -49,14 +50,6 @@ char* chill_real_input_filename;\n extern FILE* finput;\n \n extern int maximum_field_alignment;\n-\n-extern void error             PROTO((char *, ...));\n-extern void error_with_decl   PROTO((tree, char *, ...));\n-extern void fatal             PROTO((char *, ...));\n-extern int  floor_log2_wide   PROTO((unsigned HOST_WIDE_INT));\n-extern void pedwarn_with_decl PROTO((tree, char *, ...));\n-extern void sorry             PROTO((char *, ...));\n-extern int  type_hash_list    PROTO((tree));\n \f\n /* return 1 if the expression tree given has all\n    constant nodes as its leaves; return 0 otherwise. */\n@@ -111,14 +104,14 @@ const_expr (exp)\n /* Used by c-lex.c, but only for objc.  */\n tree\n lookup_interface (arg)\n-     tree arg;\n+     tree arg ATTRIBUTE_UNUSED;\n {\n   return 0;\n }\n \n int\n maybe_objc_comptypes (lhs, rhs)\n-     tree lhs, rhs;\n+     tree lhs ATTRIBUTE_UNUSED, rhs ATTRIBUTE_UNUSED;\n {\n   return -1;\n }\n@@ -144,9 +137,9 @@ lang_init_options ()\n \n void\n lang_print_xnode (file, node, indent)\n-     FILE *file;\n-     tree node;\n-     int indent;\n+     FILE *file ATTRIBUTE_UNUSED;\n+     tree node ATTRIBUTE_UNUSED;\n+     int indent ATTRIBUTE_UNUSED;\n {\n }\n \n@@ -171,7 +164,7 @@ lang_decode_option (argc, argv)\n      char **argv;\n {\n   char *p = argv[0];\n-  static explicit_ignore_case = 0;\n+  static int explicit_ignore_case = 0;\n   if (!strcmp(p, \"-lang-chill\"))\n     ; /* do nothing */\n   else if (!strcmp (p, \"-fruntime-checking\"))\n@@ -280,8 +273,8 @@ chill_print_error_function (file)\n \n void\n incomplete_type_error (value, type)\n-     tree value;\n-     tree type;\n+     tree value ATTRIBUTE_UNUSED;\n+     tree type ATTRIBUTE_UNUSED;\n {\n   error (\"internal error - use of undefined type\");\n }"}, {"sha": "bb841d1e4f2121fc42a67e020ceca53e234dfdba", "filename": "gcc/ch/lex.c", "status": "modified", "additions": 36, "deletions": 68, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Flex.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -17,14 +17,11 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \f\n-#include <stdio.h>\n-#include <errno.h>\n+#include \"config.h\"\n+#include \"system.h\"\n #include <setjmp.h>\n-#include <ctype.h>\n-#include <sys/types.h>\n #include <sys/stat.h>\n \n-#include \"config.h\"\n #include \"tree.h\"\n #include \"input.h\"\n \n@@ -33,24 +30,24 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"flags.h\"\n #include \"parse.h\"\n #include \"obstack.h\"\n+#include \"toplev.h\"\n \n #ifdef MULTIBYTE_CHARS\n-#include <stdlib.h>\n #include <locale.h>\n #endif\n \n /* include the keyword recognizers */\n #include \"hash.h\"\n \n-#undef strchr\n-\n FILE* finput;\n \n+#if 0\n static int\tlast_token = 0;\n /* Sun's C compiler warns about the safer sequence \n    do { .. } while 0 \n    when there's a 'return' inside the braces, so don't use it */\n #define RETURN_TOKEN(X) { last_token = X; return (X); }\n+#endif\n \n /* This is set non-zero to force incoming tokens to lowercase. */\n extern int ignore_case;\n@@ -64,23 +61,6 @@ extern int special_UC;\n extern struct obstack permanent_obstack;\n extern struct obstack temporary_obstack;\n \n-#ifndef errno\n-extern int errno;\n-#endif\n-\n-extern tree build_string_type        PROTO((tree, tree));\n-extern void error                    PROTO((char *, ...));\n-extern void error_with_file_and_line PROTO((char *, int, char *, ...));\n-extern void grant_use_seizefile      PROTO((char *));\n-extern void pedwarn                  PROTO((char *, ...));\n-extern void pfatal_with_name         PROTO((char *));\n-extern void push_obstacks PROTO((struct obstack *, struct obstack *));\n-extern void set_identifier_size      PROTO((int));\n-extern void sorry                    PROTO((char *, ...));\n-extern int  target_isinf             PROTO((REAL_VALUE_TYPE));\n-extern int  tolower                  PROTO((int));\n-extern void warning                  PROTO((char *, ...));\n-\n /* forward declarations */\n static void close_input_file         PROTO((char *));\n static tree convert_bitstring        PROTO((char *));\n@@ -90,7 +70,6 @@ static int  maybe_number             PROTO((char *));\n static tree equal_number             PROTO((void));\n static void handle_use_seizefile_directive PROTO((int));\n static int  handle_name\t\t     PROTO((tree));\n-static void push_back                PROTO((int));\n static char *readstring              PROTO((int, int *));\n static void read_directive\t     PROTO((void));\n static tree read_identifier\t     PROTO((int));\n@@ -508,7 +487,7 @@ yylex ()\n \t\tbreak;\n \t      if (ch == '_')\n \t\tcontinue;\n-\t      if (!isxdigit (ch))           /* error on non-hex digit */\n+\t      if (!ISXDIGIT (ch))           /* error on non-hex digit */\n \t\t{\n \t\t  if (pass == 1)\n \t\t    error (\"invalid C'xx' \");\n@@ -544,7 +523,7 @@ yylex ()\n \t  for (;;)\n \t    {\n \t      ch = input ();\n-\t      if (isalnum (ch))\n+\t      if (ISALNUM (ch))\n \t\tobstack_1grow (&temporary_obstack, ch);\n \t      else if (ch != '_')\n \t\tbreak;\n@@ -594,7 +573,7 @@ yylex ()\n     case '.':\n       nextc = input ();\n       unput (nextc);\n-      if (isdigit (nextc)) /* || nextc == '_')  we don't start numbers with '_' */\n+      if (ISDIGIT (nextc)) /* || nextc == '_')  we don't start numbers with '_' */\n \tgoto number;\n       return DOT;\n     case '0': case '1': case '2': case '3': case '4':\n@@ -637,7 +616,7 @@ read_identifier (first)\n       first = input ();\n       if (first == EOF)\n \tbreak;\n-      if (! isalnum (first) && first != '_')\n+      if (! ISALNUM (first) && first != '_')\n \t{\n \t  unput (first);\n \t  break;\n@@ -661,7 +640,7 @@ handle_name (id)\n   struct resword *tp;\n   tp = in_word_set (IDENTIFIER_POINTER (id), IDENTIFIER_LENGTH (id));\n   if (tp != NULL\n-      && special_UC == isupper (tp->name[0])\n+      && special_UC == ISUPPER ((unsigned char) tp->name[0])\n       && (tp->flags == RESERVED || tp->flags == PREDEF))\n     {\n       if (tp->rid != NORID)\n@@ -686,7 +665,7 @@ read_number (ch)\n       if (ch != '_')\n \tobstack_1grow (&temporary_obstack, ch);\n       ch = input ();\n-      if (! isdigit (ch) && ch != '_')\n+      if (! ISDIGIT (ch) && ch != '_')\n \tbreak;\n     }\n   if (ch == '.')\n@@ -696,7 +675,7 @@ read_number (ch)\n \t  if (ch != '_')\n \t    obstack_1grow (&temporary_obstack, ch);\n \t  ch = input ();\n-\t} while (isdigit (ch) || ch == '_');\n+\t} while (ISDIGIT (ch) || ch == '_');\n       is_float++;\n     }\n   if (ch == 'd' || ch == 'D' || ch == 'e' || ch == 'E')\n@@ -709,14 +688,14 @@ read_number (ch)\n \t  obstack_1grow (&temporary_obstack, ch);\n \t  ch = input ();\n \t}\n-      if (isdigit (ch) || ch == '_')\n+      if (ISDIGIT (ch) || ch == '_')\n \t{\n \t  do\n \t    {\n \t      if (ch != '_')\n \t\tobstack_1grow (&temporary_obstack, ch);\n \t      ch = input ();\n-\t    } while (isdigit (ch) || ch == '_');\n+\t    } while (ISDIGIT (ch) || ch == '_');\n \t}\n       else\n \t{\n@@ -779,7 +758,7 @@ read_directive ()\n   struct resword *tp;\n   tree id;\n   int ch = skip_whitespace();\n-  if (isalpha (ch) || ch == '_')\n+  if (ISALPHA (ch) || ch == '_')\n     id = read_identifier (ch);\n   else if (ch == EOF)\n     {\n@@ -794,7 +773,7 @@ read_directive ()\n       return;\n     }\n   tp = in_word_set (IDENTIFIER_POINTER (id), IDENTIFIER_LENGTH (id));\n-  if (tp == NULL || special_UC != isupper (tp->name[0]))\n+  if (tp == NULL || special_UC != ISUPPER ((unsigned char) tp->name[0]))\n     {\n       if (pass == 1)\n \twarning (\"unrecognized compiler directive `%s'\",\n@@ -897,7 +876,7 @@ maybe_downcase (str)\n     return;\n   while (*str)\n     {\n-      if (isupper (*str))\n+      if (ISUPPER ((unsigned char) *str))\n \t*str = tolower (*str);\n       str++;\n     }\n@@ -938,7 +917,7 @@ maybe_number (s)\n \t  break;\n \tcase 'h':\n \tcase 'H':\n-\t  if (!isxdigit (*s))\n+\t  if (!ISXDIGIT ((unsigned char) *s))\n \t    return 0;\n \t  break;\n \tcase 'b':\n@@ -958,15 +937,6 @@ maybe_number (s)\n     }\n   return 1;\n }\n-\n-static void\n-push_back (c)\n-char c;\n-{\n-  if (c == '\\n')\n-    lineno--;\n-  unput (c);\n-}\n \f\n static char *\n readstring (terminator, len)\n@@ -976,7 +946,7 @@ readstring (terminator, len)\n   int      c;\n   unsigned allocated = 1024;\n   char    *tmp = xmalloc (allocated);\n-  int      i = 0;\n+  unsigned i = 0;\n   \n   for (;;)\n     {\n@@ -1110,14 +1080,14 @@ readstring (terminator, len)\n \t\t    }\n \t\t  else if (base == 10)\n \t\t    {\n-\t\t      if (! isdigit (cc))\n+\t\t      if (! ISDIGIT (cc))\n \t\t\tcc = -1;\n \t\t      else\n \t\t\tcc -= '0';\n \t\t    }\n \t\t  else if (base == 16)\n \t\t    {\n-\t\t      if (!isxdigit (cc))\n+\t\t      if (!ISXDIGIT (cc))\n \t\t\tcc = -1;\n \t\t      else\n \t\t\t{\n@@ -1212,7 +1182,7 @@ convert_integer (intchars)\n       base = 2;\n       break;\n     default:\n-      if (!isdigit (*p))   /* this test is for equal_number () */\n+      if (!ISDIGIT (*p))   /* this test is for equal_number () */\n \t{\n \t  obstack_free (&temporary_obstack, intchars);\n \t  return 0;\n@@ -1380,7 +1350,6 @@ same_file (filename1, filename2)\n   struct stat s[2];\n   char        *fn_input[2];\n   int         i, stat_status;\n-  extern char *strchr();\n   \n   if (grant_only_flag)\n     /* do nothing in this case */\n@@ -1490,7 +1459,7 @@ getlc (file)\n   register int c;\n \n   c = getc (file);  \n-  if (isupper (c) && ignore_case)\n+  if (ISUPPER (c) && ignore_case)\n     c = tolower (c);\n   return c;\n }\n@@ -1554,7 +1523,7 @@ check_newline ()\n      it and ignore it; otherwise, ignore the line, with an error\n      if the word isn't `pragma', `ident', `define', or `undef'.  */\n \n-  if (isupper (c) && ignore_case)\n+  if (ISUPPER (c) && ignore_case)\n     c = tolower (c);\n \n   if (c >= 'a' && c <= 'z')\n@@ -1566,22 +1535,22 @@ check_newline ()\n \t      && getlc (finput) == 'g'\n \t      && getlc (finput) == 'm'\n \t      && getlc (finput) == 'a'\n-\t      && (isspace (c = getlc (finput))))\n+\t      && (c = getlc (finput), ISSPACE (c)))\n \t    {\n #ifdef HANDLE_PRAGMA\n \t      static char buffer [128];\n \t      char * buff = buffer;\n \n \t      /* Read the pragma name into a buffer.  */\n-\t      while (isspace (c = getlc (finput)))\n+\t      while (c = getlc (finput), ISSPACE (c))\n \t\tcontinue;\n \t      \n \t      do\n \t\t{\n \t\t  * buff ++ = c;\n \t\t  c = getlc (finput);\n \t\t}\n-\t      while (c != EOF && ! isspace (c) && c != '\\n'\n+\t      while (c != EOF && ! ISSPACE (c) && c != '\\n'\n \t\t     && buff < buffer + 128);\n \n \t      pragma_ungetc (c);\n@@ -1601,7 +1570,7 @@ check_newline ()\n \t      && getlc (finput) == 'i'\n \t      && getlc (finput) == 'n'\n \t      && getlc (finput) == 'e'\n-\t      && (isspace (c = getlc (finput))))\n+\t      && (c = getlc (finput), ISSPACE (c)))\n \t    {\n #if 0 /*def DWARF_DEBUGGING_INFO*/\n \t      if (c != '\\n'\n@@ -1618,7 +1587,7 @@ check_newline ()\n \t      && getlc (finput) == 'd'\n \t      && getlc (finput) == 'e'\n \t      && getlc (finput) == 'f'\n-\t      && (isspace (c = getlc (finput))))\n+\t      && (c = getlc (finput), ISSPACE (c)))\n \t    {\n #if 0 /*def DWARF_DEBUGGING_INFO*/\n \t      if (c != '\\n'\n@@ -1699,7 +1668,7 @@ check_newline ()\n \n   /* Something follows the #; read a token.  */\n \n-  if (isdigit(c))\n+  if (ISDIGIT(c))\n     {\n       int old_lineno = lineno;\n       int used_up = 0;\n@@ -1710,7 +1679,7 @@ check_newline ()\n \t{\n \t  l = l * 10 + (c - '0'); /* FIXME Not portable */\n \t  c = getlc(finput);\n-\t} while (isdigit(c));\n+\t} while (ISDIGIT(c));\n       /* subtract one, because it is the following line that\n \t gets the specified number */\n \n@@ -1777,7 +1746,7 @@ check_newline ()\n       /* `1' after file name means entering new file.\n \t `2' after file name means just left a file.  */\n \n-      if (isdigit (c))\n+      if (ISDIGIT (c))\n \t{\n \t  if (c == '1')\n \t    {\n@@ -1976,7 +1945,7 @@ equal_number ()\n   /* collect token into tokenbuf for later analysis */\n   while (TRUE)\n     {\n-      if (isspace (c) || c == '<')\n+      if (ISSPACE (c) || c == '<')\n \tbreak;\n       obstack_1grow (&temporary_obstack, c);\n       c = input ();\n@@ -2017,15 +1986,16 @@ equal_number ()\n     {\n       cursor = tokenbuf;\n       c = *cursor;\n-      if (!isalpha (c) && c != '_')\n+      if (!ISALPHA (c) && c != '_')\n \t{\n \t  if (pass == 1)\n \t    error (\"invalid value follows `=' in compiler directive\");\n \t  goto finish;\n \t}\n \n       for (cursor = &tokenbuf[1]; *cursor != '\\0'; cursor++)\n-\tif (isalpha (*cursor) || *cursor == '_' || isdigit (*cursor))\n+\tif (ISALPHA ((unsigned char) *cursor) || *cursor == '_' ||\n+\t    ISDIGIT (*cursor))\n \t  continue;\n \telse\n \t  {\n@@ -2117,9 +2087,7 @@ mark_use_seizefile_written (name)\n static int\n yywrap ()\n {\n-  extern char *strchr ();\n   extern char *chill_real_input_filename;\n-  tree node;\n \n   close_input_file (input_filename);\n "}, {"sha": "88efaac5379af51f4400330be2590bd00ee1a64b", "filename": "gcc/ch/loop.c", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Floop.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -17,9 +17,8 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#include <stdio.h>\n-#include <limits.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"ch-tree.h\"\n #include \"lex.h\"\n@@ -29,19 +28,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"obstack.h\"\n #include \"assert.h\"\n #include \"rtl.h\"\n+#include \"toplev.h\"\n \n /* if the user codes '-flocal-loop-counter' on the command line,\n    ch-actions.c (lang_decode_option) will set this flag. */\n int flag_local_loop_counter = 1;\n \n-extern rtx  emit_line_note              PROTO((char *, int)); \n-extern void error                       PROTO((char *, ...));\n-extern rtx  expand_assignment           PROTO((tree, tree, int, int));\n-extern void save_expr_under_name        PROTO((tree, tree));\n-extern void stamp_nesting_label         PROTO((tree));\n-extern int  int_fits_type_p             PROTO((tree, tree));\n-extern void warning                     PROTO((char *, ...));\n-\n /* forward declarations */\n static int  declare_temps            PROTO((void));\n static int  initialize_iter_var      PROTO((void));\n@@ -50,7 +42,9 @@ static int  bottom_loop_end_check    PROTO((void));\n static int  increment_temps          PROTO((void));\n static tree build_temporary_variable PROTO((char *, tree));\n static tree maybe_make_for_temp      PROTO((tree, char *, tree));\n+#if 0\n static tree chill_unsigned_type      PROTO((tree));\n+#endif\n \f\n /* In terms of the parameters passed to build_loop_iterator,\n  *   there are several types of loops.  They are encoded by\n@@ -377,8 +371,6 @@ pop_loop_block ()\n void\n begin_loop_scope ()\n {\n-  ITERATOR *firstp = loopstack->iter_list;\n-\n   pushlevel (1);\n \n   if (pass >= 2)\n@@ -417,8 +409,6 @@ end_loop_scope (opt_label)\n void\n nonvalue_begin_loop_scope ()\n {\n-  ITERATOR *firstp = loopstack->iter_list;\n-\n   pushlevel (0); /* this happens only in pass 2 */\n \n   declare_temps ();\n@@ -1221,7 +1211,7 @@ maybe_make_for_temp (exp, temp_name, exp_type)\n   return result;\n }\n \n-\n+#if 0\n /*\n  * Adapt the C unsigned_type function to CHILL - we need to\n  * account for any CHILL-specific integer types here.  So far,\n@@ -1239,3 +1229,4 @@ chill_unsigned_type (type)\n   else\n     return unsigned_type (type);\n }\n+#endif"}, {"sha": "bf2bda053369e830ef103a87f4780394f17aa5af", "filename": "gcc/ch/parse.c", "status": "modified", "additions": 32, "deletions": 50, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fparse.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -40,14 +40,15 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */\n  * Then code is generated.\n  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"ch-tree.h\"\n #include \"lex.h\"\n #include \"actions.h\"\n #include \"tasking.h\"\n #include \"parse.h\"\n+#include \"toplev.h\"\n \n /* Since parsers are distinct for each language, put the \n    language string definition here.  (fnf) */\n@@ -68,26 +69,11 @@ char *language_string = \"GNU CHILL\";\n /* Cause the `yydebug' variable to be defined.  */\n #define YYDEBUG 1\n \n-extern void assemble_external                 PROTO((tree));\n-extern void chill_check_no_handlers           PROTO((void));\n-extern void chill_finish_on                   PROTO((void));\n-extern void chill_handle_case_default         PROTO((void));\n-extern void chill_handle_on_labels            PROTO((tree));\n-extern tree chill_initializer_constant_valid_p PROTO((tree, tree));\n-extern void chill_start_default_handler       PROTO((void));\n-extern void chill_start_on                    PROTO((void));\n-extern struct rtx_def* emit_line_note         PROTO((char *, int));\n extern struct rtx_def* gen_label_rtx\t      PROTO((void));\n extern void emit_jump                         PROTO((struct rtx_def *));\n extern void emit_label                        PROTO((struct rtx_def *));\n-extern void error                             PROTO((char *, ...));\n-extern int  expand_exit_labelled              PROTO((tree));\n-extern void lookup_and_expand_goto            PROTO((tree));\n-extern void lookup_and_handle_exit            PROTO((tree));\n \n-extern void push_granted                      PROTO((tree, tree));\n-extern void sorry                             PROTO((char *, ...));\n-extern void warning                           PROTO((char *, ...));\n+static int parse_action\t\t\t\tPROTO((void));\n \n extern int  lineno;\n extern char *input_filename;\n@@ -96,7 +82,9 @@ extern tree signal_code;\n extern int all_static_flag;\n extern int ignore_case;\n      \n+#if 0\n static int  quasi_signal = 0;  /* 1 if processing a quasi signal decl */\n+#endif\n \n int parsing_newmode;                       /* 0 while parsing SYNMODE; \n \t\t\t\t\t      1 while parsing NEWMODE. */\n@@ -261,7 +249,7 @@ static YYSTYPE val_buffer[MAX_LOOK_AHEAD+1];\n #ifdef __GNUC__\n __inline__\n #endif\n-static int\n+static enum terminal\n PEEK_TOKEN()\n {\n   if (terminal_buffer[0] == TOKEN_NOT_READ)\n@@ -533,8 +521,6 @@ parse_opt_end_label_semi_colon (start_label)\n   parse_semi_colon ();\n }\n \n-extern tree set_module_name ();\n-\n static void\n parse_modulion (label)\n      tree label;\n@@ -633,7 +619,6 @@ void\n parse_mode_definition_statement (is_newmode)\n      int is_newmode;\n {\n-  tree names;\n   FORWARD_TOKEN (); /* skip SYNMODE or NEWMODE */\n   parse_mode_definition (is_newmode);\n   while (PEEK_TOKEN () == COMMA)\n@@ -1077,8 +1062,7 @@ parse_param_attr ()\n /* In pass 1, returns list of types; in pass 2: chain of PARM_DECLs. */\n    \n static tree\n-parse_formpar (in_spec_module)\n-     int in_spec_module;\n+parse_formpar ()\n {\n   tree names = parse_param_name_list ();\n   tree mode = parse_mode ();\n@@ -1093,15 +1077,14 @@ parse_formpar (in_spec_module)\n  * also need change.  Push_extern_process is affected as well.\n  */\n static tree\n-parse_formparlist (in_spec_module)\n-     int in_spec_module;\n+parse_formparlist ()\n {\n   tree list = NULL_TREE;\n   if (PEEK_TOKEN() == RPRN)\n     return NULL_TREE;\n   for (;;)\n     {\n-      list = chainon (list, parse_formpar (in_spec_module));\n+      list = chainon (list, parse_formpar ());\n       if (! check_token (COMMA))\n \tbreak;\n     }\n@@ -1233,7 +1216,7 @@ parse_procedure_definition (in_spec_module)\n     ignoring = pass == 2;\n   require (COLON); require (PROC);\n   expect (LPRN, \"missing '(' after PROC\");\n-  params = parse_formparlist (in_spec_module);\n+  params = parse_formparlist ();\n   expect (RPRN, \"missing ')' in PROC\");\n   result = parse_opt_result_spec ();\n   exceptlist = parse_opt_except ();\n@@ -1259,7 +1242,7 @@ parse_processpar ()\n   tree names = parse_defining_occurrence_list ();\n   tree mode = parse_mode ();\n   tree paramattr = parse_param_attr ();\n-  tree parms = NULL_TREE;\n+\n   if (names && TREE_CODE (names) == IDENTIFIER_NODE)\n     names = build_tree_list (NULL_TREE, names);\n   return tree_cons (tree_cons (paramattr, mode, NULL_TREE), names, NULL_TREE);\n@@ -1395,16 +1378,18 @@ parse_definition (in_spec_module)\n     {\n     case NAME:\n       if (PEEK_TOKEN1() == COLON)\n-\tif (PEEK_TOKEN2() == PROC)\n-\t  {\n-\t    parse_procedure_definition (in_spec_module);\n-\t    return 1;\n-\t  }\n-\telse if (PEEK_TOKEN2() == PROCESS)\n-\t  {\n-\t    parse_process_definition (in_spec_module);\n-\t    return 1;\n-\t  }\n+\t{\n+\t  if (PEEK_TOKEN2() == PROC)\n+\t    {\n+\t      parse_procedure_definition (in_spec_module);\n+\t      return 1;\n+\t    }\n+\t  else if (PEEK_TOKEN2() == PROCESS)\n+\t    {\n+\t      parse_process_definition (in_spec_module);\n+\t      return 1;\n+\t    }\n+\t}\n       return 0;\n     case DCL:\n       parse_declaration_statement(in_spec_module);\n@@ -1684,10 +1669,9 @@ static void\n parse_multi_dimension_case_action (selector)\n      tree selector;\n {\n-  struct rtx_def *begin_test_label, *end_case_label, *new_label;\n+  struct rtx_def *begin_test_label = 0, *end_case_label, *new_label;\n   tree action_labels = NULL_TREE;\n   tree tests = NULL_TREE;\n-  tree new_test;\n   int  save_lineno = lineno;\n   char *save_filename = input_filename;\n \n@@ -1816,10 +1800,6 @@ parse_case_action (label)\n   tree selector;\n   int  multi_dimension_case = 0;\n \n-/* The case label/action toggle.  It is 0 initially, and when an action\n-   was last seen.  It is 1 integer_zero_node when a label was last seen. */\n-  int caseaction_flag = 0;\n-\n   require (CASE);\n   selector = parse_expr_list ();\n   selector = nreverse (selector);\n@@ -1897,7 +1877,7 @@ parse_asm_clobbers ()\n   tree list = NULL_TREE;\n   for (;;)\n     {\n-      tree string, expr;\n+      tree string;\n       if (PEEK_TOKEN () != STRING)\n \t{\n \t  error (\"bad ASM operand\");\n@@ -2176,7 +2156,7 @@ static void\n parse_delay_case_action (label)\n      tree label;\n {\n-  tree label_cnt, set_location, priority;\n+  tree label_cnt = NULL_TREE, set_location, priority;\n   tree combined_event_list = NULL_TREE;\n   require (DELAY);\n   require (CASE);\n@@ -2577,7 +2557,7 @@ parse_opt_actions ()\n   while (parse_action ()) ;\n }\n \n-int\n+static int\n parse_action ()\n {\n   tree label = NULL_TREE;\n@@ -2962,7 +2942,7 @@ parse_tuple_element ()\n {\n   /* The tupleelement chain is built in reverse order,\n      and put in forward order when the list is used.  */\n-  tree value, list, label;\n+  tree value, label;\n   if (PEEK_TOKEN () == DOT)\n     {\n       /* Parse a labelled structure tuple. */\n@@ -3152,6 +3132,8 @@ parse_primval ()\n \t  args = parse_primval ();\n \t  val = ignoring ? val : build_generalized_call (val, args);\n \t  continue;\n+\tdefault:\n+\t  break;\n \t}\n       break;\n     }\n@@ -3755,8 +3737,8 @@ parse_variant_field_list ()\n static tree\n parse_variant_alternative ()\n {\n-  tree labels, x;\n-  tree variant_fields = NULL_TREE;\n+  tree labels;\n+\n   if (PEEK_TOKEN () == LPRN)\n     labels = parse_case_label_specification (NULL_TREE);\n   else"}, {"sha": "04faa941f45ac00390a640431fe500f008883f39", "filename": "gcc/ch/satisfy.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fsatisfy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Fsatisfy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fsatisfy.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -17,20 +17,16 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"ch-tree.h\"\n #include \"lex.h\"\n+#include \"toplev.h\"\n \n #define SATISFY(ARG) ((ARG) = satisfy(ARG, chain))\n \n-extern void error           PROTO((char *, ...));\n-extern void error_with_decl PROTO((tree, char *, ...));\n-extern void expand_decl     PROTO((tree));\n-extern void layout_enum     PROTO((tree));\n-\n struct decl_chain\n {\n   struct decl_chain *prev;"}, {"sha": "5ae992f400c135e2bd14cf71ae4788b1f2541414", "filename": "gcc/ch/tasking.c", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Ftasking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Ftasking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Ftasking.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -17,10 +17,8 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#include <stdio.h>\n-#include <limits.h>\n-#include <string.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"ch-tree.h\"\n@@ -30,13 +28,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"assert.h\"\n #include \"tasking.h\"\n #include \"lex.h\"\n-\n-/* external functions */\n-extern void emit_jump       PROTO((rtx));\n-extern void error           PROTO((char *, ...));\n-extern void error_with_decl PVPROTO ((tree, char *, ...));\n-extern void push_obstacks   PROTO((struct obstack *, struct obstack *));\n-extern void warning         PROTO((char *, ...));\n+#include \"toplev.h\"\n \n /* from ch-lex.l, from compiler directives */\n extern tree process_type;\n@@ -70,8 +62,10 @@ static char * struct_name = \"__tmp_%s_arg_type\";\n /* name template for process arguments for debugging type */\n static char * struct_debug_name = \"__tmp_%s_debug_type\";\n \n+#if 0\n /* name template for process argument variable */\n static char * data_name = \"__tmp_%s_arg_variable\";\n+#endif\n \n /* name template for process wrapper */\n static char * wrapper_name = \"__tmp_%s_wrapper\";\n@@ -117,7 +111,7 @@ get_tasking_code_name (name)\n   return get_identifier (tmpname);\n }\n \n-\n+#if 0\n static tree\n get_struct_variable_name (name)\n      tree name;\n@@ -128,6 +122,7 @@ get_struct_variable_name (name)\n   sprintf (tmpname, data_name, idp);\n   return get_identifier (tmpname);\n }\n+#endif\n \n static tree\n get_process_wrapper_name (name)\n@@ -498,7 +493,7 @@ build_process_wrapper (plabel, processdata)\n \n void\n validate_process_parameters (parms)\n-     tree parms;\n+     tree parms ATTRIBUTE_UNUSED;\n {\n }\n \f\n@@ -522,7 +517,7 @@ build_start_process (process_name, copynum,\n   tree process_decl, struct_type_node;\n   tree result;\n   tree valtail, typetail;\n-  tree tuple, actuallist = NULL_TREE;\n+  tree tuple = NULL_TREE, actuallist = NULL_TREE;\n   tree typelist;\n   int  parmno = 2;\n   tree args;\n@@ -2111,7 +2106,6 @@ build_receive_buffer_case_end (label_cnt, buf_list, else_clause)\n       tree buffer_descr;\n       tree buffer_descr_init;\n       tree buffer_length;\n-      tree buffer_ptr;\n       tree field;\n       char fldname[20];\n "}, {"sha": "aa0c7a6e079c221f83ba2a44faf47909c0bd0478", "filename": "gcc/ch/timing.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Ftiming.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Ftiming.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Ftiming.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -17,17 +17,16 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#include <stdio.h>\n-#include <limits.h>\n-#include <string.h>\n #include \"config.h\"\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"ch-tree.h\"\n #include \"flags.h\"\n #include \"input.h\"\n #include \"obstack.h\"\n #include \"lex.h\"\n+#include \"toplev.h\"\n \n #ifndef LONG_TYPE_SIZE\n #define LONG_TYPE_SIZE BITS_PER_WORD\n@@ -394,7 +393,7 @@ build_after_start (duration, delay_flag)\n void\n build_after_timeout_start ()\n {\n-  tree label_name, goto_where;\n+  tree label_name;\n   \n   if (! ignoring)\n     {"}, {"sha": "5b6988743194a690a9ef740d8e7f26fadb95dbdc", "filename": "gcc/ch/tree.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Ftree.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -18,17 +18,16 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"config.h\"\n+#include \"system.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n #include \"ch-tree.h\"\n+#include \"toplev.h\"\n \n /* Here is how primitive or already-canonicalized types' \n    hash codes are made.  */\n #define TYPE_HASH(TYPE) ((HOST_WIDE_INT) (TYPE) & 0777777)\n \n-extern void error PROTO((char *, ...));\n-extern int  get_type_precision PROTO((tree, tree));\n-\n extern struct obstack permanent_obstack;\n /* This is special sentinel used to communicate from build_string_type\n    to layout_chill_range_type for the index range of a string. */"}, {"sha": "71d0361b9ec9250c3a54c99dbcb3e22bf9663c92", "filename": "gcc/ch/typeck.c", "status": "modified", "additions": 29, "deletions": 38, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7511142254795beb9417f1c226d3ba471a9272fc/gcc%2Fch%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Ftypeck.c?ref=7511142254795beb9417f1c226d3ba471a9272fc", "patch": "@@ -28,27 +28,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    like a strange sort of assignment).  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"ch-tree.h\"\n #include \"flags.h\"\n #include \"rtl.h\"\n #include \"expr.h\"\n #include \"lex.h\"\n-\n-extern tree build_chill_compound_expr PROTO((tree));\n-extern tree build_component_ref       PROTO((tree, tree));\n-extern void c_expand_return           PROTO((tree));\n-extern int  ch_singleton_set          PROTO((tree));\n-extern void error                     PROTO((char *, ...));\n-extern void error_with_decl           PROTO((tree, char *, ...));\n-extern int  mark_addressable          PROTO((tree));\n-extern void pedwarn                   PROTO((char *, ...));\n-extern void pedwarn_with_decl         PROTO((tree, char *, ...));\n-extern tree require_complete_type     PROTO((tree));\n-extern void sorry                     PROTO((char *, ...));\n-extern void warning                   PROTO((char *, ...));\n-extern int  get_type_precision        PROTO((tree, tree));\n+#include \"toplev.h\"\n \n extern tree intQI_type_node;\n extern tree intHI_type_node;\n@@ -63,9 +50,9 @@ extern tree unsigned_intDI_type_node;\n extern tree unsigned_intTI_type_node;\n \n /* forward declarations */\n-tree chill_expand_tuple PROTO((tree, tree));\n static int chill_l_equivalent PROTO((tree, tree, struct mode_chain*));\n-extern tree extract_constant_from_buffer();\n+static tree extract_constant_from_buffer PROTO((tree, unsigned char *, int));\n+static int expand_constant_to_buffer PROTO((tree, unsigned char *, int));\n \f\n /*\n  * This function checks an array access.\n@@ -249,7 +236,6 @@ build_chill_slice (array, min_value, length)\n       tree element_type = TREE_TYPE (array_type);\n       tree slice_type = build_simple_array_type (element_type, index_type, NULL_TREE);\n       tree slice_pointer_type;\n-      int is_static;\n       tree max_size;\n \n       if (CH_CHARS_TYPE_P (array_type))\n@@ -729,7 +715,7 @@ convert_to_discrete (exp)\n    Returns 1 on success, or 0 on failure. (Either the VALUE was\n    not constant, or we don't know how to do the conversion.) */\n \n-int\n+static int\n expand_constant_to_buffer (value, buffer, buf_size)\n      tree value;\n      unsigned char *buffer; \n@@ -782,10 +768,12 @@ expand_constant_to_buffer (value, buffer, buf_size)\n \t    {\n \t      tree min_val = TYPE_MIN_VALUE (TYPE_DOMAIN (type));\n \t      if (min_val)\n-\t\tif (TREE_CODE (min_val) != INTEGER_CST)\n-\t\t  return 0;\n-\t\telse\n-\t\t  min_index = TREE_INT_CST_LOW (min_val);\n+\t\t{\n+\t\t  if (TREE_CODE (min_val) != INTEGER_CST)\n+\t\t    return 0;\n+\t\t  else\n+\t\t    min_index = TREE_INT_CST_LOW (min_val);\n+\t\t}\n \t    }\n \n \t  next_index = min_index;\n@@ -858,7 +846,7 @@ expand_constant_to_buffer (value, buffer, buf_size)\n    Returns NULL_TREE on failure. (E.g. the TYPE might be variable size,\n    or perhaps we don't know how to do the conversion.) */\n \n-tree\n+static tree\n extract_constant_from_buffer (type, buffer, buf_size)\n      tree type;\n      unsigned char *buffer;\n@@ -912,10 +900,12 @@ extract_constant_from_buffer (type, buffer, buf_size)\n \t  return 0;\n \tvalue = TYPE_MIN_VALUE (TYPE_DOMAIN (type));\n \tif (value)\n-\t  if (TREE_CODE (value) != INTEGER_CST)\n-\t    return 0;\n-\t  else\n-\t    min_index = TREE_INT_CST_LOW (value);\n+\t  {\n+\t    if (TREE_CODE (value) != INTEGER_CST)\n+\t      return 0;\n+\t    else\n+\t      min_index = TREE_INT_CST_LOW (value);\n+\t  }\n \tvalue = TYPE_MAX_VALUE (TYPE_DOMAIN (type));\n \tif (value == NULL_TREE || TREE_CODE (value) != INTEGER_CST)\n \t  return 0;\n@@ -1845,12 +1835,14 @@ chill_compatible (expr, mode)\n     mode = TREE_TYPE (mode);\n \n   if (TREE_TYPE (expr) == NULL_TREE)\n-    if (TREE_CODE (expr) == CONSTRUCTOR)\n-      return TREE_CODE (mode) == RECORD_TYPE\n-\t|| ((TREE_CODE (mode) == SET_TYPE || TREE_CODE (mode) == ARRAY_TYPE)\n-\t    && ! TYPE_STRING_FLAG (mode));\n-    else\n-      return TREE_CODE (expr) == CASE_EXPR || TREE_CODE (expr) == COND_EXPR;\n+    {\n+      if (TREE_CODE (expr) == CONSTRUCTOR)\n+\treturn TREE_CODE (mode) == RECORD_TYPE\n+\t  || ((TREE_CODE (mode) == SET_TYPE || TREE_CODE (mode) == ARRAY_TYPE)\n+\t      && ! TYPE_STRING_FLAG (mode));\n+      else\n+\treturn TREE_CODE (expr) == CASE_EXPR || TREE_CODE (expr) == COND_EXPR;\n+    }\n \n   class = chill_expr_class (expr);\n   switch (class.kind)\n@@ -2733,7 +2725,7 @@ apply_chill_array_layout (array_type)\n      tree array_type;\n {\n   tree layout, temp, what, element_type;\n-  int stepsize, word, start_bit, offset, length, natural_length;\n+  int stepsize, word, start_bit, length, natural_length;\n   int stepsize_specified;\n   int start_bit_error = 0;\n   int length_error = 0;\n@@ -3351,7 +3343,6 @@ smash_dummy_type (type)\n   int  save_readonly = TYPE_READONLY (type);\n   tree  save_novelty = CH_NOVELTY (type);\n   tree save_domain = TYPE_DOMAIN (type);\n-  struct lang_type *save_lang_specific = TYPE_LANG_SPECIFIC (type);\n \n   if (origin == NULL_TREE)\n     abort ();\n@@ -3795,9 +3786,9 @@ initializer_constant_valid_p (value, endtype)\n \t  return null_pointer_node;\n \treturn 0;\n       }\n+    default:\n+      return 0;\n     }\n-\n-  return 0;\n }\n \f\n /* Return an integer type with BITS bits of precision,"}]}