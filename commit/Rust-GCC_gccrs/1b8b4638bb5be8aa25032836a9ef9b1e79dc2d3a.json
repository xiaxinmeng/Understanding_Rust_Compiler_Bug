{"sha": "1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI4YjQ2MzhiYjViZThhYTI1MDMyODM2YTllZjliMWU3OWRjMmQzYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-01-27T16:28:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-27T16:28:28Z"}, "message": "sem_prag.adb (Set_Convention_From_Pragma): Check that convention Ghost can only apply to functions.\n\n2014-01-27  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (Set_Convention_From_Pragma): Check that\n\tconvention Ghost can only apply to functions.\n\t* einfo.ads, einfo.adb (Is_Ghost_Subprogram): Add clarifying comment.\n\nFrom-SVN: r207135", "tree": {"sha": "64895a7232305338d70e6e4d65657522e8b4a198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64895a7232305338d70e6e4d65657522e8b4a198"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/comments", "author": null, "committer": null, "parents": [{"sha": "42959b0c5aa6a3ff084de4b27f4b3830c417697f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42959b0c5aa6a3ff084de4b27f4b3830c417697f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42959b0c5aa6a3ff084de4b27f4b3830c417697f"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "64dc2e9e6a0e4d65445176e93b9e6505e59a91f4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a", "patch": "@@ -1,3 +1,9 @@\n+2014-01-27  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (Set_Convention_From_Pragma): Check that\n+\tconvention Ghost can only apply to functions.\n+\t* einfo.ads, einfo.adb (Is_Ghost_Subprogram): Add clarifying comment.\n+\n 2014-01-27  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_ugn.texi: Add Short_Enums to documentation of"}, {"sha": "eb8b78dce5a8e54b3d292866f3c33ea861446f27", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a", "patch": "@@ -6886,6 +6886,10 @@ package body Einfo is\n    -- Is_Ghost_Entity --\n    ---------------------\n \n+   --  Note: coding below allows for ghost variables. They are not currently\n+   --  implemented, so we will always get False for variables, but that is\n+   --  expected to change in the future.\n+\n    function Is_Ghost_Entity (Id : E) return B is\n    begin\n       if Present (Id) and then Ekind (Id) = E_Variable then"}, {"sha": "808a4921569905a33ddc9d5cd7510d10b4485dc0", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a", "patch": "@@ -2343,11 +2343,15 @@ package Einfo is\n \n --    Is_Ghost_Entity (synthesized)\n --       Applies to all entities. Yields True for a subprogram or a whole\n---       object that has convention Ghost.\n+--       object that has convention Ghost. For now only functions can have\n+--       Ghost convention, so this will be false for other than functions,\n+--       but we expect that to change in the future.\n \n --    Is_Ghost_Subprogram (synthesized)\n --       Applies to all entities. Yields True for a subprogram that has a Ghost\n---       convention.\n+--       convention. Note: for now, only ghost functions are allowed, so this\n+--       will always be false for procedures, but that is expected to change in\n+--       the future.\n \n --    Is_Hidden (Flag57)\n --       Defined in all entities. Set for all entities declared in the"}, {"sha": "624bf4371a006d7c713473d021da55373ed3cb7c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1b8b4638bb5be8aa25032836a9ef9b1e79dc2d3a", "patch": "@@ -6029,7 +6029,8 @@ package body Sem_Prag is\n          --  Set convention in entity E, and also flag that the entity has a\n          --  convention pragma. If entity is for a private or incomplete type,\n          --  also set convention and flag on underlying type. This procedure\n-         --  also deals with the special case of C_Pass_By_Copy convention.\n+         --  also deals with the special case of C_Pass_By_Copy convention,\n+         --  and error checks for inappropriate convention specification.\n \n          -------------------------------\n          -- Diagnose_Multiple_Pragmas --\n@@ -6191,6 +6192,16 @@ package body Sem_Prag is\n \n          procedure Set_Convention_From_Pragma (E : Entity_Id) is\n          begin\n+            --  Ghost convention is allowed only for functions\n+\n+            if Ekind (E) /= E_Function and then C = Convention_Ghost then\n+               Error_Msg_N\n+                 (\"& may not have Ghost convention\", E);\n+               Error_Msg_N\n+                 (\"\\only functions are permitted to have Ghost convention\", E);\n+               return;\n+            end if;\n+\n             --  Ada 2005 (AI-430): Check invalid attempt to change convention\n             --  for an overridden dispatching operation. Technically this is\n             --  an amendment and should only be done in Ada 2005 mode. However,\n@@ -6201,11 +6212,11 @@ package body Sem_Prag is\n               and then Present (Overridden_Operation (E))\n               and then C /= Convention (Overridden_Operation (E))\n             then\n-               --  An attempt to override a subprogram with a ghost subprogram\n+               --  An attempt to override a function with a ghost function\n                --  appears as a mismatch in conventions.\n \n                if C = Convention_Ghost then\n-                  Error_Msg_N (\"ghost subprogram & cannot be overriding\", E);\n+                  Error_Msg_N (\"ghost function & cannot be overriding\", E);\n                else\n                   Error_Pragma_Arg\n                     (\"cannot change convention for overridden dispatching \"\n@@ -6401,7 +6412,7 @@ package body Sem_Prag is\n          if Is_Ghost_Subprogram (E)\n            and then Present (Overridden_Operation (E))\n          then\n-            Error_Msg_N (\"ghost subprogram & cannot be overriding\", E);\n+            Error_Msg_N (\"ghost function & cannot be overriding\", E);\n          end if;\n \n          --  Go to renamed subprogram if present, since convention applies to"}]}