{"sha": "08230f26ced6fd952266669aafeb10481efa5ec5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgyMzBmMjZjZWQ2ZmQ5NTIyNjY2NjlhYWZlYjEwNDgxZWZhNWVjNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-12-05T18:13:48Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-05T18:13:48Z"}, "message": "splay-tree.h (struct splay_tree_node): Rename to ...\n\n\t* splay-tree.h (struct splay_tree_node): Rename to ...\n\t(struct splay_tree_node_s): ... this.\n\t(struct splay_tree): Rename to ...\n\t(struct splay_tree_s): ... this.\n\n\t* splay-tree.c (splay_tree_new): Use struct splay_tree_node_s\n\trather than struct splay_tree_node.\n\t(splay_tree_insert): Use struct splay_tree_s rather than struct\n\tsplay_tree.\n\nFrom-SVN: r30790", "tree": {"sha": "3df67b5a266aafe717e4a4b1087aa2cbe39bf704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3df67b5a266aafe717e4a4b1087aa2cbe39bf704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08230f26ced6fd952266669aafeb10481efa5ec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08230f26ced6fd952266669aafeb10481efa5ec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08230f26ced6fd952266669aafeb10481efa5ec5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08230f26ced6fd952266669aafeb10481efa5ec5/comments", "author": null, "committer": null, "parents": [{"sha": "95fabfd362052e8daf18ec525935e4c5c03ae94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95fabfd362052e8daf18ec525935e4c5c03ae94a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95fabfd362052e8daf18ec525935e4c5c03ae94a"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "5fa66e0cae9f5f316b49cc4700bfecd63dd3ec9b", "filename": "include/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08230f26ced6fd952266669aafeb10481efa5ec5/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08230f26ced6fd952266669aafeb10481efa5ec5/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=08230f26ced6fd952266669aafeb10481efa5ec5", "patch": "@@ -1,3 +1,10 @@\n+1999-12-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* splay-tree.h (struct splay_tree_node): Rename to ...\n+\t(struct splay_tree_node_s): ... this.\n+\t(struct splay_tree): Rename to ...\n+\t(struct splay_tree_s): ... this.\n+\n 1999-11-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* ansidecl.h (ATTRIBUTE_MALLOC): New macro."}, {"sha": "6d70c8d9075e57580b41df37cbd33817293408f2", "filename": "include/splay-tree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08230f26ced6fd952266669aafeb10481efa5ec5/include%2Fsplay-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08230f26ced6fd952266669aafeb10481efa5ec5/include%2Fsplay-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fsplay-tree.h?ref=08230f26ced6fd952266669aafeb10481efa5ec5", "patch": "@@ -44,7 +44,7 @@ typedef unsigned long int splay_tree_key;\n typedef unsigned long int splay_tree_value;\n \n /* Forward declaration for a node in the tree.  */\n-typedef struct splay_tree_node *splay_tree_node;\n+typedef struct splay_tree_node_s *splay_tree_node;\n \n /* The type of a function which compares two splay-tree keys.  The\n    function should return values as for qsort.  */\n@@ -62,7 +62,7 @@ typedef void (*splay_tree_delete_value_fn) PARAMS((splay_tree_value));\n typedef int (*splay_tree_foreach_fn) PARAMS((splay_tree_node, void*));\n \n /* The nodes in the splay tree.  */\n-struct splay_tree_node\n+struct splay_tree_node_s\n {\n   /* The key.  */\n   splay_tree_key key;\n@@ -76,7 +76,7 @@ struct splay_tree_node\n };\n \n /* The splay tree itself.  */\n-typedef struct splay_tree\n+typedef struct splay_tree_s\n {\n   /* The root of the tree.  */\n   splay_tree_node root;"}, {"sha": "18f8f0515b1884911c5ff45ed876d17a531df291", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08230f26ced6fd952266669aafeb10481efa5ec5/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08230f26ced6fd952266669aafeb10481efa5ec5/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=08230f26ced6fd952266669aafeb10481efa5ec5", "patch": "@@ -1,3 +1,10 @@\n+1999-12-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* splay-tree.c (splay_tree_new): Use struct splay_tree_node_s\n+\trather than struct splay_tree_node.\n+\t(splay_tree_insert): Use struct splay_tree_s rather than struct\n+\tsplay_tree.\n+\n Sun Nov 28 00:59:39 1999  Philippe De Muyter  <phdm@macqel.be>\n \n \t* hashtab.c (sys/types.h): File included."}, {"sha": "22ea07d84adb5eada30579685da96e21d99f6841", "filename": "libiberty/splay-tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08230f26ced6fd952266669aafeb10481efa5ec5/libiberty%2Fsplay-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08230f26ced6fd952266669aafeb10481efa5ec5/libiberty%2Fsplay-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsplay-tree.c?ref=08230f26ced6fd952266669aafeb10481efa5ec5", "patch": "@@ -235,7 +235,7 @@ splay_tree_new (compare_fn, delete_key_fn, delete_value_fn)\n      splay_tree_delete_key_fn delete_key_fn;\n      splay_tree_delete_value_fn delete_value_fn;\n {\n-  splay_tree sp = (splay_tree) xmalloc (sizeof (struct splay_tree));\n+  splay_tree sp = (splay_tree) xmalloc (sizeof (struct splay_tree_s));\n   sp->root = 0;\n   sp->comp = compare_fn;\n   sp->delete_key = delete_key_fn;\n@@ -284,7 +284,7 @@ splay_tree_insert (sp, key, value)\n       /* Create a new node, and insert it at the root.  */\n       splay_tree_node node;\n       \n-      node = (splay_tree_node) xmalloc (sizeof (struct splay_tree_node));\n+      node = (splay_tree_node) xmalloc (sizeof (struct splay_tree_node_s));\n       node->key = key;\n       node->value = value;\n       "}]}