{"sha": "3bd11f791e08a5676f176d632c729d147f12dcaa", "node_id": "C_kwDOANBUbNoAKDNiZDExZjc5MWUwOGE1Njc2ZjE3NmQ2MzJjNzI5ZDE0N2YxMmRjYWE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-07T08:40:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-07T08:40:51Z"}, "message": "i386: Fix up cond_{and,ior,xor,mul}* [PR104779]\n\nThe following testcase ICEs, because the cond_andv* expander\nhas vector_operand predicates in both of the commutative inputs\nand calls gen_andv*_mask which calls ix86_binary_operator_ok\nin its condition, but nothing calls ix86_fixup_binary_operands_no_copy\nduring the expansion, which means cond_* accepts even operands\nlike 2 MEMs which then can't be matched.\n\nThe following patch handles it like most other insns that the other\ncond_* patterns use - by having a separate define_expand that calls\nix86_fixup_binary_operands_no_copy and define_ins with\nix86_binary_operator_ok.\n\n2022-03-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/104779\n\t* config/i386/sse.md (avx512dq_mul<mode>3<mask_name>): New\n\tdefine_expand pattern.  Rename define_insn to ...\n\t(*avx512dq_mul<mode>3<mask_name>): ... this.\n\t(<code><mode>3_mask): New any_logic define_expand pattern.\n\t(<mask_codefor><code><mode>3<mask_name>): Rename to ...\n\t(*<code><mode>3<mask_name>): ... this.\n\n\t* gcc.target/i386/pr104779.c: New test.", "tree": {"sha": "a469738d5d6a756a60a644b66427f504c4702682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a469738d5d6a756a60a644b66427f504c4702682"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bd11f791e08a5676f176d632c729d147f12dcaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd11f791e08a5676f176d632c729d147f12dcaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bd11f791e08a5676f176d632c729d147f12dcaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd11f791e08a5676f176d632c729d147f12dcaa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f0b42896196315acfc636b1e535cda4ee283646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f0b42896196315acfc636b1e535cda4ee283646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f0b42896196315acfc636b1e535cda4ee283646"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "0076475d7ba161c8052d054d4538b9541db07328", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd11f791e08a5676f176d632c729d147f12dcaa/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd11f791e08a5676f176d632c729d147f12dcaa/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3bd11f791e08a5676f176d632c729d147f12dcaa", "patch": "@@ -15210,7 +15210,15 @@\n   DONE;\n })\n \n-(define_insn \"avx512dq_mul<mode>3<mask_name>\"\n+(define_expand \"avx512dq_mul<mode>3<mask_name>\"\n+  [(set (match_operand:VI8_AVX512VL 0 \"register_operand\")\n+\t(mult:VI8_AVX512VL\n+\t  (match_operand:VI8_AVX512VL 1 \"bcst_vector_operand\")\n+\t  (match_operand:VI8_AVX512VL 2 \"bcst_vector_operand\")))]\n+  \"TARGET_AVX512DQ && <mask_mode512bit_condition>\"\n+  \"ix86_fixup_binary_operands_no_copy (MULT, <MODE>mode, operands);\")\n+\n+(define_insn \"*avx512dq_mul<mode>3<mask_name>\"\n   [(set (match_operand:VI8_AVX512VL 0 \"register_operand\" \"=v\")\n \t(mult:VI8_AVX512VL\n \t  (match_operand:VI8_AVX512VL 1 \"bcst_vector_operand\" \"%v\")\n@@ -16824,7 +16832,18 @@\n   DONE;\n })\n \n-(define_insn \"<mask_codefor><code><mode>3<mask_name>\"\n+(define_expand \"<code><mode>3_mask\"\n+  [(set (match_operand:VI48_AVX512VL 0 \"register_operand\")\n+\t(vec_merge:VI48_AVX512VL\n+\t  (any_logic:VI48_AVX512VL\n+\t    (match_operand:VI48_AVX512VL 1 \"bcst_vector_operand\")\n+\t    (match_operand:VI48_AVX512VL 2 \"bcst_vector_operand\"))\n+\t  (match_operand:VI48_AVX512VL 3 \"nonimm_or_0_operand\")\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\")))]\n+  \"TARGET_AVX512F\"\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n+\n+(define_insn \"*<code><mode>3<mask_name>\"\n   [(set (match_operand:VI48_AVX_AVX512F 0 \"register_operand\" \"=x,x,v\")\n \t(any_logic:VI48_AVX_AVX512F\n \t  (match_operand:VI48_AVX_AVX512F 1 \"bcst_vector_operand\" \"%0,x,v\")"}, {"sha": "2dd8ec6a1830fa74258769099b12ad611d65efc3", "filename": "gcc/testsuite/gcc.target/i386/pr104779.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd11f791e08a5676f176d632c729d147f12dcaa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104779.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd11f791e08a5676f176d632c729d147f12dcaa/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104779.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104779.c?ref=3bd11f791e08a5676f176d632c729d147f12dcaa", "patch": "@@ -0,0 +1,27 @@\n+/* PR target/104779 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 --param sccvn-max-alias-queries-per-access=0\" } */\n+\n+__attribute__ ((simd)) int\n+foo (int x, int y, int z)\n+{\n+  return (x & y) * !!z;\n+}\n+\n+__attribute__ ((simd)) int\n+bar (int x, int y, int z)\n+{\n+  return (x | y) * !!z;\n+}\n+\n+__attribute__ ((simd)) int\n+baz (int x, int y, int z)\n+{\n+  return (x ^ y) * !!z;\n+}\n+\n+__attribute__ ((simd, target (\"avx512dq\"))) long\n+qux (long x, long y, long z)\n+{\n+  return (x * y) * !!z;\n+}"}]}