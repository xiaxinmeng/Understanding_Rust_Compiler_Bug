{"sha": "b392376cc521230c8b254841ab036541317dc907", "node_id": "C_kwDOANBUbNoAKGIzOTIzNzZjYzUyMTIzMGM4YjI1NDg0MWFiMDM2NTQxMzE3ZGM5MDc", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-22T11:45:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-22T11:45:59Z"}, "message": "Merge #1154\n\n1154: Add support for isize and usize type-hints r=philberty a=philberty\n\nThis bug turned out to be that we expected a usize for the array capacity\r\nbut the specified capacity turned out to be an integer inference variable\r\nwhich will default to a signed integer. The type resolution was missing\r\nhandling the type-hints of isize and usize\r\n\r\nFixes #1152\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "eca4ecc8e78270566cf628ff18b8996d4c381c1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eca4ecc8e78270566cf628ff18b8996d4c381c1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b392376cc521230c8b254841ab036541317dc907", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiYpV3CRBK7hj4Ov3rIwAA4rcIAJmCI4PXQScJ5AlfcpfK0ODI\n+szSHbNhqfhHg8++qeSB5k8OTz4OWd5JrJx5ogric33Vxx5ECjsGiW5KjJNWxzo/\nZb9cXroG81LUWhFOYRn1rMj0/+ySZ30amPI1d6z6fZvZlGcDFJuuOyMRICO/AJ0a\nqw4rcYGMZZeMnYanZDQfLRzMntoCD8ks8YAM1v0Y/1c3y7XkN3DF0Rn+nHyGuN1U\nudi5dJNXoNhpxpzjl/+QzlhuEVmEGtx+CIj5WqsCskPUtFa9kZytcifPURiGWLAE\nlgG4LuK0GLIX0yscW7BKLUBz65Rs1X7/0xeTUdasmsQwCA9N9HuOD22gQwZngqQ=\n=gtm0\n-----END PGP SIGNATURE-----\n", "payload": "tree eca4ecc8e78270566cf628ff18b8996d4c381c1e\nparent d541ded4855d0b4273a986b15ff497c45dbc6c78\nparent 7915329a0c552245488710d7561a6a76f784c0a7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1650627959 +0000\ncommitter GitHub <noreply@github.com> 1650627959 +0000\n\nMerge #1154\n\n1154: Add support for isize and usize type-hints r=philberty a=philberty\n\nThis bug turned out to be that we expected a usize for the array capacity\r\nbut the specified capacity turned out to be an integer inference variable\r\nwhich will default to a signed integer. The type resolution was missing\r\nhandling the type-hints of isize and usize\r\n\r\nFixes #1152\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b392376cc521230c8b254841ab036541317dc907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b392376cc521230c8b254841ab036541317dc907", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b392376cc521230c8b254841ab036541317dc907/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d541ded4855d0b4273a986b15ff497c45dbc6c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d541ded4855d0b4273a986b15ff497c45dbc6c78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d541ded4855d0b4273a986b15ff497c45dbc6c78"}, {"sha": "7915329a0c552245488710d7561a6a76f784c0a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7915329a0c552245488710d7561a6a76f784c0a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7915329a0c552245488710d7561a6a76f784c0a7"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "4e8fa269ca62b97d5e840d1899ef8e7c469b5827", "filename": "gcc/rust/typecheck/rust-hir-type-check-base.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b392376cc521230c8b254841ab036541317dc907/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b392376cc521230c8b254841ab036541317dc907/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-base.cc?ref=b392376cc521230c8b254841ab036541317dc907", "patch": "@@ -133,6 +133,14 @@ TypeCheckBase::resolve_literal (const Analysis::NodeMapping &expr_mappings,\n \t    ok = context->lookup_builtin (\"f64\", &infered);\n \t    break;\n \n+\t  case CORETYPE_ISIZE:\n+\t    ok = context->lookup_builtin (\"isize\", &infered);\n+\t    break;\n+\n+\t  case CORETYPE_USIZE:\n+\t    ok = context->lookup_builtin (\"usize\", &infered);\n+\t    break;\n+\n \t  default:\n \t    ok = true;\n \t    infered"}, {"sha": "630eb601885740d2dd5b52a977e74dfe69356e67", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b392376cc521230c8b254841ab036541317dc907/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b392376cc521230c8b254841ab036541317dc907/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=b392376cc521230c8b254841ab036541317dc907", "patch": "@@ -619,6 +619,8 @@ class TypeCheckExpr : public TypeCheckBase\n \t    = (negated_expr_ty->get_kind () == TyTy::TypeKind::INT)\n \t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::UINT)\n \t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::FLOAT)\n+\t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::ISIZE)\n+\t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::USIZE)\n \t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::INFER\n \t\t  && (((TyTy::InferType *) negated_expr_ty)->get_infer_kind ()\n \t\t      == TyTy::InferType::INTEGRAL))"}, {"sha": "18eee9e6b4a63695584975c16bdd2c192be7bd14", "filename": "gcc/testsuite/rust/compile/issue-1152.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b392376cc521230c8b254841ab036541317dc907/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1152.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b392376cc521230c8b254841ab036541317dc907/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1152.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1152.rs?ref=b392376cc521230c8b254841ab036541317dc907", "patch": "@@ -0,0 +1,8 @@\n+fn test() {\n+    let f = [0; -4_isize];\n+    // { dg-error \"expected .usize. got .isize.\" \"\" { target *-*-* } .-1 }\n+    // { dg-error \"failed to type resolve expression\" \"\" { target *-*-* } .-2 }\n+    let f = [0_usize; -1_isize];\n+    // { dg-error \"expected .usize. got .isize.\" \"\" { target *-*-* } .-1 }\n+    // { dg-error \"failed to type resolve expression\" \"\" { target *-*-* } .-2 }\n+}"}]}