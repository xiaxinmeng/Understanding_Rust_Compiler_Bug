{"sha": "478c9e72c61443a0fc32841d05c2251246de88c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc4YzllNzJjNjE0NDNhMGZjMzI4NDFkMDVjMjI1MTI0NmRlODhjOA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2002-09-04T17:35:59Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2002-09-04T17:35:59Z"}, "message": "c-tree.texi: Fix overfull hboxes.\n\n2002-09-04  Janis Johnson  <janis187@us.ibm.com>\n\n\t* doc/c-tree.texi: Fix overfull hboxes.\n\t* doc/cppopts.texi: Ditto.\n\t* doc/extend.texi: Ditto.\n\t* doc/gty.texi: Ditto.\n\t* doc/invoke.texi: Ditto.\n\t* doc/makefile.texi: Ditto.\n\t* doc/rtl.texi: Ditto.\n\t* doc/standards.texi: Ditto.\n\t* doc/tm.texi: Ditto.\n\nFrom-SVN: r56802", "tree": {"sha": "cda38963326438a28584b3d0f047c0ae365275fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cda38963326438a28584b3d0f047c0ae365275fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/478c9e72c61443a0fc32841d05c2251246de88c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/478c9e72c61443a0fc32841d05c2251246de88c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/478c9e72c61443a0fc32841d05c2251246de88c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/478c9e72c61443a0fc32841d05c2251246de88c8/comments", "author": null, "committer": null, "parents": [{"sha": "7b98d4549b34d8fe57170ce9fb57f2c1508516dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b98d4549b34d8fe57170ce9fb57f2c1508516dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b98d4549b34d8fe57170ce9fb57f2c1508516dc"}], "stats": {"total": 148, "additions": 88, "deletions": 60}, "files": [{"sha": "7f11bb8c16d77f6481ec3f88b93aa14226cc073b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -1,3 +1,15 @@\n+2002-09-04  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/c-tree.texi: Fix overfull hboxes.\n+\t* doc/cppopts.texi: Ditto.\n+\t* doc/extend.texi: Ditto.\n+\t* doc/gty.texi: Ditto.\n+\t* doc/invoke.texi: Ditto.\n+\t* doc/makefile.texi: Ditto.\n+\t* doc/rtl.texi: Ditto.\n+\t* doc/standards.texi: Ditto.\n+\t* doc/tm.texi: Ditto.\n+\n 2002-09-04  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (builtin_define_with_hex_fp_value): New."}, {"sha": "9ca94806c40ba9f3e6e8ff408b99b8043308164d", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -1203,11 +1203,11 @@ Then, if @code{THUNK_VCALL_OFFSET} (an @code{INTEGER_CST}) is nonzero\n the adjusted @code{this} pointer must be adjusted again.  The complete\n calculation is given by the following pseudo-code:\n \n-@example\n+@smallexample\n this += THUNK_DELTA\n if (THUNK_VCALL_OFFSET)\n   this += (*((ptrdiff_t **) this))[THUNK_VCALL_OFFSET]\n-@end example\n+@end smallexample\n \n Finally, the thunk should jump to the location given\n by @code{DECL_INITIAL}; this will always be an expression for the"}, {"sha": "74fe8be5b7dcf5033ca17745b2cdf8a4d0534946", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -600,10 +600,10 @@ standard-conforming modes it converts them.  See the @option{-std} and\n \n The nine trigraphs and their replacements are\n \n-@example\n+@smallexample\n Trigraph:       ??(  ??)  ??<  ??>  ??=  ??/  ??'  ??!  ??-\n Replacement:      [    ]    @{    @}    #    \\    ^    |    ~\n-@end example\n+@end smallexample\n @end ifclear\n \n @item -remap"}, {"sha": "631ed9f663f327f49191591ac82134f4eb29e740", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -1445,9 +1445,9 @@ variable number of arguments much as a function can.  The syntax for\n defining the macro is similar to that of a function.  Here is an\n example:\n \n-@example\n+@smallexample\n #define debug(format, ...) fprintf (stderr, format, __VA_ARGS__)\n-@end example\n+@end smallexample\n \n Here @samp{@dots{}} is a @dfn{variable argument}.  In the invocation of\n such a macro, it represents the zero or more tokens until the closing\n@@ -1486,9 +1486,9 @@ string.\n To help solve this problem, CPP behaves specially for variable arguments\n used with the token paste operator, @samp{##}.  If instead you write\n \n-@example\n+@smallexample\n #define debug(format, ...) fprintf (stderr, format, ## __VA_ARGS__)\n-@end example\n+@end smallexample\n \n and if the variable arguments are omitted or empty, the @samp{##}\n operator causes the preprocessor to remove the comma before it.  If you\n@@ -1798,9 +1798,9 @@ nested subobject to initialize; the list is taken relative to the\n subobject corresponding to the closest surrounding brace pair.  For\n example, with the @samp{struct point} declaration above:\n \n-@example\n+@smallexample\n struct point ptarray[10] = @{ [2].y = yv2, [2].x = xv2, [0].x = xv0 @};\n-@end example\n+@end smallexample\n \n @noindent\n If the same field is initialized multiple times, it will have value from\n@@ -3420,7 +3420,7 @@ any other type of objects, just like the @code{char} type.  See\n \n Example of use:\n \n-@example\n+@smallexample\n typedef short __attribute__((__may_alias__)) short_a;\n \n int\n@@ -3436,7 +3436,7 @@ main (void)\n \n   exit(0);\n @}\n-@end example\n+@end smallexample\n \n If you replaced @code{short_a} with @code{short} in the variable\n declaration, the above program would abort when compiled with\n@@ -4688,13 +4688,15 @@ as @var{exp2}.\n Example:\n \n @smallexample\n-#define foo(x)                                                               \\\n-  __builtin_choose_expr (__builtin_types_compatible_p (typeof (x), double),  \\\n-    foo_double (x),                                                          \\\n-    __builtin_choose_expr (__builtin_types_compatible_p (typeof (x), float), \\\n-      foo_float (x),                                                         \\\n-      /* @r{The void expression results in a compile-time error}             \\\n-         @r{when assigning the result to something.}  */                     \\\n+#define foo(x)                                                    \\\n+  __builtin_choose_expr (                                         \\\n+    __builtin_types_compatible_p (typeof (x), double),            \\\n+    foo_double (x),                                               \\\n+    __builtin_choose_expr (                                       \\\n+      __builtin_types_compatible_p (typeof (x), float),           \\\n+      foo_float (x),                                              \\\n+      /* @r{The void expression results in a compile-time error}  \\\n+         @r{when assigning the result to something.}  */          \\\n       (void)0))\n @end smallexample\n \n@@ -7289,10 +7291,10 @@ inclusive.  Lower numbers indicate a higher priority.\n In the following example, @code{A} would normally be created before\n @code{B}, but the @code{init_priority} attribute has reversed that order:\n \n-@example\n+@smallexample\n Some_Class  A  __attribute__ ((init_priority (2000)));\n Some_Class  B  __attribute__ ((init_priority (543)));\n-@end example\n+@end smallexample\n \n @noindent\n Note that the particular values of @var{priority} do not matter; only their\n@@ -7318,15 +7320,15 @@ appropriately.  However, if C++ code only needs to execute destructors\n when Java exceptions are thrown through it, GCC will guess incorrectly.\n Sample problematic code is:\n \n-@example\n+@smallexample\n   struct S @{ ~S(); @};\n   extern void bar();    // is written in Java, and may throw exceptions\n   void foo()\n   @{\n     S s;\n     bar();\n   @}\n-@end example\n+@end smallexample\n \n @noindent\n The usual effect of an incorrect guess is a link failure, complaining of"}, {"sha": "cbd9caa516cf82de0fd06a7d79837f8a252b34df", "filename": "gcc/doc/gty.texi", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fgty.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fgty.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgty.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -95,18 +95,21 @@ option is a fragment of C code that calculates the length.\n \n The second case is when a structure or a global variable contains a\n pointer to an array, like this:\n-@verbatim\n-  tree * GTY ((length (\"%h.regno_pointer_align_length\"))) regno_decl;\n-@end verbatim\n+@smallexample\n+tree *\n+  GTY ((length (\"%h.regno_pointer_align_length\"))) regno_decl;\n+@end smallexample\n In this case, @code{regno_decl} has been allocated by writing something like\n-@verbatim\n-  x->regno_decl = ggc_alloc (x->regno_pointer_align_length * sizeof (tree));\n-@end verbatim\n+@smallexample\n+  x->regno_decl =\n+    ggc_alloc (x->regno_pointer_align_length * sizeof (tree));\n+@end smallexample\n and the @code{length} provides the length of the field.\n \n This second use of @code{length} also works on global variables, like:\n @verbatim\n-static GTY((length (\"reg_base_value_size\"))) rtx *reg_base_value;\n+  static GTY((length (\"reg_base_value_size\")))\n+    rtx *reg_base_value;\n @end verbatim\n \n @findex skip\n@@ -126,17 +129,17 @@ field really isn't ever used.\n The type machinery needs to be told which field of a @code{union} is\n currently active.  This is done by giving each field a constant @code{tag}\n value, and then specifying a discriminator using @code{desc}.  For example,\n-@verbatim\n+@smallexample\n struct tree_binding GTY(())\n-{\n+@{\n   struct tree_common common;\n-  union tree_binding_u {\n+  union tree_binding_u @{\n     tree GTY ((tag (\"0\"))) scope;\n     struct cp_binding_level * GTY ((tag (\"1\"))) level;\n-  } GTY ((desc (\"BINDING_HAS_LEVEL_P ((tree)&%0)\"))) scope;\n+  @} GTY ((desc (\"BINDING_HAS_LEVEL_P ((tree)&%0)\"))) scope;\n   tree value;\n-};\n-@end verbatim\n+@};\n+@end smallexample\n \n In the @code{desc} option, the ``current structure'' is the union that\n it discriminates.  Use @code{%1} to mean the structure containing it."}, {"sha": "25f6ec4ef172b9e450d347258a256f621dfd6de8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -270,20 +270,21 @@ in the following sections.\n -fif-conversion -fif-conversion2 @gol\n -finline-functions  -finline-limit=@var{n}  -fkeep-inline-functions @gol\n -fkeep-static-consts  -fmerge-constants  -fmerge-all-constants @gol\n--fmove-all-movables  -fnew-ra -fno-default-inline  -fno-defer-pop @gol\n+-fmove-all-movables  -fnew-ra  -fno-default-inline @gol\n+-fno-defer-pop @gol\n -fno-function-cse  -fno-guess-branch-probability @gol\n -fno-inline  -fno-math-errno  -fno-peephole  -fno-peephole2 @gol\n--funsafe-math-optimizations -ffinite-math-only -fno-trapping-math @gol\n--fno-zero-initialized-in-bss @gol\n+-funsafe-math-optimizations -ffinite-math-only @gol\n+-fno-trapping-math -fno-zero-initialized-in-bss @gol\n -fomit-frame-pointer  -foptimize-register-move @gol\n -foptimize-sibling-calls  -fprefetch-loop-arrays @gol\n -freduce-all-givs -fregmove  -frename-registers @gol\n -freorder-blocks -freorder-functions @gol\n -frerun-cse-after-loop  -frerun-loop-opt @gol\n -fschedule-insns  -fschedule-insns2 -fsignaling-nans @gol\n -fsingle-precision-constant  -fssa -fssa-ccp -fssa-dce @gol\n--fstrength-reduce  -fstrict-aliasing  -ftracer -fthread-jumps  -ftrapv @gol\n--funroll-all-loops  -funroll-loops  @gol\n+-fstrength-reduce  -fstrict-aliasing  -ftracer -fthread-jumps @gol\n+-ftrapv -funroll-all-loops  -funroll-loops  @gol\n --param @var{name}=@var{value}\n -O  -O0  -O1  -O2  -O3  -Os}\n \n@@ -338,7 +339,8 @@ in the following sections.\n @emph{M68hc1x Options}\n @gccoptlist{\n -m6811  -m6812  -m68hc11  -m68hc12 @gol\n--mauto-incdec  -minmax  -mlong-calls  -mshort  -msoft-reg-count=@var{count}}\n+-mauto-incdec  -minmax  -mlong-calls  -mshort @gol\n+-msoft-reg-count=@var{count}}\n \n @emph{VAX Options}\n @gccoptlist{\n@@ -447,7 +449,7 @@ in the following sections.\n -mno-relocatable  -mrelocatable-lib  -mno-relocatable-lib @gol\n -mtoc  -mno-toc -mlittle  -mlittle-endian  -mbig  -mbig-endian @gol\n -mcall-aix -mcall-sysv -mcall-netbsd @gol\n--maix-struct-return -msvr4-struct-return\n+-maix-struct-return -msvr4-struct-return @gol\n -mabi=altivec -mabi=no-altivec @gol\n -mabi=spe -mabi=no-spe @gol\n -misel=yes -misel=no @gol\n@@ -477,7 +479,7 @@ in the following sections.\n -m4650  -msingle-float  -mmad @gol\n -mstats  -EL  -EB  -G @var{num}  -nocpp @gol\n -mabi=32  -mabi=n32  -mabi=64  -mabi=eabi @gol\n--mfix7000  -mno-crt0 -mflush-func=@var{func} -mno-flush-func\n+-mfix7000  -mno-crt0 -mflush-func=@var{func} -mno-flush-func @gol\n -mbranch-likely -mno-branch-likely}\n \n @emph{i386 and x86-64 Options}\n@@ -619,8 +621,8 @@ in the following sections.\n \n @emph{D30V Options}\n @gccoptlist{\n--mextmem  -mextmemory  -monchip  -mno-asm-optimize  -masm-optimize @gol\n--mbranch-cost=@var{n} -mcond-exec=@var{n}}\n+-mextmem  -mextmemory  -monchip  -mno-asm-optimize @gol\n+-masm-optimize -mbranch-cost=@var{n} -mcond-exec=@var{n}}\n \n @emph{S/390 and zSeries Options}\n @gccoptlist{\n@@ -684,7 +686,8 @@ in the following sections.\n -fverbose-asm  -fpack-struct  -fstack-check @gol\n -fstack-limit-register=@var{reg}  -fstack-limit-symbol=@var{sym} @gol\n -fargument-alias  -fargument-noalias @gol\n--fargument-noalias-global  -fleading-underscore -ftls-model=@var{model}}\n+-fargument-noalias-global  -fleading-underscore @gol\n+-ftls-model=@var{model}}\n @end table\n \n @menu"}, {"sha": "6d6b0253aa6b131fa683dc907efa855e8a052e34", "filename": "gcc/doc/makefile.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fmakefile.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fmakefile.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmakefile.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -48,9 +48,9 @@ You can specify specific tests by setting RUNTESTFLAGS to be the name\n of the @file{.exp} file, optionally followed by (for some tests) an equals\n and a file wildcard, like:\n \n-@example\n+@smallexample\n make check-gcc RUNTESTFLAGS=\"execute.exp=19980413-*\"\n-@end example\n+@end smallexample\n \n Note that running the testsuite may require additional tools be\n installed, such as TCL or dejagnu."}, {"sha": "5a016bea42f40f607246d744733f9f8ee851e951", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -2355,11 +2355,11 @@ An hypothetical example might be a pattern for an addition that can\n either wrap around or use saturating addition depending on the value\n of a special control register:\n \n-@example\n+@smallexample\n (parallel [(set (reg:SI 2) (unspec:SI [(reg:SI 3)\n                                        (reg:SI 4)] 0))\n            (use (reg:SI 1))])\n-@end example\n+@end smallexample\n \n @noindent\n \n@@ -2588,10 +2588,10 @@ where @var{z} is an index register and @var{i} is a constant.\n \n Here is an example of its use:\n \n-@example\n+@smallexample\n (mem:SF (post_modify:SI (reg:SI 42) (plus (reg:SI 42)\n                                           (reg:SI 48))))\n-@end example\n+@end smallexample\n \n This says to modify pseudo register 42 by adding the contents of pseudo\n register 48 to it, after the use of what ever 42 points to."}, {"sha": "8c37fccd440a47c58487419f8ba5fc75930d0887", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -160,11 +160,19 @@ information concerning the history of C that is available online, see\n \n There is no formal written standard for Objective-C@.  The most\n authoritative manual is ``Object-Oriented Programming and the\n-Objective-C Language'', available at a number of web sites;\n-@uref{http://developer.apple.com/techpubs/macosx/Cocoa/ObjectiveC/} has a\n-recent version, while @uref{http://www.toodarkpark.org/computers/objc/}\n-is an older example.  @uref{http://www.gnustep.org} includes useful\n-information as well.\n+Objective-C Language'', available at a number of web sites\n+\n+@itemize\n+@item\n+@uref{http://developer.apple.com/techpubs/macosx/Cocoa/ObjectiveC/}\n+is a recent version\n+@item\n+@uref{http://www.toodarkpark.org/computers/objc/}\n+is an older example\n+@item\n+@uref{http://www.gnustep.org}\n+has additional useful information\n+@end itemize\n \n @cindex treelang\n There is no standard for treelang, which is a sample language front end"}, {"sha": "1b08358d8b398305c5a426a28fbf901b95e0a587", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/478c9e72c61443a0fc32841d05c2251246de88c8/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=478c9e72c61443a0fc32841d05c2251246de88c8", "patch": "@@ -157,11 +157,11 @@ such as one option that enables many options, some of which select\n multilibs.  Example nonsensical definition, where @code{-malt-abi},\n @code{-EB}, and @code{-mspoo} cause different multilibs to be chosen:\n \n-@example\n+@smallexample\n #define TARGET_OPTION_TRANSLATE_TABLE \\\n @{ \"-fast\",   \"-march=fast-foo -malt-abi -I/usr/fast-foo\" @}, \\\n @{ \"-compat\", \"-EB -malign=4 -mspoo\" @}\n-@end example\n+@end smallexample\n \n @findex CPP_SPEC\n @item CPP_SPEC"}]}