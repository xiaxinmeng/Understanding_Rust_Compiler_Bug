{"sha": "7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E1Y2JmMjliZWIyNDg1YTQzODU2MTNhMDJjYmMwYmUxYzAzZDJiYg==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2017-07-27T20:03:35Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2017-07-27T20:03:35Z"}, "message": "rs6000.opt (mlra): Replace with stub.\n\ngcc/\n\n\t* config/rs6000/rs6000.opt (mlra): Replace with stub.\n\t* config/rs6000/rs6000-cpus.def (POWERPC_MASKS): Delete OPTION_MASK_LRA.\n\t* config/rs6000/rs6000.c (TARGET_LRA_P): Delete.\n\t(rs6000_debug_reg_global): Delete print of LRA status.\n\t(rs6000_option_override_internal): Delete dead LRA related code.\n\t(rs6000_lra_p): Delete function.\n\t* doc/invoke.texi (RS/6000 and PowerPC Options): Delete -mlra.\n\ngcc/testsuite/\n\n\t* g++.dg/pr69667.C: Remove option -mlra.\n\t* gcc.target/powerpc/dform-1.c: Likewise.\n\t* gcc.target/powerpc/dform-2.c: Likewise.\n\t* gcc.target/powerpc/dform-3.c: Likewise.\n\t* gcc.target/powerpc/p8vector-int128-1.c: Likewise.\n\t* gcc.target/powerpc/p9-vparity.c: Likewise.\n\t* gcc.target/powerpc/pr63491.c: Likewise.\n\t* gcc.target/powerpc/pr67808.c: Likewise.\n\t* gcc.target/powerpc/pr68805.c: Likewise.\n\t* gcc.target/powerpc/pr69461.c: Likewise.\n\t* gcc.target/powerpc/pr71680.c: Likewise.\n\t* gcc.target/powerpc/pr77289.c: Likewise.\n\t* gcc.target/powerpc/pr78458.c: Likewise.\n\t* gcc.target/powerpc/pr78543.c: Likewise.\n\t* g++.dg/pr71294.C: Remove option -mno-lra.\n\t* gcc.target/powerpc/pr71656-1.c: Likewise.\n\t* gcc.target/powerpc/pr71656-2.c: Likewise.\n\t* gcc.target/powerpc/pr71698.c: Likewise.\n\nFrom-SVN: r250637", "tree": {"sha": "46758c8b4f50f13576540832f8ff45ab4887631c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46758c8b4f50f13576540832f8ff45ab4887631c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a40ff0ae8b8d28d5713792ca108f688f2ca4825a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40ff0ae8b8d28d5713792ca108f688f2ca4825a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40ff0ae8b8d28d5713792ca108f688f2ca4825a"}], "stats": {"total": 126, "additions": 56, "deletions": 70}, "files": [{"sha": "252229e0d259993a6f826bfba4ec2c8c90e42052", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,3 +1,13 @@\n+2017-07-27  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.opt (mlra): Replace with stub.\n+\t* config/rs6000/rs6000-cpus.def (POWERPC_MASKS): Delete OPTION_MASK_LRA.\n+\t* config/rs6000/rs6000.c (TARGET_LRA_P): Delete.\n+\t(rs6000_debug_reg_global): Delete print of LRA status.\n+\t(rs6000_option_override_internal): Delete dead LRA related code.\n+\t(rs6000_lra_p): Delete function.\n+\t* doc/invoke.texi (RS/6000 and PowerPC Options): Delete -mlra.\n+\n 2017-07-27  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* config.gcc (riscv*-*-elf*): Add (riscv*-*-rtems*)."}, {"sha": "190f9123fa0cafcc8d429201631cd7d2987e61de", "filename": "gcc/config/rs6000/rs6000-cpus.def", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -123,7 +123,6 @@\n \t\t\t\t | OPTION_MASK_FPRND\t\t\t\\\n \t\t\t\t | OPTION_MASK_HTM\t\t\t\\\n \t\t\t\t | OPTION_MASK_ISEL\t\t\t\\\n-\t\t\t\t | OPTION_MASK_LRA\t\t\t\\\n \t\t\t\t | OPTION_MASK_MFCRF\t\t\t\\\n \t\t\t\t | OPTION_MASK_MFPGPR\t\t\t\\\n \t\t\t\t | OPTION_MASK_MODULO\t\t\t\\"}, {"sha": "016a9bef2dfdf7a45124ea4b06414261b990e60b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 42, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1887,9 +1887,6 @@ static const struct attribute_spec rs6000_attribute_table[] =\n #undef TARGET_MODE_DEPENDENT_ADDRESS_P\n #define TARGET_MODE_DEPENDENT_ADDRESS_P rs6000_mode_dependent_address_p\n \n-#undef TARGET_LRA_P\n-#define TARGET_LRA_P rs6000_lra_p\n-\n #undef TARGET_COMPUTE_PRESSURE_CLASSES\n #define TARGET_COMPUTE_PRESSURE_CLASSES rs6000_compute_pressure_classes\n \n@@ -2790,8 +2787,6 @@ rs6000_debug_reg_global (void)\n   if (TARGET_LINK_STACK)\n     fprintf (stderr, DEBUG_FMT_S, \"link_stack\", \"true\");\n \n-  fprintf (stderr, DEBUG_FMT_S, \"lra\", TARGET_LRA ? \"true\" : \"false\");\n-\n   if (TARGET_P8_FUSION)\n     {\n       char options[80];\n@@ -4555,35 +4550,10 @@ rs6000_option_override_internal (bool global_init_p)\n \t}\n     }\n \n-  /* Enable LRA by default.  */\n-  if ((rs6000_isa_flags_explicit & OPTION_MASK_LRA) == 0)\n-    rs6000_isa_flags |= OPTION_MASK_LRA;\n-\n-  /* There have been bugs with -mvsx-timode that don't show up with -mlra,\n-     but do show up with -mno-lra.  Given -mlra will become the default once\n-     PR 69847 is fixed, turn off the options with problems by default if\n-     -mno-lra was used, and warn if the user explicitly asked for the option.\n-\n-     Enable -mpower9-dform-vector by default if LRA and other power9 options.\n-     Enable -mvsx-timode by default if LRA and VSX.  */\n-  if (!TARGET_LRA)\n-    {\n-      if (TARGET_VSX_TIMODE)\n-\t{\n-\t  if ((rs6000_isa_flags_explicit & OPTION_MASK_VSX_TIMODE) != 0)\n-\t    warning (0, \"-mvsx-timode might need -mlra\");\n-\n-\t  else\n-\t    rs6000_isa_flags &= ~OPTION_MASK_VSX_TIMODE;\n-\t}\n-    }\n-\n-  else\n-    {\n-      if (TARGET_VSX && !TARGET_VSX_TIMODE\n-\t  && (rs6000_isa_flags_explicit & OPTION_MASK_VSX_TIMODE) == 0)\n-\trs6000_isa_flags |= OPTION_MASK_VSX_TIMODE;\n-    }\n+  /* Enable -mvsx-timode by default if VSX.  */\n+  if (TARGET_VSX && !TARGET_VSX_TIMODE\n+      && (rs6000_isa_flags_explicit & OPTION_MASK_VSX_TIMODE) == 0)\n+    rs6000_isa_flags |= OPTION_MASK_VSX_TIMODE;\n \n   /* Set -mallow-movmisalign to explicitly on if we have full ISA 2.07\n      support. If we only have ISA 2.06 support, and the user did not specify\n@@ -35876,14 +35846,6 @@ rs6000_libcall_value (machine_mode mode)\n   return gen_rtx_REG (mode, regno);\n }\n \n-\n-/* Return true if we use LRA instead of reload pass.  */\n-static bool\n-rs6000_lra_p (void)\n-{\n-  return TARGET_LRA;\n-}\n-\n /* Compute register pressure classes.  We implement the target hook to avoid\n    IRA picking something like NON_SPECIAL_REGS as a pressure class, which can\n    lead to incorrect estimates of number of available registers and therefor"}, {"sha": "e94aa07bc7a5a680a24b18b44d9ef03d072e4eeb", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -430,9 +430,9 @@ mlong-double-\n Target RejectNegative Joined UInteger Var(rs6000_long_double_type_size) Save\n -mlong-double-<n>\tSpecify size of long double (64 or 128 bits).\n \n+; This option existed in the past, but now is always on.\n mlra\n-Target Report Mask(LRA) Var(rs6000_isa_flags)\n-Enable Local Register Allocation.\n+Target RejectNegative Undocumented Ignore\n \n msched-costly-dep=\n Target RejectNegative Joined Var(rs6000_sched_costly_dep_str)"}, {"sha": "5ae9dc4128d5bd2abc15e6b1982051b798f73b70", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1048,8 +1048,7 @@ See RS/6000 and PowerPC Options.\n -mfloat128  -mno-float128  -mfloat128-hardware  -mno-float128-hardware @gol\n -mgnu-attribute  -mno-gnu-attribute @gol\n -mstack-protector-guard=@var{guard} -mstack-protector-guard-reg=@var{reg} @gol\n--mstack-protector-guard-offset=@var{offset} @gol\n--mlra  -mno-lra}\n+-mstack-protector-guard-offset=@var{offset}}\n \n @emph{RX Options}\n @gccoptlist{-m64bit-doubles  -m32bit-doubles  -fpu  -nofpu@gol\n@@ -21841,11 +21840,6 @@ This switch enables or disables the generation of ISEL instructions.\n This switch has been deprecated.  Use @option{-misel} and\n @option{-mno-isel} instead.\n \n-@item -mlra\n-@opindex mlra\n-Enable Local Register Allocation. By default the port uses LRA.\n-(i.e. @option{-mno-lra}).\n-\n @item -mspe\n @itemx -mno-spe\n @opindex mspe"}, {"sha": "40f9501afb8cc63329130a534a67319b6f773900", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,3 +1,24 @@\n+2017-07-27  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* g++.dg/pr69667.C: Remove option -mlra.\n+\t* gcc.target/powerpc/dform-1.c: Likewise.\n+\t* gcc.target/powerpc/dform-2.c: Likewise.\n+\t* gcc.target/powerpc/dform-3.c: Likewise.\n+\t* gcc.target/powerpc/p8vector-int128-1.c: Likewise.\n+\t* gcc.target/powerpc/p9-vparity.c: Likewise.\n+\t* gcc.target/powerpc/pr63491.c: Likewise.\n+\t* gcc.target/powerpc/pr67808.c: Likewise.\n+\t* gcc.target/powerpc/pr68805.c: Likewise.\n+\t* gcc.target/powerpc/pr69461.c: Likewise.\n+\t* gcc.target/powerpc/pr71680.c: Likewise.\n+\t* gcc.target/powerpc/pr77289.c: Likewise.\n+\t* gcc.target/powerpc/pr78458.c: Likewise.\n+\t* gcc.target/powerpc/pr78543.c: Likewise.\n+\t* g++.dg/pr71294.C: Remove option -mno-lra.\n+\t* gcc.target/powerpc/pr71656-1.c: Likewise.\n+\t* gcc.target/powerpc/pr71656-2.c: Likewise.\n+\t* gcc.target/powerpc/pr71698.c: Likewise.\n+\n 2017-07-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \t    Sudakshina Das  <sudi.das@arm.com>\n "}, {"sha": "76f7cb3d40b3e5bc5f258c6157c1dd5d85263f11", "filename": "gcc/testsuite/g++.dg/pr69667.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr69667.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr69667.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr69667.C?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -2,7 +2,7 @@\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n-/* { dg-options \"-mcpu=power8 -w -std=c++14 -mlra\" } */\n+/* { dg-options \"-mcpu=power8 -w -std=c++14\" } */\n \n /* target/69667, compiler got\n    internal compiler error: Max. number of generated reload insns per insn is achieved (90)  */"}, {"sha": "67675dd7e3060dfd61aa176f10275c1914b0da9e", "filename": "gcc/testsuite/g++.dg/pr71294.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71294.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71294.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71294.C?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,7 +1,7 @@\n // { dg-do compile { target { powerpc64*-*-* && lp64 } } }\n // { dg-require-effective-target powerpc_p8vector_ok } */\n // { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } }\n-// { dg-options \"-mcpu=power8 -O3 -fstack-protector -mno-lra\" }\n+// { dg-options \"-mcpu=power8 -O3 -fstack-protector\" }\n \n // PAR target/71294 failed because RELOAD could not figure how create a V2DI\n // vector that auto vectorization created with each element being the same"}, {"sha": "37a30d1c92f68ecca65e85adda190af5d53787a0", "filename": "gcc/testsuite/gcc.target/powerpc/dform-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-1.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-mcpu=power9 -mpower9-dform -O2 -mlra\" } */\n+/* { dg-options \"-mcpu=power9 -mpower9-dform -O2\" } */\n \n #ifndef TYPE\n #define TYPE double"}, {"sha": "b4c4199c0b3d6bcddd1c0322e768882c8472e688", "filename": "gcc/testsuite/gcc.target/powerpc/dform-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-2.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-mcpu=power9 -mpower9-dform -O2 -mlra\" } */\n+/* { dg-options \"-mcpu=power9 -mpower9-dform -O2\" } */\n \n #ifndef TYPE\n #define TYPE float"}, {"sha": "c261c4e6f5d36bd5695ab2dc2a711ea3dc63706a", "filename": "gcc/testsuite/gcc.target/powerpc/dform-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdform-3.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-mcpu=power9 -mpower9-dform -O2 -mlra\" } */\n+/* { dg-options \"-mcpu=power9 -mpower9-dform -O2\" } */\n \n #ifndef TYPE\n #define TYPE vector double"}, {"sha": "992ed225d5f8f70f32a08b9668ac6b0a7f61aebc", "filename": "gcc/testsuite/gcc.target/powerpc/p8vector-int128-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-int128-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-int128-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-int128-1.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -2,7 +2,7 @@\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n-/* { dg-options \"-mcpu=power8 -O3 -mvsx-timode -mlra\" } */\n+/* { dg-options \"-mcpu=power8 -O3 -mvsx-timode\" } */\n \n #include <altivec.h>\n "}, {"sha": "6e49606fe0b22c0615ab33a3fda9df6e0431d07a", "filename": "gcc/testsuite/gcc.target/powerpc/p9-vparity.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vparity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vparity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vparity.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -2,7 +2,7 @@\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-mcpu=power9 -O2 -mlra -mvsx-timode\" } */\n+/* { dg-options \"-mcpu=power9 -O2 -mvsx-timode\" } */\n \n #include <altivec.h>\n "}, {"sha": "be6a40eb32dc68b11f1eed27ca3cce97bdda0129", "filename": "gcc/testsuite/gcc.target/powerpc/pr63491.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr63491.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr63491.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr63491.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n-/* { dg-options \"-O1 -mcpu=power8 -mlra\" } */\n+/* { dg-options \"-O1 -mcpu=power8\" } */\n \n typedef __int128_t __attribute__((__vector_size__(16))) vector_128_t;\n typedef unsigned long long scalar_64_t;"}, {"sha": "3ee8003bebc299beb374715612a8fcd1a7c7485a", "filename": "gcc/testsuite/gcc.target/powerpc/pr67808.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr67808.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr67808.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr67808.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -2,7 +2,7 @@\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n-/* { dg-options \"-O1 -mvsx -mlra -mcpu=power7 -mlong-double-128\" } */\n+/* { dg-options \"-O1 -mvsx -mcpu=power7 -mlong-double-128\" } */\n \n /* PR 67808: LRA ICEs on simple double to long double conversion test case */\n "}, {"sha": "f4454a9e2d2e16db6554cc77442c70d4e210950f", "filename": "gcc/testsuite/gcc.target/powerpc/pr68805.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr68805.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr68805.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr68805.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target powerpc64le-*-* } } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n-/* { dg-options \"-O2 -mvsx-timode -mcpu=power8 -mlra\" } */\n+/* { dg-options \"-O2 -mvsx-timode -mcpu=power8\" } */\n \n typedef struct bar {\n   void *a;"}, {"sha": "f693a5f0146818ebfd4e895e8072e9b825a291c8", "filename": "gcc/testsuite/gcc.target/powerpc/pr69461.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr69461.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr69461.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr69461.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -mlra\" } */\n+/* { dg-options \"-O3\" } */\n \n extern void _setjmp (void);\n typedef struct {"}, {"sha": "1cb809f8b2a976f073ee4071a61b7db22b52f5ab", "filename": "gcc/testsuite/gcc.target/powerpc/pr71656-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71656-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71656-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71656-1.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -2,7 +2,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-O1 -mcpu=power9 -mpower9-dform-vector -mno-lra\" } */\n+/* { dg-options \"-O1 -mcpu=power9 -mpower9-dform-vector\" } */\n \n typedef __attribute__((altivec(vector__))) int type_t;\n type_t"}, {"sha": "f953ebe4f9e4b934587c85c7c96df4b986f018fa", "filename": "gcc/testsuite/gcc.target/powerpc/pr71656-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71656-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71656-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71656-2.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -2,7 +2,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-O3 -mcpu=power9 -mpower9-dform-vector -mno-lra -funroll-loops -fno-aggressive-loop-optimizations\" } */\n+/* { dg-options \"-O3 -mcpu=power9 -mpower9-dform-vector -funroll-loops -fno-aggressive-loop-optimizations\" } */\n \n typedef double vec[3];\n struct vec_t"}, {"sha": "cdb7b5143edddabb23d193cd79803bf360e6ae9d", "filename": "gcc/testsuite/gcc.target/powerpc/pr71680.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71680.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71680.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71680.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { powerpc*-*-* } } } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n-/* { dg-options \"-mcpu=power8 -O1 -mlra\" } */\n+/* { dg-options \"-mcpu=power8 -O1\" } */\n \n #pragma pack(1)\n struct"}, {"sha": "eba47b0951f59d7c05c23d6d1739e008b59f2c17", "filename": "gcc/testsuite/gcc.target/powerpc/pr71698.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71698.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71698.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr71698.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -3,7 +3,7 @@\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-require-effective-target dfp } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-O1 -mcpu=power9 -mno-lra\" } */\n+/* { dg-options \"-O1 -mcpu=power9\" } */\n \n extern void testvad128 (int n, ...);\n void"}, {"sha": "474bdbf0b16753a5363d252eeadec3406025a802", "filename": "gcc/testsuite/gcc.target/powerpc/pr77289.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr77289.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr77289.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr77289.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -2,7 +2,7 @@\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n /* { dg-require-effective-target powerpc_vsx_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n-/* { dg-options \"-O3 -mcpu=power7 -funroll-loops -ffast-math -mlra -mupdate -fno-auto-inc-dec\" } */\n+/* { dg-options \"-O3 -mcpu=power7 -funroll-loops -ffast-math -mupdate -fno-auto-inc-dec\" } */\n \n /* PR 77289: LRA ICEs due to invalid constraint checking.  */\n "}, {"sha": "a27876375af00a9eb8e75d5df45e5bf0c63827b1", "filename": "gcc/testsuite/gcc.target/powerpc/pr78458.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78458.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78458.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78458.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mcpu=8548 -mspe -mabi=spe -mlra\" } */\n+/* { dg-options \"-mcpu=8548 -mspe -mabi=spe\" } */\n /* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } } */\n \n extern void bar (void);"}, {"sha": "13b34e58a0beed9e78aa10d611d7d8acc162cf3d", "filename": "gcc/testsuite/gcc.target/powerpc/pr78543.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78543.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5cbf29beb2485a4385613a02cbc0be1c03d2bb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78543.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78543.c?ref=7a5cbf29beb2485a4385613a02cbc0be1c03d2bb", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { powerpc64*-*-* && lp64 } } } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n-/* { dg-options \"-mcpu=power8 -O1 -mno-lra\" } */\n+/* { dg-options \"-mcpu=power8 -O1\" } */\n \n typedef long a;\n enum c { e, f, g, h, i, ab } j();"}]}