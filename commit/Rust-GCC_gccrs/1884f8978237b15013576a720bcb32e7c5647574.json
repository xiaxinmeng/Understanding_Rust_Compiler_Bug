{"sha": "1884f8978237b15013576a720bcb32e7c5647574", "node_id": "C_kwDOANBUbNoAKDE4ODRmODk3ODIzN2IxNTAxMzU3NmE3MjBiY2IzMmU3YzU2NDc1NzQ", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-07-15T10:50:52Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-07-16T07:27:42Z"}, "message": "xtensa: constantsynth: Make try to find shorter instruction\n\nThis patch allows the constant synthesis to choose shorter instruction\nif possible.\n\n    /* example */\n    int test(void) {\n      return 128 << 8;\n    }\n\n    ;; before\n    test:\n\tmovi\ta2, 0x100\n\taddmi\ta2, a2, 0x7f00\n\tret.n\n\n    ;; after\n    test:\n\tmovi.n\ta2, 1\n\tslli\ta2, a2, 15\n\tret.n\n\nWhen the Code Density Option is configured, the latter is one byte smaller\nthan the former.\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.cc (xtensa_emit_constantsynth): Remove.\n\t(xtensa_constantsynth_2insn): Change to try all three synthetic\n\tmethods and to use the one that fits the immediate value of\n\tthe seed into a Narrow Move Immediate instruction \"MOVI.N\"\n\twhen the Code Density Option is configured.", "tree": {"sha": "b98ef99aa38d61419a85495dcc6eadf1f28df9e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b98ef99aa38d61419a85495dcc6eadf1f28df9e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1884f8978237b15013576a720bcb32e7c5647574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1884f8978237b15013576a720bcb32e7c5647574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1884f8978237b15013576a720bcb32e7c5647574", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1884f8978237b15013576a720bcb32e7c5647574/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdc7b765f8728cbb769fe1eeef773eda15578aee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc7b765f8728cbb769fe1eeef773eda15578aee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc7b765f8728cbb769fe1eeef773eda15578aee"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "94337452ba8ff69d80bed72c031b30c047545722", "filename": "gcc/config/xtensa/xtensa.cc", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1884f8978237b15013576a720bcb32e7c5647574/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1884f8978237b15013576a720bcb32e7c5647574/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc?ref=1884f8978237b15013576a720bcb32e7c5647574", "patch": "@@ -1035,35 +1035,35 @@ xtensa_split_operand_pair (rtx operands[4], machine_mode mode)\n    load-immediate / arithmetic ones, instead of a L32R instruction\n    (plus a constant in litpool).  */\n \n-static void\n-xtensa_emit_constantsynth (rtx dst, enum rtx_code code,\n-\t\t\t   HOST_WIDE_INT imm0, HOST_WIDE_INT imm1,\n-\t\t\t   rtx (*gen_op)(rtx, HOST_WIDE_INT),\n-\t\t\t   HOST_WIDE_INT imm2)\n-{\n-  gcc_assert (REG_P (dst));\n-  emit_move_insn (dst, GEN_INT (imm0));\n-  emit_move_insn (dst, gen_rtx_fmt_ee (code, SImode,\n-\t\t\t\t       dst, GEN_INT (imm1)));\n-  if (gen_op)\n-    emit_move_insn (dst, gen_op (dst, imm2));\n-}\n-\n static int\n xtensa_constantsynth_2insn (rtx dst, HOST_WIDE_INT srcval,\n \t\t\t    rtx (*gen_op)(rtx, HOST_WIDE_INT),\n \t\t\t    HOST_WIDE_INT op_imm)\n {\n-  int shift = exact_log2 (srcval + 1);\n+  HOST_WIDE_INT imm = INT_MAX;\n+  rtx x = NULL_RTX;\n+  int shift;\n \n+  gcc_assert (REG_P (dst));\n+\n+  shift = exact_log2 (srcval + 1);\n   if (IN_RANGE (shift, 1, 31))\n     {\n-      xtensa_emit_constantsynth (dst, LSHIFTRT, -1, 32 - shift,\n-\t\t\t\t gen_op, op_imm);\n-      return 1;\n+      imm = -1;\n+      x = gen_lshrsi3 (dst, dst, GEN_INT (32 - shift));\n     }\n \n-  if (IN_RANGE (srcval, (-2048 - 32768), (2047 + 32512)))\n+\n+  shift = ctz_hwi (srcval);\n+  if ((!x || (TARGET_DENSITY && ! IN_RANGE (imm, -32, 95)))\n+      && xtensa_simm12b (srcval >> shift))\n+    {\n+      imm = srcval >> shift;\n+      x = gen_ashlsi3 (dst, dst, GEN_INT (shift));\n+    }\n+\n+  if ((!x || (TARGET_DENSITY && ! IN_RANGE (imm, -32, 95)))\n+      && IN_RANGE (srcval, (-2048 - 32768), (2047 + 32512)))\n     {\n       HOST_WIDE_INT imm0, imm1;\n \n@@ -1076,19 +1076,19 @@ xtensa_constantsynth_2insn (rtx dst, HOST_WIDE_INT srcval,\n       imm0 = srcval - imm1;\n       if (TARGET_DENSITY && imm1 < 32512 && IN_RANGE (imm0, 224, 255))\n \timm0 -= 256, imm1 += 256;\n-      xtensa_emit_constantsynth (dst, PLUS, imm0, imm1, gen_op, op_imm);\n-\treturn 1;\n+      imm = imm0;\n+      x = gen_addsi3 (dst, dst, GEN_INT (imm1));\n     }\n \n-  shift = ctz_hwi (srcval);\n-  if (xtensa_simm12b (srcval >> shift))\n-    {\n-      xtensa_emit_constantsynth (dst, ASHIFT, srcval >> shift, shift,\n-\t\t\t\t gen_op, op_imm);\n-      return 1;\n-    }\n+  if (!x)\n+    return 0;\n \n-  return 0;\n+  emit_move_insn (dst, GEN_INT (imm));\n+  emit_insn (x);\n+  if (gen_op)\n+    emit_move_insn (dst, gen_op (dst, op_imm));\n+\n+  return 1;\n }\n \n static rtx"}]}