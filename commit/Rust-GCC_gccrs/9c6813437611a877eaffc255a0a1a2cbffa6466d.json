{"sha": "9c6813437611a877eaffc255a0a1a2cbffa6466d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM2ODEzNDM3NjExYTg3N2VhZmZjMjU1YTBhMWEyY2JmZmE2NDY2ZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-03T15:22:52Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-03T15:22:52Z"}, "message": "aarch64: Don't fold svundef* at the gimple level\n\nAs the testcase shows, folding svundef*() at the gimple level\nhas the unfortunate side-effect of introducing -Wuninitialized\nor -Wmaybe-uninitialized warnings.  We don't have a testcase\nthat relies on the fold, so the easiest fix seems to be to\nremove it.\n\ngcc/\n\t* config/aarch64/aarch64-sve-builtins-base.cc (svundef_impl::fold):\n\tDelete.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/acle/general/undef_1.c: New test.", "tree": {"sha": "530ff0e9aa28fe9f1bedfed3b5c589af8c6e76db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/530ff0e9aa28fe9f1bedfed3b5c589af8c6e76db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c6813437611a877eaffc255a0a1a2cbffa6466d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6813437611a877eaffc255a0a1a2cbffa6466d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c6813437611a877eaffc255a0a1a2cbffa6466d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6813437611a877eaffc255a0a1a2cbffa6466d/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "277ff3406d533990e98cf1c2075b9dc9db6fa48a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277ff3406d533990e98cf1c2075b9dc9db6fa48a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277ff3406d533990e98cf1c2075b9dc9db6fa48a"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "4223125cd5ec0dfe6e9e4b0ab3b23e45696aa873", "filename": "gcc/config/aarch64/aarch64-sve-builtins-base.cc", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6813437611a877eaffc255a0a1a2cbffa6466d/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6813437611a877eaffc255a0a1a2cbffa6466d/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc?ref=9c6813437611a877eaffc255a0a1a2cbffa6466d", "patch": "@@ -2295,17 +2295,6 @@ class svundef_impl : public quiet<multi_vector_function>\n   CONSTEXPR svundef_impl (unsigned int vectors_per_tuple)\n     : quiet<multi_vector_function> (vectors_per_tuple) {}\n \n-  gimple *\n-  fold (gimple_folder &f) const OVERRIDE\n-  {\n-    /* Don't fold svundef at the gimple level.  There's no exact\n-       correspondence for SSA_NAMEs, and we explicitly don't want\n-       to generate a specific value (like an all-zeros vector).  */\n-    if (vectors_per_tuple () == 1)\n-      return NULL;\n-    return gimple_build_assign (f.lhs, build_clobber (TREE_TYPE (f.lhs)));\n-  }\n-\n   rtx\n   expand (function_expander &e) const OVERRIDE\n   {"}, {"sha": "793593b662cf6ce25556b4c2b5585ae85dc21068", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general/undef_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6813437611a877eaffc255a0a1a2cbffa6466d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fundef_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6813437611a877eaffc255a0a1a2cbffa6466d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fundef_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Fundef_1.c?ref=9c6813437611a877eaffc255a0a1a2cbffa6466d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-O2 -W -Wall -Werror\" } */\n+\n+#include <arm_sve.h>\n+\n+svfloat32x2_t\n+foo (svfloat32_t x, svfloat32_t y)\n+{\n+  svfloat32x2_t res = svundef2_f32 ();\n+  res = svset2 (res, 0, x);\n+  res = svset2 (res, 1, y);\n+  return res;\n+}"}]}