{"sha": "0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMxZWJhMWE2YTk1YjMzOWIxNmNmY2ViMmQxMGY4ZDA1YWVhOWZjNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-21T20:04:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-27T09:19:30Z"}, "message": "[Ada] Remove Digits_From_Size and Width_From_Size\n\ngcc/ada/\n\n\t* ada_get_targ.adb (Digits_From_Size): Delete.\n\t(Width_From_Size): Likewise.\n\t* get_targ.adb (Digits_From_Size): Likewise.\n\t(Width_From_Size): Likewise.\n\t* get_targ.ads (Digits_From_Size): Likewise.\n\t(Width_From_Size): Likewise.\n\t* ttypes.ads: Remove with clause for Get_Targ.\n\t(Standard_Short_Short_Integer_Width): Delete.\n\t(Standard_Short_Integer_Width): Likewise.\n\t(Standard_Integer_Width): Likewise.\n\t(Standard_Long_Integer_Width): Likewise.\n\t(Standard_Long_Long_Integer_Width): Likewise.\n\t(Standard_Long_Long_Long_Integer_Width): Likewise.\n\t(Standard_Short_Float_Digits): Likewise.\n\t(Standard_Float_Digits): Likewise.\n\t(Standard_Long_Float_Digits): Likewise.\n\t(Standard_Long_Long_Float_Digits): Likewise.\n\t* gnat1drv.adb (Adjust_Global_Switches): Adjust.", "tree": {"sha": "fbdeafc8226b709ffedcb823312592abe3d3767e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbdeafc8226b709ffedcb823312592abe3d3767e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b36ec51873ba05c1ac3d5e568f400dd5f59d2cb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36ec51873ba05c1ac3d5e568f400dd5f59d2cb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36ec51873ba05c1ac3d5e568f400dd5f59d2cb9"}], "stats": {"total": 101, "additions": 0, "deletions": 101}, "files": [{"sha": "123ba4ecd63b0256a9e74a5a1bdabbd26ee76b69", "filename": "gcc/ada/ada_get_targ.adb", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fada_get_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fada_get_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada_get_targ.adb?ref=0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "patch": "@@ -208,22 +208,6 @@ package body Get_Targ is\n       return 0;\n    end Get_Double_Scalar_Alignment;\n \n-   ----------------------\n-   -- Digits_From_Size --\n-   ----------------------\n-\n-   function Digits_From_Size (Size : Pos) return Pos is\n-   begin\n-      case Size is\n-         when  32    => return  6;\n-         when  48    => return  9;\n-         when  64    => return 15;\n-         when  96    => return 18;\n-         when 128    => return 18;\n-         when others => raise Program_Error;\n-      end case;\n-   end Digits_From_Size;\n-\n    -----------------------------\n    -- Get_Max_Unaligned_Field --\n    -----------------------------\n@@ -260,22 +244,6 @@ package body Get_Targ is\n          Alignment => 64);\n    end Register_Back_End_Types;\n \n-   ---------------------\n-   -- Width_From_Size --\n-   ---------------------\n-\n-   function Width_From_Size (Size : Pos) return Pos is\n-   begin\n-      case Size is\n-         when   8    => return  4;\n-         when  16    => return  6;\n-         when  32    => return 11;\n-         when  64    => return 21;\n-         when 128    => return 40;\n-         when others => raise Program_Error;\n-      end case;\n-   end Width_From_Size;\n-\n    ------------------------------\n    -- Get_Back_End_Config_File --\n    ------------------------------"}, {"sha": "881c06c89561fd31242107ce96d9182e9179eebd", "filename": "gcc/ada/get_targ.adb", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fget_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fget_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.adb?ref=0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "patch": "@@ -278,22 +278,6 @@ package body Get_Targ is\n       return null;\n    end Get_Back_End_Config_File;\n \n-   ----------------------\n-   -- Digits_From_Size --\n-   ----------------------\n-\n-   function Digits_From_Size (Size : Pos) return Pos is\n-   begin\n-      case Size is\n-         when  32    => return  6;\n-         when  48    => return  9;\n-         when  64    => return 15;\n-         when  96    => return 18;\n-         when 128    => return 18;\n-         when others => raise Program_Error;\n-      end case;\n-   end Digits_From_Size;\n-\n    -----------------------------\n    -- Get_Max_Unaligned_Field --\n    -----------------------------\n@@ -314,20 +298,4 @@ package body Get_Targ is\n       Enumerate_Modes (Call_Back);\n    end Register_Back_End_Types;\n \n-   ---------------------\n-   -- Width_From_Size --\n-   ---------------------\n-\n-   function Width_From_Size (Size : Pos) return Pos is\n-   begin\n-      case Size is\n-         when   8    => return  4;\n-         when  16    => return  6;\n-         when  32    => return 11;\n-         when  64    => return 21;\n-         when 128    => return 40;\n-         when others => raise Program_Error;\n-      end case;\n-   end Width_From_Size;\n-\n end Get_Targ;"}, {"sha": "5315292974e08248ee6211eb58f1c707191dc6e2", "filename": "gcc/ada/get_targ.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fget_targ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fget_targ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.ads?ref=0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "patch": "@@ -115,10 +115,6 @@ package Get_Targ is\n    --  Returns the maximum supported size in bits for a field that is\n    --  not aligned on a storage unit boundary.\n \n-   function Width_From_Size  (Size : Pos) return Pos;\n-   function Digits_From_Size (Size : Pos) return Pos;\n-   --  Calculate values for 'Width or 'Digits from 'Size\n-\n    type C_String is array (0 .. 255) of aliased Character;\n    pragma Convention (C, C_String);\n "}, {"sha": "65da307af6b16dd451733bb125c580ea9a4c5c4f", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "patch": "@@ -813,8 +813,6 @@ procedure Gnat1drv is\n \n          Ttypes.Standard_Long_Long_Long_Integer_Size :=\n            Ttypes.Standard_Long_Long_Integer_Size;\n-         Ttypes.Standard_Long_Long_Long_Integer_Width :=\n-           Ttypes.Standard_Long_Long_Integer_Width;\n          Ttypes.System_Max_Integer_Size :=\n            Ttypes.Standard_Long_Long_Integer_Size;\n          Ttypes.System_Max_Binary_Modulus_Power :="}, {"sha": "46f96987889dc1218ab17453f1edfe72aa9dbe83", "filename": "gcc/ada/ttypes.ads", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fttypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4/gcc%2Fada%2Fttypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fttypes.ads?ref=0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "patch": "@@ -26,7 +26,6 @@\n --  This package contains constants describing target properties\n \n with Types;    use Types;\n-with Get_Targ;\n with Set_Targ;\n \n package Ttypes is\n@@ -102,63 +101,33 @@ package Ttypes is\n \n    Standard_Short_Short_Integer_Size  : constant Pos :=\n                                           Set_Targ.Char_Size;\n-   Standard_Short_Short_Integer_Width : constant Pos :=\n-                                          Get_Targ.Width_From_Size\n-                                           (Standard_Short_Short_Integer_Size);\n \n    Standard_Short_Integer_Size        : constant Pos :=\n                                           Set_Targ.Short_Size;\n-   Standard_Short_Integer_Width       : constant Pos :=\n-                                          Get_Targ.Width_From_Size\n-                                            (Standard_Short_Integer_Size);\n \n    Standard_Integer_Size              : constant Pos :=\n                                           Set_Targ.Int_Size;\n-   Standard_Integer_Width             : constant Pos :=\n-                                          Get_Targ.Width_From_Size\n-                                            (Standard_Integer_Size);\n \n    Standard_Long_Integer_Size         : constant Pos :=\n                                           Set_Targ.Long_Size;\n-   Standard_Long_Integer_Width        : constant Pos :=\n-                                          Get_Targ.Width_From_Size\n-                                            (Standard_Long_Integer_Size);\n \n    Standard_Long_Long_Integer_Size    : constant Pos :=\n                                           Set_Targ.Long_Long_Size;\n-   Standard_Long_Long_Integer_Width   : constant Pos :=\n-                                          Get_Targ.Width_From_Size\n-                                            (Standard_Long_Long_Integer_Size);\n \n    Standard_Long_Long_Long_Integer_Size : Pos :=\n                                             Set_Targ.Long_Long_Long_Size;\n-   Standard_Long_Long_Long_Integer_Width : Pos :=\n-                                      Get_Targ.Width_From_Size\n-                                        (Standard_Long_Long_Long_Integer_Size);\n \n    Standard_Short_Float_Size          : constant Pos :=\n                                           Set_Targ.Float_Size;\n-   Standard_Short_Float_Digits        : constant Pos :=\n-                                          Get_Targ.Digits_From_Size\n-                                            (Standard_Short_Float_Size);\n \n    Standard_Float_Size                : constant Pos :=\n                                           Set_Targ.Float_Size;\n-   Standard_Float_Digits              : constant Pos :=\n-                                          Get_Targ.Digits_From_Size\n-                                            (Standard_Float_Size);\n \n    Standard_Long_Float_Size           : constant Pos :=\n                                           Set_Targ.Double_Size;\n-   Standard_Long_Float_Digits         : constant Pos :=\n-                                          Get_Targ.Digits_From_Size\n-                                            (Standard_Long_Float_Size);\n \n    Standard_Long_Long_Float_Size      : constant Pos :=\n                                           Set_Targ.Long_Double_Size;\n-   Standard_Long_Long_Float_Digits    : constant Pos :=\n-                                          Get_Targ.Digits_From_Size\n-                                            (Standard_Long_Long_Float_Size);\n \n    Standard_Character_Size            : constant Pos := Set_Targ.Char_Size;\n "}]}