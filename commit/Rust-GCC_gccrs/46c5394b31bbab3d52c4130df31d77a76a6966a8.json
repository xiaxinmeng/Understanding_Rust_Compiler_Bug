{"sha": "46c5394b31bbab3d52c4130df31d77a76a6966a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZjNTM5NGIzMWJiYWIzZDUyYzQxMzBkZjMxZDc3YTc2YTY5NjZhOA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-08-29T00:12:19Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-08-29T00:12:19Z"}, "message": "re PR middle-end/22455 (ICE tree check: expected function_decl, have type_decl in fold_checksum_tree, at fold-const.c:10282)\n\n2005-08-28  Daniel Berlin  <dberlin@dberlin.org>\n\n\tFix PR middle-end/22455\n\n\t* fold-const.c (fold_checksum_tree): Adjust for now-largest tree size.\n\tChecksum only the parts of the tree that exist for the tree code.\n\nFrom-SVN: r103586", "tree": {"sha": "85543977e6e7417ba0bc531bce5572d18ec390ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85543977e6e7417ba0bc531bce5572d18ec390ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46c5394b31bbab3d52c4130df31d77a76a6966a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c5394b31bbab3d52c4130df31d77a76a6966a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46c5394b31bbab3d52c4130df31d77a76a6966a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46c5394b31bbab3d52c4130df31d77a76a6966a8/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea407814d021c256717eba35c08c960923b02ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea407814d021c256717eba35c08c960923b02ec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea407814d021c256717eba35c08c960923b02ec1"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "b2297dd2981f3cbbda0b40fca44a2c8d25cbd806", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46c5394b31bbab3d52c4130df31d77a76a6966a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46c5394b31bbab3d52c4130df31d77a76a6966a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46c5394b31bbab3d52c4130df31d77a76a6966a8", "patch": "@@ -1,3 +1,10 @@\n+2005-08-28  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tFix PR middle-end/22455\n+\n+\t* fold-const.c (fold_checksum_tree): Adjust for now-largest tree size.\n+\tChecksum only the parts of the tree that exist for the tree code.\n+\n 2005-08-28  Dale Johannesen  <dalej@apple.com>\n \n \t* config/i386/i386.c (nocona_cost):  Increase MOVE_RATIO."}, {"sha": "2f024b42e02eedd477513007e98122b86ef2fdcd", "filename": "gcc/fold-const.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46c5394b31bbab3d52c4130df31d77a76a6966a8/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46c5394b31bbab3d52c4130df31d77a76a6966a8/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=46c5394b31bbab3d52c4130df31d77a76a6966a8", "patch": "@@ -10277,14 +10277,14 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n {\n   void **slot;\n   enum tree_code code;\n-  char buf[sizeof (struct tree_decl_non_common)];\n+  char buf[sizeof (struct tree_function_decl)];\n   int i, len;\n   \n recursive_label:\n \n   gcc_assert ((sizeof (struct tree_exp) + 5 * sizeof (tree)\n-\t       <= sizeof (struct tree_decl_non_common))\n-\t      && sizeof (struct tree_type) <= sizeof (struct tree_decl_non_common));\n+\t       <= sizeof (struct tree_function_decl))\n+\t      && sizeof (struct tree_type) <= sizeof (struct tree_function_decl));\n   if (expr == NULL)\n     return;\n   slot = htab_find_slot (ht, expr, INSERT);\n@@ -10375,13 +10375,18 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n       fold_checksum_tree (DECL_SIZE_UNIT (expr), ctx, ht);\n       fold_checksum_tree (DECL_NAME (expr), ctx, ht);\n       fold_checksum_tree (DECL_CONTEXT (expr), ctx, ht);\n-      fold_checksum_tree (DECL_ARGUMENTS (expr), ctx, ht);\n-      fold_checksum_tree (DECL_RESULT_FLD (expr), ctx, ht);\n       fold_checksum_tree (DECL_INITIAL (expr), ctx, ht);\n       fold_checksum_tree (DECL_ABSTRACT_ORIGIN (expr), ctx, ht);\n-      fold_checksum_tree (DECL_SECTION_NAME (expr), ctx, ht);\n       fold_checksum_tree (DECL_ATTRIBUTES (expr), ctx, ht);\n-      fold_checksum_tree (DECL_VINDEX (expr), ctx, ht);\n+      if (CODE_CONTAINS_STRUCT (TREE_CODE (expr), TS_DECL_WITH_VIS))\n+\tfold_checksum_tree (DECL_SECTION_NAME (expr), ctx, ht);\n+\t  \n+      if (CODE_CONTAINS_STRUCT (TREE_CODE (expr), TS_DECL_NON_COMMON))\n+\t{\n+\t  fold_checksum_tree (DECL_VINDEX (expr), ctx, ht);\n+\t  fold_checksum_tree (DECL_RESULT_FLD (expr), ctx, ht);\n+\t  fold_checksum_tree (DECL_ARGUMENT_FLD (expr), ctx, ht);\n+\t}\n       break;\n     case tcc_type:\n       if (TREE_CODE (expr) == ENUMERAL_TYPE)"}]}