{"sha": "87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdlNmQ5ZGNhYTJkMzkxMDViYjBjMmI2MjFmOTM2N2JiYjg3NmYxNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-12-10T10:55:56Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-12-10T10:55:56Z"}, "message": "re PR fortran/46540 (libquadmath: Implement --disable-libquadmath)\n\n/\n2010-12-10  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46540\n        * configure.ac: Add --disable-libquadmath and\n        --disable-libquadmath-support.\n        * configure: Regenerate.\ngcc/\n2010-12-10  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46540\n        * configure.ac: Handle --disable-libquadmath-support.\n        * doc/install.texi: Document --disable-libquadmath and\n        --disable-libquadmath-support\n        * configure: Regenerate.\n        * config.in: Regenerate.\n\ngcc/fortran/\n2010-12-10  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46540\n        * trans-types.c (gfc_init_kinds): Handle\n        --disable-libquadmath-support.\n\nlibgfortran/\n2010-12-10  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46540\n        * acinclude.m4 (LIBGFOR_CHECK_FLOAT128): Honour\n        --disable-libquadmath-support.\n        * configure.ac: Handle --disable-libquadmath-support.\n        * configure: Regenerate.\n\nFrom-SVN: r167684", "tree": {"sha": "d66780c984863222ce5b67c1ba03366bc24ce7f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d66780c984863222ce5b67c1ba03366bc24ce7f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "082b966fdc1d7f2514b040411f0c1ee6515b8348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/082b966fdc1d7f2514b040411f0c1ee6515b8348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/082b966fdc1d7f2514b040411f0c1ee6515b8348"}], "stats": {"total": 207, "additions": 191, "deletions": 16}, "files": [{"sha": "20bab17fbab5a66bb307d2c66b10aabab61e61ad", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -1,3 +1,10 @@\n+2010-12-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46540\n+\t* configure.ac: Add --disable-libquadmath and\n+\t--disable-libquadmath-support.\n+\t* configure: Regenerate.\n+\n 2010-12-03  Ian Lance Taylor  <iant@google.com>\n \n \t* MAINTAINERS: Add myself as libgo maintainer."}, {"sha": "4280d9778dae8b2b8efcd57daa8ffd76e62be491", "filename": "configure", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -742,6 +742,8 @@ enable_option_checking\n with_build_libsubdir\n enable_gold\n enable_ld\n+enable_libquadmath\n+enable_libquadmath_support\n enable_libada\n enable_libssp\n enable_build_with_cxx\n@@ -1453,6 +1455,9 @@ Optional Features:\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-gold[=ARG]     build gold [ARG={default,yes,no}]\n   --enable-ld[=ARG]     build ld [ARG={default,yes,no}]\n+  --disable-libquadmath   do not build libquadmath directory\n+  --disable-libquadmath-support\n+                          disable libquadmath support for Fortran\n   --enable-libada         build libada directory\n   --enable-libssp         build libssp directory\n   --enable-build-with-cxx build with C++ compiler instead of C compiler\n@@ -2992,6 +2997,31 @@ case \"${host}\" in\n esac\n \n \n+# Check whether --enable-libquadmath was given.\n+if test \"${enable_libquadmath+set}\" = set; then :\n+  enableval=$enable_libquadmath; ENABLE_LIBQUADMATH=$enableval\n+else\n+  ENABLE_LIBQUADMATH=yes\n+fi\n+\n+if test \"${ENABLE_LIBQUADMATH}\" = \"no\" ; then\n+  noconfigdirs=\"$noconfigdirs target-libquadmath\"\n+fi\n+\n+\n+# Check whether --enable-libquadmath-support was given.\n+if test \"${enable_libquadmath_support+set}\" = set; then :\n+  enableval=$enable_libquadmath_support; ENABLE_LIBQUADMATH_SUPPORT=$enableval\n+else\n+  ENABLE_LIBQUADMATH_SUPPORT=yes\n+fi\n+\n+enable_libquadmath_support=\n+if test \"${ENABLE_LIBQUADMATH_SUPPORT}\" = \"no\" ; then\n+  enable_libquadmath_support=no\n+fi\n+\n+\n # Check whether --enable-libada was given.\n if test \"${enable_libada+set}\" = set; then :\n   enableval=$enable_libada; ENABLE_LIBADA=$enableval"}, {"sha": "03f15dfa8a5817643c6dd979b2ce9359be0c7347", "filename": "configure.ac", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -458,6 +458,27 @@ case \"${host}\" in\n esac\n \n \n+AC_ARG_ENABLE(libquadmath,\n+AS_HELP_STRING([--disable-libquadmath],\n+  [do not build libquadmath directory]),\n+ENABLE_LIBQUADMATH=$enableval,\n+ENABLE_LIBQUADMATH=yes)\n+if test \"${ENABLE_LIBQUADMATH}\" = \"no\" ; then\n+  noconfigdirs=\"$noconfigdirs target-libquadmath\"\n+fi\n+\n+\n+AC_ARG_ENABLE(libquadmath-support,\n+AS_HELP_STRING([--disable-libquadmath-support],\n+  [disable libquadmath support for Fortran]),\n+ENABLE_LIBQUADMATH_SUPPORT=$enableval,\n+ENABLE_LIBQUADMATH_SUPPORT=yes)\n+enable_libquadmath_support=\n+if test \"${ENABLE_LIBQUADMATH_SUPPORT}\" = \"no\" ; then\n+  enable_libquadmath_support=no\n+fi\n+\n+\n AC_ARG_ENABLE(libada,\n [  --enable-libada         build libada directory],\n ENABLE_LIBADA=$enableval,"}, {"sha": "fb6bbc816481b4d3809dbe6eb40ab91203a12aa5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -1,3 +1,12 @@\n+2010-12-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46540\n+\t* configure.ac: Handle --disable-libquadmath-support.\n+\t* doc/install.texi: Document --disable-libquadmath and\n+\t--disable-libquadmath-support\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n 2010-12-10  Jack Howarth  <howarth@bromo.med.uc.edu>\n \t    Iain Sandoe  <iains@gcc.gnu.org>\n "}, {"sha": "fff7f4d22b1fc1f77432aefb52e32d9f2983f432", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -119,6 +119,12 @@\n #endif\n \n \n+/* Define to 1 to enable libquadmath support */\n+#ifndef USED_FOR_TARGET\n+#undef ENABLE_LIBQUADMATH_SUPPORT\n+#endif\n+\n+\n /* Define to enable LTO support. */\n #ifndef USED_FOR_TARGET\n #undef ENABLE_LTO"}, {"sha": "9d76b4197f71c996d440ff9dd67bd5662e18eef8", "filename": "gcc/configure", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -912,6 +912,7 @@ enable_maintainer_mode\n enable_version_specific_runtime_libs\n with_slibdir\n enable_plugin\n+enable_libquadmath_support\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1610,8 +1611,9 @@ Optional Features:\n                           enable the use of the @gnu_indirect_function to\n                           glibc systems\n   --enable-comdat         enable COMDAT group support\n-  --enable-gnu-unique-object\tenable the use of the @gnu_unique_object ELF extension on\n-\t\t\t\tglibc systems\n+  --enable-gnu-unique-object\n+                          enable the use of the @gnu_unique_object ELF\n+                          extension on glibc systems\n   --enable-linker-build-id\n                           compiler will always pass --build-id to linker\n   --enable-maintainer-mode\n@@ -1621,6 +1623,8 @@ Optional Features:\n                           specify that runtime libraries should be\n                           installed in a compiler-specific directory\n   --enable-plugin         enable plugin support\n+  --disable-libquadmath-support\n+                          disable libquadmath support for Fortran\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -17509,7 +17513,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17512 \"configure\"\n+#line 17516 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17615,7 +17619,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17618 \"configure\"\n+#line 17622 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -26289,6 +26293,21 @@ $as_echo \"#define ENABLE_PLUGIN 1\" >>confdefs.h\n \n fi\n \n+\n+# Check whether --enable-libquadmath-support was given.\n+if test \"${enable_libquadmath_support+set}\" = set; then :\n+  enableval=$enable_libquadmath_support; ENABLE_LIBQUADMATH_SUPPORT=$enableval\n+else\n+  ENABLE_LIBQUADMATH_SUPPORT=yes\n+fi\n+\n+if test \"${ENABLE_LIBQUADMATH_SUPPORT}\" != \"no\" ; then\n+\n+$as_echo \"#define ENABLE_LIBQUADMATH_SUPPORT 1\" >>confdefs.h\n+\n+fi\n+\n+\n # Configure the subdirectories\n # AC_CONFIG_SUBDIRS($subdirs)\n "}, {"sha": "166500e3110ca1ca86af1068c357047f6859d2fd", "filename": "gcc/configure.ac", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -3873,8 +3873,8 @@ gcc_GAS_CHECK_FEATURE([.lcomm with alignment], gcc_cv_as_lcomm_with_alignment,\n   [Define if your assembler supports .lcomm with an alignment field.])])\n \n AC_ARG_ENABLE(gnu-unique-object,\n- [  --enable-gnu-unique-object\tenable the use of the @gnu_unique_object ELF extension on\n-\t\t\t\tglibc systems],\n+ [AS_HELP_STRING([--enable-gnu-unique-object],\n+   [enable the use of the @gnu_unique_object ELF extension on glibc systems])],\n  [case $enable_gnu_unique_object in\n     yes | no) ;;\n     *) AC_MSG_ERROR(['$enable_gnu_unique_object' is an invalid value for --enable-gnu-unique-object.\n@@ -4781,6 +4781,18 @@ if test x\"$enable_plugin\" = x\"yes\"; then\n   AC_DEFINE(ENABLE_PLUGIN, 1, [Define to enable plugin support.])\n fi\n \n+\n+AC_ARG_ENABLE(libquadmath-support,\n+[AS_HELP_STRING([--disable-libquadmath-support],\n+  [disable libquadmath support for Fortran])],\n+ENABLE_LIBQUADMATH_SUPPORT=$enableval,\n+ENABLE_LIBQUADMATH_SUPPORT=yes)\n+if test \"${ENABLE_LIBQUADMATH_SUPPORT}\" != \"no\" ; then\n+  AC_DEFINE(ENABLE_LIBQUADMATH_SUPPORT, 1,\n+            [Define to 1 to enable libquadmath support])\n+fi\n+\n+\n # Configure the subdirectories\n # AC_CONFIG_SUBDIRS($subdirs)\n "}, {"sha": "17021c268e1f4ef571135ab1ea11d96ad2f498df", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -1337,6 +1337,16 @@ do a @samp{make -C gcc gnatlib_and_tools}.\n Specify that the run-time libraries for stack smashing protection\n should not be built.\n \n+@item --disable-libquadmath\n+Specify that the GCC quad-precision math library should not be built.\n+On some systems, the library is required to be linkable when building\n+the Fortran front end, unless @option{--disable-libquadmath-support}\n+is used.\n+\n+@item --disable-libquadmath-support\n+Specify that the Fortran front end and @code{libgfortran} do not add\n+support for @code{libquadmath} on systems supporting it.\n+\n @item --disable-libgomp\n Specify that the run-time libraries used by GOMP should not be built.\n "}, {"sha": "b2ddec020c76d4a35358091a3f4474df6c9c800c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -1,3 +1,9 @@\n+2010-12-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46540\n+\t* trans-types.c (gfc_init_kinds): Handle\n+\t--disable-libquadmath-support.\n+\n 2010-12-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* check.c (gfc_check_sngl): Insert missing space in error message."}, {"sha": "561261fd972474dd486a1991171c304206bcc949", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -415,12 +415,11 @@ gfc_init_kinds (void)\n \n       /* Only let float, double, long double and __float128 go through.\n \t Runtime support for others is not provided, so they would be\n-\t useless.  TODO: TFmode support should be enabled once libgfortran\n-\t support is done.  */\n+\t useless.  */\n \tif (mode != TYPE_MODE (float_type_node)\n \t    && (mode != TYPE_MODE (double_type_node))\n \t    && (mode != TYPE_MODE (long_double_type_node))\n-#ifdef LIBGCC2_HAS_TF_MODE\n+#if defined(LIBGCC2_HAS_TF_MODE) && defined(ENABLE_LIBQUADMATH_SUPPORT)\n \t    && (mode != TFmode)\n #endif\n \t   )"}, {"sha": "4b8b486032fa26255a8570b39be4ce6a6cc5dc10", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -1,3 +1,11 @@\n+2010-12-10  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46540\n+\t* acinclude.m4 (LIBGFOR_CHECK_FLOAT128): Honour\n+\t--disable-libquadmath-support.\n+\t* configure.ac: Handle --disable-libquadmath-support.\n+\t* configure: Regenerate.\n+\n 2010-12-06  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \tPR target/40125"}, {"sha": "9873d9f23924fe48ceb6a4012e035d7ebe71d05f", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -279,6 +279,9 @@ esac])\n dnl Check whether we have a __float128 type\n AC_DEFUN([LIBGFOR_CHECK_FLOAT128], [\n   LIBQUADSPEC=\n+\n+  if test \"x$enable_libquadmath_support\" != xno; then\n+\n   AC_CACHE_CHECK([whether we have a usable __float128 type],\n                  libgfor_cv_have_float128, [\n     AC_TRY_LINK([\n@@ -341,6 +344,12 @@ AC_DEFUN([LIBGFOR_CHECK_FLOAT128], [\n       LIBQUADINCLUDE=\n     fi\n   fi\n+  else\n+    # for --disable-quadmath\n+    LIBQUADLIB=\n+    LIBQUADLIB_DEP=\n+    LIBQUADINCLUDE=\n+  fi\n \n   dnl For the spec file\n   AC_SUBST(LIBQUADSPEC)"}, {"sha": "b8f0a7174a9ebfdfc11b2c219762f368bf6011a8", "filename": "libgfortran/configure", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -764,6 +764,7 @@ enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n enable_largefile\n+enable_libquadmath_support\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1394,7 +1395,9 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory\n+  --enable-version-specific-runtime-libs\n+                          specify that runtime libraries should be installed\n+                          in a compiler-specific directory\n   --enable-intermodule    build the library in one step\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n@@ -1407,6 +1410,8 @@ Optional Features:\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --disable-largefile     omit support for large files\n+  --disable-libquadmath-support\n+                          disable libquadmath support for Fortran\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11373,7 +11378,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11376 \"configure\"\n+#line 11381 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11479,7 +11484,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11482 \"configure\"\n+#line 11487 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -24319,9 +24324,25 @@ $as_echo \"#define HAVE_BROKEN_POWF 1\" >>confdefs.h\n   fi\n \n \n-# Check whether we have a __float128 type\n+# Check whether libquadmath should be used\n+# Check whether --enable-libquadmath-support was given.\n+if test \"${enable_libquadmath_support+set}\" = set; then :\n+  enableval=$enable_libquadmath_support; ENABLE_LIBQUADMATH_SUPPORT=$enableval\n+else\n+  ENABLE_LIBQUADMATH_SUPPORT=yes\n+fi\n+\n+enable_libquadmath_support=\n+if test \"${ENABLE_LIBQUADMATH_SUPPORT}\" = \"no\" ; then\n+  enable_libquadmath_support=no\n+fi\n+\n+# Check whether we have a __float128 type, depends on enable_libquadmath_support\n \n   LIBQUADSPEC=\n+\n+  if test \"x$enable_libquadmath_support\" != xno; then\n+\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we have a usable __float128 type\" >&5\n $as_echo_n \"checking whether we have a usable __float128 type... \" >&6; }\n if test \"${libgfor_cv_have_float128+set}\" = set; then :\n@@ -24428,6 +24449,12 @@ $as_echo \"$libgfor_cv_have_as_needed\" >&6; }\n       LIBQUADINCLUDE=\n     fi\n   fi\n+  else\n+    # for --disable-quadmath\n+    LIBQUADLIB=\n+    LIBQUADLIB_DEP=\n+    LIBQUADINCLUDE=\n+  fi\n \n \n "}, {"sha": "7b28f12743395f347864ea1451b37c29fb04ccbd", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e6d9dcaa2d39105bb0c2b621f9367bbb876f14/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=87e6d9dcaa2d39105bb0c2b621f9367bbb876f14", "patch": "@@ -12,7 +12,8 @@ GCC_TOPLEV_SUBDIRS\n \n AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n AC_ARG_ENABLE(version-specific-runtime-libs,\n-[  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory ],\n+AS_HELP_STRING([--enable-version-specific-runtime-libs],\n+  [specify that runtime libraries should be installed in a compiler-specific directory]),\n [case \"$enableval\" in\n  yes) version_specific_libs=yes ;;\n  no)  version_specific_libs=no ;;\n@@ -24,7 +25,7 @@ AC_MSG_RESULT($version_specific_libs)\n # Build with intermodule optimisations\n AC_MSG_CHECKING([for --enable-intermodule])\n AC_ARG_ENABLE(intermodule,\n-[  --enable-intermodule    build the library in one step],\n+AS_HELP_STRING([--enable-intermodule],[build the library in one step]),\n [case \"$enable_intermodule\" in\n   yes) onestep=\"-onestep\";;\n     *) onestep=\"\";;\n@@ -463,7 +464,18 @@ LIBGFOR_CHECK_MINGW_SNPRINTF\n # Check for a broken powf implementation\n LIBGFOR_CHECK_FOR_BROKEN_POWF\n \n-# Check whether we have a __float128 type\n+# Check whether libquadmath should be used\n+AC_ARG_ENABLE(libquadmath-support,\n+AS_HELP_STRING([--disable-libquadmath-support],\n+  [disable libquadmath support for Fortran]),\n+ENABLE_LIBQUADMATH_SUPPORT=$enableval,\n+ENABLE_LIBQUADMATH_SUPPORT=yes)\n+enable_libquadmath_support=\n+if test \"${ENABLE_LIBQUADMATH_SUPPORT}\" = \"no\" ; then\n+  enable_libquadmath_support=no\n+fi\n+\n+# Check whether we have a __float128 type, depends on enable_libquadmath_support\n LIBGFOR_CHECK_FLOAT128\n \n # Check for GNU libc feenableexcept"}]}