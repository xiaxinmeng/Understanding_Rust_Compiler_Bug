{"sha": "da073ad52c454230d3f9fead07270bc2b3d1f0ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEwNzNhZDUyYzQ1NDIzMGQzZjlmZWFkMDcyNzBiYzJiM2QxZjBhZA==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-03-17T06:43:45Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-03-18T10:03:11Z"}, "message": "Fix last remaining Woverloaded-virtual\n\nAdd using clause for UnitRules.\n\nAdd -Werror=overloaded-virtual to avoid regressing on this warning.", "tree": {"sha": "4f4615dc6cb931b57f8fd4912df78e2cf9a389e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f4615dc6cb931b57f8fd4912df78e2cf9a389e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da073ad52c454230d3f9fead07270bc2b3d1f0ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da073ad52c454230d3f9fead07270bc2b3d1f0ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da073ad52c454230d3f9fead07270bc2b3d1f0ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da073ad52c454230d3f9fead07270bc2b3d1f0ad/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f361bd362bc57cd6a1c12fb8fc259ec22c9d945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f361bd362bc57cd6a1c12fb8fc259ec22c9d945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f361bd362bc57cd6a1c12fb8fc259ec22c9d945"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6e5407b213d25835a3879c7a28969267af4cbe5f", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da073ad52c454230d3f9fead07270bc2b3d1f0ad/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da073ad52c454230d3f9fead07270bc2b3d1f0ad/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=da073ad52c454230d3f9fead07270bc2b3d1f0ad", "patch": "@@ -242,7 +242,7 @@ CFLAGS-rust/rust-parse.o += $(RUST_INCLUDES)\n CFLAGS-rust/rust-session-manager.o += $(RUST_INCLUDES)\n \n # TODO: possibly find a way to ensure C++11 compilation level here?\n-RUST_CXXFLAGS = -std=c++11 -Wno-unused-parameter\n+RUST_CXXFLAGS = -std=c++11 -Wno-unused-parameter -Werror=overloaded-virtual\n \n # build all rust/lex files in rust folder, add cross-folder includes\n rust/%.o: rust/lex/%.cc"}, {"sha": "d41c3a975dad901956e4b6a32b7c769819b34a82", "filename": "gcc/rust/typecheck/rust-tyty-rules.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da073ad52c454230d3f9fead07270bc2b3d1f0ad/gcc%2Frust%2Ftypecheck%2Frust-tyty-rules.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da073ad52c454230d3f9fead07270bc2b3d1f0ad/gcc%2Frust%2Ftypecheck%2Frust-tyty-rules.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-rules.h?ref=da073ad52c454230d3f9fead07270bc2b3d1f0ad", "patch": "@@ -497,6 +497,8 @@ class InferRules : public BaseRules\n \n class UnitRules : public BaseRules\n {\n+  using Rust::TyTy::BaseRules::visit;\n+\n public:\n   UnitRules (UnitType *base) : BaseRules (base), base (base) {}\n "}]}