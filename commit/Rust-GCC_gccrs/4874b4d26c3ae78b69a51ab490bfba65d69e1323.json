{"sha": "4874b4d26c3ae78b69a51ab490bfba65d69e1323", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3NGI0ZDI2YzNhZTc4YjY5YTUxYWI0OTBiZmJhNjVkNjllMTMyMw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-12-08T18:09:05Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-12-08T18:09:05Z"}, "message": "re PR fortran/88357 (ICE in parse_associate, at fortran/parse.c:4568)\n\n2018-12-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/88357\n\t* class.c (insert_component_ref): Check for NULL pointer and \n\tprevious error message issued.\n\t* parse.c (parse_associate): Check for NULL pointer.\n\t* resolve.c (resolve_assoc_var): Check for NULL pointer.\n\n2018-12-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* gfortran.dg/pr88357_1.f90: New test.\n\t* gfortran.dg/pr88357_2.f90: New test.\n\nFrom-SVN: r266908", "tree": {"sha": "814a62bcd329a87fae9e3dad0f0e310a5bbba28b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/814a62bcd329a87fae9e3dad0f0e310a5bbba28b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4874b4d26c3ae78b69a51ab490bfba65d69e1323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4874b4d26c3ae78b69a51ab490bfba65d69e1323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4874b4d26c3ae78b69a51ab490bfba65d69e1323", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4874b4d26c3ae78b69a51ab490bfba65d69e1323/comments", "author": null, "committer": null, "parents": [{"sha": "47e1596cc1e877485483de1eca7b3eb4bd049cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e1596cc1e877485483de1eca7b3eb4bd049cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e1596cc1e877485483de1eca7b3eb4bd049cfb"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "8603e431f73fd2944d36ff3f8f0c2bd3cf12b7b7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4874b4d26c3ae78b69a51ab490bfba65d69e1323", "patch": "@@ -1,3 +1,11 @@\n+2018-12-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/88357\n+\t* class.c (insert_component_ref): Check for NULL pointer and \n+\tprevious error message issued.\n+\t* parse.c (parse_associate): Check for NULL pointer.\n+\t* resolve.c (resolve_assoc_var): Check for NULL pointer.\n+\n 2018-12-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/88377"}, {"sha": "105511d03ccc6b5d428ff52a62bffee8d220ae80", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=4874b4d26c3ae78b69a51ab490bfba65d69e1323", "patch": "@@ -72,14 +72,18 @@ along with GCC; see the file COPYING3.  If not see\n static void\n insert_component_ref (gfc_typespec *ts, gfc_ref **ref, const char * const name)\n {\n-  gfc_symbol *type_sym;\n   gfc_ref *new_ref;\n+  int wcnt, ecnt;\n \n   gcc_assert (ts->type == BT_DERIVED || ts->type == BT_CLASS);\n-  type_sym = ts->u.derived;\n \n-  gfc_find_component (type_sym, name, true, true, &new_ref);\n+  gfc_find_component (ts->u.derived, name, true, true, &new_ref);\n+\n+  gfc_get_errors (&wcnt, &ecnt);\n+  if (ecnt > 0 && !new_ref)\n+    return;\n   gcc_assert (new_ref->u.c.component);\n+\n   while (new_ref->next)\n     new_ref = new_ref->next;\n   new_ref->next = *ref;"}, {"sha": "7acd8cfa4fbbc311ebb87da4d12f77bcb4dbbacb", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=4874b4d26c3ae78b69a51ab490bfba65d69e1323", "patch": "@@ -4563,7 +4563,7 @@ parse_associate (void)\n \t  else\n \t    rank = a->target->rank;\n \t  /* When the rank is greater than zero then sym will be an array.  */\n-\t  if (sym->ts.type == BT_CLASS)\n+\t  if (sym->ts.type == BT_CLASS && CLASS_DATA (sym))\n \t    {\n \t      if ((!CLASS_DATA (sym)->as && rank != 0)\n \t\t  || (CLASS_DATA (sym)->as"}, {"sha": "35352c6757fc70364d16870d804a03958fa6e4e3", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=4874b4d26c3ae78b69a51ab490bfba65d69e1323", "patch": "@@ -8715,7 +8715,8 @@ resolve_assoc_var (gfc_symbol* sym, bool resolve_target)\n     {\n       /* target's rank is 0, but the type of the sym is still array valued,\n \t which has to be corrected.  */\n-      if (sym->ts.type == BT_CLASS && CLASS_DATA (sym)->as)\n+      if (sym->ts.type == BT_CLASS\n+\t  && CLASS_DATA (sym) && CLASS_DATA (sym)->as)\n \t{\n \t  gfc_array_spec *as;\n \t  symbol_attribute attr;"}, {"sha": "f4a7885e0af7117bda80bc84711dcae78acc0f2a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4874b4d26c3ae78b69a51ab490bfba65d69e1323", "patch": "@@ -1,3 +1,8 @@\n+2018-12-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/pr88357_1.f90: New test.\n+\t* gfortran.dg/pr88357_2.f90: New test.\n+\n 2018-12-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/88304"}, {"sha": "5cda86ece1777190fd6468977d8d4eb58351685d", "filename": "gcc/testsuite/gfortran.dg/pr88357_1.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88357_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88357_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88357_1.f90?ref=4874b4d26c3ae78b69a51ab490bfba65d69e1323", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+program p\n+   type t\n+   end type\n+   class(t) :: x[*]     ! { dg-error \"must be dummy, allocatable or pointer\" }\n+   associate (y => x)\n+   end associate\n+end"}, {"sha": "d89511b103a03badf99cb6e8ab30a0764b4d05fa", "filename": "gcc/testsuite/gfortran.dg/pr88357_2.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88357_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4874b4d26c3ae78b69a51ab490bfba65d69e1323/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88357_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88357_2.f90?ref=4874b4d26c3ae78b69a51ab490bfba65d69e1323", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+program p\n+   type t\n+   end type\n+   class(t) :: x     ! { dg-error \"must be dummy, allocatable or pointer\" }\n+   associate (y => x)\n+   end associate\n+end"}]}