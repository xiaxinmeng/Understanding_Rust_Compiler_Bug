{"sha": "70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBiMGRjY2UyOGY5OTNiMmQ2ZmNmNzg1MWJjOGFhZGM3YjYwYzM4ZA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-08-21T01:15:15Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-08-21T01:15:15Z"}, "message": "always define HAVE_peephole2\n\ngcc/ChangeLog:\n\n2015-08-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* genconfig.c (main): Always define HAVE_cc0.\n\t* recog.c (rest_of_handle_peephole2): Adjust.\n\nFrom-SVN: r227051", "tree": {"sha": "148ab7c7f4a32375fc7afc89ae7ea46b5927cd79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/148ab7c7f4a32375fc7afc89ae7ea46b5927cd79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d/comments", "author": null, "committer": null, "parents": [{"sha": "913b71f183a5e20aa8ad61534593053e096e405d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913b71f183a5e20aa8ad61534593053e096e405d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/913b71f183a5e20aa8ad61534593053e096e405d"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "294350144c8e88854de3a62b5b539f039168cdc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d", "patch": "@@ -1,3 +1,8 @@\n+2015-08-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* genconfig.c (main): Always define HAVE_cc0.\n+\t* recog.c (rest_of_handle_peephole2): Adjust.\n+\n 2015-08-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* reorg.c (relax_delay_slots): Don't use #if to check value of"}, {"sha": "fc3c1eb6fd94f9486374b6d341acb8104b3aaa50", "filename": "gcc/genconfig.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d", "patch": "@@ -372,6 +372,11 @@ main (int argc, char **argv)\n       printf (\"#define HAVE_peephole2 1\\n\");\n       printf (\"#define MAX_INSNS_PER_PEEP2 %d\\n\", max_insns_per_peep2);\n     }\n+  else\n+    {\n+      printf (\"#define HAVE_peephole2 0\\n\");\n+      printf (\"#define MAX_INSNS_PER_PEEP2 0\\n\");\n+    }\n \n   puts (\"\\n#endif /* GCC_INSN_CONFIG_H */\");\n "}, {"sha": "352aec2047ae271badf949e23de76b9bbd410f62", "filename": "gcc/recog.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=70b0dcce28f993b2d6fcf7851bc8aadc7b60c38d", "patch": "@@ -3018,7 +3018,6 @@ split_all_insns_noflow (void)\n   return 0;\n }\n \f\n-#ifdef HAVE_peephole2\n struct peep2_insn_data\n {\n   rtx_insn *insn;\n@@ -3651,7 +3650,6 @@ peephole2_optimize (void)\n   if (peep2_do_cleanup_cfg)\n     cleanup_cfg (CLEANUP_CFG_CHANGED);\n }\n-#endif /* HAVE_peephole2 */\n \n /* Common predicates for use with define_bypass.  */\n \n@@ -3804,9 +3802,9 @@ if_test_bypass_p (rtx_insn *out_insn, rtx_insn *in_insn)\n static unsigned int\n rest_of_handle_peephole2 (void)\n {\n-#ifdef HAVE_peephole2\n-  peephole2_optimize ();\n-#endif\n+  if (HAVE_peephole2)\n+    peephole2_optimize ();\n+\n   return 0;\n }\n "}]}