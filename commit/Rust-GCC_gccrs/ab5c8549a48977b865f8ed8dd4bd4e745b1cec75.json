{"sha": "ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI1Yzg1NDlhNDg5NzdiODY1ZjhlZDhkZDRiZDRlNzQ1YjFjZWM3NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-08-12T13:57:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-08-12T13:57:04Z"}, "message": "re PR c++/16276 ([3.4 only] G++ generates local references to linkonce sections)\n\n        PR c++/16276\n        * output.h (default_function_rodata_section,\n\tdefault_no_function_rodata_section): New prototypes.\n\t* target.h (struct gcc_target): Add asm_out.function_rodata_section.\n\t* target-def.h (TARGET_ASM_FUNCTION_RODATA_SECTION): Define.\n\t(TARGET_ASM_OUT): Add it.\n        * varasm.c (default_function_rodata_section,\n\tdefault_no_function_rodata_section): New functions.\n        * final.c (final_scan_insn): Call\n\ttargetm.asm_out.function_rodata_section instead of\n\treadonly_data_section.\n\t* config/darwin.h (TARGET_ASM_FUNCTION_RODATA_SECTION): Define.\n\t* config/mcore/mcore.c (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n\t* config/ip2k/ip2k.c (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n\t* config/rs6000/xcoff.h (TARGET_ASM_FUNCTION_RODATA_SECTION):\n\tLikewise.\n\t* config/alpha/alpha.c (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n\t* config/i386/cygming.h (TARGET_ASM_FUNCTION_RODATA_SECTION):\n\tLikewise.\n\t* config/i386/i386-interix.h (TARGET_ASM_FUNCTION_RODATA_SECTION):\n\tLikewise.\n\t* config/arm/pe.h (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n\t* config/avr/avr.c (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n\t* doc/tm.texi (TARGET_ASM_FUNCTION_RODATA_SECTION): Document.\n\n        * g++.old-deja/g++.other/comdat4.C: New test.\n        * g++.old-deja/g++.other/comdat4-aux.cc: New.\n\nFrom-SVN: r85873", "tree": {"sha": "fbf89966457df5bcdf83010b92f2c7a1407ea34b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbf89966457df5bcdf83010b92f2c7a1407ea34b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5cf58f28c3a5e69185d70935c5646e5705b16e32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf58f28c3a5e69185d70935c5646e5705b16e32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cf58f28c3a5e69185d70935c5646e5705b16e32"}], "stats": {"total": 215, "additions": 213, "deletions": 2}, "files": [{"sha": "4331d9a8b447a5764a1b60fcbdf9d352c216b7ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -1,3 +1,30 @@\n+2004-08-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/16276\n+\t* output.h (default_function_rodata_section,\n+\tdefault_no_function_rodata_section): New prototypes.\n+\t* target.h (struct gcc_target): Add asm_out.function_rodata_section.\n+\t* target-def.h (TARGET_ASM_FUNCTION_RODATA_SECTION): Define.\n+\t(TARGET_ASM_OUT): Add it.\n+\t* varasm.c (default_function_rodata_section,\n+\tdefault_no_function_rodata_section): New functions.\n+\t* final.c (final_scan_insn): Call\n+\ttargetm.asm_out.function_rodata_section instead of\n+\treadonly_data_section.\n+\t* config/darwin.h (TARGET_ASM_FUNCTION_RODATA_SECTION): Define.\n+\t* config/mcore/mcore.c (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n+\t* config/ip2k/ip2k.c (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n+\t* config/rs6000/xcoff.h (TARGET_ASM_FUNCTION_RODATA_SECTION):\n+\tLikewise.\n+\t* config/alpha/alpha.c (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n+\t* config/i386/cygming.h (TARGET_ASM_FUNCTION_RODATA_SECTION):\n+\tLikewise.\n+\t* config/i386/i386-interix.h (TARGET_ASM_FUNCTION_RODATA_SECTION):\n+\tLikewise.\n+\t* config/arm/pe.h (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n+\t* config/avr/avr.c (TARGET_ASM_FUNCTION_RODATA_SECTION): Likewise.\n+\t* doc/tm.texi (TARGET_ASM_FUNCTION_RODATA_SECTION): Document.\n+\n 2004-08-12  Paul Brook  <paul@codesourcery.com>\n \n \t* dwarf2out.h (dwarf2out_frame_finish): Conditionalize outputting eh"}, {"sha": "701d4cfe696f4429c0dc392959a65faf9f30f855", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -10086,6 +10086,8 @@ alpha_init_libfuncs (void)\n # define TARGET_SECTION_TYPE_FLAGS unicosmk_section_type_flags\n # undef TARGET_ASM_UNIQUE_SECTION\n # define TARGET_ASM_UNIQUE_SECTION unicosmk_unique_section\n+#undef TARGET_ASM_FUNCTION_RODATA_SECTION\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n # undef TARGET_ASM_GLOBALIZE_LABEL\n # define TARGET_ASM_GLOBALIZE_LABEL hook_void_FILEptr_constcharptr\n # undef TARGET_MUST_PASS_IN_STACK"}, {"sha": "aa78ff176c7afd1bc04eeddf26edb60880595709", "filename": "gcc/config/arm/pe.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Farm%2Fpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Farm%2Fpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.h?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -85,6 +85,7 @@\n #define MULTIPLE_SYMBOL_SPACES\n \n #define TARGET_ASM_UNIQUE_SECTION arm_pe_unique_section\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n \n #define SUPPORTS_ONE_ONLY 1\n "}, {"sha": "26d6fdb73fcc49620dcbd158bcd17a450518f2c1", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -233,6 +233,8 @@ int avr_case_values_threshold = 30000;\n #define TARGET_ATTRIBUTE_TABLE avr_attribute_table\n #undef TARGET_ASM_UNIQUE_SECTION\n #define TARGET_ASM_UNIQUE_SECTION avr_unique_section\n+#undef TARGET_ASM_FUNCTION_RODATA_SECTION\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n #undef TARGET_INSERT_ATTRIBUTES\n #define TARGET_INSERT_ATTRIBUTES avr_insert_attributes\n #undef TARGET_SECTION_TYPE_FLAGS"}, {"sha": "f7b75f8f64738fba3e86e4553ab48c50435cc8d4", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -758,7 +758,8 @@ objc_section_init (void)\t\t\t\\\n #define TARGET_ASM_SELECT_RTX_SECTION machopic_select_rtx_section\n #undef  TARGET_ASM_UNIQUE_SECTION\n #define TARGET_ASM_UNIQUE_SECTION darwin_unique_section\n-\n+#undef  TARGET_ASM_FUNCTION_RODATA_SECTION\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n \n \n #define ASM_DECLARE_UNRESOLVED_REFERENCE(FILE,NAME)\t\t\t\\"}, {"sha": "6b9c722f9e8a81c9a361e2730a7dad2f1c711c94", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -265,6 +265,7 @@ do {\t\t\t\t\t\t\t\\\n \n extern void i386_pe_unique_section (TREE, int);\n #define TARGET_ASM_UNIQUE_SECTION i386_pe_unique_section\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n \n #define SUPPORTS_ONE_ONLY 1\n "}, {"sha": "971f7cc7e4b1711e06c72f94f2f3e26538c93f12", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -345,6 +345,7 @@ while (0)\n \n extern void i386_pe_unique_section (tree, int);\n #define TARGET_ASM_UNIQUE_SECTION i386_pe_unique_section\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n \n #define SUPPORTS_ONE_ONLY 1\n #endif /* 0 */"}, {"sha": "4b58fe07e30f24fd12f08abb9684f02c6007aa73", "filename": "gcc/config/ip2k/ip2k.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fip2k%2Fip2k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fip2k%2Fip2k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.c?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -101,6 +101,9 @@ const struct attribute_spec ip2k_attribute_table[];\n #undef TARGET_ASM_UNIQUE_SECTION\n #define TARGET_ASM_UNIQUE_SECTION unique_section\n \n+#undef TARGET_ASM_FUNCTION_RODATA_SECTION\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n+\n #undef TARGET_ATTRIBUTE_TABLE\n #define TARGET_ATTRIBUTE_TABLE ip2k_attribute_table\n "}, {"sha": "327b9cd1fea2073060a08cc99e6e5838122dab0e", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -172,6 +172,8 @@ static bool       mcore_return_in_memory\t(tree, tree);\n #define TARGET_ATTRIBUTE_TABLE \t\tmcore_attribute_table\n #undef  TARGET_ASM_UNIQUE_SECTION\n #define TARGET_ASM_UNIQUE_SECTION \tmcore_unique_section\n+#undef  TARGET_ASM_FUNCTION_RODATA_SECTION\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n #undef  TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO \tmcore_encode_section_info\n #undef  TARGET_STRIP_NAME_ENCODING"}, {"sha": "e72b5c8906238d403de5979b67a16908b1592819", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -172,6 +172,7 @@ toc_section (void)\t\t\t\t\t\\\n #define TARGET_ASM_SELECT_SECTION  rs6000_xcoff_select_section\n #define TARGET_ASM_SELECT_RTX_SECTION  rs6000_xcoff_select_rtx_section\n #define TARGET_ASM_UNIQUE_SECTION  rs6000_xcoff_unique_section\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_no_function_rodata_section\n #define TARGET_STRIP_NAME_ENCODING  rs6000_xcoff_strip_name_encoding\n #define TARGET_SECTION_TYPE_FLAGS  rs6000_xcoff_section_type_flags\n "}, {"sha": "f43e0358d2a9369a5ec0e8f6bf65d266a743fe10", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -5933,6 +5933,15 @@ example, the function @code{foo} would be placed in @code{.text.foo}.\n Whatever the actual target object format, this is often good enough.\n @end deftypefn\n \n+@deftypefn {Target Hook} void TARGET_ASM_FUNCTION_RODATA_SECTION (tree @var{decl})\n+Switches to a readonly data section associated with\n+@samp{DECL_SECTION_NAME (@var{decl})}.\n+The default version of this function switches to @code{.gnu.linkonce.r.name}\n+section if function's section is @code{.gnu.linkonce.t.name}, to\n+@code{.rodata.name} if function is in @code{.text.name} section\n+and otherwise switches to the normal readonly data section.\n+@end deftypefn\n+\n @deftypefn {Target Hook} void TARGET_ASM_SELECT_RTX_SECTION (enum machine_mode @var{mode}, rtx @var{x}, unsigned HOST_WIDE_INT @var{align})\n Switches to the appropriate section for output of constant pool entry\n @var{x} in @var{mode}.  You can assume that @var{x} is some kind of"}, {"sha": "d9c4f383e67cbfa5171808b8b3253c5aacda818d", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -1966,7 +1966,7 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t\t{\n \t\t  int log_align;\n \n-\t\t  readonly_data_section ();\n+\t\t  targetm.asm_out.function_rodata_section (current_function_decl);\n \n #ifdef ADDR_VEC_ALIGN\n \t\t  log_align = ADDR_VEC_ALIGN (NEXT_INSN (insn));"}, {"sha": "1e1d1defa312933c0129c68eda3c2d116c568fcc", "filename": "gcc/output.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -501,6 +501,8 @@ extern void default_elf_select_section_1 (tree, int,\n \t\t\t\t\t  unsigned HOST_WIDE_INT, int);\n extern void default_unique_section (tree, int);\n extern void default_unique_section_1 (tree, int, int);\n+extern void default_function_rodata_section (tree);\n+extern void default_no_function_rodata_section (tree);\n extern void default_select_rtx_section (enum machine_mode, rtx,\n \t\t\t\t\tunsigned HOST_WIDE_INT);\n extern void default_elf_select_rtx_section (enum machine_mode, rtx,"}, {"sha": "407ee0bb54f905d5af6f209f8830ad8a93f7c564", "filename": "gcc/target-def.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -87,6 +87,10 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #define TARGET_ASM_UNIQUE_SECTION default_unique_section\n #endif\n \n+#ifndef TARGET_ASM_FUNCTION_RODATA_SECTION\n+#define TARGET_ASM_FUNCTION_RODATA_SECTION default_function_rodata_section\n+#endif\n+\n #ifndef TARGET_ASM_SELECT_RTX_SECTION\n #define TARGET_ASM_SELECT_RTX_SECTION default_select_rtx_section\n #endif\n@@ -212,6 +216,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \t\t\tTARGET_ASM_SELECT_SECTION,\t\t\\\n \t\t\tTARGET_ASM_SELECT_RTX_SECTION,\t\t\\\n \t\t\tTARGET_ASM_UNIQUE_SECTION,\t\t\\\n+\t\t\tTARGET_ASM_FUNCTION_RODATA_SECTION,\t\\\n \t\t\tTARGET_ASM_CONSTRUCTOR,\t\t\t\\\n \t\t\tTARGET_ASM_DESTRUCTOR,                  \\\n                         TARGET_ASM_OUTPUT_MI_THUNK,             \\"}, {"sha": "9a185e5b9b745a39a1248344413af88a3c100e9d", "filename": "gcc/target.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -132,6 +132,10 @@ struct gcc_target\n        for SELECT_SECTION.  */\n     void (* unique_section) (tree, int);\n \n+    /* Tell assembler to switch to the readonly data section associated\n+       with function DECL.  */\n+    void (* function_rodata_section) (tree); \n+\n     /* Output a constructor for a symbol with a given priority.  */\n     void (* constructor) (rtx, int);\n "}, {"sha": "658d417d9d62afa7cc6c624e7951b1355952077c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -1,3 +1,9 @@\n+2004-08-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/16276\n+\t* g++.old-deja/g++.other/comdat4.C: New test.\n+\t* g++.old-deja/g++.other/comdat4-aux.cc: New.\n+\n 2004-08-12  Ben Elliston  <bje@au.ibm.com>\n \n \tPR target/16286"}, {"sha": "e0556a5292c35a623b5aa1c19ab790a5469f5948", "filename": "gcc/testsuite/g++.old-deja/g++.other/comdat4-aux.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat4-aux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat4-aux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat4-aux.cc?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -0,0 +1,40 @@\n+extern void\n+bar (int x);\n+\n+inline void\n+foo (int i)\n+{\n+  switch (i)\n+    {\n+    case 3:\n+    case 5:\n+    case 6:\n+    case 9:\n+    case 15:\n+      bar (1);\n+      break;\n+    case 2:\n+    case 4:\n+    case 7:\n+    case 10:\n+    case 11:\n+    case 12:\n+      bar (2);\n+      break;\n+    case 0:\n+    case 1:\n+    case 8:\n+    case 13:\n+    case 16:\n+      bar (3);\n+      break;\n+    case 14:\n+      bar (4);\n+      break;\n+    default:\n+      bar (5);\n+      break;\n+    }\n+}\n+\n+void *fooaddr2 = (void *) foo;"}, {"sha": "28b26a1df24f4b3a725f1e29d429f485325caacb", "filename": "gcc/testsuite/g++.old-deja/g++.other/comdat4.C", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcomdat4.C?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -0,0 +1,57 @@\n+// PR c++/16276\n+// { dg-do link }\n+// { dg-additional-sources \" comdat4-aux.cc\" }\n+// { dg-options \"-O2\" }\n+\n+extern void\n+bar (int x);\n+\n+inline void\n+foo (int i)\n+{\n+  switch (i)\n+    {\n+    case 3:\n+    case 5:\n+    case 6:\n+    case 9:\n+    case 15:\n+      bar (1);\n+      break;\n+    case 2:\n+    case 4:\n+    case 7:\n+    case 10:\n+    case 11:\n+    case 12:\n+      bar (2);\n+      break;\n+    case 0:\n+    case 1:\n+    case 8:\n+    case 13:\n+    case 16:\n+      bar (3);\n+      break;\n+    case 14:\n+      bar (4);\n+      break;\n+    default:\n+      bar (5);\n+      break;\n+    }\n+}\n+\n+void *fooaddr = (void *) foo;\n+\n+void\n+bar (int x)\n+{\n+  __asm __volatile (\"\" : : \"r\" (x));\n+}\n+\n+int\n+main (void)\n+{\n+  return 0;\n+}"}, {"sha": "afbde92f11e686b84db7766663703868a63ef602", "filename": "gcc/varasm.c", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5c8549a48977b865f8ed8dd4bd4e745b1cec75/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=ab5c8549a48977b865f8ed8dd4bd4e745b1cec75", "patch": "@@ -547,6 +547,53 @@ function_section (tree decl)\n     }\n }\n \n+/* Switch to read-only data section associated with function DECL.  */\n+\n+void\n+default_function_rodata_section (tree decl)\n+{\n+  if (decl != NULL_TREE && DECL_SECTION_NAME (decl))\n+    {\n+      const char *name = TREE_STRING_POINTER (DECL_SECTION_NAME (decl));\n+\n+      /* For .gnu.linkonce.t.foo we want to use .gnu.linkonce.r.foo.  */\n+      if (DECL_ONE_ONLY (decl) && strncmp (name, \".gnu.linkonce.t.\", 16) == 0)\n+\t{\n+\t  size_t len = strlen (name) + 1;\n+\t  char *rname = alloca (len);\n+\n+\t  memcpy (rname, name, len);\n+\t  rname[14] = 'r';\n+\t  named_section_flags (rname, SECTION_LINKONCE);\n+\t  return;\n+\t}\n+      /* For .text.foo we want to use .rodata.foo.  */\n+      else if (flag_function_sections && flag_data_sections\n+\t       && strncmp (name, \".text.\", 6) == 0)\n+\t{\n+\t  size_t len = strlen (name) + 1;\n+\t  char *rname = alloca (len + 2);\n+\n+\t  memcpy (rname, \".rodata\", 7);\n+\t  memcpy (rname + 7, name + 5, len - 5);\n+\t  named_section_flags (rname, 0);\n+\t  return;\n+\t}\n+    }\n+\n+  readonly_data_section ();\n+}\n+\n+/* Switch to read-only data section associated with function DECL\n+   for targets where that section should be always the single\n+   readonly data section.  */\n+\n+void\n+default_no_function_rodata_section (tree decl ATTRIBUTE_UNUSED)\n+{\n+  readonly_data_section ();\n+}\n+\n /* Switch to section for variable DECL.  RELOC is the same as the\n    argument to SELECT_SECTION.  */\n "}]}