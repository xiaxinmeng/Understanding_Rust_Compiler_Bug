{"sha": "0adaa7e4a5ef81122c11a64a4735da9bcfa35379", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFkYWE3ZTRhNWVmODExMjJjMTFhNjRhNDczNWRhOWJjZmEzNTM3OQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2003-11-12T17:00:53Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2003-11-12T17:00:53Z"}, "message": "re PR java/11045 (int cast bug)\n\n2003-11-12  Andrew Haley  <aph@redhat.com>\n\n        PR java/11045\n        * parse.y (fold_constant_for_init): Check that we really do have a\n        constant.\n\nFrom-SVN: r73497", "tree": {"sha": "592d5fa9013478a3b5bd9f35e47957384f037be2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/592d5fa9013478a3b5bd9f35e47957384f037be2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0adaa7e4a5ef81122c11a64a4735da9bcfa35379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adaa7e4a5ef81122c11a64a4735da9bcfa35379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0adaa7e4a5ef81122c11a64a4735da9bcfa35379", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adaa7e4a5ef81122c11a64a4735da9bcfa35379/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9389e79d44d90d591ea189b3dcf55ee75991639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9389e79d44d90d591ea189b3dcf55ee75991639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9389e79d44d90d591ea189b3dcf55ee75991639"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "96d03d0d1ea6a36129fc97abb4e3bb5da08f6a54", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0adaa7e4a5ef81122c11a64a4735da9bcfa35379/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0adaa7e4a5ef81122c11a64a4735da9bcfa35379/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0adaa7e4a5ef81122c11a64a4735da9bcfa35379", "patch": "@@ -1,5 +1,9 @@\n 2003-11-12  Andrew Haley  <aph@redhat.com>\n \n+\tPR java/11045\n+\t* parse.y (fold_constant_for_init): Check that we really do have a\n+\tconstant.\n+\n \tPR java/11533\n \t* lang.c (merge_init_test_initialization): Clear DECL_INITIAL for\n \tinit_test_decls being inlined."}, {"sha": "8a13e51b17518b675fd827f018d6711e3184a8c5", "filename": "gcc/java/parse.y", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0adaa7e4a5ef81122c11a64a4735da9bcfa35379/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0adaa7e4a5ef81122c11a64a4735da9bcfa35379/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=0adaa7e4a5ef81122c11a64a4735da9bcfa35379", "patch": "@@ -12080,8 +12080,8 @@ java_complete_lhs (tree node)\n \t  /* When we have a primitype type, or a string and we're not\n              emitting a class file, we actually don't want to generate\n              anything for the assignment. */\n-\t  if (value != NULL_TREE &&\n-\t      (JPRIMITIVE_TYPE_P (TREE_TYPE (value)) ||\n+\t  if (value != NULL_TREE && \n+\t      (JPRIMITIVE_TYPE_P (TREE_TYPE (value)) || \n \t       (TREE_TYPE (value) == string_ptr_type_node &&\n \t\t! flag_emit_class_files)))\n \t    {\n@@ -16089,7 +16089,11 @@ fold_constant_for_init (tree node, tree context)\n       if (val == NULL_TREE || ! TREE_CONSTANT (val))\n \treturn NULL_TREE;\n       TREE_OPERAND (node, 0) = val;\n-      return patch_unaryop (node, op0);\n+      val = patch_unaryop (node, op0);\n+      if (! TREE_CONSTANT (val))\n+\treturn NULL_TREE;\n+      return val;\n+\n       break;\n \n     case COND_EXPR:"}]}