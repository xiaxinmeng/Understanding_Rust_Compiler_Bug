{"sha": "e72cee90d52ac45df305c99894908df0bf4be392", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcyY2VlOTBkNTJhYzQ1ZGYzMDVjOTk4OTQ5MDhkZjBiZjRiZTM5Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-08-18T17:50:44Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-18T17:50:44Z"}, "message": "alpha.c (alpha_output_mi_thunk_osf): Allocate insn locators before emit_insn is called.\n\n\t* config/alpha/alpha.c (alpha_output_mi_thunk_osf): Allocate insn\n\tlocators before emit_insn is called.  Remove assert that\n\tcfun->is_thunk.\n\t(alpha_end_function): Clear crtl->emit structure and free insn\n\tlocators if cfun->is_thunk is true.\n\nFrom-SVN: r150883", "tree": {"sha": "e33e4cfed8c9bcec15d96424da15db15f4b299bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e33e4cfed8c9bcec15d96424da15db15f4b299bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e72cee90d52ac45df305c99894908df0bf4be392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72cee90d52ac45df305c99894908df0bf4be392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72cee90d52ac45df305c99894908df0bf4be392", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72cee90d52ac45df305c99894908df0bf4be392/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e31bcd1b96a5d6236da6cb4965b112773878e35d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e31bcd1b96a5d6236da6cb4965b112773878e35d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e31bcd1b96a5d6236da6cb4965b112773878e35d"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "206656d6c0c1db441c9bc01f3bab885585fac1cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72cee90d52ac45df305c99894908df0bf4be392/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72cee90d52ac45df305c99894908df0bf4be392/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e72cee90d52ac45df305c99894908df0bf4be392", "patch": "@@ -1,3 +1,11 @@\n+2009-08-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (alpha_output_mi_thunk_osf): Allocate insn\n+\tlocators before emit_insn is called.  Remove assert that\n+\tcfun->is_thunk.\n+\t(alpha_end_function): Clear crtl->emit structure and free insn\n+\tlocators if cfun->is_thunk is true.\n+\n 2009-08-18  Jason Merrill  <jason@redhat.com>\n \n \t* config/elfos.h (ASM_DECLARE_OBJECT_NAME): Use gnu_unique_object"}, {"sha": "e1644918850006979a0da3146075a93a7484949a", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72cee90d52ac45df305c99894908df0bf4be392/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72cee90d52ac45df305c99894908df0bf4be392/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=e72cee90d52ac45df305c99894908df0bf4be392", "patch": "@@ -8615,7 +8615,10 @@ alpha_end_function (FILE *file, const char *fnname, tree decl ATTRIBUTE_UNUSED)\n \n #if TARGET_ABI_OSF\n   if (cfun->is_thunk)\n-    free_after_compilation (cfun);\n+    {\n+      memset (&crtl->emit, 0, sizeof (struct emit_status));\n+      insn_locators_free ();\n+    }\n #endif\n \n #if TARGET_ABI_OPEN_VMS\n@@ -8666,7 +8669,7 @@ alpha_output_mi_thunk_osf (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n   HOST_WIDE_INT hi, lo;\n   rtx this_rtx, insn, funexp;\n \n-  gcc_assert (cfun->is_thunk);\n+  insn_locators_alloc ();\n \n   /* We always require a valid GP.  */\n   emit_insn (gen_prologue_ldgp ());\n@@ -8744,7 +8747,6 @@ alpha_output_mi_thunk_osf (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n      instruction scheduling worth while.  Note that use_thunk calls\n      assemble_start_function and assemble_end_function.  */\n   insn = get_insns ();\n-  insn_locators_alloc ();\n   shorten_branches (insn);\n   final_start_function (insn, file, 1);\n   final (insn, file, 1);"}, {"sha": "a0c52bdd01c12c6ebbf56675741b7d5bb22846e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72cee90d52ac45df305c99894908df0bf4be392/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72cee90d52ac45df305c99894908df0bf4be392/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e72cee90d52ac45df305c99894908df0bf4be392", "patch": "@@ -42,7 +42,7 @@\n 2009-08-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* lib/target-supports.exp\n-\t(check_effective_target_vect_cmdline_needed):: Add alpha to the list\n+\t(check_effective_target_vect_cmdline_needed): Add alpha to the list\n \tof targets that do not need command line argument to enable SIMD.\n \n 2009-08-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>"}]}