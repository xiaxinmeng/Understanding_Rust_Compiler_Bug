{"sha": "f2f3914171d7a52f662386e7da62005505bd9528", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJmMzkxNDE3MWQ3YTUyZjY2MjM4NmU3ZGE2MjAwNTUwNWJkOTUyOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-10-22T10:43:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-10-22T10:43:31Z"}, "message": "contrib.texi ([Fran@,{c}ois Dumont], [...]): New entries.\n\n2013-10-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* doc/contrib.texi ([Fran@,{c}ois Dumont], [Tim Shen],\n\t[Ed Smith-Rowland]): New entries.\n\t([Stephen M. Webb]): Update.\n\nFrom-SVN: r203917", "tree": {"sha": "c917f81f28dc51d80e9cfcd681309f43db9188c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c917f81f28dc51d80e9cfcd681309f43db9188c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2f3914171d7a52f662386e7da62005505bd9528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f3914171d7a52f662386e7da62005505bd9528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f3914171d7a52f662386e7da62005505bd9528", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f3914171d7a52f662386e7da62005505bd9528/comments", "author": null, "committer": null, "parents": [{"sha": "cddf01232d2ad3843c4f973ed93195be8fab6585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cddf01232d2ad3843c4f973ed93195be8fab6585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cddf01232d2ad3843c4f973ed93195be8fab6585"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "d5f3e0fb7ec02b8ffce90535ad82183fffa311d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f3914171d7a52f662386e7da62005505bd9528/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f3914171d7a52f662386e7da62005505bd9528/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2f3914171d7a52f662386e7da62005505bd9528", "patch": "@@ -1,3 +1,9 @@\n+2013-10-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* doc/contrib.texi ([Fran@,{c}ois Dumont], [Tim Shen],\n+\t[Ed Smith-Rowland]): New entries.\n+\t([Stephen M. Webb]): Update.\n+\n 2013-10-22  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* tree-ssa-ter.h: Remove duplicate copy of file contents.\n@@ -38,15 +44,15 @@\n \n 2013-10-21  Jeff Law  <law@redhat.com>\n \n-\t* tree-ssa-threadedge.c (thread_through_normal_block): New argument VISITED.\n-\tRemove VISISTED as a local variable.  When we have a threadable jump, verify\n-\tthe destination of the jump has not been visised.\n-\t(thread_across_edge): Allocate VISITED bitmap once at function scope and\n-\tuse it throughout.  Make sure to set appropriate bits in VISITED for E (start\n-\tof jump thread path).\n-\n-\t* tree-ssa-threadupdate.c (mark_threaded_blocks): Reject threading through\n-\ta joiner if any edge on the path has a recorded jump thread.\n+\t* tree-ssa-threadedge.c (thread_through_normal_block): New\n+\targument VISITED.  Remove VISISTED as a local variable.  When we\n+\thave a threadable jump, verify the destination of the jump has not\n+\tbeen visised.\n+\t(thread_across_edge): Allocate VISITED bitmap once at function\n+\tscope and use it throughout.  Make sure to set appropriate bits in\n+\tVISITED for E (start of jump thread path).\n+\t* tree-ssa-threadupdate.c (mark_threaded_blocks): Reject threading\n+\tthrough a joiner if any edge on the path has a recorded jump thread.\n \n 2013-10-21  Ian Lance Taylor  <iant@google.com>\n "}, {"sha": "32a85634eb8667245769a658a51786f83dec3208", "filename": "gcc/doc/contrib.texi", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f3914171d7a52f662386e7da62005505bd9528/gcc%2Fdoc%2Fcontrib.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f3914171d7a52f662386e7da62005505bd9528/gcc%2Fdoc%2Fcontrib.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcontrib.texi?ref=f2f3914171d7a52f662386e7da62005505bd9528", "patch": "@@ -237,6 +237,10 @@ libraries including for all kinds of C interface issues, contributing and\n maintaining @code{complex<>}, sanity checking and disbursement, configuration\n architecture, libio maintenance, and early math work.\n \n+@item\n+Fran@,{c}ois Dumont for his work on libstdc++-v3, especially maintaining and\n+improving @code{debug-mode} and associative and unordered containers.\n+\n @item\n Zdenek Dvorak for a new loop unroller and various fixes.\n \n@@ -837,6 +841,9 @@ Lars Segerlund for work on GNU Fortran.\n @item\n Dodji Seketeli for numerous C++ bug fixes and debug info improvements.\n \n+@item\n+Tim Shen for major work on @code{<regex>}.\n+\n @item\n Joel Sherrill for his direction via the steering committee, RTEMS\n contributions and RTEMS testing.\n@@ -872,6 +879,10 @@ Danny Smith for his major efforts on the Mingw (and Cygwin) ports.\n @item\n Randy Smith finished the Sun FPA support.\n \n+@item\n+Ed Smith-Rowland for his continuous work on libstdc++-v3, special functions,\n+@code{<random>}, and various improvements to C++11 features.\n+\n @item\n Scott Snyder for queue, iterator, istream, and string fixes and libstdc++\n testsuite entries.  Also for providing the patch to G77 to add\n@@ -995,7 +1006,7 @@ Feng Wang for contributions to GNU Fortran.\n @item\n Stephen M. Webb for time and effort on making libstdc++ shadow files\n work with the tricky Solaris 8+ headers, and for pushing the build-time\n-header tree.\n+header tree. Also, for starting and driving the @code{<regex>} effort.\n \n @item\n John Wehle for various improvements for the x86 code generator,"}]}