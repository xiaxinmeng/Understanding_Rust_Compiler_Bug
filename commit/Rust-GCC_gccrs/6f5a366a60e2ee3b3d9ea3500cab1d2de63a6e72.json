{"sha": "6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY1YTM2NmE2MGUyZWUzYjNkOWVhMzUwMGNhYjFkMmRlNjNhNmU3Mg==", "commit": {"author": {"name": "Cary Coutant", "email": "ccoutant@google.com", "date": "2013-04-18T18:55:18Z"}, "committer": {"name": "Cary Coutant", "email": "ccoutant@gcc.gnu.org", "date": "2013-04-18T18:55:18Z"}, "message": "dwarf2out.c (output_pubnames): Check die_perennial_p of parent instead of die_mark.\n\ngcc/\n\t* dwarf2out.c (output_pubnames): Check die_perennial_p of\n\tparent instead of die_mark.\n\ngcc/testsuite/\n\t* g++.dg/debug/dwarf2/pubnames-2.C: Add -fno-debug-types-section.\n\t* g++.dg/debug/dwarf2/pubnames-3.C: New test case.\n\nFrom-SVN: r198067", "tree": {"sha": "353f52b60af40c2be9736e938affef6cba335dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/353f52b60af40c2be9736e938affef6cba335dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/comments", "author": null, "committer": null, "parents": [{"sha": "89cbb85b5fd8899fe370ecc4573780685c8487fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89cbb85b5fd8899fe370ecc4573780685c8487fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89cbb85b5fd8899fe370ecc4573780685c8487fa"}], "stats": {"total": 211, "additions": 208, "deletions": 3}, "files": [{"sha": "40fb0c56d851005c057a9ad5140a697456180f48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "patch": "@@ -1,3 +1,8 @@\n+2013-04-18  Cary Coutant  <ccoutant@google.com>\n+\n+\t* dwarf2out.c (output_pubnames): Check die_perennial_p of\n+\tparent instead of die_mark.\n+\n 2013-04-18  Diego Novillo  <dnovillo@google.com>\n \n \t* gimple.c (create_gimple_tmp): New."}, {"sha": "b067b861083aa7b5a40c0682d069c9f3a96d85e1", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "patch": "@@ -9018,11 +9018,13 @@ output_pubnames (vec<pubname_entry, va_gc> *names)\n       /* Enumerator names are part of the pubname table, but the parent\n          DW_TAG_enumeration_type die may have been pruned.  Don't output\n          them if that is the case.  */\n-      if (pub->die->die_tag == DW_TAG_enumerator && !pub->die->die_mark)\n+      if (pub->die->die_tag == DW_TAG_enumerator &&\n+          (pub->die->die_parent == NULL\n+\t   || !pub->die->die_parent->die_perennial_p))\n         continue;\n \n       /* We shouldn't see pubnames for DIEs outside of the main CU.  */\n-      if (names == pubname_table)\n+      if (names == pubname_table && pub->die->die_tag != DW_TAG_enumerator)\n \tgcc_assert (pub->die->die_mark);\n \n       if (names != pubtype_table"}, {"sha": "4c8072974485316033436cad9cc5b24ee78d6cee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "patch": "@@ -1,3 +1,8 @@\n+2013-04-18   Cary Coutant  <ccoutant@google.com>\n+\n+\t* g++.dg/debug/dwarf2/pubnames-2.C: Add -fno-debug-types-section.\n+\t* g++.dg/debug/dwarf2/pubnames-3.C: New test case.\n+\n 2013-04-18   Cary Coutant  <ccoutant@google.com>\n \n \t* g++.dg/debug/dwarf2/typedef2.C: Add -fno-debug-types-section flag."}, {"sha": "52ae5c48e6b7504c202111479dd1ea9ea6f45a08", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pubnames-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-2.C?ref=6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-gpubnames -gdwarf-4 -std=c++0x -dA\" }\n+// { dg-options \"-gpubnames -gdwarf-4 -fno-debug-types-section -std=c++0x -dA\" }\n // { dg-final { scan-assembler-times \"\\.section\\[\\t \\]\\[^\\n\\]*debug_pubnames\" 1 } }\n // { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n // { dg-final { scan-assembler \"\\\"one\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }"}, {"sha": "6c1e265035edb9f3ad9a691a17e51c3083293645", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pubnames-3.C", "status": "added", "additions": 193, "deletions": 0, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpubnames-3.C?ref=6f5a366a60e2ee3b3d9ea3500cab1d2de63a6e72", "patch": "@@ -0,0 +1,193 @@\n+// { dg-do compile }\n+// { dg-options \"-gpubnames -gdwarf-4 -fdebug-types-section -std=c++0x -dA\" }\n+// { dg-final { scan-assembler-times \"\\.section\\[\\t \\]\\[^\\n\\]*debug_pubnames\" 1 } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::G_A\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::G_B\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::G_C\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::\\\\(anonymous namespace\\\\)\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"F_A\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"F_B\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"F_C\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"inline_func_1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1::c1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1::~c1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1::val\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check_enum\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"main\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>::c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>::c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>::c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check<one::c1>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check<two::c2<int> \\\\>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check<two::c2<double> \\\\>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"check<two::c2<int const\\\\\\*> \\\\>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>::val\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>::val\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>::val\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"__static_initialization_and_destruction_0\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>::~c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>::~c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>::~c2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"anonymous_union_var\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::ci\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2v1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2v2\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2v3\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1v\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::\\\\(anonymous namespace\\\\)::one_anonymous_var\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)::c1_count\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)::c2_count\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)::three\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"\\\\(anonymous namespace\\\\)::three::anonymous_three_var\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler-times \"\\.section\\[\\t \\]\\[^\\n\\]*debug_pubtypes\" 1 } }\n+// { dg-final { scan-assembler \"\\\"one::G\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"int\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"one::c1\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"double\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<double>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"two::c2<int const\\\\\\*>\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"F\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"anonymous_union_container\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+// { dg-final { scan-assembler \"\\\"bool\\\\\\\\0\\\"+\\[ \\t\\]+\\[#;/|@!]+\\[ \\t\\]+external name\" } }\n+\n+namespace\n+{\n+int c1_count;\n+int c2_count;\n+\n+namespace three\n+{\n+int anonymous_three_var;\n+}\n+};\n+\n+namespace one\n+{\n+\n+enum G\n+{\n+  G_A,\n+  G_B,\n+  G_C\n+};\n+\n+namespace {\n+int one_anonymous_var;\n+}\n+\n+class c1\n+{\n+ public:\n+  static int count;\n+\n+  c1()\n+  { ++c1_count; }\n+\n+  ~c1()\n+  {\n+    --c1_count;\n+  }\n+\n+  enum E\n+  {\n+    E_A,\n+    E_B,\n+    E_C,\n+  };\n+\n+  int\n+  val()\n+  { return E_A; }\n+};\n+\n+c1 c1v;\n+};\n+\n+namespace two\n+{\n+const int ci = 3;\n+\n+template <typename T>\n+class c2\n+{\n+ public:\n+  c2(T t)\n+    : t_(t)\n+  {\n+    ++c2_count;\n+  }\n+\n+  ~c2()\n+  { --c2_count; }\n+\n+  T\n+  val()\n+  { return this->t_; }\n+\n+  T t_;\n+};\n+\n+c2<int> c2v1(1);\n+c2<double> c2v2(2.0);\n+c2<int const*> c2v3(&ci);\n+};\n+\n+enum F\n+{\n+  F_A,\n+  F_B,\n+  F_C\n+};\n+\n+template <class C>\n+bool\n+check(C* c)\n+{ return c->val() == 0; }\n+\n+bool\n+check_enum(int i)\n+{ return i > 0; }\n+\n+struct anonymous_union_container {\n+  union {\n+    struct astruct {\n+      int a;\n+    };\n+    int b;\n+  } u;\n+};\n+\n+anonymous_union_container anonymous_union_var;\n+\n+#ifdef __GNUC__\n+#define ALWAYS_INLINE __attribute__((always_inline))\n+#else\n+#define ALWAYS_INLINE\n+#endif\n+\n+static inline ALWAYS_INLINE int\n+inline_func_1(int i)\n+{ return i * 17; }\n+\n+int\n+main()\n+{\n+  F f = F_A;\n+  one::G g = one::G_A;\n+  check_enum(f);\n+  check_enum(g);\n+  check(&one::c1v);\n+  check(&two::c2v1);\n+  check(&two::c2v2);\n+  check(&two::c2v3);\n+  anonymous_union_var.u.b = inline_func_1(3) - 51;\n+  return anonymous_union_var.u.b;\n+}"}]}