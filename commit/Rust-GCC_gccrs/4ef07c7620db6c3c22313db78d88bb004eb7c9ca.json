{"sha": "4ef07c7620db6c3c22313db78d88bb004eb7c9ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVmMDdjNzYyMGRiNmMzYzIyMzEzZGI3OGQ4OGJiMDA0ZWI3YzljYQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-26T15:52:32Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-26T15:52:32Z"}, "message": "[ARM/AArch64][testsuite] Add vpadal tests.\n\n2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vpadal.c: New file.\n\nFrom-SVN: r220123", "tree": {"sha": "6f6cc906616005894030e93b5137543763f407af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f6cc906616005894030e93b5137543763f407af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ef07c7620db6c3c22313db78d88bb004eb7c9ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef07c7620db6c3c22313db78d88bb004eb7c9ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef07c7620db6c3c22313db78d88bb004eb7c9ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef07c7620db6c3c22313db78d88bb004eb7c9ca/comments", "author": null, "committer": null, "parents": [{"sha": "316cbf7910704b678ab6f41b9918882a2ef83e09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316cbf7910704b678ab6f41b9918882a2ef83e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/316cbf7910704b678ab6f41b9918882a2ef83e09"}], "stats": {"total": 145, "additions": 145, "deletions": 0}, "files": [{"sha": "37cb1046199081b707e80f41be00477abea639dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef07c7620db6c3c22313db78d88bb004eb7c9ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef07c7620db6c3c22313db78d88bb004eb7c9ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ef07c7620db6c3c22313db78d88bb004eb7c9ca", "patch": "@@ -1,3 +1,7 @@\n+2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vpadal.c: New file.\n+\n 2015-01-26  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vmvn.c: New file."}, {"sha": "0bffc0fac54ae3730fc8d0137b091c4a869ecb28", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vpadal.c", "status": "added", "additions": 141, "deletions": 0, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef07c7620db6c3c22313db78d88bb004eb7c9ca/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvpadal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef07c7620db6c3c22313db78d88bb004eb7c9ca/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvpadal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvpadal.c?ref=4ef07c7620db6c3c22313db78d88bb004eb7c9ca", "patch": "@@ -0,0 +1,141 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xffd1, 0xffd6, 0xffdb, 0xffe0 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xffffffd1, 0xffffffd6 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0xffffffffffffffd1 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x1d1, 0x1d6, 0x1db, 0x1e0 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x1ffd1, 0x1ffd6 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x1ffffffd1 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xffd1, 0xffd6, 0xffdb, 0xffe0,\n+\t\t\t\t\t0xffe5, 0xffea, 0xffef, 0xfff4 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffffd1, 0xffffffd6,\n+\t\t\t\t\t0xffffffdb, 0xffffffe0 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xffffffffffffffd1, 0xffffffffffffffd6 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x1d1, 0x1d6, 0x1db, 0x1e0,\n+\t\t\t\t\t 0x1e5, 0x1ea, 0x1ef, 0x1f4 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x1ffd1, 0x1ffd6, 0x1ffdb, 0x1ffe0 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x1ffffffd1, 0x1ffffffd6 };\n+\n+#define INSN_NAME vpadal\n+#define TEST_MSG \"VPADAL/VPADALQ\"\n+\n+#define FNNAME1(NAME) void exec_ ## NAME (void)\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+FNNAME (INSN_NAME)\n+{\n+  /* Basic test: y=OP(x), then store the result.  */\n+#define TEST_VPADAL1(INSN, Q, T1, T2, W, N, W2, N2)\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N2) =\t\t\t\t\t\\\n+    INSN##Q##_##T2##W(VECT_VAR(vector, T1, W2, N2), VECT_VAR(vector2, T1, W, N)); \\\n+  vst1##Q##_##T2##W2(VECT_VAR(result, T1, W2, N2),\t\t\t\\\n+\t\t     VECT_VAR(vector_res, T1, W2, N2))\n+\n+#define TEST_VPADAL(INSN, Q, T1, T2, W, N, W2, N2)\t\\\n+  TEST_VPADAL1(INSN, Q, T1, T2, W, N, W2, N2)\n+\n+  DECL_VARIABLE(vector, int, 16, 4);\n+  DECL_VARIABLE(vector, int, 32, 2);\n+  DECL_VARIABLE(vector, int, 64, 1);\n+  DECL_VARIABLE(vector, uint, 16, 4);\n+  DECL_VARIABLE(vector, uint, 32, 2);\n+  DECL_VARIABLE(vector, uint, 64, 1);\n+  DECL_VARIABLE(vector, int, 16, 8);\n+  DECL_VARIABLE(vector, int, 32, 4);\n+  DECL_VARIABLE(vector, int, 64, 2);\n+  DECL_VARIABLE(vector, uint, 16, 8);\n+  DECL_VARIABLE(vector, uint, 32, 4);\n+  DECL_VARIABLE(vector, uint, 64, 2);\n+\n+  DECL_VARIABLE(vector2, int, 8, 8);\n+  DECL_VARIABLE(vector2, int, 16, 4);\n+  DECL_VARIABLE(vector2, int, 32, 2);\n+  DECL_VARIABLE(vector2, uint, 8, 8);\n+  DECL_VARIABLE(vector2, uint, 16, 4);\n+  DECL_VARIABLE(vector2, uint, 32, 2);\n+  DECL_VARIABLE(vector2, int, 8, 16);\n+  DECL_VARIABLE(vector2, int, 16, 8);\n+  DECL_VARIABLE(vector2, int, 32, 4);\n+  DECL_VARIABLE(vector2, uint, 8, 16);\n+  DECL_VARIABLE(vector2, uint, 16, 8);\n+  DECL_VARIABLE(vector2, uint, 32, 4);\n+\n+  DECL_VARIABLE(vector_res, int, 16, 4);\n+  DECL_VARIABLE(vector_res, int, 32, 2);\n+  DECL_VARIABLE(vector_res, int, 64, 1);\n+  DECL_VARIABLE(vector_res, uint, 16, 4);\n+  DECL_VARIABLE(vector_res, uint, 32, 2);\n+  DECL_VARIABLE(vector_res, uint, 64, 1);\n+  DECL_VARIABLE(vector_res, int, 16, 8);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+  DECL_VARIABLE(vector_res, uint, 16, 8);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector\" from \"buffer\".  */\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , int, s, 64, 1);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 64, 1);\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, int, s, 64, 2);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 64, 2);\n+\n+  /* Initialize input \"vector2\" from \"buffer\".  */\n+  VLOAD(vector2, buffer, , int, s, 8, 8);\n+  VLOAD(vector2, buffer, , int, s, 16, 4);\n+  VLOAD(vector2, buffer, , int, s, 32, 2);\n+  VLOAD(vector2, buffer, , uint, u, 8, 8);\n+  VLOAD(vector2, buffer, , uint, u, 16, 4);\n+  VLOAD(vector2, buffer, , uint, u, 32, 2);\n+  VLOAD(vector2, buffer, q, int, s, 8, 16);\n+  VLOAD(vector2, buffer, q, int, s, 16, 8);\n+  VLOAD(vector2, buffer, q, int, s, 32, 4);\n+  VLOAD(vector2, buffer, q, uint, u, 8, 16);\n+  VLOAD(vector2, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector2, buffer, q, uint, u, 32, 4);\n+\n+  /* Apply a unary operator named INSN_NAME.  */\n+  TEST_VPADAL(INSN_NAME, , int, s, 8, 8, 16, 4);\n+  TEST_VPADAL(INSN_NAME, , int, s, 16, 4, 32, 2);\n+  TEST_VPADAL(INSN_NAME, , int, s, 32, 2, 64 ,1);\n+  TEST_VPADAL(INSN_NAME, , uint, u, 8, 8, 16, 4);\n+  TEST_VPADAL(INSN_NAME, , uint, u, 16, 4, 32, 2);\n+  TEST_VPADAL(INSN_NAME, , uint, u, 32, 2, 64, 1);\n+  TEST_VPADAL(INSN_NAME, q, int, s, 8, 16, 16, 8);\n+  TEST_VPADAL(INSN_NAME, q, int, s, 16, 8, 32, 4);\n+  TEST_VPADAL(INSN_NAME, q, int, s, 32, 4, 64 ,2);\n+  TEST_VPADAL(INSN_NAME, q, uint, u, 8, 16, 16, 8);\n+  TEST_VPADAL(INSN_NAME, q, uint, u, 16, 8, 32, 4);\n+  TEST_VPADAL(INSN_NAME, q, uint, u, 32, 4, 64, 2);\n+\n+  CHECK(TEST_MSG, int, 16, 4, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 1, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 1, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, int, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx64, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vpadal ();\n+  return 0;\n+}"}]}