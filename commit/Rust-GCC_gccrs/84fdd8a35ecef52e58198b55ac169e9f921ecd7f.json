{"sha": "84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmZGQ4YTM1ZWNlZjUyZTU4MTk4YjU1YWMxNjllOWY5MjFlY2Q3Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T09:00:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T09:00:13Z"}, "message": "[multiple changes]\n\n2005-06-10  Arnaud Charlet  <charlet@adacore.com>\n\n\t* Makefile.in: Add initialize.o when needed.\n\tAdapt to new VMS package body Symbols and subunits\n\tNo specialized version of a-sytaco is needed for VxWorks.\n\n\t* a-wichun.ads, a-wichun.adb, a-zchuni.ads, a-zchuni.adb: New files.\n\t* a-zchara.ads, a-widcha.ads: New files.\n\n\t* system-hpux-ia64.ads: New file.\n\n\t* i-vxwork-x86.ads, i-vxwork.ads (intContext): Add this function which\n\tis imported from the VxWorks kernel.\n\n2005-06-14  Robert Dewar  <dewar@adacore.com>\n\n\t* g-soliop-mingw.ads, g-soccon-vms.adb, a-swmwco.ads, exp_smem.adb,\n\tfmap.adb, a-szmzco.ads, s-traent-vms.adb, s-traent-vms.ads,\n\ta-direio.ads, a-exctra.ads, a-exexda.adb, a-exextr.adb, a-stream.ads,\n\ts-restri.ads, s-restri.adb, s-traent.adb, s-traent.ads, a-slcain.adb,\n\ta-stzhas.ads, a-tiinau.adb, comperr.adb, exp_ch11.adb, g-boubuf.adb,\n\tg-calend.adb, g-debpoo.ads, g-moreex.ads, gprep.adb, g-regpat.ads,\n\ti-cexten.ads, i-os2thr.ads, makeutl.ads, memroot.adb, mlib-prj.adb,\n\tnamet.adb, namet.ads, prj-makr.adb, prj-proc.adb, sem_dist.adb,\n\tsem_elim.ads, s-valint.adb, s-vallli.adb, s-vallli.adb, s-vallli.ads,\n\ts-valllu.adb, s-valllu.ads, s-valrea.adb, s-valrea.ads, scn.adb,\n\ts-tasinf.adb, targparm.adb, uname.adb, uname.ads, xnmake.adb,\n\txsinfo.adb, a-direct.ads: Remove extra blank lines. Minor reformatting.\n\n2005-06-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* xeinfo.adb: Fix typo in comment\n\n2005-06-14  Javier Miranda  <miranda@adacore.com>\n\n\t* repinfo.ads: Fix typo in comment\n\n2005-06-14  Gary Dismukes  <dismukes@adacore.com>\n\n\t* s-finimp.adb (Parent_Tag): Delete this imported function (function\n\tParent_Tag is now in the visible part of Ada.Tags).\n\t(Get_Deep_Controller): Call Ada.Tags.Parent_Tag directly instead of\n\tusing imported function.\n\n2005-06-14  Bernard Banner  <banner@adacore.com>\n\n\t* vxaddr2line.adb: Add support for Windows hosted x86 vxworks. Should\n\talso apply for handling support for VxSim 653.\n\n2005-06-14  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* xsnames.adb: Add automatic generation of snames.h.\n\n2005-06-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* gen-soccon.c: Add IP_MULTICAST_IF constant\n\tMinor reformatting and adjustments to prevent warnings.\n\n2005-06-14  Pascal Obry  <obry@adacore.com>\n\n\t* seh_init.c: Do not include <sys/stat.h>. This is not needed.\n\nFrom-SVN: r101072", "tree": {"sha": "a805cdf58bf82e42b382e600607214a93b0ebbf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a805cdf58bf82e42b382e600607214a93b0ebbf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/comments", "author": null, "committer": null, "parents": [{"sha": "0453ca3d7288b11830065c9ed05ee3a75dc974da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0453ca3d7288b11830065c9ed05ee3a75dc974da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0453ca3d7288b11830065c9ed05ee3a75dc974da"}], "stats": {"total": 1371, "additions": 1168, "deletions": 203}, "files": [{"sha": "811f29c70f17295ea68b1eedfe9f44cc36815828", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -457,8 +457,6 @@ endif\n \n ifeq ($(strip $(filter-out alpha% dec vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n-  a-sytaco.ads<a-sytaco-vxworks.ads \\\n-  a-sytaco.adb<a-sytaco-vxworks.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -485,8 +483,6 @@ endif\n \n ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n-  a-sytaco.ads<a-sytaco-vxworks.ads \\\n-  a-sytaco.adb<a-sytaco-vxworks.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -524,8 +520,6 @@ endif\n \n ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n-  a-sytaco.ads<a-sytaco-vxworks.ads \\\n-  a-sytaco.adb<a-sytaco-vxworks.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -563,8 +557,6 @@ endif\n \n ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n-  a-sytaco.ads<a-sytaco-vxworks.ads \\\n-  a-sytaco.adb<a-sytaco-vxworks.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -593,8 +585,6 @@ endif\n \n ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n-  a-sytaco.ads<a-sytaco-vxworks.ads \\\n-  a-sytaco.adb<a-sytaco-vxworks.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   i-vxwork.ads<i-vxwork-x86.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -634,8 +624,6 @@ endif\n \n ifeq ($(strip $(filter-out xscale% coff wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n-  a-sytaco.ads<a-sytaco-vxworks.ads \\\n-  a-sytaco.adb<a-sytaco-vxworks.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -664,8 +652,6 @@ endif\n \n ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n-  a-sytaco.ads<a-sytaco-vxworks.ads \\\n-  a-sytaco.adb<a-sytaco-vxworks.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n@@ -1251,11 +1237,13 @@ endif\n ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(targ))),)\n   TOOLS_TARGET_PAIRS= \\\n   mlib-tgt.adb<mlib-tgt-vms-ia64.adb \\\n-  symbols.adb<symbols-vms-ia64.adb\n+  symbols.adb<symbols-vms.adb \\\n+  symbols-processing.adb<symbols-processing-vms-ia64.adb\n else\n   TOOLS_TARGET_PAIRS= \\\n   mlib-tgt.adb<mlib-tgt-vms-alpha.adb \\\n-  symbols.adb<symbols-vms-alpha.adb\n+  symbols.adb<symbols-vms.adb \\\n+  symbols-processing.adb<symbols-processing-vms-alpha.adb\n endif\n \n   GNATLIB_SHARED=gnatlib-shared-vms\n@@ -1507,12 +1495,12 @@ endif\n # subdirectory and copied.\n LIBGNAT_SRCS = ada.h adaint.c adaint.h argv.c cio.c cstreams.c \\\n   errno.c exit.c cal.c ctrl_c.c \\\n-  raise.h raise.c sysdep.c aux-io.c init.c seh_init.c \\\n+  raise.h raise.c sysdep.c aux-io.c init.c initialize.c seh_init.c \\\n   final.c tracebak.c tb-alvms.c tb-alvxw.c expect.c mkdir.c socket.c gsocket.h \\\n   $(EXTRA_LIBGNAT_SRCS)\n \n LIBGNAT_OBJS = adaint.o argv.o cio.o cstreams.o ctrl_c.o errno.o exit.o \\\n-  raise.o sysdep.o aux-io.o init.o seh_init.o cal.o final.o \\\n+  raise.o sysdep.o aux-io.o init.o initialize.o seh_init.o cal.o final.o \\\n   tracebak.o expect.o mkdir.o socket.o $(EXTRA_LIBGNAT_OBJS)\n \n # NOTE ??? - when the -I option for compiling Ada code is made to work,\n@@ -2029,26 +2017,30 @@ socket.o  : socket.c gsocket.h\n sysdep.o  : sysdep.c\n \n gen-soccon: gen-soccon.c gsocket.h\n-\t$(CC) $(ALL_CFLAGS) $(ADA_CFLAGS) $(RT_FLAGS) \\\n-\t\t$(ALL_CPPFLAGS) $(INCLUDES) -DTARGET=\\\"$(target_alias)\\\" \\\n+\t$(CC) $(ALL_CFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t-UIN_GCC -DTARGET=\\\"$(target_alias)\\\" \\\n \t\t$< $(OUTPUT_OPTION)\n \n cio.o     : cio.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(RT_FLAGS) \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n init.o    : init.c ada.h types.h raise.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(RT_FLAGS) \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+initialize.o : initialize.c\n+\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n # No optimization to compile this file as optimizations (-O1 or above) breaks\n # the SEH handling on Windows. The reasons are not clear.\n seh_init.o : seh_init.c raise.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(RT_FLAGS) -O0 \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) -O0 \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n raise.o   : raise.c raise.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(RT_FLAGS) \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n \t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n # Need to keep the frame pointer in this file to pop the stack properly on"}, {"sha": "d16e2f68826d32ebd4675879505d95a49fb8ce75", "filename": "gcc/ada/a-direct.ads", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-direct.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-direct.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -178,8 +178,9 @@ package Ada.Directories is\n    --  and form given by Form, or copying of the file with the name given by\n    --  Source_Name (in the absence of Name_Error).\n \n-\n-   --  File and directory name operations:\n+   ----------------------------------------\n+   -- File and directory name operations --\n+   ----------------------------------------\n \n    function Full_Name (Name : String) return String;\n    --  Returns the full name corresponding to the file name specified by Name.\n@@ -231,15 +232,16 @@ package Ada.Directories is\n    --  Name is not a possible simple name (if Extension is null) or base name\n    --  (if Extension is non-null).\n \n-\n-   --  File and directory queries:\n+   --------------------------------\n+   -- File and directory queries --\n+   --------------------------------\n \n    type File_Kind is (Directory, Ordinary_File, Special_File);\n    --  The type File_Kind represents the kind of file represented by an\n    --  external file or directory.\n \n    type File_Size is range 0 .. Long_Long_Integer'Last;\n-   --  The type File_Size represents the size of an external file.\n+   --  The type File_Size represents the size of an external file\n \n    function Exists (Name : String) return Boolean;\n    --  Returns True if external file represented by Name exists, and False\n@@ -403,19 +405,16 @@ private\n \n    --  Search_Type need to be a controlled type, because it includes component\n    --  of type Dir_Type (in GNAT.Directory_Operations) that need to be closed\n-   --  (if opened) during finalization.\n-   --  The component need to be an access value, because Search_Data is not\n-   --  fully defined in the spec.\n+   --  (if opened) during finalization. The component need to be an access\n+   --  value, because Search_Data is not fully defined in the spec.\n \n    type Search_Type is new Ada.Finalization.Controlled with record\n       Value : Search_Ptr;\n    end record;\n \n    procedure Finalize (Search : in out Search_Type);\n-   --  Close the directory, if opened, and deallocate Value.\n+   --  Close the directory, if opened, and deallocate Value\n \n    procedure End_Search (Search : in out Search_Type) renames Finalize;\n \n end Ada.Directories;\n-\n-"}, {"sha": "6106922adc456a0c76746d73fc6c8cb8de45a250", "filename": "gcc/ada/a-direio.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,7 +35,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-\n with Ada.IO_Exceptions;\n with System.Direct_IO;\n with Interfaces.C_Streams;"}, {"sha": "f8eae603864eb2d83a1a31e8793f70ba31d2e02e", "filename": "gcc/ada/a-exctra.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-exctra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-exctra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exctra.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,7 +35,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package is part of the support for tracebacks on exceptions.\n+--  This package is part of the support for tracebacks on exceptions\n \n with System.Traceback_Entries;\n \n@@ -47,7 +47,7 @@ package Ada.Exceptions.Traceback is\n    --  Code location in executing program\n \n    type Tracebacks_Array is array (Positive range <>) of TBE.Traceback_Entry;\n-   --  A traceback array is an array of traceback entries.\n+   --  A traceback array is an array of traceback entries\n \n    function Tracebacks (E : Exception_Occurrence) return Tracebacks_Array;\n    --  This function extracts the traceback information from an exception"}, {"sha": "c7949acdba2053db6020db594d46b9000349cc58", "filename": "gcc/ada/a-exexda.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-exexda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-exexda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexda.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -152,7 +152,6 @@ package body Exception_Data is\n       Info : in out String;\n       Ptr  : in out Natural);\n \n-\n    --  The \"functional\" interface to the exception information not involving\n    --  a traceback decorator uses preallocated intermediate buffers to avoid\n    --  the use of secondary stack. Preallocation requires preliminary length"}, {"sha": "7fa41e08e07f3ae97a2b5881bbcb3933c4761821", "filename": "gcc/ada/a-exextr.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-exextr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-exextr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exextr.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -190,7 +190,6 @@ package body Exception_Traces is\n       Last_Chance_Handler (Excep.all);\n    end Unhandled_Exception_Terminate;\n \n-\n    ------------------------------------\n    -- Handling GNAT.Exception_Traces --\n    ------------------------------------"}, {"sha": "a986420786d1ba7e4e3d3c806f4684c5119f7a39", "filename": "gcc/ada/a-slcain.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-slcain.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-slcain.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-slcain.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2004 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -76,5 +76,3 @@ begin\n       RI := RI + 1;\n    end loop;\n end Ada.Strings.Less_Case_Insensitive;\n-\n-"}, {"sha": "53300dc8d96e5e00e95da8fc092baba875f4e249", "filename": "gcc/ada/a-stream.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-stream.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-stream.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stream.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,7 +35,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-\n package Ada.Streams is\n pragma Pure (Streams);\n "}, {"sha": "8a8436c33df901b359d2b0b4c2a11778c0450d26", "filename": "gcc/ada/a-stzhas.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-stzhas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-stzhas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzhas.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -19,6 +19,3 @@ function Ada.Strings.Wide_Wide_Hash\n   (Key : Wide_Wide_String) return Containers.Hash_Type;\n \n pragma Pure (Ada.Strings.Wide_Wide_Hash);\n-\n-\n-"}, {"sha": "ffb50ca7d16584119399b69d0bd66b95cf551d61", "filename": "gcc/ada/a-swmwco.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-swmwco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-swmwco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-swmwco.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -182,7 +182,6 @@ private\n      (AF.Controlled with\n       Character_Ranges'Unrestricted_Access);\n \n-\n    Lower_Case_Mapping : aliased constant Wide_Character_Mapping_Values :=\n      (Length => 56,\n "}, {"sha": "77450debd781ca08c4bd6ee8db7c230a797d4b8f", "filename": "gcc/ada/a-szmzco.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-szmzco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-szmzco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-szmzco.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -182,7 +182,6 @@ private\n      (AF.Controlled with\n       Character_Ranges'Unrestricted_Access);\n \n-\n    Lower_Case_Mapping : aliased constant Wide_Wide_Character_Mapping_Values :=\n      (Length => 56,\n "}, {"sha": "8dede97277a171a706bfa4605da91d248ea99332", "filename": "gcc/ada/a-tiinau.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-tiinau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-tiinau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiinau.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,7 +52,7 @@ package body Ada.Text_IO.Integer_Aux is\n      (File : in File_Type;\n       Buf  : out String;\n       Ptr  : in out Natural);\n-   --  This is an auxiliary routine that is used to load an possibly signed\n+   --  This is an auxiliary routine that is used to load a possibly signed\n    --  integer literal value from the input file into Buf, starting at Ptr + 1.\n    --  On return, Ptr is set to the last character stored.\n "}, {"sha": "96a0ea1a79cce04e297031a951f2b9f6c8a0f41e", "filename": "gcc/ada/a-wichun.adb", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-wichun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-wichun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wichun.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -0,0 +1,167 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--         A D A . W I D E _ C H A R A C T E R T S . U N I C O D E          --\n+--                                                                          --\n+--                                 B o d y                                --\n+--                                                                          --\n+--             Copyright (C) 2005 Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package body Ada.Wide_Characters.Unicode is\n+\n+   package G renames GNAT.UTF_32;\n+\n+   ------------------\n+   -- Get_Category --\n+   ------------------\n+\n+   function Get_Category (U : Wide_Character) return Category is\n+   begin\n+      return Category (G.Get_Category (Wide_Character'Pos (U)));\n+   end Get_Category;\n+\n+   --------------\n+   -- Is_Digit --\n+   --------------\n+\n+   function Is_Digit (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Digit (Wide_Character'Pos (U));\n+   end Is_Digit;\n+\n+   function Is_Digit (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Digit (G.Category (C));\n+   end Is_Digit;\n+\n+   ---------------\n+   -- Is_Letter --\n+   ---------------\n+\n+   function Is_Letter (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Letter (Wide_Character'Pos (U));\n+   end Is_Letter;\n+\n+   function Is_Letter (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Letter (G.Category (C));\n+   end Is_Letter;\n+\n+   ------------------------\n+   -- Is_Line_Terminator --\n+   ------------------------\n+\n+   function Is_Line_Terminator (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Line_Terminator (Wide_Character'Pos (U));\n+   end Is_Line_Terminator;\n+\n+   -------------\n+   -- Is_Mark --\n+   -------------\n+\n+   function Is_Mark (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Mark (Wide_Character'Pos (U));\n+   end Is_Mark;\n+\n+   function Is_Mark (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Mark (G.Category (C));\n+   end Is_Mark;\n+\n+   --------------------\n+   -- Is_Non_Graphic --\n+   --------------------\n+\n+   function Is_Non_Graphic (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Non_Graphic (Wide_Character'Pos (U));\n+   end Is_Non_Graphic;\n+\n+   function Is_Non_Graphic (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Non_Graphic (G.Category (C));\n+   end Is_Non_Graphic;\n+\n+   --------------\n+   -- Is_Other --\n+   --------------\n+\n+   function Is_Other (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Other (Wide_Character'Pos (U));\n+   end Is_Other;\n+\n+   function Is_Other (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Other (G.Category (C));\n+   end Is_Other;\n+\n+   --------------------\n+   -- Is_Punctuation --\n+   --------------------\n+\n+   function Is_Punctuation (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Punctuation (Wide_Character'Pos (U));\n+   end Is_Punctuation;\n+\n+   function Is_Punctuation (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Punctuation (G.Category (C));\n+   end Is_Punctuation;\n+\n+   --------------\n+   -- Is_Space --\n+   --------------\n+\n+   function Is_Space (U : Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Space (Wide_Character'Pos (U));\n+   end Is_Space;\n+\n+   function Is_Space (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Space (G.Category (C));\n+   end Is_Space;\n+\n+   -------------------\n+   -- To_Upper_Case --\n+   -------------------\n+\n+   function To_Upper_Case\n+     (U : Wide_Character) return Wide_Character\n+   is\n+   begin\n+      return\n+        Wide_Character'Val\n+          (G.UTF_32_To_Upper_Case (Wide_Character'Pos (U)));\n+   end To_Upper_Case;\n+\n+end Ada.Wide_Characters.Unicode;"}, {"sha": "7bfe04530f247a2c14729cbfccac5f47a4eda547", "filename": "gcc/ada/a-wichun.ads", "status": "added", "additions": 190, "deletions": 0, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-wichun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-wichun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wichun.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -0,0 +1,190 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--          A D A . W I D E _ C H A R A C T E R S . U N I C O D E           --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2005 Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Unicode categorization routines for Wide_Character. Note that this\n+--  package is strictly speaking Ada 2005 (since it is a child of an\n+--  Ada 2005 unit), but we make it available in Ada 95 mode, since it\n+--  only deals with wide characters.\n+\n+with GNAT.UTF_32;\n+\n+package Ada.Wide_Characters.Unicode is\n+\n+   --  The following type defines the categories from the unicode definitions.\n+   --  The one addition we make is Fe, which represents the characters FFFE\n+   --  and FFFF in any of the planes.\n+\n+   type Category is new GNAT.UTF_32.Category;\n+   --  Cc   Other, Control\n+   --  Cf   Other, Format\n+   --  Cn   Other, Not Assigned\n+   --  Co   Other, Private Use\n+   --  Cs   Other, Surrogate\n+   --  Ll   Letter, Lowercase\n+   --  Lm   Letter, Modifier\n+   --  Lo   Letter, Other\n+   --  Lt   Letter, Titlecase\n+   --  Lu   Letter, Uppercase\n+   --  Mc   Mark, Spacing Combining\n+   --  Me   Mark, Enclosing\n+   --  Mn   Mark, Nonspacing\n+   --  Nd   Number, Decimal Digit\n+   --  Nl   Number, Letter\n+   --  No   Number, Other\n+   --  Pc   Punctuation, Connector\n+   --  Pd   Punctuation, Dash\n+   --  Pe   Punctuation, Close\n+   --  Pf   Punctuation, Final quote\n+   --  Pi   Punctuation, Initial quote\n+   --  Po   Punctuation, Other\n+   --  Ps   Punctuation, Open\n+   --  Sc   Symbol, Currency\n+   --  Sk   Symbol, Modifier\n+   --  Sm   Symbol, Math\n+   --  So   Symbol, Other\n+   --  Zl   Separator, Line\n+   --  Zp   Separator, Paragraph\n+   --  Zs   Separator, Space\n+   --  Fe   relative position FFFE/FFFF in plane\n+\n+   function Get_Category (U : Wide_Character) return Category;\n+   pragma Inline (Get_Category);\n+   --  Given a Wide_Character, returns corresponding Category, or Cn if the\n+   --  code does not have an assigned unicode category.\n+\n+   --  The following functions perform category tests corresponding to lexical\n+   --  classes defined in the Ada standard. There are two interfaces for each\n+   --  function. The second takes a Category (e.g. returned by Get_Category).\n+   --  The first takes a Wide_Character. The form taking the Wide_Character is\n+   --  typically more efficient than calling Get_Category, but if several\n+   --  different tests are to be performed on the same code, it is more\n+   --  efficient to use Get_Category to get the category, then test the\n+   --  resulting category.\n+\n+   function Is_Letter (U : Wide_Character) return Boolean;\n+   function Is_Letter (C : Category)       return Boolean;\n+   pragma Inline (Is_Letter);\n+   --  Returns true iff U is a letter that can be used to start an identifier,\n+   --  or if C is one of the corresponding categories, which are the following:\n+   --    Letter, Uppercase (Lu)\n+   --    Letter, Lowercase (Ll)\n+   --    Letter, Titlecase (Lt)\n+   --    Letter, Modifier  (Lm)\n+   --    Letter, Other     (Lo)\n+   --    Number, Letter    (Nl)\n+\n+   function Is_Digit (U : Wide_Character) return Boolean;\n+   function Is_Digit (C : Category)       return Boolean;\n+   pragma Inline (Is_Digit);\n+   --  Returns true iff U is a digit that can be used to extend an identifer,\n+   --  or if C is one of the corresponding categories, which are the following:\n+   --    Number, Decimal_Digit (Nd)\n+\n+   function Is_Line_Terminator (U : Wide_Character) return Boolean;\n+   pragma Inline (Is_Line_Terminator);\n+   --  Returns true iff U is an allowed line terminator for source programs,\n+   --  if U is in the category Zp (Separator, Paragaph), or Zs (Separator,\n+   --  Line), or if U is a conventional line terminator (CR, LF, VT, FF).\n+   --  There is no category version for this function, since the set of\n+   --  characters does not correspond to a set of Unicode categories.\n+\n+   function Is_Mark (U : Wide_Character) return Boolean;\n+   function Is_Mark (C : Category)       return Boolean;\n+   pragma Inline (Is_Mark);\n+   --  Returns true iff U is a mark character which can be used to extend an\n+   --  identifier, or if C is one of the corresponding categories, which are\n+   --  the following:\n+   --    Mark, Non-Spacing (Mn)\n+   --    Mark, Spacing Combining (Mc)\n+\n+   function Is_Other (U : Wide_Character) return Boolean;\n+   function Is_Other (C : Category)       return Boolean;\n+   pragma Inline (Is_Other);\n+   --  Returns true iff U is an other format character, which means that it\n+   --  can be used to extend an identifier, but is ignored for the purposes of\n+   --  matching of identiers, or if C is one of the corresponding categories,\n+   --  which are the following:\n+   --    Other, Format (Cf)\n+\n+   function Is_Punctuation (U : Wide_Character) return Boolean;\n+   function Is_Punctuation (C : Category)       return Boolean;\n+   pragma Inline (Is_Punctuation);\n+   --  Returns true iff U is a punctuation character that can be used to\n+   --  separate pices of an identifier, or if C is one of the corresponding\n+   --  categories, which are the following:\n+   --    Punctuation, Connector (Pc)\n+\n+   function Is_Space (U : Wide_Character) return Boolean;\n+   function Is_Space (C : Category)       return Boolean;\n+   pragma Inline (Is_Space);\n+   --  Returns true iff U is considered a space to be ignored, or if C is one\n+   --  of the corresponding categories, which are the following:\n+   --    Separator, Space (Zs)\n+\n+   function Is_Non_Graphic (U : Wide_Character) return Boolean;\n+   function Is_Non_Graphic (C : Category)       return Boolean;\n+   pragma Inline (Is_Non_Graphic);\n+   --  Returns true iff U is considered to be a non-graphic character, or if C\n+   --  is one of the corresponding categories, which are the following:\n+   --    Other, Control (Cc)\n+   --    Other, Private Use (Co)\n+   --    Other, Surrogate (Cs)\n+   --    Separator, Line (Zl)\n+   --    Separator, Paragraph (Zp)\n+   --    FFFE or FFFF positions in any plane (Fe)\n+   --\n+   --  Note that the Ada category format effector is subsumed by the above\n+   --  list of Unicode categories.\n+   --\n+   --  Note that Other, Unassiged (Cn) is quite deliberately not included\n+   --  in the list of categories above. This means that should any of these\n+   --  code positions be defined in future with graphic characters they will\n+   --  be allowed without a need to change implementations or the standard.\n+   --\n+   --  Note that Other, Format (Cf) is also quite deliberately not included\n+   --  in the list of categories above. This means that these characters can\n+   --  be included in character and string literals.\n+\n+   --  The following function is used to fold to upper case, as required by\n+   --  the Ada 2005 standard rules for identifier case folding. Two\n+   --  identifiers are equivalent if they are identical after folding all\n+   --  letters to upper case using this routine.\n+\n+   function To_Upper_Case (U : Wide_Character) return Wide_Character;\n+   pragma Inline (To_Upper_Case);\n+   --  If U represents a lower case letter, returns the corresponding upper\n+   --  case letter, otherwise U is returned unchanged. The folding is locale\n+   --  independent as defined by documents referenced in the note in section\n+   --  1 of ISO/IEC 10646:2003\n+\n+end Ada.Wide_Characters.Unicode;"}, {"sha": "d912e3d39dbc7ef6db0d9f510c75d16511bfbe05", "filename": "gcc/ada/a-widcha.ads", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-widcha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-widcha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-widcha.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -0,0 +1,21 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                  A D A . W I D E _ C H A R A C T E R S                   --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+-- This specification is adapted from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Note: strictly this is an Ada 2005 package, but we make it freely\n+--  available in Ada 95 mode, since it deals only with wide characters.\n+\n+package Ada.Wide_Characters is\n+pragma Pure (Wide_Characters);\n+end Ada.Wide_Characters;"}, {"sha": "916a9c0fe246f61755a095bd79f99bdde600e935", "filename": "gcc/ada/a-zchara.ads", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-zchara.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-zchara.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zchara.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -0,0 +1,18 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--             A D A . W I D E _ W I D E _ C H A R A C T E R S              --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+-- This specification is adapted from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package Ada.Wide_Wide_Characters is\n+pragma Pure (Wide_Wide_Characters);\n+end Ada.Wide_Wide_Characters;"}, {"sha": "827a98fdc07674786fb4d2f1dc5c8daacf1ccabe", "filename": "gcc/ada/a-zchuni.adb", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-zchuni.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-zchuni.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zchuni.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -0,0 +1,167 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--    A D A . W I D E _ W I D E _ C H A R A C T E R T S . U N I C O D E     --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--             Copyright (C) 2005 Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package body Ada.Wide_Wide_Characters.Unicode is\n+\n+   package G renames GNAT.UTF_32;\n+\n+   ------------------\n+   -- Get_Category --\n+   ------------------\n+\n+   function Get_Category (U : Wide_Wide_Character) return Category is\n+   begin\n+      return Category (G.Get_Category (Wide_Wide_Character'Pos (U)));\n+   end Get_Category;\n+\n+   --------------\n+   -- Is_Digit --\n+   --------------\n+\n+   function Is_Digit (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Digit (Wide_Wide_Character'Pos (U));\n+   end Is_Digit;\n+\n+   function Is_Digit (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Digit (G.Category (C));\n+   end Is_Digit;\n+\n+   ---------------\n+   -- Is_Letter --\n+   ---------------\n+\n+   function Is_Letter (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Letter (Wide_Wide_Character'Pos (U));\n+   end Is_Letter;\n+\n+   function Is_Letter (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Letter (G.Category (C));\n+   end Is_Letter;\n+\n+   ------------------------\n+   -- Is_Line_Terminator --\n+   ------------------------\n+\n+   function Is_Line_Terminator (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Line_Terminator (Wide_Wide_Character'Pos (U));\n+   end Is_Line_Terminator;\n+\n+   -------------\n+   -- Is_Mark --\n+   -------------\n+\n+   function Is_Mark (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Mark (Wide_Wide_Character'Pos (U));\n+   end Is_Mark;\n+\n+   function Is_Mark (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Mark (G.Category (C));\n+   end Is_Mark;\n+\n+   --------------------\n+   -- Is_Non_Graphic --\n+   --------------------\n+\n+   function Is_Non_Graphic (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Non_Graphic (Wide_Wide_Character'Pos (U));\n+   end Is_Non_Graphic;\n+\n+   function Is_Non_Graphic (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Non_Graphic (G.Category (C));\n+   end Is_Non_Graphic;\n+\n+   --------------\n+   -- Is_Other --\n+   --------------\n+\n+   function Is_Other (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Other (Wide_Wide_Character'Pos (U));\n+   end Is_Other;\n+\n+   function Is_Other (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Other (G.Category (C));\n+   end Is_Other;\n+\n+   --------------------\n+   -- Is_Punctuation --\n+   --------------------\n+\n+   function Is_Punctuation (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Punctuation (Wide_Wide_Character'Pos (U));\n+   end Is_Punctuation;\n+\n+   function Is_Punctuation (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Punctuation (G.Category (C));\n+   end Is_Punctuation;\n+\n+   --------------\n+   -- Is_Space --\n+   --------------\n+\n+   function Is_Space (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Space (Wide_Wide_Character'Pos (U));\n+   end Is_Space;\n+\n+   function Is_Space (C : Category) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Space (G.Category (C));\n+   end Is_Space;\n+\n+   -------------------\n+   -- To_Upper_Case --\n+   -------------------\n+\n+   function To_Upper_Case\n+     (U : Wide_Wide_Character) return Wide_Wide_Character\n+   is\n+   begin\n+      return\n+        Wide_Wide_Character'Val\n+          (G.UTF_32_To_Upper_Case (Wide_Wide_Character'Pos (U)));\n+   end To_Upper_Case;\n+\n+end Ada.Wide_Wide_Characters.Unicode;"}, {"sha": "a7bf566ad3d65f9a204bc96accd064952fb28cd4", "filename": "gcc/ada/a-zchuni.ads", "status": "added", "additions": 188, "deletions": 0, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-zchuni.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fa-zchuni.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zchuni.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -0,0 +1,188 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--    A D A . W I D E _ W I D E _ C H A R A C T E R T S . U N I C O D E    --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2005 Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Unicode categorization routines for Wide_Wide_Character\n+\n+with GNAT.UTF_32;\n+\n+package Ada.Wide_Wide_Characters.Unicode is\n+\n+   --  The following type defines the categories from the unicode definitions.\n+   --  The one addition we make is Fe, which represents the characters FFFE\n+   --  and FFFF in any of the planes.\n+\n+   type Category is new GNAT.UTF_32.Category;\n+   --  Cc   Other, Control\n+   --  Cf   Other, Format\n+   --  Cn   Other, Not Assigned\n+   --  Co   Other, Private Use\n+   --  Cs   Other, Surrogate\n+   --  Ll   Letter, Lowercase\n+   --  Lm   Letter, Modifier\n+   --  Lo   Letter, Other\n+   --  Lt   Letter, Titlecase\n+   --  Lu   Letter, Uppercase\n+   --  Mc   Mark, Spacing Combining\n+   --  Me   Mark, Enclosing\n+   --  Mn   Mark, Nonspacing\n+   --  Nd   Number, Decimal Digit\n+   --  Nl   Number, Letter\n+   --  No   Number, Other\n+   --  Pc   Punctuation, Connector\n+   --  Pd   Punctuation, Dash\n+   --  Pe   Punctuation, Close\n+   --  Pf   Punctuation, Final quote\n+   --  Pi   Punctuation, Initial quote\n+   --  Po   Punctuation, Other\n+   --  Ps   Punctuation, Open\n+   --  Sc   Symbol, Currency\n+   --  Sk   Symbol, Modifier\n+   --  Sm   Symbol, Math\n+   --  So   Symbol, Other\n+   --  Zl   Separator, Line\n+   --  Zp   Separator, Paragraph\n+   --  Zs   Separator, Space\n+   --  Fe   relative position FFFE/FFFF in plane\n+\n+   function Get_Category (U : Wide_Wide_Character) return Category;\n+   pragma Inline (Get_Category);\n+   --  Given a Wide_Wide_Character, returns corresponding Category, or Cn if\n+   --  the code does not have an assigned unicode category.\n+\n+   --  The following functions perform category tests corresponding to lexical\n+   --  classes defined in the Ada standard. There are two interfaces for each\n+   --  function. The second takes a Category (e.g. returned by Get_Category).\n+   --  The first takes a Wide_Wide_Character. The form taking the\n+   --  Wide_Wide_Character is typically more efficient than calling\n+   --  Get_Category, but if several different tests are to be performed on the\n+   --  same code, it is more efficient to use Get_Category to get the category,\n+   --  then test the resulting category.\n+\n+   function Is_Letter (U : Wide_Wide_Character) return Boolean;\n+   function Is_Letter (C : Category)            return Boolean;\n+   pragma Inline (Is_Letter);\n+   --  Returns true iff U is a letter that can be used to start an identifier,\n+   --  or if C is one of the corresponding categories, which are the following:\n+   --    Letter, Uppercase (Lu)\n+   --    Letter, Lowercase (Ll)\n+   --    Letter, Titlecase (Lt)\n+   --    Letter, Modifier  (Lm)\n+   --    Letter, Other     (Lo)\n+   --    Number, Letter    (Nl)\n+\n+   function Is_Digit (U : Wide_Wide_Character) return Boolean;\n+   function Is_Digit (C : Category)            return Boolean;\n+   pragma Inline (Is_Digit);\n+   --  Returns true iff U is a digit that can be used to extend an identifer,\n+   --  or if C is one of the corresponding categories, which are the following:\n+   --    Number, Decimal_Digit (Nd)\n+\n+   function Is_Line_Terminator (U : Wide_Wide_Character) return Boolean;\n+   pragma Inline (Is_Line_Terminator);\n+   --  Returns true iff U is an allowed line terminator for source programs,\n+   --  if U is in the category Zp (Separator, Paragaph), or Zs (Separator,\n+   --  Line), or if U is a conventional line terminator (CR, LF, VT, FF).\n+   --  There is no category version for this function, since the set of\n+   --  characters does not correspond to a set of Unicode categories.\n+\n+   function Is_Mark (U : Wide_Wide_Character) return Boolean;\n+   function Is_Mark (C : Category)            return Boolean;\n+   pragma Inline (Is_Mark);\n+   --  Returns true iff U is a mark character which can be used to extend an\n+   --  identifier, or if C is one of the corresponding categories, which are\n+   --  the following:\n+   --    Mark, Non-Spacing (Mn)\n+   --    Mark, Spacing Combining (Mc)\n+\n+   function Is_Other (U : Wide_Wide_Character) return Boolean;\n+   function Is_Other (C : Category)            return Boolean;\n+   pragma Inline (Is_Other);\n+   --  Returns true iff U is an other format character, which means that it\n+   --  can be used to extend an identifier, but is ignored for the purposes of\n+   --  matching of identiers, or if C is one of the corresponding categories,\n+   --  which are the following:\n+   --    Other, Format (Cf)\n+\n+   function Is_Punctuation (U : Wide_Wide_Character) return Boolean;\n+   function Is_Punctuation (C : Category)            return Boolean;\n+   pragma Inline (Is_Punctuation);\n+   --  Returns true iff U is a punctuation character that can be used to\n+   --  separate pices of an identifier, or if C is one of the corresponding\n+   --  categories, which are the following:\n+   --    Punctuation, Connector (Pc)\n+\n+   function Is_Space (U : Wide_Wide_Character) return Boolean;\n+   function Is_Space (C : Category)            return Boolean;\n+   pragma Inline (Is_Space);\n+   --  Returns true iff U is considered a space to be ignored, or if C is one\n+   --  of the corresponding categories, which are the following:\n+   --    Separator, Space (Zs)\n+\n+   function Is_Non_Graphic (U : Wide_Wide_Character) return Boolean;\n+   function Is_Non_Graphic (C : Category)            return Boolean;\n+   pragma Inline (Is_Non_Graphic);\n+   --  Returns true iff U is considered to be a non-graphic character, or if C\n+   --  is one of the corresponding categories, which are the following:\n+   --    Other, Control (Cc)\n+   --    Other, Private Use (Co)\n+   --    Other, Surrogate (Cs)\n+   --    Separator, Line (Zl)\n+   --    Separator, Paragraph (Zp)\n+   --    FFFE or FFFF positions in any plane (Fe)\n+   --\n+   --  Note that the Ada category format effector is subsumed by the above\n+   --  list of Unicode categories.\n+   --\n+   --  Note that Other, Unassiged (Cn) is quite deliberately not included\n+   --  in the list of categories above. This means that should any of these\n+   --  code positions be defined in future with graphic characters they will\n+   --  be allowed without a need to change implementations or the standard.\n+   --\n+   --  Note that Other, Format (Cf) is also quite deliberately not included\n+   --  in the list of categories above. This means that these characters can\n+   --  be included in character and string literals.\n+\n+   --  The following function is used to fold to upper case, as required by\n+   --  the Ada 2005 standard rules for identifier case folding. Two\n+   --  identifiers are equivalent if they are identical after folding all\n+   --  letters to upper case using this routine.\n+\n+   function To_Upper_Case\n+     (U : Wide_Wide_Character) return Wide_Wide_Character;\n+   pragma Inline (To_Upper_Case);\n+   --  If U represents a lower case letter, returns the corresponding upper\n+   --  case letter, otherwise U is returned unchanged. The folding is locale\n+   --  independent as defined by documents referenced in the note in section\n+   --  1 of ISO/IEC 10646:2003\n+\n+end Ada.Wide_Wide_Characters.Unicode;"}, {"sha": "309948aa09a652320a5a007690e1d65b8473bde1", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -294,7 +294,6 @@ package body Comperr is\n                   End_Line;\n                end if;\n \n-\n                Write_Str\n                  (\"| Use a subject line meaningful to you\" &\n                   \" and us to track the bug.\");"}, {"sha": "3a5381448c2d280cd2bddff074cb849fa590a7f6", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -730,7 +730,6 @@ package body Exp_Ch11 is\n             end;\n          end if;\n \n-\n          --  If an exception occurrence is present, then we must declare it\n          --  and initialize it from the value stored in the TSD\n \n@@ -1175,7 +1174,6 @@ package body Exp_Ch11 is\n                Name_Buffer (Name_Len) := ASCII.NUL;\n             end if;\n \n-\n             if Opt.Exception_Locations_Suppressed then\n                Name_Len := 0;\n             end if;"}, {"sha": "c2b129785e94f3370e2dad59f029e0f69adbc54e", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -492,5 +492,4 @@ package body Exp_Smem is\n       end if;\n    end On_Lhs_Of_Assignment;\n \n-\n end Exp_Smem;"}, {"sha": "6b001f26785df38a2a6b21a6811574b95ae3ac6f", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2001-2003, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2001-2005, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -297,7 +297,6 @@ package body Fmap is\n                return;\n             end if;\n \n-\n             Name_Len := Last - First + 1;\n             Name_Buffer (1 .. Name_Len) := SP (First .. Last);\n             Uname := Find_Name;"}, {"sha": "fd707073716cb7cfa12e2ce9f01ad6c447d62c1d", "filename": "gcc/ada/g-boubuf.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-boubuf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-boubuf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-boubuf.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                Copyright (C) 2003 Ada Core Technologies, Inc.            --\n+--                     Copyright (C) 2003-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,5 +89,4 @@ package body GNAT.Bounded_Buffers is\n \n    end Bounded_Buffer;\n \n-\n end GNAT.Bounded_Buffers;"}, {"sha": "7f0bda2bcedd1b4f143f90da102e0cc39502b32e", "filename": "gcc/ada/g-calend.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1999-2001 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 1999-2005 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -253,7 +253,6 @@ package body GNAT.Calendar is\n       sec   : aliased C.long;\n       usec  : aliased C.long;\n \n-\n    begin\n       timeval_to_duration (T, sec'Access, usec'Access);\n       return Duration (sec) + Duration (usec) / Micro;"}, {"sha": "b21842c4c8379a156e05f133dece62542ecabd54", "filename": "gcc/ada/g-debpoo.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-debpoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-debpoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -85,7 +85,6 @@\n --  This allows faster checks, and limits the performance impact of using\n --  this pool.\n \n-\n with System;                  use System;\n with System.Storage_Elements; use System.Storage_Elements;\n with System.Checked_Pools;"}, {"sha": "21f83c34bb4edd79b181892370f615eeff200baf", "filename": "gcc/ada/g-moreex.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-moreex.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-moreex.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-moreex.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2000 Ada Core Technologies, Inc.              --\n+--                     Copyright (C) 2000-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,9 +45,9 @@ package GNAT.Most_Recent_Exception is\n \n    function Occurrence\n      return Ada.Exceptions.Exception_Occurrence;\n-   --  Returns the Exception_Occurrence for the most recently raised\n-   --  exception in the current task. If no exception has been raised\n-   --  in the current task prior to the call, returns Null_Occurrence.\n+   --  Returns the Exception_Occurrence for the most recently raised exception\n+   --  in the current task. If no exception has been raised in the current task\n+   --  prior to the call, returns Null_Occurrence.\n \n    function Occurrence_Access\n      return Ada.Exceptions.Exception_Occurrence_Access;\n@@ -73,5 +73,4 @@ package GNAT.Most_Recent_Exception is\n    --          --  not about the Constraint_Error exception being handled\n    --          --  by the current handler code.\n \n-\n end GNAT.Most_Recent_Exception;"}, {"sha": "0b8c38e55df2c845471f861e49e028c67f47cfc7", "filename": "gcc/ada/g-regpat.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                                                                          --\n --               Copyright (C) 1986 by University of Toronto.               --\n---           Copyright (C) 1996-2004 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 1996-2005 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -524,7 +524,6 @@ pragma Preelaborate (Regpat);\n    --    Expression_Error is raised if the given expression is not a legal\n    --    regular expression.\n \n-\n    procedure Match\n      (Expression : String;\n       Data       : String;"}, {"sha": "42df2a677a35f4e19cb79e145c8d943c5b51c4fb", "filename": "gcc/ada/g-soccon-vms.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-soccon-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-soccon-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vms.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -4,9 +4,9 @@\n --                                                                          --\n --               G N A T . S O C K E T S . C O N S T A N T S                --\n --                                                                          --\n---                                 S p e c                                  --\n+--                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "710d3c18e96fe578914f56df0cfecf8610f0e2e6", "filename": "gcc/ada/g-soliop-mingw.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-soliop-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fg-soliop-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soliop-mingw.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2001-2003 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 2001-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,6 @@\n \n --  This is the Windows/NT version of this package\n \n-\n package GNAT.Sockets.Linker_Options is\n private\n    pragma Linker_Options (\"-lwsock32\");"}, {"sha": "04dfccf8d5d75e55a9d4bc8dcd12b418a8ed644e", "filename": "gcc/ada/gen-soccon.c", "status": "modified", "additions": 33, "deletions": 19, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fgen-soccon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fgen-soccon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen-soccon.c?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -4,7 +4,7 @@\n **                                                                          **\n **                           G E N - S O C C O N                            **\n **                                                                          **\n-**              Copyright (C) 2004 Free Software Foundation, Inc.           **\n+**            Copyright (C) 2004-2005 Free Software Foundation, Inc.        **\n **                                                                          **\n ** GNAT is free software;  you can  redistribute it  and/or modify it under **\n ** terms of the  GNU General Public License as published  by the Free Soft- **\n@@ -27,11 +27,16 @@\n #include <stdio.h>\n #include <string.h>\n \n-#include \"socket.h\"\n+#include \"gsocket.h\"\n+\n+#ifdef __MINGW32__\n+#include <winsock2.h>\n+#else\n #include <netinet/in.h>\n #include <netinet/tcp.h>\n-#include <sys/filio.h>\n+#include <sys/ioctl.h>\n #include <netdb.h>\n+#endif\n \n struct line {\n   char *text;\n@@ -48,8 +53,8 @@ struct line *first = NULL, *last = NULL;\n #define _NL TXT(\"\")\n /* Empty line */\n \n-#define itoad(n) itoa (\"%d\", n)\n-#define itoax(n) itoa (\"16#%08x#\", n)\n+#define itoad(n) f_itoa (\"%d\", n)\n+#define itoax(n) f_itoa (\"16#%08x#\", n)\n \n #define CND(name,comment) add_line(#name, itoad (name), comment);\n /* Constant (decimal) */\n@@ -63,12 +68,13 @@ struct line *first = NULL, *last = NULL;\n void output (void);\n /* Generate output spec */\n \n-char *itoa (char *, int);\n+char *f_itoa (char *, int);\n /* int to string */\n \n void add_line (char *, char*, char*);\n \n-void main (void) {\n+int\n+main (void) {\n \n TXT(\"------------------------------------------------------------------------------\")\n TXT(\"--                                                                          --\")\n@@ -78,7 +84,7 @@ TXT(\"--               G N A T . S O C K E T S . C O N S T A N T S\n TXT(\"--                                                                          --\")\n TXT(\"--                                 S p e c                                  --\")\n TXT(\"--                                                                          --\")\n-TXT(\"--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\")\n+TXT(\"--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\")\n TXT(\"--                                                                          --\")\n TXT(\"-- GNAT is free software;  you can  redistribute it  and/or modify it under --\")\n TXT(\"-- terms of the  GNU General Public License as published  by the Free Soft- --\")\n@@ -507,15 +513,10 @@ CND(SO_ERROR, \"Get/clear error status\")\n #endif\n CND(SO_BROADCAST, \"Can send broadcast msgs\")\n \n-#ifndef IP_ADD_MEMBERSHIP\n-#define IP_ADD_MEMBERSHIP -1\n-#endif\n-CND(IP_ADD_MEMBERSHIP, \"Join a multicast group\")\n-\n-#ifndef IP_DROP_MEMBERSHIP\n-#define IP_DROP_MEMBERSHIP -1\n+#ifndef IP_MULTICAST_IF\n+#define IP_MULTICAST_IF -1\n #endif\n-CND(IP_DROP_MEMBERSHIP, \"Leave a multicast group\")\n+CND(IP_MULTICAST_IF, \"Set/get mcast interface\")\n \n #ifndef IP_MULTICAST_TTL\n #define IP_MULTICAST_TTL -1\n@@ -526,10 +527,22 @@ CND(IP_MULTICAST_TTL, \"Set/get multicast TTL\")\n #define IP_MULTICAST_LOOP -1\n #endif\n CND(IP_MULTICAST_LOOP, \"Set/get mcast loopback\")\n+\n+#ifndef IP_ADD_MEMBERSHIP\n+#define IP_ADD_MEMBERSHIP -1\n+#endif\n+CND(IP_ADD_MEMBERSHIP, \"Join a multicast group\")\n+\n+#ifndef IP_DROP_MEMBERSHIP\n+#define IP_DROP_MEMBERSHIP -1\n+#endif\n+CND(IP_DROP_MEMBERSHIP, \"Leave a multicast group\")\n+\n _NL\n TXT(\"end GNAT.Sockets.Constants;\")\n \n-output ();\n+  output ();\n+  return 0;\n }\n \n void\n@@ -563,13 +576,14 @@ output (void) {\n }\n \n char *\n-itoa (char *fmt, int n) {\n+f_itoa (char *fmt, int n) {\n   char buf[32];\n   sprintf (buf, fmt, n);\n   return strdup (buf);\n }\n \n-void add_line (char *_text, char *_value, char *_comment) {\n+void\n+add_line (char *_text, char *_value, char *_comment) {\n   struct line *l = (struct line *) malloc (sizeof (struct line));\n   l->text = _text;\n   l->value = _value;"}, {"sha": "9b59832c0d4c1c84783852a1fbb6aafefbd23bf5", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -312,7 +312,6 @@ package body GPrep is\n       null;\n    end Obsolescent_Check;\n \n-\n    ---------------\n    -- Post_Scan --\n    ---------------"}, {"sha": "c78303cf124d8dce9f5a5ddec31d8cd715a93e35", "filename": "gcc/ada/i-cexten.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fi-cexten.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fi-cexten.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cexten.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---     Copyright (C) 1992,1993,1994,1995 Free Software Foundation, Inc.     --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -247,5 +247,4 @@ package Interfaces.C.Extensions is\n    type Signed_32 is range -2 ** 31 .. 2 ** 31 - 1;\n    for Signed_32'Size use 32;\n \n-\n end Interfaces.C.Extensions;"}, {"sha": "0bee96980a64a206ca87fa31b5b4f78b5d944061", "filename": "gcc/ada/i-os2thr.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fi-os2thr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fi-os2thr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2thr.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1993-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,7 +91,6 @@ pragma Preelaborate (Threads);\n    function DosKillThread (Id : TID) return APIRET;\n    pragma Import (C, DosKillThread, \"DosKillThread\");\n \n-\n    DCWW_WAIT   : constant := 0;\n    DCWW_NOWAIT : constant := 1;\n    --  Values for \"Option\" parameter in DosWaitThread call"}, {"sha": "e6edc14e743f894b25842838bef2f357d10bb63f", "filename": "gcc/ada/i-vxwork-x86.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fi-vxwork-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fi-vxwork-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwork-x86.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -1,12 +1,12 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                 GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS              --\n+--                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n --                                                                          --\n --                      I N T E R F A C E S . V X W O R K S                 --\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---             Copyright (C) 1999-2004 Ada Core Technologies, Inc.          --\n+--                     Copyright (C) 1999-2005, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,6 +137,10 @@ package Interfaces.VxWorks is\n    --  user handler. The routine generates a wrapper around the user\n    --  handler to save and restore context\n \n+   function intContext return int;\n+   --  Binding to the C routine intContext. This function returns 1 only\n+   --  if the current execution state is in interrupt context.\n+\n    function intVecGet\n      (Vector : Interrupt_Vector) return VOIDFUNCPTR;\n    --  Binding to the C routine intVecGet. Use this to get the\n@@ -200,6 +204,7 @@ private\n    --  Target-dependent floating point context type\n \n    pragma Import (C, intConnect, \"intConnect\");\n+   pragma Import (C, intContext, \"intContext\");\n    pragma Import (C, intVecGet, \"intVecGet\");\n    pragma Import (C, intVecSet, \"intVecSet\");\n    pragma Import (C, intVecGet2, \"intVecGet2\");"}, {"sha": "0c2febc246d3f9cb138742698e012944fb6fe346", "filename": "gcc/ada/i-vxwork.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fi-vxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fi-vxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwork.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -1,12 +1,12 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                 GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS              --\n+--                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n --                                                                          --\n --                      I N T E R F A C E S . V X W O R K S                 --\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---             Copyright (C) 1999-2003 Ada Core Technologies, Inc.          --\n+--                     Copyright (C) 1999-2005, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -138,6 +138,10 @@ package Interfaces.VxWorks is\n    --  user handler. The routine generates a wrapper around the user\n    --  handler to save and restore context\n \n+   function intContext return int;\n+   --  Binding to the C routine intContext. This function returns 1 only\n+   --  if the current execution state is in interrupt context.\n+\n    function intVecGet\n      (Vector : Interrupt_Vector) return VOIDFUNCPTR;\n    --  Binding to the C routine intVecGet. Use this to get the\n@@ -192,6 +196,7 @@ private\n    --  Target-dependent floating point context type\n \n    pragma Import (C, intConnect, \"intConnect\");\n+   pragma Import (C, intContext, \"intContext\");\n    pragma Import (C, intVecGet, \"intVecGet\");\n    pragma Import (C, intVecSet, \"intVecSet\");\n    pragma Import (C, INUM_TO_IVEC, \"__gnat_inum_to_ivec\");"}, {"sha": "94b337a3d4db4a7222d5e230b2e278d1dee81620", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -63,7 +63,6 @@ package Makeutl is\n    --  of project Project, in project tree In_Tree, and in the projects that\n    --  it imports directly or indirectly, and returns the result.\n \n-\n    --  Package Mains is used to store the mains specified on the command line\n    --  and to retrieve them when a project file is used, to verify that the\n    --  files exist and that they belong to a project file."}, {"sha": "4f515d27598fce1578f4b47e03c7485fc57ae07a", "filename": "gcc/ada/memroot.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fmemroot.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fmemroot.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmemroot.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1997-2003 Ada Core Technologies, Inc.           --\n+--                     Copyright (C) 1997-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -425,28 +425,29 @@ package body Memroot is\n       pragma Warnings (Off, Line);\n \n       procedure Find_File;\n+      pragma Inline (Find_File);\n       --  Position Curs1 and Curs2 so that Line (Curs1 .. Curs2) contains\n       --  the file name. The file name may not be on the current line since\n       --  a frame may be printed on more than one line when there is a lot\n       --  of parameters or names are long, so this subprogram can read new\n       --  lines of input.\n \n       procedure Find_Line;\n+      pragma Inline (Find_Line);\n       --  Position Curs1 and Curs2 so that Line (Curs1 .. Curs2) contains\n       --  the line number.\n \n       procedure Find_Name;\n+      pragma Inline (Find_Name);\n       --  Position Curs1 and Curs2 so that Line (Curs1 .. Curs2) contains\n       --  the subprogram name.\n \n       function Skip_To_Space (Pos : Integer) return Integer;\n+      pragma Inline (Skip_To_Space);\n       --  Scans Line starting with position Pos, returning the position\n       --  immediately before the first space, or the value of Last if no\n       --  spaces were found\n \n-\n-      pragma Inline (Find_File, Find_Line, Find_Name, Skip_To_Space);\n-\n       ---------------\n       -- Find_File --\n       ---------------"}, {"sha": "794c102a40e2e9ad5bac89f5b183c064471a138f", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -811,7 +811,7 @@ package body MLib.Prj is\n               (B_Start & Get_Name_String (Data.Library_Name) & \".adb\");\n             Add_Argument (\"-L\" & Get_Name_String (Data.Library_Name));\n \n-            --  Check if Binder'Default_Switches (\"Ada) is defined. If it is,\n+            --  Check if Binder'Default_Switches (\"Ada\") is defined. If it is,\n             --  add these switches to call gnatbind.\n \n             declare"}, {"sha": "916c667eb0a9c88aae6428ddf79e78ae715c0405", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -120,7 +120,6 @@ package body Namet is\n       end loop;\n    end Add_Str_To_Name_Buffer;\n \n-\n    --------------\n    -- Finalize --\n    --------------\n@@ -314,7 +313,6 @@ package body Namet is\n                   Insert_Character (Character'Val (Hex (2)));\n                end if;\n \n-\n             --  WW (wide wide character insertion)\n \n             elsif C = 'W'"}, {"sha": "2434dd720053d180a1278395cd645de0a0b264b6", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -61,7 +61,6 @@ package Namet is\n --                       followed by an upper case letter (other than the WW\n --                       sequence), or an underscore.\n \n-\n --    Operator symbols   Stored with an initial letter O, and the remainder\n --                       of the name is the lower case characters XXX where\n --                       the name is Name_Op_XXX, see Snames spec for a full"}, {"sha": "f1c9c0fc0b7f5c7e78edd464611b746aafc351c6", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -119,8 +119,6 @@ package body Prj.Makr is\n    is\n       Tree : constant Project_Node_Tree_Ref := new Project_Node_Tree_Data;\n \n-\n-\n       Path_Name : String (1 .. File_Path'Length +\n                             Project_File_Extension'Length);\n       Path_Last : Natural := File_Path'Length;"}, {"sha": "e351f7a9ca412e56f095c474a4cc234ed5689662", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -2185,7 +2185,6 @@ package body Prj.Proc is\n                                  Location_Of\n                                    (From_Project_Node, From_Project_Node_Tree);\n \n-\n          begin\n             Project := Processed_Projects.Get (Name);\n "}, {"sha": "902cabe85ab807ab3c6fd6959d787065be4bc073", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,7 +55,7 @@ package Repinfo is\n    --  For composite types, there are three cases:\n \n    --    1. In some cases the front end knows the values statically,\n-   --       for example in the ase where representation clauses or\n+   --       for example in the case where representation clauses or\n    --       pragmas specify the values.\n \n    --    2. If Backend_Layout is True, then the backend is responsible"}, {"sha": "6f40fa3f2cf9f97acfa10ee493f0268017fe332a", "filename": "gcc/ada/s-finimp.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-finimp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-finimp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finimp.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -85,9 +85,6 @@ package body System.Finalization_Implementation is\n      return SSE.Storage_Count;\n    pragma Import (Ada, Parent_Size, \"ada__tags__parent_size\");\n \n-   function Parent_Tag (T : Ada.Tags.Tag) return Ada.Tags.Tag;\n-   pragma Import (Ada, Parent_Tag, \"ada__tags__parent_tag\");\n-\n    function Get_Deep_Controller (Obj : System.Address) return RC_Ptr;\n    --  Given the address (obj) of a tagged object, return a\n    --  pointer to the record controller of this object.\n@@ -473,7 +470,7 @@ package body System.Finalization_Implementation is\n       --  when there are no controller at this level\n \n       while Offset = -2 loop\n-         The_Tag := Parent_Tag (The_Tag);\n+         The_Tag := Ada.Tags.Parent_Tag (The_Tag);\n          Offset  := RC_Offset (The_Tag);\n       end loop;\n "}, {"sha": "da6d285623051b4c6533ce4abb2585b195e46c23", "filename": "gcc/ada/s-restri.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-restri.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-restri.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2004 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -145,4 +145,3 @@ begin\n       end loop;\n    end Acquire_Restrictions;\n end System.Restrictions;\n-"}, {"sha": "6aec4e2dd28dab7c9c206a1650b6cb52772cbd89", "filename": "gcc/ada/s-restri.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-restri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-restri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2004 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,5 +65,3 @@ package System.Restrictions is\n    --  must be False, and Max_Tasks must not be set to zero.\n \n end System.Restrictions;\n-\n-"}, {"sha": "9ad8bb0c82cd58fe53f6a97a98fa0c2c910b4124", "filename": "gcc/ada/s-tasinf.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-tasinf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-tasinf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -4,10 +4,10 @@\n --                                                                          --\n --                     S Y S T E M . T A S K _ I N F O                      --\n --                                                                          --\n---                                 S p e c                                  --\n+--                                 B o d y                                  --\n --                           (Compiler Interface)                           --\n --                                                                          --\n---          Copyright (C) 1998-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,5 +40,4 @@\n --  implementation of the Task_Info pragma.\n \n package body System.Task_Info is\n-\n end System.Task_Info;"}, {"sha": "157c3e01137ef6e374181ed509ffa4c0799f76cc", "filename": "gcc/ada/s-traent-vms.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-traent-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-traent-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traent-vms.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2003 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2003-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -65,4 +65,3 @@ package body System.Traceback_Entries is\n    end TB_Entry_For;\n \n end System.Traceback_Entries;\n-"}, {"sha": "d79e20036f5519ccbecc0499c4dcaf8e4d2c93d8", "filename": "gcc/ada/s-traent-vms.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-traent-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-traent-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traent-vms.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2003 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2003-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -56,4 +56,3 @@ package System.Traceback_Entries is\n    function TB_Entry_For (PC : System.Address) return Traceback_Entry;\n \n end System.Traceback_Entries;\n-"}, {"sha": "27fe9c431b68a4ab5af1fda29cb90b3410f4922d", "filename": "gcc/ada/s-traent.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-traent.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-traent.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traent.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2003 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2003-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,7 +35,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-\n package body System.Traceback_Entries is\n \n    ------------"}, {"sha": "33e4dff09537518234080d3cbe997dc6c6ed08a9", "filename": "gcc/ada/s-traent.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-traent.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-traent.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traent.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2003 Free Software Foundation, Inc.            --\n+--          Copyright (C) 2003-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -58,5 +58,3 @@ package System.Traceback_Entries is\n    --  Returns an entry representing a frame for a call instruction at PC.\n \n end System.Traceback_Entries;\n-\n-"}, {"sha": "6e4b6eea1bce162bb02eb07cae7c8647da805acc", "filename": "gcc/ada/s-valint.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valint.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,8 +44,7 @@ package body System.Val_Int is\n    function Scan_Integer\n      (Str  : String;\n       Ptr  : access Integer;\n-      Max  : Integer)\n-      return Integer\n+      Max  : Integer) return Integer\n    is\n       Uval : Unsigned;\n       --  Unsigned result\n@@ -79,7 +78,6 @@ package body System.Val_Int is\n       else\n          return Integer (Uval);\n       end if;\n-\n    end Scan_Integer;\n \n    -------------------\n@@ -89,7 +87,6 @@ package body System.Val_Int is\n    function Value_Integer (Str : String) return Integer is\n       V : Integer;\n       P : aliased Integer := Str'First;\n-\n    begin\n       V := Scan_Integer (Str, P'Access, Str'Last);\n       Scan_Trailing_Blanks (Str, P);"}, {"sha": "56e830bd5371fd6ceb6135a4bc345dae5c9d91f7", "filename": "gcc/ada/s-vallli.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-vallli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-vallli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vallli.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -4,9 +4,9 @@\n --                                                                          --\n --                       S Y S T E M . V A L _ L L I                        --\n --                                                                          --\n---                                 S p e c                                  --\n+--                                 B o d y                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,8 +44,7 @@ package body System.Val_LLI is\n    function Scan_Long_Long_Integer\n      (Str  : String;\n       Ptr  : access Integer;\n-      Max  : Integer)\n-      return Long_Long_Integer\n+      Max  : Integer) return Long_Long_Integer\n    is\n       Uval : Long_Long_Unsigned;\n       --  Unsigned result\n@@ -80,7 +79,6 @@ package body System.Val_LLI is\n       else\n          return Long_Long_Integer (Uval);\n       end if;\n-\n    end Scan_Long_Long_Integer;\n \n    -----------------------------\n@@ -95,7 +93,6 @@ package body System.Val_LLI is\n       V := Scan_Long_Long_Integer (Str, P'Access, Str'Last);\n       Scan_Trailing_Blanks (Str, P);\n       return V;\n-\n    end Value_Long_Long_Integer;\n \n end System.Val_LLI;"}, {"sha": "3efb1d0c7282fe972e7b40c84c5bd774c5779bf7", "filename": "gcc/ada/s-vallli.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-vallli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-vallli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vallli.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,8 +40,7 @@ pragma Pure (Val_LLI);\n    function Scan_Long_Long_Integer\n      (Str  : String;\n       Ptr  : access Integer;\n-      Max  : Integer)\n-      return Long_Long_Integer;\n+      Max  : Integer) return Long_Long_Integer;\n    --  This function scans the string starting at Str (Ptr.all) for a valid\n    --  integer according to the syntax described in (RM 3.5(43)). The substring\n    --  scanned extends no further than Str (Max). There are three cases for the"}, {"sha": "bfb1b5dc94c6691af03e16f3dc69372fcda6a5e2", "filename": "gcc/ada/s-valllu.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valllu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valllu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valllu.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -4,9 +4,9 @@\n --                                                                          --\n --                       S Y S T E M . V A L _ L L U                        --\n --                                                                          --\n---                                 S p e c                                  --\n+--                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,8 +43,7 @@ package body System.Val_LLU is\n    function Scan_Long_Long_Unsigned\n      (Str  : String;\n       Ptr  : access Integer;\n-      Max  : Integer)\n-      return Long_Long_Unsigned\n+      Max  : Integer) return Long_Long_Unsigned\n    is\n       P : Integer;\n       --  Local copy of the pointer\n@@ -286,8 +285,7 @@ package body System.Val_LLU is\n    ------------------------------\n \n    function Value_Long_Long_Unsigned\n-     (Str : String)\n-     return Long_Long_Unsigned\n+     (Str : String) return Long_Long_Unsigned\n    is\n       V : Long_Long_Unsigned;\n       P : aliased Integer := Str'First;\n@@ -296,7 +294,6 @@ package body System.Val_LLU is\n       V := Scan_Long_Long_Unsigned (Str, P'Access, Str'Last);\n       Scan_Trailing_Blanks (Str, P);\n       return V;\n-\n    end Value_Long_Long_Unsigned;\n \n end System.Val_LLU;"}, {"sha": "c3a6c2bb378e8c103dee14ac9bca3cd310ee8f0c", "filename": "gcc/ada/s-valllu.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valllu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valllu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valllu.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,8 +42,7 @@ pragma Pure (Val_LLU);\n    function Scan_Long_Long_Unsigned\n      (Str  : String;\n       Ptr  : access Integer;\n-      Max  : Integer)\n-      return System.Unsigned_Types.Long_Long_Unsigned;\n+      Max  : Integer) return System.Unsigned_Types.Long_Long_Unsigned;\n    --  This function scans the string starting at Str (Ptr.all) for a valid\n    --  integer according to the syntax described in (RM 3.5(43)). The substring\n    --  scanned extends no further than Str (Max). There are three cases for the\n@@ -71,8 +70,7 @@ pragma Pure (Val_LLU);\n    --  is greater than Max as required in this case.\n \n    function Value_Long_Long_Unsigned\n-     (Str : String)\n-     return System.Unsigned_Types.Long_Long_Unsigned;\n+     (Str : String) return System.Unsigned_Types.Long_Long_Unsigned;\n    --  Used in computing X'Value (Str) where X is a modular integer type whose\n    --  modulus exceeds the range of System.Unsigned_Types.Unsigned. Str is the\n    --  string argument of the attribute. Constraint_Error is raised if the"}, {"sha": "0c5128e5dff935ee0d48ef5d4cbd42d1f3e899bf", "filename": "gcc/ada/s-valrea.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valrea.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -4,9 +4,9 @@\n --                                                                          --\n --                      S Y S T E M . V A L _ R E A L                       --\n --                                                                          --\n---                                 S p e c                                  --\n+--                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,8 +43,7 @@ package body System.Val_Real is\n    function Scan_Real\n      (Str  : String;\n       Ptr  : access Integer;\n-      Max  : Integer)\n-      return Long_Long_Float\n+      Max  : Integer) return Long_Long_Float\n    is\n       procedure Reset;\n       pragma Import (C, Reset, \"__gnat_init_float\");\n@@ -369,7 +368,6 @@ package body System.Val_Real is\n             return Uval;\n          end if;\n       end if;\n-\n    end Scan_Real;\n \n    ----------------\n@@ -384,7 +382,6 @@ package body System.Val_Real is\n       V := Scan_Real (Str, P'Access, Str'Last);\n       Scan_Trailing_Blanks (Str, P);\n       return V;\n-\n    end Value_Real;\n \n end System.Val_Real;"}, {"sha": "2d01468f4082ebb1483bb565c11d06bcb5adbe68", "filename": "gcc/ada/s-valrea.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fs-valrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valrea.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,8 +37,7 @@ pragma Pure (Val_Real);\n    function Scan_Real\n      (Str  : String;\n       Ptr  : access Integer;\n-      Max  : Integer)\n-      return Long_Long_Float;\n+      Max  : Integer) return Long_Long_Float;\n    --  This function scans the string starting at Str (Ptr.all) for a valid\n    --  real literal according to the syntax described in (RM 3.5(43)). The\n    --  substring scanned extends no further than Str (Max). There are three"}, {"sha": "3cbce8c5bd2641d9e8bb47438e2a29b671b29e20", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -45,8 +45,8 @@ package body Scn is\n    --  keyword as an identifier once for a given keyword).\n \n    procedure Check_End_Of_Line;\n-   --  Called when end of line encountered. Checks that line is not\n-   --  too long, and that other style checks for the end of line are met.\n+   --  Called when end of line encountered. Checks that line is not too long,\n+   --  and that other style checks for the end of line are met.\n \n    function Determine_License return License_Type;\n    --  Scan header of file and check that it has an appropriate GNAT-style"}, {"sha": "c1ee9ca1ba4200529706cb0d7b1feb25ff4d1ed4", "filename": "gcc/ada/seh_init.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fseh_init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fseh_init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fseh_init.c?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -36,7 +36,6 @@\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n-#include <sys/stat.h>\n \n /* We don't have libiberty, so us malloc.  */\n #define xmalloc(S) malloc (S)"}, {"sha": "cc71e21f35877bd4d7e4fe5e6e3655745b464751", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -425,7 +425,6 @@ package body Sem_Dist is\n                            (Loc, New_External_Name (\n                                    Chars (User_Type), 'R'));\n \n-\n       Full_Obj_Type  : constant Entity_Id :=\n                          Make_Defining_Identifier\n                            (Loc, Chars (Obj_Type));"}, {"sha": "50c46591a72ac0c803213379fd23c1073d62780d", "filename": "gcc/ada/sem_elim.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fsem_elim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fsem_elim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1997-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -58,6 +58,4 @@ package Sem_Elim is\n    --  subprogram. N is the node for the call, and E is the entity of\n    --  the subprogram being eliminated.\n \n-\n-\n end Sem_Elim;"}, {"sha": "c507d972bfc2ab29b9d6929e9e60462021e1071b", "filename": "gcc/ada/system-hpux-ia64.ads", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fsystem-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fsystem-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux-ia64.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -0,0 +1,153 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                            (HP-UX/ia64 Version)                          --\n+--                                                                          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Compiler_System_Version   : constant Boolean := False;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}, {"sha": "c3fda4a640fcbe3eb1661336e0aa2865b3a2b108", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -628,7 +628,6 @@ package body Targparm is\n          end loop;\n       end if;\n \n-\n       if Fatal then\n          raise Unrecoverable_Error;\n       end if;"}, {"sha": "114d2a3ab9cc97b731d78298aa4b8f2468a1f86d", "filename": "gcc/ada/uname.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Funame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Funame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -527,8 +527,7 @@ package body Uname is\n \n    function New_Child\n      (Old  : Unit_Name_Type;\n-      Newp : Unit_Name_Type)\n-      return Unit_Name_Type\n+      Newp : Unit_Name_Type) return Unit_Name_Type\n    is\n       P : Natural;\n "}, {"sha": "d96780a46c5c53557bb9a12c001d115f8413f918", "filename": "gcc/ada/uname.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Funame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Funame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.ads?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1998, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -140,8 +140,7 @@ package Uname is\n \n    function New_Child\n      (Old  : Unit_Name_Type;\n-      Newp : Unit_Name_Type)\n-      return Unit_Name_Type;\n+      Newp : Unit_Name_Type) return Unit_Name_Type;\n    --   Old is a child unit name (for either a body or spec). Newp is the\n    --   unit name of the actual parent (this may be different from the\n    --   parent in old). The returned unit name is formed by taking the"}, {"sha": "35afbcc17662f26071b5a2c955385e0a4c608be1", "filename": "gcc/ada/vxaddr2line.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fvxaddr2line.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fvxaddr2line.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvxaddr2line.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2002-2004 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 2002-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,6 +83,7 @@ procedure VxAddr2Line is\n    type Architecture is\n      (SOLARIS_I586,\n       WINDOWS_POWERPC,\n+      WINDOWS_I586,\n       WINDOWS_M68K,\n       SOLARIS_POWERPC,\n       DEC_ALPHA);\n@@ -121,6 +122,11 @@ procedure VxAddr2Line is\n          Nm_Binary           => null,\n          Addr_Digits_To_Skip => 0,\n          Bt_Offset_From_Call => -4),\n+      WINDOWS_I586 =>\n+        (Addr2line_Binary    => null,\n+         Nm_Binary           => null,\n+         Addr_Digits_To_Skip => 0,\n+         Bt_Offset_From_Call => -2),\n       SOLARIS_POWERPC =>\n         (Addr2line_Binary    => null,\n          Nm_Binary           => null,"}, {"sha": "f48561446e47fc7fcd3c2be770c2238bcf948106", "filename": "gcc/ada/xeinfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fxeinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fxeinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxeinfo.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,7 +25,7 @@\n ------------------------------------------------------------------------------\n \n --  Program to construct C header file a-einfo.h (C version of einfo.ads spec)\n---  for use by Gigi. This header file contaInF all definitions and access\n+--  for use by Gigi. This header file contains all definitions and access\n --  functions, but does not contain set procedures, since Gigi is not allowed\n --  to modify the GNAT tree)\n "}, {"sha": "bddbfc83f3ebe490ad7d702e07493de62fd3f8e4", "filename": "gcc/ada/xnmake.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fxnmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fxnmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxnmake.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -283,8 +283,12 @@ begin\n          end loop;\n       end if;\n \n+      --  Loop keeps going until \"package\" keyword written\n+\n       exit when Match (Line, \"package\");\n \n+      --  Deal with WITH lines, writing to body or spec as appropriate\n+\n       if Match (Line, Body_Only, M) then\n          Replace (M, X);\n          WriteB (Line);\n@@ -293,13 +297,17 @@ begin\n          Replace (M, X);\n          WriteS (Line);\n \n+      --  Change header from Template to Spec and write to spec file\n+\n       else\n          if Match (Line, Templ, M) then\n             Replace (M, A &  \"    S p e c    \");\n          end if;\n \n          WriteS (Line);\n \n+         --  Write header line to body file\n+\n          if Match (Line, Spec, M) then\n             Replace (M, A &  \"B o d y\");\n          end if;"}, {"sha": "6e8948eca6ffebee8d43957a7d97078d522bae56", "filename": "gcc/ada/xsinfo.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fxsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fxsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsinfo.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -88,9 +88,12 @@ procedure XSinfo is\n \n    M : Match_Result;\n \n-\n    procedure Getline;\n-   --  Get non-comment, non-blank line. Also skips \"for \" rep clauses.\n+   --  Get non-comment, non-blank line. Also skips \"for \" rep clauses\n+\n+   -------------\n+   -- Getline --\n+   -------------\n \n    procedure Getline is\n    begin"}, {"sha": "5f80ac5ba89c6b044e97a3a4213d67832519b4c9", "filename": "gcc/ada/xsnames.adb", "status": "modified", "additions": 100, "deletions": 5, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fxsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84fdd8a35ecef52e58198b55ac169e9f921ecd7f/gcc%2Fada%2Fxsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsnames.adb?ref=84fdd8a35ecef52e58198b55ac169e9f921ecd7f", "patch": "@@ -24,10 +24,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This utility is used to make a new version of the Snames package when\n---  new names are added to the spec, the existing versions of snames.ads and\n---  snames.adb are read, and updated to match the set of names in snames.ads.\n---  The updated versions are written to snames.ns and snames.nb (new spec/body)\n+--  This utility is used to make a new version of the Snames package when new\n+--  names are added to the spec, the existing versions of snames.ads and\n+--  snames.adb and snames.h are read, and updated to match the set of names in\n+--  snames.ads. The updated versions are written to snames.ns, snames.nb (new\n+--  spec/body), and snames.nh (new header file).\n \n with Ada.Strings.Unbounded;         use Ada.Strings.Unbounded;\n with Ada.Strings.Unbounded.Text_IO; use Ada.Strings.Unbounded.Text_IO;\n@@ -44,6 +45,8 @@ procedure XSnames is\n    InS  : File_Type;\n    OutS : File_Type;\n    OutB : File_Type;\n+   InH  : File_Type;\n+   OutH : File_Type;\n \n    A, B    : VString := Nul;\n    Line    : VString := Nul;\n@@ -74,12 +77,90 @@ procedure XSnames is\n \n    M : Match_Result;\n \n+   type Header_Symbol is (None, Attr, Conv, Prag);\n+   --  A symbol in the header file\n+\n+   --  Prefixes used in the header file\n+\n+   Header_Attr : aliased String := \"Attr\";\n+   Header_Conv : aliased String := \"Convention\";\n+   Header_Prag : aliased String := \"Pragma\";\n+\n+   type String_Ptr is access all String;\n+   Header_Prefix : constant array (Header_Symbol) of String_Ptr :=\n+                     (null,\n+                      Header_Attr'Access,\n+                      Header_Conv'Access,\n+                      Header_Prag'Access);\n+\n+   --  Patterns used in the spec file\n+\n+   Get_Attr : Pattern := Span (' ') & \"Attribute_\" & Break (\",)\") * Name1;\n+   Get_Conv : Pattern := Span (' ') & \"Convention_\" & Break (\",)\") * Name1;\n+   Get_Prag : Pattern := Span (' ') & \"Pragma_\" & Break (\",)\") * Name1;\n+\n+   type Header_Symbol_Counter is array (Header_Symbol) of Natural;\n+   Header_Counter : Header_Symbol_Counter := (0, 0, 0, 0);\n+\n+   Header_Current_Symbol : Header_Symbol := None;\n+   Header_Pending_Line : VString := Nul;\n+\n+   ------------------------\n+   -- Output_Header_Line --\n+   ------------------------\n+\n+   procedure Output_Header_Line (S : Header_Symbol) is\n+   begin\n+      --  Skip all the #define for S-prefixed symbols in the header.\n+      --  Of course we are making implicit assumptions:\n+      --   (1) No newline between symbols with the same prefix.\n+      --   (2) Prefix order is the same as in snames.ads.\n+\n+      if Header_Current_Symbol /= S then\n+         declare\n+            Pat : String := \"#define  \" & Header_Prefix (S).all;\n+            In_Pat : Boolean := False;\n+\n+         begin\n+            if Header_Current_Symbol /= None then\n+               Put_Line (OutH, Header_Pending_Line);\n+            end if;\n+\n+            loop\n+               Line := Get_Line (InH);\n+\n+               if Match (Line, Pat) then\n+                  In_Pat := true;\n+               elsif In_Pat then\n+                  Header_Pending_Line := Line;\n+                  exit;\n+               else\n+                  Put_Line (OutH, Line);\n+               end if;\n+            end loop;\n+\n+            Header_Current_Symbol := S;\n+         end;\n+      end if;\n+\n+      --  Now output the line\n+\n+      Put_Line (OutH, \"#define  \" & Header_Prefix (S).all\n+                  & \"_\" & Name1 & (30 - Length (Name1)) * ' '\n+                  & Header_Counter (S));\n+      Header_Counter (S) := Header_Counter (S) + 1;\n+   end Output_Header_Line;\n+\n+--  Start of processing for XSnames\n+\n begin\n    Open (InB, In_File, \"snames.adb\");\n    Open (InS, In_File, \"snames.ads\");\n+   Open (InH, In_File, \"snames.h\");\n \n    Create (OutS, Out_File, \"snames.ns\");\n    Create (OutB, Out_File, \"snames.nb\");\n+   Create (OutH, Out_File, \"snames.nh\");\n \n    Anchored_Mode := True;\n    Oname := Nul;\n@@ -99,6 +180,13 @@ begin\n       if not Match (Line, Name_Ref) then\n          Put_Line (OutS, Line);\n \n+         if Match (Line, Get_Attr) then\n+            Output_Header_Line (Attr);\n+         elsif Match (Line, Get_Conv) then\n+            Output_Header_Line (Conv);\n+         elsif Match (Line, Get_Prag) then\n+            Output_Header_Line (Prag);\n+         end if;\n       else\n          Oval := Lpad (V (Val), 3, '0');\n \n@@ -144,6 +232,13 @@ begin\n    Put_Line (OutB, Line);\n \n    while not End_Of_File (InB) loop\n-      Put_Line (OutB, Get_Line (InB));\n+      Line := Get_Line (InB);\n+      Put_Line (OutB, Line);\n+   end loop;\n+\n+   Put_Line (OutH, Header_Pending_Line);\n+   while not End_Of_File (InH) loop\n+      Line := Get_Line (InH);\n+      Put_Line (OutH, Line);\n    end loop;\n end XSnames;"}]}