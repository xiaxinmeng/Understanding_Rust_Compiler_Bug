{"sha": "0dba73e0ab4dba1f4f4850f326950bc91581329e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRiYTczZTBhYjRkYmExZjRmNDg1MGYzMjY5NTBiYzkxNTgxMzI5ZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-04-09T21:19:55Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-04-09T21:19:55Z"}, "message": "localefwd.h (locale::_Impl::_M_facets): Change from pointer to vector.\n\n\n2002-04-09  Benjamin Kosnik  <bkoz@redhat.com>\n\n        libstdc++/1072\n        * include/bits/localefwd.h (locale::_Impl::_M_facets): Change from\n        pointer to vector.\n        Remove forward declaration of vector.\n        Include vector.\n        * include/bits/locale_facets.tcc: Remove vector include.\n        (use_locale): Adjust.\n        (has_locale): Adjust.\n        * src/locale.cc: Adjust.\n        * src/localename.cc: Same.\n\nFrom-SVN: r52095", "tree": {"sha": "0b2f11adc74771559ca399c135af50f2535e53cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b2f11adc74771559ca399c135af50f2535e53cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dba73e0ab4dba1f4f4850f326950bc91581329e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dba73e0ab4dba1f4f4850f326950bc91581329e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dba73e0ab4dba1f4f4850f326950bc91581329e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dba73e0ab4dba1f4f4850f326950bc91581329e/comments", "author": null, "committer": null, "parents": [{"sha": "b47374fa9bcf1d1349d9292610b8878692dd0ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47374fa9bcf1d1349d9292610b8878692dd0ee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b47374fa9bcf1d1349d9292610b8878692dd0ee0"}], "stats": {"total": 94, "additions": 45, "deletions": 49}, "files": [{"sha": "841bb477a13889f6dc64b9cea7b92d2071e307ae", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0dba73e0ab4dba1f4f4850f326950bc91581329e", "patch": "@@ -1,3 +1,16 @@\n+2002-04-09  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++/1072\n+\t* include/bits/localefwd.h (locale::_Impl::_M_facets): Change from\n+\tpointer to vector.\n+\tRemove forward declaration of vector.\n+\tInclude vector.\n+\t* include/bits/locale_facets.tcc: Remove vector include.\n+\t(use_locale): Adjust.\n+\t(has_locale): Adjust.\n+\t* src/locale.cc: Adjust.\n+\t* src/localename.cc: Same.\n+\t\n 2002-04-09  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Richard Henderson  <rth@redhat.com>\n "}, {"sha": "d81406ff4b1522b2db88fb3a61bb784a20cc7e69", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=0dba73e0ab4dba1f4f4850f326950bc91581329e", "patch": "@@ -42,7 +42,6 @@\n #include <cctype>    // For isspace\n #include <limits>    // For numeric_limits\n #include <bits/streambuf_iterator.h>\n-#include <vector>\t\n #include <typeinfo>  // For bad_cast.\n \n namespace std\n@@ -72,9 +71,9 @@ namespace std\n     use_facet(const locale& __loc)\n     {\n       size_t __i = _Facet::id._M_index;\n-      locale::_Impl::__vec_facet* __facet = __loc._M_impl->_M_facets;\n-      const locale::facet* __fp = (*__facet)[__i]; \n-      if (__fp == 0 || __i >= __facet->size())\n+      locale::_Impl::__vec_facet& __facet = __loc._M_impl->_M_facets;\n+      const locale::facet* __fp = __facet[__i]; \n+      if (__fp == 0 || __i >= __facet.size())\n         __throw_bad_cast();\n       return static_cast<const _Facet&>(*__fp);\n     }\n@@ -84,8 +83,8 @@ namespace std\n     has_facet(const locale& __loc) throw()\n     {\n       size_t __i = _Facet::id._M_index;\n-      locale::_Impl::__vec_facet* __facet = __loc._M_impl->_M_facets;\n-      return (__i < __facet->size() && (*__facet)[__i] != 0);\n+      locale::_Impl::__vec_facet& __facet = __loc._M_impl->_M_facets;\n+      return (__i < __facet.size() && __facet[__i] != 0);\n     }\n \n "}, {"sha": "c80da641490c1a78f18f10ebd4936a2d4435d1e9", "filename": "libstdc++-v3/include/bits/localefwd.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h?ref=0dba73e0ab4dba1f4f4850f326950bc91581329e", "patch": "@@ -46,7 +46,8 @@\n #include <bits/c++locale.h>     // Defines __c_locale, config-specific includes\n #include <climits>\t\t// For CHAR_BIT\n #include <cctype>\t\t// For isspace, etc.\n-#include <string> \t\t// For string\n+#include <string> \t\t// For string.\n+#include <vector>\t\t// For vector.\n #include <bits/functexcept.h>\n \n #include <bits/atomicity.h>\n@@ -61,8 +62,6 @@ namespace std\n #endif\n \n   // 22.1.1 Locale\n-  template<typename _Tp, typename _Alloc> \n-    class vector;\n   class locale;\n \n   // 22.1.3 Convenience interfaces\n@@ -320,7 +319,7 @@ namespace std\n   private:\n     // Data Members.\n     _Atomic_word\t\t\t_M_references;\n-    __vec_facet* \t\t\t_M_facets;\n+    __vec_facet \t\t\t_M_facets;\n     string \t\t\t\t_M_names[_S_num_categories];\n     static const locale::id* const \t_S_id_ctype[];\n     static const locale::id* const \t_S_id_numeric[];"}, {"sha": "0b1056c045d43e219bd156019e2d2705e8ab0978", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=0dba73e0ab4dba1f4f4850f326950bc91581329e", "patch": "@@ -500,7 +500,7 @@ namespace std\n     {\n       size_t __i = ctype<char>::id._M_index;\n       const locale::_Impl* __tmp = __loc._M_impl;\n-      return static_cast<const ctype<char>&>(* (*(__tmp->_M_facets))[__i]);\n+      return static_cast<const ctype<char>&>(*(__tmp->_M_facets[__i]));\n     }\n \n #ifdef _GLIBCPP_USE_WCHAR_T\n@@ -510,7 +510,7 @@ namespace std\n     {\n       size_t __i = ctype<wchar_t>::id._M_index;\n       const locale::_Impl* __tmp = __loc._M_impl;\n-      return static_cast<const ctype<wchar_t>&>(* (*(__tmp->_M_facets))[__i]);\n+      return static_cast<const ctype<wchar_t>&>(*(__tmp->_M_facets[__i]));\n     }\n #endif\n "}, {"sha": "53c9e8a0347d68b30d67ba262d336cbaf6d5064d", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 22, "deletions": 37, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dba73e0ab4dba1f4f4850f326950bc91581329e/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=0dba73e0ab4dba1f4f4850f326950bc91581329e", "patch": "@@ -36,39 +36,33 @@ namespace std\n   locale::_Impl::\n   ~_Impl() throw()\n   {\n-    __vec_facet::iterator it = _M_facets->begin();\n-    for (; it != _M_facets->end(); ++it)\n-      if (*it)\n-\t(*it)->_M_remove_reference();\n-    delete _M_facets;\n+    __vec_facet::iterator __it = _M_facets.begin();\n+    __vec_facet::iterator __end = _M_facets.end();\n+    for (; __it != __end; ++__it)\n+      if (*__it)\n+\t(*__it)->_M_remove_reference();\n   }\n \n   // Clone existing _Impl object.\n   locale::_Impl::\n   _Impl(const _Impl& __imp, size_t __refs)\n-  : _M_references(__refs), _M_facets(0) // XXX\n+  : _M_references(__refs) // XXX\n   {\n-    try\n-      {  _M_facets = new __vec_facet(*(__imp._M_facets)); }\n-    catch(...) \n-      {\n-\tdelete _M_facets;\n-\t__throw_exception_again;\n-      }\n+    _M_facets = __imp._M_facets;\n+    for (size_t __i = 0; __i < _S_num_categories; ++__i)\n+      _M_names[__i] = __imp._M_names[__i];\n \n-    for (size_t i = 0; i < _S_num_categories; ++i)\n-      _M_names[i] = __imp._M_names[i];\n-\n-    __vec_facet::iterator __it = _M_facets->begin();\n-    for (; __it != _M_facets->end(); ++__it)\n+    __vec_facet::iterator __it = _M_facets.begin();\n+    __vec_facet::iterator __end = _M_facets.end();\n+    for (; __it != __end; ++__it)\n       if (*__it)\n \t(*__it)->_M_add_reference();\n   }\n \n   // Construct named _Impl, including the standard \"C\" locale.\n   locale::_Impl::\n   _Impl(string __str, size_t __refs)\n-  : _M_references(__refs), _M_facets(0)\n+  : _M_references(__refs)\n   {\n     // Initialize the underlying locale model, which also checks to\n     // see if the given name is valid.\n@@ -81,14 +75,7 @@ namespace std\n     if (__str != \"C\" && __str != \"POSIX\")\n       __cloc_c = __cloc;\n \n-    // Allocate facet container.\n-    try\n-      {  _M_facets = new __vec_facet(_S_num_facets, NULL); }\n-    catch(...) \n-      {\n-\tdelete _M_facets;\n-\t__throw_exception_again;\n-      }\n+    _M_facets = __vec_facet(_S_num_facets, NULL);\n \n     // Name all the categories.\n     for (size_t i = 0; i < _S_num_categories; ++i)\n@@ -162,12 +149,11 @@ namespace std\n   _M_replace_facet(const _Impl* __imp, const locale::id* __idp)\n   {\n     size_t __index = __idp->_M_index;\n-    if (__index == 0 \n-\t|| __imp->_M_facets->size() <= __index \n-\t|| (*(__imp->_M_facets))[__index] == 0)\n+    if (__index == 0 || __imp->_M_facets.size() <= __index \n+\t|| __imp->_M_facets[__index] == 0)\n       __throw_runtime_error(\"no locale facet\");\n \t\n-    _M_install_facet(__idp, (*(__imp->_M_facets))[__index]); \n+    _M_install_facet(__idp, __imp->_M_facets[__index]); \n   }\n \n   void\n@@ -180,14 +166,13 @@ namespace std\n \tif (!__index)\n \t  __index = 1 + __exchange_and_add(&locale::id::_S_highwater, 1);\n \t\n-\tif (__index >= _M_facets->size())\n-\t  _M_facets->resize(__index + 1, 0);  // might throw\n+\tif (__index >= _M_facets.size())\n+\t  _M_facets.resize(__index + 1, 0);  // might throw\n \n-\tfacet*& __fpr = (*_M_facets)[__index];\n+\tfacet*& __fpr = _M_facets[__index];\n \tif (__fpr)\n \t  {\n-\t    // Replacing an existing facet.\n-\t    // Order matters, here:\n+\t    // Replacing an existing facet. Order matters.\n \t    __fp->_M_add_reference();\n \t    __fpr->_M_remove_reference();\n \t    __fpr = __fp;\n@@ -197,7 +182,7 @@ namespace std\n \t    // Installing a newly created facet into an empty\n \t    // _M_facets container, say a newly-constructed,\n \t    // swanky-fresh _Impl.\n-\t    (*_M_facets)[__index] = __fp;\n+\t    _M_facets[__index] = __fp;\n \t  }\n       }\n   }"}]}