{"sha": "974920dc2411fd05a1ff946e30ad76f396f8fca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc0OTIwZGMyNDExZmQwNWExZmY5NDZlMzBhZDc2ZjM5NmY4ZmNhOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-11-21T07:28:27Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-11-21T07:28:27Z"}, "message": "re PR middle-end/37908 (atomic NAND op generate wrong code; __sync_nand_and_fetch, __sync_fetch_and_nand)\n\n\tPR middle-end/37908\n\t* config/ia64/ia64.c (ia64_expand_atomic_ope): Properly handle NAND\n\tcase by calculating ~(new_reg & val) instead of (~new_reg & val).\n\t* config/ia64/sync.md (sync_nand<mode>): Change insn RTX\n\tto (not:IMODE (and:IMODE (...))).\n\t(sync_old_nand<mode>): Ditto.\n\t(sync_new_nand<mode>): Ditto.\n\nFrom-SVN: r142082", "tree": {"sha": "44c85f248e4d5e6310554b3a6ed9ba19321e9597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44c85f248e4d5e6310554b3a6ed9ba19321e9597"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/974920dc2411fd05a1ff946e30ad76f396f8fca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/974920dc2411fd05a1ff946e30ad76f396f8fca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/974920dc2411fd05a1ff946e30ad76f396f8fca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/974920dc2411fd05a1ff946e30ad76f396f8fca9/comments", "author": null, "committer": null, "parents": [{"sha": "941bcbde52dcef1efc4184d83832a1cb0787c2e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941bcbde52dcef1efc4184d83832a1cb0787c2e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941bcbde52dcef1efc4184d83832a1cb0787c2e4"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "d10c08a045ad066ccc5466ac97dca517ee6823e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/974920dc2411fd05a1ff946e30ad76f396f8fca9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/974920dc2411fd05a1ff946e30ad76f396f8fca9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=974920dc2411fd05a1ff946e30ad76f396f8fca9", "patch": "@@ -1,8 +1,17 @@\n+2008-11-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR middle-end/37908\n+\t* config/ia64/ia64.c (ia64_expand_atomic_ope): Properly handle NAND\n+\tcase by calculating ~(new_reg & val) instead of (~new_reg & val).\n+\t* config/ia64/sync.md (sync_nand<mode>): Change insn RTX\n+\tto (not:IMODE (and:IMODE (...))).\n+\t(sync_old_nand<mode>): Ditto.\n+\t(sync_new_nand<mode>): Ditto.\n+\n 2008-11-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/arm/thumb2.md (thumb2_casesi_internal,\n-\tthumb2_casesi_internal_pic): Use earlyclobber for scratch operand\n-\t4.\n+\tthumb2_casesi_internal_pic): Use earlyclobber for scratch operand 4.\n \n 2008-11-20  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n@@ -102,8 +111,7 @@\n \n \tPR bootstrap/37790\n \t* ira-int.h (ira_copy_allocno_live_range_list,\n-\tira_merge_allocno_live_ranges,\n-\tira_allocno_live_ranges_intersect_p,\n+\tira_merge_allocno_live_ranges, ira_allocno_live_ranges_intersect_p,\n \tira_finish_allocno_live_range_list): New prototypes.\n \t(ira_allocno_live_ranges_intersect_p,\n \tira_pseudo_live_ranges_intersect_p): Remove.\n@@ -176,6 +184,7 @@\n \tare only reductions.\n \n 2008-11-19  Hariharan Sandanagobalane <hariharan@picochip.com>\n+\n \t* config/picochip/picochip.c (headers): Remove an unnecessary\n \theader file.\n "}, {"sha": "ae77a98dec141bfd7462f764eceb56919ca69781", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/974920dc2411fd05a1ff946e30ad76f396f8fca9/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/974920dc2411fd05a1ff946e30ad76f396f8fca9/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=974920dc2411fd05a1ff946e30ad76f396f8fca9", "patch": "@@ -2141,11 +2141,13 @@ ia64_expand_atomic_op (enum rtx_code code, rtx mem, rtx val,\n   new_reg = cmp_reg;\n   if (code == NOT)\n     {\n-      new_reg = expand_simple_unop (DImode, NOT, new_reg, NULL_RTX, true);\n-      code = AND;\n+      new_reg = expand_simple_binop (DImode, AND, new_reg, val, NULL_RTX,\n+\t\t\t\t     true, OPTAB_DIRECT);\n+      new_reg = expand_simple_unop (DImode, code, new_reg, NULL_RTX, true);\n     }\n-  new_reg = expand_simple_binop (DImode, code, new_reg, val, NULL_RTX,\n-\t\t\t\t true, OPTAB_DIRECT);\n+  else\n+    new_reg = expand_simple_binop (DImode, code, new_reg, val, NULL_RTX,\n+\t\t\t\t   true, OPTAB_DIRECT);\n \n   if (mode != DImode)\n     new_reg = gen_lowpart (mode, new_reg);"}, {"sha": "69b5d08274be78a282ed8f7a5202f05095d4b45c", "filename": "gcc/config/ia64/sync.md", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/974920dc2411fd05a1ff946e30ad76f396f8fca9/gcc%2Fconfig%2Fia64%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/974920dc2411fd05a1ff946e30ad76f396f8fca9/gcc%2Fconfig%2Fia64%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsync.md?ref=974920dc2411fd05a1ff946e30ad76f396f8fca9", "patch": "@@ -57,8 +57,9 @@\n \n (define_expand \"sync_nand<mode>\"\n   [(set (match_operand:IMODE 0 \"memory_operand\" \"\")\n-\t(and:IMODE (not:IMODE (match_dup 0))\n-\t  (match_operand:IMODE 1 \"general_operand\" \"\")))]\n+\t(not:IMODE\n+\t  (and:IMODE (match_dup 0)\n+\t\t     (match_operand:IMODE 1 \"general_operand\" \"\"))))]\n   \"\"\n {\n   ia64_expand_atomic_op (NOT, operands[0], operands[1], NULL, NULL);\n@@ -78,9 +79,9 @@\n \n (define_expand \"sync_old_nand<mode>\"\n   [(set (match_operand:IMODE 0 \"gr_register_operand\" \"\")\n-\t(and:IMODE \n-\t  (not:IMODE (match_operand:IMODE 1 \"memory_operand\" \"\"))\n-\t  (match_operand:IMODE 2 \"general_operand\" \"\")))]\n+\t(not:IMODE \n+\t  (and:IMODE (match_operand:IMODE 1 \"memory_operand\" \"\")\n+\t\t     (match_operand:IMODE 2 \"general_operand\" \"\"))))]\n   \"\"\n {\n   ia64_expand_atomic_op (NOT, operands[1], operands[2], operands[0], NULL);\n@@ -100,9 +101,9 @@\n \n (define_expand \"sync_new_nand<mode>\"\n   [(set (match_operand:IMODE 0 \"gr_register_operand\" \"\")\n-\t(and:IMODE \n-\t  (not:IMODE (match_operand:IMODE 1 \"memory_operand\" \"\"))\n-\t  (match_operand:IMODE 2 \"general_operand\" \"\")))]\n+\t(not:IMODE \n+\t  (and:IMODE (match_operand:IMODE 1 \"memory_operand\" \"\")\n+\t\t     (match_operand:IMODE 2 \"general_operand\" \"\"))))]\n   \"\"\n {\n   ia64_expand_atomic_op (NOT, operands[1], operands[2], NULL, operands[0]);"}, {"sha": "38c36f20a2ceaa798c2eef211c93b6385ca0436d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/974920dc2411fd05a1ff946e30ad76f396f8fca9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/974920dc2411fd05a1ff946e30ad76f396f8fca9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=974920dc2411fd05a1ff946e30ad76f396f8fca9", "patch": "@@ -15,7 +15,7 @@\n \tmemcpy optimized into ref-all store.\n \t* gcc.dg/pr29215.c: New test.\n \n-2008-11-19  Uros Bizjak  <ubizjak@gmail.com>\n+2008-11-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/38151\n \t* gcc.target/i386/pr38151-1.c: New test."}]}