{"sha": "fe5b6c1c500c808353b51952d8165005bb8ef3e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU1YjZjMWM1MDBjODA4MzUzYjUxOTUyZDgxNjUwMDViYjhlZjNlMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2001-11-14T12:53:09Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2001-11-14T12:53:09Z"}, "message": "decl.c (check_initializer): Try to complete the type of an array element before checking whether it's complete.\n\n        * decl.c (check_initializer): Try to complete the type of an\n        array element before checking whether it's complete.  Don't\n        complain about arrays with complete element types but an\n        unknown size.\n        (cp_finish_decl): Build the hierarchical constructor before\n        calling maybe_deduce_size_from_array_init.\n\nFrom-SVN: r47008", "tree": {"sha": "116ca930c48210e644eea48ac68af51c8a8e845c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/116ca930c48210e644eea48ac68af51c8a8e845c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe5b6c1c500c808353b51952d8165005bb8ef3e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5b6c1c500c808353b51952d8165005bb8ef3e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe5b6c1c500c808353b51952d8165005bb8ef3e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5b6c1c500c808353b51952d8165005bb8ef3e2/comments", "author": null, "committer": null, "parents": [{"sha": "b1bba9c0cb98dea68a9a9858cd8f40516969470b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1bba9c0cb98dea68a9a9858cd8f40516969470b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1bba9c0cb98dea68a9a9858cd8f40516969470b"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "5717f57bb46de90d49ca27a4b2d1d8bd6a5af074", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe5b6c1c500c808353b51952d8165005bb8ef3e2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe5b6c1c500c808353b51952d8165005bb8ef3e2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fe5b6c1c500c808353b51952d8165005bb8ef3e2", "patch": "@@ -1,3 +1,12 @@\n+2001-11-14  Richard Sandiford  <rsandifo@redhat.com>\n+\n+        * decl.c (check_initializer): Try to complete the type of an\n+        array element before checking whether it's complete.  Don't\n+        complain about arrays with complete element types but an\n+        unknown size.\n+        (cp_finish_decl): Build the hierarchical constructor before\n+        calling maybe_deduce_size_from_array_init.\n+\n 2001-11-14  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* Make-lang.in: Change all uses of $(manext) to $(man1ext)."}, {"sha": "39708f9114b5985a12ad00d52008cde35737a1c4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe5b6c1c500c808353b51952d8165005bb8ef3e2/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe5b6c1c500c808353b51952d8165005bb8ef3e2/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=fe5b6c1c500c808353b51952d8165005bb8ef3e2", "patch": "@@ -7709,12 +7709,12 @@ check_initializer (decl, init)\n \t  init = NULL_TREE;\n \t}\n       else if (TREE_CODE (type) == ARRAY_TYPE\n-\t       && !COMPLETE_TYPE_P (TREE_TYPE (type)))\n+\t       && !COMPLETE_TYPE_P (complete_type (TREE_TYPE (type))))\n \t{\n \t  cp_error (\"elements of array `%#D' have incomplete type\", decl);\n \t  init = NULL_TREE;\n \t}\n-      else if (!COMPLETE_TYPE_P (type))\n+      else if (TREE_CODE (type) != ARRAY_TYPE && !COMPLETE_TYPE_P (type))\n \t{\n \t  cp_error (\"`%D' has incomplete type\", decl);\n \t  TREE_TYPE (decl) = error_mark_node;\n@@ -8154,8 +8154,8 @@ cp_finish_decl (decl, init, asmspec_tree, flags)\n     }\n \n   /* Deduce size of array from initialization, if not already known.  */\n-  maybe_deduce_size_from_array_init (decl, init);\n   init = check_initializer (decl, init);\n+  maybe_deduce_size_from_array_init (decl, init);\n \n   GNU_xref_decl (current_function_decl, decl);\n "}]}