{"sha": "db52bcfe4a0ef1bae9ed52b4e51af085f71c984d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI1MmJjZmU0YTBlZjFiYWU5ZWQ1MmI0ZTUxYWYwODVmNzFjOTg0ZA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-10-10T15:08:04Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-10-10T21:34:24Z"}, "message": "[nvptx] Factor out write_fn_proto_1\n\nFactor out write_fn_proto_1 from write_fn_proto.\n\nTested check-gcc on nvptx.\n\nTested libgomp on x86_64-linux with nvptx accelerator.\n\ngcc/ChangeLog:\n\n2020-10-10  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.c (write_fn_proto_1): New function, factored out\n\tof ...\n\t(write_fn_proto): ... here.  Return void.", "tree": {"sha": "d90c03acaf19aba87bddcc0b0a1099f81b03df9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d90c03acaf19aba87bddcc0b0a1099f81b03df9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db52bcfe4a0ef1bae9ed52b4e51af085f71c984d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db52bcfe4a0ef1bae9ed52b4e51af085f71c984d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db52bcfe4a0ef1bae9ed52b4e51af085f71c984d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db52bcfe4a0ef1bae9ed52b4e51af085f71c984d/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2137aa92412da363d52ef699987441be28b239d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2137aa92412da363d52ef699987441be28b239d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2137aa92412da363d52ef699987441be28b239d0"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "0c1d6d112ec89e5dcd1e5328081cda66f2b994ed", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db52bcfe4a0ef1bae9ed52b4e51af085f71c984d/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db52bcfe4a0ef1bae9ed52b4e51af085f71c984d/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=db52bcfe4a0ef1bae9ed52b4e51af085f71c984d", "patch": "@@ -827,26 +827,12 @@ write_var_marker (FILE *file, bool is_defn, bool globalize, const char *name)\n   fputs (\"\\n\", file);\n }\n \n-/* Write a .func or .kernel declaration or definition along with\n-   a helper comment for use by ld.  S is the stream to write to, DECL\n-   the decl for the function with name NAME.   For definitions, emit\n-   a declaration too.  */\n+/* Helper function for write_fn_proto.  */\n \n-static const char *\n-write_fn_proto (std::stringstream &s, bool is_defn,\n-\t\tconst char *name, const_tree decl)\n+static void\n+write_fn_proto_1 (std::stringstream &s, bool is_defn,\n+\t\t  const char *name, const_tree decl)\n {\n-  if (is_defn)\n-    /* Emit a declaration. The PTX assembler gets upset without it.   */\n-    name = write_fn_proto (s, false, name, decl);\n-  else\n-    {\n-      /* Avoid repeating the name replacement.  */\n-      name = nvptx_name_replacement (name);\n-      if (name[0] == '*')\n-\tname++;\n-    }\n-\n   write_fn_marker (s, is_defn, TREE_PUBLIC (decl), name);\n \n   /* PTX declaration.  */\n@@ -929,8 +915,26 @@ write_fn_proto (std::stringstream &s, bool is_defn,\n     s << \")\";\n \n   s << (is_defn ? \"\\n\" : \";\\n\");\n+}\n \n-  return name;\n+/* Write a .func or .kernel declaration or definition along with\n+   a helper comment for use by ld.  S is the stream to write to, DECL\n+   the decl for the function with name NAME.  For definitions, emit\n+   a declaration too.  */\n+\n+static void\n+write_fn_proto (std::stringstream &s, bool is_defn,\n+\t\tconst char *name, const_tree decl)\n+{\n+  name = nvptx_name_replacement (name);\n+  if (name[0] == '*')\n+    name++;\n+\n+  if (is_defn)\n+    /* Emit a declaration.  The PTX assembler gets upset without it.  */\n+    write_fn_proto_1 (s, false, name, decl);\n+\n+  write_fn_proto_1 (s, is_defn, name, decl);\n }\n \n /* Construct a function declaration from a call insn.  This can be"}]}