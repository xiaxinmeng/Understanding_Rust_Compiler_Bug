{"sha": "6df8934f6ad73b97181fc0a997b3eb8cd799b6a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRmODkzNGY2YWQ3M2I5NzE4MWZjMGE5OTdiM2ViOGNkNzk5YjZhMA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-11-28T19:24:35Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-11-28T19:24:35Z"}, "message": "Reject fix-it hints for various awkward boundary cases (PR c/82050)\n\nPR c/82050 reports a failed assertion deep within diagnostic_show_locus's\ncode for printing fix-it hints.\n\nThe root cause is a fix-it hint suggesting a textual replacement,\nwhere the affected column numbers straddle the LINE_MAP_MAX_COLUMN_NUMBER\nboundary, so that the start of the range has a column number, but the\nend of the range doesn't.\n\nThe fix is to verify that the column numbers are sane when adding fix-it\nhints to a rich_location, rejecting fix-it hints where they are not.\n\nlibcpp/ChangeLog:\n\tPR c/82050\n\t* include/line-map.h (LINE_MAP_MAX_COLUMN_NUMBER): Move here.\n\t* line-map.c (LINE_MAP_MAX_COLUMN_NUMBER): ...from here.\n\t(rich_location::maybe_add_fixit): Reject fix-it hints in which\n\tthe start column exceeds the next column.\n\nFrom-SVN: r255214", "tree": {"sha": "573d13446d8c970c3e108f5272ecd2119546e821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/573d13446d8c970c3e108f5272ecd2119546e821"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5cf5e116da6f5c018ecc8f714935877c4636780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5cf5e116da6f5c018ecc8f714935877c4636780", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5cf5e116da6f5c018ecc8f714935877c4636780"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "2250b7716d2a54ff3d30a78a35505479105cfd91", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=6df8934f6ad73b97181fc0a997b3eb8cd799b6a0", "patch": "@@ -1,3 +1,11 @@\n+2017-11-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/82050\n+\t* include/line-map.h (LINE_MAP_MAX_COLUMN_NUMBER): Move here.\n+\t* line-map.c (LINE_MAP_MAX_COLUMN_NUMBER): ...from here.\n+\t(rich_location::maybe_add_fixit): Reject fix-it hints in which\n+\tthe start column exceeds the next column.\n+\n 2017-11-20  Eric Gallager  <egall@gwmail.gwu.edu>\n \n \tPR preprocessor/81794"}, {"sha": "11514845881bbc91482d5c0083fe086979feb0cc", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=6df8934f6ad73b97181fc0a997b3eb8cd799b6a0", "patch": "@@ -280,6 +280,11 @@ enum lc_reason\n    worked example in libcpp/location-example.txt.  */\n typedef unsigned int source_location;\n \n+/* Do not track column numbers higher than this one.  As a result, the\n+   range of column_bits is [12, 18] (or 0 if column numbers are\n+   disabled).  */\n+const unsigned int LINE_MAP_MAX_COLUMN_NUMBER = (1U << 12);\n+\n /* Do not pack ranges if locations get higher than this.\n    If you change this, update:\n      gcc.dg/plugin/location-overflow-test-*.c.  */"}, {"sha": "ac621e9585c2da1dcabe60d3fa737ba0fec702fc", "filename": "libcpp/line-map.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df8934f6ad73b97181fc0a997b3eb8cd799b6a0/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=6df8934f6ad73b97181fc0a997b3eb8cd799b6a0", "patch": "@@ -26,11 +26,6 @@ along with this program; see the file COPYING3.  If not see\n #include \"internal.h\"\n #include \"hashtab.h\"\n \n-/* Do not track column numbers higher than this one.  As a result, the\n-   range of column_bits is [12, 18] (or 0 if column numbers are\n-   disabled).  */\n-const unsigned int LINE_MAP_MAX_COLUMN_NUMBER = (1U << 12);\n-\n /* Highest possible source location encoded within an ordinary or\n    macro map.  */\n const source_location LINE_MAP_MAX_SOURCE_LOCATION = 0x70000000;\n@@ -2352,6 +2347,14 @@ rich_location::maybe_add_fixit (source_location start,\n       stop_supporting_fixits ();\n       return;\n     }\n+  /* The columns must be in the correct order.  This can fail if the\n+     endpoints straddle the boundary for which the linemap can represent\n+     columns (PR c/82050).  */\n+  if (exploc_start.column > exploc_next_loc.column)\n+    {\n+      stop_supporting_fixits ();\n+      return;\n+    }\n \n   const char *newline = strchr (new_content, '\\n');\n   if (newline)"}]}