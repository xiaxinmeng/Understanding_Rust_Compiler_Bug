{"sha": "94b8de97c4774b6c44e42845085d1517563a81de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRiOGRlOTdjNDc3NGI2YzQ0ZTQyODQ1MDg1ZDE1MTc1NjNhODFkZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-02-18T08:36:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-02-18T08:36:27Z"}, "message": "basic_file_stdio.cc (__gnu_internal::xwritev): Rewrite, avoiding recursion.\n\n2004-02-18  Paolo Carlini  <pcarlini@suse.de>\n\n\t* config/io/basic_file_stdio.cc (__gnu_internal::xwritev):\n\tRewrite, avoiding recursion.\n\t(__gnu_internal::xwrite): Minor tweaks.\n\nFrom-SVN: r78015", "tree": {"sha": "27649f2406ed864798c973f4333fb7b40794a345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27649f2406ed864798c973f4333fb7b40794a345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94b8de97c4774b6c44e42845085d1517563a81de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b8de97c4774b6c44e42845085d1517563a81de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b8de97c4774b6c44e42845085d1517563a81de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b8de97c4774b6c44e42845085d1517563a81de/comments", "author": null, "committer": null, "parents": [{"sha": "9c56033feb5c28ac49e8da1c28ce73b8761c2bef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c56033feb5c28ac49e8da1c28ce73b8761c2bef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c56033feb5c28ac49e8da1c28ce73b8761c2bef"}], "stats": {"total": 57, "additions": 38, "deletions": 19}, "files": [{"sha": "822c78172ee043bb7d557944f1067f4ebc082baa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b8de97c4774b6c44e42845085d1517563a81de/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b8de97c4774b6c44e42845085d1517563a81de/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=94b8de97c4774b6c44e42845085d1517563a81de", "patch": "@@ -1,3 +1,9 @@\n+2004-02-18  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* config/io/basic_file_stdio.cc (__gnu_internal::xwritev):\n+\tRewrite, avoiding recursion.\n+\t(__gnu_internal::xwrite): Minor tweaks.\n+\n 2004-02-17  Stefan Olsson  <stefan@xapa.se>\n \n \t* include/ext/mt_allocator.h: Removed the last"}, {"sha": "53c1a26a472091f8f6c6e6f4c4fd8c3f82fd77f7", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 32, "deletions": 19, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b8de97c4774b6c44e42845085d1517563a81de/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b8de97c4774b6c44e42845085d1517563a81de/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=94b8de97c4774b6c44e42845085d1517563a81de", "patch": "@@ -111,16 +111,22 @@ namespace __gnu_internal\n   xwrite(int __fd, const char* __s, std::streamsize __n)\n   {\n     std::streamsize __nleft = __n;\n-    while (__nleft > 0)\n+\n+    for (;;)\n       {\n \tconst std::streamsize __ret = write(__fd, __s, __nleft);\n \tif (__ret == -1L && errno == EINTR)\n \t  continue;\n-\telse if (__ret == -1L)\n+\tif (__ret == -1L)\n \t  break;\n+\n \t__nleft -= __ret;\n+\tif (__nleft == 0)\n+\t  break;\n+\n \t__s += __ret;\n       }\n+\n     return __n - __nleft;\n   }\n \n@@ -130,33 +136,40 @@ namespace __gnu_internal\n   xwritev(int __fd, const char* __s1, std::streamsize __n1,\n \t  const char* __s2, std::streamsize __n2)\n   {\n-    std::streamsize __ret;\n+    std::streamsize __nleft = __n1 + __n2;\n+    std::streamsize __n1_left = __n1;\n \n     struct iovec __iov[2];\n-    __iov[0].iov_base = const_cast<char*>(__s1);\n-    __iov[0].iov_len = __n1;\n     __iov[1].iov_base = const_cast<char*>(__s2);\n     __iov[1].iov_len = __n2;\n \n-    do\n-      __ret = writev(__fd, __iov, 2);\n-    while (__ret == -1L && errno == EINTR);\n-\n-    if (__ret == -1L)\n-      __ret = 0;\n-    else if (__ret < __n1 + __n2)\n+    for (;;)\n       {\n-\tif (__ret >= __n1)\n+\t__iov[0].iov_base = const_cast<char*>(__s1);\n+\t__iov[0].iov_len = __n1_left;\n+\n+\tconst std::streamsize __ret = writev(__fd, __iov, 2);\n+\tif (__ret == -1L && errno == EINTR)\n+\t  continue;\n+\tif (__ret == -1L)\n+\t  break;\n+\n+\t__nleft -= __ret;\n+\tif (__nleft == 0)\n+\t  break;\n+\n+\tconst std::streamsize __off = __ret - __n1_left;\n+\tif (__off >= 0)\n \t  {\n-\t    const std::streamsize __off = __ret - __n1;\n-\t    __ret += xwrite(__fd, __s2 + __off, __n2 - __off);\n+\t    __nleft -= xwrite(__fd, __s2 + __off, __n2 - __off);\n+\t    break;\n \t  }\n-\telse\n-\t  __ret += xwritev(__fd, __s1 + __ret, __n1 - __ret,\n-\t\t\t   __s2, __n2);\n+\t\n+\t__s1 += __ret;\n+\t__n1_left -= __ret;\n       }\n \n-    return __ret;\n+    return __n1 + __n2 - __nleft;\n   }\n #endif\n } // namespace __gnu_internal"}]}