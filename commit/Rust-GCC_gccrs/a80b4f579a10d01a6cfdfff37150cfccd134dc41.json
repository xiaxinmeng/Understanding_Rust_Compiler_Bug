{"sha": "a80b4f579a10d01a6cfdfff37150cfccd134dc41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgwYjRmNTc5YTEwZDAxYTZjZmRmZmYzNzE1MGNmY2NkMTM0ZGM0MQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-12-05T13:54:42Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-12-05T13:54:42Z"}, "message": "Subject: [PATCH] Revert \"Do not simplify \"(and (reg) (const bit)\" to\n if_then_else.\"\n\n\n\t* combine.c: Revert r243162.\n\nFrom-SVN: r243256", "tree": {"sha": "9e5fd3717e2ff5efc41a1cd7f51addd0bc9f4e33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e5fd3717e2ff5efc41a1cd7f51addd0bc9f4e33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a80b4f579a10d01a6cfdfff37150cfccd134dc41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a80b4f579a10d01a6cfdfff37150cfccd134dc41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a80b4f579a10d01a6cfdfff37150cfccd134dc41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a80b4f579a10d01a6cfdfff37150cfccd134dc41/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "519e0faa00bda70c9ffd66b7e7a6011c5e742d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/519e0faa00bda70c9ffd66b7e7a6011c5e742d2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/519e0faa00bda70c9ffd66b7e7a6011c5e742d2b"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "1ace8b03c2272b0b6cb27977651acef646eea6c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a80b4f579a10d01a6cfdfff37150cfccd134dc41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a80b4f579a10d01a6cfdfff37150cfccd134dc41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a80b4f579a10d01a6cfdfff37150cfccd134dc41", "patch": "@@ -1,3 +1,7 @@\n+2016-12-05  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* combine.c: Revert r243162.\n+\n 2016-12-05  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* match.pd: Simplify X ? C : 0 where C is a power of 2 and"}, {"sha": "b4294532296d477faa3a21ccc60d120cb7450568", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a80b4f579a10d01a6cfdfff37150cfccd134dc41/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a80b4f579a10d01a6cfdfff37150cfccd134dc41/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=a80b4f579a10d01a6cfdfff37150cfccd134dc41", "patch": "@@ -5602,18 +5602,6 @@ combine_simplify_rtx (rtx x, machine_mode op0_mode, int in_dest,\n \t\t     && OBJECT_P (SUBREG_REG (XEXP (x, 0)))))))\n     {\n       rtx cond, true_rtx, false_rtx;\n-      unsigned HOST_WIDE_INT nz;\n-\n-      /* If the operation is an AND wrapped in a SIGN_EXTEND or ZERO_EXTEND with\n-\t either operand being just a constant single bit value, do nothing since\n-\t IF_THEN_ELSE is likely to increase the expression's complexity.  */\n-      if (HWI_COMPUTABLE_MODE_P (mode)\n-\t  && pow2p_hwi (nz = nonzero_bits (x, mode))\n-\t  && ! ((code == SIGN_EXTEND || code == ZERO_EXTEND)\n-\t\t&& GET_CODE (XEXP (x, 0)) == AND\n-\t\t&& CONST_INT_P (XEXP (XEXP (x, 0), 0))\n-\t\t&& UINTVAL (XEXP (XEXP (x, 0), 0)) == nz))\n-\t      return x;\n \n       cond = if_then_else_cond (x, &true_rtx, &false_rtx);\n       if (cond != 0"}]}