{"sha": "a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ5ODNiN2FkODRlOTZlZjg5MTRlMWQwMjdkN2IzM2Y3ZmI1YzRhMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-29T10:53:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-29T10:53:36Z"}, "message": "re PR ipa/88586 (ICE: Segmentation fault (in free_lang_data_in_decl))\n\n\tPR ipa/88586\n\t* omp-low.c (lower_omp_task_reductions): Set DECL_CONTEXT on field\n\tand ifield.  Update TYPE_ALIGN from alignment of field, ifield or\n\tbfield.\n\n\t* g++.dg/gomp/pr88586.C: New test.\n\nFrom-SVN: r267461", "tree": {"sha": "c8e09b21dc642ed014458527c995efb184fca84e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8e09b21dc642ed014458527c995efb184fca84e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2fda71537b379f16b09ca38a2020ff51ca1e99bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fda71537b379f16b09ca38a2020ff51ca1e99bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fda71537b379f16b09ca38a2020ff51ca1e99bf"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "fd2c23073c5fd4ec2d5e2159c658cf03891f5f97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3", "patch": "@@ -1,3 +1,10 @@\n+2018-12-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/88586\n+\t* omp-low.c (lower_omp_task_reductions): Set DECL_CONTEXT on field\n+\tand ifield.  Update TYPE_ALIGN from alignment of field, ifield or\n+\tbfield.\n+\n 2018-12-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.h (ADDITIONAL_REGISTER_NAMES): Add"}, {"sha": "4517fc1bb8c6f30a602b6ed5ecb5da8c287c5da9", "filename": "gcc/omp-low.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3", "patch": "@@ -7011,6 +7011,12 @@ lower_omp_task_reductions (omp_context *ctx, enum tree_code code, tree clauses,\n       *last = field;\n       DECL_CHAIN (field) = ifield;\n       last = &DECL_CHAIN (ifield);\n+      DECL_CONTEXT (field) = record_type;\n+      if (TYPE_ALIGN (record_type) < DECL_ALIGN (field))\n+\tSET_TYPE_ALIGN (record_type, DECL_ALIGN (field));\n+      DECL_CONTEXT (ifield) = record_type;\n+      if (TYPE_ALIGN (record_type) < DECL_ALIGN (ifield))\n+\tSET_TYPE_ALIGN (record_type, DECL_ALIGN (ifield));\n     }\n   for (int pass = 0; pass < 2; pass++)\n     {\n@@ -7036,12 +7042,16 @@ lower_omp_task_reductions (omp_context *ctx, enum tree_code code, tree clauses,\n \t  else\n \t    SET_DECL_ALIGN (field, TYPE_ALIGN (type));\n \t  DECL_CONTEXT (field) = record_type;\n+\t  if (TYPE_ALIGN (record_type) < DECL_ALIGN (field))\n+\t    SET_TYPE_ALIGN (record_type, DECL_ALIGN (field));\n \t  *last = field;\n \t  last = &DECL_CHAIN (field);\n \t  tree bfield\n \t    = build_decl (OMP_CLAUSE_LOCATION (c), FIELD_DECL, NULL_TREE,\n \t\t\t  boolean_type_node);\n \t  DECL_CONTEXT (bfield) = record_type;\n+\t  if (TYPE_ALIGN (record_type) < DECL_ALIGN (bfield))\n+\t    SET_TYPE_ALIGN (record_type, DECL_ALIGN (bfield));\n \t  *last = bfield;\n \t  last = &DECL_CHAIN (bfield);\n \t}"}, {"sha": "4e66cf8295e212436fdcff1c70ea461da1ecc659", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3", "patch": "@@ -1,3 +1,8 @@\n+2018-12-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR ipa/88586\n+\t* g++.dg/gomp/pr88586.C: New test.\n+\n 2018-12-28  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* c-c++-common/ident-1b.c: XFAIL AIX and Darwin."}, {"sha": "2d1b47b92d8661d710b92233e2f898e0e5de3097", "filename": "gcc/testsuite/g++.dg/gomp/pr88586.C", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88586.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88586.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88586.C?ref=a4983b7ad84e96ef8914e1d027d7b33f7fb5c4a3", "patch": "@@ -0,0 +1,77 @@\n+// PR ipa/88586\n+// { dg-do compile { target lto } }\n+// { dg-options \"-fopenmp -flto\" }\n+\n+extern \"C\" int omp_get_cancellation ();\n+extern \"C\" int omp_get_thread_num ();\n+extern \"C\" void abort ();\n+\n+struct A { A (); ~A (); A (const A &); static int cnt1, cnt2, cnt3; int a; };\n+int A::cnt1;\n+int A::cnt2;\n+int A::cnt3;\n+A::A () : a (0)\n+{\n+  #pragma omp atomic\n+  cnt1++;\n+}\n+A::A (const A &x) : a (x.a)\n+{\n+  #pragma omp atomic\n+  cnt2++;\n+}\n+A::~A ()\n+{\n+  #pragma omp atomic\n+  cnt3++;\n+}\n+#pragma omp declare reduction (+: A: omp_out.a += omp_in.a)\n+\n+void\n+foo (int x)\n+{\n+  A a, b[2];\n+  int d = 1;\n+  long int e[2] = { 1L, 1L };\n+  int c = 0;\n+  #pragma omp parallel\n+  {\n+    if (x && omp_get_thread_num () == 0)\n+      {\n+\tfor (int i = 0; i < 10000000; ++i)\n+\t  asm volatile (\"\");\n+\tc = 1;\n+\t#pragma omp cancel parallel\n+      }\n+    #pragma omp for reduction (task, +: a, b) reduction (task, *: d, e)\n+    for (int i = 0; i < 64; i++)\n+      #pragma omp task in_reduction (+: a, b) in_reduction (*: d, e)\n+      {\n+\ta.a++;\n+\tb[0].a += 2;\n+\tb[1].a += 3;\n+\td *= ((i & 7) == 0) + 1;\n+\te[0] *= ((i & 7) == 3) + 1;\n+\te[1] *= ((i & 3) == 2) + 1;\n+      }\n+    if (x && omp_get_cancellation ())\n+      abort ();\n+  }\n+  if (!c)\n+    {\n+      if (a.a != 64 || b[0].a != 128 || b[1].a != 192)\n+\tabort ();\n+      if (d != 256 || e[0] != 256L || e[1] != 65536L)\n+\tabort ();\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  int c1 = A::cnt1, c2 = A::cnt2, c3 = A::cnt3;\n+  volatile int zero = 0;\n+  foo (zero);\n+  if (A::cnt1 + A::cnt2 - c1 - c2 != A::cnt3 - c3)\n+    abort ();\n+}"}]}