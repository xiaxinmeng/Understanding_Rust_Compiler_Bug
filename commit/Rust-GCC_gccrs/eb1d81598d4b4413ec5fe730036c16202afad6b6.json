{"sha": "eb1d81598d4b4413ec5fe730036c16202afad6b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxZDgxNTk4ZDRiNDQxM2VjNWZlNzMwMDM2YzE2MjAyYWZhZDZiNg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2013-11-20T13:50:44Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-11-20T13:50:44Z"}, "message": "cgraph.h (varpool_node): Add need_bounds_init field.\n\n        * cgraph.h (varpool_node): Add need_bounds_init field.\n        * lto-cgraph.c (lto_output_varpool_node): Output\n        need_bounds_init value.\n        (input_varpool_node): Read need_bounds_init value.\n        * varpool.c (dump_varpool_node): Dump need_bounds_init field.\n\nFrom-SVN: r205116", "tree": {"sha": "da46e8ec2d13767fa1a1c3da99489ab1f6ebd4e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da46e8ec2d13767fa1a1c3da99489ab1f6ebd4e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1d81598d4b4413ec5fe730036c16202afad6b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1d81598d4b4413ec5fe730036c16202afad6b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1d81598d4b4413ec5fe730036c16202afad6b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1d81598d4b4413ec5fe730036c16202afad6b6/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a888f9ad6f86dab748ce790ac2d11b1bf95f36b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a888f9ad6f86dab748ce790ac2d11b1bf95f36b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a888f9ad6f86dab748ce790ac2d11b1bf95f36b5"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "15476a4f611d57e72fa40a427b47e23c31bd3171", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1d81598d4b4413ec5fe730036c16202afad6b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1d81598d4b4413ec5fe730036c16202afad6b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb1d81598d4b4413ec5fe730036c16202afad6b6", "patch": "@@ -1,3 +1,11 @@\n+2013-11-20  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* cgraph.h (varpool_node): Add need_bounds_init field.\n+\t* lto-cgraph.c (lto_output_varpool_node): Output\n+\tneed_bounds_init value.\n+\t(input_varpool_node): Read need_bounds_init value.\n+\t* varpool.c (dump_varpool_node): Dump need_bounds_init field.\n+\n 2013-11-20  Jan Hubicka  <jh@suse.cz>\n \n \t* opts.c (finish_options): Imply -ffat-lto-objects with -fno-use-linker-plugin."}, {"sha": "15719fb6872e6a9ff1c042905f63f4b551ab1f2f", "filename": "gcc/cgraph.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1d81598d4b4413ec5fe730036c16202afad6b6/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1d81598d4b4413ec5fe730036c16202afad6b6/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=eb1d81598d4b4413ec5fe730036c16202afad6b6", "patch": "@@ -528,6 +528,10 @@ class GTY((tag (\"SYMTAB_VARIABLE\"))) varpool_node : public symtab_node {\n public:\n   /* Set when variable is scheduled to be assembled.  */\n   unsigned output : 1;\n+\n+  /* Set when variable has statically initialized pointer\n+     or is a static bounds variable and needs initalization.  */\n+  unsigned need_bounds_init : 1;\n };\n \n /* Every top level asm statement is put into a asm_node.  */"}, {"sha": "0f1a1c5e9a045f3622ce9e532581f4350cbfa753", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1d81598d4b4413ec5fe730036c16202afad6b6/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1d81598d4b4413ec5fe730036c16202afad6b6/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=eb1d81598d4b4413ec5fe730036c16202afad6b6", "patch": "@@ -580,6 +580,7 @@ lto_output_varpool_node (struct lto_simple_output_block *ob, struct varpool_node\n \t\t     && boundary_p && !DECL_EXTERNAL (node->decl), 1);\n \t  /* in_other_partition.  */\n     }\n+  bp_pack_value (&bp, node->need_bounds_init, 1);\n   streamer_write_bitpack (&bp);\n   if (node->same_comdat_group && !boundary_p)\n     {\n@@ -1150,6 +1151,7 @@ input_varpool_node (struct lto_file_decl_data *file_data,\n   node->analyzed = bp_unpack_value (&bp, 1);\n   node->used_from_other_partition = bp_unpack_value (&bp, 1);\n   node->in_other_partition = bp_unpack_value (&bp, 1);\n+  node->need_bounds_init = bp_unpack_value (&bp, 1);\n   if (node->in_other_partition)\n     {\n       DECL_EXTERNAL (node->decl) = 1;"}, {"sha": "f79cf49cc55dd2e8721b7743410b802155c187c1", "filename": "gcc/varpool.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1d81598d4b4413ec5fe730036c16202afad6b6/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1d81598d4b4413ec5fe730036c16202afad6b6/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=eb1d81598d4b4413ec5fe730036c16202afad6b6", "patch": "@@ -205,6 +205,8 @@ dump_varpool_node (FILE *f, struct varpool_node *node)\n     fprintf (f, \" initialized\");\n   if (node->output)\n     fprintf (f, \" output\");\n+  if (node->need_bounds_init)\n+    fprintf (f, \" need-bounds-init\");\n   if (TREE_READONLY (node->decl))\n     fprintf (f, \" read-only\");\n   if (ctor_for_folding (node->decl) != error_mark_node)"}]}