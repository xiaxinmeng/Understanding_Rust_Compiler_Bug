{"sha": "293fcb2e289bb7ae7bbff0583c7a127da776519a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkzZmNiMmUyODliYjdhZTdiYmZmMDU4M2M3YTEyN2RhNzc2NTE5YQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-04-18T07:34:32Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-04-18T07:34:32Z"}, "message": "re PR libfortran/20950 ([4.0 only] segfault in INQUIRE asking for SEQUENTIAL status)\n\n\tPR libfortran/20950\n\t* io/inquire.c (inquire_via_unit): Check for the gfc_unit being\n\tNULL when setting ioparm.sequential.\n\t* gfortran.dg/pr20950.f: New test.\n\nFrom-SVN: r98312", "tree": {"sha": "4c37c80f5942a96de159382ba00989a0229cd146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c37c80f5942a96de159382ba00989a0229cd146"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/293fcb2e289bb7ae7bbff0583c7a127da776519a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/293fcb2e289bb7ae7bbff0583c7a127da776519a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/293fcb2e289bb7ae7bbff0583c7a127da776519a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/293fcb2e289bb7ae7bbff0583c7a127da776519a/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c9de419a1b1e8cdcd9585ae59cfb6fac2420d99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9de419a1b1e8cdcd9585ae59cfb6fac2420d99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9de419a1b1e8cdcd9585ae59cfb6fac2420d99"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "1dd0db76e734de93bf81677d2cab07d253736bf6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293fcb2e289bb7ae7bbff0583c7a127da776519a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293fcb2e289bb7ae7bbff0583c7a127da776519a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=293fcb2e289bb7ae7bbff0583c7a127da776519a", "patch": "@@ -1,3 +1,8 @@\n+2005-04-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20950\n+\t* gfortran.dg/pr20950.f: New test.\n+\n 2005-04-18  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/19216"}, {"sha": "c132548c8295d1742affeb6a611f6d3240c877e2", "filename": "gcc/testsuite/gfortran.dg/pr20950.f", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293fcb2e289bb7ae7bbff0583c7a127da776519a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20950.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293fcb2e289bb7ae7bbff0583c7a127da776519a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20950.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20950.f?ref=293fcb2e289bb7ae7bbff0583c7a127da776519a", "patch": "@@ -0,0 +1,7 @@\n+! PR libfortran/20950\n+! Original bug-report by Walt Brainerd, The Fortran Company\n+! { dg-do run }\n+      character*20 c\n+      inquire (33, sequential = c)\n+      if (c .ne. \"UNKNOWN\") call abort\n+      end"}, {"sha": "f4716af402c32731f577bd28440c094954dacf26", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293fcb2e289bb7ae7bbff0583c7a127da776519a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293fcb2e289bb7ae7bbff0583c7a127da776519a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=293fcb2e289bb7ae7bbff0583c7a127da776519a", "patch": "@@ -1,3 +1,9 @@\n+2005-04-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20950\n+\t* io/inquire.c (inquire_via_unit): Check for the gfc_unit being\n+\tNULL when setting ioparm.sequential.\n+\n 2005-04-17  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/21075"}, {"sha": "731adad7c8688d20dfe8b7a30b26e60543ffe45f", "filename": "libgfortran/io/inquire.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293fcb2e289bb7ae7bbff0583c7a127da776519a/libgfortran%2Fio%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293fcb2e289bb7ae7bbff0583c7a127da776519a/libgfortran%2Fio%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Finquire.c?ref=293fcb2e289bb7ae7bbff0583c7a127da776519a", "patch": "@@ -87,13 +87,16 @@ inquire_via_unit (gfc_unit * u)\n \n   if (ioparm.sequential != NULL)\n     {\n-      /* disallow an open direct access file to be accessed\n-         sequentially */\n-      if (u->flags.access==ACCESS_DIRECT)\n-        p = \"NO\";\n-      else   \n-        p = (u == NULL) ? inquire_sequential (NULL, 0) :\n-        inquire_sequential (u->file, u->file_len);\n+      if (u == NULL)\n+\tp = inquire_sequential (NULL, 0);\n+      else\n+\t{\n+          /* disallow an open direct access file to be accessed sequentially */\n+          if (u->flags.access == ACCESS_DIRECT)\n+            p = \"NO\";\n+          else   \n+            p = inquire_sequential (u->file, u->file_len);\n+\t}\n \n       cf_strcpy (ioparm.sequential, ioparm.sequential_len, p);\n     }"}]}