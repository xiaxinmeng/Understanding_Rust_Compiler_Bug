{"sha": "75be0217a8b024cc146748db6894ff9e060d7ac9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViZTAyMTdhOGIwMjRjYzE0Njc0OGRiNjg5NGZmOWUwNjBkN2FjOQ==", "commit": {"author": {"name": "Jim Meyering", "email": "meyering@redhat.com", "date": "2012-04-19T13:51:17Z"}, "committer": {"name": "Jim Meyering", "email": "meyering@gcc.gnu.org", "date": "2012-04-19T13:51:17Z"}, "message": "genmodes: remove misleading use of strncpy\n\n* genmodes.c (make_complex_modes): Avoid unnecessary use of strncpy.\nWe verified above that the string(including trailing NUL) fits in buf,\nso just use memcpy.\n\nFrom-SVN: r186596", "tree": {"sha": "1ba4033c565f62c67056f57f928c6283b1ab75f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ba4033c565f62c67056f57f928c6283b1ab75f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75be0217a8b024cc146748db6894ff9e060d7ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75be0217a8b024cc146748db6894ff9e060d7ac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75be0217a8b024cc146748db6894ff9e060d7ac9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75be0217a8b024cc146748db6894ff9e060d7ac9/comments", "author": null, "committer": null, "parents": [{"sha": "f68c04877cba9e6f2b77cfb8ba564e37c4d8a254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f68c04877cba9e6f2b77cfb8ba564e37c4d8a254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f68c04877cba9e6f2b77cfb8ba564e37c4d8a254"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "72269124ae2fce6a8244d3096abe46e53f6aaa16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75be0217a8b024cc146748db6894ff9e060d7ac9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75be0217a8b024cc146748db6894ff9e060d7ac9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75be0217a8b024cc146748db6894ff9e060d7ac9", "patch": "@@ -1,3 +1,10 @@\n+2012-04-19  Jim Meyering  <meyering@redhat.com>\n+\n+\tgenmodes: remove misleading use of strncpy\n+\t* genmodes.c (make_complex_modes): Avoid unnecessary use of strncpy.\n+\tWe verified above that the string(including trailing NUL) fits in buf,\n+\tso just use memcpy.\n+\n 2012-04-19  Richard Guenther  <rguenther@suse.de>\n \n \t* symtab.c (dump_symtab_base): Use TREE_STRING_POINTER"}, {"sha": "6bbeb6faef15aab9331fe168c2d4a7a805f5c09b", "filename": "gcc/genmodes.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75be0217a8b024cc146748db6894ff9e060d7ac9/gcc%2Fgenmodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75be0217a8b024cc146748db6894ff9e060d7ac9/gcc%2Fgenmodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmodes.c?ref=75be0217a8b024cc146748db6894ff9e060d7ac9", "patch": "@@ -1,5 +1,5 @@\n /* Generate the machine mode enumeration and associated tables.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2010\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2010, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -435,11 +435,14 @@ make_complex_modes (enum mode_class cl,\n \n   for (m = modes[cl]; m; m = m->next)\n     {\n+      size_t m_len;\n+\n       /* Skip BImode.  FIXME: BImode probably shouldn't be MODE_INT.  */\n       if (m->precision == 1)\n \tcontinue;\n \n-      if (strlen (m->name) >= sizeof buf)\n+      m_len = strlen (m->name);\n+      if (m_len >= sizeof buf)\n \t{\n \t  error (\"%s:%d:mode name \\\"%s\\\" is too long\",\n \t\t m->file, m->line, m->name);\n@@ -452,7 +455,8 @@ make_complex_modes (enum mode_class cl,\n       if (cl == MODE_FLOAT)\n \t{\n \t  char *p, *q = 0;\n-\t  strncpy (buf, m->name, sizeof buf);\n+\t  /* We verified above that m->name+NUL fits in buf.  */\n+\t  memcpy (buf, m->name, m_len + 1);\n \t  p = strchr (buf, 'F');\n \t  if (p == 0)\n \t    q = strchr (buf, 'D');"}]}