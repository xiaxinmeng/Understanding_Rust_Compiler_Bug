{"sha": "c500e5ec9f9e5775b633d93381282de9b55e789a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUwMGU1ZWM5ZjllNTc3NWI2MzNkOTMzODEyODJkZTliNTVlNzg5YQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-03-09T04:50:49Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-03-09T04:50:49Z"}, "message": "natArray.cc (newInstance): Don't allow array of `void' to be created.\n\n\t* java/lang/reflect/natArray.cc (newInstance): Don't allow array\n\tof `void' to be created.\n\nFrom-SVN: r32443", "tree": {"sha": "b38a57c29f2f7431998c23a31b1204a3dc189ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b38a57c29f2f7431998c23a31b1204a3dc189ea4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c500e5ec9f9e5775b633d93381282de9b55e789a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c500e5ec9f9e5775b633d93381282de9b55e789a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c500e5ec9f9e5775b633d93381282de9b55e789a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c500e5ec9f9e5775b633d93381282de9b55e789a/comments", "author": null, "committer": null, "parents": [{"sha": "0f72dc9e314346054bc995d63dc4cc01e2770fab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f72dc9e314346054bc995d63dc4cc01e2770fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f72dc9e314346054bc995d63dc4cc01e2770fab"}], "stats": {"total": 92, "additions": 68, "deletions": 24}, "files": [{"sha": "38b61f6d1e57f156761a0857af2e580a332b548b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c500e5ec9f9e5775b633d93381282de9b55e789a", "patch": "@@ -1,3 +1,8 @@\n+2000-03-08  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* java/lang/reflect/natArray.cc (newInstance): Don't allow array\n+\tof `void' to be created.\n+\n 2000-03-08  Warren Levy  <warrenl@cygnus.com>\n \n \t* java/math/BigInteger.java(signum): Handle zero properly."}, {"sha": "65cade913ef05eba3c06e5d2051e52b20ba1fb8f", "filename": "libjava/Makefile.in", "status": "modified", "additions": 50, "deletions": 18, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=c500e5ec9f9e5775b633d93381282de9b55e789a", "patch": "@@ -735,14 +735,15 @@ CCLD = $(CC)\n LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n DATA =  $(data_DATA) $(toolexeclib_DATA)\n \n-DIST_COMMON =  README COPYING.LIB ChangeLog Makefile.am Makefile.in NEWS \\\n-THANKS acinclude.m4 aclocal.m4 configure configure.in \\\n-libgcj-test.spec.in libgcj.spec.in\n+DIST_COMMON =  README COPYING ChangeLog Makefile.am Makefile.in NEWS \\\n+THANKS acconfig.h acinclude.m4 aclocal.m4 configure configure.in \\\n+include/config.h.in include/stamp-h.in libgcj-test.spec.in \\\n+libgcj.spec.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -963,6 +964,34 @@ config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n $(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)\n \tcd $(srcdir) && $(AUTOCONF)\n+\n+include/config.h: include/stamp-h\n+\t@if test ! -f $@; then \\\n+\t\trm -f include/stamp-h; \\\n+\t\t$(MAKE) include/stamp-h; \\\n+\telse :; fi\n+include/stamp-h: $(srcdir)/include/config.h.in $(top_builddir)/config.status\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES= CONFIG_HEADERS=include/config.h \\\n+\t     $(SHELL) ./config.status\n+\t@echo timestamp > include/stamp-h 2> /dev/null\n+$(srcdir)/include/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/include/stamp-h.in\n+\t@if test ! -f $@; then \\\n+\t\trm -f $(srcdir)/include/stamp-h.in; \\\n+\t\t$(MAKE) $(srcdir)/include/stamp-h.in; \\\n+\telse :; fi\n+$(srcdir)/include/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n+\tcd $(top_srcdir) && $(AUTOHEADER)\n+\t@echo timestamp > $(srcdir)/include/stamp-h.in 2> /dev/null\n+\n+mostlyclean-hdr:\n+\n+clean-hdr:\n+\n+distclean-hdr:\n+\t-rm -f include/config.h\n+\n+maintainer-clean-hdr:\n libgcj.spec: $(top_builddir)/config.status libgcj.spec.in\n \tcd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status\n libgcj-test.spec: $(top_builddir)/config.status libgcj-test.spec.in\n@@ -1288,7 +1317,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n@@ -1403,31 +1432,33 @@ distclean-generic:\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n \n maintainer-clean-generic:\n-mostlyclean-am:  mostlyclean-toolexeclibLIBRARIES mostlyclean-compile \\\n-\t\tmostlyclean-libtool mostlyclean-toolexeclibLTLIBRARIES \\\n+mostlyclean-am:  mostlyclean-hdr mostlyclean-toolexeclibLIBRARIES \\\n+\t\tmostlyclean-compile mostlyclean-libtool \\\n+\t\tmostlyclean-toolexeclibLTLIBRARIES \\\n \t\tmostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \\\n \t\tmostlyclean-tags mostlyclean-depend mostlyclean-generic\n \n mostlyclean: mostlyclean-recursive\n \n-clean-am:  clean-toolexeclibLIBRARIES clean-compile clean-libtool \\\n-\t\tclean-toolexeclibLTLIBRARIES clean-binPROGRAMS \\\n-\t\tclean-noinstPROGRAMS clean-tags clean-depend \\\n-\t\tclean-generic mostlyclean-am clean-local\n+clean-am:  clean-hdr clean-toolexeclibLIBRARIES clean-compile \\\n+\t\tclean-libtool clean-toolexeclibLTLIBRARIES \\\n+\t\tclean-binPROGRAMS clean-noinstPROGRAMS clean-tags \\\n+\t\tclean-depend clean-generic mostlyclean-am clean-local\n \n clean: clean-recursive\n \n-distclean-am:  distclean-toolexeclibLIBRARIES distclean-compile \\\n-\t\tdistclean-libtool distclean-toolexeclibLTLIBRARIES \\\n-\t\tdistclean-binPROGRAMS distclean-noinstPROGRAMS \\\n-\t\tdistclean-tags distclean-depend distclean-generic \\\n-\t\tclean-am\n+distclean-am:  distclean-hdr distclean-toolexeclibLIBRARIES \\\n+\t\tdistclean-compile distclean-libtool \\\n+\t\tdistclean-toolexeclibLTLIBRARIES distclean-binPROGRAMS \\\n+\t\tdistclean-noinstPROGRAMS distclean-tags \\\n+\t\tdistclean-depend distclean-generic clean-am\n \t-rm -f libtool\n \n distclean: distclean-recursive\n \t-rm -f config.status\n \n-maintainer-clean-am:  maintainer-clean-toolexeclibLIBRARIES \\\n+maintainer-clean-am:  maintainer-clean-hdr \\\n+\t\tmaintainer-clean-toolexeclibLIBRARIES \\\n \t\tmaintainer-clean-compile maintainer-clean-libtool \\\n \t\tmaintainer-clean-toolexeclibLTLIBRARIES \\\n \t\tmaintainer-clean-binPROGRAMS \\\n@@ -1440,7 +1471,8 @@ maintainer-clean-am:  maintainer-clean-toolexeclibLIBRARIES \\\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f config.status\n \n-.PHONY: mostlyclean-toolexeclibLIBRARIES distclean-toolexeclibLIBRARIES \\\n+.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \\\n+mostlyclean-toolexeclibLIBRARIES distclean-toolexeclibLIBRARIES \\\n clean-toolexeclibLIBRARIES maintainer-clean-toolexeclibLIBRARIES \\\n uninstall-toolexeclibLIBRARIES install-toolexeclibLIBRARIES \\\n mostlyclean-compile distclean-compile clean-compile \\"}, {"sha": "830733cfe875992813c4947f0ddb459e6cae16b8", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=c500e5ec9f9e5775b633d93381282de9b55e789a", "patch": "@@ -128,7 +128,7 @@ DIST_COMMON =  Makefile.am Makefile.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -197,7 +197,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}, {"sha": "8deca2b0e6c49e61dc3293066351faf90e9450dd", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=c500e5ec9f9e5775b633d93381282de9b55e789a", "patch": "@@ -127,7 +127,7 @@ DIST_COMMON =  ./stamp-h.in Makefile.am Makefile.in config.h.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -224,7 +224,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}, {"sha": "fd9536889dc9053e6a30bceabe2fa780f0c57f10", "filename": "libjava/java/lang/reflect/natArray.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2Fjava%2Flang%2Freflect%2FnatArray.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c500e5ec9f9e5775b633d93381282de9b55e789a/libjava%2Fjava%2Flang%2Freflect%2FnatArray.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatArray.cc?ref=c500e5ec9f9e5775b633d93381282de9b55e789a", "patch": "@@ -1,6 +1,6 @@\n // natField.cc - Implementation of java.lang.reflect.Field native methods.\n \n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -29,7 +29,14 @@ jobject\n java::lang::reflect::Array::newInstance (jclass componentType, jint length)\n {\n   if (componentType->isPrimitive())\n-    return _Jv_NewPrimArray (componentType, length);\n+    {\n+      // We could check for this in _Jv_NewPrimArray, but that seems\n+      // like needless overhead when the only real route to this\n+      // problem is here.\n+      if (componentType == JvPrimClass (void))\n+\tthrow new java::lang::IllegalArgumentException ();\n+      return _Jv_NewPrimArray (componentType, length);\n+    }\n   else\n     return JvNewObjectArray (length, componentType, NULL);\n "}]}