{"sha": "ea09f50d91fc79d3d494c352b71556c605e89159", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEwOWY1MGQ5MWZjNzlkM2Q0OTRjMzUyYjcxNTU2YzYwNWU4OTE1OQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2015-09-16T17:46:21Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2015-09-16T17:46:21Z"}, "message": "Fix endianness assumption in LRA.\n\ngcc/\n\t* lra-constraints.c (simplify_operand_subreg): Do not assume that\n\tlowpart of a SUBREG has offset zero.\n\nFrom-SVN: r227833", "tree": {"sha": "d903bd4b434acdddf4c3ab1869f5daaa683629ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d903bd4b434acdddf4c3ab1869f5daaa683629ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea09f50d91fc79d3d494c352b71556c605e89159", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea09f50d91fc79d3d494c352b71556c605e89159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea09f50d91fc79d3d494c352b71556c605e89159", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea09f50d91fc79d3d494c352b71556c605e89159/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35187a744c2221673cb0ce2b6672eeed71d3fa99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35187a744c2221673cb0ce2b6672eeed71d3fa99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35187a744c2221673cb0ce2b6672eeed71d3fa99"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "1fad63688e732ff2cd180c3dcedd2c59626adf01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea09f50d91fc79d3d494c352b71556c605e89159/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea09f50d91fc79d3d494c352b71556c605e89159/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea09f50d91fc79d3d494c352b71556c605e89159", "patch": "@@ -1,3 +1,8 @@\n+2015-09-16  David S. Miller  <davem@davemloft.net>\n+\n+\t* lra-constraints.c (simplify_operand_subreg): Do not assume that\n+\tlowpart of a SUBREG has offset zero.\n+\n 2015-09-16  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/47679"}, {"sha": "fc8e43d66d98ee998f8fac68fd5f98a52d780265", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea09f50d91fc79d3d494c352b71556c605e89159/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea09f50d91fc79d3d494c352b71556c605e89159/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=ea09f50d91fc79d3d494c352b71556c605e89159", "patch": "@@ -1545,7 +1545,7 @@ simplify_operand_subreg (int nop, machine_mode reg_mode)\n \t  bool insert_before, insert_after;\n \n \t  PUT_MODE (new_reg, mode);\n-          subreg = simplify_gen_subreg (innermode, new_reg, mode, 0);\n+          subreg = gen_lowpart_SUBREG (innermode, new_reg);\n \t  bitmap_set_bit (&lra_subreg_reload_pseudos, REGNO (new_reg));\n \n \t  insert_before = (type != OP_OUT);"}]}