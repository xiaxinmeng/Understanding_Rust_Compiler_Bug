{"sha": "f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhmYjAxZmJiMGMzYzZiOGVjMGU1YTMwMTY1MWIwODI0YWFmODgwYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-12-07T09:56:05Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-12-07T09:56:05Z"}, "message": "Housekeeping work in gigi\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/Make-lang.in: Remove ^L characters.\n\t* gcc-interface/decl.c (create_concat_name): Add cast.", "tree": {"sha": "b5c4e13c723211334c9775bcda3413d6a83270dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5c4e13c723211334c9775bcda3413d6a83270dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b/comments", "author": null, "committer": null, "parents": [{"sha": "67c4d1c7addc88c2d133731cf81ffad7d50fa8b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c4d1c7addc88c2d133731cf81ffad7d50fa8b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67c4d1c7addc88c2d133731cf81ffad7d50fa8b9"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "d88c354c9a42232c55acc915c2b4059773d38e09", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b", "patch": "@@ -42,7 +42,7 @@ MV = mv\n MKDIR = mkdir -p\n RM = rm -f\n RMDIR = rm -rf\n-\f\n+\n \n # Extra flags to pass to recursive makes.\n COMMON_ADAFLAGS= -gnatpg\n@@ -814,7 +814,6 @@ doc/gnat_rm.pdf: ada/gnat_rm.texi $(gcc_docdir)/include/fdl.texi\t\\\n doc/gnat-style.pdf: ada/gnat-style.texi $(gcc_docdir)/include/fdl.texi\n \t$(TEXI2PDF) -c -I $(abs_docdir)/include -o $@ $<\n \n-\f\n # Install hooks:\n # gnat1 is installed elsewhere as part of $(COMPILERS).\n \n@@ -908,7 +907,7 @@ ada.maintainer-clean:\n \t-$(RM) ada/nmake.ads\n \t-$(RM) ada/treeprs.ads\n \t-$(RM) ada/snames.ads ada/snames.adb ada/snames.h\n-\f\n+\n # Stage hooks:\n # The main makefile has already created stage?/ada\n \n@@ -1005,7 +1004,7 @@ $(check_acats_targets): check-acats%:\n \ttouch $$GCC_RUNTEST_PARALLELIZE_DIR/finished\n \n .PHONY: check-acats $(check_acats_targets)\n-\f\n+\n # Compiling object files from source files.\n \n # Ada language specific files."}, {"sha": "5ea1b16af67c99e34a89c3f93880b890c23d624c", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=f8fb01fbb0c3c6b8ec0e5a301651b0824aaf880b", "patch": "@@ -10353,7 +10353,7 @@ create_concat_name (Entity_Id gnat_entity, const char *suffix)\n {\n   const Entity_Kind kind = Ekind (gnat_entity);\n   const bool has_suffix = (suffix != NULL);\n-  String_Template temp = {1, has_suffix ? strlen (suffix) : 0};\n+  String_Template temp = {1, has_suffix ? (int) strlen (suffix) : 0};\n   String_Pointer sp = {suffix, &temp};\n \n   Get_External_Name (gnat_entity, has_suffix, sp);"}]}