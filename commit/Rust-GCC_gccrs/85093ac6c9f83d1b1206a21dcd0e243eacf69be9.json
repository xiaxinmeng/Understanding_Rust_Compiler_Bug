{"sha": "85093ac6c9f83d1b1206a21dcd0e243eacf69be9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUwOTNhYzZjOWY4M2QxYjEyMDZhMjFkY2QwZTI0M2VhY2Y2OWJlOQ==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2019-10-15T22:17:14Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2019-10-15T22:17:14Z"}, "message": "fptr.c (_dl_read_access_allowed): Change argument to unsigned int.\n\n\t* config/pa/fptr.c (_dl_read_access_allowed): Change argument to\n\tunsigned int.  Adjust callers.\n\t(__canonicalize_funcptr_for_compare): Change plabel type to volatile\n\tunsigned int *.  Load relocation offset before function pointer.\n\tAdd barrier to ensure ordering.\n\nFrom-SVN: r277015", "tree": {"sha": "8271cf6e8b4e8e80bde508809a56f2e92ea0f770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8271cf6e8b4e8e80bde508809a56f2e92ea0f770"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85093ac6c9f83d1b1206a21dcd0e243eacf69be9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85093ac6c9f83d1b1206a21dcd0e243eacf69be9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85093ac6c9f83d1b1206a21dcd0e243eacf69be9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85093ac6c9f83d1b1206a21dcd0e243eacf69be9/comments", "author": null, "committer": null, "parents": [{"sha": "70a42a8559e8a73d8aef09c1d938833ffc811aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a42a8559e8a73d8aef09c1d938833ffc811aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a42a8559e8a73d8aef09c1d938833ffc811aaa"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "ed0e900637719012dba26dcb10945f92578c447f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85093ac6c9f83d1b1206a21dcd0e243eacf69be9/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85093ac6c9f83d1b1206a21dcd0e243eacf69be9/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=85093ac6c9f83d1b1206a21dcd0e243eacf69be9", "patch": "@@ -1,3 +1,11 @@\n+2019-10-15  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/fptr.c (_dl_read_access_allowed): Change argument to\n+\tunsigned int.  Adjust callers.\n+\t(__canonicalize_funcptr_for_compare): Change plabel type to volatile\n+\tunsigned int *.  Load relocation offset before function pointer.\n+\tAdd barrier to ensure ordering.\n+\n 2019-10-12  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/lib2funcs.S (__gcc_plt_call): Load branch target to %r21."}, {"sha": "9d2bb73ec98bbbb54d3883081e52e06d97878d3a", "filename": "libgcc/config/pa/fptr.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85093ac6c9f83d1b1206a21dcd0e243eacf69be9/libgcc%2Fconfig%2Fpa%2Ffptr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85093ac6c9f83d1b1206a21dcd0e243eacf69be9/libgcc%2Fconfig%2Fpa%2Ffptr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Ffptr.c?ref=85093ac6c9f83d1b1206a21dcd0e243eacf69be9", "patch": "@@ -53,7 +53,7 @@ typedef int (*fixup_t) (struct link_map *, unsigned int);\n extern unsigned int _GLOBAL_OFFSET_TABLE_;\n \n static inline int\n-_dl_read_access_allowed (unsigned int *addr)\n+_dl_read_access_allowed (unsigned int addr)\n {\n   int result;\n \n@@ -79,7 +79,8 @@ __canonicalize_funcptr_for_compare (fptr_t fptr)\n {\n   static unsigned int fixup_plabel[2] __attribute__((used));\n   fixup_t fixup;\n-  unsigned int *got, *iptr, *plabel;\n+  volatile unsigned int *plabel;\n+  unsigned int *got, *iptr, reloc_offset;\n   int i;\n \n   /* -1 and page 0 are special.  -1 is used in crtend to mark the end of\n@@ -94,17 +95,20 @@ __canonicalize_funcptr_for_compare (fptr_t fptr)\n      to the entry of the PLT stub just before the global offset table.\n      The second word in the plabel contains the relocation offset for the\n      function.  */\n-  plabel = (unsigned int *) ((unsigned int) fptr & ~3);\n-  if (!_dl_read_access_allowed (plabel))\n+  plabel = (volatile unsigned int *) ((unsigned int) fptr & ~3);\n+  if (!_dl_read_access_allowed ((unsigned int)plabel))\n     return (unsigned int) fptr;\n \n   /* Load first word of candidate descriptor.  It should be a pointer\n      with word alignment and point to memory that can be read.  */\n   got = (unsigned int *) plabel[0];\n   if (((unsigned int) got & 3) != 0\n-      || !_dl_read_access_allowed (got))\n+      || !_dl_read_access_allowed ((unsigned int)got))\n     return (unsigned int) fptr;\n \n+  /* We need to load the relocation offset before the function address.  */\n+  reloc_offset = plabel[1];\n+  __sync_synchronize();\n   got = (unsigned int *) (plabel[0] + GOT_FROM_PLT_STUB);\n \n   /* Return the address of the function if the plabel has been resolved.  */\n@@ -140,7 +144,7 @@ __canonicalize_funcptr_for_compare (fptr_t fptr)\n \n   /* Call fixup to resolve the function address.  got[1] contains the\n      link_map pointer and plabel[1] the relocation offset.  */\n-  fixup ((struct link_map *) got[1], plabel[1]);\n+  fixup ((struct link_map *) got[1], reloc_offset);\n \n   return plabel[0];\n }"}]}