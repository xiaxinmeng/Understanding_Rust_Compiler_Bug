{"sha": "57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdkM2FkY2Q1ZTRlOWUzYjliMGYwNWZjNTA1MWZjYmYwYmI4OGYwOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2015-10-16T12:25:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:25:58Z"}, "message": "checks.adb: Fix typo.\n\n2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n\n\t* checks.adb: Fix typo.\n\t* s-osinte-linux.ads: Add header.\n\t* projects.texi: Removed, no longer used.\n\t* s-multip.adb: Minor: fix header.\n\t* sem_ch3.adb, exp_ch7.adb, g-dirope.ads, sinfo.ads, types.ads,\n\ta-textio.adb, s-exctra.adb, ali.adb, back_end.ads, exp_intr.adb,\n\ta-tigeli.adb, exp_ch3.adb, s-os_lib.ads: Remove further references to\n\t.NET.\n\t* gnatlink.adb, opt.ads, exp_aggr.adb, s-solita.adb: Minor comment\n\tupdates.\n\nFrom-SVN: r228880", "tree": {"sha": "b977087bad143c37e8583e90aa75bc7979ea8b65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b977087bad143c37e8583e90aa75bc7979ea8b65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e83ed69230cd8893af4fb5309e55fcbf663be112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83ed69230cd8893af4fb5309e55fcbf663be112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e83ed69230cd8893af4fb5309e55fcbf663be112"}], "stats": {"total": 5212, "additions": 49, "deletions": 5163}, "files": [{"sha": "e7e6001b4833a0aa9991fa95912cfe5e7e6ce90d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -1,3 +1,16 @@\n+2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* checks.adb: Fix typo.\n+\t* s-osinte-linux.ads: Add header.\n+\t* projects.texi: Removed, no longer used.\n+\t* s-multip.adb: Minor: fix header.\n+\t* sem_ch3.adb, exp_ch7.adb, g-dirope.ads, sinfo.ads, types.ads,\n+\ta-textio.adb, s-exctra.adb, ali.adb, back_end.ads, exp_intr.adb,\n+\ta-tigeli.adb, exp_ch3.adb, s-os_lib.ads: Remove further references to\n+\t.NET.\n+\t* gnatlink.adb, opt.ads, exp_aggr.adb, s-solita.adb: Minor comment\n+\tupdates.\n+\n 2015-10-16  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch9.adb (Build_Simple_Entry_Call): Set_Is_Internal on"}, {"sha": "df5e18a7ee107c1c2a6e90b7e3b6801414f2a064", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -695,7 +695,7 @@ package body Ada.Text_IO is\n    --  The implementation of Ada.Text_IO.Get_Line is split into a subunit so\n    --  that different implementations can be used on different systems. In\n    --  particular the standard implementation uses low level stuff that is\n-   --  not appropriate for the JVM and .NET implementations.\n+   --  not appropriate for the VMs.\n \n    procedure Get_Line\n      (Item : out String;"}, {"sha": "8273b0507750eef15cb236d12c687b41e543eba1", "filename": "gcc/ada/a-tigeli.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fa-tigeli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fa-tigeli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tigeli.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n --  The implementation of Ada.Text_IO.Get_Line is split into a subunit so that\n --  different implementations can be used on different systems. This is the\n --  standard implementation (it uses low level features not suitable for use\n---  in the JVM or .NET implementations).\n+--  on virtual machines).\n \n with System;                  use System;\n with System.Storage_Elements; use System.Storage_Elements;"}, {"sha": "c777d39d569c832eb1ad2b517538a426f50c9bcd", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -385,7 +385,7 @@ package body ALI is\n          Write_Str (\"make sure you are using consistent versions \" &\n \n          --  Split the following line so that it can easily be transformed for\n-         --  e.g. JVM/.NET back-ends where the compiler has a different name.\n+         --  other back-ends where the compiler might have a different name.\n \n                     \"of gcc/gnatbind\");\n "}, {"sha": "ee8ab456a664e40bf83781808d47f7c95c49de2a", "filename": "gcc/ada/back_end.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fback_end.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fback_end.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.ads?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -82,8 +82,7 @@ package Back_End is\n    --\n    --  This is a no-op with the gcc back-end (the object file is generated by\n    --  the assembler afterwards), but is needed for back-ends that directly\n-   --  generate the final object file (such as the .NET backend) so that the\n-   --  object file's timestamp is correct when compared with the corresponding\n-   --  ali file by gnatmake.\n+   --  generate the final object file so that the object file's timestamp is\n+   --  correct when compared with the corresponding ali file by gnatmake.\n \n end Back_End;"}, {"sha": "8703bf74b47b4f08dc9108737d9f988582509715", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -3231,7 +3231,7 @@ package body Checks is\n                Rewrite (R_Cno, Make_Null_Statement (Loc));\n             end if;\n \n-         --  The range check raises Constrant_Error explicitly\n+         --  The range check raises Constraint_Error explicitly\n \n          else\n             Install_Static_Check (R_Cno, Loc);"}, {"sha": "5f4234a1078ef6a7ca3c65d18a4722e708e4dc49", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -650,7 +650,8 @@ package body Exp_Aggr is\n       --  component associations that actually need tag adjustment, similar\n       --  to the test in Component_Not_OK_For_Backend for record aggregates\n       --  with tagged components, but not clear whether it's worthwhile ???;\n-      --  in the case of the JVM, object tags are handled implicitly)\n+      --  in the case of virtual machines (no Tagged_Type_Expansion), object\n+      --  tags are handled implicitly).\n \n       if Is_Tagged_Type (Component_Type (Typ))\n         and then Tagged_Type_Expansion"}, {"sha": "edbca032d53eeff9e07b3abc0e8d75b4c5b58723", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -10420,10 +10420,7 @@ package body Exp_Ch3 is\n       --  we don't want an abstract version created because types derived from\n       --  the abstract type may not even have Input available (for example if\n       --  derived from a private view of the abstract type that doesn't have\n-      --  a visible Input), but a VM such as .NET or the Java VM can treat the\n-      --  operation as inherited anyway, and we don't want an abstract function\n-      --  to be (implicitly) inherited in that case because it can lead to a VM\n-      --  exception.\n+      --  a visible Input).\n \n       --  Do not generate stream routines for type Finalization_Master because\n       --  a master may never appear in types and therefore cannot be read or"}, {"sha": "44289952680813caae288ce5e9160d45c71958b1", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -3318,7 +3318,7 @@ package body Exp_Ch7 is\n       Expr : Node_Id;\n \n    begin\n-      --  Standard run-time and .NET/JVM targets use the specialized routine\n+      --  Standard run-time use the specialized routine\n       --  Raise_From_Controlled_Operation.\n \n       if Exception_Extra_Info\n@@ -7656,8 +7656,8 @@ package body Exp_Ch7 is\n       --  Procedure call or raise statement\n \n    begin\n-      --  Standard run-time, .NET/JVM targets: add choice parameter E and pass\n-      --  it to Raise_From_Controlled_Operation so that the original exception\n+      --  Standard run-time: add choice parameter E and pass it to\n+      --  Raise_From_Controlled_Operation so that the original exception\n       --  name and message can be recorded in the exception message for\n       --  Program_Error.\n \n@@ -8083,11 +8083,10 @@ package body Exp_Ch7 is\n       Curr_S := Current_Scope;\n       Encl_S := Scope (Curr_S);\n \n-      --  Insert all actions inluding cleanup generated while analyzing or\n+      --  Insert all actions including cleanup generated while analyzing or\n       --  expanding the transient context back into the tree. Manage the\n       --  secondary stack when the object declaration appears in a library\n-      --  level package [body]. This is not needed for .NET/JVM as those do\n-      --  not support the secondary stack.\n+      --  level package [body].\n \n       Insert_Actions_In_Scope_Around\n         (N         => N,"}, {"sha": "606f6a5968097ebc152bc99956fbc6f27890918d", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -1317,8 +1317,7 @@ package body Exp_Intr is\n \n       --  Generate:\n       --    if Raised and then not Abort then\n-      --       raise Program_Error;                  --  for .NET and\n-      --                                             --  restricted RTS\n+      --       raise Program_Error;                  --  for restricted RTS\n       --         <or>\n       --       Raise_From_Controlled_Operation (E);  --  all other cases\n       --    end if;"}, {"sha": "1b04b94615d408f2155e02215e64c7ea388c765f", "filename": "gcc/ada/g-dirope.ads", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fg-dirope.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fg-dirope.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.ads?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2014, AdaCore                     --\n+--                     Copyright (C) 1998-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -248,12 +248,6 @@ private\n \n    type Dir_Type_Value is new System.Address;\n    --  Low-level address directory structure as returned by opendir in C\n-   --\n-   --  Note that we used to define this type in the body of this package,\n-   --  but this was causing troubles in the context of .NET code generation\n-   --  (because Taft amendment types are not fully implemented and cause\n-   --  undefined references to the class), so we moved the type declaration\n-   --  to the spec's private part, which is no problem in any case here.\n \n    type Dir_Type is access Dir_Type_Value;\n "}, {"sha": "e94cae9af9077ba534ba2cdf663f933deff760cc", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -1861,10 +1861,6 @@ begin\n \n    --  Now, actually link the program\n \n-   --  Skip this step for now on JVM since the Java interpreter will do\n-   --  the actual link at run time. We might consider packing all class files\n-   --  in a .zip file during this step.\n-\n    Link_Step : declare\n       Num_Args : Natural :=\n         (Linker_Options.Last - Linker_Options.First + 1) +"}, {"sha": "992658e47f18e80867cc63023b61893ad993dd94", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -745,9 +745,8 @@ package Opt is\n    GNAT_Encodings : Int;\n    pragma Import (C, GNAT_Encodings, \"gnat_encodings\");\n    --  Constant controlling the balance between GNAT encodings and standard\n-   --  DWARF to emit in the debug information. See jmissing.c and aamissing.c\n-   --  for definitions for dotnet/jgnat and GNAAMP back ends. It accepts the\n-   --  following values.\n+   --  DWARF to emit in the debug information. See aamissing.c for definitions\n+   --  for the GNAAMP back end. It accepts the following values.\n \n    DWARF_GNAT_Encodings_All     : constant Int := 0;\n    DWARF_GNAT_Encodings_GDB     : constant Int := 1;\n@@ -1158,14 +1157,13 @@ package Opt is\n    Optimization_Level : Int;\n    pragma Import (C, Optimization_Level, \"optimize\");\n    --  Constant reflecting the optimization level (0,1,2,3 for -O0,-O1,-O2,-O3)\n-   --  See jmissing.c and aamissing.c for definitions for dotnet/jgnat and\n-   --  GNAAMP back ends.\n+   --  See e.g. aamissing.c for definitions for the GNAAMP back end.\n \n    Optimize_Size : Int;\n    pragma Import (C, Optimize_Size, \"optimize_size\");\n    --  Constant reflecting setting of -Os (optimize for size). Set to nonzero\n-   --  in -Os mode and set to zero otherwise. See jmissing.c and aamissing.c\n-   --  for definitions of \"optimize_size\" for dotnet/jgnat and GNAAMP backends\n+   --  in -Os mode and set to zero otherwise. See aamissing.c for definition\n+   --  of \"optimize_size\" for the GNAAMP backend.\n \n    Output_File_Name_Present : Boolean := False;\n    --  GNATBIND, GNAT, GNATMAKE\n@@ -1431,8 +1429,7 @@ package Opt is\n    --  GNAT\n    --  Set True if tagged types and interfaces should be expanded by the\n    --  front-end. If False, the original tree is left unexpanded for tagged\n-   --  types and dispatching calls, assuming the underlying target supports\n-   --  it (e.g. in the JVM case).\n+   --  types and dispatching calls, assuming the underlying target supports it.\n \n    Target_Dependent_Info_Read_Name : String_Ptr := null;\n    --  GNAT"}, {"sha": "2ca6babc55fbf71bd8af907f1512f5cddea8fa73", "filename": "gcc/ada/projects.texi", "status": "removed", "additions": 0, "deletions": 5101, "changes": 5101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e83ed69230cd8893af4fb5309e55fcbf663be112/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e83ed69230cd8893af4fb5309e55fcbf663be112/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=e83ed69230cd8893af4fb5309e55fcbf663be112"}, {"sha": "c19807a4bf47edc3657d951f87514f04ec6c3ea2", "filename": "gcc/ada/s-exctra.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-exctra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-exctra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exctra.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2014, AdaCore                     --\n+--                     Copyright (C) 2000-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -69,8 +69,6 @@ package body System.Exception_Traces is\n      (Traceback : System.Address;\n       Len       : Natural) return String\n    is\n-      --  Note: do not use an address clause, which is not supported under .NET\n-\n       subtype Trace_Array is Traceback_Entries.Tracebacks_Array (1 .. Len);\n       type Trace_Array_Access is access all Trace_Array;\n "}, {"sha": "239d5e0ee73ce12c7544e52963823b2ba39acbf1", "filename": "gcc/ada/s-multip.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-multip.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-multip.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-multip.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 2010-2013, Free Software Foundation, Inc.          --\n+--         Copyright (C) 2010-2015, Free Software Foundation, Inc.          --\n --                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --"}, {"sha": "142937ea41476de52104f395a0a833fb86bb075e", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -48,9 +48,6 @@\n --  be used by other predefined packages. User access to this package is via\n --  a renaming of this package in GNAT.OS_Lib (file g-os_lib.ads).\n \n---  Note: a distinct body for this spec is included in the .NET runtime library\n---  and must be kept in sync with changes made in this file.\n-\n pragma Compiler_Unit_Warning;\n \n with System;"}, {"sha": "8dfbbe83044144b33b799eafe2aca638b8736289", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -526,6 +526,10 @@ package System.OS_Interface is\n       destructor : destructor_pointer) return int;\n    pragma Import (C, pthread_key_create, \"pthread_key_create\");\n \n+   ----------------\n+   -- Extensions --\n+   ----------------\n+\n    CPU_SETSIZE : constant := 1_024;\n    --  Size of the cpu_set_t mask on most linux systems (SUSE 11 uses 4_096).\n    --  This is kept for backward compatibility (System.Task_Info uses it), but"}, {"sha": "d1ca2c474c7a1eb6b5d2998812787cd949c05428", "filename": "gcc/ada/s-solita.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-solita.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fs-solita.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-solita.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -159,8 +159,7 @@ package body System.Soft_Links.Tasking is\n \n       --  We do not want to enable this check and e.g. call System.OS_Lib.Abort\n       --  here because some restricted run-times may not have System.OS_Lib\n-      --  (e.g. JVM), and calling abort may do more harm than good to the\n-      --  main application.\n+      --  and calling abort may do more harm than good to the main application.\n \n       pragma Assert (Self_Id = STPO.Environment_Task);\n "}, {"sha": "8f979292e4b02bcfd577b34093441745670d28af", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -10024,9 +10024,6 @@ package body Sem_Ch3 is\n          --  operations used in dispatching selects since we always provide\n          --  automatic overridings for these subprograms.\n \n-         --  Also ignore this rule for convention CIL since .NET libraries\n-         --  do bizarre things with interfaces???\n-\n          --  The partial view of T may have been a private extension, for\n          --  which inherited functions dispatching on result are abstract.\n          --  If the full view is a null extension, there is no need for"}, {"sha": "77d0a2dd95e2b9f72a269341184b4842dba34209", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -6539,7 +6539,7 @@ package Sinfo is\n       --  For some back ends, such as gcc with ZCX, \"at end\" is implemented\n       --  entirely in the back end. In this case, a handled sequence of\n       --  statements with an \"at end\" cannot also have exception handlers.\n-      --  For other back ends, such as gcc with SJLJ and .NET, the\n+      --  For other back ends, such as gcc with front-end SJLJ, the\n       --  implementation is split between the front end and back end; the front\n       --  end implements 3, and the back end implements 1 and 2. In this case,\n       --  if there is an \"at end\", the front end inserts the appropriate"}, {"sha": "7a19dee126eb8994b1bef919b17ee7d9e526728c", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=57d3adcd5e4e9e3b9b0f05fc5051fcbf0bb88f09", "patch": "@@ -844,10 +844,7 @@ package Types is\n    --  Note on ordering of references. For the tables in Ada.Exceptions units,\n    --  usually the ordering does not matter, and we use the same ordering as\n    --  is used here (note the requirement in the ordering here that CE/PE/SE\n-   --  codes be kept together, so the subtype declarations work OK). However,\n-   --  there is an important exception, which is in a-except-2005.adb, where\n-   --  ordering of the Rcheck routines must correspond to the ordering of the\n-   --  Rmsg_xx messages. This is required by the .NET scripts.\n+   --  codes be kept together, so the subtype declarations work OK).\n \n    type RT_Exception_Code is\n      (CE_Access_Check_Failed,            -- 00"}]}