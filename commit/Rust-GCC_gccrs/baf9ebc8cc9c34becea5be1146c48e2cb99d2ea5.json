{"sha": "baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFmOWViYzhjYzljMzRiZWNlYTViZTExNDZjNDhlMmNiOTlkMmVhNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-01-04T17:47:04Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-01-04T17:47:04Z"}, "message": "re PR c++/77545 (ICE on valid C++11 code: in potential_constant_expression_1, at cp/constexpr.c:5480)\n\n\tPR c++/77545\n\tPR c++/77284\n\t* constexpr.c (potential_constant_expression_1): Handle CLEANUP_STMT.\n\n\t* g++.dg/cpp0x/range-for32.C: New test.\n\t* g++.dg/cpp0x/range-for33.C: New test.\n\nFrom-SVN: r244062", "tree": {"sha": "1e8977eb530936cd4c8f16bac4c5909d6bd3524b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e8977eb530936cd4c8f16bac4c5909d6bd3524b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dd9a9d0c9294455077ba6401701fd3566dcf07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd9a9d0c9294455077ba6401701fd3566dcf07c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd9a9d0c9294455077ba6401701fd3566dcf07c"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "48061a02f8b13f60e6f7d6c53db1f4ba082d6079", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "patch": "@@ -1,3 +1,9 @@\n+2017-01-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/77545\n+\tPR c++/77284\n+\t* constexpr.c (potential_constant_expression_1): Handle CLEANUP_STMT.\n+\n 2017-01-04  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/66735"}, {"sha": "a3dec6884abef73ee9b9313370693ac958b8fb58", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "patch": "@@ -5661,6 +5661,7 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict,\n       /* We can see these in statement-expressions.  */\n       return true;\n \n+    case CLEANUP_STMT:\n     case EMPTY_CLASS_EXPR:\n       return false;\n "}, {"sha": "d8ff32fb05e52ac1c0b73c79c84d1d00456cf631", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "patch": "@@ -1,3 +1,10 @@\n+2017-01-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/77545\n+\tPR c++/77284\n+\t* g++.dg/cpp0x/range-for32.C: New test.\n+\t* g++.dg/cpp0x/range-for33.C: New test.\n+\n 2017-01-04  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/Wmissing-braces-fixits.c: New test case."}, {"sha": "375a7073a4150f80129e16f6bb1035e49e67cb8b", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for32.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for32.C?ref=baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/77545\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wno-pedantic\" }\n+\n+template < typename T > struct A\n+{\n+  A ();\n+  ~A ();\n+  T t;\n+};\n+\n+void f (A < int > a)\n+{\n+  for (auto x : (A<int>[]) { a })\n+    ;\n+}"}, {"sha": "206f36e481ebed595a5acc0274cda6d9cf09d680", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for33.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for33.C?ref=baf9ebc8cc9c34becea5be1146c48e2cb99d2ea5", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/77284\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+\n+struct A\n+{\n+  ~A () {}\n+};\n+\n+void foo (A & v)\n+{\n+  for (A a : { v }) {};\n+}"}]}