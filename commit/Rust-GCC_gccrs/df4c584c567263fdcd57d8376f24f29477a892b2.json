{"sha": "df4c584c567263fdcd57d8376f24f29477a892b2", "node_id": "C_kwDOANBUbNoAKGRmNGM1ODRjNTY3MjYzZmRjZDU3ZDgzNzZmMjRmMjk0NzdhODkyYjI", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-05T11:24:49Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-05T13:49:01Z"}, "message": "range-op: Keep nonzero mask up to date with truncating casts.\n\ngcc/ChangeLog:\n\n\t* range-op.cc (operator_cast::fold_range): Handle truncating casts\n\tfor nonzero masks.", "tree": {"sha": "7ae0cfcb44cf163c03ba924278f65f3bfb745a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ae0cfcb44cf163c03ba924278f65f3bfb745a35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df4c584c567263fdcd57d8376f24f29477a892b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df4c584c567263fdcd57d8376f24f29477a892b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df4c584c567263fdcd57d8376f24f29477a892b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df4c584c567263fdcd57d8376f24f29477a892b2/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8473c9a2b8f27b6882b54d012e466e244445733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8473c9a2b8f27b6882b54d012e466e244445733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8473c9a2b8f27b6882b54d012e466e244445733"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "df0735cb42a837577859ef322ac8920c539e0d5a", "filename": "gcc/range-op.cc", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df4c584c567263fdcd57d8376f24f29477a892b2/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df4c584c567263fdcd57d8376f24f29477a892b2/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=df4c584c567263fdcd57d8376f24f29477a892b2", "patch": "@@ -2516,13 +2516,17 @@ operator_cast::fold_range (irange &r, tree type ATTRIBUTE_UNUSED,\n \treturn true;\n     }\n \n-  // Pass nonzero mask through the cast.\n-  if (!truncating_cast_p (inner, outer))\n-    {\n-      wide_int nz = inner.get_nonzero_bits ();\n-      nz = wide_int::from (nz, TYPE_PRECISION (type), TYPE_SIGN (inner.type ()));\n-      r.set_nonzero_bits (nz);\n-    }\n+  // Update the nonzero mask.  Truncating casts are problematic unless\n+  // the conversion fits in the resulting outer type.\n+  wide_int nz = inner.get_nonzero_bits ();\n+  if (truncating_cast_p (inner, outer)\n+      && wi::rshift (nz, wi::uhwi (TYPE_PRECISION (outer.type ()),\n+\t\t\t\t   TYPE_PRECISION (inner.type ())),\n+\t\t     TYPE_SIGN (inner.type ())) != 0)\n+    return true;\n+  nz = wide_int::from (nz, TYPE_PRECISION (type), TYPE_SIGN (inner.type ()));\n+  r.set_nonzero_bits (nz);\n+\n   return true;\n }\n "}]}