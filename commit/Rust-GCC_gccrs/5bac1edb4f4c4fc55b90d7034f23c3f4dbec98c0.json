{"sha": "5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJhYzFlZGI0ZjRjNGZjNTViOTBkNzAzNGYyM2MzZjRkYmVjOThjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-08T00:03:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-08T00:03:28Z"}, "message": "re PR target/83252 (Wrong code with \"-march=skylake-avx512 -O3\")\n\n\tPR target/83252\n\t* gcc.target/i386/i386.exp (check_effective_target_bmi2): Moved to ...\n\t* lib/target-supports.exp (check_effective_target_bmi2): ... here.  Guard with\n\ti?86-*-* x86_64-*-*.\n\t* g++.dg/opt/pr83252.C: New test.\n\nFrom-SVN: r255487", "tree": {"sha": "1d7f338706aa94682ab2077889fbe1581a0ef3ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d7f338706aa94682ab2077889fbe1581a0ef3ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5aed1e5d7b8f02ed81178f65d84cbd27ec88cd"}], "stats": {"total": 123, "additions": 112, "deletions": 11}, "files": [{"sha": "564a301e700c3b27e49cc1dea908531537de4137", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0", "patch": "@@ -1,5 +1,11 @@\n 2017-12-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/83252\n+\t* gcc.target/i386/i386.exp (check_effective_target_bmi2): Moved to ...\n+\t* lib/target-supports.exp (check_effective_target_bmi2): ... here.  Guard with\n+\ti?86-*-* x86_64-*-*.\n+\t* g++.dg/opt/pr83252.C: New test.\n+\n \tPR target/81906\n \t* gcc.target/i386/pr81906.c: New test.\n "}, {"sha": "835b77fd18ce033b26106998862958ff0b61fae6", "filename": "gcc/testsuite/g++.dg/opt/pr83252.C", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83252.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83252.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83252.C?ref=5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0", "patch": "@@ -0,0 +1,92 @@\n+// PR target/83252\n+// { dg-do run }\n+// { dg-options \"-O3\" }\n+// { dg-additional-options \"-mbmi2 -mtune=intel\" { target bmi2 } }\n+\n+#if __SIZEOF_INT__ == 4 && __SIZEOF_LONG_LONG__ == 8 && __CHAR_BIT__ == 8\n+\n+#ifdef __BMI2__\n+#include \"../../gcc.target/i386/bmi2-check.h\"\n+#endif\n+\n+long long h = 707493562598231894LL, i, n, x3, x5;\n+long long j, l = -2228108721620697360LL, o, y9;\n+int k, p, r, s, t = 2, u, w, z8, x7, y4, y5, y6, y7, y8, x1, x2, x4, x6, d;\n+unsigned v, x = 751359462, z = 1, y3 = 60;\n+unsigned *y = &x, *z2 = &z, *z3 = &v;\n+unsigned long long z1 = 2;\n+unsigned long long *z4 = &z1;\n+long long *z7;\n+unsigned long long z9 = 7091529791657LL;\n+\n+void\n+foo ()\n+{\n+  if ((-2783342978U * (int) l || z) && z2 && h && z1 && z9 & ~-(-2783342978U * (int) l))\n+    {\n+      i = 3060393125LL < n;\n+      y7 = o >> *y - 751359400;\n+      *z3 = x7;\n+      long a = (o >> *y - 751359400 >> ~-(-2783342978U * (int) l) - 88480234) - (-2783342978U * (int) l);\n+      y6 = a;\n+      if (~0 % *z4 % 5)\n+\ty8 = -3 * (l - 4 ? : 407228174574);\n+      if (y3 < 1)\n+\t{\n+\t  long long *b = &y9;\n+\t  z3 = 0;\n+\t  int c = *z2;\n+\t  *z7 = 0;\n+\t  x1 = ~(-((unsigned) (-2783342978U * (unsigned long long) l)));\n+\t  p = *b & j;\n+\t  x2 = c;\n+\t}\n+      else\n+\t{\n+\t  j = 0;\n+\t  int e = !0 % (7 % *z4);\n+\t  r = ((s || !k) && t) - -(-2783342978U * (unsigned long long) l);\n+\t  x3 = o >> *y - 751359400;\n+\t  y9 = z9;\n+\t  long f = o >> *y - 751359400 >> ~-(-2783342978U * (int) l) - 88480234;\n+\t  x4 = z1;\n+\t  u = n * f * e * y4;\n+\t}\n+      if (8ULL * -(-(-2783342978U * (int) l)))\n+\t;\n+      else\n+\t{\n+\t  *z3 = 0;\n+\t  int g = 3 & y5;\n+\t  x5 = (unsigned) (~o + 9223372036854775807 >> l);\n+\t  z8 = g + y9;\n+\t  v = j || ~0 + 9223372036854775807 >> ~-(-2783342978U * (int) l);\n+\t  x6 = o >> (8 * l);\n+\t  w = *y ? -2783342978U * l : 0;\n+\t}\n+    }\n+}\n+\n+#ifdef __BMI2__\n+void\n+bmi2_test (void)\n+{\n+  foo ();\n+  if (r != 88480289)\n+    __builtin_abort ();\n+}\n+#else\n+int\n+main ()\n+{\n+  foo ();\n+  if (r != 88480289)\n+    __builtin_abort ();\n+}\n+#endif\n+#else\n+int\n+main ()\n+{\n+}\n+#endif"}, {"sha": "c663a12bcb39c5748266c328a6dc1fa69b63b385", "filename": "gcc/testsuite/gcc.target/i386/i386.exp", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp?ref=5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0", "patch": "@@ -207,17 +207,6 @@ proc check_effective_target_bmi { } {\n     } \"-mbmi\" ]\n }\n \n-# Return 1 if bmi2 instructions can be compiled.\n-proc check_effective_target_bmi2 { } {\n-    return [check_no_compiler_messages bmi2 object {\n-\tunsigned int\n-\t_bzhi_u32 (unsigned int __X, unsigned int __Y)\n-\t{\n-\t    return __builtin_ia32_bzhi_si (__X, __Y);\n-\t}\n-    } \"-mbmi2\" ]\n-}\n-\n # Return 1 if ADX instructions can be compiled.\n proc check_effective_target_adx { } {\n     return [check_no_compiler_messages adx object {"}, {"sha": "ff8c8050652baf21efa6066142e60dec06b5f924", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=5bac1edb4f4c4fc55b90d7034f23c3f4dbec98c0", "patch": "@@ -1856,6 +1856,20 @@ proc check_effective_target_avx512f_runtime { } {\n     return 0\n }\n \n+# Return 1 if bmi2 instructions can be compiled.\n+proc check_effective_target_bmi2 { } {\n+    if { !([istarget i?86-*-*] || [istarget x86_64-*-*]) } {\n+        return 0\n+    }\n+    return [check_no_compiler_messages bmi2 object {\n+\tunsigned int\n+\t_bzhi_u32 (unsigned int __X, unsigned int __Y)\n+\t{\n+\t    return __builtin_ia32_bzhi_si (__X, __Y);\n+\t}\n+    } \"-mbmi2\" ]\n+}\n+\n # Return 1 if the target supports executing MIPS Paired-Single instructions,\n # 0 otherwise.  Cache the result.\n "}]}