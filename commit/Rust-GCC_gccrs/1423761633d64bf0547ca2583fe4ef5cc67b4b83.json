{"sha": "1423761633d64bf0547ca2583fe4ef5cc67b4b83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQyMzc2MTYzM2Q2NGJmMDU0N2NhMjU4M2ZlNGVmNWNjNjdiNGI4Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-30T11:33:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-30T11:33:53Z"}, "message": "[multiple changes]\n\n2012-01-30  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Check_Interfaces): Report an error when a\n\tunit from Library_Interface is not a unit of the project.\n\n2012-01-30  Vincent Pucci  <pucci@adacore.com>\n\n\t* sem_prag.adb (Make_Aspect_For_PPC_In_Gen_Sub_Decl): Parent\n\tlinks fixed inside PPC pragmas.\n\t* sem_ch12.adb: Move call to Make_Aspect_For_PPC_In_Gen_Sub_Decl.\n\n2012-01-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-ransee.ads: Minor reformatting.\n\nFrom-SVN: r183705", "tree": {"sha": "cfcbda0dda9cc0c084e0a1268ea454d024802355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfcbda0dda9cc0c084e0a1268ea454d024802355"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1423761633d64bf0547ca2583fe4ef5cc67b4b83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1423761633d64bf0547ca2583fe4ef5cc67b4b83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1423761633d64bf0547ca2583fe4ef5cc67b4b83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1423761633d64bf0547ca2583fe4ef5cc67b4b83/comments", "author": null, "committer": null, "parents": [{"sha": "de6e4fc49410404bb589a382822a37656b37c577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6e4fc49410404bb589a382822a37656b37c577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6e4fc49410404bb589a382822a37656b37c577"}], "stats": {"total": 84, "additions": 65, "deletions": 19}, "files": [{"sha": "624aa117ef0ce3016fef70692043646d36d5491d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1423761633d64bf0547ca2583fe4ef5cc67b4b83", "patch": "@@ -1,3 +1,18 @@\n+2012-01-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Check_Interfaces): Report an error when a\n+\tunit from Library_Interface is not a unit of the project.\n+\n+2012-01-30  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* sem_prag.adb (Make_Aspect_For_PPC_In_Gen_Sub_Decl): Parent\n+\tlinks fixed inside PPC pragmas.\n+\t* sem_ch12.adb: Move call to Make_Aspect_For_PPC_In_Gen_Sub_Decl.\n+\n+2012-01-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-ransee.ads: Minor reformatting.\n+\n 2012-01-30  Pascal Obry  <obry@adacore.com>\n \n \t* prj.ads, prj.adb (For_Each_Source): Add support for skipping"}, {"sha": "0fbcd115f2d9ecaa7b6ba13a9ef0d28d7fd08d6b", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=1423761633d64bf0547ca2583fe4ef5cc67b4b83", "patch": "@@ -2556,6 +2556,8 @@ package body Prj.Nmsc is\n \n       Interface_ALIs : String_List_Id := Nil_String;\n \n+      Unit_Found : Boolean;\n+\n    begin\n       if not Interfaces.Default then\n \n@@ -2583,7 +2585,15 @@ package body Prj.Nmsc is\n             Project_2 := Project;\n             Big_Loop :\n             while Project_2 /= No_Project loop\n-               Iter := For_Each_Source (Data.Tree, Project_2);\n+               if Project.Qualifier = Aggregate_Library then\n+                  --  For an aggregate library we want to consider sources of\n+                  --  all aggregated projects.\n+\n+                  Iter := For_Each_Source (Data.Tree);\n+\n+               else\n+                  Iter := For_Each_Source (Data.Tree, Project_2);\n+               end if;\n \n                loop\n                   Source := Prj.Element (Iter);\n@@ -2680,11 +2690,20 @@ package body Prj.Nmsc is\n             Get_Name_String (Element.Value);\n             To_Lower (Name_Buffer (1 .. Name_Len));\n             Name := Name_Find;\n+            Unit_Found := False;\n \n             Project_2 := Project;\n             Big_Loop_2 :\n             while Project_2 /= No_Project loop\n-               Iter := For_Each_Source (Data.Tree, Project_2);\n+               if Project.Qualifier = Aggregate_Library then\n+                  --  For an aggregate library we want to consider sources of\n+                  --  all aggregated projects.\n+\n+                  Iter := For_Each_Source (Data.Tree);\n+\n+               else\n+                  Iter := For_Each_Source (Data.Tree, Project_2);\n+               end if;\n \n                loop\n                   Source := Prj.Element (Iter);\n@@ -2731,6 +2750,7 @@ package body Prj.Nmsc is\n                           String_Element_Table.Last (Shared.String_Elements);\n                      end if;\n \n+                     Unit_Found := True;\n                      exit Big_Loop_2;\n                   end if;\n \n@@ -2740,6 +2760,15 @@ package body Prj.Nmsc is\n                Project_2 := Project_2.Extends;\n             end loop Big_Loop_2;\n \n+            if not Unit_Found then\n+               Error_Msg_Name_1 := Name_Id (Name);\n+\n+               Error_Msg\n+                 (Data.Flags,\n+                  \"%% is not a unit of this project\",\n+                  Element.Location, Project);\n+            end if;\n+\n             List := Element.Next;\n          end loop;\n "}, {"sha": "d5414efcecefb4b6906a8455a56749989e7a6f48", "filename": "gcc/ada/s-ransee.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2Fs-ransee.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2Fs-ransee.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ransee.ads?ref=1423761633d64bf0547ca2583fe4ef5cc67b4b83", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---               Copyright (C) 2011, Free Software Foundation, Inc.         --\n+--            Copyright (C) 2011-2012, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,7 @@\n --  o  one based on Ada.Calendar\n --  o  one based on Ada.Real_Time\n \n---  This is required because Ada.Calendar cannot be used on ravenscar, but\n+--  This is required because Ada.Calendar cannot be used on Ravenscar, but\n --  Ada.Real_Time drags in the whole tasking runtime on regular platforms.\n \n package System.Random_Seed is"}, {"sha": "34c100eb5452fa719c86135d16d93ffe2ec18b68", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=1423761633d64bf0547ca2583fe4ef5cc67b4b83", "patch": "@@ -3112,15 +3112,6 @@ package body Sem_Ch12 is\n          end;\n       end if;\n \n-      --  For ASIS purposes, convert any postcondition, precondition pragmas\n-      --  into aspects, if N is not a compilation unit by itself, in order to\n-      --  enable the analysis of expressions inside the corresponding PPC\n-      --  pragmas.\n-\n-      if ASIS_Mode and then Is_List_Member (N) then\n-         Make_Aspect_For_PPC_In_Gen_Sub_Decl (N);\n-      end if;\n-\n       Spec := Specification (N);\n       Id := Defining_Entity (Spec);\n       Generate_Definition (Id);\n@@ -3216,6 +3207,15 @@ package body Sem_Ch12 is\n \n       Save_Global_References (Original_Node (N));\n \n+      --  For ASIS purposes, convert any postcondition, precondition pragmas\n+      --  into aspects, if N is not a compilation unit by itself, in order to\n+      --  enable the analysis of expressions inside the corresponding PPC\n+      --  pragmas.\n+\n+      if ASIS_Mode and then Is_List_Member (N) then\n+         Make_Aspect_For_PPC_In_Gen_Sub_Decl (N);\n+      end if;\n+\n       --  To capture global references, analyze the expressions of aspects,\n       --  and propagate information to original tree. Note that in this case\n       --  analysis of attributes is not delayed until the freeze point."}, {"sha": "326573f6aa8ca3a10613e1b60bc3fc98a6babc61", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1423761633d64bf0547ca2583fe4ef5cc67b4b83/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1423761633d64bf0547ca2583fe4ef5cc67b4b83", "patch": "@@ -15286,7 +15286,6 @@ package body Sem_Prag is\n       Aspects : constant List_Id := New_List;\n       Loc     : constant Source_Ptr := Sloc (Decl);\n       Or_Decl : constant Node_Id := Original_Node (Decl);\n-      Aspect  : Node_Id;\n \n       Original_Aspects : List_Id;\n       --  To capture global references, a copy of the created aspects must be\n@@ -15309,16 +15308,19 @@ package body Sem_Prag is\n \n                --  Make an aspect from any PPC pragma\n \n-               Aspect :=\n+               Append (\n                  Make_Aspect_Specification (Loc,\n                    Identifier =>\n                      Make_Identifier (Loc, Chars (Pragma_Identifier (Prag))),\n-                   Expression => Expression (Prag_Arg_Ass));\n+                   Expression =>\n+                     Copy_Separate_Tree (Expression (Prag_Arg_Ass))),\n+                 Aspects);\n \n-               Append (Aspect, Aspects);\n-\n-               --  Set the pragma node analyzed to avoid any further analysis\n+               --  Generate the analysis information in the pragma expression\n+               --  and then set the pragma node analyzed to avoid any further\n+               --  analysis.\n \n+               Analyze (Expression (Prag_Arg_Ass));\n                Set_Analyzed (Prag, True);\n \n             when others => null;"}]}