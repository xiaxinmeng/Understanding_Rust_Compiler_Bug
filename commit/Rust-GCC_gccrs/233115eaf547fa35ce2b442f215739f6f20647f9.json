{"sha": "233115eaf547fa35ce2b442f215739f6f20647f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMzMTE1ZWFmNTQ3ZmEzNWNlMmI0NDJmMjE1NzM5ZjZmMjA2NDdmOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-08-07T04:42:49Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-08-07T04:42:49Z"}, "message": "runtime: support NumCPU() on more platforms Added support for Solaris, Irix, *BSD (including Darwin).\n\nruntime: support NumCPU() on more platforms\n        Added support for Solaris, Irix, *BSD (including Darwin).\n        Still missing support for RTEMS.\n        Fixes issue 3698 in Go issue tracker.\n\nFrom-SVN: r190197", "tree": {"sha": "1bca221ed18cd8f917eb75d5ad3cf307a2cb51e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bca221ed18cd8f917eb75d5ad3cf307a2cb51e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/233115eaf547fa35ce2b442f215739f6f20647f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233115eaf547fa35ce2b442f215739f6f20647f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/233115eaf547fa35ce2b442f215739f6f20647f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233115eaf547fa35ce2b442f215739f6f20647f9/comments", "author": null, "committer": null, "parents": [{"sha": "2dbfe2c6d5755d4229004d38a9c8e0b1eecdf81c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dbfe2c6d5755d4229004d38a9c8e0b1eecdf81c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dbfe2c6d5755d4229004d38a9c8e0b1eecdf81c"}], "stats": {"total": 252, "additions": 210, "deletions": 42}, "files": [{"sha": "3d2c8b94008ff51bc72b8c8e356e1c180f007293", "filename": "libgo/Makefile.am", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -390,6 +390,32 @@ else\n runtime_lock_files = runtime/lock_sema.c runtime/thread-sema.c\n endif\n \n+if LIBGO_IS_LINUX\n+runtime_getncpu_file = runtime/getncpu-linux.c\n+else\n+if LIBGO_IS_DARWIN\n+runtime_getncpu_file = runtime/getncpu-bsd.c\n+else\n+if LIBGO_IS_IRIX\n+runtime_getncpu_file = runtime/getncpu-irix.c\n+else\n+if LIBGO_IS_SOLARIS\n+runtime_getncpu_file = runtime/getncpu-solaris.c\n+else\n+if LIBGO_IS_FREEBSD\n+runtime_getncpu_file = runtime/getncpu-bsd.c\n+else\n+if LIBGO_IS_NETBSD\n+runtime_getncpu_file = runtime/getncpu-bsd.c\n+else\n+runtime_getncpu_file = runtime/getncpu-none.c\n+endif\n+endif\n+endif\n+endif\n+endif\n+endif\n+\n runtime_files = \\\n \truntime/go-append.c \\\n \truntime/go-assert.c \\\n@@ -481,7 +507,8 @@ runtime_files = \\\n \tsema.c \\\n \tsigqueue.c \\\n \tstring.c \\\n-\ttime.c\n+\ttime.c \\\n+\t$(runtime_getncpu_file)\n \n goc2c.$(OBJEXT): runtime/goc2c.c\n \t$(CC_FOR_BUILD) -c $(CFLAGS_FOR_BUILD) $<"}, {"sha": "14ae2a54a2781534bd986bfce04d5667f4d58681", "filename": "libgo/Makefile.in", "status": "modified", "additions": 64, "deletions": 5, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -213,13 +213,23 @@ am__libgo_la_SOURCES_DIST = runtime/go-append.c runtime/go-assert.c \\\n \truntime/runtime.c runtime/signal_unix.c runtime/thread.c \\\n \truntime/yield.c runtime/rtems-task-variable-add.c iface.c \\\n \tmalloc.c map.c mprof.c reflect.c runtime1.c sema.c sigqueue.c \\\n-\tstring.c time.c\n+\tstring.c time.c runtime/getncpu-none.c runtime/getncpu-bsd.c \\\n+\truntime/getncpu-solaris.c runtime/getncpu-irix.c \\\n+\truntime/getncpu-linux.c\n @LIBGO_IS_LINUX_FALSE@am__objects_1 = lock_sema.lo thread-sema.lo\n @LIBGO_IS_LINUX_TRUE@am__objects_1 = lock_futex.lo thread-linux.lo\n @HAVE_SYS_MMAN_H_FALSE@am__objects_2 = mem_posix_memalign.lo\n @HAVE_SYS_MMAN_H_TRUE@am__objects_2 = mem.lo\n @LIBGO_IS_RTEMS_TRUE@am__objects_3 = rtems-task-variable-add.lo\n-am__objects_4 = go-append.lo go-assert.lo go-assert-interface.lo \\\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@am__objects_4 = getncpu-none.lo\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_TRUE@@LIBGO_IS_SOLARIS_FALSE@am__objects_4 = getncpu-bsd.lo\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_TRUE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_FALSE@am__objects_4 = getncpu-bsd.lo\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_TRUE@am__objects_4 = getncpu-solaris.lo\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_IRIX_TRUE@@LIBGO_IS_LINUX_FALSE@am__objects_4 = getncpu-irix.lo\n+@LIBGO_IS_DARWIN_TRUE@@LIBGO_IS_LINUX_FALSE@am__objects_4 =  \\\n+@LIBGO_IS_DARWIN_TRUE@@LIBGO_IS_LINUX_FALSE@\tgetncpu-bsd.lo\n+@LIBGO_IS_LINUX_TRUE@am__objects_4 = getncpu-linux.lo\n+am__objects_5 = go-append.lo go-assert.lo go-assert-interface.lo \\\n \tgo-byte-array-to-string.lo go-breakpoint.lo go-caller.lo \\\n \tgo-callers.lo go-can-convert-interface.lo go-cgo.lo \\\n \tgo-check-interface.lo go-construct-map.lo \\\n@@ -244,8 +254,9 @@ am__objects_4 = go-append.lo go-assert.lo go-assert-interface.lo \\\n \t$(am__objects_2) mfinal.lo mfixalloc.lo mgc0.lo mheap.lo \\\n \tmsize.lo print.lo proc.lo runtime.lo signal_unix.lo thread.lo \\\n \tyield.lo $(am__objects_3) iface.lo malloc.lo map.lo mprof.lo \\\n-\treflect.lo runtime1.lo sema.lo sigqueue.lo string.lo time.lo\n-am_libgo_la_OBJECTS = $(am__objects_4)\n+\treflect.lo runtime1.lo sema.lo sigqueue.lo string.lo time.lo \\\n+\t$(am__objects_4)\n+am_libgo_la_OBJECTS = $(am__objects_5)\n libgo_la_OBJECTS = $(am_libgo_la_OBJECTS)\n libgo_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(libgo_la_LDFLAGS) \\\n@@ -807,6 +818,13 @@ toolexeclibgounicode_DATA = \\\n @LIBGO_IS_RTEMS_TRUE@rtems_task_variable_add_file = runtime/rtems-task-variable-add.c\n @LIBGO_IS_LINUX_FALSE@runtime_lock_files = runtime/lock_sema.c runtime/thread-sema.c\n @LIBGO_IS_LINUX_TRUE@runtime_lock_files = runtime/lock_futex.c runtime/thread-linux.c\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@runtime_getncpu_file = runtime/getncpu-none.c\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_TRUE@@LIBGO_IS_SOLARIS_FALSE@runtime_getncpu_file = runtime/getncpu-bsd.c\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_TRUE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_FALSE@runtime_getncpu_file = runtime/getncpu-bsd.c\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_TRUE@runtime_getncpu_file = runtime/getncpu-solaris.c\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_IRIX_TRUE@@LIBGO_IS_LINUX_FALSE@runtime_getncpu_file = runtime/getncpu-irix.c\n+@LIBGO_IS_DARWIN_TRUE@@LIBGO_IS_LINUX_FALSE@runtime_getncpu_file = runtime/getncpu-bsd.c\n+@LIBGO_IS_LINUX_TRUE@runtime_getncpu_file = runtime/getncpu-linux.c\n runtime_files = \\\n \truntime/go-append.c \\\n \truntime/go-assert.c \\\n@@ -898,7 +916,8 @@ runtime_files = \\\n \tsema.c \\\n \tsigqueue.c \\\n \tstring.c \\\n-\ttime.c\n+\ttime.c \\\n+\t$(runtime_getncpu_file)\n \n go_bufio_files = \\\n \tgo/bufio/bufio.go\n@@ -2367,6 +2386,11 @@ distclean-compile:\n \n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chan.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpuprof.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getncpu-bsd.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getncpu-irix.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getncpu-linux.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getncpu-none.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getncpu-solaris.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-append.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-assert-interface.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/go-assert.Plo@am__quote@\n@@ -3092,6 +3116,41 @@ rtems-task-variable-add.lo: runtime/rtems-task-variable-add.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rtems-task-variable-add.lo `test -f 'runtime/rtems-task-variable-add.c' || echo '$(srcdir)/'`runtime/rtems-task-variable-add.c\n \n+getncpu-none.lo: runtime/getncpu-none.c\n+@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT getncpu-none.lo -MD -MP -MF $(DEPDIR)/getncpu-none.Tpo -c -o getncpu-none.lo `test -f 'runtime/getncpu-none.c' || echo '$(srcdir)/'`runtime/getncpu-none.c\n+@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/getncpu-none.Tpo $(DEPDIR)/getncpu-none.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/getncpu-none.c' object='getncpu-none.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o getncpu-none.lo `test -f 'runtime/getncpu-none.c' || echo '$(srcdir)/'`runtime/getncpu-none.c\n+\n+getncpu-bsd.lo: runtime/getncpu-bsd.c\n+@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT getncpu-bsd.lo -MD -MP -MF $(DEPDIR)/getncpu-bsd.Tpo -c -o getncpu-bsd.lo `test -f 'runtime/getncpu-bsd.c' || echo '$(srcdir)/'`runtime/getncpu-bsd.c\n+@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/getncpu-bsd.Tpo $(DEPDIR)/getncpu-bsd.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/getncpu-bsd.c' object='getncpu-bsd.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o getncpu-bsd.lo `test -f 'runtime/getncpu-bsd.c' || echo '$(srcdir)/'`runtime/getncpu-bsd.c\n+\n+getncpu-solaris.lo: runtime/getncpu-solaris.c\n+@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT getncpu-solaris.lo -MD -MP -MF $(DEPDIR)/getncpu-solaris.Tpo -c -o getncpu-solaris.lo `test -f 'runtime/getncpu-solaris.c' || echo '$(srcdir)/'`runtime/getncpu-solaris.c\n+@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/getncpu-solaris.Tpo $(DEPDIR)/getncpu-solaris.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/getncpu-solaris.c' object='getncpu-solaris.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o getncpu-solaris.lo `test -f 'runtime/getncpu-solaris.c' || echo '$(srcdir)/'`runtime/getncpu-solaris.c\n+\n+getncpu-irix.lo: runtime/getncpu-irix.c\n+@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT getncpu-irix.lo -MD -MP -MF $(DEPDIR)/getncpu-irix.Tpo -c -o getncpu-irix.lo `test -f 'runtime/getncpu-irix.c' || echo '$(srcdir)/'`runtime/getncpu-irix.c\n+@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/getncpu-irix.Tpo $(DEPDIR)/getncpu-irix.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/getncpu-irix.c' object='getncpu-irix.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o getncpu-irix.lo `test -f 'runtime/getncpu-irix.c' || echo '$(srcdir)/'`runtime/getncpu-irix.c\n+\n+getncpu-linux.lo: runtime/getncpu-linux.c\n+@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT getncpu-linux.lo -MD -MP -MF $(DEPDIR)/getncpu-linux.Tpo -c -o getncpu-linux.lo `test -f 'runtime/getncpu-linux.c' || echo '$(srcdir)/'`runtime/getncpu-linux.c\n+@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/getncpu-linux.Tpo $(DEPDIR)/getncpu-linux.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/getncpu-linux.c' object='getncpu-linux.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o getncpu-linux.lo `test -f 'runtime/getncpu-linux.c' || echo '$(srcdir)/'`runtime/getncpu-linux.c\n+\n mostlyclean-libtool:\n \t-rm -f *.lo\n "}, {"sha": "00a81d1ddae50662292fdf5928407393fbaf2cd4", "filename": "libgo/runtime/getncpu-bsd.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-bsd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-bsd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgetncpu-bsd.c?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+#include <sys/types.h>\n+#include <sys/sysctl.h>\n+\n+#include \"runtime.h\"\n+#include \"defs.h\"\n+\n+int32\n+getproccount(void)\n+{\n+\tint mib[2], out;\n+\tsize_t len;\n+\n+\tmib[0] = CTL_HW;\n+\tmib[1] = HW_NCPU;\n+\tlen = sizeof(out);\n+\tif(sysctl(mib, 2, &out, &len, NULL, 0) >= 0)\n+\t\treturn (int32)out;\n+\telse\n+\t\treturn 0;\n+}"}, {"sha": "a65ca63d2aed68c35cba730120347cad5761c435", "filename": "libgo/runtime/getncpu-irix.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-irix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-irix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgetncpu-irix.c?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+#include <unistd.h>\n+\n+#include \"runtime.h\"\n+#include \"defs.h\"\n+\n+int32\n+getproccount(void)\n+{\n+\tint32 n;\n+\tn = (int32)sysconf(_SC_NPROC_ONLN);\n+\treturn n > 1 ? n : 1;\n+}"}, {"sha": "05bd4a37e52f86f915a833395b52d997d41be3a3", "filename": "libgo/runtime/getncpu-linux.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-linux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-linux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgetncpu-linux.c?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+#include <string.h>\n+#include <sys/types.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+#include \"runtime.h\"\n+#include \"defs.h\"\n+\n+#ifndef O_CLOEXEC\n+#define O_CLOEXEC 0\n+#endif\n+\n+int32\n+getproccount(void)\n+{\n+\tint32 fd, rd, cnt, cpustrlen;\n+\tconst char *cpustr;\n+\tconst byte *pos;\n+\tbyte *bufpos;\n+\tbyte buf[256];\n+\n+\tfd = open(\"/proc/stat\", O_RDONLY|O_CLOEXEC, 0);\n+\tif(fd == -1)\n+\t\treturn 1;\n+\tcnt = 0;\n+\tbufpos = buf;\n+\tcpustr = \"\\ncpu\";\n+\tcpustrlen = strlen(cpustr);\n+\tfor(;;) {\n+\t\trd = read(fd, bufpos, sizeof(buf)-cpustrlen);\n+\t\tif(rd == -1)\n+\t\t\tbreak;\n+\t\tbufpos[rd] = 0;\n+\t\tfor(pos=buf; (pos=(const byte*)strstr((const char*)pos, cpustr)) != nil; cnt++, pos++) {\n+\t\t}\n+\t\tif(rd < cpustrlen)\n+\t\t\tbreak;\n+\t\tmemmove(buf, bufpos+rd-cpustrlen+1, cpustrlen-1);\n+\t\tbufpos = buf+cpustrlen-1;\n+\t}\n+\tclose(fd);\n+\treturn cnt ? cnt : 1;\n+}"}, {"sha": "ba6fd4e689d3b189fe669a009000bc4652f37fc1", "filename": "libgo/runtime/getncpu-none.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-none.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-none.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgetncpu-none.c?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+#include \"runtime.h\"\n+#include \"defs.h\"\n+\n+int32\n+getproccount(void)\n+{\n+\treturn 0;\n+}"}, {"sha": "5d5d7025dfe430fe987186fbcd4f0fd3f18f17ad", "filename": "libgo/runtime/getncpu-solaris.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-solaris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fgetncpu-solaris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgetncpu-solaris.c?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+#include <unistd.h>\n+\n+#include \"runtime.h\"\n+#include \"defs.h\"\n+\n+int32\n+getproccount(void)\n+{\n+\tint32 n;\n+\tn = (int32)sysconf(_SC_NPROCESSORS_ONLN);\n+\treturn n > 1 ? n : 1;\n+}"}, {"sha": "cebc1fd9801361e5e5582a54eca913b3ecaac09e", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -518,3 +518,5 @@ void\t__go_register_gc_roots(struct root_list*);\n extern uintptr runtime_stacks_sys;\n \n extern _Bool __go_file_line (uintptr, String*, String*, int *);\n+\n+int32 getproccount(void);"}, {"sha": "13d23c47b077ead3280056c2496f987f98dec11b", "filename": "libgo/runtime/thread-linux.c", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fthread-linux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fthread-linux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fthread-linux.c?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -72,42 +72,6 @@ runtime_futexwakeup(uint32 *addr, uint32 cnt)\n \t*(int32*)0x1006 = 0x1006;\n }\n \n-#ifndef O_CLOEXEC\n-#define O_CLOEXEC 0\n-#endif\n-\n-static int32\n-getproccount(void)\n-{\n-\tint32 fd, rd, cnt, cpustrlen;\n-\tconst char *cpustr;\n-\tconst byte *pos;\n-\tbyte *bufpos;\n-\tbyte buf[256];\n-\n-\tfd = open(\"/proc/stat\", O_RDONLY|O_CLOEXEC, 0);\n-\tif(fd == -1)\n-\t\treturn 1;\n-\tcnt = 0;\n-\tbufpos = buf;\n-\tcpustr = \"\\ncpu\";\n-\tcpustrlen = strlen(cpustr);\n-\tfor(;;) {\n-\t\trd = read(fd, bufpos, sizeof(buf)-cpustrlen);\n-\t\tif(rd == -1)\n-\t\t\tbreak;\n-\t\tbufpos[rd] = 0;\n-\t\tfor(pos=buf; (pos=(const byte*)strstr((const char*)pos, cpustr)) != nil; cnt++, pos++) {\n-\t\t}\n-\t\tif(rd < cpustrlen)\n-\t\t\tbreak;\n-\t\tmemmove(buf, bufpos+rd-cpustrlen+1, cpustrlen-1);\n-\t\tbufpos = buf+cpustrlen-1;\n-\t}\n-\tclose(fd);\n-\treturn cnt ? cnt : 1;\n-}\n-\n void\n runtime_osinit(void)\n {"}, {"sha": "18827b025d7e2b642b99d0818318c0019b272bd6", "filename": "libgo/runtime/thread-sema.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fthread-sema.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/233115eaf547fa35ce2b442f215739f6f20647f9/libgo%2Fruntime%2Fthread-sema.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fthread-sema.c?ref=233115eaf547fa35ce2b442f215739f6f20647f9", "patch": "@@ -138,6 +138,7 @@ runtime_semawakeup (M *mp)\n void\n runtime_osinit (void)\n {\n+  runtime_ncpu = getproccount();\n }\n \n void"}]}