{"sha": "6790c86527ca742b0cbe8542398e5fb498ec8a5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc5MGM4NjUyN2NhNzQyYjBjYmU4NTQyMzk4ZTVmYjQ5OGVjOGE1Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:41:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:41:12Z"}, "message": "restrict.ads, [...] (No_Exception_Handlers_Set): Only return true if configurable run-time or No_Run_Time is set.\n\n2007-04-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* restrict.ads, restrict.adb (No_Exception_Handlers_Set): Only return\n\ttrue if configurable run-time or No_Run_Time is set.\n\t(Set_Restriction): Avoid setting restriction No_Elaboration_Code when\n\tprocessing an unit which is not the one being compiled.\n\nFrom-SVN: r125443", "tree": {"sha": "e0ccd59b7253eb4af45b23d2ced58a2fe183922d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0ccd59b7253eb4af45b23d2ced58a2fe183922d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6790c86527ca742b0cbe8542398e5fb498ec8a5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6790c86527ca742b0cbe8542398e5fb498ec8a5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6790c86527ca742b0cbe8542398e5fb498ec8a5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6790c86527ca742b0cbe8542398e5fb498ec8a5b/comments", "author": null, "committer": null, "parents": [{"sha": "38c2fd0ca96783d989c5244439f5cb7862c17097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c2fd0ca96783d989c5244439f5cb7862c17097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c2fd0ca96783d989c5244439f5cb7862c17097"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "03905ec690b43895b2acaa77d335440485fc3c76", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6790c86527ca742b0cbe8542398e5fb498ec8a5b/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6790c86527ca742b0cbe8542398e5fb498ec8a5b/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=6790c86527ca742b0cbe8542398e5fb498ec8a5b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,7 +30,6 @@ with Errout;   use Errout;\n with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n with Lib;      use Lib;\n-with Namet;    use Namet;\n with Opt;      use Opt;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n@@ -416,7 +415,10 @@ package body Restrict is\n \n    function No_Exception_Handlers_Set return Boolean is\n    begin\n-      return Restrictions.Set (No_Exception_Handlers);\n+      return (No_Run_Time_Mode or else Configurable_Run_Time_Mode)\n+        and then (Restrictions.Set (No_Exception_Handlers)\n+                    or else\n+                  Restrictions.Set (No_Exception_Propagation));\n    end No_Exception_Handlers_Set;\n \n    ----------------------------------\n@@ -625,6 +627,23 @@ package body Restrict is\n       N : Node_Id)\n    is\n    begin\n+      --  Restriction No_Elaboration_Code must be enforced on a unit by unit\n+      --  basis. Hence, we avoid setting the restriction when processing an\n+      --  unit which is not the main one being compiled (or its corresponding\n+      --  spec). It can happen, for example, when processing an inlined body\n+      --  (the package containing the inlined subprogram is analyzed,\n+      --  including its pragma Restrictions).\n+\n+      --  This seems like a very nasty kludge??? This is not the only per unit\n+      --  restriction why is this treated specially ???\n+\n+      if R = No_Elaboration_Code\n+        and then Current_Sem_Unit /= Main_Unit\n+        and then Cunit (Current_Sem_Unit) /= Library_Unit (Cunit (Main_Unit))\n+      then\n+         return;\n+      end if;\n+\n       Restrictions.Set (R) := True;\n \n       if Restricted_Profile_Cached and Restricted_Profile_Result then"}, {"sha": "e453ed85779e91d38b6b627f721ba1573ad5bf7f", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6790c86527ca742b0cbe8542398e5fb498ec8a5b/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6790c86527ca742b0cbe8542398e5fb498ec8a5b/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=6790c86527ca742b0cbe8542398e5fb498ec8a5b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,6 +26,7 @@\n \n --  This package deals with the implementation of the Restrictions pragma\n \n+with Namet;  use Namet;\n with Rident; use Rident;\n with Table;\n with Types;  use Types;\n@@ -231,7 +232,11 @@ package Restrict is\n    function No_Exception_Handlers_Set return Boolean;\n    --  Test to see if current restrictions settings specify that no exception\n    --  handlers are present. This function is called by Gigi when it needs to\n-   --  expand an AT END clean up identifier with no exception handler.\n+   --  expand an AT END clean up identifier with no exception handler. True\n+   --  will be returned if the configurable run-time is activated, and either\n+   --  of the restrictions No_Exception_Handlers or No_Exception_Propagation is\n+   --  set. In the latter case, the source may contain handlers but they either\n+   --  get converted using the local goto transformation or deleted.\n \n    function Process_Restriction_Synonyms (N : Node_Id) return Name_Id;\n    --  Id is a node whose Chars field contains the name of a restriction."}]}