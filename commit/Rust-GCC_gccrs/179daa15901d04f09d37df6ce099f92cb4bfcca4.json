{"sha": "179daa15901d04f09d37df6ce099f92cb4bfcca4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc5ZGFhMTU5MDFkMDRmMDlkMzdkZjZjZTA5OWY5MmNiNGJmY2NhNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-05-28T21:29:29Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-05-28T21:29:29Z"}, "message": "* global.c (EXECUTE_IF_CONFLICT): Remove.\n\nFrom-SVN: r125146", "tree": {"sha": "491ea2ef8f67bdb562b24331e22d8dc41fbceca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/491ea2ef8f67bdb562b24331e22d8dc41fbceca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/179daa15901d04f09d37df6ce099f92cb4bfcca4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179daa15901d04f09d37df6ce099f92cb4bfcca4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/179daa15901d04f09d37df6ce099f92cb4bfcca4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179daa15901d04f09d37df6ce099f92cb4bfcca4/comments", "author": null, "committer": null, "parents": [{"sha": "70ea680b5d510332751fd9f766265d27ce77f7c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ea680b5d510332751fd9f766265d27ce77f7c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70ea680b5d510332751fd9f766265d27ce77f7c3"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "cadd0270e71cf2c80312c112e5a1b74191851b23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179daa15901d04f09d37df6ce099f92cb4bfcca4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179daa15901d04f09d37df6ce099f92cb4bfcca4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=179daa15901d04f09d37df6ce099f92cb4bfcca4", "patch": "@@ -8,6 +8,8 @@\n \thook_get_alias_set_0.\n \t* langhooks.c (hook_get_alias_set_0): Remove.\n \n+\t* global.c (EXECUTE_IF_CONFLICT): Remove.\n+\n 2007-05-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/32100"}, {"sha": "0495b4b88f169b38a18a8f73c93588ac9ef4e2ac", "filename": "gcc/global.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179daa15901d04f09d37df6ce099f92cb4bfcca4/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179daa15901d04f09d37df6ce099f92cb4bfcca4/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=179daa15901d04f09d37df6ce099f92cb4bfcca4", "patch": "@@ -204,16 +204,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n-/* This doesn't work for non-GNU C due to the way CODE is macro expanded.  */\n-#if 0\n-/* For any allocno that conflicts with IN_ALLOCNO, set OUT_ALLOCNO to\n-   the conflicting allocno, and execute CODE.  This macro assumes that\n-   mirror_conflicts has been run.  */\n-#define EXECUTE_IF_CONFLICT(IN_ALLOCNO, OUT_ALLOCNO, CODE)\\\n-  EXECUTE_IF_SET_IN_ALLOCNO_SET (conflicts + (IN_ALLOCNO) * allocno_row_words,\\\n-\t\t\t\t OUT_ALLOCNO, (CODE))\n-#endif\n-\n /* Set of hard regs currently live (during scan of all insns).  */\n \n static HARD_REG_SET hard_regs_live;"}]}