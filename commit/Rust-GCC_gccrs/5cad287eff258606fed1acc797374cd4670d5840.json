{"sha": "5cad287eff258606fed1acc797374cd4670d5840", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNhZDI4N2VmZjI1ODYwNmZlZDFhY2M3OTczNzRjZDQ2NzBkNTg0MA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2001-05-16T18:59:29Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-05-16T18:59:29Z"}, "message": "backspace.c: Include \"config.h\".\n\n\t* libI77/backspace.c: Include \"config.h\".\n\t* libI77/close.c: Likewise.\n\t* libI77/dfe.c: Likewise.\n\t* libI77/dolio.c: Likewise.\n\t* libI77/due.c: Likewise.\n\t* libI77/err.c: Likewise.\n\t* libI77/fmt.c: Likewise.\n\t* libI77/fmtlib.c: Likewise.\n\t* libI77/ftell_.c: Likewise.\n\t* libI77/ilnw.c: Likewise.\n\t* libI77/lread.c: Likewise.\n\t* libI77/open.c: Likewise.\n\t* libI77/rdfmt.c: Likewise.\n\t* libI77/rsfe.c: Likewise.\n\t* libI77/rsne.c: Likewise.\n\t* libI77/util.c: Likewise.\n\t* libI77/wrtfmt.c: Likewise.\n\t* libI77/wsne.c: Likewise.\n\t* libI77/xwsne.c: Likewise.\n\n\t* libI77/config.h.in: Generate with autoheader.\n\n\t* libI77/configure.in: Add comments for all AC_DEFINES so that\n\tautoheader can grok it.\n\t* libI77/configure: Regenerated.\n\nFrom-SVN: r42162", "tree": {"sha": "4121e3334425855074f8d1f0fb90005d44f17081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4121e3334425855074f8d1f0fb90005d44f17081"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cad287eff258606fed1acc797374cd4670d5840", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cad287eff258606fed1acc797374cd4670d5840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cad287eff258606fed1acc797374cd4670d5840", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cad287eff258606fed1acc797374cd4670d5840/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a111a5b3184f734db0c8cd2262cc23b8b9d6730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a111a5b3184f734db0c8cd2262cc23b8b9d6730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a111a5b3184f734db0c8cd2262cc23b8b9d6730"}], "stats": {"total": 159, "additions": 127, "deletions": 32}, "files": [{"sha": "5bc46653512861594260baea5016af845c866b06", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,31 @@\n+2001-05-16  Andreas Jaeger  <aj@suse.de>\n+\n+\t* libI77/backspace.c: Include \"config.h\".\n+\t* libI77/close.c: Likewise.\n+\t* libI77/dfe.c: Likewise.\n+\t* libI77/dolio.c: Likewise.\n+\t* libI77/due.c: Likewise.\n+\t* libI77/err.c: Likewise.\n+\t* libI77/fmt.c: Likewise.\n+\t* libI77/fmtlib.c: Likewise.\n+\t* libI77/ftell_.c: Likewise.\n+\t* libI77/ilnw.c: Likewise.\n+\t* libI77/lread.c: Likewise.\n+\t* libI77/open.c: Likewise.\n+\t* libI77/rdfmt.c: Likewise.\n+\t* libI77/rsfe.c: Likewise.\n+\t* libI77/rsne.c: Likewise.\n+\t* libI77/util.c: Likewise.\n+\t* libI77/wrtfmt.c: Likewise.\n+\t* libI77/wsne.c: Likewise.\n+\t* libI77/xwsne.c: Likewise.\n+\n+\t* libI77/config.h.in: Generate with autoheader.\n+\n+\t* libI77/configure.in: Add comments for all AC_DEFINES so that\n+\tautoheader can grok it.\n+\t* libI77/configure: Regenerated.\n+\n 2001-05-16  Andreas Jaeger  <aj@suse.de>\n \n \t* libI77/Makefile.in (endfile.o): Add dependency on config.h."}, {"sha": "b2bd4163222a005593ed27702b9c5fee7232cea2", "filename": "libf2c/libI77/backspace.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fbackspace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fbackspace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fbackspace.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include <sys/types.h>\n #include \"f2c.h\"\n #include \"fio.h\""}, {"sha": "79a349369ed32e959136295312c6edb6363ae5b2", "filename": "libf2c/libI77/close.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fclose.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fclose.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fclose.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #ifdef KR_headers"}, {"sha": "58f83af092fdebb9923e03dbd0d1e052bd79c447", "filename": "libf2c/libI77/config.h.in", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fconfig.h.in?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,47 @@\n+/* config.h.in.  Generated automatically from configure.in by autoheader.  */\n+\n+/* Define to empty if the keyword does not work.  */\n+#undef const\n \n /* Define to `long' if <sys/types.h> doesn't define.  */\n #undef off_t\n+\n+/* Define if you need to in order for stat and other things to work.  */\n+#undef _POSIX_SOURCE\n+\n+/* Define to `unsigned' if <sys/types.h> doesn't define.  */\n+#undef size_t\n+\n+/* Define if you have the ANSI C header files.  */\n+#undef STDC_HEADERS\n+\n+/* Define if you have the ftruncate function.  */\n+#undef HAVE_FTRUNCATE\n+\n+/* Define if you have the mkstemp function.  */\n+#undef HAVE_MKSTEMP\n+\n+/* Define if you have the tempnam function.  */\n+#undef HAVE_TEMPNAM\n+\n+/* Define if fcntl.h is missing. */\n+#undef NO_FCNTL\n+\n+/* Define if fcntl.h is missing. */\n+#undef OPEN_DECL\n+\n+/* Define if we do not have Unix Stdio. */\n+#undef NON_UNIX_STDIO\n+\n+/* Define if we use strlen. */\n+#undef USE_STRLEN\n+\n+/* Define if we have non ANSI RW modes. */\n+#undef NON_ANSI_RW_MODES\n+\n+/* Always defined. */\n+#undef NO_EOF_CHAR_CHECK\n+\n+/* Define to skip f2c undefs. */\n+#undef Skip_f2c_Undefs\n+"}, {"sha": "ec7988e86b4ce95035284e51eeb27cdf5ade10a7", "filename": "libf2c/libI77/configure", "status": "modified", "additions": 27, "deletions": 26, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fconfigure?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1114,20 +1114,21 @@ else\n cat >> confdefs.h <<\\EOF\n #define NO_FCNTL 1\n EOF\n- cat >> confdefs.h <<\\EOF\n+ \n+   cat >> confdefs.h <<\\EOF\n #define OPEN_DECL 1\n EOF\n \n fi\n \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:1126: checking for working const\" >&5\n+echo \"configure:1127: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1131 \"configure\"\n+#line 1132 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -1176,7 +1177,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1180: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1181: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -1197,12 +1198,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1201: checking for size_t\" >&5\n+echo \"configure:1202: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1206 \"configure\"\n+#line 1207 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1235,12 +1236,12 @@ fi\n # Apparently positive result on cygwin loses re. NON_UNIX_STDIO\n # (as of cygwin b18). Likewise on mingw.\n echo $ac_n \"checking for fstat\"\"... $ac_c\" 1>&6\n-echo \"configure:1239: checking for fstat\" >&5\n+echo \"configure:1240: checking for fstat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_fstat'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1244 \"configure\"\n+#line 1245 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char fstat(); below.  */\n@@ -1263,7 +1264,7 @@ fstat();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1267: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1268: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_fstat=yes\"\n else\n@@ -1283,7 +1284,7 @@ else\n fi\n \n echo $ac_n \"checking need for NON_UNIX_STDIO\"\"... $ac_c\" 1>&6\n-echo \"configure:1287: checking need for NON_UNIX_STDIO\" >&5\n+echo \"configure:1288: checking need for NON_UNIX_STDIO\" >&5\n if test $g77_cv_sys_cygwin32 = yes \\\n   || test $g77_cv_sys_mingw32 = yes \\\n   || test $ac_cv_func_fstat = no; then\n@@ -1299,12 +1300,12 @@ fi\n for ac_func in ftruncate\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1303: checking for $ac_func\" >&5\n+echo \"configure:1304: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1308 \"configure\"\n+#line 1309 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1327,7 +1328,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1331: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1332: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1354,12 +1355,12 @@ done\n for ac_func in mkstemp\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1358: checking for $ac_func\" >&5\n+echo \"configure:1359: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1363 \"configure\"\n+#line 1364 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1382,7 +1383,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1386: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1387: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1409,12 +1410,12 @@ done\n for ac_func in tempnam\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1413: checking for $ac_func\" >&5\n+echo \"configure:1414: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1418 \"configure\"\n+#line 1419 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1437,7 +1438,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1441: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1442: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1467,19 +1468,19 @@ done\n # However, on my sunos4/gcc setup unistd.h leads us wrongly to believe\n # we're posix-conformant, so always do the test.\n echo $ac_n \"checking for ansi/posix sprintf result\"\"... $ac_c\" 1>&6\n-echo \"configure:1471: checking for ansi/posix sprintf result\" >&5\n+echo \"configure:1472: checking for ansi/posix sprintf result\" >&5\n if test \"$cross_compiling\" = yes; then\n   g77_cv_sys_sprintf_ansi=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1476 \"configure\"\n+#line 1477 \"configure\"\n #include \"confdefs.h\"\n   #include <stdio.h>\n     /* does sprintf return the number of chars transferred? */\n     main () {char foo[2]; (sprintf(foo, \"1\") == 1) ? exit(0) : exit(1);}\n \n EOF\n-if { (eval echo configure:1483: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1484: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   g77_cv_sys_sprintf_ansi=yes\n else\n@@ -1510,9 +1511,9 @@ fi\n \n # define NON_ANSI_RW_MODES on unix (can't hurt)\n echo $ac_n \"checking NON_ANSI_RW_MODES\"\"... $ac_c\" 1>&6\n-echo \"configure:1514: checking NON_ANSI_RW_MODES\" >&5\n+echo \"configure:1515: checking NON_ANSI_RW_MODES\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 1516 \"configure\"\n+#line 1517 \"configure\"\n #include \"confdefs.h\"\n #ifdef unix\n   yes\n@@ -1557,12 +1558,12 @@ EOF\n \n \n echo $ac_n \"checking for off_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1561: checking for off_t\" >&5\n+echo \"configure:1562: checking for off_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_off_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1566 \"configure\"\n+#line 1567 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS"}, {"sha": "20f2628ba3a2d590e815cc4b0f450af93453f01e", "filename": "libf2c/libI77/configure.in", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fconfigure.in?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -113,7 +113,8 @@ AC_MSG_RESULT($g77_cv_sys_mingw32)\n \n AC_CHECK_HEADER(fcntl.h,\n    test $g77_cv_header_posix = yes && AC_DEFINE(_POSIX_SOURCE),\n-   AC_DEFINE(NO_FCNTL) AC_DEFINE(OPEN_DECL))\n+   AC_DEFINE(NO_FCNTL, 1, [Define if fcntl.h is missing.]) \n+   AC_DEFINE(OPEN_DECL, 1, [Define if fcntl.h is missing.]))\n \n dnl Checks for typedefs, structures, and compiler characteristics.\n AC_C_CONST\n@@ -130,7 +131,7 @@ if test $g77_cv_sys_cygwin32 = yes \\\n   || test $g77_cv_sys_mingw32 = yes \\\n   || test $ac_cv_func_fstat = no; then\n   AC_MSG_RESULT(yes)\n-  AC_DEFINE(NON_UNIX_STDIO)\n+  AC_DEFINE(NON_UNIX_STDIO, 1, [Define if we do not have Unix Stdio.])\n else\n   AC_MSG_RESULT(no)\n fi\n@@ -163,7 +164,7 @@ AC_MSG_RESULT($g77_cv_sys_sprintf_ansi)\n # The cygwin patch takes steps to avoid defining USE_STRLEN here -- I don't\n # understand why.\n if test $g77_cv_sys_sprintf_ansi != yes; then \n-  AC_DEFINE(USE_STRLEN)\n+  AC_DEFINE(USE_STRLEN, 1, [Define if we use strlen.])\n fi\n \n # define NON_ANSI_RW_MODES on unix (can't hurt)\n@@ -184,19 +185,19 @@ if test $g77_cv_sys_cygwin32 = yes || test $g77_cv_sys_mingw32 = yes; then\n   AC_MSG_RESULT(no)\n else\n   if test $is_unix = yes; then\n-    AC_DEFINE(NON_ANSI_RW_MODES)\n+    AC_DEFINE(NON_ANSI_RW_MODES, 1, [Define if we have non ANSI RW modes.])\n     AC_MSG_RESULT(yes)\n   else\n     AC_MSG_RESULT(no)\n   fi\n fi\n \n # This EOF_CHAR is a misfeature on unix.\n-AC_DEFINE(NO_EOF_CHAR_CHECK)\n+AC_DEFINE(NO_EOF_CHAR_CHECK, 1, [Always defined.])\n \n AC_TYPE_OFF_T\n \n-AC_DEFINE(Skip_f2c_Undefs)\n+AC_DEFINE(Skip_f2c_Undefs, 1, [Define to skip f2c undefs.])\n \n AC_OUTPUT(Makefile)\n "}, {"sha": "e90b16d055119801a1e39eeac3f52a2ccf816255", "filename": "libf2c/libI77/dfe.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fdfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fdfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdfe.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include \"fmt.h\""}, {"sha": "1e0c3779bb5d583c424d48eb17742b0975d829b4", "filename": "libf2c/libI77/dolio.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fdolio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fdolio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdolio.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n \n #ifdef __cplusplus"}, {"sha": "df3413321500d74794b3d8ef7740ee3ad7f25da8", "filename": "libf2c/libI77/due.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fdue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fdue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdue.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n "}, {"sha": "6784cdd45766db050556c5283c3168342b3f7d52", "filename": "libf2c/libI77/err.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Ferr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Ferr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ferr.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #ifndef NON_UNIX_STDIO\n #define _INCLUDE_POSIX_SOURCE\t/* for HP-UX */\n #define _INCLUDE_XOPEN_SOURCE\t/* for HP-UX */"}, {"sha": "793dceb53b8ef33700a11895ac1bd5143dd78dc5", "filename": "libf2c/libI77/fmt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Ffmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Ffmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ffmt.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include \"fmt.h\""}, {"sha": "69c0d9b406fc46fcc9e91742bc1a2ca80470f93f", "filename": "libf2c/libI77/fmtlib.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Ffmtlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Ffmtlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ffmtlib.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,5 +1,6 @@\n /*\t@(#)fmtlib.c\t1.2\t*/\n #define MAXINTLENGTH 23\n+#include \"config.h\"\n \n #include \"f2c.h\"\n #ifndef Allow_TYQUAD"}, {"sha": "1f6d87f50bd5538e17ccb5e56948f7931db2d6fd", "filename": "libf2c/libI77/ftell_.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fftell_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fftell_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fftell_.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n "}, {"sha": "58fca0d326a70533fe1331df8700fa3c651df29b", "filename": "libf2c/libI77/ilnw.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Filnw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Filnw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Filnw.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include \"lio.h\""}, {"sha": "d546efcc4e13b5a8062ced541b325ede3800800e", "filename": "libf2c/libI77/lread.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Flread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Flread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flread.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include <ctype.h>\n #include \"f2c.h\"\n #include \"fio.h\""}, {"sha": "56bbc5232eeed39b6afce8d32306c22ff7df49d2", "filename": "libf2c/libI77/open.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fopen.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,6 +1,7 @@\n /* Define _XOPEN_SOURCE to get tempnam prototype with glibc et al --\n    more general than _INCLUDE_XOPEN_SOURCE used elsewhere `for HP-UX'.  */\n #define _XOPEN_SOURCE 1\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include <string.h>"}, {"sha": "6ddd36958a5bb1d00425141a77d4fc3a32479733", "filename": "libf2c/libI77/rdfmt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Frdfmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Frdfmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frdfmt.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include <ctype.h>\n #include \"f2c.h\"\n #include \"fio.h\""}, {"sha": "1be45310f5179b0b40d61c95dcc8347ccd22fe4e", "filename": "libf2c/libI77/rsfe.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Frsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Frsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsfe.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,4 +1,5 @@\n /* read sequential formatted external */\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include \"fmt.h\""}, {"sha": "a0d0bfe407d88654379a0a800ade67bc34541df6", "filename": "libf2c/libI77/rsne.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Frsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Frsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsne.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include \"lio.h\""}, {"sha": "e7dbba02bd48ac2759f44b0948cb6ceedcc3110f", "filename": "libf2c/libI77/sue.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fsue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fsue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fsue.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n extern uiolen f__reclen;"}, {"sha": "7f42aa1bcc87c03292ac7d9dc3264d74f8a4a617", "filename": "libf2c/libI77/typesize.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Ftypesize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Ftypesize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Ftypesize.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n \n ftnlen f__typesize[] = { 0, 0, sizeof(shortint), sizeof(integer),"}, {"sha": "8280ac06a7fcaa5fc5e515407cd5ecd9f7040ed6", "filename": "libf2c/libI77/util.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Futil.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Futil.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Futil.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #ifndef NON_UNIX_STDIO\n #define _INCLUDE_POSIX_SOURCE\t/* for HP-UX */\n #define _INCLUDE_XOPEN_SOURCE\t/* for HP-UX */"}, {"sha": "37006ba77c284fb0b423b204ac94d6ae7fa01755", "filename": "libf2c/libI77/wrtfmt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fwrtfmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fwrtfmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwrtfmt.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include \"fmt.h\""}, {"sha": "386e8678aadda25e3367b2cacba3d9892f26644d", "filename": "libf2c/libI77/wsle.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fwsle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fwsle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwsle.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include \"fmt.h\""}, {"sha": "96fdd02191685c1eadb80e9d033275f33578f3c3", "filename": "libf2c/libI77/xwsne.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fxwsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cad287eff258606fed1acc797374cd4670d5840/libf2c%2FlibI77%2Fxwsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fxwsne.c?ref=5cad287eff258606fed1acc797374cd4670d5840", "patch": "@@ -1,3 +1,4 @@\n+#include \"config.h\"\n #include \"f2c.h\"\n #include \"fio.h\"\n #include \"lio.h\""}]}