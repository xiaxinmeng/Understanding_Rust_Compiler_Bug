{"sha": "907cb30e6ec4e77c19cbe64bd370cee4956ad29c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3Y2IzMGU2ZWM0ZTc3YzE5Y2JlNjRiZDM3MGNlZTQ5NTZhZDI5Yw==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-07-21T04:04:27Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-07-21T04:04:27Z"}, "message": "incorporate patches from 3.0 branch\n\nFrom-SVN: r44218", "tree": {"sha": "e7b96df12f1d6745771f9bf4e6f08cfda4269f5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7b96df12f1d6745771f9bf4e6f08cfda4269f5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/907cb30e6ec4e77c19cbe64bd370cee4956ad29c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907cb30e6ec4e77c19cbe64bd370cee4956ad29c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907cb30e6ec4e77c19cbe64bd370cee4956ad29c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907cb30e6ec4e77c19cbe64bd370cee4956ad29c/comments", "author": null, "committer": null, "parents": [{"sha": "e9644cfea18acae1d77d30b608bde9f5c5f6e602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9644cfea18acae1d77d30b608bde9f5c5f6e602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9644cfea18acae1d77d30b608bde9f5c5f6e602"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "aedf09713d385d3b0885d49629c61673069f240a", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907cb30e6ec4e77c19cbe64bd370cee4956ad29c/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907cb30e6ec4e77c19cbe64bd370cee4956ad29c/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=907cb30e6ec4e77c19cbe64bd370cee4956ad29c", "patch": "@@ -121,7 +121,7 @@ fix = {\n /* _INT_VARARGS.H - Define the common stuff for varargs/stdarg/stdio.   */\n /************************************************************************/\n \n-/*\n+/*\" \"\n ** This file is a DG internal header.  Never include this\n ** file directly.\n */\n@@ -1154,7 +1154,7 @@ fix = {\n  */\n fix = {\n     hackname  = hpux10_cpp_pow_inline;\n-    files     = math.h;\n+    files     = fixinc-test-limits.h, math.h;\n     select    = <<-\tEND_POW_INLINE\n \t^# +ifdef +__cplusplus\n \t +}\n@@ -2091,23 +2091,23 @@ fix = {\n  * initializer to \"{0}\" instead\n  */\n fix = {\n-  hackname = solaris_mutex_init;\n-  select = '@\\(#\\)pthread.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n-  files = pthread.h;\n-  c_fix = format;\n-  c_fix_arg = \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\"\n-              \"%0\\n\"\n-              \"#else\\n\"\n-              \"%1, {0}}%3\\n\"\n-              \"#endif\";\n-  c_fix_arg = \"(^#define[ \\t]+PTHREAD_(MUTEX|COND)_INITIALIZER[ \\t]+{.*)\"\n-              \",[ \\t]*0}\" \"(|[ \\t].*)$\";\n-  test_text =\n-  '#ident \"@(#)pthread.h  1.26  98/04/12 SMI\"'\"\\n\"\n-  \"#define PTHREAD_MUTEX_INITIALIZER\\t{{{0},0}, {{{0}}}, 0}\\n\"\n-  \"#define PTHREAD_COND_INITIALIZER\\t{{{0}, 0}, 0}\\t/* DEFAULTCV */\\n\"\n-  \"#define PTHREAD_RWLOCK_INITIALIZER\\t\"\n-           \"{0, 0, 0, {0, 0, 0}, {0, 0}, {0, 0}}\";\n+    hackname = solaris_mutex_init;\n+    select = '@\\(#\\)pthread.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n+    files = pthread.h;\n+    c_fix = format;\n+    c_fix_arg = \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\"\n+                \"%0\\n\"\n+                \"#else\\n\"\n+                \"%1, {0}}%3\\n\"\n+                \"#endif\";\n+    c_fix_arg = \"(^#define[ \\t]+PTHREAD_(MUTEX|COND)_INITIALIZER[ \\t]+{.*)\"\n+                \",[ \\t]*0}\" \"(|[ \\t].*)$\";\n+    test_text =\n+    '#ident \"@(#)pthread.h  1.26  98/04/12 SMI\"'\"\\n\"\n+    \"#define PTHREAD_MUTEX_INITIALIZER\\t{{{0},0}, {{{0}}}, 0}\\n\"\n+    \"#define PTHREAD_COND_INITIALIZER\\t{{{0}, 0}, 0}\\t/* DEFAULTCV */\\n\"\n+    \"#define PTHREAD_RWLOCK_INITIALIZER\\t\"\n+             \"{0, 0, 0, {0, 0, 0}, {0, 0}, {0, 0}}\";\n };\n \n "}]}