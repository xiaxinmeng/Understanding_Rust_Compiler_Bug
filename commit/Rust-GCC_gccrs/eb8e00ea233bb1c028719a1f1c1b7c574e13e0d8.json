{"sha": "eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI4ZTAwZWEyMzNiYjFjMDI4NzE5YTFmMWMxYjdjNTc0ZTEzZTBkOA==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2002-03-18T18:20:19Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2002-03-18T18:20:19Z"}, "message": "xtensa.h (GO_IF_MODE_DEPENDENT_ADDRESS): Treat constant-pool addresses as \"mode-dependent\".\n\n        * config/xtensa/xtensa.h (GO_IF_MODE_DEPENDENT_ADDRESS): Treat\n        constant-pool addresses as \"mode-dependent\".\n        (GO_IF_LEGITIMATE_ADDRESS): Rename macro arguments.\n\nFrom-SVN: r50984", "tree": {"sha": "6825bcec69a3b7d52662c15f09c9f068a3e1cb38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6825bcec69a3b7d52662c15f09c9f068a3e1cb38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8/comments", "author": null, "committer": null, "parents": [{"sha": "71c6877d3e244be103d20e6eb146634d821b7475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c6877d3e244be103d20e6eb146634d821b7475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71c6877d3e244be103d20e6eb146634d821b7475"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "615d43e08ead29817be3cdfdab6bda0abfadbbbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8", "patch": "@@ -1,3 +1,9 @@\n+2002-03-18  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa.h (GO_IF_MODE_DEPENDENT_ADDRESS): Treat\n+\tconstant-pool addresses as \"mode-dependent\".\n+\t(GO_IF_LEGITIMATE_ADDRESS): Rename macro arguments.\n+\n 2002-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/5740"}, {"sha": "4cd86163f006e0526ef06b887b04bcf1f8218fe1", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=eb8e00ea233bb1c028719a1f1c1b7c574e13e0d8", "patch": "@@ -1145,21 +1145,21 @@ typedef struct xtensa_args {\n #define MAX_REGS_PER_ADDRESS 1\n \n /* Identify valid Xtensa addresses.  */\n-#define GO_IF_LEGITIMATE_ADDRESS(MODE, X, ADDR)\t\t\t\t\\\n+#define GO_IF_LEGITIMATE_ADDRESS(MODE, ADDR, LABEL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    rtx xinsn = (X);\t\t\t\t\t\t\t\\\n+    rtx xinsn = (ADDR);\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n     /* allow constant pool addresses */\t\t\t\t\t\\\n     if ((MODE) != BLKmode && GET_MODE_SIZE (MODE) >= UNITS_PER_WORD\t\\\n \t&& constantpool_address_p (xinsn))\t\t\t\t\\\n-      goto ADDR;\t\t\t\t\t\t\t\\\n+      goto LABEL;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n     while (GET_CODE (xinsn) == SUBREG)\t\t\t\t\t\\\n       xinsn = SUBREG_REG (xinsn);\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n     /* allow base registers */\t\t\t\t\t\t\\\n     if (GET_CODE (xinsn) == REG && REG_OK_FOR_BASE_P (xinsn))\t\t\\\n-      goto ADDR;\t\t\t\t\t\t\t\\\n+      goto LABEL;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n     /* check for \"register + offset\" addressing */\t\t\t\\\n     if (GET_CODE (xinsn) == PLUS)\t\t\t\t\t\\\n@@ -1190,7 +1190,7 @@ typedef struct xtensa_args {\n \t    && code1 == CONST_INT\t\t\t\t\t\\\n \t    && xtensa_mem_offset (INTVAL (xplus1), (MODE)))\t\t\\\n \t  {\t\t\t\t\t\t\t\t\\\n-\t    goto ADDR;\t\t\t\t\t\t\t\\\n+\t    goto LABEL;\t\t\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n@@ -1249,7 +1249,19 @@ typedef struct xtensa_args {\n   } while (0)\n \n \n-#define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR, LABEL) {}\n+/* Treat constant-pool references as \"mode dependent\" since they can\n+   only be accessed with SImode loads.  This works around a bug in the\n+   combiner where a constant pool reference is temporarily converted\n+   to an HImode load, which is then assumed to zero-extend based on\n+   our definition of LOAD_EXTEND_OP.  This is wrong because the high\n+   bits of a 16-bit value in the constant pool are now sign-extended\n+   by default.  */\n+\n+#define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR, LABEL)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (constantpool_address_p (ADDR))\t\t\t\t\t\\\n+      goto LABEL;\t\t\t\t\t\t\t\\\n+  } while (0)\n \n /* If we are referencing a function that is static, make the SYMBOL_REF\n    special so that we can generate direct calls to it even with -fpic.  */"}]}