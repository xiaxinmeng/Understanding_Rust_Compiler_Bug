{"sha": "8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFmZDAyYWE2YjY0MGI3MDk4YmY0MGJiZGEzZTcyYTE0ZDNmMDdiMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-12-21T12:32:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-12-21T12:32:31Z"}, "message": "adaint.c: Move directive around.\n\n\t* adaint.c: Move directive around.\n\t* argv.c: Likewise.\n\t* cio.c: Likewise.\n\t* cstreams.c: Likewise.\n\t* env.c: Likewise.\n\t* exit.c: Likewise.\n\t* init.c: Likewise.\n\t* initialize.c: Likewise.\n\t* raise.c: Likewise.\n\t* seh_init.c: Likewise.\n\t* targext.c: Likewise.\n\nFrom-SVN: r194660", "tree": {"sha": "3fbee8135152fc6c25d9a819f2170bfaa73a1e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fbee8135152fc6c25d9a819f2170bfaa73a1e08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/comments", "author": null, "committer": null, "parents": [{"sha": "d846aac9be9a94adc1be78166db42df57da3490a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d846aac9be9a94adc1be78166db42df57da3490a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d846aac9be9a94adc1be78166db42df57da3490a"}], "stats": {"total": 102, "additions": 58, "deletions": 44}, "files": [{"sha": "f18c14653ea77fd8ebf6e22af3f5601ea734b037", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -1,3 +1,17 @@\n+2012-12-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* adaint.c: Move directive around.\n+\t* argv.c: Likewise.\n+\t* cio.c: Likewise.\n+\t* cstreams.c: Likewise.\n+\t* env.c: Likewise.\n+\t* exit.c: Likewise.\n+\t* init.c: Likewise.\n+\t* initialize.c: Likewise.\n+\t* raise.c: Likewise.\n+\t* seh_init.c: Likewise.\n+\t* targext.c: Likewise.\n+\n 2012-12-15  Eric Botcazou  <ebotcazou@adacore.com>\n \t    Martin Ettl  <ettl.martin@gmx.de>\n "}, {"sha": "4b8ce5341effe674babb315ccfde9b4ad681c25d", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -34,10 +34,6 @@\n    package Osint.  Many of the subprograms in OS_Lib import standard\n    library calls directly. This file contains all other routines.  */\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef __vxworks\n \n /* No need to redefine exit here.  */\n@@ -107,6 +103,10 @@ extern \"C\" {\n #include \"version.h\"\n #endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #if defined (__MINGW32__)\n \n #if defined (RTX)"}, {"sha": "ebca8bbc09c832d7733061f46a59b011a8538968", "filename": "gcc/ada/argv.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -42,10 +42,6 @@\n    main program, and these routines are accessed from the\n    Ada.Command_Line.Environment package.  */\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -57,6 +53,10 @@ extern \"C\" {\n \n #include \"adaint.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* argc and argv of the main program are saved under gnat_argc and gnat_argv,\n    envp of the main program is saved under gnat_envp.  */\n "}, {"sha": "70b2550535be53fa7fcfc5c3e87023e835f1d689", "filename": "gcc/ada/cio.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fcio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fcio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcio.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -29,10 +29,6 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -44,6 +40,10 @@ extern \"C\" {\n \n #include \"adaint.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* Don't use macros on GNU/Linux since they cause incompatible changes between\n    glibc 2.0 and 2.1 */\n #ifdef linux"}, {"sha": "b82fcdfa75597251730aa9032d5b397d89105e48", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -31,10 +31,6 @@\n \n /* Routines required for implementing routines in Interfaces.C.Streams.  */\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef __vxworks\n #include \"vxWorks.h\"\n #endif\n@@ -50,6 +46,10 @@ extern \"C\" {\n \n #include \"adaint.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #ifdef VMS\n #include <unixlib.h>\n #endif"}, {"sha": "800d20748ecea6ba32fca5e6abe0390d9f100ef4", "filename": "gcc/ada/env.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -29,10 +29,6 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -76,6 +72,10 @@ extern \"C\" {\n #include \"system.h\"\n #endif /* IN_RTS */\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #if defined (__APPLE__)\n #include <crt_externs.h>\n #endif"}, {"sha": "cf3f11d13213c367b6e82fcc61bb5215c684a2d1", "filename": "gcc/ada/exit.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexit.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -29,10 +29,6 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef __alpha_vxworks\n #include \"vxWorks.h\"\n #endif\n@@ -48,6 +44,10 @@ extern \"C\" {\n \n #include \"adaint.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* Routine used by Ada.Command_Line.Set_Exit_Status.  */\n \n int gnat_exit_status = 0;"}, {"sha": "916c3befef4b8fb3a35cad0d190c2768e7943169", "filename": "gcc/ada/init.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -38,10 +38,6 @@\n     installed by this file are used to catch the resulting signals that come\n     from these probes failing (i.e. touching protected pages).  */\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n /* This file should be kept synchronized with 2sinit.ads, 2sinit.adb,\n    s-init-ae653-cert.adb and s-init-xi-sparc.adb.  All these files implement\n    the required functionality for different targets.  */\n@@ -71,6 +67,10 @@ extern \"C\" {\n #include \"adaint.h\"\n #include \"raise.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n extern void __gnat_raise_program_error (const char *, int);\n \n /* Addresses of exception data blocks for predefined exceptions.  Tasking_Error"}, {"sha": "6b92d27cb134ee73472177924acc28e63ba3ee36", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -34,10 +34,6 @@\n     in a separate file/object so that users can replace it easily.\n     The default implementation should be null on most targets.  */\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n /* The following include is here to meet the published VxWorks requirement\n    that the __vxworks header appear before any other include.  */\n #ifdef __vxworks\n@@ -57,6 +53,10 @@ extern \"C\" {\n \n #include \"raise.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /******************************************/\n /* __gnat_initialize (NT-mingw32 Version) */\n /******************************************/"}, {"sha": "d17b9dd4a7a8a823ba725ce7a2f3253edcce42dd", "filename": "gcc/ada/raise.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fraise.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fraise.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -32,10 +32,6 @@\n /* Shared routines to support exception handling.  __gnat_unhandled_terminate\n    is shared between all exception handling mechanisms.  */\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -47,6 +43,10 @@ extern \"C\" {\n #include \"adaint.h\"\n #include \"raise.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*  Wrapper to builtin_longjmp.  This is for the compiler eh only, as the sjlj\n     runtime library interfaces directly to the intrinsic.  We can't yet do\n     this for the compiler itself, because this capability relies on changes"}, {"sha": "9b3c081081da095e1dc4bd669f399a48a2fe9d28", "filename": "gcc/ada/seh_init.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fseh_init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Fseh_init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fseh_init.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -32,10 +32,6 @@\n /*  This unit contains support for SEH (Structured Exception Handling).\n     Right now the only implementation is for Win32.  */\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -50,6 +46,10 @@ extern \"C\" {\n \n #include \"raise.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /* Addresses of exception data blocks for predefined exceptions. */\n extern struct Exception_Data constraint_error;\n extern struct Exception_Data numeric_error;"}, {"sha": "a7f3ee9b3fdd5704b332c1d87ec1b6c904d161b3", "filename": "gcc/ada/targext.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Ftargext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afd02aa6b640b7098bf40bbda3e72a14d3f07b3/gcc%2Fada%2Ftargext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargext.c?ref=8afd02aa6b640b7098bf40bbda3e72a14d3f07b3", "patch": "@@ -35,10 +35,6 @@\n     Note that, in order to have access to the TARGET_* macros used below,\n     the file must be compiled with IN_GCC defined, even for the library.  */\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n #ifdef IN_RTS\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n@@ -57,6 +53,10 @@ extern \"C\" {\n #define TARGET_EXECUTABLE_SUFFIX \"\"\n #endif\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n const char *__gnat_target_object_extension = TARGET_OBJECT_SUFFIX;\n const char *__gnat_target_executable_extension = TARGET_EXECUTABLE_SUFFIX;\n const char *__gnat_target_debuggable_extension = TARGET_EXECUTABLE_SUFFIX;"}]}