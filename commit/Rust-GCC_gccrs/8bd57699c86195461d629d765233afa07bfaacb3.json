{"sha": "8bd57699c86195461d629d765233afa07bfaacb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJkNTc2OTljODYxOTU0NjFkNjI5ZDc2NTIzM2FmYTA3YmZhYWNiMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-15T23:32:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-15T23:32:33Z"}, "message": "(out_object_file): Use in place of aux-output.o.\n\nFrom-SVN: r9695", "tree": {"sha": "ec9a542e3ef387d14c1372f6e6b86446f6777b54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec9a542e3ef387d14c1372f6e6b86446f6777b54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bd57699c86195461d629d765233afa07bfaacb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bd57699c86195461d629d765233afa07bfaacb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bd57699c86195461d629d765233afa07bfaacb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bd57699c86195461d629d765233afa07bfaacb3/comments", "author": null, "committer": null, "parents": [{"sha": "7cd5f0b28f810f0f5b81f9dc5b17cb6cfd838f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd5f0b28f810f0f5b81f9dc5b17cb6cfd838f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd5f0b28f810f0f5b81f9dc5b17cb6cfd838f37"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "8a2d17b3f4c9728442ca144f286f2efe74ff899d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bd57699c86195461d629d765233afa07bfaacb3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bd57699c86195461d629d765233afa07bfaacb3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8bd57699c86195461d629d765233afa07bfaacb3", "patch": "@@ -150,7 +150,8 @@ PREMADE_ATTRTAB =\n target= ... `configure' substitutes actual target name here.\n xmake_file= ... `configure' substitutes actual x- file name here.\n tmake_file= ... `configure' substitutes actual t- file name here.\n-out_file= ... `configure' substitutes actual out- file name here.\n+out_file= ... `configure' substitutes actual out file name here.\n+out_object_file= ... `configure' substitutes actual out object file name here.\n md_file= ... `configure' substitutes actual md file name here.\n tm_file= ... `configure' substitutes actual tm file name here.\n build_xm_file= ... `configure' substitutes actual build xm- file name here.\n@@ -492,7 +493,7 @@ OBJS = toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o \\\n  regclass.o local-alloc.o global.o reload.o reload1.o caller-save.o \\\n  insn-peep.o reorg.o sched.o final.o recog.o reg-stack.o \\\n  insn-opinit.o insn-recog.o insn-extract.o insn-output.o insn-emit.o \\\n- insn-attrtab.o aux-output.o getpwd.o convert.o $(EXTRA_OBJS)\n+ insn-attrtab.o $(out_object_file) getpwd.o convert.o $(EXTRA_OBJS)\n \n # GEN files are listed separately, so they can be built before doing parallel\n #  makes for cc1 or cc1plus.  Otherwise sequent parallel make attempts to load\n@@ -1204,11 +1205,10 @@ recog.o : recog.c $(CONFIG_H) $(RTL_H)  \\\n reg-stack.o : reg-stack.c $(CONFIG_H) $(RTL_H) $(TREE_H) \\\n    regs.h hard-reg-set.h flags.h insn-config.h\n \n-aux-output.o : $(out_file) $(CONFIG_H) \\\n+$(out_object_file): $(out_file) $(CONFIG_H) \\\n    $(RTL_H) regs.h hard-reg-set.h real.h insn-config.h conditions.h \\\n    insn-flags.h output.h insn-attr.h insn-codes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  -o $@ \\\n-\t $(MAYBE_TARGET_DEFAULT) $(out_file)\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(out_file)\n \n # Build auxiliary files that support ecoff format.\n mips-tfile: mips-tfile.o version.o $(LIBDEPS)"}]}