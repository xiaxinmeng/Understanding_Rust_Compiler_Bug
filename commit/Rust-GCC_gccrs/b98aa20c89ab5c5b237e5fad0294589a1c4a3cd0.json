{"sha": "b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk4YWEyMGM4OWFiNWM1YjIzN2U1ZmFkMDI5NDU4OWExYzRhM2NkMA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2010-03-24T16:07:51Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2010-03-24T16:07:51Z"}, "message": "re PR java/43504 (many libjava testsuite regressions on x86_64-apple-darwin10)\n\n\tPR java/43504\n\tRevert fix for PR target/33120.\n\nFrom-SVN: r157697", "tree": {"sha": "452c58c4d56f94af5fc21aafedfbe0a02bb023a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/452c58c4d56f94af5fc21aafedfbe0a02bb023a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/comments", "author": null, "committer": null, "parents": [{"sha": "d0ed412a967910ba8fe96f328a22dc72e945181a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ed412a967910ba8fe96f328a22dc72e945181a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ed412a967910ba8fe96f328a22dc72e945181a"}], "stats": {"total": 68, "additions": 1, "deletions": 67}, "files": [{"sha": "a89e0699bdc55744a816f2dc969cca72b8157ef2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "patch": "@@ -10,13 +10,6 @@\n \t(expand_expr_real_1) <case SSA_NAME>: Call expand_expr_real\n \tinstead of expand_expr_real_1.\n \n-2010-03-23  Mike Stump  <mikestump@comcast.net>\n-\n-\tPR target/33120\n-\t* config/darwin.h (ASM_OUTPUT_ALIGNED_BSS): Add.\n-\t* config/darwin.c (darwin_output_aligned_bss): Add.\n-\t* config/darwin-protos.h: Add darwin_output_aligned_bss.\n-\n 2010-03-23  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/43413"}, {"sha": "b9865ccd4eed28938ef33691cbf9b7d640b93f12", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "patch": "@@ -90,6 +90,3 @@ extern void darwin_asm_output_anchor (rtx symbol);\n extern bool darwin_kextabi_p (void);\n extern void darwin_override_options (void);\n extern void darwin_patch_builtins (void);\n-extern void darwin_output_aligned_bss (FILE *, tree, const char *,\n-\t\t\t\t       unsigned HOST_WIDE_INT size,\n-\t\t\t\t       unsigned int align);"}, {"sha": "101da9305c73ec613be02f9c4ff2e0484135fd9d", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "patch": "@@ -1788,41 +1788,5 @@ darwin_patch_builtins (void)\n #undef PATCH_BUILTIN_VARIADIC\n }\n \n-void\n-darwin_output_aligned_bss(FILE *fp, tree decl, const char *name,\n-\t\t\t  unsigned HOST_WIDE_INT size, unsigned int align)\n-{\n-  bool weak = (DECL_P (decl)\n-\t       && DECL_WEAK (decl)\n-\t       && !lookup_attribute (\"weak_import\",\n-\t\t\t\t     DECL_ATTRIBUTES (decl)));\n-  if (size == 0)\n-    size = 1;\n-  align = floor_log2 (align / BITS_PER_UNIT);\n-  if (DECL_ONE_ONLY (decl) || weak) {\n-    if (TREE_READONLY (decl) || TREE_CONSTANT (decl))\n-      switch_to_section (darwin_sections[const_data_coal_section]);\n-    else\n-      switch_to_section (darwin_sections[data_coal_section]);\n-    ASM_OUTPUT_ALIGN (fp, align);\n-    ASM_DECLARE_OBJECT_NAME (fp, name, decl);\n-    ASM_OUTPUT_SKIP (fp, size);\n-    return;\n-  }\n-\n-  fputs (\".zerofill \", fp);\n-  /* We uniquely name sections based upon the alignment as otherwise\n-     all symbols in the section would get that alignment.  */\n-  if (TREE_READONLY (decl) || TREE_CONSTANT (decl))\n-    fputs (\"__TEXT, \", fp);\n-  else\n-    fputs (\"__DATA, \", fp);\n-  fprintf (fp, \"__bss%d, \", align);\n-  assemble_name (fp, name);\n-  fprintf (fp, \", \"HOST_WIDE_INT_PRINT_UNSIGNED\", %u\\n\",\n-\t   size, align);\n-  (* targetm.encode_section_info) (decl, DECL_RTL (decl), false);\n-  machopic_define_symbol (DECL_RTL (decl));\n-}\n \n #include \"gt-darwin.h\""}, {"sha": "763040bfe4c6dcbddfc1092d4a85d1f65417a75c", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "patch": "@@ -728,9 +728,6 @@ int darwin_label_is_anonymous_local_objc_name (const char *name);\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n \n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN)\t\t\\\n-  darwin_output_aligned_bss(FILE, DECL, NAME, SIZE, ALIGN)\n-\n /* The maximum alignment which the object file format can support in\n    bits.  For Mach-O, this is 2^15 bytes.  */\n "}, {"sha": "d69523d3e2576de6a815120e28ce29ab8d1fe5b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "patch": "@@ -21,13 +21,6 @@\n \t* g++.dg/cpp0x/lambda/lambda-conv2.C: New.\n \t* g++.dg/cpp0x/lambda/lambda-conv3.C: New.\n \n-2010-03-23  Mike Stump  <mikestump@comcast.net>\n-\n-\tPR target/33120\n-\t* g++.dg/ext/instantiate2.C: Update for .zerofill as it doesn't\n-\tfollow the usual conventions for symbol definitions.\n-\t* gcc.target/i386/darwin-zerofill.c: Add.\n-\n 2010-03-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/43333"}, {"sha": "97ef45c874dd9b728c584984d976ce2356b07989", "filename": "gcc/testsuite/g++.dg/ext/instantiate2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finstantiate2.C?ref=b98aa20c89ab5c5b237e5fad0294589a1c4a3cd0", "patch": "@@ -8,8 +8,7 @@ template <class T> struct A {\n template <class T> T A<T>::t = 0;\n static template struct A<int>;\n \n-// { dg-final { scan-assembler \"\\n_?_ZN1AIiE1tE(:|\\n|\\t)\" { target { ! *-apple-darwin* } } } }\n-// { dg-final { scan-assembler \".zerofill __DATA, __bss2, __ZN1AIiE1tE\" { target *-apple-darwin* } } }\n+// { dg-final { scan-assembler \"\\n_?_ZN1AIiE1tE(:|\\n|\\t)\" } }\n void test_int() { A<int>::t = 42; }\n \n // { dg-final { scan-assembler-not \"\\n_?_ZN1AIcE1tE(:|\\n|\\t)\" } }"}, {"sha": "73221347a9c5e4d80671d6ab37f36fb0f3750ec5", "filename": "gcc/testsuite/gcc.target/i386/darwin-zerofill.c", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdarwin-zerofill.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdarwin-zerofill.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdarwin-zerofill.c?ref=d0ed412a967910ba8fe96f328a22dc72e945181a", "patch": "@@ -1,9 +0,0 @@\n-/* { dg-do compile { target i?86-apple-darwin* x86_64-apple-darwin* } } */\n-/* { dg-options \"-fno-common\" } */\n-\n-/* { dg-final { scan-assembler \".zerofill __DATA, __bss11, _ji, 4000000, 11\" } } */\n-/* { dg-final { scan-assembler \".zerofill __TEXT, __bss8, _cj, 4000000, 8\" } } */\n-/* PR33120 */\n-\n-int ji[1000000] __attribute((aligned(2048)));\n-const int cj[1000000] __attribute((aligned(256)));"}]}