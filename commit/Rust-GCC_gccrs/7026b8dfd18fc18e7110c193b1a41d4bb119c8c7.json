{"sha": "7026b8dfd18fc18e7110c193b1a41d4bb119c8c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAyNmI4ZGZkMThmYzE4ZTcxMTBjMTkzYjFhNDFkNGJiMTE5YzhjNw==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2015-06-08T12:20:43Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2015-06-08T12:20:43Z"}, "message": "genmatch.c (expr::gen_transform): For conditions, guess the type from the second operand.\n\n2015-06-08  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* genmatch.c (expr::gen_transform): For conditions, guess the type\n\tfrom the second operand.\n\nFrom-SVN: r224220", "tree": {"sha": "8954bbe503c4e0b9dc95d956f6c7c4a7d7676744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8954bbe503c4e0b9dc95d956f6c7c4a7d7676744"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7026b8dfd18fc18e7110c193b1a41d4bb119c8c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7026b8dfd18fc18e7110c193b1a41d4bb119c8c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7026b8dfd18fc18e7110c193b1a41d4bb119c8c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7026b8dfd18fc18e7110c193b1a41d4bb119c8c7/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7f61ebc8920326b5dc30f79cfc86ef0cb7bb28"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "e7616d3226e8a99be7366b143bf435cf32d66918", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7026b8dfd18fc18e7110c193b1a41d4bb119c8c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7026b8dfd18fc18e7110c193b1a41d4bb119c8c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7026b8dfd18fc18e7110c193b1a41d4bb119c8c7", "patch": "@@ -1,3 +1,8 @@\n+2015-06-08  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* genmatch.c (expr::gen_transform): For conditions, guess the type\n+\tfrom the second operand.\n+\n 2015-06-08  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/66442"}, {"sha": "f27170381d8e3666e9cf7ac1372c9552928950ea", "filename": "gcc/genmatch.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7026b8dfd18fc18e7110c193b1a41d4bb119c8c7/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7026b8dfd18fc18e7110c193b1a41d4bb119c8c7/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=7026b8dfd18fc18e7110c193b1a41d4bb119c8c7", "patch": "@@ -1709,6 +1709,13 @@ expr::gen_transform (FILE *f, const char *dest, bool gimple, int depth,\n       sprintf (optype, \"boolean_type_node\");\n       type = optype;\n     }\n+  else if (*operation == COND_EXPR\n+\t   || *operation == VEC_COND_EXPR)\n+    {\n+      /* Conditions are of the same type as their first alternative.  */\n+      sprintf (optype, \"TREE_TYPE (ops%d[1])\", depth);\n+      type = optype;\n+    }\n   else\n     {\n       /* Other operations are of the same type as their first operand.  */"}]}