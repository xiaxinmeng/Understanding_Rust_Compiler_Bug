{"sha": "ed27099755a9d34005b616231546f5ed017c61b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQyNzA5OTc1NWE5ZDM0MDA1YjYxNjIzMTU0NmY1ZWQwMTdjNjFiOQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-19T19:43:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-19T19:43:08Z"}, "message": "bb_note returns a rtx_note *\n\n2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n\n\t* basic-block.h (bb_note): Strengthen return type from rtx to\n\trtx_note *.\n\t* sched-int.h (bb_note): Likewise.\n\t* cfgrtl.c (bb_note): Likewise.  Add a checked cast to rtx_note *.\n\nFrom-SVN: r214188", "tree": {"sha": "2ec40f53d3d2050ba8e44353d526755a9d8f66ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ec40f53d3d2050ba8e44353d526755a9d8f66ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed27099755a9d34005b616231546f5ed017c61b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed27099755a9d34005b616231546f5ed017c61b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed27099755a9d34005b616231546f5ed017c61b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed27099755a9d34005b616231546f5ed017c61b9/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "167b9fae86bca727a17f4d27a84c20bc9f60317a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167b9fae86bca727a17f4d27a84c20bc9f60317a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167b9fae86bca727a17f4d27a84c20bc9f60317a"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "c6b92873d8030af6f43834e7f42d65c95e6c720c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed27099755a9d34005b616231546f5ed017c61b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed27099755a9d34005b616231546f5ed017c61b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed27099755a9d34005b616231546f5ed017c61b9", "patch": "@@ -1,3 +1,10 @@\n+2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* basic-block.h (bb_note): Strengthen return type from rtx to\n+\trtx_note *.\n+\t* sched-int.h (bb_note): Likewise.\n+\t* cfgrtl.c (bb_note): Likewise.  Add a checked cast to rtx_note *.\n+\n 2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtl.h (make_insn_raw): Strengthen return type from rtx to"}, {"sha": "518dce244793ef8683e96b013a87a15ea064f221", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed27099755a9d34005b616231546f5ed017c61b9/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed27099755a9d34005b616231546f5ed017c61b9/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=ed27099755a9d34005b616231546f5ed017c61b9", "patch": "@@ -801,7 +801,7 @@ extern basic_block * single_pred_before_succ_order (void);\n \n /* In cfgrtl.c  */\n extern rtx block_label (basic_block);\n-extern rtx bb_note (basic_block);\n+extern rtx_note *bb_note (basic_block);\n extern bool purge_all_dead_edges (void);\n extern bool purge_dead_edges (basic_block);\n extern bool fixup_abnormal_edges (void);"}, {"sha": "c6176a5ba878f2bdac4f98163224a552fb3a9177", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed27099755a9d34005b616231546f5ed017c61b9/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed27099755a9d34005b616231546f5ed017c61b9/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=ed27099755a9d34005b616231546f5ed017c61b9", "patch": "@@ -661,7 +661,7 @@ could_fall_through (basic_block src, basic_block target)\n }\n \f\n /* Return the NOTE_INSN_BASIC_BLOCK of BB.  */\n-rtx\n+rtx_note *\n bb_note (basic_block bb)\n {\n   rtx note;\n@@ -671,7 +671,7 @@ bb_note (basic_block bb)\n     note = NEXT_INSN (note);\n \n   gcc_assert (NOTE_INSN_BASIC_BLOCK_P (note));\n-  return note;\n+  return as_a <rtx_note *> (note);\n }\n \n /* Return the INSN immediately following the NOTE_INSN_BASIC_BLOCK"}, {"sha": "7f236a127d342c22471fb221da82ff5a4670c966", "filename": "gcc/sched-int.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed27099755a9d34005b616231546f5ed017c61b9/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed27099755a9d34005b616231546f5ed017c61b9/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=ed27099755a9d34005b616231546f5ed017c61b9", "patch": "@@ -1368,7 +1368,7 @@ extern void sched_change_pattern (rtx, rtx);\n extern int sched_speculate_insn (rtx, ds_t, rtx *);\n extern void unlink_bb_notes (basic_block, basic_block);\n extern void add_block (basic_block, basic_block);\n-extern rtx bb_note (basic_block);\n+extern rtx_note *bb_note (basic_block);\n extern void concat_note_lists (rtx, rtx *);\n extern rtx sched_emit_insn (rtx);\n extern rtx get_ready_element (int);"}]}