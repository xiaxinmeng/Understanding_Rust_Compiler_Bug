{"sha": "802b38c91f7c5a03e69e37bd4a1ad54a46020671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAyYjM4YzkxZjdjNWEwM2U2OWUzN2JkNGExYWQ1NGE0NjAyMDY3MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-10T16:17:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-10T16:17:47Z"}, "message": "re PR c/82437 (false-positive -Wtautological-compare warning with -std=gnu89)\n\n\tPR c/82437\n\t* c-warn.c (warn_tautological_bitwise_comparison): Use wi::to_wide\n\tinstead of wide_int::from.\n\n\t* c-c++-common/Wtautological-compare-7.c: New test.\n\nFrom-SVN: r253589", "tree": {"sha": "0a3c72e25a92aefd78d1847ce86e51522dab076e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a3c72e25a92aefd78d1847ce86e51522dab076e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/802b38c91f7c5a03e69e37bd4a1ad54a46020671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/802b38c91f7c5a03e69e37bd4a1ad54a46020671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/802b38c91f7c5a03e69e37bd4a1ad54a46020671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/802b38c91f7c5a03e69e37bd4a1ad54a46020671/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6a5091a56a6f7e7d98643cc14c59313eebf8e6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "49d055aeb4de2f6bc38787ead0b9b2796f246b59", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/802b38c91f7c5a03e69e37bd4a1ad54a46020671/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/802b38c91f7c5a03e69e37bd4a1ad54a46020671/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=802b38c91f7c5a03e69e37bd4a1ad54a46020671", "patch": "@@ -1,3 +1,9 @@\n+2017-10-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/82437\n+\t* c-warn.c (warn_tautological_bitwise_comparison): Use wi::to_wide\n+\tinstead of wide_int::from.\n+\n 2017-10-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/82437"}, {"sha": "717fe7f54ee1fe0cb6cfd6a3c1c07f0c84215507", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/802b38c91f7c5a03e69e37bd4a1ad54a46020671/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/802b38c91f7c5a03e69e37bd4a1ad54a46020671/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=802b38c91f7c5a03e69e37bd4a1ad54a46020671", "patch": "@@ -362,8 +362,8 @@ warn_tautological_bitwise_comparison (location_t loc, tree_code code,\n   int prec = MAX (TYPE_PRECISION (TREE_TYPE (cst)),\n \t\t  TYPE_PRECISION (TREE_TYPE (bitopcst)));\n \n-  wide_int bitopcstw = wide_int::from (bitopcst, prec, UNSIGNED);\n-  wide_int cstw = wide_int::from (cst, prec, UNSIGNED);\n+  wide_int bitopcstw = wi::to_wide (bitopcst, prec);\n+  wide_int cstw = wi::to_wide (cst, prec);\n \n   wide_int res;\n   if (TREE_CODE (bitop) == BIT_AND_EXPR)"}, {"sha": "9317e4df749c93fdd0de5e89c4e557046cfed21d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/802b38c91f7c5a03e69e37bd4a1ad54a46020671/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/802b38c91f7c5a03e69e37bd4a1ad54a46020671/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=802b38c91f7c5a03e69e37bd4a1ad54a46020671", "patch": "@@ -1,3 +1,8 @@\n+2017-10-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/82437\n+\t* c-c++-common/Wtautological-compare-7.c: New test.\n+\n 2017-10-10  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/tree-ssa/ldist-34.c: New test."}, {"sha": "1dab5877f3b9a7e25bc7d7f1004a10d69f680de3", "filename": "gcc/testsuite/c-c++-common/Wtautological-compare-7.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/802b38c91f7c5a03e69e37bd4a1ad54a46020671/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/802b38c91f7c5a03e69e37bd4a1ad54a46020671/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-7.c?ref=802b38c91f7c5a03e69e37bd4a1ad54a46020671", "patch": "@@ -0,0 +1,11 @@\n+/* PR c/82437 */\n+/* { dg-do compile { target int32 } } */\n+/* { dg-options \"-Wtautological-compare\" } */\n+\n+int\n+foo (unsigned long long int x)\n+{\n+  if ((x | 0x190000000ULL) != -1879048192)\t/* { dg-bogus \"bitwise comparison always evaluates to\" } */\n+    return 0;\n+  return 1;\n+}"}]}