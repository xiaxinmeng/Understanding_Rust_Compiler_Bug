{"sha": "bf5f41e4fcc396b359f096231a37a3cb411cc9df", "node_id": "C_kwDOANBUbNoAKGJmNWY0MWU0ZmNjMzk2YjM1OWYwOTYyMzFhMzdhM2NiNDExY2M5ZGY", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-11-17T10:02:20Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-11-17T10:02:20Z"}, "message": "i386: Fix non-robust split condition in define_insn_and_split\n\nThis patch is to fix some non-robust split conditions in some\ndefine_insn_and_splits, to make each of them applied on top of\nthe corresponding condition for define_insn part, otherwise the\nsplitting could perform unexpectedly.\n\ngcc/ChangeLog:\n\n\t* config/i386/i386.md (*add<dwi>3_doubleword, *addv<dwi>4_doubleword,\n\t*addv<dwi>4_doubleword_1, *sub<dwi>3_doubleword,\n\t*subv<dwi>4_doubleword, *subv<dwi>4_doubleword_1,\n\t*add<dwi>3_doubleword_cc_overflow_1, *divmodsi4_const,\n\t*neg<dwi>2_doubleword, *tls_dynamic_gnu2_combine_64_<mode>): Fix split\n\tcondition.", "tree": {"sha": "3d12e4035a665f369eb48be2bf118e0f9bba8ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d12e4035a665f369eb48be2bf118e0f9bba8ad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf5f41e4fcc396b359f096231a37a3cb411cc9df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5f41e4fcc396b359f096231a37a3cb411cc9df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf5f41e4fcc396b359f096231a37a3cb411cc9df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5f41e4fcc396b359f096231a37a3cb411cc9df/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a15a91a0015208eafb797e4de1348c9877fd6d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a15a91a0015208eafb797e4de1348c9877fd6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a15a91a0015208eafb797e4de1348c9877fd6d0"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "73d15de88b277eda3a0ceb0088aaa37f23136d2d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf5f41e4fcc396b359f096231a37a3cb411cc9df/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf5f41e4fcc396b359f096231a37a3cb411cc9df/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=bf5f41e4fcc396b359f096231a37a3cb411cc9df", "patch": "@@ -5491,7 +5491,7 @@\n    (clobber (reg:CC FLAGS_REG))]\n   \"ix86_binary_operator_ok (PLUS, <DWI>mode, operands)\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(parallel [(set (reg:CCC FLAGS_REG)\n \t\t   (compare:CCC\n \t\t     (plus:DWIH (match_dup 1) (match_dup 2))\n@@ -6300,7 +6300,7 @@\n \t(plus:<DWI> (match_dup 1) (match_dup 2)))]\n   \"ix86_binary_operator_ok (PLUS, <DWI>mode, operands)\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(parallel [(set (reg:CCC FLAGS_REG)\n \t\t   (compare:CCC\n \t\t     (plus:DWIH (match_dup 1) (match_dup 2))\n@@ -6347,7 +6347,7 @@\n    && CONST_SCALAR_INT_P (operands[2])\n    && rtx_equal_p (operands[2], operands[3])\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(parallel [(set (reg:CCC FLAGS_REG)\n \t\t   (compare:CCC\n \t\t     (plus:DWIH (match_dup 1) (match_dup 2))\n@@ -6641,7 +6641,7 @@\n    (clobber (reg:CC FLAGS_REG))]\n   \"ix86_binary_operator_ok (MINUS, <MODE>mode, operands)\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(parallel [(set (reg:CC FLAGS_REG)\n \t\t   (compare:CC (match_dup 1) (match_dup 2)))\n \t      (set (match_dup 0)\n@@ -6817,7 +6817,7 @@\n \t(minus:<DWI> (match_dup 1) (match_dup 2)))]\n   \"ix86_binary_operator_ok (MINUS, <MODE>mode, operands)\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(parallel [(set (reg:CC FLAGS_REG)\n \t\t   (compare:CC (match_dup 1) (match_dup 2)))\n \t      (set (match_dup 0)\n@@ -6862,7 +6862,7 @@\n    && CONST_SCALAR_INT_P (operands[2])\n    && rtx_equal_p (operands[2], operands[3])\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(parallel [(set (reg:CC FLAGS_REG)\n \t\t   (compare:CC (match_dup 1) (match_dup 2)))\n \t      (set (match_dup 0)\n@@ -7542,7 +7542,7 @@\n \t(plus:<DWI> (match_dup 1) (match_dup 2)))]\n   \"ix86_binary_operator_ok (PLUS, <DWI>mode, operands)\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(parallel [(set (reg:CCC FLAGS_REG)\n \t\t   (compare:CCC\n \t\t     (plus:DWIH (match_dup 1) (match_dup 2))\n@@ -9000,7 +9000,7 @@\n    (clobber (reg:CC FLAGS_REG))]\n   \"!optimize_function_for_size_p (cfun)\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(set (match_dup 0) (match_dup 2))\n    (set (match_dup 1) (match_dup 4))\n    (parallel [(set (match_dup 0)\n@@ -10515,7 +10515,7 @@\n    (clobber (reg:CC FLAGS_REG))]\n   \"ix86_unary_operator_ok (NEG, <DWI>mode, operands)\"\n   \"#\"\n-  \"reload_completed\"\n+  \"&& reload_completed\"\n   [(parallel\n     [(set (reg:CCC FLAGS_REG)\n \t  (ne:CCC (match_dup 1) (const_int 0)))\n@@ -16908,7 +16908,7 @@\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && TARGET_GNU2_TLS\"\n   \"#\"\n-  \"\"\n+  \"&& 1\"\n   [(set (match_dup 0) (match_dup 4))]\n {\n   operands[4] = can_create_pseudo_p () ? gen_reg_rtx (ptr_mode) : operands[0];"}]}