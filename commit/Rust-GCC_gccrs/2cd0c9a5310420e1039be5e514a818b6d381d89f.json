{"sha": "2cd0c9a5310420e1039be5e514a818b6d381d89f", "node_id": "C_kwDOANBUbNoAKDJjZDBjOWE1MzEwNDIwZTEwMzliZTVlNTE0YTgxOGI2ZDM4MWQ4OWY", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-03-23T17:22:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-03-23T19:35:50Z"}, "message": "c++: tweak PR103337 fix\n\nPatrick suggested a way to implement the designated-init handling without\n(temporarily) modifying the CONSTRUCTOR being reshaped.\n\n\tPR c++/103337\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (reshape_single_init): New.\n\t(reshape_init_class): Use it.", "tree": {"sha": "7782ce4edc618d8699b35732840ef983f980cc61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7782ce4edc618d8699b35732840ef983f980cc61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cd0c9a5310420e1039be5e514a818b6d381d89f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd0c9a5310420e1039be5e514a818b6d381d89f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cd0c9a5310420e1039be5e514a818b6d381d89f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd0c9a5310420e1039be5e514a818b6d381d89f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8cd3edc0fc6c02a732dcecf519c22d835e5f422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8cd3edc0fc6c02a732dcecf519c22d835e5f422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8cd3edc0fc6c02a732dcecf519c22d835e5f422"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "efef1b7370f43b488daf176f3e440aa4540ff0dd", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd0c9a5310420e1039be5e514a818b6d381d89f/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd0c9a5310420e1039be5e514a818b6d381d89f/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=2cd0c9a5310420e1039be5e514a818b6d381d89f", "patch": "@@ -6543,6 +6543,21 @@ reshape_init_vector (tree type, reshape_iter *d, tsubst_flags_t complain)\n \t\t\t       NULL_TREE, complain);\n }\n \n+/* Subroutine of reshape_init*: We're initializing an element with TYPE from\n+   INIT, in isolation from any designator or other initializers.  */\n+\n+static tree\n+reshape_single_init (tree type, tree init, tsubst_flags_t complain)\n+{\n+  /* We could also implement this by wrapping init in a new CONSTRUCTOR and\n+     calling reshape_init, but this way can just live on the stack.  */\n+  constructor_elt elt = { /*index=*/NULL_TREE, init };\n+  reshape_iter iter = { &elt, &elt + 1 };\n+  return reshape_init_r (type, &iter,\n+\t\t\t /*first_initializer_p=*/NULL_TREE,\n+\t\t\t complain);\n+}\n+\n /* Subroutine of reshape_init_r, processes the initializers for classes\n    or union. Parameters are the same of reshape_init_r.  */\n \n@@ -6690,24 +6705,19 @@ reshape_init_class (tree type, reshape_iter *d, bool first_initializer_p,\n \n       if (direct_desig)\n \t{\n-\t  /* The designated field F is initialized from this one element:\n-\t     Temporarily clear the designator so a recursive reshape_init_class\n-\t     doesn't try to find it again in F, and adjust d->end so we don't\n-\t     try to use the next initializer to initialize another member of F.\n+\t  /* The designated field F is initialized from this one element.\n \n-\t     Note that we don't want these changes if we found the designator\n-\t     inside an anon aggr above; we leave them alone to implement:\n+\t     Note that we don't want to do this if we found the designator\n+\t     inside an anon aggr above; we use the normal code to implement:\n \n \t     \"If the element is an anonymous union member and the initializer\n \t     list is a brace-enclosed designated- initializer-list, the element\n \t     is initialized by the designated-initializer-list { D }, where D\n \t     is the designated- initializer-clause naming a member of the\n \t     anonymous union member.\"  */\n-\t  auto end_ = make_temp_override (d->end, d->cur + 1);\n-\t  auto idx_ = make_temp_override (d->cur->index, NULL_TREE);\n-\t  field_init = reshape_init_r (TREE_TYPE (field), d,\n-\t\t\t\t       /*first_initializer_p=*/NULL_TREE,\n-\t\t\t\t       complain);\n+\t  field_init = reshape_single_init (TREE_TYPE (field),\n+\t\t\t\t\t    d->cur->value, complain);\n+\t  d->cur++;\n \t}\n       else\n \tfield_init = reshape_init_r (TREE_TYPE (field), d,"}]}