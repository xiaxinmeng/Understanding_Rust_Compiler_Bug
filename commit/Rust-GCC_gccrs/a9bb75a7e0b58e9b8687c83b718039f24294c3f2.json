{"sha": "a9bb75a7e0b58e9b8687c83b718039f24294c3f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTliYjc1YTdlMGI1OGU5Yjg2ODdjODNiNzE4MDM5ZjI0Mjk0YzNmMg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-04-04T05:32:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-04-04T05:32:59Z"}, "message": "As per DR 184, libstdc++/3139\n\n\n2002-04-03  Benjamin Kosnik  <bkoz@redhat.com>\n\n        As per DR 184, libstdc++/3139\n        * include/std/std_limits.h (__glibcpp_bool_digits): Change to 1.\n        (numeric_limits<bool>::is_iec559): False.\n        (numeric_limits<bool>::is_modulo): False.\n\n\t* testsuite/27_io/ios_init.cc: Add instantiations.\n\nFrom-SVN: r51838", "tree": {"sha": "52c00996258987cfc426305e87acfb4a9e4d88f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52c00996258987cfc426305e87acfb4a9e4d88f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9bb75a7e0b58e9b8687c83b718039f24294c3f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9bb75a7e0b58e9b8687c83b718039f24294c3f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9bb75a7e0b58e9b8687c83b718039f24294c3f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9bb75a7e0b58e9b8687c83b718039f24294c3f2/comments", "author": null, "committer": null, "parents": [{"sha": "823fbbce5c867613d9a1417d77970ab0ea5f41b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/823fbbce5c867613d9a1417d77970ab0ea5f41b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/823fbbce5c867613d9a1417d77970ab0ea5f41b4"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "08561c0a97fa741f902e32cd858185d55114ba29", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9bb75a7e0b58e9b8687c83b718039f24294c3f2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9bb75a7e0b58e9b8687c83b718039f24294c3f2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a9bb75a7e0b58e9b8687c83b718039f24294c3f2", "patch": "@@ -1,3 +1,12 @@\n+2002-04-03  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+        As per DR 184, libstdc++/3139\n+        * include/std/std_limits.h (__glibcpp_bool_digits): Change to 1.\n+        (numeric_limits<bool>::is_iec559): False.\n+        (numeric_limits<bool>::is_modulo): False.       \n+\n+\t* testsuite/27_io/ios_init.cc: Add instantiations.\n+\n 2002-04-02  Benjamin Kosnik  <bkoz@redhat.com>\n \t\n \tlibstdc++/5268"}, {"sha": "64d8a9bb59edab9f8ed4d4e6ffe110543a74cfad", "filename": "libstdc++-v3/include/std/std_limits.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9bb75a7e0b58e9b8687c83b718039f24294c3f2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9bb75a7e0b58e9b8687c83b718039f24294c3f2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h?ref=a9bb75a7e0b58e9b8687c83b718039f24294c3f2", "patch": "@@ -233,11 +233,8 @@\n // bool-specific hooks:\n //     __glibcpp_bool_digits  __glibcpp_int_traps __glibcpp_long_traps\n \n-// This is actually CHAR_BITS because the new ABI says a bool\n-// is one (1) byte wide.\n-\n #ifndef __glibcpp_bool_digits\n-#define __glibcpp_bool_digits __glibcpp_char_bits\n+#define __glibcpp_bool_digits 1\n #endif\n \n // char.\n@@ -996,9 +993,9 @@ namespace std\n       static bool denorm_min() throw()\n       { return false; }\n \n-      static const bool is_iec559 = true;\n+      static const bool is_iec559 = false;\n       static const bool is_bounded = true;\n-      static const bool is_modulo = true;\n+      static const bool is_modulo = false;\n \n       // It is not clear what it means for a boolean type to trap.\n       // This is a DR on the LWG issue list.  Here, I use integer"}, {"sha": "1905aa64ac8d326ada401553454f78c355a98cf9", "filename": "libstdc++-v3/testsuite/27_io/ios_init.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9bb75a7e0b58e9b8687c83b718039f24294c3f2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9bb75a7e0b58e9b8687c83b718039f24294c3f2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_init.cc?ref=a9bb75a7e0b58e9b8687c83b718039f24294c3f2", "patch": "@@ -215,6 +215,14 @@ template\n template \n   unsigned short\n   std::basic_string<unsigned short>::_Rep::_S_terminal;\n+\n+template \n+  std::basic_string<unsigned char>::size_type \n+  std::basic_string<unsigned char>::_Rep::_S_max_size;\n+\n+template \n+  unsigned char\n+  std::basic_string<unsigned char>::_Rep::_S_terminal;\n #endif\n \n int main()"}]}