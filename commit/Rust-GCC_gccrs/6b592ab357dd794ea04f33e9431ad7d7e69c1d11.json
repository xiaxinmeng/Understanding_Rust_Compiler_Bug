{"sha": "6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI1OTJhYjM1N2RkNzk0ZWEwNGYzM2U5NDMxYWQ3ZDdlNjljMWQxMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-09T02:49:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-09T02:49:53Z"}, "message": "set.h: Protect move assignment operator vs self assignment.\n\n2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/debug/set.h: Protect move assignment operator vs self\n\tassignment.\n\t* include/debug/unordered_map: Likewise.\n \t* include/debug/multiset.h: Likewise.\n \t* include/debug/vector: Likewise.\n\t* include/debug/unordered_set: Likewise.\n\t* include/debug/deque: Likewise.\n\t* include/debug/map.h: Likewise.\n\t* include/debug/list: Likewise.\n\t* include/debug/multimap.h: Likewise.\n\t* include/tr1_impl/unordered_map: Likewise.\n\t* include/tr1_impl/unordered_set: Likewise.\n\t* include/profile/set.h: Likewise.\n\t* include/profile/unordered_map: Likewise.\n\t* include/profile/multiset.h: Likewise.\n\t* include/profile/unordered_set: Likewise.\n\t* include/profile/vector: Likewise.\n\t* include/profile/deque: Likewise.\n\t* include/profile/map.h: Likewise.\n\t* include/profile/list: Likewise.\n\t* include/profile/multimap.h: Likewise.\n\t* include/ext/vstring.h: Likewise.\n\t* include/bits/stl_list.h: Likewise.\n\t* include/bits/stl_map.h: Likewise.\n\t* include/bits/stl_set.h: Likewise.\n\t* include/bits/stl_multimap.h: Likewise.\n\t* include/bits/stl_vector.h: Likewise.\n\t* include/bits/stl_deque.h: Likewise.\n\t* include/bits/stl_multiset.h: Likewise.\n\t* include/ext/vstring.h: Use clear(). \n\t* testsuite/ext/vstring/cons/self_move_assign.cc: New.\n\t* testsuite/23_containers/unordered_map/cons/self_move_assign.cc:\n\tLikewise.\n\t* testsuite/23_containers/multimap/cons/self_move_assign.cc: Likewise.\n\t* testsuite/23_containers/set/cons/self_move_assign.cc: Likewise.\n\t* testsuite/23_containers/unordered_multimap/cons/\n\tself_move_assign.cc: Likewise.\n\t* testsuite/23_containers/forward_list/cons/self_move_assign.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_set/cons/self_move_assign.cc:\n\tLikewise.\n \t* testsuite/23_containers/vector/cons/self_move_assign.cc: Likewise.\n\t* testsuite/23_containers/deque/cons/self_move_assign.cc: Likewise.\n\t* testsuite/23_containers/multiset/cons/self_move_assign.cc: Likewise.\n\t* testsuite/23_containers/list/cons/self_move_assign.cc: Likewise.\n\t* testsuite/23_containers/unordered_multiset/cons/\n\tself_move_assign.cc: Likewise.\n\t* testsuite/23_containers/map/cons/self_move_assign.cc: Likewise.\n\n\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line numbers.\n \t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n\tLikewise.\n \t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\n\t* testsuite/ext/vstring/moveable.cc: Move to...\n\t* testsuite/ext/vstring/cons/moveable.cc: ... here.\n\t* testsuite/23_containers/unordered_map/moveable.cc: Move to...\n\t* testsuite/23_containers/unordered_map/cons/moveable.cc ... here.\n\t* testsuite/23_containers/multimap/moveable.cc: Move to...\n\t* testsuite/23_containers/multimap/cons/moveable.cc: ... here.\n\t* testsuite/23_containers/set/moveable.cc: Move to...\n\t* testsuite/23_containers/set/cons/moveable.cc: ... here.\n\t* testsuite/23_containers/unordered_multimap/moveable.cc: Move to...\n\t* testsuite/23_containers/unordered_multimap/cons/moveable.cc:\n\t... here.\n\t* testsuite/23_containers/forward_list/moveable.cc: Move to...\n\t* testsuite/23_containers/forward_list/cons/moveable.cc: ... here.\n\t* testsuite/23_containers/unordered_set/moveable.cc Move to...\n\t* testsuite/23_containers/unordered_set/moveable.cc: ... here.\n\t* testsuite/23_containers/vector/cons/moveable.cc Move to...\n\t* testsuite/23_containers/vector/cons/moveable2.cc: ... this.\n\t* testsuite/23_containers/deque/cons/moveable.cc Move to...\n\t* testsuite/23_containers/deque/cons/moveable2.cc: ... this.\n\t* testsuite/23_containers/multiset/moveable.cc Move to...\n\t* testsuite/23_containers/multiset/cons/moveable.cc: ... here.\n\t* testsuite/23_containers/list/moveable.h Move to...\n\t* testsuite/23_containers/list/cons/moveable.h: ... here.\n\t* testsuite/23_containers/list/moveable.cc Move to...\n\t* testsuite/23_containers/list/cons/moveable.cc: ... here.\n\t* testsuite/23_containers/unordered_multiset/moveable.cc Move to...\n\t* testsuite/23_containers/unordered_multiset/cons/moveable.cc:\n\t... here.\n\t* testsuite/23_containers/map/moveable.cc Move to...\n\t* testsuite/23_containers/map/cons/moveable.cc: ... here.\n\t* testsuite/23_containers/vector/moveable.cc: Move to...\n\t* testsuite/23_containers/vector/cons/moveable.cc: ... here.\n\t* testsuite/23_containers/deque/moveable.cc: Move to...\n\t* testsuite/23_containers/deque/cons/moveable.cc: ... here.\n\nFrom-SVN: r155754", "tree": {"sha": "48fa6995cf164184782c7de0dd7715af315d6905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48fa6995cf164184782c7de0dd7715af315d6905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/comments", "author": null, "committer": null, "parents": [{"sha": "06cced6cd95843daffba84163bff3dc938671a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06cced6cd95843daffba84163bff3dc938671a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06cced6cd95843daffba84163bff3dc938671a9c"}], "stats": {"total": 1221, "additions": 990, "deletions": 231}, "files": [{"sha": "fe5de4369712e92636d55ed4737b352969e25d03", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,3 +1,114 @@\n+2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/debug/set.h: Protect move assignment operator vs self\n+\tassignment.\n+\t* include/debug/unordered_map: Likewise.\n+ \t* include/debug/multiset.h: Likewise.\n+ \t* include/debug/vector: Likewise.\n+\t* include/debug/unordered_set: Likewise.\n+\t* include/debug/deque: Likewise.\n+\t* include/debug/map.h: Likewise.\n+\t* include/debug/list: Likewise.\n+\t* include/debug/multimap.h: Likewise.\n+\t* include/tr1_impl/unordered_map: Likewise.\n+\t* include/tr1_impl/unordered_set: Likewise.\n+\t* include/profile/set.h: Likewise.\n+\t* include/profile/unordered_map: Likewise.\n+\t* include/profile/multiset.h: Likewise.\n+\t* include/profile/unordered_set: Likewise.\n+\t* include/profile/vector: Likewise.\n+\t* include/profile/deque: Likewise.\n+\t* include/profile/map.h: Likewise.\n+\t* include/profile/list: Likewise.\n+\t* include/profile/multimap.h: Likewise.\n+\t* include/ext/vstring.h: Likewise.\n+\t* include/bits/stl_list.h: Likewise.\n+\t* include/bits/stl_map.h: Likewise.\n+\t* include/bits/stl_set.h: Likewise.\n+\t* include/bits/stl_multimap.h: Likewise.\n+\t* include/bits/stl_vector.h: Likewise.\n+\t* include/bits/stl_deque.h: Likewise.\n+\t* include/bits/stl_multiset.h: Likewise.\n+\t* include/ext/vstring.h: Use clear().\n+\t* testsuite/ext/vstring/cons/self_move_assign.cc: New.\n+\t* testsuite/23_containers/unordered_map/cons/self_move_assign.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/multimap/cons/self_move_assign.cc: Likewise.\n+\t* testsuite/23_containers/set/cons/self_move_assign.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multimap/cons/\n+\tself_move_assign.cc: Likewise.\n+\t* testsuite/23_containers/forward_list/cons/self_move_assign.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/cons/self_move_assign.cc:\n+\tLikewise.\n+ \t* testsuite/23_containers/vector/cons/self_move_assign.cc: Likewise.\n+\t* testsuite/23_containers/deque/cons/self_move_assign.cc: Likewise.\n+\t* testsuite/23_containers/multiset/cons/self_move_assign.cc: Likewise.\n+\t* testsuite/23_containers/list/cons/self_move_assign.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multiset/cons/\n+\tself_move_assign.cc: Likewise.\n+\t* testsuite/23_containers/map/cons/self_move_assign.cc: Likewise.\n+\n+\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line numbers.\n+ \t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+ \t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\n+\t* testsuite/ext/vstring/moveable.cc: Move to...\n+\t* testsuite/ext/vstring/cons/moveable.cc: ... here.\n+\t* testsuite/23_containers/unordered_map/moveable.cc: Move to...\n+\t* testsuite/23_containers/unordered_map/cons/moveable.cc ... here.\n+\t* testsuite/23_containers/multimap/moveable.cc: Move to...\n+\t* testsuite/23_containers/multimap/cons/moveable.cc: ... here.\n+\t* testsuite/23_containers/set/moveable.cc: Move to...\n+\t* testsuite/23_containers/set/cons/moveable.cc: ... here.\n+\t* testsuite/23_containers/unordered_multimap/moveable.cc: Move to...\n+\t* testsuite/23_containers/unordered_multimap/cons/moveable.cc:\n+\t... here.\n+\t* testsuite/23_containers/forward_list/moveable.cc: Move to...\n+\t* testsuite/23_containers/forward_list/cons/moveable.cc: ... here.\n+\t* testsuite/23_containers/unordered_set/moveable.cc Move to...\n+\t* testsuite/23_containers/unordered_set/moveable.cc: ... here.\n+\t* testsuite/23_containers/vector/cons/moveable.cc Move to...\n+\t* testsuite/23_containers/vector/cons/moveable2.cc: ... this.\n+\t* testsuite/23_containers/deque/cons/moveable.cc Move to...\n+\t* testsuite/23_containers/deque/cons/moveable2.cc: ... this.\n+\t* testsuite/23_containers/multiset/moveable.cc Move to...\n+\t* testsuite/23_containers/multiset/cons/moveable.cc: ... here.\n+\t* testsuite/23_containers/list/moveable.h Move to...\n+\t* testsuite/23_containers/list/cons/moveable.h: ... here.\n+\t* testsuite/23_containers/list/moveable.cc Move to...\n+\t* testsuite/23_containers/list/cons/moveable.cc: ... here.\n+\t* testsuite/23_containers/unordered_multiset/moveable.cc Move to...\n+\t* testsuite/23_containers/unordered_multiset/cons/moveable.cc:\n+\t... here.\n+\t* testsuite/23_containers/map/moveable.cc Move to...\n+\t* testsuite/23_containers/map/cons/moveable.cc: ... here.\n+\t* testsuite/23_containers/vector/moveable.cc: Move to...\n+\t* testsuite/23_containers/vector/cons/moveable.cc: ... here.\n+\t* testsuite/23_containers/deque/moveable.cc: Move to...\n+\t* testsuite/23_containers/deque/cons/moveable.cc: ... here.\n+\n 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/42573"}, {"sha": "b0b2f4940d84cb585a169e53eec1129bf373558a", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -884,9 +884,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       deque&\n       operator=(deque&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\n       }\n "}, {"sha": "b6ce11382efe1965ed5670c1bbf50a65a4206a01", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // List implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -606,9 +606,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       list&\n       operator=(list&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "33364bfe917fb75db68fd12d85342d8bcf3a82d0", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // Map implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -265,9 +265,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       map&\n       operator=(map&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\n       }\n "}, {"sha": "0bff20a07355f371ed28fc6b1614428e49b2f50d", "filename": "libstdc++-v3/include/bits/stl_multimap.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // Multimap implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -262,9 +262,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       multimap&\n       operator=(multimap&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\n       }\n "}, {"sha": "bb84b6b7d08dc8736af599d118b5ebf82cab117e", "filename": "libstdc++-v3/include/bits/stl_multiset.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // Multiset implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -234,9 +234,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       multiset&\n       operator=(multiset&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "2388382ad316cca064fdac3f4108b25cd58d1895", "filename": "libstdc++-v3/include/bits/stl_set.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // Set implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -241,9 +241,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       set&\n       operator=(set&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\n       }\n "}, {"sha": "f681cf0e8554ec00adb0ac804343c77d4e1685f8", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -335,9 +335,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       vector&\n       operator=(vector&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\n       }\n "}, {"sha": "1c9535ec7568d7d0b9afa5b42bc1dcce9d7ee1c5", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -110,9 +110,12 @@ namespace __debug\n       deque&\n       operator=(deque&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\t  \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\t  \n \treturn *this;\n       }\n "}, {"sha": "78462e459059ff9fea178f35ed2d33de22de0cb2", "filename": "libstdc++-v3/include/debug/list", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -112,9 +112,12 @@ namespace __debug\n       list&\n       operator=(list&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "8ef28a19790ef9242841e5d59c28371a46e2f583", "filename": "libstdc++-v3/include/debug/map.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -115,9 +115,12 @@ namespace __debug\n       map&\n       operator=(map&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "4ef2990acd03dba91812d05b6ea8abcab1db982f", "filename": "libstdc++-v3/include/debug/multimap.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -116,9 +116,12 @@ namespace __debug\n       multimap&\n       operator=(multimap&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "4a7ed9e66882aff605d06ba30d8a28b71c67810e", "filename": "libstdc++-v3/include/debug/multiset.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -113,9 +113,12 @@ namespace __debug\n       multiset&\n       operator=(multiset&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "99f83fa9aa8db091f4f0cba61a44695143a52092", "filename": "libstdc++-v3/include/debug/set.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -113,9 +113,12 @@ namespace __debug\n       set&\n       operator=(set&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "61a3a0a3686565c1465a2338c99d52367a8c9e5d", "filename": "libstdc++-v3/include/debug/unordered_map", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // Debugging unordered_map/unordered_multimap implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -115,9 +115,12 @@ namespace __debug\n       unordered_map&\n       operator=(unordered_map&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+   \tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n \n@@ -388,9 +391,12 @@ namespace __debug\n       unordered_multimap&\n       operator=(unordered_multimap&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "f704f0167948b643935047ed33ef47d1daf9b0c6", "filename": "libstdc++-v3/include/debug/unordered_set", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // Debugging unordered_set/unordered_multiset implementation -*- C++ -*-\n \n-// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -115,9 +115,12 @@ namespace __debug\n       unordered_set&\n       operator=(unordered_set&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "227905a513dec7de805c09e02c4833254a8eb45f", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -124,9 +124,12 @@ namespace __debug\n       vector&\n       operator=(vector&& __x)\n       {\n-        // NB: DR 675.\n-\tclear();\n-\tswap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    clear();\n+\t    swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "691915f5c7ffcb2252d68035ac0effa3d87f3688", "filename": "libstdc++-v3/include/ext/vstring.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -261,7 +261,10 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       operator=(__versa_string&& __str)\n       {\n \tif (this != &__str)\n-\t  this->swap(__str);\n+\t  {\n+\t    this->clear();\n+\t    this->swap(__str);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "12f45d646fcc8aa6716a5819441305935a186f7f", "filename": "libstdc++-v3/include/profile/deque", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -102,9 +102,12 @@ namespace __profile\n       deque&\n       operator=(deque&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\t  \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }  \n \treturn *this;\n       }\n "}, {"sha": "9979a5211b2e84e77d0c7fa046f96cd63fcede66", "filename": "libstdc++-v3/include/profile/list", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -102,9 +102,12 @@ namespace __profile\n       list&\n       operator=(list&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "6335ee774f345493c9900fa5e7dc1eed70a2dac0", "filename": "libstdc++-v3/include/profile/map.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -121,9 +121,12 @@ namespace __profile\n       map&\n       operator=(map&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "c240e331aa6ee34bbb7e8e04b62c2dc97e4faed1", "filename": "libstdc++-v3/include/profile/multimap.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // Profiling multimap implementation -*- C++ -*-\n \n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -106,9 +106,12 @@ namespace __profile\n       multimap&\n       operator=(multimap&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "22c1c53738c0d38d59169460f24664ef28adc9b9", "filename": "libstdc++-v3/include/profile/multiset.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -104,9 +104,12 @@ namespace __profile\n       multiset&\n       operator=(multiset&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "c5d462747f7751f4f826978cb0e3c74227f44bca", "filename": "libstdc++-v3/include/profile/set.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -104,9 +104,12 @@ namespace __profile\n       set&\n       operator=(set&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "7ef629a9094f54c92732f5c57e00cd180ae43a9c", "filename": "libstdc++-v3/include/profile/unordered_map", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_map?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -130,9 +130,12 @@ namespace __profile\n       unordered_map&\n       operator=(unordered_map&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n \n@@ -355,9 +358,12 @@ namespace __profile\n       unordered_multimap&\n       operator=(unordered_multimap&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "8c9e7669c495c5aeef3804dbe1f0b95d7c8313c9", "filename": "libstdc++-v3/include/profile/unordered_set", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Funordered_set?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -129,9 +129,12 @@ namespace __profile\n       unordered_set&\n       operator=(unordered_set&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n \n@@ -343,9 +346,12 @@ namespace __profile\n       unordered_multiset&\n       operator=(unordered_multiset&& __x)\n       {\n-        // NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n \treturn *this;\n       }\n "}, {"sha": "5ae45323dcb39597c4917aa84bdd48bb4ae1e09e", "filename": "libstdc++-v3/include/profile/vector", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -140,9 +140,12 @@ namespace __profile\n       vector&\n       operator=(vector&& __x)\n       {\n-        // NB: DR 675.\n-        this->clear();\n-        this->swap(__x);\n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  }\n         return *this;\n       }\n "}, {"sha": "d697590073981d3d9a99c85ac8c6b7ccc42c93b7", "filename": "libstdc++-v3/include/tr1_impl/unordered_map", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_map?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -229,9 +229,12 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       unordered_map&\n       operator=(unordered_map&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\t\n       }\n \n@@ -312,9 +315,12 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       unordered_multimap&\n       operator=(unordered_multimap&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\t\n       }\n "}, {"sha": "1270b17186a4ecc545057478c16a10f2e3b811a9", "filename": "libstdc++-v3/include/tr1_impl/unordered_set", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Funordered_set?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // TR1 unordered_set -*- C++ -*-\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -222,9 +222,12 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       unordered_set&\n       operator=(unordered_set&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\t\n       }\n \n@@ -302,9 +305,12 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       unordered_multiset&\n       operator=(unordered_multiset&& __x)\n       {\n-\t// NB: DR 675.\n-\tthis->clear();\n-\tthis->swap(__x); \n+\tif (this != &__x)\n+\t  {\n+\t    // NB: DR 675.\n+\t    this->clear();\n+\t    this->swap(__x);\n+\t  } \n \treturn *this;\t\n       }\n "}, {"sha": "57113f5fb2e5d28430d744a7d3189def740e558b", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/moveable.cc", "status": "modified", "additions": 20, "deletions": 33, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,4 +1,3 @@\n-// { dg-do compile }\n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n@@ -19,37 +18,25 @@\n // <http://www.gnu.org/licenses/>.\n \n \n-#include <deque>\n-#include <iterator>\n-#include <testsuite_iterators.h>\n-#include <testsuite_rvalref.h>\n-\n-using namespace __gnu_test;\n-typedef std::deque<rvalstruct> test_type;\n-\n-// Empty constructor doesn't require a copy constructor\n-void\n-test01()\n-{ test_type d; }\n-\n-// Constructing from a range that returns rvalue references doesn't\n-// require a copy constructor.\n-void\n-test02(rvalstruct* begin, rvalstruct* end)\n-{ \n-  test_type d(std::make_move_iterator(begin), std::make_move_iterator(end));\n-}\n+// NOTE: This makes use of the fact that we know how moveable\n+// is implemented on deque (via swap). If the implementation changed\n+// this test may begin to fail.\n \n-// Constructing from a input iterator range that returns rvalue\n-// references doesn't require a copy constructor either.\n-void\n-test03(input_iterator_wrapper<rvalstruct> begin,\n-       input_iterator_wrapper<rvalstruct> end)\n-{ \n-  test_type d(std::make_move_iterator(begin), std::make_move_iterator(end));\n+#include <deque>\n+#include <utility>\n+#include <testsuite_hooks.h>\n+\n+int main()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::deque<int> a,b;\n+  a.push_back(1);\n+  b = std::move(a);\n+  VERIFY( b.size() == 1 && b[0] == 1 && a.size() == 0 );\n+\n+  std::deque<int> c(std::move(b));\n+  VERIFY( c.size() == 1 && c[0] == 1 );\n+  VERIFY( b.size() == 0 );\n+  return 0;\n }\n-\n-// Neither does destroying one.\n-void\n-test04(test_type* d)\n-{ delete d; }"}, {"sha": "2d5edb4c25b285827507ca69cbc7fabc21f9a340", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/moveable2.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable2.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,55 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+\n+#include <deque>\n+#include <iterator>\n+#include <testsuite_iterators.h>\n+#include <testsuite_rvalref.h>\n+\n+using namespace __gnu_test;\n+typedef std::deque<rvalstruct> test_type;\n+\n+// Empty constructor doesn't require a copy constructor\n+void\n+test01()\n+{ test_type d; }\n+\n+// Constructing from a range that returns rvalue references doesn't\n+// require a copy constructor.\n+void\n+test02(rvalstruct* begin, rvalstruct* end)\n+{ \n+  test_type d(std::make_move_iterator(begin), std::make_move_iterator(end));\n+}\n+\n+// Constructing from a input iterator range that returns rvalue\n+// references doesn't require a copy constructor either.\n+void\n+test03(input_iterator_wrapper<rvalstruct> begin,\n+       input_iterator_wrapper<rvalstruct> end)\n+{ \n+  test_type d(std::make_move_iterator(begin), std::make_move_iterator(end));\n+}\n+\n+// Neither does destroying one.\n+void\n+test04(test_type* d)\n+{ delete d; }"}, {"sha": "e3c5180f5dee3f2fdb9dde49280ef117695ec092", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/self_move_assign.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::deque<int> d0(10, 1);\n+  const std::deque<int> d1(d0);\n+  d0 = std::move(d0);\n+  VERIFY( d0.size() == 10 );\n+  VERIFY( d0 == d1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0a50b6d922051a90338901581f1cf1b384e56609", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1575 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1578 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "a63fcfa5ea60ce4b1efd9ca72ec9cf434563181b", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1514 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1517 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "298ec2de53297ed63f1dde5a3118e4533aba04b2", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1514 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1517 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "cb303949ac8e46dcc3e612891759496a1ee8eac1", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1659 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1662 }\n // { dg-excess-errors \"\" }\n \n #include <deque>"}, {"sha": "e680d3c8ec816db7da301581730a418bc4aef029", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/forward_list/moveable.cc"}, {"sha": "d7b7298c67fa247df4d755f09c733023d06dc88b", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/self_move_assign.cc", "status": "renamed", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,8 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -17,26 +19,22 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n-// NOTE: This makes use of the fact that we know how moveable\n-// is implemented on deque (via swap). If the implementation changed\n-// this test may begin to fail.\n-\n-#include <deque>\n-#include <utility>\n+#include <forward_list>\n #include <testsuite_hooks.h>\n \n-int main()\n+void test01()\n {\n   bool test __attribute__((unused)) = true;\n \n-  std::deque<int> a,b;\n-  a.push_back(1);\n-  b = std::move(a);\n-  VERIFY( b.size() == 1 && b[0] == 1 && a.size() == 0 );\n+  std::forward_list<int> fl0(10, 1);\n+  const std::forward_list<int> fl1(fl0);\n+  fl0 = std::move(fl0);\n+  // VERIFY( fl0.size() == 10 );\n+  VERIFY( fl0 == fl1 );\n+}\n \n-  std::deque<int> c(std::move(b));\n-  VERIFY( c.size() == 1 && c[0] == 1 );\n-  VERIFY( b.size() == 0 );\n+int main()\n+{\n+  test01();\n   return 0;\n }", "previous_filename": "libstdc++-v3/testsuite/23_containers/deque/moveable.cc"}, {"sha": "fbe06634e6ffaaf47a4de31e84f6e9c42e439720", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/list/moveable.cc"}, {"sha": "1f11d6221e79f68e02513ec5621240a164ca8f44", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/moveable.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.h?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/list/moveable.h"}, {"sha": "d406ecda4b301f47ab54825a665e71e6a0c30c04", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/self_move_assign.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <list>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::list<int> l0(10, 1);\n+  const std::list<int> l1(l0);\n+  l0 = std::move(l0);\n+  VERIFY( l0.size() == 10 );\n+  VERIFY( l0 == l1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "24ee3fac6e7eda9a0896df5a395c4a0a41363b5f", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1409 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1412 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "3e0f7d936cb4b16bbc4838c36bff587d1237c6c7", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1378 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1381 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "ec29e3b0f089fed078cac6d6583d2472b3a5c62c", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1378 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1381 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "0d4a001c117da723852dd902143d42045995a506", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,6 @@\n // 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1378 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1381 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "47dbd40a232354f4dc9ede81d10b30dedbbf64f5", "filename": "libstdc++-v3/testsuite/23_containers/map/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/map/moveable.cc"}, {"sha": "dbf153caeccbc4a08b4c323359faae947c755788", "filename": "libstdc++-v3/testsuite/23_containers/map/cons/self_move_assign.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <map>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::map<int, int>       map_type;\n+  typedef map_type::value_type   value_type;\n+\n+  map_type m0{ value_type(1, 1), value_type(2, 2), value_type(3, 3) };\n+\n+  const map_type m1(m0);\n+  m0 = std::move(m0);\n+  VERIFY( m0.size() == 3 );\n+  VERIFY( m0 == m1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2f9744c11df00e0db50895502247fa43bde8fafb", "filename": "libstdc++-v3/testsuite/23_containers/multimap/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/multimap/moveable.cc"}, {"sha": "0d2f9e7b8c886808fbc31d7dbf07652a507a9f87", "filename": "libstdc++-v3/testsuite/23_containers/multimap/cons/self_move_assign.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <map>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::multimap<int, int>    mmap_type;\n+  typedef mmap_type::value_type     value_type;\n+\n+  mmap_type mm0{ value_type(1, 1), value_type(2, 2), value_type(3, 3) };\n+\n+  const mmap_type mm1(mm0);\n+  mm0 = std::move(mm0);\n+  VERIFY( mm0.size() == 3 );\n+  VERIFY( mm0 == mm1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "527e66e9521758d4694d037e5fb82c33b36cfdfc", "filename": "libstdc++-v3/testsuite/23_containers/multiset/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/multiset/moveable.cc"}, {"sha": "f1e4e1d33abb6cda7e6108cc8de0363f6e0fb33b", "filename": "libstdc++-v3/testsuite/23_containers/multiset/cons/self_move_assign.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,43 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::multiset<int>  mset_type;\n+\n+  mset_type ms0{ 1, 2, 3 };\n+\n+  const mset_type ms1(ms0);\n+  ms0 = std::move(ms0);\n+  VERIFY( ms0.size() == 3 );\n+  VERIFY( ms0 == ms1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "9c43e383349f428ea647aaf1fcfe5191b8ac0685", "filename": "libstdc++-v3/testsuite/23_containers/set/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/set/moveable.cc"}, {"sha": "d8f676b635bbe9a12bd89f1fc8afd414966991fc", "filename": "libstdc++-v3/testsuite/23_containers/set/cons/self_move_assign.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,43 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::set<int>  set_type;\n+\n+  set_type s0{ 1, 2, 3 };\n+\n+  const set_type s1(s0);\n+  s0 = std::move(s0);\n+  VERIFY( s0.size() == 3 );\n+  VERIFY( s0 == s1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "ab73be1e7cb5038e8afa23f1c09f57ce0d866b65", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/unordered_map/moveable.cc"}, {"sha": "a31a1ee7fd8fcad5c5ec5895069413c89c005417", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/cons/self_move_assign.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_map<int, int>  umap_type;\n+  typedef umap_type::value_type        value_type;\n+\n+  umap_type um0{ value_type(1, 1), value_type(2, 2), value_type(3, 3) };\n+\n+  const umap_type um1(um0);\n+  um0 = std::move(um0);\n+  VERIFY( um0.size() == 3 );\n+  // VERIFY( um0 == um1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "145054b8fae0edd609d74454119f4e61ce363682", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/moveable.cc"}, {"sha": "c44e8d8bfb5a0c2284e3669cdd7295073f91fc0e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/cons/self_move_assign.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_multimap<int, int>  ummap_type;\n+  typedef ummap_type::value_type             value_type;\n+\n+  ummap_type umm0{ value_type(1, 1), value_type(2, 2), value_type(3, 3) };\n+\n+  const ummap_type umm1(umm0);\n+  umm0 = std::move(umm0);\n+  VERIFY( umm0.size() == 3 );\n+  // VERIFY( umm0 == umm1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "93ae4e30b5bb630a6a9ae5bbbe5c63a56527f673", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/moveable.cc"}, {"sha": "7929f6bef3b5de1e00b9fe099c411599a8790cde", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/cons/self_move_assign.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,43 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_multiset<int>  umset_type;\n+\n+  umset_type ums0{ 1, 2, 3 };\n+\n+  const umset_type ums1(ums0);\n+  ums0 = std::move(ums0);\n+  VERIFY( ums0.size() == 3 );\n+  // VERIFY( ums0 == ums1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "29277cfec97990ba56debf65ae704b5cbcc9289b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/23_containers/unordered_set/moveable.cc"}, {"sha": "7ce6db0172e5aee36015fa025839020081fc418f", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/cons/self_move_assign.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,43 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::unordered_set<int>   uset_type;\n+\n+  uset_type us0{ 1, 2, 3 };\n+\n+  const uset_type us1(us0);\n+  us0 = std::move(us0);\n+  VERIFY( us0.size() == 3 );\n+  // VERIFY( us0 == us1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "8807ad9b4a41c4d202aa61707741932ad0f001c1", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/moveable.cc", "status": "modified", "additions": 37, "deletions": 30, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,4 +1,3 @@\n-// { dg-do compile } \n // { dg-options \"-std=gnu++0x\" }\n \n // Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n@@ -19,37 +18,45 @@\n // <http://www.gnu.org/licenses/>.\n \n \n+// NOTE: This makes use of the fact that we know how moveable\n+// is implemented on vector (via swap). If the implementation changed\n+// this test may begin to fail.\n+\n #include <vector>\n-#include <iterator>\n-#include <testsuite_iterators.h>\n-#include <testsuite_rvalref.h>\n-\n-using namespace __gnu_test;\n-typedef std::vector<rvalstruct> test_type;\n-\n-// Empty constructor doesn't require a copy constructor\n-void\n-test01()\n-{ test_type d; }\n-\n-// Constructing from a range that returns rvalue references doesn't\n-// require a copy constructor.\n-void\n-test02(rvalstruct* begin, rvalstruct* end)\n-{ \n-  test_type d(std::make_move_iterator(begin), std::make_move_iterator(end));\n+#include <utility>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::vector<int> a,b;\n+  a.push_back(1);\n+  b = std::move(a);\n+  VERIFY( b.size() == 1 && b[0] == 1 && a.size() == 0 );\n+\n+  std::vector<int> c(std::move(b));\n+  VERIFY( c.size() == 1 && c[0] == 1 );\n+  VERIFY( b.size() == 0 );\n }\n \n-// Constructing from a input iterator range that returns rvalue\n-// references doesn't require a copy constructor either.\n-void\n-test03(input_iterator_wrapper<rvalstruct> begin,\n-       input_iterator_wrapper<rvalstruct> end)\n-{ \n-  test_type d(std::make_move_iterator(begin), std::make_move_iterator(end));\n+void test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+  \n+  std::vector<bool> a,b;\n+  a.push_back(1);\n+  b = std::move(a);\n+  VERIFY( b.size() == 1 && b[0] == 1 && a.size() == 0 );\n+\n+  std::vector<bool> c(std::move(b));\n+  VERIFY( c.size() == 1 && c[0] == 1 );\n+  VERIFY( b.size() == 0 );\n }\n \n-// Neither does destroying one.\n-void\n-test04(test_type* d)\n-{ delete d; }\n+int main(void)\n+{\n+  test01();\n+  test02();\n+  return 0;\n+}"}, {"sha": "ab04ccf0c152f852ab76f68f98dade2c39d2c245", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/moveable2.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fmoveable2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fmoveable2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fmoveable2.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,55 @@\n+// { dg-do compile } \n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+\n+#include <vector>\n+#include <iterator>\n+#include <testsuite_iterators.h>\n+#include <testsuite_rvalref.h>\n+\n+using namespace __gnu_test;\n+typedef std::vector<rvalstruct> test_type;\n+\n+// Empty constructor doesn't require a copy constructor\n+void\n+test01()\n+{ test_type d; }\n+\n+// Constructing from a range that returns rvalue references doesn't\n+// require a copy constructor.\n+void\n+test02(rvalstruct* begin, rvalstruct* end)\n+{ \n+  test_type d(std::make_move_iterator(begin), std::make_move_iterator(end));\n+}\n+\n+// Constructing from a input iterator range that returns rvalue\n+// references doesn't require a copy constructor either.\n+void\n+test03(input_iterator_wrapper<rvalstruct> begin,\n+       input_iterator_wrapper<rvalstruct> end)\n+{ \n+  test_type d(std::make_move_iterator(begin), std::make_move_iterator(end));\n+}\n+\n+// Neither does destroying one.\n+void\n+test04(test_type* d)\n+{ delete d; }"}, {"sha": "d7c5d285465e160f2eb2d0b2079927a9230e17a8", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/self_move_assign.cc", "status": "renamed", "additions": 9, "deletions": 31, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -1,6 +1,8 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -17,46 +19,22 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-\n-// NOTE: This makes use of the fact that we know how moveable\n-// is implemented on vector (via swap). If the implementation changed\n-// this test may begin to fail.\n-\n #include <vector>\n-#include <utility>\n #include <testsuite_hooks.h>\n \n void test01()\n {\n   bool test __attribute__((unused)) = true;\n \n-  std::vector<int> a,b;\n-  a.push_back(1);\n-  b = std::move(a);\n-  VERIFY( b.size() == 1 && b[0] == 1 && a.size() == 0 );\n-\n-  std::vector<int> c(std::move(b));\n-  VERIFY( c.size() == 1 && c[0] == 1 );\n-  VERIFY( b.size() == 0 );\n-}\n-\n-void test02()\n-{\n-  bool test __attribute__((unused)) = true;\n-  \n-  std::vector<bool> a,b;\n-  a.push_back(1);\n-  b = std::move(a);\n-  VERIFY( b.size() == 1 && b[0] == 1 && a.size() == 0 );\n-\n-  std::vector<bool> c(std::move(b));\n-  VERIFY( c.size() == 1 && c[0] == 1 );\n-  VERIFY( b.size() == 0 );\n+  std::vector<int> v0(10, 1);\n+  const std::vector<int> v1(v0);\n+  v0 = std::move(v0);\n+  VERIFY( v0.size() == 10 );\n+  VERIFY( v0 == v1 );\n }\n \n-int main(void)\n+int main()\n {\n   test01();\n-  test02();\n   return 0;\n }", "previous_filename": "libstdc++-v3/testsuite/23_containers/vector/moveable.cc"}, {"sha": "bb9a56e924f342c105e0ca8dbfec5354999fc82b", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1054 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1057 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "02ae1c4c7279ec5cd3ae7a566fd57fb04d60e78f", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 994 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 997 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "f9c3f4a2205a5806838688ff87bbda2b91ab931a", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 994 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 997 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "82acbbc97b97080df402caab713896504f48f19b", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1095 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1098 }\n // { dg-excess-errors \"\" }\n \n #include <vector>"}, {"sha": "8248636854398328510ab9649107a7ccc51f586b", "filename": "libstdc++-v3/testsuite/ext/vstring/cons/moveable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcons%2Fmoveable.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "previous_filename": "libstdc++-v3/testsuite/ext/vstring/moveable.cc"}, {"sha": "caa8e4ff9aba1578d918f58ad98a22c2d65ae039", "filename": "libstdc++-v3/testsuite/ext/vstring/cons/self_move_assign.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcons%2Fself_move_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b592ab357dd794ea04f33e9431ad7d7e69c1d11/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcons%2Fself_move_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Fcons%2Fself_move_assign.cc?ref=6b592ab357dd794ea04f33e9431ad7d7e69c1d11", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-string-conversions \"\" }\n+\n+// 2010-01-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ext/vstring.h>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  __gnu_cxx::__vstring vs0(10, 'a');\n+  const __gnu_cxx::__vstring vs1(vs0);\n+  vs0 = std::move(vs0);\n+  VERIFY( vs0.size() == 10 );\n+  VERIFY( vs0 == vs1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}