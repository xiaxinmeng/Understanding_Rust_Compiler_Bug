{"sha": "b894530e6d9633fc6497b3c404a3ec1bd1a341df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5NDUzMGU2ZDk2MzNmYzY0OTdiM2M0MDRhM2VjMWJkMWEzNDFkZg==", "commit": {"author": {"name": "Nicola Pero", "email": "n.pero@mi.flashnet.it", "date": "2001-03-15T02:18:09Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2001-03-15T02:18:09Z"}, "message": "thr.c (objc_thread_add): New function.\n\n2001-03-14  Nicola Pero  <n.pero@mi.flashnet.it>\n\n        * thr.c (objc_thread_add): New function.\n        (objc_thread_remove): Ditto.\n        * objc/thr.h: Declare them.\n        * libobjc.def: Mention them.\n\nFrom-SVN: r40479", "tree": {"sha": "6f6458a683b563d93474ff1881bc95959806736a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f6458a683b563d93474ff1881bc95959806736a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b894530e6d9633fc6497b3c404a3ec1bd1a341df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b894530e6d9633fc6497b3c404a3ec1bd1a341df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b894530e6d9633fc6497b3c404a3ec1bd1a341df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b894530e6d9633fc6497b3c404a3ec1bd1a341df/comments", "author": null, "committer": null, "parents": [{"sha": "84c041a1ffd28bd3e380d49f8ece24ade3c8baf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c041a1ffd28bd3e380d49f8ece24ade3c8baf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c041a1ffd28bd3e380d49f8ece24ade3c8baf2"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "c53b3a5b9132d0af557b7cc58e0f4b08dd0be057", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894530e6d9633fc6497b3c404a3ec1bd1a341df/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894530e6d9633fc6497b3c404a3ec1bd1a341df/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=b894530e6d9633fc6497b3c404a3ec1bd1a341df", "patch": "@@ -1,3 +1,10 @@\n+2001-03-14  Nicola Pero  <n.pero@mi.flashnet.it>\n+\n+\t* thr.c (objc_thread_add): New function.\n+\t(objc_thread_remove): Ditto.\n+\t* objc/thr.h: Declare them.\n+\t* libobjc.def: Mention them.\n+\n 2001-02-28  Ovidiu Predescu  <ovidiu@cup.hp.com>\n \n \t* objc-features.texi: Document the @compatibility_alias compiler"}, {"sha": "7e0a857ecf770345209540d2a2c6b649664fa5c6", "filename": "libobjc/libobjc.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894530e6d9633fc6497b3c404a3ec1bd1a341df/libobjc%2Flibobjc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894530e6d9633fc6497b3c404a3ec1bd1a341df/libobjc%2Flibobjc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Flibobjc.def?ref=b894530e6d9633fc6497b3c404a3ec1bd1a341df", "patch": "@@ -45,6 +45,8 @@ objc_thread_id\n objc_thread_set_data\n objc_thread_set_priority\n objc_thread_yield\n+objc_thread_add\n+objc_thread_remove\n __objc_class_name_Object\n __objc_class_name_Protocol\n __objc_class_name_NXConstantString"}, {"sha": "59766f6ed7db36a84baae01ad0c86d7225269035", "filename": "libobjc/objc/thr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894530e6d9633fc6497b3c404a3ec1bd1a341df/libobjc%2Fobjc%2Fthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894530e6d9633fc6497b3c404a3ec1bd1a341df/libobjc%2Fobjc%2Fthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fthr.h?ref=b894530e6d9633fc6497b3c404a3ec1bd1a341df", "patch": "@@ -96,6 +96,8 @@ int objc_thread_get_priority(void);\n void * objc_thread_get_data(void);\n int objc_thread_set_data(void *value);\n objc_thread_t objc_thread_id(void);\n+void objc_thread_add(void);\n+void objc_thread_remove(void);\n \n /*\n   Use this to set the hook function that will be called when the "}, {"sha": "437ee5778109aac1cbb384448be6ff0585d86d85", "filename": "libobjc/thr.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894530e6d9633fc6497b3c404a3ec1bd1a341df/libobjc%2Fthr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894530e6d9633fc6497b3c404a3ec1bd1a341df/libobjc%2Fthr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fthr.c?ref=b894530e6d9633fc6497b3c404a3ec1bd1a341df", "patch": "@@ -531,4 +531,33 @@ objc_condition_signal(objc_condition_t condition)\n   return __objc_condition_signal(condition);\n }\n \n+/* Make the objc thread system aware that a thread which is managed\n+   (started, stopped) by external code could access objc facilities\n+   from now on.  This is used when you are interfacing with some\n+   external non-objc-based environment/system - you must call\n+   objc_thread_add() before an alien thread makes any calls to\n+   Objective-C.  Do not cause the _objc_became_multi_threaded hook to\n+   be executed. */\n+void \n+objc_thread_add(void)\n+{\n+  objc_mutex_lock(__objc_runtime_mutex);\n+  __objc_is_multi_threaded = 1;\n+  __objc_runtime_threads_alive++;\n+  objc_mutex_unlock(__objc_runtime_mutex);  \n+}\n+\n+/* Make the objc thread system aware that a thread managed (started,\n+   stopped) by some external code will no longer access objc and thus\n+   can be forgotten by the objc thread system.  Call\n+   objc_thread_remove() when your alien thread is done with making\n+   calls to Objective-C. */\n+void\n+objc_thread_remove(void)\n+{\n+  objc_mutex_lock(__objc_runtime_mutex);\n+  __objc_runtime_threads_alive--;\n+  objc_mutex_unlock(__objc_runtime_mutex);  \n+}\n+\n /* End of File */"}]}