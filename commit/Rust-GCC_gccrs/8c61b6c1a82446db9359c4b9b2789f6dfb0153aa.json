{"sha": "8c61b6c1a82446db9359c4b9b2789f6dfb0153aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM2MWI2YzFhODI0NDZkYjkzNTljNGI5YjI3ODlmNmRmYjAxNTNhYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-01T13:08:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-01T13:08:38Z"}, "message": "(output_addsi3): Replace \"\\\\;\" by \"\\n\\t\" in assembler templates.\n\nFrom-SVN: r14003", "tree": {"sha": "d75b95fd3c042521f07a9b68689844cd55c27e4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d75b95fd3c042521f07a9b68689844cd55c27e4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c61b6c1a82446db9359c4b9b2789f6dfb0153aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c61b6c1a82446db9359c4b9b2789f6dfb0153aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c61b6c1a82446db9359c4b9b2789f6dfb0153aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c61b6c1a82446db9359c4b9b2789f6dfb0153aa/comments", "author": null, "committer": null, "parents": [{"sha": "26986265837cdfa970dc724f6aa9ea98532e483a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26986265837cdfa970dc724f6aa9ea98532e483a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26986265837cdfa970dc724f6aa9ea98532e483a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2f4ba22f0b0f17e10d2aa8cd57892d941cfcac71", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61b6c1a82446db9359c4b9b2789f6dfb0153aa/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61b6c1a82446db9359c4b9b2789f6dfb0153aa/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=8c61b6c1a82446db9359c4b9b2789f6dfb0153aa", "patch": "@@ -1972,7 +1972,7 @@ output_addsi3 (operands)\n \t stack slots over 64k from the frame pointer.  */\n       if (GET_CODE (operands[2]) == CONST_INT\n \t  && INTVAL (operands[2]) + 0x8000 >= (unsigned) 0x10000)\n-        return \"move%.l %2,%0\\\\;add%.l %1,%0\";\n+        return \"move%.l %2,%0\\n\\tadd%.l %1,%0\";\n #ifdef SGS\n       if (GET_CODE (operands[2]) == REG)\n \treturn \"lea 0(%1,%2.l),%0\";\n@@ -2015,14 +2015,14 @@ output_addsi3 (operands)\n \t    {\n \t      operands[2] = gen_rtx (CONST_INT, VOIDmode, \n \t\t\t\t      INTVAL (operands[2]) - 8);\n-\t      return \"addq%.l %#8,%0\\\\;addq%.l %2,%0\";\n+\t      return \"addq%.l %#8,%0\\n\\taddq%.l %2,%0\";\n \t    }\n \t  if (INTVAL (operands[2]) < -8\n \t      && INTVAL (operands[2]) >= -16)\n \t    {\n \t      operands[2] = gen_rtx (CONST_INT, VOIDmode,\n \t\t\t\t      - INTVAL (operands[2]) - 8);\n-\t      return \"subq%.l %#8,%0\\\\;subq%.l %2,%0\";\n+\t      return \"subq%.l %#8,%0\\n\\tsubq%.l %2,%0\";\n \t    }\n \t}\n #endif"}]}