{"sha": "d9c425fb659c7df40eddf66349d846ed0cf63fda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDljNDI1ZmI2NTljN2RmNDBlZGRmNjYzNDlkODQ2ZWQwY2Y2M2ZkYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-07-30T14:52:29Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-07-30T14:52:29Z"}, "message": "Use edge->indirect_unknown_callee in cgraph_edge::make_direct (PR ipa/89330).\n\n2019-07-30  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/89330\n\t* cgraph.c (cgraph_edge::make_direct): Use\n\tedge->indirect_unknown_callee as edge->resolve_speculation can\n\tdeallocate edge which is this pointer.\n\nFrom-SVN: r273910", "tree": {"sha": "6e73746cebe43a2a5bc692e8e69a6dad7c452f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e73746cebe43a2a5bc692e8e69a6dad7c452f8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9c425fb659c7df40eddf66349d846ed0cf63fda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c425fb659c7df40eddf66349d846ed0cf63fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9c425fb659c7df40eddf66349d846ed0cf63fda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c425fb659c7df40eddf66349d846ed0cf63fda/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e5b369ef15294d10ee8efa432bbb3d6822d065b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e5b369ef15294d10ee8efa432bbb3d6822d065b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e5b369ef15294d10ee8efa432bbb3d6822d065b"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "41cfa85f13c07ef2b1c13b70cee66d2a9a69969f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9c425fb659c7df40eddf66349d846ed0cf63fda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9c425fb659c7df40eddf66349d846ed0cf63fda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9c425fb659c7df40eddf66349d846ed0cf63fda", "patch": "@@ -1,3 +1,10 @@\n+2019-07-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/89330\n+\t* cgraph.c (cgraph_edge::make_direct): Use\n+\tedge->indirect_unknown_callee as edge->resolve_speculation can\n+\tdeallocate edge which is this pointer.\n+\n 2019-07-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91257"}, {"sha": "8dbe705af688ba6e11f64635f6cf5e01631fadf6", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9c425fb659c7df40eddf66349d846ed0cf63fda/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9c425fb659c7df40eddf66349d846ed0cf63fda/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=d9c425fb659c7df40eddf66349d846ed0cf63fda", "patch": "@@ -1215,7 +1215,7 @@ cgraph_edge::make_direct (cgraph_node *callee)\n       edge = edge->resolve_speculation (callee->decl);\n \n       /* On successful speculation just return the pre existing direct edge.  */\n-      if (!indirect_unknown_callee)\n+      if (!edge->indirect_unknown_callee)\n         return edge;\n     }\n "}]}