{"sha": "5c0466b537af28f3cf7aff8d29c884a3c5725459", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMwNDY2YjUzN2FmMjhmM2NmN2FmZjhkMjljODg0YTNjNTcyNTQ1OQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2008-09-23T13:08:15Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2008-09-23T13:08:15Z"}, "message": "cgraph.c (cgraph_free_edge): Use sizeof(*e).\n\n2008-09-23  Martin Jambor  <mjambor@suse.cz>\n\n\t* cgraph.c (cgraph_free_edge): Use sizeof(*e).\n\t(cgraph_node_remove_callees): New temporary f.  Hold the next item\n\tin f when looping.\n\t(cgraph_node_remove_callers): Likewise.\n\n\t* ipa-prop.c (ipa_edge_removal_hook): Use ATTRIBUTE_UNUSED.\n\t(ipa_node_removal_hook): Likewise.\n\n\t* doc/gimple.texi (gimple_copy_call_skip_args): Changed to\n\tgimple_call_copy_skip_args and moved to the gimple_call section.\n\t* gimple.c (gimple_copy_call_skip_args): Renamed to\n\tgimple_call_copy_skip_args.  Changed al users.\n\nFrom-SVN: r140590", "tree": {"sha": "713f8a64e6ccf7e7bfd5473edd43495fd7cb70d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/713f8a64e6ccf7e7bfd5473edd43495fd7cb70d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c0466b537af28f3cf7aff8d29c884a3c5725459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0466b537af28f3cf7aff8d29c884a3c5725459", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c0466b537af28f3cf7aff8d29c884a3c5725459", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0466b537af28f3cf7aff8d29c884a3c5725459/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a2095e27167b9b55ff84ad4121dfbc4f7342c9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a2095e27167b9b55ff84ad4121dfbc4f7342c9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a2095e27167b9b55ff84ad4121dfbc4f7342c9f"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "0f04eb4022a84f4f35371aaedb953335c2638175", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c0466b537af28f3cf7aff8d29c884a3c5725459", "patch": "@@ -1,3 +1,18 @@\n+2008-09-23  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* cgraph.c (cgraph_free_edge): Use sizeof(*e).\n+\t(cgraph_node_remove_callees): New temporary f.  Hold the next item\n+\tin f when looping.\n+\t(cgraph_node_remove_callers): Likewise.\n+\n+\t* ipa-prop.c (ipa_edge_removal_hook): Use ATTRIBUTE_UNUSED.\n+\t(ipa_node_removal_hook): Likewise.\n+\n+\t* doc/gimple.texi (gimple_copy_call_skip_args): Changed to\n+\tgimple_call_copy_skip_args and moved to the gimple_call section.\n+\t* gimple.c (gimple_copy_call_skip_args): Renamed to\n+\tgimple_call_copy_skip_args.  Changed al users.\n+\n 2008-09-22  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* ira-color.c (start_allocno_priorities): Rename to"}, {"sha": "163ab9dd39f931f4ee9f231c3ee0627b39f5373e", "filename": "gcc/cgraph.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=5c0466b537af28f3cf7aff8d29c884a3c5725459", "patch": "@@ -752,7 +752,7 @@ cgraph_free_edge (struct cgraph_edge *e)\n   int uid = e->uid;\n \n   /* Clear out the edge so we do not dangle pointers.  */\n-  memset (e, 0, sizeof (e));\n+  memset (e, 0, sizeof (*e));\n   e->uid = uid;\n   NEXT_FREE_EDGE (e) = free_edges;\n   free_edges = e;\n@@ -846,13 +846,14 @@ cgraph_update_edges_for_call_stmt (gimple old_stmt, gimple new_stmt)\n void\n cgraph_node_remove_callees (struct cgraph_node *node)\n {\n-  struct cgraph_edge *e;\n+  struct cgraph_edge *e, *f;\n \n   /* It is sufficient to remove the edges from the lists of callers of\n      the callees.  The callee list of the node can be zapped with one\n      assignment.  */\n-  for (e = node->callees; e; e = e->next_callee)\n+  for (e = node->callees; e; e = f)\n     {\n+      f = e->next_callee;\n       cgraph_call_edge_removal_hooks (e);\n       cgraph_edge_remove_callee (e);\n       cgraph_free_edge (e);\n@@ -870,13 +871,14 @@ cgraph_node_remove_callees (struct cgraph_node *node)\n static void\n cgraph_node_remove_callers (struct cgraph_node *node)\n {\n-  struct cgraph_edge *e;\n+  struct cgraph_edge *e, *f;\n \n   /* It is sufficient to remove the edges from the lists of callees of\n      the callers.  The caller list of the node can be zapped with one\n      assignment.  */\n-  for (e = node->callers; e; e = e->next_caller)\n+  for (e = node->callers; e; e = f)\n     {\n+      f = e->next_caller;\n       cgraph_call_edge_removal_hooks (e);\n       cgraph_edge_remove_caller (e);\n       cgraph_free_edge (e);"}, {"sha": "06d2186d18243f0fa5d2b4a4e8db3471259e65a8", "filename": "gcc/doc/gimple.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fdoc%2Fgimple.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fdoc%2Fgimple.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgimple.texi?ref=5c0466b537af28f3cf7aff8d29c884a3c5725459", "patch": "@@ -875,11 +875,6 @@ Update statement @code{S} if it has been marked modified.\n Return a deep copy of statement @code{STMT}.\n @end deftypefn\n \n-@deftypefn {GIMPLE function} gimple gimple_copy_call_skip_args (gimple stmt, bitmap args_to_skip)\n-Build a @code{GIMPLE_CALL} identical to @code{STMT} but skipping the arguments\n-in the positions marked by the set @code{ARGS_TO_SKIP}.\n-@end deftypefn\n-\n @node Tuple specific accessors\n @section Tuple specific accessors\n @cindex Tuple specific accessors\n@@ -1261,6 +1256,11 @@ Return true if @code{GIMPLE_CALL} @code{S} cannot be inlined.\n Return true if @code{S} is a noreturn call. \n @end deftypefn\n \n+@deftypefn {GIMPLE function} gimple gimple_call_copy_skip_args (gimple stmt, bitmap args_to_skip)\n+Build a @code{GIMPLE_CALL} identical to @code{STMT} but skipping the arguments\n+in the positions marked by the set @code{ARGS_TO_SKIP}.\n+@end deftypefn\n+\n \n @node @code{GIMPLE_CATCH}\n @subsection @code{GIMPLE_CATCH}"}, {"sha": "47b9c9aff04cb58b2c1155323e7a57902a48fa16", "filename": "gcc/gimple.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=5c0466b537af28f3cf7aff8d29c884a3c5725459", "patch": "@@ -3192,7 +3192,7 @@ canonicalize_cond_expr_cond (tree t)\n    the positions marked by the set ARGS_TO_SKIP.  */\n \n gimple\n-gimple_copy_call_skip_args (gimple stmt, bitmap args_to_skip)\n+gimple_call_copy_skip_args (gimple stmt, bitmap args_to_skip)\n {\n   int i;\n   tree fn = gimple_call_fn (stmt);"}, {"sha": "a390590d7054fe76a7aedeeb540824e3a9f7690d", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=5c0466b537af28f3cf7aff8d29c884a3c5725459", "patch": "@@ -4479,7 +4479,7 @@ basic_block gsi_insert_on_edge_immediate (edge, gimple);\n basic_block gsi_insert_seq_on_edge_immediate (edge, gimple_seq);\n void gsi_commit_one_edge_insert (edge, basic_block *);\n void gsi_commit_edge_inserts (void);\n-gimple gimple_copy_call_skip_args (gimple, bitmap);\n+gimple gimple_call_copy_skip_args (gimple, bitmap);\n \n \n /* Convenience routines to walk all statements of a gimple function."}, {"sha": "f6864bb43fa89a5085f19901a3ab4661efda15e4", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=5c0466b537af28f3cf7aff8d29c884a3c5725459", "patch": "@@ -967,7 +967,7 @@ ipcp_update_callgraph (void)\n \t\tcurrent_function_decl = cs->caller->decl;\n \t        push_cfun (DECL_STRUCT_FUNCTION (cs->caller->decl));\n \t\t\n-\t\tnew_stmt = gimple_copy_call_skip_args (cs->call_stmt,\n+\t\tnew_stmt = gimple_call_copy_skip_args (cs->call_stmt,\n \t\t\t\t\t\t       args_to_skip);\n \t\tgsi = gsi_for_stmt (cs->call_stmt);\n \t\tgsi_replace (&gsi, new_stmt, true);"}, {"sha": "16d9bede1cab5ebaa86d52c50097ec0c65eac25d", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0466b537af28f3cf7aff8d29c884a3c5725459/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=5c0466b537af28f3cf7aff8d29c884a3c5725459", "patch": "@@ -1108,8 +1108,7 @@ ipa_free_all_node_params (void)\n /* Hook that is called by cgraph.c when an edge is removed.  */\n \n static void\n-ipa_edge_removal_hook (struct cgraph_edge *cs,\n-\t\t       void *data __attribute__ ((unused)))\n+ipa_edge_removal_hook (struct cgraph_edge *cs, void *data ATTRIBUTE_UNUSED)\n {\n   /* During IPA-CP updating we can be called on not-yet analyze clones.  */\n   if (VEC_length (ipa_edge_args_t, ipa_edge_args_vector)\n@@ -1121,8 +1120,7 @@ ipa_edge_removal_hook (struct cgraph_edge *cs,\n /* Hook that is called by cgraph.c when a node is removed.  */\n \n static void\n-ipa_node_removal_hook (struct cgraph_node *node,\n-\t\t       void *data __attribute__ ((unused)))\n+ipa_node_removal_hook (struct cgraph_node *node, void *data ATTRIBUTE_UNUSED)\n {\n   ipa_free_node_params_substructures (IPA_NODE_REF (node));\n }"}]}