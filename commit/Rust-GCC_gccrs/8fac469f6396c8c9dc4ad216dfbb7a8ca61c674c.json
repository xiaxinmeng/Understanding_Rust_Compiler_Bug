{"sha": "8fac469f6396c8c9dc4ad216dfbb7a8ca61c674c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZhYzQ2OWY2Mzk2YzhjOWRjNGFkMjE2ZGZiYjdhOGNhNjFjNjc0Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-24T22:29:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-24T22:29:54Z"}, "message": "(zero_extract patterns): Don't allow constants in the first operand of...\n\n(zero_extract patterns): Don't allow constants in the first operand of\nZERO_EXTRACT since the recognizer function forces them to match the\nmode of the match_operand.\n\nFrom-SVN: r7566", "tree": {"sha": "672ceebab2cb659d1ab8d01b88abe80eca23e5d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/672ceebab2cb659d1ab8d01b88abe80eca23e5d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fac469f6396c8c9dc4ad216dfbb7a8ca61c674c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fac469f6396c8c9dc4ad216dfbb7a8ca61c674c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fac469f6396c8c9dc4ad216dfbb7a8ca61c674c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fac469f6396c8c9dc4ad216dfbb7a8ca61c674c/comments", "author": null, "committer": null, "parents": [{"sha": "8c3a64777060b6617168ef32c0b05c2ca8aafe16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3a64777060b6617168ef32c0b05c2ca8aafe16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c3a64777060b6617168ef32c0b05c2ca8aafe16"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "96d7f91e74ba5a834e47d715bd63045c8a23b9b9", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fac469f6396c8c9dc4ad216dfbb7a8ca61c674c/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fac469f6396c8c9dc4ad216dfbb7a8ca61c674c/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=8fac469f6396c8c9dc4ad216dfbb7a8ca61c674c", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for GNU compiler, Vax Version\n-;;   Copyright (C) 1987, 1988, 1991 Free Software Foundation, Inc.\n+;;   Copyright (C) 1987, 1988, 1991, 1994 Free Software Foundation, Inc.\n \n ;; This file is part of GNU CC.\n \n@@ -1263,7 +1263,7 @@\n \t(minus:QI (const_int 32)\n \t\t  (match_dup 4)))\n    (set (match_operand:SI 0 \"general_operand\" \"=g\")\n-\t(zero_extract:SI (match_operand:SI 1 \"nonmemory_operand\" \"r\")\n+\t(zero_extract:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t (match_dup 3)\n \t\t\t (match_operand:SI 2 \"register_operand\" \"g\")))]\n   \"\"\n@@ -1321,7 +1321,7 @@\n ;; which can usually be done with move instructions.\n \n (define_insn \"\"\n-  [(set (zero_extract:SI (match_operand:SI 0 \"general_operand\" \"+ro\")\n+  [(set (zero_extract:SI (match_operand:SI 0 \"nonimmediate_operand\" \"+ro\")\n \t\t\t (match_operand:QI 1 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\"))\n \t(match_operand:SI 3 \"general_operand\" \"g\"))]\n@@ -1347,7 +1347,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=&g\")\n-\t(zero_extract:SI (match_operand:SI 1 \"general_operand\" \"ro\")\n+\t(zero_extract:SI (match_operand:SI 1 \"nonimmediate_operand\" \"ro\")\n \t\t\t (match_operand:QI 2 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n   \"(INTVAL (operands[2]) == 8 || INTVAL (operands[2]) == 16)\n@@ -1372,7 +1372,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=g\")\n-\t(sign_extract:SI (match_operand:SI 1 \"general_operand\" \"ro\")\n+\t(sign_extract:SI (match_operand:SI 1 \"nonimmediate_operand\" \"ro\")\n \t\t\t (match_operand:QI 2 \"const_int_operand\" \"n\")\n \t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n   \"(INTVAL (operands[2]) == 8 || INTVAL (operands[2]) == 16)\n@@ -1410,7 +1410,7 @@\n (define_insn \"\"\n   [(set (cc0)\n \t(compare\n-\t (zero_extract:SI (match_operand:SI 0 \"nonmemory_operand\" \"r\")\n+\t (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t  (match_operand:QI 1 \"general_operand\" \"g\")\n \t\t\t  (match_operand:SI 2 \"general_operand\" \"g\"))\n \t (match_operand:SI 3 \"general_operand\" \"g\")))]\n@@ -1440,7 +1440,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=g\")\n-\t(zero_extract:SI (match_operand:SI 1 \"nonmemory_operand\" \"r\")\n+\t(zero_extract:SI (match_operand:SI 1 \"register_operand\" \"ri\")\n \t\t\t (match_operand:QI 2 \"general_operand\" \"g\")\n \t\t\t (match_operand:SI 3 \"general_operand\" \"g\")))]\n   \"\"\n@@ -1526,15 +1526,15 @@\n }\")\n \n (define_insn \"insv\"\n-  [(set (zero_extract:SI (match_operand:QI 0 \"general_operand\" \"+g\")\n+  [(set (zero_extract:SI (match_operand:QI 0 \"nonimmediate_operand\" \"+g\")\n \t\t\t (match_operand:QI 1 \"general_operand\" \"g\")\n \t\t\t (match_operand:SI 2 \"general_operand\" \"g\"))\n \t(match_operand:SI 3 \"general_operand\" \"g\"))]\n   \"\"\n   \"insv %3,%2,%1,%0\")\n \n (define_insn \"\"\n-  [(set (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"+r\")\n+  [(set (zero_extract:SI (match_operand:SI 0 \"nonimmediate_operand\" \"+r\")\n \t\t\t (match_operand:QI 1 \"general_operand\" \"g\")\n \t\t\t (match_operand:SI 2 \"general_operand\" \"g\"))\n \t(match_operand:SI 3 \"general_operand\" \"g\"))]"}]}