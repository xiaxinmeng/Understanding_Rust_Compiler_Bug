{"sha": "90cb252f5f7f3312c6d86ba274a11fbb885cb4f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBjYjI1MmY1ZjdmMzMxMmM2ZDg2YmEyNzRhMTFmYmI4ODVjYjRmNA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-10-09T11:59:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:22Z"}, "message": "[Ada] Fix style and typos in code for expanding attribute references\n\ngcc/ada/\n\n\t* exp_attr.adb, exp_util.adb: Fix style and typos in comments.", "tree": {"sha": "b6571d2dd267b638195865221f91cf20384f61f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6571d2dd267b638195865221f91cf20384f61f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90cb252f5f7f3312c6d86ba274a11fbb885cb4f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90cb252f5f7f3312c6d86ba274a11fbb885cb4f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90cb252f5f7f3312c6d86ba274a11fbb885cb4f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90cb252f5f7f3312c6d86ba274a11fbb885cb4f4/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97a26d19d23e6379d50e4d76bc72c429d78cb17f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a26d19d23e6379d50e4d76bc72c429d78cb17f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97a26d19d23e6379d50e4d76bc72c429d78cb17f"}], "stats": {"total": 67, "additions": 33, "deletions": 34}, "files": [{"sha": "6598b706ccc83441635c5cf5f22d282d9a6ae5d3", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 32, "deletions": 33, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90cb252f5f7f3312c6d86ba274a11fbb885cb4f4/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90cb252f5f7f3312c6d86ba274a11fbb885cb4f4/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=90cb252f5f7f3312c6d86ba274a11fbb885cb4f4", "patch": "@@ -1209,7 +1209,7 @@ package body Exp_Attr is\n    --  by Expand_Fpt_Attribute\n \n    procedure Expand_Fpt_Attribute_R (N : Node_Id) is\n-      E1  : constant Node_Id    := First (Expressions (N));\n+      E1  : constant Node_Id := First (Expressions (N));\n       Ftp : Entity_Id;\n       Pkg : RE_Id;\n    begin\n@@ -1229,10 +1229,10 @@ package body Exp_Attr is\n    --  by Expand_Fpt_Attribute\n \n    procedure Expand_Fpt_Attribute_RI (N : Node_Id) is\n-      E1  : constant Node_Id   := First (Expressions (N));\n+      E1  : constant Node_Id := First (Expressions (N));\n+      E2  : constant Node_Id := Next (E1);\n       Ftp : Entity_Id;\n       Pkg : RE_Id;\n-      E2  : constant Node_Id   := Next (E1);\n    begin\n       Find_Fat_Info (Etype (E1), Ftp, Pkg);\n       Expand_Fpt_Attribute\n@@ -2985,7 +2985,7 @@ package body Exp_Attr is\n       ---------------\n \n       --  Transforms 'Copy_Sign into a call to the floating-point attribute\n-      --  function Copy_Sign in Fat_xxx (where xxx is the root type)\n+      --  function Copy_Sign in Fat_xxx (where xxx is the root type).\n \n       when Attribute_Copy_Sign =>\n          Expand_Fpt_Attribute_RR (N);\n@@ -3384,7 +3384,7 @@ package body Exp_Attr is\n \n          Size : Entity_Id;\n \n-      --  Start of Finalization_Size\n+      --  Start of processing for Finalization_Size\n \n       begin\n          --  An object of a class-wide type first requires a runtime check to\n@@ -5712,14 +5712,14 @@ package body Exp_Attr is\n \n       when Attribute_Reduce =>\n          declare\n-            Loc     : constant Source_Ptr := Sloc (N);\n-            E1      : constant Node_Id := First (Expressions (N));\n-            E2      : constant Node_Id := Next (E1);\n-            Bnn     : constant Entity_Id := Make_Temporary (Loc, 'B', N);\n-            Typ     : constant Entity_Id := Etype (N);\n+            Loc : constant Source_Ptr := Sloc (N);\n+            E1  : constant Node_Id := First (Expressions (N));\n+            E2  : constant Node_Id := Next (E1);\n+            Bnn : constant Entity_Id := Make_Temporary (Loc, 'B', N);\n+            Typ : constant Entity_Id := Etype (N);\n \n             New_Loop : Node_Id;\n-            Stat    : Node_Id;\n+            Stat     : Node_Id;\n \n             function Build_Stat (Comp : Node_Id) return Node_Id;\n             --  The reducer can be a function, a procedure whose first\n@@ -5734,14 +5734,14 @@ package body Exp_Attr is\n             function Build_Stat (Comp : Node_Id) return Node_Id is\n             begin\n                if Nkind (E1) = N_Attribute_Reference then\n-                  Stat :=  Make_Assignment_Statement (Loc,\n-                             Name => New_Occurrence_Of (Bnn, Loc),\n-                             Expression => Make_Attribute_Reference (Loc,\n-                               Attribute_Name => Attribute_Name (E1),\n-                               Prefix => New_Copy (Prefix (E1)),\n-                               Expressions => New_List (\n-                                 New_Occurrence_Of (Bnn, Loc),\n-                                 Comp)));\n+                  Stat := Make_Assignment_Statement (Loc,\n+                            Name => New_Occurrence_Of (Bnn, Loc),\n+                            Expression => Make_Attribute_Reference (Loc,\n+                              Attribute_Name => Attribute_Name (E1),\n+                              Prefix => New_Copy (Prefix (E1)),\n+                              Expressions => New_List (\n+                                New_Occurrence_Of (Bnn, Loc),\n+                                Comp)));\n \n                elsif Ekind (Entity (E1)) = E_Procedure then\n                   Stat := Make_Procedure_Call_Statement (Loc,\n@@ -5750,23 +5750,22 @@ package body Exp_Attr is\n                                  New_Occurrence_Of (Bnn, Loc),\n                                  Comp));\n                else\n-                  Stat :=  Make_Assignment_Statement (Loc,\n-                             Name => New_Occurrence_Of (Bnn, Loc),\n-                             Expression => Make_Function_Call (Loc,\n-                               Name => New_Occurrence_Of (Entity (E1), Loc),\n-                               Parameter_Associations => New_List (\n-                                 New_Occurrence_Of (Bnn, Loc),\n-                                 Comp)));\n+                  Stat := Make_Assignment_Statement (Loc,\n+                            Name => New_Occurrence_Of (Bnn, Loc),\n+                            Expression => Make_Function_Call (Loc,\n+                              Name => New_Occurrence_Of (Entity (E1), Loc),\n+                              Parameter_Associations => New_List (\n+                                New_Occurrence_Of (Bnn, Loc),\n+                                Comp)));\n                end if;\n \n                return Stat;\n             end Build_Stat;\n \n          --  If the prefix is an aggregate, its unique component is an\n          --  Iterated_Element, and we create a loop out of its iterator.\n-         --  The iterated_component_Association is parsed as a loop\n-         --  parameter specification with \"in\" or as a container\n-         --  iterator with \"of\".\n+         --  The iterated_component_association is parsed as a loop parameter\n+         --  specification with \"in\" or as a container iterator with \"of\".\n \n          begin\n             if Nkind (Prefix (N)) = N_Aggregate then\n@@ -6288,7 +6287,7 @@ package body Exp_Attr is\n       ------------------\n \n       when Attribute_Storage_Size => Storage_Size : declare\n-         Alloc_Op  : Entity_Id := Empty;\n+         Alloc_Op : Entity_Id := Empty;\n \n       begin\n \n@@ -6709,7 +6708,7 @@ package body Exp_Attr is\n       ------------\n \n       when Attribute_To_Any => To_Any : declare\n-         Decls  : constant List_Id   := New_List;\n+         Decls : constant List_Id := New_List;\n       begin\n          Rewrite (N,\n            Build_To_Any_Call\n@@ -6738,7 +6737,7 @@ package body Exp_Attr is\n       --------------\n \n       when Attribute_TypeCode => TypeCode : declare\n-         Decls  : constant List_Id   := New_List;\n+         Decls : constant List_Id := New_List;\n       begin\n          Rewrite (N, Build_TypeCode_Call (Loc, Ptyp, Decls));\n          Insert_Actions (N, Decls);\n@@ -7666,7 +7665,7 @@ package body Exp_Attr is\n \n       --  The following attributes should not appear at this stage, since they\n       --  have already been handled by the analyzer (and properly rewritten\n-      --  with corresponding values or entities to represent the right values)\n+      --  with corresponding values or entities to represent the right values).\n \n       when Attribute_Abort_Signal\n          | Attribute_Address_Size"}, {"sha": "ff26f17ffa1baca6ff7f90335676e88fce71567c", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90cb252f5f7f3312c6d86ba274a11fbb885cb4f4/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90cb252f5f7f3312c6d86ba274a11fbb885cb4f4/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=90cb252f5f7f3312c6d86ba274a11fbb885cb4f4", "patch": "@@ -6567,7 +6567,7 @@ package body Exp_Util is\n       if Has_Stream_Size_Clause (E) then\n          return Static_Integer (Expression (Stream_Size_Clause (E)));\n \n-      --  Otherwise the Stream_Size if the size of the type\n+      --  Otherwise the Stream_Size is the size of the type\n \n       else\n          return Esize (E);"}]}