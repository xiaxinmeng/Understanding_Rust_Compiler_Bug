{"sha": "e8030e8c02a31e64efa2006809af13dd31a43801", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgwMzBlOGMwMmEzMWU2NGVmYTIwMDY4MDlhZjEzZGQzMWE0MzgwMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-20T01:19:26Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-20T01:19:26Z"}, "message": "Consistently use `&' in constraint of MATCH_SCRATCH.\n\nAlways use a reg as 4th arg of dmac/fmac even if ignored by insn.\nUses of `b' as a constraint in multi-word reload patterns should be `c'.\n\nFrom-SVN: r2900", "tree": {"sha": "5ff293190372a03189c7bcd1809d07b6e612e6e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ff293190372a03189c7bcd1809d07b6e612e6e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8030e8c02a31e64efa2006809af13dd31a43801", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8030e8c02a31e64efa2006809af13dd31a43801", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8030e8c02a31e64efa2006809af13dd31a43801", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8030e8c02a31e64efa2006809af13dd31a43801/comments", "author": null, "committer": null, "parents": [{"sha": "3c243b51085da2e675d9a62d98f467162060938a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c243b51085da2e675d9a62d98f467162060938a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c243b51085da2e675d9a62d98f467162060938a"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "70960ecd44fff57a6856e39994774ffa3ffd49db", "filename": "gcc/config/a29k/a29k.md", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8030e8c02a31e64efa2006809af13dd31a43801/gcc%2Fconfig%2Fa29k%2Fa29k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8030e8c02a31e64efa2006809af13dd31a43801/gcc%2Fconfig%2Fa29k%2Fa29k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.md?ref=e8030e8c02a31e64efa2006809af13dd31a43801", "patch": "@@ -185,15 +185,15 @@\n (define_insn \"\"\n   [(call (match_operand:SI 0 \"memory_operand\" \"m\")\n \t (match_operand 1 \"\" \"\"))\n-   (clobber (match_scratch:SI 2 \"=l\"))]\n+   (clobber (match_scratch:SI 2 \"=&l\"))]\n   \"GET_CODE (XEXP (operands[0], 0)) != CONST_INT\"\n   \"calli lr0,%0%#\"\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"\"\n   [(call (mem:SI (match_operand:SI 0 \"call_operand\" \"i\"))\n \t (match_operand:SI 1 \"general_operand\" \"g\"))\n-   (clobber (match_scratch:SI 2 \"=l\"))]\n+   (clobber (match_scratch:SI 2 \"=&l\"))]\n   \"\"\n   \"call lr0,%F0\"\n   [(set_attr \"type\" \"call\")])\n@@ -202,7 +202,7 @@\n   [(set (match_operand 0 \"gpc_reg_operand\" \"=r\")\n \t(call (match_operand:SI 1 \"memory_operand\" \"m\")\n \t      (match_operand 2 \"\" \"\")))\n-   (clobber (match_scratch:SI 3 \"=l\"))]\n+   (clobber (match_scratch:SI 3 \"=&l\"))]\n   \"GET_CODE (XEXP (operands[1], 0)) != CONST_INT\"\n   \"calli lr0,%1%#\"\n   [(set_attr \"type\" \"call\")])\n@@ -211,7 +211,7 @@\n   [(set (match_operand 0 \"gpc_reg_operand\" \"=r\")\n \t(call (mem:SI (match_operand:SI 1 \"call_operand\" \"i\"))\n \t      (match_operand:SI 2 \"general_operand\" \"g\")))\n-   (clobber (match_scratch:SI 3 \"=l\"))]\n+   (clobber (match_scratch:SI 3 \"=&l\"))]\n   \"\"\n   \"call lr0,%F1\"\n   [(set_attr \"type\" \"call\")])\n@@ -384,7 +384,7 @@\n   \"TARGET_29050\"\n   \"@\n    dadd %0,%1,%2\n-   dmac 8,%0,%1,0\"\n+   dmac 8,%0,%1,%1\"\n   [(set_attr \"type\" \"fadd,dam\")])\n \n ;; DDIV\n@@ -508,15 +508,15 @@\n \t(minus:DF (neg:DF (match_operand:DF 1 \"register_operand\" \"r\"))\n \t\t  (match_operand:DF 2 \"register_operand\" \"0\")))]\n   \"TARGET_29050\"\n-  \"dmac 11,%0,%1,0\"\n+  \"dmac 11,%0,%1,%1\"\n   [(set_attr \"type\" \"dam\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=a\")\n \t(neg:DF (plus:DF (match_operand:DF 1 \"register_operand\" \"%r\")\n \t\t\t (match_operand:DF 2 \"register_operand\" \"0\"))))]\n   \"TARGET_29050\"\n-  \"dmac 11,%0,%1,0\"\n+  \"dmac 11,%0,%1,%1\"\n   [(set_attr \"type\" \"dam\")])\n \n (define_insn \"\"\n@@ -527,7 +527,7 @@\n  \"@\n   cpeq %2,gr1,gr1\\;xor %0,%1,%2\n   cpeq %2,gr1,gr1\\;xor %0,%1,%2\\;sll %L0,%L1,0\n-  dmac 13,%0,%1,0\"\n+  dmac 13,%0,%1,%1\"\n  [(set_attr \"type\" \"multi,multi,dam\")])\n \n ;; DMUL\n@@ -579,8 +579,8 @@\n   \"TARGET_29050\"\n   \"@\n    dsub %0,%1,%2\n-   dmac 9,%0,%2,0\n-   dmac 10,%0,%1,0\"\n+   dmac 9,%0,%2,%2\n+   dmac 10,%0,%1,%1\"\n   [(set_attr \"type\" \"fadd,dam,dam\")])\n \f\n ;; EXBYTE\n@@ -749,7 +749,7 @@\n   \"TARGET_29050\"\n   \"@\n    fadd %0,%1,%2\n-   fmac 8,%0,%1,0\"\n+   fmac 8,%0,%1,%1\"\n   [(set_attr \"type\" \"fadd,fam\")])\n \n ;; FDIV\n@@ -821,15 +821,15 @@\n \t(minus:SF (neg:SF (match_operand:SF 1 \"register_operand\" \"%r\"))\n \t\t  (match_operand:SF 2 \"register_operand\" \"0\")))]\n   \"TARGET_29050\"\n-  \"fmac 11,%0,%1,0\"\n+  \"fmac 11,%0,%1,%1\"\n   [(set_attr \"type\" \"fam\")])\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=a\")\n \t(neg:SF (plus:SF (match_operand:SF 1 \"register_operand\" \"%r\")\n \t\t\t (match_operand:SF 2 \"register_operand\" \"0\"))))]\n   \"TARGET_29050\"\n-  \"fmac 11,%0,%1,0\"\n+  \"fmac 11,%0,%1,%1\"\n   [(set_attr \"type\" \"fam\")])\n \n (define_insn \"\"\n@@ -839,7 +839,7 @@\n   \"TARGET_29050\"\n   \"@\n    cpeq %2,gr1,gr1\\;xor %0,%1,%2\n-   fmac 13,%0,%1,0\"\n+   fmac 13,%0,%1,%1\"\n   [(set_attr \"type\" \"multi,fam\")])\n \n ;; FMUL\n@@ -891,8 +891,8 @@\n   \"TARGET_29050\"\n   \"@\n    fsub %0,%1,%2\n-   fmac 9,%0,%2,0\n-   fmac 10,%0,%1,0\"\n+   fmac 9,%0,%2,%2\n+   fmac 10,%0,%1,%1\"\n   [(set_attr \"type\" \"fadd,fam,fam\")])\n \f\n ;; INBYTE\n@@ -1006,23 +1006,23 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(sign_extend:SI (match_operand:QI 1 \"memory_operand\" \"m\")))\n-   (clobber (match_scratch:PSI 2 \"=b\"))]\n+   (clobber (match_scratch:PSI 2 \"=&b\"))]\n   \"TARGET_DW_ENABLE\"\n   \"load 0,17,%0,%1\"\n   [(set_attr \"type\" \"load\")])\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"gpc_reg_operand\" \"=r\")\n \t(sign_extend:HI (match_operand:QI 1 \"memory_operand\" \"m\")))\n-   (clobber (match_scratch:PSI 2 \"=b\"))]\n+   (clobber (match_scratch:PSI 2 \"=&b\"))]\n   \"TARGET_DW_ENABLE\"\n   \"load 0,17,%0,%1\"\n   [(set_attr \"type\" \"load\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(sign_extend:SI (match_operand:HI 1 \"memory_operand\" \"m\")))\n-   (clobber (match_scratch:PSI 2 \"=b\"))]\n+   (clobber (match_scratch:PSI 2 \"=&b\"))]\n   \"TARGET_DW_ENABLE\"\n   \"load 0,18,%0,%1\"\n   [(set_attr \"type\" \"load\")])\n@@ -1435,7 +1435,7 @@\n (define_insn \"\"\n   [(set (match_operand 0 \"memory_operand\" \"=m\")\n \t(match_operand 1 \"gpc_reg_operand\" \"r\"))\n-   (clobber (match_scratch:PSI 2 \"=c\"))]\n+   (clobber (match_scratch:PSI 2 \"=&c\"))]\n   \"!TARGET_NO_STOREM_BUG\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\n    && GET_MODE_SIZE (GET_MODE (operands[0])) > UNITS_PER_WORD\"\n@@ -1446,7 +1446,7 @@\n   [(match_parallel 0 \"store_multiple_operation\"\n \t\t   [(set (match_operand:SI 1 \"memory_operand\" \"=m\")\n \t\t\t (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n-\t\t    (clobber (match_scratch:PSI 3 \"=c\"))])]\n+\t\t    (clobber (match_scratch:PSI 3 \"=&c\"))])]\n   \"!TARGET_NO_STOREM_BUG\"\n   \"mtsrim cr,%V0\\;storem 0,0,%2,%1\"\n   [(set_attr \"type\" \"multi\")])\n@@ -2410,42 +2410,42 @@\n (define_expand \"reload_indf\"\n   [(parallel [(set (match_operand:DF 0 \"register_operand\" \"=r\")\n \t\t   (match_operand:DF 1 \"reload_memory_operand\" \"m\"))\n-\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&b\"))])]\n+\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&c\"))])]\n   \"\"\n   \"\")\n \n (define_expand \"reload_outdf\"\n   [(parallel [(set (match_operand:DF 0 \"reload_memory_operand\" \"=m\")\n \t\t   (match_operand:DF 1 \"register_operand\" \"r\"))\n-\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&b\"))])]\n+\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&c\"))])]\n   \"\"\n   \"\")\n \n (define_expand \"reload_indi\"\n   [(parallel [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t\t   (match_operand:DI 1 \"reload_memory_operand\" \"m\"))\n-\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&b\"))])]\n+\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&c\"))])]\n   \"\"\n   \"\")\n \n (define_expand \"reload_outdi\"\n   [(parallel [(set (match_operand:DI 0 \"reload_memory_operand\" \"=m\")\n \t\t   (match_operand:DI 1 \"register_operand\" \"r\"))\n-\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&b\"))])]\n+\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&c\"))])]\n   \"\"\n   \"\")\n \n (define_expand \"reload_inti\"\n   [(parallel [(set (match_operand:TI 0 \"register_operand\" \"=r\")\n \t\t   (match_operand:TI 1 \"reload_memory_operand\" \"m\"))\n-\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&b\"))])]\n+\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&c\"))])]\n   \"\"\n   \"\")\n \n (define_expand \"reload_outti\"\n   [(parallel [(set (match_operand:TI 0 \"reload_memory_operand\" \"=m\")\n \t\t   (match_operand:TI 1 \"register_operand\" \"r\"))\n-\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&b\"))])]\n+\t      (clobber (match_operand:PSI 2 \"register_operand\" \"=&c\"))])]\n   \"\"\n   \"\")\n \f"}]}