{"sha": "2e0b13db3cf6c0cf90442da13959fa45de8173e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUwYjEzZGIzY2Y2YzBjZjkwNDQyZGExMzk1OWZhNDVkZTgxNzNlNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-18T20:08:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-18T20:08:36Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1010", "tree": {"sha": "d05a8d777e8e2ee6c409ccc132e7ba7185b0e6b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d05a8d777e8e2ee6c409ccc132e7ba7185b0e6b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e0b13db3cf6c0cf90442da13959fa45de8173e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0b13db3cf6c0cf90442da13959fa45de8173e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0b13db3cf6c0cf90442da13959fa45de8173e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0b13db3cf6c0cf90442da13959fa45de8173e4/comments", "author": null, "committer": null, "parents": [{"sha": "b913db7da2803b971cd62d115adc4200223be124", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b913db7da2803b971cd62d115adc4200223be124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b913db7da2803b971cd62d115adc4200223be124"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "b38693ee5731985b1e93c2e212c2e97fe8d56b69", "filename": "gcc/Makefile.in", "status": "modified", "additions": 27, "deletions": 24, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0b13db3cf6c0cf90442da13959fa45de8173e4/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0b13db3cf6c0cf90442da13959fa45de8173e4/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2e0b13db3cf6c0cf90442da13959fa45de8173e4", "patch": "@@ -659,7 +659,7 @@ cp-parse.o : $(srcdir)/cp-parse.c $(CONFIG_H) $(CPLUS_TREE_H) flags.h\n   `echo $(srcdir)/cp-parse.c | sed 's,^\\./,,'`\n \n $(srcdir)/cp-parse.c $(srcdir)/cp-parse.h : $(srcdir)/cp-parse.y\n-\t@echo expect 30 shift/reduce conflicts and 15 reduce/reduce conflicts\n+\t@echo expect 30 shift/reduce conflicts and 14 reduce/reduce conflicts\n \tcd $(srcdir); $(BISON) $(BISONFLAGS) -d -o cp-parse.c cp-parse.y\n \n cp-spew.o : cp-spew.c $(CONFIG_H) $(CPLUS_TREE_H) \\\n@@ -926,7 +926,7 @@ stamp-attrtab : md genattrtab $(srcdir)/move-if-change\n \tif cmp -s $(PREMADE_ATTRTAB_MD) md;\t\\\n \tthen\t\t\t\t\t\\\n \t  echo Using $(PREMADE_ATTRTAB);\t\\\n-\t  cp $(srcdir)/$(PREMADE_ATTRTAB) tmp-attrtab.c;\t\\\n+\t  cp $(PREMADE_ATTRTAB) tmp-attrtab.c;\t\\\n \telse\t\t\t\t\t\\\n \t  ./genattrtab md > tmp-attrtab.c;\t\\\n \tfi\n@@ -1090,28 +1090,30 @@ proto: config.status protoize unprotoize SYSCALLS.c.X protoize.1 unprotoize.1\n protoize: protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n \t  protoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) -o $@\n-protoize.o:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n+protoize.o: stamp-proto ;\n+\n+unprotoize: unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n+\t  unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) -o $@\n+unprotoize.o:\tstamp-proto ;\n+\n+stamp-proto:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n+\ttouch stamp-proto\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n           -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libdir)/g++-include\\\" \\\n           -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/sys-include\\\" \\\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(prefix)/include\\\" \\\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n-\t  $(srcdir)/protoize.c\n-\n-unprotoize: unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) \\\n-\t  unprotoize.o getopt.o getopt1.o getpwd.o version.o $(LIBS) -o $@\n-unprotoize.o:\t$(srcdir)/protoize.c getopt.h $(CONFIG_H)\n-\t-rm -f unprotoize.c\n-\tcp $(srcdir)/protoize.c unprotoize.c\n+\t  -DUNPROTOIZE $(srcdir)/protoize.c\n+\tmv protoize.o unprotoize.o\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n           -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libdir)/g++-include\\\" \\\n           -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/sys-include\\\" \\\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(prefix)/include\\\" \\\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n-\t  -DUNPROTOIZE unprotoize.c\n+\t  $(srcdir)/protoize.c\n \n getopt.o: $(srcdir)/getopt.c getopt.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/getopt.c\n@@ -1219,12 +1221,13 @@ clean: mostlyclean\n # Using unprotoize.c is not quite right in the first place, \n # but what better way is there?\n \t-rm -f libgcc.a libgcc1.a libgcc2.a libgcc2.ready unprotoize.c\n+\t-rm *.dvi\n \n # Delete all files that users would normally create\n # while building and installing GCC.\n distclean: clean\n \t-rm -f tm.h aux-output.c config.h md config.status tconfig.h\n-\t-rm -f Makefile *.dvi *.oaux\n+\t-rm -f Makefile *.oaux\n \t-rm -fr stage1 stage2 stage3 stage4\n \n # Delete anything likely to be found in the source directory\n@@ -1383,20 +1386,20 @@ install-proto: proto install-dir\n install-man: install-dir $(srcdir)/gcc.1 $(srcdir)/cccp.1 \\\n    protoize.1 unprotoize.1 $(srcdir)/g++.1\n \t-rm -f $(mandir)/gcc$(manext)\n-\t$(INSTALL_DATA) $(srcdir)/gcc.1 $(mandir)/gcc$(manext)\n-\tchmod a-x $(mandir)/gcc$(manext)\n+\t-$(INSTALL_DATA) $(srcdir)/gcc.1 $(mandir)/gcc$(manext)\n+\t-chmod a-x $(mandir)/gcc$(manext)\n \t-rm -f $(mandir)/cccp$(manext)\n-\t$(INSTALL_DATA) $(srcdir)/cccp.1 $(mandir)/cccp$(manext)\n-\tchmod a-x $(mandir)/cccp$(manext)\n+\t-$(INSTALL_DATA) $(srcdir)/cccp.1 $(mandir)/cccp$(manext)\n+\t-chmod a-x $(mandir)/cccp$(manext)\n \t-rm -f $(mandir)/protoize$(manext)\n-\t$(INSTALL_DATA) protoize.1 $(mandir)/protoize$(manext)\n-\tchmod a-x $(mandir)/protoize$(manext)\n+\t-$(INSTALL_DATA) protoize.1 $(mandir)/protoize$(manext)\n+\t-chmod a-x $(mandir)/protoize$(manext)\n \t-rm -f $(mandir)/unprotoize$(manext)\n-\t$(INSTALL_DATA) unprotoize.1 $(mandir)/unprotoize$(manext)\n-\tchmod a-x $(mandir)/unprotoize$(manext)\n+\t-$(INSTALL_DATA) unprotoize.1 $(mandir)/unprotoize$(manext)\n+\t-chmod a-x $(mandir)/unprotoize$(manext)\n \t-rm -f $(mandir)/g++$(manext)\n-\t$(INSTALL_DATA) $(srcdir)/g++.1 $(mandir)/g++$(manext)\n-\tchmod a-x $(mandir)/g++$(manext)\n+\t-$(INSTALL_DATA) $(srcdir)/g++.1 $(mandir)/g++$(manext)\n+\t-chmod a-x $(mandir)/g++$(manext)\n \n # Install the library.\n install-libgcc: libgcc.a\n@@ -1533,7 +1536,7 @@ gcc.xtar.Z: gcc.xtar\n #\tcompress < gcc-$(version).tar > gcc-$(version).tar.Z\n \n #gcc-$(version).tar:\n-gcc.xtar:\n+gcc.xtar: doc\n \t-rm -rf gcc-$(version) tmp\t\n # Put all the files in a temporary subdirectory\n # which has the name that we want to have in the tar file."}]}