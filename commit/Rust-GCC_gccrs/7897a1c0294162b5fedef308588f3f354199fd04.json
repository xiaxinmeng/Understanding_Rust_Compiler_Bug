{"sha": "7897a1c0294162b5fedef308588f3f354199fd04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5N2ExYzAyOTQxNjJiNWZlZGVmMzA4NTg4ZjNmMzU0MTk5ZmQwNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2011-12-10T15:33:06Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2011-12-10T15:33:06Z"}, "message": "user.cfg.in: Add macros, directories.\n\n2011-12-10  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* doc/doxygen/user.cfg.in: Add macros, directories.\n\t* include/bits/locale_classes.h: Remove doxygen warnings, fix markup.\n\t* include/bits/locale_classes.tcc: Same.\n\t* include/bits/shared_ptr.h: Same.\n\t* include/bits/stl_algo.h: Same.\n\t* include/bits/stl_list.h: Same.\n\t* include/bits/stl_numeric.h: Same.\n\t* include/debug/safe_base.h: Same.\n\t* include/parallel/equally_split.h: Same.\n\t* include/std/bitset: Same.\n\t* include/std/complex: Same.\n\t* include/std/fstream: Same.\n\t* include/std/istream: Same.\n\t* include/std/ostream: Same.\n\t* include/tr2/dynamic_bitset: Same.\n\t* scripts/run_doxygen: Remove munging for names that no longer exist.\n\n\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n\tAdjust line numbers.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tconstructor_1_neg.cc: Same.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tconstructor_2_neg.cc: Same.\n\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc: Same.\n\nFrom-SVN: r182189", "tree": {"sha": "e6d319a34c20e02ef1eb28aaabdfa2d5a90fc331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6d319a34c20e02ef1eb28aaabdfa2d5a90fc331"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7897a1c0294162b5fedef308588f3f354199fd04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7897a1c0294162b5fedef308588f3f354199fd04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7897a1c0294162b5fedef308588f3f354199fd04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7897a1c0294162b5fedef308588f3f354199fd04/comments", "author": null, "committer": null, "parents": [{"sha": "f431d7ca38c9607e6bf90b63b348c8186b984480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f431d7ca38c9607e6bf90b63b348c8186b984480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f431d7ca38c9607e6bf90b63b348c8186b984480"}], "stats": {"total": 765, "additions": 404, "deletions": 361}, "files": [{"sha": "38d78477699e2b1a349f2530491d4b9f5647b75e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 60, "deletions": 33, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -1,4 +1,31 @@\n-2011-12-12  Fran\u00e7ois Dumont <fdumont@gcc.gnu.org>\n+2011-12-10  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* doc/doxygen/user.cfg.in: Add macros, directories.\n+\t* include/bits/locale_classes.h: Remove doxygen warnings, fix markup.\n+\t* include/bits/locale_classes.tcc: Same.\n+\t* include/bits/shared_ptr.h: Same.\n+\t* include/bits/stl_algo.h: Same.\n+\t* include/bits/stl_list.h: Same.\n+\t* include/bits/stl_numeric.h: Same.\n+\t* include/debug/safe_base.h: Same.\n+\t* include/parallel/equally_split.h: Same.\n+\t* include/std/bitset: Same.\n+\t* include/std/complex: Same.\n+\t* include/std/fstream: Same.\n+\t* include/std/istream: Same.\n+\t* include/std/ostream: Same.\n+\t* include/tr2/dynamic_bitset: Same.\n+\t* scripts/run_doxygen: Remove munging for names that no longer exist.\n+\n+\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n+\tAdjust line numbers.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tconstructor_1_neg.cc: Same.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tconstructor_2_neg.cc: Same.\n+\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc: Same.\n+\n+2011-12-10  Fran\u00e7ois Dumont <fdumont@gcc.gnu.org>\n \n \t* include/profile/unordered_set: Minor formatting changes.\n \t(unordered_set<>::_M_profile_destruct,\n@@ -119,7 +146,7 @@\n \tLikewise.\n \n 2011-12-04  Markus Trippelsdorf <markus@trippelsdorf.de>\n-            Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\t    Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/bits/stl_heap.h (pop_heap): Check for non-empty range in\n \toverload taking a predicate.\n@@ -145,37 +172,37 @@\n \n 2011-11-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n-        * acinclude.m4 (GLIBCXX_ENABLE_ATOMIC_BUILTINS): Remove\n-        size-specific macros. _GLIBCXX_ATOMIC_BUILTINS_1,\n-        _GLIBCXX_ATOMIC_BUILTINS_2, _GLIBCXX_ATOMIC_BUILTINS_4,\n-        _GLIBCXX_ATOMIC_BUILTINS_8. Use _GLIBCXX_ATOMIC_BUILTINS to\n-        indicate use of C++11 atomic builtins.\n-        * config.h.in: Regenerate.\n-        * configure: Regenerate.\n-        * include/Makefile.am (bits_sup_headers): Add atomic_lockfree_defines.h.\n-        * include/Makefile.in: Regenerate.\n-        * libsupc++/Makefile.am: Compile C++11 support with -std=gnu++0x.\n-        * libsupc++/Makefile.in: Regenerate.\n-\n-        * include/bits/atomic_base.h: Move lock-free property macros...\n-        * libsupc++/atomic_lockfree_defines.h: ...here.\n-        * include/std/future: Use C++11 macros.\n-        * libsupc++/eh_ptr.cc: Same.\n-        * libsupc++/eh_throw.cc: Same.\n-        * libsupc++/exception: Same.\n-        * libsupc++/exception_ptr.h: Same.\n-        * libsupc++/guard.cc: Same.\n-        * libsupc++/nested_exception.cc: Same.\n-        * libsupc++/nested_exception.h: Same.\n-        * src/future.cc: Same.\n-\n-        * include/ext/atomicity.h: Use _GLIBCXX_ATOMIC_BUILTINS.\n-\n-        * doc/doxygen/user.cfg.in\n-        * doc/xml/manual/concurrency_extensions.xml\n-\n-        * testsuite/18_support/exception_ptr/lifespan.cc\n-        * testsuite/lib/libstdc++.exp\n+\t* acinclude.m4 (GLIBCXX_ENABLE_ATOMIC_BUILTINS): Remove\n+\tsize-specific macros. _GLIBCXX_ATOMIC_BUILTINS_1,\n+\t_GLIBCXX_ATOMIC_BUILTINS_2, _GLIBCXX_ATOMIC_BUILTINS_4,\n+\t_GLIBCXX_ATOMIC_BUILTINS_8. Use _GLIBCXX_ATOMIC_BUILTINS to\n+\tindicate use of C++11 atomic builtins.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* include/Makefile.am (bits_sup_headers): Add atomic_lockfree_defines.h.\n+\t* include/Makefile.in: Regenerate.\n+\t* libsupc++/Makefile.am: Compile C++11 support with -std=gnu++0x.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\n+\t* include/bits/atomic_base.h: Move lock-free property macros...\n+\t* libsupc++/atomic_lockfree_defines.h: ...here.\n+\t* include/std/future: Use C++11 macros.\n+\t* libsupc++/eh_ptr.cc: Same.\n+\t* libsupc++/eh_throw.cc: Same.\n+\t* libsupc++/exception: Same.\n+\t* libsupc++/exception_ptr.h: Same.\n+\t* libsupc++/guard.cc: Same.\n+\t* libsupc++/nested_exception.cc: Same.\n+\t* libsupc++/nested_exception.h: Same.\n+\t* src/future.cc: Same.\n+\n+\t* include/ext/atomicity.h: Use _GLIBCXX_ATOMIC_BUILTINS.\n+\n+\t* doc/doxygen/user.cfg.in: Adjust.\n+\t* doc/xml/manual/concurrency_extensions.xml: Add note.\n+\n+\t* testsuite/18_support/exception_ptr/lifespan.cc: Tweak.\n+\t* testsuite/lib/libstdc++.exp: Same.\n \n 2011-11-29  Fran\u00e7ois Dumont <fdumont@gcc.gnu.org>\n "}, {"sha": "adb8c7fcdfe46f1e590a64659f9b32396dc30b95", "filename": "libstdc++-v3/doc/doxygen/user.cfg.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -746,6 +746,7 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n \t\t\t include/tr1/ctime \\\n \t\t\t include/tr1/cwchar \\\n \t\t\t include/tr1/cwctype \\\n+\t\t\t include/tr2/ \\\n \t\t\t include/tr2/bool_set \\\n \t\t\t include/tr2/dynamic_bitset \\\n \t\t\t include/tr2/ratio \\\n@@ -1647,9 +1648,10 @@ PREDEFINED             = __cplusplus \\\n \t\t\t _GLIBCXX_USE_C99_STDINT_TR1 \\\n \t\t\t _GLIBCXX_USE_SCHED_YIELD \\\n \t\t\t _GLIBCXX_USE_NANOSLEEP \\\n-\t\t\t PB_DS_DATA_TRUE_INDICATOR \\\n \t\t\t __EXCEPTIONS \\\n \t\t\t __GXX_RTTI \\\n+                         ATOMIC_INT_LOCK_FREE \\\n+\t\t\t PB_DS_DATA_TRUE_INDICATOR \\\n \t\t\t __glibcxx_function_requires=// \\\n \t\t\t __glibcxx_class_requires=// \\\n \t\t\t __glibcxx_class_requires2=// \\"}, {"sha": "4beca40d34d0fde6a917987b4c4d10cd3acb7866", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -570,39 +570,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   };\n \n \n-  /**\n-   *  @brief  Test for the presence of a facet.\n-   *\n-   *  has_facet tests the locale argument for the presence of the facet type\n-   *  provided as the template parameter.  Facets derived from the facet\n-   *  parameter will also return true.\n-   *\n-   *  @tparam  _Facet  The facet type to test the presence of.\n-   *  @param  __loc  The locale to test.\n-   *  @return  true if __loc contains a facet of type _Facet, else false.\n-  */\n-  template<typename _Facet>\n-    bool\n-    has_facet(const locale& __loc) throw();\n-\n-  /**\n-   *  @brief  Return a facet.\n-   *\n-   *  use_facet looks for and returns a reference to a facet of type Facet\n-   *  where Facet is the template parameter.  If has_facet(locale) is true,\n-   *  there is a suitable facet to return.  It throws std::bad_cast if the\n-   *  locale doesn't contain a facet of type Facet.\n-   *\n-   *  @tparam  _Facet  The facet type to access.\n-   *  @param  __loc  The locale to use.\n-   *  @return  Reference to facet of type Facet.\n-   *  @throw  std::bad_cast if __loc doesn't contain a facet of type _Facet.\n-  */\n-  template<typename _Facet>\n-    const _Facet&\n-    use_facet(const locale& __loc);\n-\n-\n   /**\n    *  @brief  Facet for localized string comparison.\n    *"}, {"sha": "c796e0eaa4e6501d988051731f7ae859bafef68f", "filename": "libstdc++-v3/include/bits/locale_classes.tcc", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.tcc?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -87,7 +87,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t__s2.data(), __s2.data() + __s2.length()) < 0);\n     }\n \n-\n+  /**\n+   *  @brief  Test for the presence of a facet.\n+   *\n+   *  has_facet tests the locale argument for the presence of the facet type\n+   *  provided as the template parameter.  Facets derived from the facet\n+   *  parameter will also return true.\n+   *\n+   *  @tparam  _Facet  The facet type to test the presence of.\n+   *  @param  __loc  The locale to test.\n+   *  @return  true if @p __loc contains a facet of type _Facet, else false.\n+  */\n   template<typename _Facet>\n     bool\n     has_facet(const locale& __loc) throw()\n@@ -102,6 +112,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n     }\n \n+  /**\n+   *  @brief  Return a facet.\n+   *\n+   *  use_facet looks for and returns a reference to a facet of type Facet\n+   *  where Facet is the template parameter.  If has_facet(locale) is true,\n+   *  there is a suitable facet to return.  It throws std::bad_cast if the\n+   *  locale doesn't contain a facet of type Facet.\n+   *\n+   *  @tparam  _Facet  The facet type to access.\n+   *  @param  __loc  The locale to use.\n+   *  @return  Reference to facet of type Facet.\n+   *  @throw  std::bad_cast if @p __loc doesn't contain a facet of type _Facet.\n+  */\n   template<typename _Facet>\n     const _Facet&\n     use_facet(const locale& __loc)"}, {"sha": "070d2d1360bc6abc15cc25536b1f604ccbd3adeb", "filename": "libstdc++-v3/include/bits/shared_ptr.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -100,6 +100,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr shared_ptr() noexcept\n       : __shared_ptr<_Tp>() { }\n \n+      shared_ptr(const shared_ptr&) noexcept = default;\n+\n       /**\n        *  @brief  Construct a %shared_ptr that owns the pointer @a __p.\n        *  @param  __p  A pointer that is convertible to element_type*.\n@@ -211,7 +213,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @param  __r  A %shared_ptr.\n        *  @post   get() == __r.get() && use_count() == __r.use_count()\n        */\n-      shared_ptr(const shared_ptr&) noexcept = default;\n       template<typename _Tp1, typename = typename\n \t       std::enable_if<std::is_convertible<_Tp1*, _Tp*>::value>::type>\n \tshared_ptr(const shared_ptr<_Tp1>& __r) noexcept\n@@ -266,6 +267,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       : __shared_ptr<_Tp>(__p) { }\n \n       shared_ptr& operator=(const shared_ptr&) noexcept = default;\n+\n       template<typename _Tp1>\n \tshared_ptr&\n \toperator=(const shared_ptr<_Tp1>& __r) noexcept"}, {"sha": "c517a1963d1b2c14e7ae5227d8fa61fb5d0d0f35", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 67, "deletions": 68, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -1664,9 +1664,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @return  Nothing.\n    *\n    *  Rotates the elements of the range @p [__first,__last) by \n-   *  @p(__middle - __first) positions so that the element at @p __middle\n+   *  @p (__middle - __first) positions so that the element at @p __middle\n    *  is moved to @p __first, the element at @p __middle+1 is moved to\n-   *  @ __first+1 and so on for each element in the range\n+   *  @p __first+1 and so on for each element in the range\n    *  @p [__first,__last).\n    *\n    *  This effectively swaps the ranges @p [__first,__middle) and\n@@ -1705,7 +1705,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  range beginning at @result, rotating the copied elements by \n    *  @p (__middle-__first) positions so that the element at @p __middle\n    *  is moved to @p __result, the element at @p __middle+1 is moved\n-   *  to @__result+1 and so on for each element in the range @p\n+   *  to @p __result+1 and so on for each element in the range @p\n    *  [__first,__last).\n    *\n    *  Performs \n@@ -1947,9 +1947,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  to the range beginning at @p __result_first, where the number of\n    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and\n    *  @p (__result_last-__result_first).\n-   *  After the sort if @p i and @j are iterators in the range\n-   *  @p [__result_first,__result_first+N) such that @i precedes @j then\n-   *  @p *j<*i is false.\n+   *  After the sort if @e i and @e j are iterators in the range\n+   *  @p [__result_first,__result_first+N) such that i precedes j then\n+   *  *j<*i is false.\n    *  The value returned is @p __result_first+N.\n   */\n   template<typename _InputIterator, typename _RandomAccessIterator>\n@@ -2013,8 +2013,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  to the range beginning at @p result_first, where the number of\n    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and\n    *  @p (__result_last-__result_first).\n-   *  After the sort if @p i and @j are iterators in the range\n-   *  @p [__result_first,__result_first+N) such that @i precedes @j then\n+   *  After the sort if @e i and @e j are iterators in the range\n+   *  @p [__result_first,__result_first+N) such that i precedes j then\n    *  @p __comp(*j,*i) is false.\n    *  The value returned is @p __result_first+N.\n   */\n@@ -2387,16 +2387,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // lower_bound moved to stl_algobase.h\n \n   /**\n-   *  @brief Finds the first position in which @a val could be inserted\n+   *  @brief Finds the first position in which @p __val could be inserted\n    *         without changing the ordering.\n    *  @ingroup binary_search_algorithms\n    *  @param  __first   An iterator.\n    *  @param  __last    Another iterator.\n    *  @param  __val     The search term.\n    *  @param  __comp    A functor to use for comparisons.\n    *  @return An iterator pointing to the first element <em>not less\n-   *           than</em> @a __val, or end() if every element is less\n-   *           than @a __val.\n+   *           than</em> @p __val, or end() if every element is less\n+   *           than @p __val.\n    *  @ingroup binary_search_algorithms\n    *\n    *  The comparison function should have the same effects on ordering as\n@@ -2439,14 +2439,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   /**\n-   *  @brief Finds the last position in which @a val could be inserted\n+   *  @brief Finds the last position in which @p __val could be inserted\n    *         without changing the ordering.\n    *  @ingroup binary_search_algorithms\n    *  @param  __first   An iterator.\n    *  @param  __last    Another iterator.\n    *  @param  __val     The search term.\n-   *  @return  An iterator pointing to the first element greater than @a __val,\n-   *           or end() if no elements are greater than @a __val.\n+   *  @return  An iterator pointing to the first element greater than @p __val,\n+   *           or end() if no elements are greater than @p __val.\n    *  @ingroup binary_search_algorithms\n   */\n   template<typename _ForwardIterator, typename _Tp>\n@@ -2484,15 +2484,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   /**\n-   *  @brief Finds the last position in which @a val could be inserted\n+   *  @brief Finds the last position in which @p __val could be inserted\n    *         without changing the ordering.\n    *  @ingroup binary_search_algorithms\n    *  @param  __first   An iterator.\n    *  @param  __last    Another iterator.\n    *  @param  __val     The search term.\n    *  @param  __comp    A functor to use for comparisons.\n-   *  @return  An iterator pointing to the first element greater than @a __val,\n-   *           or end() if no elements are greater than @a __val.\n+   *  @return  An iterator pointing to the first element greater than @p __val,\n+   *           or end() if no elements are greater than @p __val.\n    *  @ingroup binary_search_algorithms\n    *\n    *  The comparison function should have the same effects on ordering as\n@@ -2535,7 +2535,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   /**\n-   *  @brief Finds the largest subrange in which @a val could be inserted\n+   *  @brief Finds the largest subrange in which @p __val could be inserted\n    *         at any place in it without changing the ordering.\n    *  @ingroup binary_search_algorithms\n    *  @param  __first   An iterator.\n@@ -2597,7 +2597,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   /**\n-   *  @brief Finds the largest subrange in which @a val could be inserted\n+   *  @brief Finds the largest subrange in which @p __val could be inserted\n    *         at any place in it without changing the ordering.\n    *  @param  __first   An iterator.\n    *  @param  __last    Another iterator.\n@@ -2668,10 +2668,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @param  __first   An iterator.\n    *  @param  __last    Another iterator.\n    *  @param  __val     The search term.\n-   *  @return True if @a __val (or its equivalent) is in [@a\n-   *  __first,@a __last ].\n+   *  @return True if @p __val (or its equivalent) is in [@p\n+   *  __first,@p __last ].\n    *\n-   *  Note that this does not actually return an iterator to @a __val.  For\n+   *  Note that this does not actually return an iterator to @p __val.  For\n    *  that, use std::find or a container's specialized find member functions.\n   */\n   template<typename _ForwardIterator, typename _Tp>\n@@ -2699,9 +2699,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @param  __last    Another iterator.\n    *  @param  __val     The search term.\n    *  @param  __comp    A functor to use for comparisons.\n-   *  @return  True if @a val (or its equivalent) is in [@a first,@a last ].\n+   *  @return  True if @p __val (or its equivalent) is in @p [__first,__last].\n    *\n-   *  Note that this does not actually return an iterator to @a val.  For\n+   *  Note that this does not actually return an iterator to @p __val.  For\n    *  that, use std::find or a container's specialized find member functions.\n    *\n    *  The comparison function should have the same effects on ordering as\n@@ -3523,7 +3523,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  each element in [__first2,__last2) within [__first1,__last1).\n    *  The iterators over each range only move forward, so this is a\n    *  linear algorithm.  If an element in [__first2,__last2) is not\n-   *  found before the search iterator reaches @a __last2, false is\n+   *  found before the search iterator reaches @p __last2, false is\n    *  returned.\n   */\n   template<typename _InputIterator1, typename _InputIterator2>\n@@ -3574,7 +3574,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  using comp to decide.  The iterators over each range only move\n    *  forward, so this is a linear algorithm.  If an element in\n    *  [__first2,__last2) is not found before the search iterator\n-   *  reaches @a __last2, false is returned.\n+   *  reaches @p __last2, false is returned.\n   */\n   template<typename _InputIterator1, typename _InputIterator2,\n \t   typename _Compare>\n@@ -3620,13 +3620,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // max_element\n \n   /**\n-   *  @brief  Permute range into the next @a dictionary ordering.\n+   *  @brief  Permute range into the next @e dictionary ordering.\n    *  @ingroup sorting_algorithms\n    *  @param  __first  Start of range.\n    *  @param  __last   End of range.\n    *  @return  False if wrapped to first permutation, true otherwise.\n    *\n-   *  Treats all permutations of the range as a set of @a dictionary sorted\n+   *  Treats all permutations of the range as a set of @e dictionary sorted\n    *  sequences.  Permutes the current sequence into the next one of this set.\n    *  Returns true if there are more sequences to generate.  If the sequence\n    *  is the largest of the set, the smallest is generated and false returned.\n@@ -3674,7 +3674,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   /**\n-   *  @brief  Permute range into the next @a dictionary ordering using\n+   *  @brief  Permute range into the next @e dictionary ordering using\n    *          comparison functor.\n    *  @ingroup sorting_algorithms\n    *  @param  __first  Start of range.\n@@ -3683,7 +3683,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @return  False if wrapped to first permutation, true otherwise.\n    *\n    *  Treats all permutations of the range [__first,__last) as a set of\n-   *  @a dictionary sorted sequences ordered by @a comp.  Permutes the current\n+   *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current\n    *  sequence into the next one of this set.  Returns true if there are more\n    *  sequences to generate.  If the sequence is the largest of the set, the\n    *  smallest is generated and false returned.\n@@ -3732,13 +3732,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   /**\n-   *  @brief  Permute range into the previous @a dictionary ordering.\n+   *  @brief  Permute range into the previous @e dictionary ordering.\n    *  @ingroup sorting_algorithms\n    *  @param  __first  Start of range.\n    *  @param  __last   End of range.\n    *  @return  False if wrapped to last permutation, true otherwise.\n    *\n-   *  Treats all permutations of the range as a set of @a dictionary sorted\n+   *  Treats all permutations of the range as a set of @e dictionary sorted\n    *  sequences.  Permutes the current sequence into the previous one of this\n    *  set.  Returns true if there are more sequences to generate.  If the\n    *  sequence is the smallest of the set, the largest is generated and false\n@@ -3787,7 +3787,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   /**\n-   *  @brief  Permute range into the previous @a dictionary ordering using\n+   *  @brief  Permute range into the previous @e dictionary ordering using\n    *          comparison functor.\n    *  @ingroup sorting_algorithms\n    *  @param  __first  Start of range.\n@@ -3796,7 +3796,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @return  False if wrapped to last permutation, true otherwise.\n    *\n    *  Treats all permutations of the range [__first,__last) as a set of\n-   *  @a dictionary sorted sequences ordered by @a comp.  Permutes the current\n+   *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current\n    *  sequence into the previous one of this set.  Returns true if there are\n    *  more sequences to generate.  If the sequence is the smallest of the set,\n    *  the largest is generated and false returned.\n@@ -4032,7 +4032,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @ingroup sorting_algorithms\n    *  @param  __a  A thing of arbitrary type.\n    *  @param  __b  Another thing of arbitrary type.\n-   *  @param  __comp  A @link comparison_functor comparison functor @endlink.\n+   *  @param  __comp  A @link comparison_functors comparison functor @endlink.\n    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,\n    *  __b) otherwise.\n   */\n@@ -5258,9 +5258,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @p [first,last) and moves them to the range @p [__first,__middle). The\n    *  order of the remaining elements in the range @p [__middle,__last) is\n    *  undefined.\n-   *  After the sort if @p i and @j are iterators in the range\n-   *  @p [__first,__middle) such that @i precedes @j and @k is an iterator in\n-   *  the range @p [__middle,__last) then @p *j<*i and @p *k<*i are both false.\n+   *  After the sort if @e i and @e j are iterators in the range\n+   *  @p [__first,__middle) such that i precedes j and @e k is an iterator in\n+   *  the range @p [__middle,__last) then *j<*i and *k<*i are both false.\n   */\n   template<typename _RandomAccessIterator>\n     inline void\n@@ -5296,8 +5296,8 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @p [__first,__last) and moves them to the range @p [__first,__middle). The\n    *  order of the remaining elements in the range @p [__middle,__last) is\n    *  undefined.\n-   *  After the sort if @p i and @j are iterators in the range\n-   *  @p [__first,__middle) such that @i precedes @j and @k is an iterator in\n+   *  After the sort if @e i and @e j are iterators in the range\n+   *  @p [__first,__middle) such that i precedes j and @e k is an iterator in\n    *  the range @p [__middle,__last) then @p *__comp(j,*i) and @p __comp(*k,*i)\n    *  are both false.\n   */\n@@ -5333,11 +5333,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *\n    *  Rearranges the elements in the range @p [__first,__last) so that @p *__nth\n    *  is the same element that would have been in that position had the\n-   *  whole sequence been sorted.\n    *  whole sequence been sorted. The elements either side of @p *__nth are\n-   *  not completely sorted, but for any iterator @i in the range\n-   *  @p [__first,__nth) and any iterator @j in the range @p [__nth,__last) it\n-   *  holds that @p *j<*i is false.\n+   *  not completely sorted, but for any iterator @e i in the range\n+   *  @p [__first,__nth) and any iterator @e j in the range @p [__nth,__last) it\n+   *  holds that *j < *i is false.\n   */\n   template<typename _RandomAccessIterator>\n     inline void\n@@ -5374,8 +5373,8 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  Rearranges the elements in the range @p [__first,__last) so that @p *__nth\n    *  is the same element that would have been in that position had the\n    *  whole sequence been sorted. The elements either side of @p *__nth are\n-   *  not completely sorted, but for any iterator @i in the range\n-   *  @p [__first,__nth) and any iterator @j in the range @p [__nth,__last) it\n+   *  not completely sorted, but for any iterator @e i in the range\n+   *  @p [__first,__nth) and any iterator @e j in the range @p [__nth,__last) it\n    *  holds that @p __comp(*j,*i) is false.\n   */\n   template<typename _RandomAccessIterator, typename _Compare>\n@@ -5410,8 +5409,8 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @return  Nothing.\n    *\n    *  Sorts the elements in the range @p [__first,__last) in ascending order,\n-   *  such that @p *(i+1)<*i is false for each iterator @p i in the range\n-   *  @p [__first,__last-1).\n+   *  such that for each iterator @e i in the range @p [__first,__last-1),  \n+   *  *(i+1)<*i is false.\n    *\n    *  The relative ordering of equivalent elements is not preserved, use\n    *  @p stable_sort() if this is needed.\n@@ -5446,7 +5445,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @return  Nothing.\n    *\n    *  Sorts the elements in the range @p [__first,__last) in ascending order,\n-   *  such that @p __comp(*(i+1),*i) is false for every iterator @p i in the\n+   *  such that @p __comp(*(i+1),*i) is false for every iterator @e i in the\n    *  range @p [__first,__last-1).\n    *\n    *  The relative ordering of equivalent elements is not preserved, use\n@@ -5484,10 +5483,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last2   Another iterator.\n    *  @param  __result  An iterator pointing to the end of the merged range.\n    *  @return         An iterator pointing to the first element <em>not less\n-   *                  than</em> @a val.\n+   *                  than</em> @e val.\n    *\n-   *  Merges the ranges [__first1,__last1) and [__first2,__last2) into\n-   *  the sorted range [__result, __result + (__last1-__first1) +\n+   *  Merges the ranges @p [__first1,__last1) and @p [__first2,__last2) into\n+   *  the sorted range @p [__result, __result + (__last1-__first1) +\n    *  (__last2-__first2)).  Both input ranges must be sorted, and the\n    *  output range must not overlap with either of the input ranges.\n    *  The sort is @e stable, that is, for equivalent elements in the\n@@ -5545,10 +5544,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __result  An iterator pointing to the end of the merged range.\n    *  @param  __comp    A functor to use for comparisons.\n    *  @return         An iterator pointing to the first element \"not less\n-   *                  than\" @a val.\n+   *                  than\" @e val.\n    *\n-   *  Merges the ranges [__first1,__last1) and [__first2,__last2) into\n-   *  the sorted range [__result, __result + (__last1-__first1) +\n+   *  Merges the ranges @p [__first1,__last1) and @p [__first2,__last2) into\n+   *  the sorted range @p [__result, __result + (__last1-__first1) +\n    *  (__last2-__first2)).  Both input ranges must be sorted, and the\n    *  output range must not overlap with either of the input ranges.\n    *  The sort is @e stable, that is, for equivalent elements in the\n@@ -5610,8 +5609,8 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @return  Nothing.\n    *\n    *  Sorts the elements in the range @p [__first,__last) in ascending order,\n-   *  such that @p *(i+1)<*i is false for each iterator @p i in the range\n-   *  @p [__first,__last-1).\n+   *  such that for each iterator @p i in the range @p [__first,__last-1),\n+   *  @p *(i+1)<*i is false.\n    *\n    *  The relative ordering of equivalent elements is preserved, so any two\n    *  elements @p x and @p y in the range @p [__first,__last) such that\n@@ -5652,8 +5651,8 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @return  Nothing.\n    *\n    *  Sorts the elements in the range @p [__first,__last) in ascending order,\n-   *  such that @p __comp(*(i+1),*i) is false for each iterator @p i in the\n-   *  range @p [__first,__last-1).\n+   *  such that for each iterator @p i in the range @p [__first,__last-1),\n+   *  @p __comp(*(i+1),*i) is false.\n    *\n    *  The relative ordering of equivalent elements is preserved, so any two\n    *  elements @p x and @p y in the range @p [__first,__last) such that\n@@ -5768,8 +5767,8 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  This operation iterates over both ranges, copying elements present in\n    *  each range in order to the output range.  Iterators increment for each\n    *  range.  When the current element of one range is less than the other\n-   *  according to @a __comp, that element is copied and the iterator advanced.\n-   *  If an equivalent element according to @a __comp is contained in both\n+   *  according to @p __comp, that element is copied and the iterator advanced.\n+   *  If an equivalent element according to @p __comp is contained in both\n    *  ranges, the element from the first range is copied and both ranges\n    *  advance.  The output range may not overlap either input range.\n   */\n@@ -5892,8 +5891,8 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  This operation iterates over both ranges, copying elements present in\n    *  both ranges in order to the output range.  Iterators increment for each\n    *  range.  When the current element of one range is less than the other\n-   *  according to @a __comp, that iterator advances.  If an element is\n-   *  contained in both ranges according to @a __comp, the element from the\n+   *  according to @p __comp, that iterator advances.  If an element is\n+   *  contained in both ranges according to @p __comp, the element from the\n    *  first range is copied and both ranges advance.  The output range may not\n    *  overlap either input range.\n   */\n@@ -6009,10 +6008,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  This operation iterates over both ranges, copying elements present in\n    *  the first range but not the second in order to the output range.\n    *  Iterators increment for each range.  When the current element of the\n-   *  first range is less than the second according to @a comp, that element\n+   *  first range is less than the second according to @p __comp, that element\n    *  is copied and the iterator advances.  If the current element of the\n    *  second range is less, no element is copied and the iterator advances.\n-   *  If an element is contained in both ranges according to @a comp, no\n+   *  If an element is contained in both ranges according to @p __comp, no\n    *  elements are copied and both ranges advance.  The output range may not\n    *  overlap either input range.\n   */\n@@ -6135,9 +6134,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  This operation iterates over both ranges, copying elements present in\n    *  one range but not the other in order to the output range.  Iterators\n    *  increment for each range.  When the current element of one range is less\n-   *  than the other according to @a comp, that element is copied and the\n+   *  than the other according to @p comp, that element is copied and the\n    *  iterator advances.  If an element is contained in both ranges according\n-   *  to @a comp, no elements are copied and both ranges advance.  The output\n+   *  to @p __comp, no elements are copied and both ranges advance.  The output\n    *  range may not overlap either input range.\n   */\n   template<typename _InputIterator1, typename _InputIterator2,\n@@ -6223,7 +6222,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last   End of range.\n    *  @param  __comp   Comparison functor.\n    *  @return  Iterator referencing the first instance of the smallest value\n-   *  according to comp.\n+   *  according to __comp.\n   */\n   template<typename _ForwardIterator, typename _Compare>\n     _ForwardIterator"}, {"sha": "e422de88e60906d0535a7eadb4184e919bc5b5f9", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -1441,9 +1441,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Merge sorted lists according to comparison function.\n-       *  @param  __x  Sorted list to merge.\n        *  @tparam _StrictWeakOrdering Comparison function defining\n        *  sort order.\n+       *  @param  __x  Sorted list to merge.\n+       *  @param  __comp  Comparison functor.\n        *\n        *  Assumes that both @a __x and this list are sorted according to\n        *  StrictWeakOrdering.  Merges elements of @a __x into this list"}, {"sha": "085fe9313dd8e89bfa55ac073f43d58d5a036a04", "filename": "libstdc++-v3/include/bits/stl_numeric.h", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_numeric.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_numeric.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_numeric.h?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -133,7 +133,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @brief  Accumulate values in a range with operation.\n    *\n    *  Accumulates the values in the range [first,last) using the function\n-   *  object @a binary_op.  The initial value is @a init.  The values are\n+   *  object @p __binary_op.  The initial value is @p __init.  The values are\n    *  processed in order.\n    *\n    *  @param  __first  Start of range.\n@@ -159,7 +159,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n   /**\n    *  @brief  Compute inner product of two ranges.\n    *\n-   *  Starting with an initial value of @a init, multiplies successive\n+   *  Starting with an initial value of @p __init, multiplies successive\n    *  elements from the two ranges and adds each product into the accumulated\n    *  value using operator+().  The values in the ranges are processed in\n    *  order.\n@@ -188,9 +188,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n   /**\n    *  @brief  Compute inner product of two ranges.\n    *\n-   *  Starting with an initial value of @a init, applies @a binary_op2 to\n+   *  Starting with an initial value of @p __init, applies @p __binary_op2 to\n    *  successive elements from the two ranges and accumulates each result into\n-   *  the accumulated value using @a binary_op1.  The values in the ranges are\n+   *  the accumulated value using @p __binary_op1.  The values in the ranges are\n    *  processed in order.\n    *\n    *  @param  __first1  Start of range 1.\n@@ -224,14 +224,14 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *\n    *  Accumulates the values in the range [first,last) using operator+().\n    *  As each successive input value is added into the total, that partial sum\n-   *  is written to @a result.  Therefore, the first value in result is the\n+   *  is written to @p __result.  Therefore, the first value in result is the\n    *  first value of the input, the second value in result is the sum of the\n    *  first and second input values, and so on.\n    *\n    *  @param  __first  Start of input range.\n    *  @param  __last  End of input range.\n-   *  @param  __result  Output to write sums to.\n-   *  @return  Iterator pointing just beyond the values written to result.\n+   *  @param  __result  Output sum.\n+   *  @return  Iterator pointing just beyond the values written to __result.\n    */\n   template<typename _InputIterator, typename _OutputIterator>\n     _OutputIterator\n@@ -263,14 +263,14 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *\n    *  Accumulates the values in the range [first,last) using operator+().\n    *  As each successive input value is added into the total, that partial sum\n-   *  is written to @a result.  Therefore, the first value in result is the\n+   *  is written to @p __result.  Therefore, the first value in result is the\n    *  first value of the input, the second value in result is the sum of the\n    *  first and second input values, and so on.\n    *\n    *  @param  __first  Start of input range.\n    *  @param  __last  End of input range.\n-   *  @param  __result  Output to write sums to.\n-   *  @return  Iterator pointing just beyond the values written to result.\n+   *  @param  __result  Output sum.\n+   *  @return  Iterator pointing just beyond the values written to __result.\n    */\n   template<typename _InputIterator, typename _OutputIterator,\n \t   typename _BinaryOperation>\n@@ -302,11 +302,11 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @brief  Return differences between adjacent values.\n    *\n    *  Computes the difference between adjacent values in the range\n-   *  [first,last) using operator-() and writes the result to @a result.\n+   *  [first,last) using operator-() and writes the result to @p __result.\n    *\n    *  @param  __first  Start of input range.\n    *  @param  __last  End of input range.\n-   *  @param  __result  Output to write sums to.\n+   *  @param  __result  Output sums.\n    *  @return  Iterator pointing just beyond the values written to result.\n    *\n    *  _GLIBCXX_RESOLVE_LIB_DEFECTS\n@@ -342,12 +342,13 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @brief  Return differences between adjacent values.\n    *\n    *  Computes the difference between adjacent values in the range\n-   *  [__first,__last) using the function object @a __binary_op and writes the\n-   *  result to @a __result.\n+   *  [__first,__last) using the function object @p __binary_op and writes the\n+   *  result to @p __result.\n    *\n    *  @param  __first  Start of input range.\n    *  @param  __last  End of input range.\n-   *  @param  __result  Output to write sums to.\n+   *  @param  __result  Output sum.\n+   *  @param  __binary_op Function object.\n    *  @return  Iterator pointing just beyond the values written to result.\n    *\n    *  _GLIBCXX_RESOLVE_LIB_DEFECTS"}, {"sha": "a1aa53687b99b8c473c1770ad3703e5aba397732", "filename": "libstdc++-v3/include/debug/safe_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_base.h?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -79,7 +79,7 @@ namespace __gnu_debug\n     { }\n \n     /** Initialize the iterator to reference the sequence pointed to\n-     *  by @p__seq. @p __constant is true when we are initializing a\n+     *  by @p __seq. @p __constant is true when we are initializing a\n      *  constant iterator, and false if it is a mutable iterator. Note\n      *  that @p __seq may be NULL, in which case the iterator will be\n      *  singular. Otherwise, the iterator will reference @p __seq and"}, {"sha": "31a0fca72bf9f100c99dcedcc1ab8348df117858", "filename": "libstdc++-v3/include/parallel/equally_split.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fequally_split.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fequally_split.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fequally_split.h?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -68,6 +68,7 @@ namespace __gnu_parallel\n    *  thread number __thread_no+1 (excluded).\n    *  @param __n Number of elements\n    *  @param __num_threads Number of parts\n+   *  @param __thread_no Number of threads\n    *  @returns splitting point */\n   template<typename _DifferenceType>\n     _DifferenceType"}, {"sha": "792a05ace1527759a9f7c9d1b0e4e4f1be96bf03", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -683,7 +683,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #endif\n \n   /**\n-   *  @brief  The %bitset class represents a @e fixed-size sequence of bits.\n+   *  The %bitset class represents a @e fixed-size sequence of bits.\n    *\n    *  @ingroup containers\n    *\n@@ -855,7 +855,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #endif\n \n       /**\n-       *  @brief  Use a subset of a string.\n+       *  Use a subset of a string.\n        *  @param  __s  A string of @a 0 and @a 1 characters.\n        *  @param  __position  Index of the first character in @a __s to use;\n        *                    defaults to zero.\n@@ -878,7 +878,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t}\n \n       /**\n-       *  @brief  Use a subset of a string.\n+       *  Use a subset of a string.\n        *  @param  __s  A string of @a 0 and @a 1 characters.\n        *  @param  __position  Index of the first character in @a __s to use.\n        *  @param  __n    The number of characters to copy.\n@@ -914,7 +914,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n-       *  @brief  Construct from a character %array.\n+       *  Construct from a character %array.\n        *  @param  __str  An %array of characters @a zero and @a one.\n        *  @param  __n    The number of characters to use.\n        *  @param  __zero The character corresponding to the value 0.\n@@ -944,7 +944,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // 23.3.5.2 bitset operations:\n       //@{\n       /**\n-       *  @brief  Operations on bitsets.\n+       *  Operations on bitsets.\n        *  @param  __rhs  A same-sized bitset.\n        *\n        *  These should be self-explanatory.\n@@ -973,7 +973,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       \n       //@{\n       /**\n-       *  @brief  Operations on bitsets.\n+       *  Operations on bitsets.\n        *  @param  __position  The number of places to shift.\n        *\n        *  These should be self-explanatory."}, {"sha": "c0e333117dec0ccb0ceda187c40e5194f425b715", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -1035,8 +1035,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t                 : std::pow(complex<_Tp>(__x), __y);\n     }\n \n-  // 26.2.3  complex specializations\n-  // complex<float> specialization\n+  /// 26.2.3  complex specializations\n+  /// complex<float> specialization\n   template<>\n     struct complex<float>\n     {\n@@ -1182,8 +1182,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _ComplexT _M_value;\n     };\n \n-  // 26.2.3  complex specializations\n-  // complex<double> specialization\n+  /// 26.2.3  complex specializations\n+  /// complex<double> specialization\n   template<>\n     struct complex<double>\n     {\n@@ -1330,8 +1330,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _ComplexT _M_value;\n     };\n \n-  // 26.2.3  complex specializations\n-  // complex<long double> specialization\n+  /// 26.2.3  complex specializations\n+  /// complex<long double> specialization\n   template<>\n     struct complex<long double>\n     {"}, {"sha": "65de272811fa43bba4a02aee1d9afa78f8d566fa", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -620,7 +620,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @param  __mode  Open file in specified mode (see std::ios_base).\n        *\n        *  @c ios_base::out|ios_base::trunc is automatically included in\n-       *  @a __mode.\n+       *  @p __mode.\n        *\n        *  Tip:  When using std::string to hold the filename, you must use\n        *  .c_str() before passing it to this constructor."}, {"sha": "57b21130fcc7bb8f14a15e5393af413601ffa969", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 97, "deletions": 83, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -44,9 +44,8 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n-  // [27.6.1.1] Template class basic_istream\n   /**\n-   *  @brief  Controlling input.\n+   *  @brief  Template class basic_istream.\n    *  @ingroup io\n    *\n    *  This is the base class for all input streams.  It provides text\n@@ -58,19 +57,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n     public:\n       // Types (inherited from basic_ios (27.4.4)):\n-      typedef _CharT                     \t\tchar_type;\n+      typedef _CharT\t\t\t \t\tchar_type;\n       typedef typename _Traits::int_type \t\tint_type;\n       typedef typename _Traits::pos_type \t\tpos_type;\n       typedef typename _Traits::off_type \t\toff_type;\n-      typedef _Traits                    \t\ttraits_type;\n-      \n+      typedef _Traits\t\t\t \t\ttraits_type;\n+\n       // Non-standard Types:\n       typedef basic_streambuf<_CharT, _Traits> \t\t__streambuf_type;\n       typedef basic_ios<_CharT, _Traits>\t\t__ios_type;\n       typedef basic_istream<_CharT, _Traits>\t\t__istream_type;\n-      typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >        \n+      typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >\n  \t\t\t\t\t\t\t__num_get_type;\n-      typedef ctype<_CharT>           \t\t\t__ctype_type;\n+      typedef ctype<_CharT>\t      \t\t\t__ctype_type;\n \n     protected:\n       // Data Members:\n@@ -81,7 +80,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       streamsize \t\t_M_gcount;\n \n     public:\n-      // [27.6.1.1.1] constructor/destructor\n       /**\n        *  @brief  Base constructor.\n        *\n@@ -99,23 +97,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This does very little apart from providing a virtual base dtor.\n       */\n-      virtual \n-      ~basic_istream() \n+      virtual\n+      ~basic_istream()\n       { _M_gcount = streamsize(0); }\n \n-      // [27.6.1.1.2] prefix/suffix\n+      /// Safe prefix/suffix operations.\n       class sentry;\n       friend class sentry;\n \n-      // [27.6.1.2] formatted input\n-      // [27.6.1.2.3] basic_istream::operator>>\n       //@{\n       /**\n        *  @brief  Interface for manipulators.\n        *\n        *  Manipulators such as @c std::ws and @c std::dec use these\n-       *  functions in constructs like \n-       *  <code>std::cin >> std::ws</code>. \n+       *  functions in constructs like\n+       *  <code>std::cin >> std::ws</code>.\n        *  For more information, see the iomanip header.\n       */\n       __istream_type&\n@@ -124,7 +120,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       __istream_type&\n       operator>>(__ios_type& (*__pf)(__ios_type&))\n-      { \n+      {\n \t__pf(*this);\n \treturn *this;\n       }\n@@ -136,10 +132,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn *this;\n       }\n       //@}\n-      \n-      // [27.6.1.2.2] arithmetic extractors\n+\n+      //@{\n       /**\n-       *  @name Arithmetic Extractors\n+       *  @name Extractors\n        *\n        *  All the @c operator>> functions (aka <em>formatted input\n        *  functions</em>) have some common behavior.  Each starts by\n@@ -156,64 +152,84 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  ios_base::failure to be thrown.  The original exception will then\n        *  be rethrown.\n       */\n+\n       //@{\n       /**\n-       *  @brief  Basic arithmetic extractors\n-       *  @param  __n, __f, __p: A variable of builtin type.\n+       *  @brief  Integer arithmetic extractors\n+       *  @param  __n A variable of builtin integral type.\n        *  @return  @c *this if successful\n        *\n        *  These functions use the stream's current locale (specifically, the\n        *  @c num_get facet) to parse the input data.\n       */\n-      __istream_type& \n+      __istream_type&\n       operator>>(bool& __n)\n       { return _M_extract(__n); }\n-      \n-      __istream_type& \n+\n+      __istream_type&\n       operator>>(short& __n);\n-      \n-      __istream_type& \n+\n+      __istream_type&\n       operator>>(unsigned short& __n)\n       { return _M_extract(__n); }\n \n-      __istream_type& \n+      __istream_type&\n       operator>>(int& __n);\n-    \n-      __istream_type& \n+\n+      __istream_type&\n       operator>>(unsigned int& __n)\n       { return _M_extract(__n); }\n \n-      __istream_type& \n+      __istream_type&\n       operator>>(long& __n)\n       { return _M_extract(__n); }\n-      \n-      __istream_type& \n+\n+      __istream_type&\n       operator>>(unsigned long& __n)\n       { return _M_extract(__n); }\n \n #ifdef _GLIBCXX_USE_LONG_LONG\n-      __istream_type& \n+      __istream_type&\n       operator>>(long long& __n)\n       { return _M_extract(__n); }\n \n-      __istream_type& \n+      __istream_type&\n       operator>>(unsigned long long& __n)\n       { return _M_extract(__n); }\n #endif\n+      //@}\n \n-      __istream_type& \n+      //@{\n+      /**\n+       *  @brief  Floating point arithmetic extractors\n+       *  @param  __f A variable of builtin floating point type.\n+       *  @return  @c *this if successful\n+       *\n+       *  These functions use the stream's current locale (specifically, the\n+       *  @c num_get facet) to parse the input data.\n+      */\n+      __istream_type&\n       operator>>(float& __f)\n       { return _M_extract(__f); }\n \n-      __istream_type& \n+      __istream_type&\n       operator>>(double& __f)\n       { return _M_extract(__f); }\n \n-      __istream_type& \n+      __istream_type&\n       operator>>(long double& __f)\n       { return _M_extract(__f); }\n+      //@}\n \n-      __istream_type& \n+      /**\n+       *  @brief  Basic arithmetic extractors\n+       *  @param  __p A variable of pointer type.\n+       *  @return  @c *this if successful\n+       *\n+       *  These functions use the stream's current locale (specifically, the\n+       *  @c num_get facet) to parse the input data.\n+      */\n+      __istream_type&\n       operator>>(void*& __p)\n       { return _M_extract(__p); }\n \n@@ -225,10 +241,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  in that it also constructs a sentry object and has the same error\n        *  handling behavior.\n        *\n-       *  If @a __sb is NULL, the stream will set failbit in its error state.\n+       *  If @p __sb is NULL, the stream will set failbit in its error state.\n        *\n        *  Characters are extracted from this stream and inserted into the\n-       *  @a sb streambuf until one of the following occurs:\n+       *  @p __sb streambuf until one of the following occurs:\n        *\n        *  - the input stream reaches end-of-file,\n        *  - insertion into the output buffer fails (in this case, the\n@@ -237,20 +253,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  If the function inserts no characters, failbit is set.\n       */\n-      __istream_type& \n+      __istream_type&\n       operator>>(__streambuf_type* __sb);\n       //@}\n-      \n+\n       // [27.6.1.3] unformatted input\n       /**\n        *  @brief  Character counting\n        *  @return  The number of characters extracted by the previous\n        *           unformatted input function dispatched for this stream.\n       */\n-      streamsize \n-      gcount() const \n+      streamsize\n+      gcount() const\n       { return _M_gcount; }\n-      \n+\n+      //@{\n       /**\n        *  @name Unformatted Input Functions\n        *\n@@ -271,15 +288,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  ios_base::failure to be thrown.  The original exception will then\n        *  be rethrown.\n       */\n-      //@{\n+\n       /**\n        *  @brief  Simple extraction.\n        *  @return  A character, or eof().\n        *\n        *  Tries to extract a character.  If none are available, sets failbit\n        *  and returns traits::eof().\n       */\n-      int_type \n+      int_type\n       get();\n \n       /**\n@@ -293,7 +310,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @note  This function is not overloaded on signed char and\n        *         unsigned char.\n       */\n-      __istream_type& \n+      __istream_type&\n       get(char_type& __c);\n \n       /**\n@@ -320,7 +337,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @note  This function is not overloaded on signed char and\n        *         unsigned char.\n       */\n-      __istream_type& \n+      __istream_type&\n       get(char_type* __s, streamsize __n, char_type __delim);\n \n       /**\n@@ -331,7 +348,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  Returns @c get(__s,__n,widen(&apos;\\\\n&apos;)).\n       */\n-      __istream_type& \n+      __istream_type&\n       get(char_type* __s, streamsize __n)\n       { return this->get(__s, __n, this->widen('\\n')); }\n \n@@ -393,7 +410,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  In any case, a null character is stored in the next location in\n        *  the array.\n       */\n-      __istream_type& \n+      __istream_type&\n       getline(char_type* __s, streamsize __n, char_type __delim);\n \n       /**\n@@ -404,7 +421,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  Returns @c getline(__s,__n,widen(&apos;\\\\n&apos;)).\n       */\n-      __istream_type& \n+      __istream_type&\n       getline(char_type* __s, streamsize __n)\n       { return this->getline(__s, __n, this->widen('\\n')); }\n \n@@ -428,13 +445,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  better performing implementation, while still conforming to\n        *  the Standard.\n       */\n-      __istream_type& \n+      __istream_type&\n       ignore(streamsize __n, int_type __delim);\n \n-      __istream_type& \n+      __istream_type&\n       ignore(streamsize __n);\n \n-      __istream_type& \n+      __istream_type&\n       ignore();\n \n       /**\n@@ -445,9 +462,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  returns @c traits::eof().  Otherwise reads but does not extract\n        *  the next input character.\n       */\n-      int_type \n+      int_type\n       peek();\n-      \n+\n       /**\n        *  @brief  Extraction without delimiters.\n        *  @param  __s  A character array.\n@@ -463,7 +480,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @note  This function is not overloaded on signed char and\n        *         unsigned char.\n       */\n-      __istream_type& \n+      __istream_type&\n       read(char_type* __s, streamsize __n);\n \n       /**\n@@ -482,9 +499,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  The goal is to empty the current buffer, and to not request any\n        *  more from the external input sequence controlled by the streambuf.\n       */\n-      streamsize \n+      streamsize\n       readsome(char_type* __s, streamsize __n);\n-      \n+\n       /**\n        *  @brief  Unextracting a single character.\n        *  @param  __c  The character to push back into the input stream.\n@@ -499,7 +516,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *         are extracted, the next call to @c gcount() will return 0,\n        *         as required by DR 60.\n       */\n-      __istream_type& \n+      __istream_type&\n       putback(char_type __c);\n \n       /**\n@@ -515,7 +532,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *         are extracted, the next call to @c gcount() will return 0,\n        *         as required by DR 60.\n       */\n-      __istream_type& \n+      __istream_type&\n       unget();\n \n       /**\n@@ -533,7 +550,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *         extracted, if any, and therefore does not affect the next\n        *         call to @c gcount().\n       */\n-      int \n+      int\n       sync();\n \n       /**\n@@ -579,7 +596,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *         number of characters extracted, if any, and therefore does\n        *         not affect the next call to @c gcount().\n       */\n-      __istream_type& \n+      __istream_type&\n       seekg(off_type, ios_base::seekdir);\n       //@}\n \n@@ -589,37 +606,37 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { this->init(0); }\n \n       template<typename _ValueT>\n-        __istream_type&\n-        _M_extract(_ValueT& __v);\n+\t__istream_type&\n+\t_M_extract(_ValueT& __v);\n     };\n \n-  // Explicit specialization declarations, defined in src/istream.cc.\n-  template<> \n-    basic_istream<char>& \n+  /// Explicit specialization declarations, defined in src/istream.cc.\n+  template<>\n+    basic_istream<char>&\n     basic_istream<char>::\n     getline(char_type* __s, streamsize __n, char_type __delim);\n-  \n+\n   template<>\n     basic_istream<char>&\n     basic_istream<char>::\n     ignore(streamsize __n);\n-  \n+\n   template<>\n     basic_istream<char>&\n     basic_istream<char>::\n     ignore(streamsize __n, int_type __delim);\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n-  template<> \n-    basic_istream<wchar_t>& \n+  template<>\n+    basic_istream<wchar_t>&\n     basic_istream<wchar_t>::\n     getline(char_type* __s, streamsize __n, char_type __delim);\n \n   template<>\n     basic_istream<wchar_t>&\n     basic_istream<wchar_t>::\n     ignore(streamsize __n);\n-  \n+\n   template<>\n     basic_istream<wchar_t>&\n     basic_istream<wchar_t>::\n@@ -687,7 +704,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return _M_ok; }\n     };\n \n-  // [27.6.1.2.3] character extraction templates\n   //@{\n   /**\n    *  @brief  Character extractors\n@@ -762,28 +778,27 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return (__in >> reinterpret_cast<char*>(__s)); }\n   //@}\n \n-  // 27.6.1.5 Template class basic_iostream\n   /**\n-   *  @brief  Merging istream and ostream capabilities.\n+   *  @brief  Template class basic_iostream\n    *  @ingroup io\n    *\n    *  This class multiply inherits from the input and output stream classes\n    *  simply to provide a single interface.\n   */\n   template<typename _CharT, typename _Traits>\n     class basic_iostream\n-    : public basic_istream<_CharT, _Traits>, \n+    : public basic_istream<_CharT, _Traits>,\n       public basic_ostream<_CharT, _Traits>\n     {\n     public:\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 271. basic_iostream missing typedefs\n       // Types (inherited):\n-      typedef _CharT                     \t\tchar_type;\n+      typedef _CharT\t\t\t \t\tchar_type;\n       typedef typename _Traits::int_type \t\tint_type;\n       typedef typename _Traits::pos_type \t\tpos_type;\n       typedef typename _Traits::off_type \t\toff_type;\n-      typedef _Traits                    \t\ttraits_type;\n+      typedef _Traits\t\t\t \t\ttraits_type;\n \n       // Non-standard Types:\n       typedef basic_istream<_CharT, _Traits>\t\t__istream_type;\n@@ -802,15 +817,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  @brief  Destructor does nothing.\n       */\n-      virtual \n+      virtual\n       ~basic_iostream() { }\n \n     protected:\n       basic_iostream()\n       : __istream_type(), __ostream_type() { }\n     };\n \n-  // [27.6.1.4] standard basic_istream manipulators\n   /**\n    *  @brief  Quick and easy way to eat whitespace\n    *\n@@ -832,7 +846,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  std::basic_istream::sentry inside your definition of operator>>.\n   */\n   template<typename _CharT, typename _Traits>\n-    basic_istream<_CharT, _Traits>& \n+    basic_istream<_CharT, _Traits>&\n     ws(basic_istream<_CharT, _Traits>& __is);\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__"}, {"sha": "498a060c2f5626e9c28c94c2980f97f487b2b0d1", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 91, "deletions": 72, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -44,9 +44,8 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n-  // [27.6.2.1] Template class basic_ostream\n   /**\n-   *  @brief  Controlling output.\n+   *  @brief  Template class basic_ostream.\n    *  @ingroup io\n    *\n    *  This is the base class for all output streams.  It provides text\n@@ -57,30 +56,29 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     class basic_ostream : virtual public basic_ios<_CharT, _Traits>\n     {\n     public:\n-      // Types (inherited from basic_ios (27.4.4)):\n-      typedef _CharT                     \t\tchar_type;\n+      // Types (inherited from basic_ios):\n+      typedef _CharT\t\t\t \t\tchar_type;\n       typedef typename _Traits::int_type \t\tint_type;\n       typedef typename _Traits::pos_type \t\tpos_type;\n       typedef typename _Traits::off_type \t\toff_type;\n-      typedef _Traits                    \t\ttraits_type;\n-      \n+      typedef _Traits\t\t\t \t\ttraits_type;\n+\n       // Non-standard Types:\n       typedef basic_streambuf<_CharT, _Traits> \t\t__streambuf_type;\n       typedef basic_ios<_CharT, _Traits>\t\t__ios_type;\n       typedef basic_ostream<_CharT, _Traits>\t\t__ostream_type;\n-      typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >        \n+      typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >\n       \t\t\t\t\t\t\t__num_put_type;\n-      typedef ctype<_CharT>           \t\t\t__ctype_type;\n+      typedef ctype<_CharT>\t      \t\t\t__ctype_type;\n \n-      // [27.6.2.2] constructor/destructor\n       /**\n        *  @brief  Base constructor.\n        *\n        *  This ctor is almost never called by the user directly, rather from\n        *  derived classes' initialization lists, which pass a pointer to\n        *  their own stream buffer.\n       */\n-      explicit \n+      explicit\n       basic_ostream(__streambuf_type* __sb)\n       { this->init(__sb); }\n \n@@ -89,15 +87,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This does very little apart from providing a virtual base dtor.\n       */\n-      virtual \n+      virtual\n       ~basic_ostream() { }\n \n-      // [27.6.2.3] prefix/suffix\n+      /// Safe prefix/suffix operations.\n       class sentry;\n       friend class sentry;\n-      \n-      // [27.6.2.5] formatted output\n-      // [27.6.2.5.3]  basic_ostream::operator<<\n+\n       //@{\n       /**\n        *  @brief  Interface for manipulators.\n@@ -136,9 +132,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n       //@}\n \n-      // [27.6.2.5.2] arithmetic inserters\n+      //@{\n       /**\n-       *  @name Arithmetic Inserters\n+       *  @name Inserters\n        *\n        *  All the @c operator<< functions (aka <em>formatted output\n        *  functions</em>) have some common behavior.  Each starts by\n@@ -154,42 +150,43 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  ios_base::failure to be thrown.  The original exception will then\n        *  be rethrown.\n       */\n+\n       //@{\n       /**\n-       *  @brief  Basic arithmetic inserters\n-       *  @param  __n, __f, __p A variable of builtin type.\n+       *  @brief Integer arithmetic inserters\n+       *  @param  __n A variable of builtin integral type.\n        *  @return  @c *this if successful\n        *\n        *  These functions use the stream's current locale (specifically, the\n        *  @c num_get facet) to perform numeric formatting.\n       */\n-      __ostream_type& \n+      __ostream_type&\n       operator<<(long __n)\n       { return _M_insert(__n); }\n-      \n-      __ostream_type& \n+\n+      __ostream_type&\n       operator<<(unsigned long __n)\n-      { return _M_insert(__n); }\t\n+      { return _M_insert(__n); }\n \n-      __ostream_type& \n+      __ostream_type&\n       operator<<(bool __n)\n       { return _M_insert(__n); }\n \n-      __ostream_type& \n+      __ostream_type&\n       operator<<(short __n);\n \n-      __ostream_type& \n+      __ostream_type&\n       operator<<(unsigned short __n)\n       {\n \t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n \t// 117. basic_ostream uses nonexistent num_put member functions.\n \treturn _M_insert(static_cast<unsigned long>(__n));\n       }\n \n-      __ostream_type& \n+      __ostream_type&\n       operator<<(int __n);\n \n-      __ostream_type& \n+      __ostream_type&\n       operator<<(unsigned int __n)\n       {\n \t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n@@ -198,32 +195,51 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n #ifdef _GLIBCXX_USE_LONG_LONG\n-      __ostream_type& \n+      __ostream_type&\n       operator<<(long long __n)\n       { return _M_insert(__n); }\n \n-      __ostream_type& \n+      __ostream_type&\n       operator<<(unsigned long long __n)\n-      { return _M_insert(__n); }\t\n+      { return _M_insert(__n); }\n #endif\n+      //@}\n \n-      __ostream_type& \n+      //@{\n+      /**\n+       *  @brief  Floating point arithmetic inserters\n+       *  @param  __f A variable of builtin floating point type.\n+       *  @return  @c *this if successful\n+       *\n+       *  These functions use the stream's current locale (specifically, the\n+       *  @c num_get facet) to perform numeric formatting.\n+      */\n+      __ostream_type&\n       operator<<(double __f)\n       { return _M_insert(__f); }\n \n-      __ostream_type& \n+      __ostream_type&\n       operator<<(float __f)\n       {\n \t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n \t// 117. basic_ostream uses nonexistent num_put member functions.\n \treturn _M_insert(static_cast<double>(__f));\n       }\n \n-      __ostream_type& \n+      __ostream_type&\n       operator<<(long double __f)\n       { return _M_insert(__f); }\n+      //@}\n \n-      __ostream_type& \n+      /**\n+       *  @brief  Pointer arithmetic inserters\n+       *  @param  __p A variable of pointer type.\n+       *  @return  @c *this if successful\n+       *\n+       *  These functions use the stream's current locale (specifically, the\n+       *  @c num_get facet) to perform numeric formatting.\n+      */\n+      __ostream_type&\n       operator<<(const void* __p)\n       { return _M_insert(__p); }\n \n@@ -235,24 +251,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  in that it also constructs a sentry object and has the same error\n        *  handling behavior.\n        *\n-       *  If @a __sb is NULL, the stream will set failbit in its error state.\n+       *  If @p __sb is NULL, the stream will set failbit in its error state.\n        *\n-       *  Characters are extracted from @a __sb and inserted into @c *this\n+       *  Characters are extracted from @p __sb and inserted into @c *this\n        *  until one of the following occurs:\n        *\n        *  - the input stream reaches end-of-file,\n        *  - insertion into the output sequence fails (in this case, the\n        *    character that would have been inserted is not extracted), or\n-       *  - an exception occurs while getting a character from @a __sb, which\n+       *  - an exception occurs while getting a character from @p __sb, which\n        *    sets failbit in the error state\n        *\n        *  If the function inserts no characters, failbit is set.\n       */\n-      __ostream_type& \n+      __ostream_type&\n       operator<<(__streambuf_type* __sb);\n       //@}\n \n-      // [27.6.2.6] unformatted output functions\n+      //@{\n       /**\n        *  @name Unformatted Output Functions\n        *\n@@ -270,21 +286,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  the stream's exceptions mask, the exception will be rethrown\n        *  without completing its actions.\n       */\n-      //@{\n+\n       /**\n        *  @brief  Simple insertion.\n        *  @param  __c  The character to insert.\n        *  @return  *this\n        *\n-       *  Tries to insert @a c.\n+       *  Tries to insert @p __c.\n        *\n        *  @note  This function is not overloaded on signed char and\n        *         unsigned char.\n       */\n-      __ostream_type& \n+      __ostream_type&\n       put(char_type __c);\n \n-      // Core write functionality, without sentry.\n+      /**\n+       *  @brief  Core write functionality, without sentry.\n+       *  @param  __s  The array to insert.\n+       *  @param  __n  Maximum number of characters to insert.\n+      */\n       void\n       _M_write(const char_type* __s, streamsize __n)\n       {\n@@ -299,17 +319,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @param  __n  Maximum number of characters to insert.\n        *  @return  *this\n        *\n-       *  Characters are copied from @a __s and inserted into the stream until\n+       *  Characters are copied from @p __s and inserted into the stream until\n        *  one of the following happens:\n        *\n-       *  - @a __n characters are inserted\n+       *  - @p __n characters are inserted\n        *  - inserting into the output sequence fails (in this case, badbit\n        *    will be set in the stream's error state)\n        *\n        *  @note  This function is not overloaded on signed char and\n        *         unsigned char.\n       */\n-      __ostream_type& \n+      __ostream_type&\n       write(const char_type* __s, streamsize __n);\n       //@}\n \n@@ -322,18 +342,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,\n        *  sets badbit.\n       */\n-      __ostream_type& \n+      __ostream_type&\n       flush();\n \n-      // [27.6.2.4] seek members\n       /**\n        *  @brief  Getting the current write position.\n        *  @return  A file position object.\n        *\n        *  If @c fail() is not false, returns @c pos_type(-1) to indicate\n        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).\n       */\n-      pos_type \n+      pos_type\n       tellp();\n \n       /**\n@@ -344,7 +363,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If\n        *  that function fails, sets failbit.\n       */\n-      __ostream_type& \n+      __ostream_type&\n       seekp(pos_type);\n \n       /**\n@@ -356,16 +375,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).\n        *  If that function fails, sets failbit.\n       */\n-       __ostream_type& \n+       __ostream_type&\n       seekp(off_type, ios_base::seekdir);\n-      \n+\n     protected:\n       basic_ostream()\n       { this->init(0); }\n \n       template<typename _ValueT>\n-        __ostream_type&\n-        _M_insert(_ValueT __v);\n+\t__ostream_type&\n+\t_M_insert(_ValueT __v);\n     };\n \n   /**\n@@ -381,7 +400,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Data Members.\n       bool \t\t\t\t_M_ok;\n       basic_ostream<_CharT, _Traits>& \t_M_os;\n-      \n+\n     public:\n       /**\n        *  @brief  The constructor performs preparatory work.\n@@ -429,7 +448,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return _M_ok; }\n     };\n \n-  // [27.6.2.5.4] character insertion templates\n   //@{\n   /**\n    *  @brief  Character inserters\n@@ -443,7 +461,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then\n    *  called.\n    *\n-   *  If @a __c is of type @c char and the character type of the stream is not\n+   *  If @p __c is of type @c char and the character type of the stream is not\n    *  @c char, the character is widened before insertion.\n   */\n   template<typename _CharT, typename _Traits>\n@@ -457,7 +475,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return (__out << __out.widen(__c)); }\n \n   // Specialization\n-  template <class _Traits> \n+  template <class _Traits>\n     inline basic_ostream<char, _Traits>&\n     operator<<(basic_ostream<char, _Traits>& __out, char __c)\n     { return __ostream_insert(__out, &__c, 1); }\n@@ -467,25 +485,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline basic_ostream<char, _Traits>&\n     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)\n     { return (__out << static_cast<char>(__c)); }\n-  \n+\n   template<class _Traits>\n     inline basic_ostream<char, _Traits>&\n     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)\n     { return (__out << static_cast<char>(__c)); }\n   //@}\n-  \n+\n   //@{\n   /**\n    *  @brief  String inserters\n    *  @param  __out  An output stream.\n    *  @param  __s  A character string.\n    *  @return  out\n-   *  @pre  @a s must be a non-NULL pointer\n+   *  @pre  @p __s must be a non-NULL pointer\n    *\n    *  Behaves like one of the formatted arithmetic inserters described in\n    *  std::basic_ostream.  After constructing a sentry object with good\n    *  status, this function inserts @c traits::length(__s) characters starting\n-   *  at @a __s, widened if necessary, followed by any required padding (as\n+   *  at @p __s, widened if necessary, followed by any required padding (as\n    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.\n   */\n   template<typename _CharT, typename _Traits>\n@@ -529,7 +547,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return (__out << reinterpret_cast<const char*>(__s)); }\n   //@}\n \n-  // [27.6.2.7] standard basic_ostream manipulators\n+  // Standard basic_ostream manipulators\n+\n   /**\n    *  @brief  Write a newline and flush the stream.\n    *\n@@ -539,33 +558,33 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  for more on this subject.\n   */\n   template<typename _CharT, typename _Traits>\n-    inline basic_ostream<_CharT, _Traits>& \n+    inline basic_ostream<_CharT, _Traits>&\n     endl(basic_ostream<_CharT, _Traits>& __os)\n     { return flush(__os.put(__os.widen('\\n'))); }\n \n   /**\n    *  @brief  Write a null character into the output sequence.\n    *\n-   *  <em>Null character</em> is @c CharT() by definition.  For CharT of @c char,\n-   *  this correctly writes the ASCII @c NUL character string terminator.\n+   *  <em>Null character</em> is @c CharT() by definition.  For CharT\n+   *  of @c char, this correctly writes the ASCII @c NUL character\n+   *  string terminator.\n   */\n   template<typename _CharT, typename _Traits>\n-    inline basic_ostream<_CharT, _Traits>& \n+    inline basic_ostream<_CharT, _Traits>&\n     ends(basic_ostream<_CharT, _Traits>& __os)\n     { return __os.put(_CharT()); }\n-  \n+\n   /**\n    *  @brief  Flushes the output stream.\n    *\n    *  This manipulator simply calls the stream's @c flush() member function.\n   */\n   template<typename _CharT, typename _Traits>\n-    inline basic_ostream<_CharT, _Traits>& \n+    inline basic_ostream<_CharT, _Traits>&\n     flush(basic_ostream<_CharT, _Traits>& __os)\n     { return __os.flush(); }\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n-  // [27.7.2.9] Rvalue stream insertion\n   /**\n    *  @brief  Generic inserter for rvalue stream\n    *  @param  __os  An input stream.\n@@ -583,7 +602,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif // __GXX_EXPERIMENTAL_CXX0X__\n \n _GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace\n+} // namespace std\n \n #include <bits/ostream.tcc>\n "}, {"sha": "4c06b84c2a5014cfe9ee0c38a415c67ce42660c2", "filename": "libstdc++-v3/include/tr2/dynamic_bitset", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Fdynamic_bitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Fdynamic_bitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr2%2Fdynamic_bitset?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -738,10 +738,10 @@ public:\n \n       /**\n        *  @brief  Use a subset of a string.\n-       *  @param  str  A string of '0' and '1' characters.\n-       *  @param  pos  Index of the first character in @a s to use.\n-       *  @param  n    The number of characters to copy.\n-       *  @throw  std::out_of_range  If @a pos is bigger the size of @a s.\n+       *  @param  __str  A string of '0' and '1' characters.\n+       *  @param  __pos  Index of the first character in @p __str to use.\n+       *  @param  __n    The number of characters to copy.\n+       *  @throw  std::out_of_range  If @p __pos is bigger the size of @p __str.\n        *  @throw  std::invalid_argument  If a character appears in the string\n        *                                 which is neither '0' nor '1'.\n        */\n@@ -770,7 +770,7 @@ public:\n \n       /**\n        *  @brief  Construct from a string.\n-       *  @param  str  A string of '0' and '1' characters.\n+       *  @param  __str  A string of '0' and '1' characters.\n        *  @throw  std::invalid_argument  If a character appears in the string\n        *                                 which is neither '0' nor '1'.\n        */\n@@ -907,7 +907,7 @@ public:\n       //@{\n       /**\n        *  @brief  Operations on dynamic_bitsets.\n-       *  @param  rhs  A same-sized dynamic_bitset.\n+       *  @param  __rhs  A same-sized dynamic_bitset.\n        *\n        *  These should be self-explanatory.\n        */\n@@ -950,7 +950,7 @@ public:\n       //@{\n       /**\n        *  @brief  Operations on dynamic_bitsets.\n-       *  @param  position  The number of places to shift.\n+       *  @param  __pos The number of places to shift.\n        *\n        *  These should be self-explanatory.\n        */\n@@ -995,9 +995,9 @@ public:\n \n       /**\n        *  @brief Sets a given bit to a particular value.\n-       *  @param  position  The index of the bit.\n-       *  @param  val  Either true or false, defaults to true.\n-       *  @throw  std::out_of_range  If @a pos is bigger the size of the %set.\n+       *  @param  __pos  The index of the bit.\n+       *  @param  __val  Either true or false, defaults to true.\n+       *  @throw  std::out_of_range  If @a __pos is bigger the size of the %set.\n        */\n       dynamic_bitset<_WordT, _Alloc>&\n       set(size_type __pos, bool __val = true)\n@@ -1019,10 +1019,10 @@ public:\n \n       /**\n        *  @brief Sets a given bit to false.\n-       *  @param  position  The index of the bit.\n-       *  @throw  std::out_of_range  If @a pos is bigger the size of the %set.\n+       *  @param  __pos  The index of the bit.\n+       *  @throw  std::out_of_range  If @a __pos is bigger the size of the %set.\n        *\n-       *  Same as writing @c set(pos,false).\n+       *  Same as writing @c set(__pos, false).\n        */\n       dynamic_bitset<_WordT, _Alloc>&\n       reset(size_type __pos)\n@@ -1045,8 +1045,8 @@ public:\n \n       /**\n        *  @brief Toggles a given bit to its opposite value.\n-       *  @param  position  The index of the bit.\n-       *  @throw  std::out_of_range  If @a pos is bigger the size of the %set.\n+       *  @param  __pos  The index of the bit.\n+       *  @throw  std::out_of_range  If @a __pos is bigger the size of the %set.\n        */\n       dynamic_bitset<_WordT, _Alloc>&\n       flip(size_type __pos)\n@@ -1064,7 +1064,7 @@ public:\n       //@{\n       /**\n        *  @brief  Array-indexing support.\n-       *  @param  position  Index into the %dynamic_bitset.\n+       *  @param  __pos  Index into the %dynamic_bitset.\n        *  @return A bool for a 'const %dynamic_bitset'.  For non-const\n        *           bitsets, an instance of the reference proxy class.\n        *  @note These operators do no range checking and throw no\n@@ -1167,9 +1167,9 @@ public:\n \n       /**\n        *  @brief Tests the value of a bit.\n-       *  @param  position  The index of a bit.\n-       *  @return  The value at @a pos.\n-       *  @throw  std::out_of_range  If @a pos is bigger the size of the %set.\n+       *  @param  __pos  The index of a bit.\n+       *  @return  The value at @a __pos.\n+       *  @throw  std::out_of_range  If @a __pos is bigger the size of the %set.\n        */\n       bool\n       test(size_type __pos) const\n@@ -1226,7 +1226,7 @@ public:\n       /**\n        *  @brief  Finds the index of the next \"on\" bit after prev.\n        *  @return  The index of the next bit set, or size() if not found.\n-       *  @param  prev  Where to start searching.\n+       *  @param  __prev  Where to start searching.\n        *  @sa  find_first\n        */\n       size_type\n@@ -1321,8 +1321,8 @@ public:\n   //@{\n   /**\n    *  @brief  Global bitwise operations on bitsets.\n-   *  @param  x  A bitset.\n-   *  @param  y  A bitset of the same size as @a x.\n+   *  @param  __x  A bitset.\n+   *  @param  __y  A bitset of the same size as @a __x.\n    *  @return  A new bitset.\n    *\n    *  These should be self-explanatory."}, {"sha": "45b3f4a066a549f2519037c66ed16c519a3a6d2a", "filename": "libstdc++-v3/scripts/run_doxygen", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Frun_doxygen?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -325,14 +325,6 @@ for f in *__profile_*; do\n     newname=`echo $f | sed 's/__profile_/__profile::/'`\n     mv $f $newname\n done\n-for f in *__atomic0_*; do\n-    newname=`echo $f | sed 's/__atomic0_/__atomic0::/'`\n-    mv $f $newname\n-done\n-for f in *__atomic2_*; do\n-    newname=`echo $f | sed 's/__atomic2_/__atomic2::/'`\n-    mv $f $newname\n-done\n \n # Then, clean up other top-level namespaces.\n for f in std_tr1_*; do\n@@ -373,11 +365,6 @@ for f in __cxxabiv1_*; do\n done\n \n # Then piecemeal nested classes\n-for f in *__future_base_*; do\n-    newname=`echo $f | sed 's/__future_base_/__future_base::/'`\n-    mv $f $newname\n-done\n-\n \n \n # Generic removal bits, where there are things in the generated man"}, {"sha": "42f28db9ab35e4e38bc1ac6c1774ab2108e8fb71", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1551 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1552 }\n \n #include <list>\n "}, {"sha": "d4a446408f4b7b20832cbb003f5fe5630905c228", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1507 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1508 }\n \n #include <list>\n "}, {"sha": "fb32ee497f52dcae8883fecfa832ad9bcce97174", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1507 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1508 }\n \n #include <list>\n #include <utility>"}, {"sha": "d34be99e155b607ff472098100e487cdabeb3496", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7897a1c0294162b5fedef308588f3f354199fd04/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=7897a1c0294162b5fedef308588f3f354199fd04", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1507 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1508 }\n \n #include <list>\n "}]}