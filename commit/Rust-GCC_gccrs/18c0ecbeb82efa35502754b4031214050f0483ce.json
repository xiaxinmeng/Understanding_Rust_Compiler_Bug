{"sha": "18c0ecbeb82efa35502754b4031214050f0483ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjMGVjYmViODJlZmEzNTUwMjc1NGI0MDMxMjE0MDUwZjA0ODNjZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-02-12T13:28:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-02-12T13:28:13Z"}, "message": "[multiple changes]\n\n2004-02-12  Olivier Hainque  <hainque@act-europe.fr>\n\n\t* decl.c (components_to_record): Don't claim that the internal fields\n\twe make to hold the variant parts are semantically addressable, because\n\tthey are not.\n\n\t* exp_pakd.adb (Create_Packed_Array_Type): Rename Esiz into PASize and\n\tadjust the comment describing the modular type form when we can use it.\n\t(Install_PAT): Account for the Esiz renaming.\n\n\t* init.c (__gnat_error_handler for alpha-tru64): Arrange to clear the\n\tsc_onstack context indication before raising the exception to which\n\tthe signal is mapped. Allows better handling of later signals possibly\n\ttriggered by the resumed user code if the exception is handled.\n\n2004-02-12  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* 5zinit.adb: Removed, no longer used.\n\n2004-02-12  Robert Dewar  <dewar@gnat.com>\n\n\t* ali.adb: Remove separating space between parameters on R line. Makes\n\tformat consistent with format used by the binder for Set_Globals call.\n\n\t* atree.ads, atree.adb: Minor reformatting (new function header format)\n\n\t* bindgen.adb: Add Run-Time Globals documentation section containing\n\tdetailed documentation of the globals passed from the binder file to\n\tthe run time.\n\n\t* gnatls.adb: Minor reformatting\n\n\t* init.c (__gnat_set_globals): Add note pointing to documentation in\n\tbindgen.\n\n\t* lib-writ.ads, lib-writ.adb: Remove separating space between\n\tparameters on R line.\n\tMakes format consistent with format used by the binder for Set_Globals\n\tcall.\n\n\t* osint.ads: Add 2004 to copyright notice\n\tMinor reformatting\n\n\t* snames.ads: Correct capitalization of FIFO_Within_Priorities\n\tNoticed during code reading, documentation issue only\n\n\t* usage.adb: Remove junk line for obsolete C switch\n\tNoticed during code reading\n\n2004-02-12  Vincent Celier  <celier@gnat.com>\n\n\t* bld.adb (Process_Declarative_Items): For Source_Dirs call gprcmd\n\textend for each directory, so that multiple /** directories are\n\textended individually.\n\t(Recursive_Process): Set the default for LANGUAGES to ada\n\n\t* gprcmd.adb: Define new command \"ignore\", to do nothing.\n\tImplement new comment \"path\".\n\n\t* Makefile.generic: Suppress output when SILENT is set\n\tMake sure that when compiler for C/C++ is gcc, the correct -x switch is\n\tused, so that the correct compiler is invoked.\n\tWhen compiler is gcc/g++, put search path in env vars C_INCLUDE_PATH/\n\tCXX_INCLUDE_PATH, to avoid failure with too long command lines.\n\n2004-02-12  Jerome Guitton  <guitton@act-europe.fr>\n\n\t* Makefile.in: Clean ups and remove obsolete targets.\n\n2004-02-12  Ed Schonberg  <schonberg@gnat.com>\n\n\t* exp_ch5.adb: Remove Possible_Unligned_Slice, in favor of the similar\n\tpredicate declared in exp_util.\n\n\t* exp_util.adb: Add comments.\n\n\t* sem_ch10.adb (Analyze_Subunit): Remove ultimate parent unit from\n\tvisibility before compiling context of the subunit.\n\n\t* sem_res.adb (Check_Parameterless_Call): If the context expects a\n\tvalue but the name is a procedure, do not attempt to analyze as a call,\n\tin order to obtain more telling diagnostics.\n\n\t* sem_util.adb (Wrong_Type): Further enhancement to diagnose missing\n\t'Access on parameterless function calls.\n\t(Normalize_Actuals): For a parameterless function call with missing\n\tactuals, defer diagnostic until resolution of enclosing call.\n\n\t* sem_util.adb (Wrong_Type): If the context type is an access to\n\tsubprogram and the expression is a procedure name, suggest a missing\n\t'attribute.\n\nFrom-SVN: r77704", "tree": {"sha": "3067241056d7811b5be0253db902c31399aabba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3067241056d7811b5be0253db902c31399aabba2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c0ecbeb82efa35502754b4031214050f0483ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c0ecbeb82efa35502754b4031214050f0483ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c0ecbeb82efa35502754b4031214050f0483ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c0ecbeb82efa35502754b4031214050f0483ce/comments", "author": null, "committer": null, "parents": [{"sha": "a980dd9b54d1bdee4a331b307980b75857c3f9f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a980dd9b54d1bdee4a331b307980b75857c3f9f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a980dd9b54d1bdee4a331b307980b75857c3f9f1"}], "stats": {"total": 965, "additions": 446, "deletions": 519}, "files": [{"sha": "15445696f4d65c3bab61732cba6a2bdd82962fd7", "filename": "gcc/ada/5zinit.adb", "status": "removed", "additions": 0, "deletions": 319, "changes": 319, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a980dd9b54d1bdee4a331b307980b75857c3f9f1/gcc%2Fada%2F5zinit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a980dd9b54d1bdee4a331b307980b75857c3f9f1/gcc%2Fada%2F5zinit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zinit.adb?ref=a980dd9b54d1bdee4a331b307980b75857c3f9f1", "patch": "@@ -1,319 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS              --\n---                                                                          --\n---                             S Y S T E M . I N I T                        --\n---                                                                          --\n---                                   B o d y                                --\n---                                                                          --\n---          Copyright (C) 2003-2004 Free Software Foundation, Inc.          --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n--- MA 02111-1307, USA.                                                      --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Level A cert version of this package for AE653\n-\n-with Interfaces.C;\n---  Used for int and other types\n-\n-with Ada.Exceptions;\n---  Used for Raise_Exception\n-\n-package body System.Init is\n-\n-   use Ada.Exceptions;\n-   use Interfaces.C;\n-\n-   --------------------------\n-   --  Signal Definitions  --\n-   --------------------------\n-\n-   NSIG : constant := 32;\n-   --  Number of signals on the target OS\n-\n-   type Signal is new int range 0 .. Interfaces.C.\"-\" (NSIG, 1);\n-\n-   SIGILL  : constant :=  4; --  illegal instruction (not reset)\n-   SIGFPE  : constant :=  8; --  floating point exception\n-   SIGBUS  : constant := 10; --  bus error\n-   SIGSEGV : constant := 11; --  segmentation violation\n-\n-   type sigset_t is new long;\n-\n-   SIG_SETMASK : constant := 3;\n-   SA_ONSTACK   : constant := 16#0004#;\n-\n-   type struct_sigaction is record\n-      sa_handler : System.Address;\n-      sa_mask    : sigset_t;\n-      sa_flags   : int;\n-   end record;\n-   pragma Convention (C, struct_sigaction);\n-   type struct_sigaction_ptr is access all struct_sigaction;\n-\n-   function sigdelset (set : access sigset_t; sig : Signal) return int;\n-   pragma Import (C, sigdelset, \"sigdelset\");\n-\n-   function sigemptyset (set : access sigset_t) return int;\n-   pragma Import (C, sigemptyset, \"sigemptyset\");\n-\n-   function sigaction\n-     (sig  : Signal;\n-      act  : struct_sigaction_ptr;\n-      oact : struct_sigaction_ptr) return int;\n-   pragma Import (C, sigaction, \"sigaction\");\n-\n-   type sigset_t_ptr is access all sigset_t;\n-\n-   function pthread_sigmask\n-     (how  : int;\n-      set  : sigset_t_ptr;\n-      oset : sigset_t_ptr) return int;\n-   pragma Import (C, pthread_sigmask, \"sigprocmask\");\n-\n-   -------------------------------\n-   --  Binder Generated Values  --\n-   -------------------------------\n-\n-   Gl_Main_Priority : Integer := -1;\n-   pragma Export (C, Gl_Main_Priority, \"__gl_main_priority\");\n-\n-   Gl_Time_Slice_Val : Integer := -1;\n-   pragma Export (C, Gl_Time_Slice_Val, \"__gl_time_slice_val\");\n-\n-   Gl_Wc_Encoding : Character := 'n';\n-   pragma Export (C, Gl_Wc_Encoding, \"__gl_wc_encoding\");\n-\n-   Gl_Locking_Policy : Character := ' ';\n-   pragma Export (C, Gl_Locking_Policy, \"__gl_locking_policy\");\n-\n-   Gl_Queuing_Policy : Character := ' ';\n-   pragma Export (C, Gl_Queuing_Policy, \"__gl_queuing_policy\");\n-\n-   Gl_Task_Dispatching_Policy : Character := ' ';\n-   pragma Export (C, Gl_Task_Dispatching_Policy,\n-                     \"__gl_task_dispatching_policy\");\n-\n-   Gl_Restrictions : Address := Null_Address;\n-   pragma Export (C, Gl_Restrictions, \"__gl_restrictions\");\n-\n-   Gl_Interrupt_States : Address := Null_Address;\n-   pragma Export (C, Gl_Interrupt_States, \"__gl_interrupt_states\");\n-\n-   Gl_Num_Interrupt_States : Integer := 0;\n-   pragma Export (C, Gl_Num_Interrupt_States, \"__gl_num_interrupt_states\");\n-\n-   Gl_Unreserve_All_Interrupts : Integer := 0;\n-   pragma Export (C, Gl_Unreserve_All_Interrupts,\n-                  \"__gl_unreserve_all_interrupts\");\n-\n-   Gl_Exception_Tracebacks : Integer := 0;\n-   pragma Export (C, Gl_Exception_Tracebacks, \"__gl_exception_tracebacks\");\n-\n-   Gl_Zero_Cost_Exceptions : Integer := 0;\n-   pragma Export (C, Gl_Zero_Cost_Exceptions, \"__gl_zero_cost_exceptions\");\n-\n-   Already_Called : Boolean := False;\n-\n-   Handler_Installed : Integer := 0;\n-   pragma Export (C, Handler_Installed, \"__gnat_handler_installed\");\n-   --  Indication of whether synchronous signal handlers have already been\n-   --  installed by a previous call to Install_Handler.\n-\n-   ------------------------\n-   --  Local procedures  --\n-   ------------------------\n-\n-   procedure GNAT_Error_Handler (Sig : Signal);\n-   --  Common procedure that is executed when a SIGFPE, SIGILL,\n-   --  SIGSEGV, or SIGBUS is captured.\n-\n-   ------------------------\n-   -- GNAT_Error_Handler --\n-   ------------------------\n-\n-   procedure GNAT_Error_Handler (Sig : Signal) is\n-      Mask : aliased sigset_t;\n-\n-      Result : int;\n-      pragma Unreferenced (Result);\n-\n-   begin\n-      --  VxWorks will always mask out the signal during the signal\n-      --  handler and will reenable it on a longjmp.  GNAT does not\n-      --  generate a longjmp to return from a signal handler so the\n-      --  signal will still be masked unless we unmask it.\n-\n-      Result := pthread_sigmask (SIG_SETMASK, null, Mask'Unchecked_Access);\n-      Result := sigdelset (Mask'Access, Sig);\n-      Result := pthread_sigmask (SIG_SETMASK, Mask'Unchecked_Access, null);\n-\n-      case Sig is\n-         when SIGFPE =>\n-            Raise_Exception (Constraint_Error'Identity, \"SIGFPE\");\n-         when SIGILL =>\n-            Raise_Exception (Constraint_Error'Identity, \"SIGILL\");\n-         when SIGSEGV =>\n-            Raise_Exception\n-              (Program_Error'Identity,\n-               \"erroneous memory access\");\n-         when SIGBUS =>\n-            Raise_Exception\n-              (Storage_Error'Identity,\n-               \"stack overflow or SIGBUS\");\n-         when others =>\n-            Raise_Exception (Program_Error'Identity, \"unhandled signal\");\n-      end case;\n-   end GNAT_Error_Handler;\n-\n-   -----------------\n-   -- Set_Globals --\n-   -----------------\n-\n-   --  This routine is called from the binder generated main program.  It\n-   --  copies the values for global quantities computed by the binder\n-   --  into the following global locations. The reason that we go through\n-   --  this copy, rather than just define the global locations in the\n-   --  binder generated file, is that they are referenced from the\n-   --  runtime, which may be in a shared library, and the binder file is\n-   --  not in the shared library. Global references across library\n-   --  boundaries like this are not handled correctly in all systems.\n-\n-   procedure Set_Globals\n-     (Main_Priority            : Integer;\n-      Time_Slice_Value         : Integer;\n-      WC_Encoding              : Character;\n-      Locking_Policy           : Character;\n-      Queuing_Policy           : Character;\n-      Task_Dispatching_Policy  : Character;\n-      Restrictions             : System.Address;\n-      Interrupt_States         : System.Address;\n-      Num_Interrupt_States     : Integer;\n-      Unreserve_All_Interrupts : Integer;\n-      Exception_Tracebacks     : Integer;\n-      Zero_Cost_Exceptions     : Integer)\n-   is\n-   begin\n-      --  If this procedure has been already called once, check that the\n-      --  arguments in this call are consistent with the ones in the\n-      --  previous calls. Otherwise, raise a Program_Error exception.\n-\n-      --  We do not check for consistency of the wide character encoding\n-      --  method. This default affects only Wide_Text_IO where no\n-      --  explicit coding method is given, and there is no particular\n-      --  reason to let this default be affected by the source\n-      --  representation of a library in any case.\n-\n-      --  We do not check either for the consistency of exception tracebacks,\n-      --  because exception tracebacks are not normally set in Stand-Alone\n-      --  libraries. If a library or the main program set the exception\n-      --  tracebacks, then they are never reset afterwards (see below).\n-\n-      --  The value of main_priority is meaningful only when we are\n-      --  invoked from the main program elaboration routine of an Ada\n-      --  application. Checking the consistency of this parameter should\n-      --  therefore not be done. Since it is assured that the main\n-      --  program elaboration will always invoke this procedure before\n-      --  any library elaboration routine, only the value of\n-      --  main_priority during the first call should be taken into\n-      --  account and all the subsequent ones should be ignored. Note\n-      --  that the case where the main program is not written in Ada is\n-      --  also properly handled, since the default value will then be\n-      --  used for this parameter.\n-\n-      --  For identical reasons, the consistency of time_slice_val should\n-      --  not be checked.\n-\n-      if Already_Called then\n-         if (Gl_Locking_Policy           /= Locking_Policy)           or else\n-            (Gl_Queuing_Policy           /= Queuing_Policy)           or else\n-            (Gl_Task_Dispatching_Policy  /= Task_Dispatching_Policy)  or else\n-            (Gl_Unreserve_All_Interrupts /= Unreserve_All_Interrupts) or else\n-            (Gl_Exception_Tracebacks     /= Exception_Tracebacks)     or else\n-            (Gl_Zero_Cost_Exceptions     /= Zero_Cost_Exceptions)\n-         then\n-            raise Program_Error;\n-         end if;\n-\n-         --  If either a library or the main program set the exception\n-         --  traceback flag, it is never reset later.\n-\n-         if Gl_Exception_Tracebacks /= 0 then\n-            Gl_Exception_Tracebacks := Exception_Tracebacks;\n-         end if;\n-\n-      else\n-         Already_Called := True;\n-\n-         Gl_Main_Priority            := Main_Priority;\n-         Gl_Time_Slice_Val           := Time_Slice_Value;\n-         Gl_Wc_Encoding              := WC_Encoding;\n-         Gl_Locking_Policy           := Locking_Policy;\n-         Gl_Queuing_Policy           := Queuing_Policy;\n-         Gl_Task_Dispatching_Policy  := Task_Dispatching_Policy;\n-         Gl_Restrictions             := Restrictions;\n-         Gl_Interrupt_States         := Interrupt_States;\n-         Gl_Num_Interrupt_States     := Num_Interrupt_States;\n-         Gl_Unreserve_All_Interrupts := Unreserve_All_Interrupts;\n-         Gl_Exception_Tracebacks     := Exception_Tracebacks;\n-         Gl_Zero_Cost_Exceptions     := Zero_Cost_Exceptions;\n-      end if;\n-   end Set_Globals;\n-\n-   ---------------------\n-   -- Install_Handler --\n-   ---------------------\n-\n-   procedure Install_Handler is\n-      Mask          : aliased sigset_t;\n-      Signal_Action : aliased struct_sigaction;\n-\n-      Result : Interfaces.C.int;\n-      pragma Unreferenced (Result);\n-\n-   begin\n-      --  Set up signal handler to map synchronous signals to appropriate\n-      --  exceptions. Make sure that the handler isn't interrupted by\n-      --  another signal that might cause a scheduling event!\n-\n-      Signal_Action.sa_handler := GNAT_Error_Handler'Address;\n-      Signal_Action.sa_flags := SA_ONSTACK;\n-      Result := sigemptyset (Mask'Access);\n-      Signal_Action.sa_mask := Mask;\n-\n-      Result := sigaction\n-        (Signal (SIGFPE), Signal_Action'Unchecked_Access, null);\n-\n-      Result := sigaction\n-        (Signal (SIGILL), Signal_Action'Unchecked_Access, null);\n-\n-      Result := sigaction\n-        (Signal (SIGSEGV), Signal_Action'Unchecked_Access, null);\n-\n-      Result := sigaction\n-        (Signal (SIGBUS), Signal_Action'Unchecked_Access, null);\n-\n-      Handler_Installed := 1;\n-   end Install_Handler;\n-\n-end System.Init;"}, {"sha": "6243ab2a799c0560b032c735e91eb643e45c2481", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -1,3 +1,95 @@\n+2004-02-12  Olivier Hainque  <hainque@act-europe.fr>\n+\n+\t* decl.c (components_to_record): Don't claim that the internal fields\n+\twe make to hold the variant parts are semantically addressable, because\n+\tthey are not.\n+\n+\t* exp_pakd.adb (Create_Packed_Array_Type): Rename Esiz into PASize and\n+\tadjust the comment describing the modular type form when we can use it.\n+\t(Install_PAT): Account for the Esiz renaming.\n+\n+\t* init.c (__gnat_error_handler for alpha-tru64): Arrange to clear the\n+\tsc_onstack context indication before raising the exception to which\n+\tthe signal is mapped. Allows better handling of later signals possibly\n+\ttriggered by the resumed user code if the exception is handled.\n+\n+2004-02-12  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t* 5zinit.adb: Removed, no longer used.\n+\n+2004-02-12  Robert Dewar  <dewar@gnat.com>\n+\n+\t* ali.adb: Remove separating space between parameters on R line. Makes\n+\tformat consistent with format used by the binder for Set_Globals call.\n+\n+\t* atree.ads, atree.adb: Minor reformatting (new function header format)\n+\n+\t* bindgen.adb: Add Run-Time Globals documentation section containing\n+\tdetailed documentation of the globals passed from the binder file to\n+\tthe run time.\n+\n+\t* gnatls.adb: Minor reformatting\n+\n+\t* init.c (__gnat_set_globals): Add note pointing to documentation in\n+\tbindgen.\n+\n+\t* lib-writ.ads, lib-writ.adb: Remove separating space between\n+\tparameters on R line.\n+\tMakes format consistent with format used by the binder for Set_Globals\n+\tcall.\n+\n+\t* osint.ads: Add 2004 to copyright notice\n+\tMinor reformatting\n+\n+\t* snames.ads: Correct capitalization of FIFO_Within_Priorities\n+\tNoticed during code reading, documentation issue only\n+\n+\t* usage.adb: Remove junk line for obsolete C switch\n+\tNoticed during code reading\n+\n+2004-02-12  Vincent Celier  <celier@gnat.com>\n+\n+\t* bld.adb (Process_Declarative_Items): For Source_Dirs call gprcmd\n+\textend for each directory, so that multiple /** directories are\n+\textended individually.\n+\t(Recursive_Process): Set the default for LANGUAGES to ada\n+\n+\t* gprcmd.adb: Define new command \"ignore\", to do nothing.\n+\tImplement new comment \"path\".\n+\n+\t* Makefile.generic: Suppress output when SILENT is set\n+\tMake sure that when compiler for C/C++ is gcc, the correct -x switch is\n+\tused, so that the correct compiler is invoked.\n+\tWhen compiler is gcc/g++, put search path in env vars C_INCLUDE_PATH/\n+\tCXX_INCLUDE_PATH, to avoid failure with too long command lines.\n+\n+2004-02-12  Jerome Guitton  <guitton@act-europe.fr>\n+\n+\t* Makefile.in: Clean ups and remove obsolete targets.\n+\n+2004-02-12  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_ch5.adb: Remove Possible_Unligned_Slice, in favor of the similar\n+\tpredicate declared in exp_util.\n+\n+\t* exp_util.adb: Add comments.\n+\n+\t* sem_ch10.adb (Analyze_Subunit): Remove ultimate parent unit from\n+\tvisibility before compiling context of the subunit.\n+\n+\t* sem_res.adb (Check_Parameterless_Call): If the context expects a\n+\tvalue but the name is a procedure, do not attempt to analyze as a call,\n+\tin order to obtain more telling diagnostics.\n+\n+\t* sem_util.adb (Wrong_Type): Further enhancement to diagnose missing\n+\t'Access on parameterless function calls.\n+\t(Normalize_Actuals): For a parameterless function call with missing\n+\tactuals, defer diagnostic until resolution of enclosing call.\n+\n+\t* sem_util.adb (Wrong_Type): If the context type is an access to\n+\tsubprogram and the expression is a procedure name, suggest a missing\n+\t'attribute.\n+\n 2004-02-10  Arnaud Charlet  <charlet@act-europe.fr>,\n \t    Nathanael Nerode  <neroden@gcc.gnu.org>\n "}, {"sha": "61d0ff9e839c8246ebd168f763f4c5b579d1d154", "filename": "gcc/ada/Makefile.generic", "status": "modified", "additions": 63, "deletions": 17, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2FMakefile.generic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2FMakefile.generic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.generic?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -9,12 +9,12 @@\n # it under the terms of the GNU General Public License as published by\n # the Free Software Foundation; either version 2, or (at your option)\n # any later version.\n- \n+\n # GCC is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n # GNU General Public License for more details.\n- \n+\n # You should have received a copy of the GNU General Public License\n # along with GCC; see the file COPYING.  If not, write to\n # the Free Software Foundation, 59 Temple Place - Suite 330,\n@@ -64,7 +64,7 @@\n # CXX              name of the C++ compiler (optional, default to gcc)\n # AR_CMD           command to create an archive (optional, default to \"ar rc\")\n # AR_EXT           file extension of an archive (optional, default to \".a\")\n-# RANLIB        command to generate an index (optional, default to \"ranlib\")\n+# RANLIB           command to generate an index (optional, default to \"ranlib\")\n # GNATMAKE         name of the GNAT builder (optional, default to \"gnatmake\")\n # ADAFLAGS         additional Ada compilation switches, e.g \"-gnatf\" (optional)\n # CFLAGS           default C compilation switches, e.g \"-O2 -g\" (optional)\n@@ -78,6 +78,9 @@\n # PROJECT_FILE     name of the project file, without the .gpr extension\n # DEPS_PROJECTS    list of project dependencies (optional)\n \n+# SILENT           (optional) when defined, make -s will not output anything\n+#                  when all commands are successful.\n+\n # Set the source search path for C and C++ if needed\n \n ifndef MAIN\n@@ -124,7 +127,7 @@ ifndef RANLIB\n endif\n \n ifndef GNATMAKE\n-   GNATMAKE=gnatmake\n+   GNATMAKE:=gnatmake\n endif\n \n ifndef ARCHIVE\n@@ -135,6 +138,39 @@ ifeq ($(EXEC_DIR),)\n    EXEC_DIR=$(OBJ_DIR)\n endif\n \n+# Define display to echo only when SILENT is not defined\n+\n+ifdef SILENT\n+define display\n+   @gprcmd ignore\n+endef\n+\n+else\n+define display\n+   @echo\n+endef\n+endif\n+\n+# Make sure gnatmake is called silently when SILENT is set\n+ifdef SILENT\n+   GNATMAKE:=$(GNATMAKE) -q\n+endif\n+\n+# If C/C++ compiler is gcc, make sure gcc is called with the switch indicating\n+# the language, in case the extension is not standard.\n+\n+ifeq ($(strip $(filter-out %gcc,$(CC))),)\n+   C_Compiler=$(CC) -x c\n+else\n+   C_Compiler=$(CC)\n+endif\n+\n+ifeq ($(strip $(filter-out %gcc %g++,$(CXX))),)\n+   CXX_Compiler=$(CXX) -x c++\n+else\n+   CXX_Compiler=$(CXX)\n+endif\n+\n # Set the object search path\n \n vpath %$(OBJ_EXT) $(OBJ_DIR)\n@@ -222,8 +258,8 @@ else\n endif\n \n C_INCLUDES := $(foreach name,$(SRC_DIRS),-I$(name))\n-ALL_CFLAGS = $(CFLAGS) $(C_INCLUDES) $(DEP_CFLAGS)\n-ALL_CXXFLAGS = $(CXXFLAGS) $(C_INCLUDES) $(DEP_CFLAGS)\n+ALL_CFLAGS = $(CFLAGS) $(DEP_CFLAGS)\n+ALL_CXXFLAGS = $(CXXFLAGS) $(DEP_CFLAGS)\n LDFLAGS := $(LIBS) $(LDFLAGS)\n \n # Compute list of objects based on languages\n@@ -276,7 +312,7 @@ else\n internal-compile: lib$(PROJECT_BASE)$(AR_EXT)\n \n lib$(PROJECT_BASE)$(AR_EXT): $(OBJECTS)\n-\t@echo creating archive file for $(PROJECT_BASE)\n+\t@$(display) creating archive file for $(PROJECT_BASE)\n \tcd $(OBJ_DIR); $(AR_CMD) $@ $(strip $(OBJECTS))\n \t-$(RANLIB) $(OBJ_DIR)/$@\n \n@@ -313,7 +349,7 @@ else\n \n link: $(EXEC_DIR)/$(EXEC) archive-objects\n $(EXEC_DIR)/$(EXEC): $(OBJ_FILES)\n-\t@echo $(LINKER) -o $(EXEC_DIR)/$(EXEC) $(OBJ_DIR)/$(MAIN_OBJECT) $(LDFLAGS)\n+\t@$(display) $(LINKER) -o $(EXEC_DIR)/$(EXEC) $(OBJ_DIR)/$(MAIN_OBJECT) $(LDFLAGS)\n \t$(LINKER) -o $(EXEC_DIR)/$(EXEC) $(OBJ_DIR)/$(MAIN_OBJECT) $(LDFLAGS)\n endif\n endif\n@@ -327,23 +363,25 @@ ifeq ($(strip $(filter-out c c++ ada,$(LANGUAGES))),)\n ifeq ($(MAIN),ada)\n # Ada main\n link: $(LINKER) archive-objects force\n-\t$(GNATMAKE) -b -l -P$(PROJECT_FILE) $(ADA_SOURCES) \\\n+\t@(display) $(GNATMAKE) -b -l -P$(PROJECT_FILE) $(ADA_SOURCES)\n+\t@$(GNATMAKE) -b -l -P$(PROJECT_FILE) $(ADA_SOURCES) \\\n \t\t -largs $(LARGS) $(LDFLAGS)\n \n internal-build: $(LINKER) archive-objects force\n-\t@echo $(GNATMAKE) -P$(PROJECT_FILE) $(ADA_SOURCES) $(EXEC_RULE) $(ADAFLAGS)\n+\t@$(display) $(GNATMAKE) -P$(PROJECT_FILE) $(ADA_SOURCES) $(EXEC_RULE) $(ADAFLAGS)\n \t@$(GNATMAKE) -P$(PROJECT_FILE) $(EXEC_RULE) $(ADA_SOURCES) $(ADAFLAGS) \\\n \t -largs $(LARGS) $(LDFLAGS)\n \n else\n # C/C++ main\n \n link: $(LINKER) archive-objects force\n-\t$(GNATMAKE) $(EXEC_RULE) -B -P$(PROJECT_FILE) $(ADA_SOURCES) \\\n+\t@(display) $(GNATMAKE) $(EXEC_RULE) -B -P$(PROJECT_FILE) $(ADA_SOURCES)\n+\t@$(GNATMAKE) $(EXEC_RULE) -B -P$(PROJECT_FILE) $(ADA_SOURCES) \\\n \t\t -largs $(MAIN_OBJECT) $(LARGS) $(LDFLAGS)\n \n internal-build: $(LINKER) archive-objects force\n-\t@echo $(GNATMAKE) -B -P$(PROJECT_FILE) $(ADA_SOURCES) $(EXEC_RULE) $(ADAFLAGS)\n+\t@$(display) $(GNATMAKE) -B -P$(PROJECT_FILE) $(ADA_SOURCES) $(EXEC_RULE) $(ADAFLAGS)\n \t@$(GNATMAKE) $(EXEC_RULE) \\\n \t\t -B -P$(PROJECT_FILE) $(ADA_SOURCES) $(ADAFLAGS) \\\n \t\t -largs $(MAIN_OBJECT) $(LARGS) $(LDFLAGS)\n@@ -360,7 +398,12 @@ endif\n # Automatic handling of dependencies\n \n ifeq ($(strip $(filter-out %gcc %g++,$(CC) $(CXX))),)\n-# Compiler is GCC, take avantage of the preprocessor option -MD\n+# Compiler is GCC, take avantage of the preprocessor option -MD and\n+# C*_INCLUDE_PATH environment variables\n+\n+export C_INCLUDE_PATH:=$(shell gprcmd path $(SRC_DIRS))$(C_INCLUDE_PATH)\n+export CXX_INCLUDE_PATH:=$(shell gprcmd path $(SRC_DIRS))$(CXX_INCLUDE_PATH)\n+\n DEP_CFLAGS = -Wp,-MD,$(OBJ_DIR)/$(*F).d\n \n define post-compile\n@@ -375,6 +418,9 @@ $(OBJ_DIR)/%.d:\n else\n # Compiler unknown, use a more general approach based on the output of $(CC) -M\n \n+ALL_CFLAGS := $(ALL_CFLAGS) $(C_INCLUDES)\n+ALL_CXXFLAGS := $(ALL_CXXFLAGS) $(C_INCLUDES)\n+\n DEP_FLAGS  = -M\n DEP_CFLAGS =\n \n@@ -400,17 +446,17 @@ endif\n \n # Compile C files individually\n %$(OBJ_EXT) : %$(C_EXT)\n-\t@echo $(CC) -c $(CFLAGS) $< -o $(OBJ_DIR)/$@\n+\t@$(display) $(C_Compiler) -c $(CFLAGS) $< -o $(OBJ_DIR)/$@\n ifndef FAKE_COMPILE\n-\t@$(CC) -c $(ALL_CFLAGS) $< -o $(OBJ_DIR)/$@\n+\t@$(C_Compiler) -c $(ALL_CFLAGS) $< -o $(OBJ_DIR)/$@\n \t@$(post-compile)\n endif\n \n # Compile C++ files individually\n %$(OBJ_EXT) : %$(CXX_EXT)\n-\t@echo $(CXX) -c $(CXXFLAGS) $< -o $(OBJ_DIR)/$@\n+\t@$(display) $(CXX_Compiler) -c $(CXXFLAGS) $< -o $(OBJ_DIR)/$@\n ifndef FAKE_COMPILE\n-\t@$(CXX) -c $(ALL_CXXFLAGS) $< -o $(OBJ_DIR)/$@\n+\t@$(CXX_Compiler) -c $(ALL_CXXFLAGS) $< -o $(OBJ_DIR)/$@\n \t@$(post-compile)\n endif\n "}, {"sha": "53df983cc7b93eb4c9102540e14c65f0e07d81ac", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -1861,27 +1861,18 @@ rts-zfp: force\n \t   RTS_NAME=zfp RTS_SRCS=\"$(HIE_SOURCES)\" \\\n \t   RTS_TARGET_PAIRS=\"$(HIE_NONE_TARGET_PAIRS)\" \\\n \t   COMPILABLE_SOURCES=\"$(COMPILABLE_HIE_SOURCES)\" \n-\t-$(GNATMAKE) -Prts-zfp/zfp.gpr --GCC=\"../../../xgcc -B../../../\"\n+\t$(GNATMAKE) -Prts-zfp/zfp.gpr --GCC=\"../../../xgcc -B../../../\"\n \tcd rts-zfp/adalib/ ; $(AR) r libgnat.a *.o\n \t$(RM) rts-zfp/adalib/*.o\n \t$(CHMOD) a-wx rts-zfp/adalib/*.ali\n \t$(CHMOD) a-wx rts-zfp/adalib/libgnat.a\n \n-rts-none: force\n-\t$(MAKE) $(FLAGS_TO_PASS) prepare-rts \\\n-\t   RTS_NAME=none RTS_SRCS=\"$(HIE_SOURCES)\" \\\n-\t   RTS_TARGET_PAIRS=\"$(HIE_NONE_TARGET_PAIRS)\" \\\n-\t   COMPILABLE_SOURCES=\"$(COMPILABLE_HIE_SOURCES)\" \n-\t-$(GNATMAKE) -Prts-none/none.gpr --GCC=\"../../../xgcc -B../../../\"\n-\t$(RM) rts-none/adalib/*.o\n-\t$(CHMOD) a-wx rts-none/adalib/*.ali\n-\n rts-ravenscar: force\n \t$(MAKE)  $(FLAGS_TO_PASS) prepare-rts \\\n \t   RTS_NAME=ravenscar RTS_SRCS=\"$(RAVEN_SOURCES)\" \\\n \t   RTS_TARGET_PAIRS=\"$(HIE_RAVEN_TARGET_PAIRS)\" \\\n \t   COMPILABLE_SOURCES=\"$(COMPILABLE_RAVEN_SOURCES)\" \n-\t-$(GNATMAKE) -Prts-ravenscar/ravenscar.gpr \\\n+\t$(GNATMAKE) -Prts-ravenscar/ravenscar.gpr \\\n \t   --GCC=\"../../../xgcc -B../../../\"\n \tcd rts-ravenscar/adalib/ ; $(AR) r libgnat.a *.o\n \t$(RM) rts-ravenscar/adalib/*.o"}, {"sha": "06055bad6a6234143656114e7e1a3a534e4244a6", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -991,10 +991,6 @@ package body ALI is\n                end case;\n             end loop;\n \n-            --  Skip separating space\n-\n-            Checkc (' ');\n-\n             --  Acquire information for parameter restrictions\n \n             for RP in All_Parameter_Restrictions loop"}, {"sha": "d410a33c1088346c7eb256d4a6437d02b5b04650", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -1032,8 +1032,7 @@ package body Atree is\n      (Source    : Node_Id;\n       Map       : Elist_Id := No_Elist;\n       New_Sloc  : Source_Ptr := No_Location;\n-      New_Scope : Entity_Id := Empty)\n-      return      Node_Id\n+      New_Scope : Entity_Id := Empty) return Node_Id\n    is\n       Actual_Map : Elist_Id := Map;\n       --  This is the actual map for the copy. It is initialized with the\n@@ -1053,8 +1052,7 @@ package body Atree is\n       --  Builds hash tables (number of elements >= threshold value)\n \n       function Copy_Elist_With_Replacement\n-        (Old_Elist : Elist_Id)\n-         return      Elist_Id;\n+        (Old_Elist : Elist_Id) return Elist_Id;\n       --  Called during second phase to copy element list doing replacements.\n \n       procedure Copy_Itype_With_Replacement (New_Itype : Entity_Id);\n@@ -1167,8 +1165,7 @@ package body Atree is\n       ---------------------------------\n \n       function Copy_Elist_With_Replacement\n-        (Old_Elist : Elist_Id)\n-         return      Elist_Id\n+        (Old_Elist : Elist_Id) return Elist_Id\n       is\n          M         : Elmt_Id;\n          New_Elist : Elist_Id;\n@@ -1243,8 +1240,7 @@ package body Atree is\n       --------------------------------\n \n       function Copy_List_With_Replacement\n-        (Old_List : List_Id)\n-         return     List_Id\n+        (Old_List : List_Id) return List_Id\n       is\n          New_List : List_Id;\n          E        : Node_Id;\n@@ -1270,14 +1266,12 @@ package body Atree is\n       --------------------------------\n \n       function Copy_Node_With_Replacement\n-        (Old_Node : Node_Id)\n-         return     Node_Id\n+        (Old_Node : Node_Id) return Node_Id\n       is\n          New_Node : Node_Id;\n \n          function Copy_Field_With_Replacement\n-           (Field : Union_Id)\n-            return  Union_Id;\n+           (Field : Union_Id) return Union_Id;\n          --  Given Field, which is a field of Old_Node, return a copy of it\n          --  if it is a syntactic field (i.e. its parent is Node), setting\n          --  the parent of the copy to poit to New_Node. Otherwise returns\n@@ -1288,8 +1282,7 @@ package body Atree is\n          ---------------------------------\n \n          function Copy_Field_With_Replacement\n-           (Field : Union_Id)\n-            return  Union_Id\n+           (Field : Union_Id) return Union_Id\n          is\n          begin\n             if Field = Union_Id (Empty) then\n@@ -1829,8 +1822,7 @@ package body Atree is\n \n    function New_Entity\n      (New_Node_Kind : Node_Kind;\n-      New_Sloc      : Source_Ptr)\n-      return          Entity_Id\n+      New_Sloc      : Source_Ptr) return Entity_Id\n    is\n       Ent : Entity_Id;\n \n@@ -1900,8 +1892,7 @@ package body Atree is\n \n    function New_Node\n      (New_Node_Kind : Node_Kind;\n-      New_Sloc      : Source_Ptr)\n-      return          Node_Id\n+      New_Sloc      : Source_Ptr) return Node_Id\n    is\n       Nod : Node_Id;\n "}, {"sha": "501c1830fa40a935c4abedb22fc31edc6b0263b0", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -332,8 +332,7 @@ package Atree is\n \n    function New_Node\n      (New_Node_Kind : Node_Kind;\n-      New_Sloc      : Source_Ptr)\n-      return          Node_Id;\n+      New_Sloc      : Source_Ptr) return Node_Id;\n    --  Allocates a completely new node with the given node type and source\n    --  location values. All other fields are set to their standard defaults:\n    --\n@@ -351,8 +350,7 @@ package Atree is\n \n    function New_Entity\n      (New_Node_Kind : Node_Kind;\n-      New_Sloc      : Source_Ptr)\n-      return          Entity_Id;\n+      New_Sloc      : Source_Ptr) return Entity_Id;\n    --  Similar to New_Node, except that it is used only for entity nodes\n    --  and returns an extended node.\n \n@@ -427,8 +425,7 @@ package Atree is\n      (Source    : Node_Id;\n       Map       : Elist_Id := No_Elist;\n       New_Sloc  : Source_Ptr := No_Location;\n-      New_Scope : Entity_Id := Empty)\n-      return      Node_Id;\n+      New_Scope : Entity_Id := Empty) return Node_Id;\n    --  Given a node that is the root of a subtree, Copy_Tree copies the entire\n    --  syntactic subtree, including recursively any descendents whose parent\n    --  field references a copied node (descendents not linked to a copied node"}, {"sha": "ea9cc28f09f7ea8433471d5814ecef5a0f2ef24b", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -80,6 +80,88 @@ package body Bindgen is\n      Table_Increment      => 200,\n      Table_Name           => \"IS_Pragma_Settings\");\n \n+   ----------------------\n+   -- Run-Time Globals --\n+   ----------------------\n+\n+   --  This section documents the global variables that are passed to the\n+   --  run time from the generated binder file. The call that is made is\n+   --  to the routine Set_Globals, which has the following spec:\n+\n+   --   procedure Set_Globals\n+   --     (Main_Priority            : Integer;\n+   --      Time_Slice_Value         : Integer;\n+   --      WC_Encoding              : Character;\n+   --      Locking_Policy           : Character;\n+   --      Queuing_Policy           : Character;\n+   --      Task_Dispatching_Policy  : Character;\n+   --      Restrictions             : System.Address;\n+   --      Interrupt_States         : System.Address;\n+   --      Num_Interrupt_States     : Integer;\n+   --      Unreserve_All_Interrupts : Integer;\n+   --      Exception_Tracebacks     : Integer;\n+   --      Zero_Cost_Exceptions     : Integer);\n+\n+   --  Main_Priority is the priority value set by pragma Priority in the\n+   --  main program. If no such pragma is present, the value is -1.\n+\n+   --  Time_Slice_Value is the time slice value set by pragma Time_Slice\n+   --  in the main program, or by the use of a -Tnnn parameter for the\n+   --  binder (if both are present, the binder value overrides). The\n+   --  value is in milliseconds. A value of zero indicates that time\n+   --  slicing should be suppressed. If no pragma is present, and no\n+   --  -T switch was used, the value is -1.\n+\n+   --  WC_Encoding shows the wide character encoding method used for\n+   --  the main program. This is one of the encoding letters defined\n+   --  in System.WCh_Con.WC_Encoding_Letters.\n+\n+   --  Locking_Policy is a space if no locking policy was specified\n+   --  for the partition. If a locking policy was specified, the value\n+   --  is the upper case first character of the locking policy name,\n+   --  for example, 'C' for Ceiling_Locking.\n+\n+   --  Queuing_Policy is a space if no queuing policy was specified\n+   --  for the partition. If a queuing policy was specified, the value\n+   --  is the upper case first character of the queuing policy name\n+   --  for example, 'F' for FIFO_Queuing.\n+\n+   --  Task_Dispatching_Policy is a space if no task dispatching policy\n+   --  was specified for the partition. If a task dispatching policy\n+   --  was specified, the value is the upper case first character of\n+   --  the policy name, e.g. 'F' for FIFO_Within_Priorities.\n+\n+   --  Restrictions is the address of a null-terminated string specifying the\n+   --  restrictions information for the partition. The format is identical to\n+   --  that of the parameter string found on R lines in ali files (see Lib.Writ\n+   --  spec in lib-writ.ads for full details). The difference is that in this\n+   --  context the values are the cumulative ones for the entire partition.\n+\n+   --  Interrupt_States is the address of a string used to specify the\n+   --  cumulative results of Interrupt_State pragmas used in the partition.\n+   --  The length of this string is determined by the last interrupt for which\n+   --  such a pragma is given (the string will be a null string if no pragmas\n+   --  were used). If pragma were present the entries apply to the interrupts\n+   --  in sequence from the first interrupt, and are set to one of four\n+   --  possible settings: 'n' for not specified, 'u' for user, 'r' for\n+   --  run time, 's' for system, see description of Interrupt_State pragma\n+   --  for further details.\n+\n+   --  Num_Interrupt_States is the length of the Interrupt_States string.\n+   --  It will be set to zero if no Interrupt_State pragmas are present.\n+\n+   --  Unreserve_All_Interrupts is set to one if at least one unit in the\n+   --  partition had a pragma Unreserve_All_Interrupts, and zero otherwise.\n+\n+   --  Exception_Tracebacks is set to one if the -E parameter was present\n+   --  in the bind and to zero otherwise. Note that on some targets exception\n+   --  tracebacks are provided by default, so a value of zero for this\n+   --  parameter does not necessarily mean no trace backs are available.\n+\n+   --  Zero_Cost_Exceptions is set to one if zero cost exceptions are used for\n+   --  this partition, and to zero if longjmp/setjmp exceptions are used.\n+   --  the use of zero\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "a86f299c6c9e7b4c432652cfbcdb4eacd4190a10", "filename": "gcc/ada/bld.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fbld.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fbld.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbld.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -1504,11 +1504,11 @@ package body Bld is\n                            --  being an absolute directory name.\n \n                            Put (Project_Name &\n-                                \".src_dirs:=$(shell gprcmd extend $(\");\n-                           Put (Project_Name);\n-                           Put (\".base_dir) '$(\");\n+                                \".src_dirs:=$(foreach name,$(\");\n                            Put_Attribute (Project, Pkg, Item_Name, No_Name);\n-                           Put_Line (\")')\");\n+                           Put (\"),$(shell gprcmd extend $(\");\n+                           Put (Project_Name);\n+                           Put_Line (\".base_dir) '$(name)'))\");\n \n                         elsif Item_Name = Snames.Name_Source_Files then\n \n@@ -2692,6 +2692,13 @@ package body Bld is\n                IO.Mark (Src_List_File_Init);\n                Put_Line (\"src_list_file.specified:=FALSE\");\n \n+               --  Default language is Ada, but variable LANGUAGES may have\n+               --  been changed by an imported Makefile. So, we set it\n+               --  to \"ada\"; if attribute Languages is defined in the project\n+               --  file, it will be redefined.\n+\n+               Put_Line (\"LANGUAGES:=ada\");\n+\n                --  <PROJECT>.src_dirs is set by default to the project\n                --  directory.\n "}, {"sha": "ca7d78c5f9edeafcb3c6088a2e698e6ee1bbb12d", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -5366,7 +5366,7 @@ components_to_record (tree gnu_record_type,\n \t\t\t\t\t  ? TYPE_SIZE (gnu_record_type) : 0),\n \t\t\t\t\t (all_rep_and_size\n \t\t\t\t\t  ? bitsize_zero_node : 0),\n-\t\t\t\t\t 1);\n+\t\t\t\t\t 0);\n \n \t  DECL_INTERNAL_P (gnu_field) = 1;\n \t  DECL_QUALIFIER (gnu_field) = gnu_qual;\n@@ -5397,7 +5397,7 @@ components_to_record (tree gnu_record_type,\n \t    = create_field_decl (gnu_var_name, gnu_union_type, gnu_record_type,\n \t\t\t\t packed,\n \t\t\t\t all_rep ? TYPE_SIZE (gnu_union_type) : 0,\n-\t\t\t\t all_rep ? bitsize_zero_node : 0, 1);\n+\t\t\t\t all_rep ? bitsize_zero_node : 0, 0);\n \n \t  DECL_INTERNAL_P (gnu_union_field) = 1;\n \t  TREE_CHAIN (gnu_union_field) = gnu_field_list;"}, {"sha": "0b35cefd6cabe672e14a5b2075d667ba43a3e972", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 2, "deletions": 67, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -52,7 +52,6 @@ with Snames;   use Snames;\n with Stand;    use Stand;\n with Stringt;  use Stringt;\n with Tbuild;   use Tbuild;\n-with Ttypes;   use Ttypes;\n with Uintp;    use Uintp;\n with Validsw;  use Validsw;\n \n@@ -181,16 +180,6 @@ package body Exp_Ch5 is\n       --  an object. Such objects can be aliased to parameters (unlike local\n       --  array references).\n \n-      function Possible_Unaligned_Slice (Arg : Node_Id) return Boolean;\n-      --  Returns True if Arg (either the left or right hand side of the\n-      --  assignment) is a slice that could be unaligned wrt the array type.\n-      --  This is true if Arg is a component of a packed record, or is\n-      --  a record component to which a component clause applies. This\n-      --  is a little pessimistic, but the result of an unnecessary\n-      --  decision that something is possibly unaligned is only to\n-      --  generate a front end loop, which is not so terrible.\n-      --  It would really be better if backend handled this ???\n-\n       -----------------------\n       -- Apply_Dereference --\n       -----------------------\n@@ -242,60 +231,6 @@ package body Exp_Ch5 is\n                        and then Is_Non_Local_Array (Prefix (Exp)));\n       end Is_Non_Local_Array;\n \n-      ------------------------------\n-      -- Possible_Unaligned_Slice --\n-      ------------------------------\n-\n-      function Possible_Unaligned_Slice (Arg : Node_Id) return Boolean is\n-      begin\n-         --  No issue if this is not a slice, or else strict alignment\n-         --  is not required in any case.\n-\n-         if Nkind (Arg) /= N_Slice\n-           or else not Target_Strict_Alignment\n-         then\n-            return False;\n-         end if;\n-\n-         --  No issue if the component type is a byte or byte aligned\n-\n-         declare\n-            Array_Typ : constant Entity_Id := Etype (Arg);\n-            Comp_Typ  : constant Entity_Id := Component_Type (Array_Typ);\n-            Pref      : constant Node_Id   := Prefix (Arg);\n-\n-         begin\n-            if Known_Alignment (Array_Typ) then\n-               if Alignment (Array_Typ) = 1 then\n-                  return False;\n-               end if;\n-\n-            elsif Known_Component_Size (Array_Typ) then\n-               if Component_Size (Array_Typ) = 1 then\n-                  return False;\n-               end if;\n-\n-            elsif Known_Esize (Comp_Typ) then\n-               if Esize (Comp_Typ) <= System_Storage_Unit then\n-                  return False;\n-               end if;\n-            end if;\n-\n-            --  No issue if this is not a selected component\n-\n-            if Nkind (Pref) /= N_Selected_Component then\n-               return False;\n-            end if;\n-\n-            --  Else we test for a possibly unaligned component\n-\n-            return\n-              Is_Packed (Etype (Pref))\n-                or else\n-              Present (Component_Clause (Entity (Selector_Name (Pref))));\n-         end;\n-      end Possible_Unaligned_Slice;\n-\n       --  Determine if Lhs, Rhs are formal arrays or nonlocal arrays\n \n       Lhs_Formal : constant Boolean := Is_Formal_Array (Act_Lhs);\n@@ -528,8 +463,8 @@ package body Exp_Ch5 is\n \n       elsif Is_Bit_Packed_Array (L_Type)\n         or else Is_Bit_Packed_Array (R_Type)\n-        or else Possible_Unaligned_Slice (Lhs)\n-        or else Possible_Unaligned_Slice (Rhs)\n+        or else Is_Possibly_Unaligned_Slice (Lhs)\n+        or else Is_Possibly_Unaligned_Slice (Rhs)\n       then\n          Loop_Required := True;\n "}, {"sha": "416712712bb867464f182c186e7be81573aafdc8", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -700,7 +700,7 @@ package body Exp_Pakd is\n \n       Ancest   : Entity_Id;\n       PB_Type  : Entity_Id;\n-      Esiz     : Uint;\n+      PASize   : Uint;\n       Decl     : Node_Id;\n       PAT      : Entity_Id;\n       Len_Dim  : Node_Id;\n@@ -770,10 +770,10 @@ package body Exp_Pakd is\n          --  Do not reset RM_Size if already set, as happens in the case\n          --  of a modular type.\n \n-         Set_Esize (PAT, Esiz);\n+         Set_Esize (PAT, PASize);\n \n          if Unknown_RM_Size (PAT) then\n-            Set_RM_Size (PAT, Esiz);\n+            Set_RM_Size (PAT, PASize);\n          end if;\n \n          --  Set remaining fields of packed array type\n@@ -853,7 +853,7 @@ package body Exp_Pakd is\n       --  type, since this size clearly belongs to the packed array type. The\n       --  size of the conceptual unpacked type is always set to unknown.\n \n-      Esiz := Esize (Typ);\n+      PASize := Esize (Typ);\n \n       --  Case of an array where at least one index is of an enumeration\n       --  type with a non-standard representation, but the component size\n@@ -1099,7 +1099,8 @@ package body Exp_Pakd is\n                --  We can use the modular type, it has the form:\n \n                --    subtype tttPn is btyp\n-               --      range 0 .. 2 ** (Esize (Typ) * Csize) - 1;\n+               --      range 0 .. 2 ** ((Typ'Length (1)\n+               --                * ... * Typ'Length (n)) * Csize) - 1;\n \n                --  The bounds are statically known, and btyp is one\n                --  of the unsigned types, depending on the length. If the\n@@ -1140,8 +1141,8 @@ package body Exp_Pakd is\n                                    Make_Integer_Literal (Loc, 0),\n                                  High_Bound => Lit))));\n \n-               if Esiz = Uint_0 then\n-                  Esiz := Len_Bits;\n+               if PASize = Uint_0 then\n+                  PASize := Len_Bits;\n                end if;\n \n                Install_PAT;"}, {"sha": "69f936105042b0281958ba0d0a200c47c1fb1e6a", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -2352,6 +2352,13 @@ package body Exp_Util is\n \n    function Is_Possibly_Unaligned_Slice (P : Node_Id) return Boolean is\n    begin\n+      --  ??? GCC3 will eventually handle strings with arbitrary alignments,\n+      --  but for now the following check must be disabled.\n+\n+      --  if get_gcc_version >= 3 then\n+      --     return False;\n+      --  end if;\n+\n       if Is_Entity_Name (P)\n         and then Is_Object (Entity (P))\n         and then Present (Renamed_Object (Entity (P)))"}, {"sha": "3d0854914a6f4dde609f868cbe0397299bc02702", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -87,10 +87,10 @@ procedure Gnatls is\n    Print_Unit       : Boolean := True;\n    Print_Source     : Boolean := True;\n    Print_Object     : Boolean := True;\n-   --  Flags controlling the form of the outpout\n+   --  Flags controlling the form of the output\n \n-   Dependable       : Boolean := False;  --  flag -d\n-   Also_Predef      : Boolean := False;\n+   Dependable  : Boolean := False;  --  flag -d\n+   Also_Predef : Boolean := False;\n \n    Unit_Start   : Integer;\n    Unit_End     : Integer;\n@@ -132,14 +132,14 @@ procedure Gnatls is\n    --  updated to the full file name if available.\n \n    function Corresponding_Sdep_Entry (A : ALI_Id; U : Unit_Id) return Sdep_Id;\n-   --  Give the Sdep entry corresponding to the unit U in ali record A.\n+   --  Give the Sdep entry corresponding to the unit U in ali record A\n \n    procedure Output_Object (O : File_Name_Type);\n    --  Print out the name of the object when requested\n \n    procedure Output_Source (Sdep_I : Sdep_Id);\n    --  Print out the name and status of the source corresponding to this\n-   --  sdep entry\n+   --  sdep entry.\n \n    procedure Output_Status (FS : File_Status; Verbose : Boolean);\n    --  Print out FS either in a coded form if verbose is false or in an\n@@ -152,10 +152,10 @@ procedure Gnatls is\n    --  Reset Print flags properly when selective output is chosen\n \n    procedure Scan_Ls_Arg (Argv : String; And_Save : Boolean);\n-   --  Scan and process lser specific arguments. Argv is a single argument.\n+   --  Scan and process lser specific arguments. Argv is a single argument\n \n    procedure Usage;\n-   --  Print usage message.\n+   --  Print usage message\n \n    -----------------\n    -- Add_Lib_Dir --\n@@ -279,10 +279,12 @@ procedure Gnatls is\n \n       --  Verify is output is not wider than maximum number of columns\n \n-      Too_Long := Verbose_Mode or else\n-        (Max_Unit_Length + Max_Src_Length + Max_Obj_Length) > Max_Column;\n+      Too_Long :=\n+        Verbose_Mode\n+          or else\n+            (Max_Unit_Length + Max_Src_Length + Max_Obj_Length) > Max_Column;\n \n-      --  Set start and end of columns.\n+      --  Set start and end of columns\n \n       Object_Start := 1;\n       Object_End   := Object_Start - 1;\n@@ -817,10 +819,9 @@ begin\n    Namet.Initialize;\n    Csets.Initialize;\n \n-   --  Use low level argument routines to avoid dragging in the secondary stack\n+   --  Loop to scan out arguments\n \n    Next_Arg := 1;\n-\n    Scan_Args : while Next_Arg < Arg_Count loop\n       declare\n          Next_Argv : String (1 .. Len_Arg (Next_Arg));\n@@ -956,6 +957,7 @@ begin\n    end loop;\n \n    Find_General_Layout;\n+\n    for Id in ALIs.First .. ALIs.Last loop\n       declare\n          Last_U : Unit_Id;\n@@ -993,7 +995,7 @@ begin\n                end if;\n             end loop;\n \n-            --  Print out list of dependable units\n+            --  Print out list of units on which this unit depends (D lines)\n \n             if Dependable and then Print_Source then\n                if Verbose_Mode then"}, {"sha": "14798fb4f49b2b14f470495ffa859b458360abce", "filename": "gcc/ada/gprcmd.adb", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fgprcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fgprcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprcmd.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -38,6 +38,9 @@\n --    deps         post process dependency makefiles\n --    stamp        copy file time stamp from file1 to file2\n --    prefix       get the prefix of the GNAT installation\n+--    path         convert a list of directories to a path list, inserting a\n+--                 path separator after each directory, including the last one\n+--    ignore       do nothing\n \n with Gnatvsn;\n with Osint;   use Osint;\n@@ -349,6 +352,10 @@ procedure Gprcmd is\n                                 \"copy file time stamp from file1 to file2\");\n       Put_Line (Standard_Error, \"  prefix      \" &\n                                 \"get the prefix of the GNAT installation\");\n+      Put_Line (Standard_Error, \"  path        \" &\n+                                \"convert a directory list into a path list\");\n+      Put_Line (Standard_Error, \"  ignore      \" &\n+                                \"do nothing\");\n       OS_Exit (1);\n    end Usage;\n \n@@ -363,7 +370,8 @@ begin\n    begin\n       if Cmd = \"-v\" then\n \n-         --  Should this be on Standard_Error ???\n+         --  Output on standard error, because only returned values should\n+         --  go to standard output.\n \n          Put (Standard_Error, \"GPRCMD \");\n          Put (Standard_Error, Gnatvsn.Gnat_Version_String);\n@@ -474,6 +482,19 @@ begin\n             end if;\n          end;\n \n+      --  For \"path\" just add path separator after each directory argument\n+\n+      elsif Cmd = \"path\" then\n+         for J in 2 .. Argument_Count loop\n+            Put (Argument (J));\n+            Put (Path_Separator);\n+         end loop;\n+\n+      --  For \"ignore\" do nothing\n+\n+      elsif Cmd = \"ignore\" then\n+         null;\n+\n       --  Unknown command\n \n       else"}, {"sha": "7db7f1f5d90afe85373acb8c7af3b10c40c38536", "filename": "gcc/ada/init.c", "status": "modified", "additions": 53, "deletions": 3, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -39,6 +39,10 @@\n     installed by this file are used to handle resulting signals that come\n     from these probes failing (i.e. touching protected pages) */\n \n+/* This file should be kept synchronized with 2sinit.ads, 2sinit.adb, and\n+   5zinit.adb. All these files implement the required functionality for\n+   different targets. */\n+\n /* The following include is here to meet the published VxWorks requirement\n    that the __vxworks header appear before any other include. */\n #ifdef __vxworks\n@@ -154,6 +158,9 @@ __gnat_get_interrupt_state (int intrup)\n    binder file is not in the shared library. Global references across library\n    boundaries like this are not handled correctly in all systems.  */\n \n+/* For detailed description of the parameters to this routine, see the\n+   section titled Run-Time Globals in package Bindgen (bindgen.adb) */\n+\n void\n __gnat_set_globals (int main_priority,\n                     int time_slice_val,\n@@ -363,6 +370,7 @@ __gnat_initialize (void)\n    exclude this case in the above test.  */\n \n #include <signal.h>\n+#include <setjmp.h>\n #include <sys/siginfo.h>\n \n static void __gnat_error_handler (int, siginfo_t *, struct sigcontext *);\n@@ -440,7 +448,48 @@ __gnat_error_handler (int sig, siginfo_t *sip, struct sigcontext *context)\n   if (mstate != 0)\n     *mstate = *context;\n \n-  Raise_From_Signal_Handler (exception, (char *) msg);\n+  /* We are now going to raise the exception corresponding to the signal we\n+     caught, which may eventually end up resuming the application code if the\n+     exception is handled.\n+\n+     When the exception is handled, merely arranging for the *exception*\n+     handler's context (stack pointer, program counter, other registers, ...)\n+     to be installed is *not* enough to let the kernel think we've left the\n+     *signal* handler.  This has annoying implications if an alternate stack\n+     has been setup for this *signal* handler, because the kernel thinks we\n+     are still running on that alternate stack even after the jump, which\n+     causes trouble at least as soon as another signal is raised.\n+\n+     We deal with this by forcing a \"local\" longjmp within the signal handler\n+     below, forcing the \"on alternate stack\" indication to be reset (kernel\n+     wise) on the way.  If no alternate stack has been setup, this should be a\n+     neutral operation. Otherwise, we will be in a delicate situation for a\n+     short while because we are going to run the exception propagation code\n+     within the alternate stack area (that is, with the stack pointer inside\n+     the alternate stack bounds), but with the corresponding flag off from the\n+     kernel's standpoint.  We expect this to be ok as long as the propagation\n+     code does not trigger a signal itself, which is expected.\n+\n+     ??? A better approach would be to at least delay this operation until the\n+     last second, that is, until just before we jump to the exception handler,\n+     if any.  */\n+  {\n+    jmp_buf handler_jmpbuf;\n+\n+    if (setjmp (handler_jmpbuf) != 0)\n+      Raise_From_Signal_Handler (exception, (char *) msg);\n+    else\n+      {\n+\t/* Arrange for the \"on alternate stack\" flag to be reset.  See the\n+\t   comments around \"jmp_buf offsets\" in /usr/include/setjmp.h.  */\n+\tstruct sigcontext * handler_context\n+\t  = (struct sigcontext *) & handler_jmpbuf;\n+\n+\thandler_context->sc_onstack = 0;\n+\t\n+\tlongjmp (handler_jmpbuf, 1);\n+      }\n+  }\n }\n \n void\n@@ -461,11 +510,12 @@ __gnat_install_handler (void)\n      we want this to happen for tasks also.  */\n \n   static char sig_stack [8*1024];\n-  /* 8K allocated here because 4K is not enough for the GCC/ZCX scheme.  */\n+  /* 8K is a mininum to be able to propagate an exception using the GCC/ZCX\n+     scheme.  */\n \n   struct sigaltstack ss;\n \n-  ss.ss_sp = (void *) & sig_stack;\n+  ss.ss_sp = (void *) sig_stack;\n   ss.ss_size = sizeof (sig_stack);\n   ss.ss_flags = 0;\n "}, {"sha": "1cafffe9afdabe1ac9d440ca377f86eff1c72c24", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -940,10 +940,6 @@ package body Lib.Writ is\n          end if;\n       end loop;\n \n-      --  A separating space\n-\n-      Write_Info_Char (' ');\n-\n       --  And now the information for the parameter restrictions\n \n       for RP in All_Parameter_Restrictions loop"}, {"sha": "c6f185bf2fcad772a33ba7005e043acf8de7c2c7", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -256,7 +256,7 @@ package Lib.Writ is\n    --  has been able to determine with respect to restrictions violations.\n    --  The format is:\n \n-   --    R <<restriction-characters>> space <<restriction-param-id-entries>>\n+   --    R <<restriction-characters>> <<restriction-param-id-entries>>\n \n    --      The first parameter is a string of characters that records\n    --      information regarding restrictions that do not take parameter\n@@ -283,8 +283,9 @@ package Lib.Writ is\n    --      has \"v\", which is not permitted, since these restrictions\n    --      are partition-wide.\n \n-   --  Following a space, the second parameter refers to restriction\n-   --  identifiers for which a parameter is given.\n+   --  The second parameter, which immediately follows the first (with\n+   --  no separating space) gives restriction information for identifiers\n+   --  for which a parameter is given.\n \n    --      The parameter is a string of entries, one for each value in\n    --      Restrict.All_Parameter_Restrictions. Each entry has two"}, {"sha": "ec86234b5861aea953f282aa218e3c53e9c09b87", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 16, "deletions": 28, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -52,9 +52,8 @@ package Osint is\n    type File_Type is (Source, Library, Config, Definition, Preprocessing_Data);\n \n    function Find_File\n-     (N :    File_Name_Type;\n-      T :    File_Type)\n-      return File_Name_Type;\n+     (N : File_Name_Type;\n+      T : File_Type) return File_Name_Type;\n    --  Finds a source, library or config file depending on the value\n    --  of T following the directory search order rules unless N is the\n    --  name of the file just read with Next_Main_File and already\n@@ -155,8 +154,7 @@ package Osint is\n \n    function To_Canonical_File_List\n      (Wildcard_Host_File : String;\n-      Only_Dirs          : Boolean)\n-      return               String_Access_List_Access;\n+      Only_Dirs          : Boolean) return String_Access_List_Access;\n    --  Expand a wildcard host syntax file or directory specification (e.g. on\n    --  a VMS host, any file or directory spec that contains:\n    --  \"*\", or \"%\", or \"...\")\n@@ -165,8 +163,7 @@ package Osint is\n \n    function To_Canonical_Dir_Spec\n      (Host_Dir     : String;\n-      Prefix_Style : Boolean)\n-      return         String_Access;\n+      Prefix_Style : Boolean) return String_Access;\n    --  Convert a host syntax directory specification (e.g. on a VMS host:\n    --  \"SYS$DEVICE:[DIR]\") to canonical (Unix) syntax (e.g. \"/sys$device/dir\").\n    --  If Prefix_Style then make it a valid file specification prefix.\n@@ -176,30 +173,26 @@ package Osint is\n    --  this simply means the spec has a trailing slash (\"/\").\n \n    function To_Canonical_File_Spec\n-     (Host_File : String)\n-      return      String_Access;\n+     (Host_File : String) return String_Access;\n    --  Convert a host syntax file specification (e.g. on a VMS host:\n    --  \"SYS$DEVICE:[DIR]FILE.EXT;69 to canonical (Unix) syntax (e.g.\n    --  \"/sys$device/dir/file.ext.69\").\n \n    function To_Canonical_Path_Spec\n-     (Host_Path : String)\n-      return      String_Access;\n+     (Host_Path : String) return String_Access;\n    --  Convert a host syntax Path specification (e.g. on a VMS host:\n    --  \"SYS$DEVICE:[BAR],DISK$USER:[FOO] to canonical (Unix) syntax (e.g.\n    --  \"/sys$device/foo:disk$user/foo\").\n \n    function To_Host_Dir_Spec\n      (Canonical_Dir : String;\n-      Prefix_Style  : Boolean)\n-      return          String_Access;\n+      Prefix_Style  : Boolean) return String_Access;\n    --  Convert a canonical syntax directory specification to host syntax.\n    --  The Prefix_Style flag is currently ignored but should be set to\n    --  False.\n \n    function To_Host_File_Spec\n-     (Canonical_File : String)\n-      return           String_Access;\n+     (Canonical_File : String) return String_Access;\n    --  Convert a canonical syntax file specification to host syntax.\n \n    function Relocate_Path\n@@ -209,9 +202,8 @@ package Osint is\n    --  replace the Prefix substring with the root installation directory.\n    --  By default, try to compute the root installation directory by looking\n    --  at the executable name as it was typed on the command line and, if\n-   --  needed, use the PATH environment variable.\n-   --  If the above computation fails, return Path.\n-   --  This function assumes that Prefix'First = Path'First\n+   --  needed, use the PATH environment variable. If the above computation\n+   --  fails, return Path. This function assumes Prefix'First = Path'First.\n \n    function Shared_Lib (Name : String) return String;\n    --  Returns the runtime shared library in the form -l<name>-<version> where\n@@ -244,8 +236,7 @@ package Osint is\n    procedure Get_Next_Dir_In_Path_Init\n      (Search_Path : String_Access);\n    function  Get_Next_Dir_In_Path\n-     (Search_Path : String_Access)\n-      return        String_Access;\n+     (Search_Path : String_Access) return String_Access;\n    --  These subprograms are used to parse out the directory names in a\n    --  search path specified by a Search_Path argument. The procedure\n    --  initializes an internal pointer to point to the initial directory\n@@ -292,8 +283,7 @@ package Osint is\n \n    function Get_RTS_Search_Dir\n      (Search_Dir : String;\n-      File_Type  : Search_File_Type)\n-      return       String_Ptr;\n+      File_Type  : Search_File_Type) return String_Ptr;\n    --  This function retrieves the paths to the search (resp. lib) dirs and\n    --  return them. The search dir can be absolute or relative. If the search\n    --  dir contains Include_Search_File (resp. Object_Search_File), then this\n@@ -382,9 +372,8 @@ package Osint is\n    --  called Source_File_Data (Cache => True). See below.\n \n    function Matching_Full_Source_Name\n-     (N    : File_Name_Type;\n-      T    : Time_Stamp_Type)\n-      return File_Name_Type;\n+     (N : File_Name_Type;\n+      T : Time_Stamp_Type) return File_Name_Type;\n    --  Same semantics than Full_Source_Name but will search on the source\n    --  path until a source file with time stamp matching T is found. If\n    --  none is found returns No_File.\n@@ -440,8 +429,7 @@ package Osint is\n \n    function Read_Library_Info\n      (Lib_File  : File_Name_Type;\n-      Fatal_Err : Boolean := False)\n-      return      Text_Buffer_Ptr;\n+      Fatal_Err : Boolean := False) return Text_Buffer_Ptr;\n    --  Allocates a Text_Buffer of appropriate length and reads in the entire\n    --  source of the library information from the library information file\n    --  whose name is given by the parameter Name."}, {"sha": "6047a41fe3bd365895dded7c642f4cd94f2fc161", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -1475,8 +1475,12 @@ package body Sem_Ch10 is\n             end if;\n          end if;\n \n+         Set_Is_Immediately_Visible (Par_Unit, False);\n+\n          Analyze_Subunit_Context;\n+\n          Re_Install_Parents (Lib_Unit, Par_Unit);\n+         Set_Is_Immediately_Visible (Par_Unit);\n \n          --  If the context includes a child unit of the parent of the\n          --  subunit, the parent will have been removed from visibility,"}, {"sha": "07d8a3198ccb04701f22ac71817458b2a9161565", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -801,6 +801,22 @@ package body Sem_Res is\n          Require_Entity (N);\n       end if;\n \n+      --  If the context expects a value, and the name is a procedure,\n+      --  this is most likely a missing 'Access. Do not try to resolve\n+      --  the parameterless call, error will be caught when the outer\n+      --  call is analyzed.\n+\n+      if Is_Entity_Name (N)\n+        and then Ekind (Entity (N)) = E_Procedure\n+        and then not Is_Overloaded (N)\n+        and then\n+         (Nkind (Parent (N)) = N_Parameter_Association\n+            or else Nkind (Parent (N)) = N_Function_Call\n+            or else Nkind (Parent (N)) = N_Procedure_Call_Statement)\n+      then\n+         return;\n+      end if;\n+\n       --  Rewrite as call if overloadable entity that is (or could be, in\n       --  the overloaded case) a function call. If we know for sure that\n       --  the entity is an enumeration literal, we do not rewrite it."}, {"sha": "9ab12a4797b6330a41bc78a0d705ac07e1e742cf", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -4881,17 +4881,28 @@ package body Sem_Util is\n                           or else Sloc (S) = Standard_Location)\n                        and then Is_Overloadable (S)\n                      then\n-                        Error_Msg_Name_1 := Chars (S);\n-                        Error_Msg_Sloc := Sloc (S);\n-                        Error_Msg_NE\n-                          (\"missing argument for parameter & \" &\n-                             \"in call to % declared #\", N, Formal);\n+                        if No (Actuals)\n+                          and then\n+                           (Nkind (Parent (N)) = N_Procedure_Call_Statement\n+                             or else\n+                           (Nkind (Parent (N)) = N_Function_Call\n+                             or else\n+                           Nkind (Parent (N)) = N_Parameter_Association))\n+                        then\n+                           Set_Etype (N, Etype (S));\n+                        else\n+                           Error_Msg_Name_1 := Chars (S);\n+                           Error_Msg_Sloc := Sloc (S);\n+                           Error_Msg_NE\n+                             (\"missing argument for parameter & \" &\n+                                \"in call to % declared #\", N, Formal);\n+                        end if;\n \n                      elsif Is_Overloadable (S) then\n                         Error_Msg_Name_1 := Chars (S);\n \n-                        --  Point to type derivation that\n-                        --  generated the operation.\n+                        --  Point to type derivation that generated the\n+                        --  operation.\n \n                         Error_Msg_Sloc := Sloc (Parent (S));\n \n@@ -6358,7 +6369,22 @@ package body Sem_Util is\n                 or else\n               Ekind (Entity (Expr)) = E_Generic_Procedure)\n          then\n-            Error_Msg_N (\"found procedure name instead of function!\", Expr);\n+            if Ekind (Expec_Type) = E_Access_Subprogram_Type then\n+               Error_Msg_N\n+                 (\"found procedure name, possibly missing Access attribute!\",\n+                   Expr);\n+            else\n+               Error_Msg_N (\"found procedure name instead of function!\", Expr);\n+            end if;\n+\n+         elsif Nkind (Expr) = N_Function_Call\n+           and then Ekind (Expec_Type) = E_Access_Subprogram_Type\n+           and then Etype (Designated_Type (Expec_Type)) = Etype (Expr)\n+           and then No (Parameter_Associations (Expr))\n+         then\n+               Error_Msg_N\n+                 (\"found function name, possibly missing Access attribute!\",\n+                   Expr);\n \n          --  catch common error: a prefix or infix operator which is not\n          --  directly visible because the type isn't."}, {"sha": "473077b41e1085e2d3fdfa1bfdaa3133034b0e5b", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -751,7 +751,7 @@ package Snames is\n    --  are added, the first character must be distinct.\n \n    First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 440;\n-   Name_Fifo_Within_Priorities         : constant Name_Id := N + 440;\n+   Name_FIFO_Within_Priorities         : constant Name_Id := N + 440;\n    Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 440;\n \n    --  Names of recognized checks for pragma Suppress"}, {"sha": "f6dea3e7a2a035c342a2317b22e1e2cbff9f5510", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ecbeb82efa35502754b4031214050f0483ce/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=18c0ecbeb82efa35502754b4031214050f0483ce", "patch": "@@ -134,9 +134,6 @@ begin\n    Write_Switch_Char (\"c\");\n    Write_Line (\"Check syntax and semantics only (no code generation)\");\n \n-   Write_Switch_Char (\"C\");\n-   Write_Line (\"Compress names in external names and debug info tables\");\n-\n    --  Line for -gnatd switch\n \n    Write_Switch_Char (\"d?\");"}]}