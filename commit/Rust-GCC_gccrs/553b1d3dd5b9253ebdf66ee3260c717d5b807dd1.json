{"sha": "553b1d3dd5b9253ebdf66ee3260c717d5b807dd1", "node_id": "C_kwDOANBUbNoAKDU1M2IxZDNkZDViOTI1M2ViZGY2NmVlMzI2MGM3MTdkNWI4MDdkZDE", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-11-03T13:17:42Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-11-03T13:18:35Z"}, "message": "i386: Fix uninitialized register after peephole2 conversion [PR107404]\n\nThe eliminate reg-reg move by inverting the condition of\na cmove #2 peephole2 converts the following sequence:\n\n  473: bx:DI=[r14:DI*0x8+r12:DI]\n  960: r15:DI=r8:DI\n  485: {flags:CCC=cmp(r15:DI+bx:DI,bx:DI);r15:DI=r15:DI+bx:DI;}\n  737: r15:DI={(geu(flags:CCC,0))?r15:DI:bx:DI}\n\nto:\n\n 1110: {flags:CCC=cmp(r8:DI+bx:DI,bx:DI);r8:DI=r8:DI+bx:DI;}\n 1111: r15:DI=[r14:DI*0x8+r12:DI]\n 1112: r15:DI={(geu(flags:CCC,0))?r8:DI:r15:DI}\n\nPlease note that(insn 1110) uses register BX, but its\ninitialization was eliminated.\n\nAvoid conversion if eliminated move intialized a register, used\nin the moved instruction.\n\n2022-11-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\tPR target/107404\n\t* config/i386/i386.md (eliminate reg-reg move by inverting the\n\tcondition of a cmove #2 peephole2): Check if eliminated move\n\tinitialized a register, used in the moved instruction.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/107404\n\t* g++.target/i386/pr107404.C: New test.", "tree": {"sha": "fa5381011389c9b13a06a9dd7d0dc9a56b5bc76b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa5381011389c9b13a06a9dd7d0dc9a56b5bc76b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/553b1d3dd5b9253ebdf66ee3260c717d5b807dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553b1d3dd5b9253ebdf66ee3260c717d5b807dd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/553b1d3dd5b9253ebdf66ee3260c717d5b807dd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553b1d3dd5b9253ebdf66ee3260c717d5b807dd1/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ff0e62275b1c322a8b65f38f8336f37d31c30e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff0e62275b1c322a8b65f38f8336f37d31c30e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff0e62275b1c322a8b65f38f8336f37d31c30e4"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "436eabb691a5ffdc9ec31b6612ec24b6f52819e0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/553b1d3dd5b9253ebdf66ee3260c717d5b807dd1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/553b1d3dd5b9253ebdf66ee3260c717d5b807dd1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=553b1d3dd5b9253ebdf66ee3260c717d5b807dd1", "patch": "@@ -21800,7 +21800,8 @@\n   && REGNO (operands[2]) != REGNO (operands[1])\n   && peep2_reg_dead_p (2, operands[1])\n   && peep2_reg_dead_p (4, operands[2])\n-  && !reg_overlap_mentioned_p (operands[0], operands[3])\"\n+  && !reg_overlap_mentioned_p (operands[0], operands[3])\n+  && !reg_mentioned_p (operands[2], operands[6])\"\n  [(parallel [(set (match_dup 7) (match_dup 8))\n \t     (set (match_dup 1) (match_dup 9))])\n   (set (match_dup 0) (match_dup 3))"}, {"sha": "e47d0fd779d24bc33e2cc3ffa713f97f68007fe2", "filename": "gcc/testsuite/g++.target/i386/pr107404.C", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/553b1d3dd5b9253ebdf66ee3260c717d5b807dd1/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr107404.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/553b1d3dd5b9253ebdf66ee3260c717d5b807dd1/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr107404.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr107404.C?ref=553b1d3dd5b9253ebdf66ee3260c717d5b807dd1", "patch": "@@ -0,0 +1,53 @@\n+// PR target/107404\n+// { dg-do run }\n+// { dg-options \"-O3\" }\n+\n+unsigned long long a;\n+void b(unsigned long long *f, int p2) { *f ^= p2; }\n+long c;\n+char e, i;\n+short g, m;\n+long long ab[1][25][21][22];\n+unsigned long long aa[1][21][22];\n+unsigned long long ae[1][25][21][21];\n+long long ac[129360];\n+char ad[25][1][21];\n+char ah[1][25][1][21];\n+short af[100];\n+long max(long f, unsigned long p2) { return f < p2 ? p2 : f; }\n+const int &max2(const int &f, const int &p2) { return f < p2 ? p2 : f; }\n+void foo(unsigned f, unsigned p2, char l, char p4, long long n[][25][21][22],\n+        unsigned long long p6[][21][22], unsigned long long u[][25][21][21]) {\n+  long an;\n+  for (int j = 0; j < 4; j = p2)\n+    for (short k = 0; k < 7; k += 2)\n+      for (short o = 0; o < (short)p2 + 21742; o = l) {\n+        for (signed char p = 2; p < 9; p += p4)\n+          if (p6[j][o][p])\n+            for (long q(3); 4 ? n[0][k][o][0] : 0;\n+                 q += p6[0][o][0] ? p6[j][0][p] : 0)\n+              ac[j + q] = 5066799590;\n+        for (long r(p4 - 16); r < 21; r += 4) {\n+          ad[k][o][r] = max(u[j][k][o][r], f + u[j][k][o][r]);\n+          long d = u[j][k][o][r];\n+          an = d < p2 ? p2 : d;\n+          e = ah[j][k][o][r] = an;\n+          af[o * r] = i;\n+        }\n+        for (short s(c); s < (short)p2; s = 2)\n+          for (short am(m); am; am = max2(3, p2))\n+            for (long y = 0; y; y = 3)\n+              for (short t(0); t < max2(g, 0);)\n+                ;\n+      }\n+}\n+int main() {\n+  foo(7, 1558227751, 104, 16, ab, aa, ae);\n+  for (unsigned long v = 0; v < 5; ++v)\n+    for (unsigned long w = 0; w < 1; ++w)\n+      for (unsigned long x = 0; x < 21; ++x)\n+        b(&a, ad[v][w][x]);\n+\n+  if (a)\n+    __builtin_abort();\n+}"}]}