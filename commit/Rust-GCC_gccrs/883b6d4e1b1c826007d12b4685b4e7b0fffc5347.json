{"sha": "883b6d4e1b1c826007d12b4685b4e7b0fffc5347", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgzYjZkNGUxYjFjODI2MDA3ZDEyYjQ2ODViNGU3YjBmZmZjNTM0Nw==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2016-07-29T00:35:23Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2016-07-29T00:35:23Z"}, "message": "re PR rtl-optimization/68217 (Wrong constant folding)\n\ngcc/ChangeLog:\n\n2016-07-29  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\tPR middle-end/68217\n\t* tree-vrp.c (extract_range_from_binary_expr_1): In case of signed\n\t& sign-bit-CST, generate [-INF, 0] instead of [-INF, INF].\n\n\ngcc/testsuite/ChangeLog:\n\n2016-07-29  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\tPR middle-end/68217\n\t* gcc.dg/pr68217.c: New test.\n\nFrom-SVN: r238846", "tree": {"sha": "19f8f9d123989dcab239ef62675ca3ca7bd10f0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19f8f9d123989dcab239ef62675ca3ca7bd10f0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/883b6d4e1b1c826007d12b4685b4e7b0fffc5347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883b6d4e1b1c826007d12b4685b4e7b0fffc5347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/883b6d4e1b1c826007d12b4685b4e7b0fffc5347", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/comments", "author": null, "committer": null, "parents": [{"sha": "257490974f36d660237ea0f6809b9c8b7f2b1461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257490974f36d660237ea0f6809b9c8b7f2b1461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/257490974f36d660237ea0f6809b9c8b7f2b1461"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "b0da5b313d89a037251f0bb08d9ad0395badd46b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=883b6d4e1b1c826007d12b4685b4e7b0fffc5347", "patch": "@@ -1,3 +1,9 @@\n+2016-07-29  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\tPR middle-end/68217\n+\t* tree-vrp.c (extract_range_from_binary_expr_1): In case of signed\n+\t& sign-bit-CST, generate [-INF, 0] instead of [-INF, INF].\n+\n 2016-07-28  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-protos.h (rs6000_split_vec_extract_var):"}, {"sha": "ebb2c2fb7bdfd9cad473f2002316f6b64a2e3945", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=883b6d4e1b1c826007d12b4685b4e7b0fffc5347", "patch": "@@ -1,3 +1,8 @@\n+2016-07-29  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\tPR middle-end/68217\n+\t* gcc.dg/pr68217.c: New test.\n+\n 2016-07-28  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/71067"}, {"sha": "426a99a6b61ac63888b49bc7c2d98b5410821a11", "filename": "gcc/testsuite/gcc.dg/pr68217.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68217.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68217.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68217.c?ref=883b6d4e1b1c826007d12b4685b4e7b0fffc5347", "patch": "@@ -0,0 +1,14 @@\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n+\n+int foo (void)\n+{\n+    volatile int a = -1;\n+    long long b = (1LL << (sizeof (b) * 8 - 1)); // LLONG_MIN\n+    long long x = (a & b); // x == 0x8000000000000000\n+    if (x < 1LL) { ; } else { __builtin_abort(); }\n+    return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"\\\\\\[-INF, 0\\\\\\]\" \"vrp1\" } } */"}, {"sha": "41c870f111c4f7fbe0fb6631e3c8e239cbd833ce", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/883b6d4e1b1c826007d12b4685b4e7b0fffc5347/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=883b6d4e1b1c826007d12b4685b4e7b0fffc5347", "patch": "@@ -3067,6 +3067,24 @@ extract_range_from_binary_expr_1 (value_range *vr,\n \t  if (int_cst_range1 && tree_int_cst_sgn (vr1.min) >= 0)\n \t    wmax = wi::min (wmax, vr1.max, TYPE_SIGN (expr_type));\n \t  max = wide_int_to_tree (expr_type, wmax);\n+\t  cmp = compare_values (min, max);\n+\t  /* PR68217: In case of signed & sign-bit-CST should\n+\t     result in [-INF, 0] instead of [-INF, INF].  */\n+\t  if (cmp == -2 || cmp == 1)\n+\t    {\n+\t      wide_int sign_bit\n+\t\t= wi::set_bit_in_zero (TYPE_PRECISION (expr_type) - 1,\n+\t\t\t\t       TYPE_PRECISION (expr_type));\n+\t      if (!TYPE_UNSIGNED (expr_type)\n+\t\t  && ((value_range_constant_singleton (&vr0)\n+\t\t       && !wi::cmps (vr0.min, sign_bit))\n+\t\t      || (value_range_constant_singleton (&vr1)\n+\t\t\t  && !wi::cmps (vr1.min, sign_bit))))\n+\t\t{\n+\t\t  min = TYPE_MIN_VALUE (expr_type);\n+\t\t  max = build_int_cst (expr_type, 0);\n+\t\t}\n+\t    }\n \t}\n       else if (code == BIT_IOR_EXPR)\n \t{"}]}