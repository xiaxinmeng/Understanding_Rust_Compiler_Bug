{"sha": "01277dc46a55d9695702d0008ddcd9eb8e193fec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEyNzdkYzQ2YTU1ZDk2OTU3MDJkMDAwOGRkY2Q5ZWI4ZTE5M2ZlYw==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2005-06-21T21:13:46Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2005-06-21T21:13:46Z"}, "message": "const-str-[1-9].mm: New tests.\n\n[gcc/testsuite/ChangeLog]\n2005-06-21  Ziemowit Laski  <zlaski@apple.com>\n\n        * obj-c++.dg/const-str-[1-9].mm: New tests.\n\nFrom-SVN: r101237", "tree": {"sha": "61c56dde40a34c1ff009e67f112f753eeea2695c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c56dde40a34c1ff009e67f112f753eeea2695c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01277dc46a55d9695702d0008ddcd9eb8e193fec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01277dc46a55d9695702d0008ddcd9eb8e193fec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01277dc46a55d9695702d0008ddcd9eb8e193fec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01277dc46a55d9695702d0008ddcd9eb8e193fec/comments", "author": null, "committer": null, "parents": [{"sha": "3a32ec1e37259c70a481e001a2965d42df8adaea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a32ec1e37259c70a481e001a2965d42df8adaea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a32ec1e37259c70a481e001a2965d42df8adaea"}], "stats": {"total": 274, "additions": 274, "deletions": 0}, "files": [{"sha": "bef45eba983a2247fdb87c5114113bc34164c9de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -1,3 +1,7 @@\n+2005-06-21  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* obj-c++.dg/const-str-[1-9].mm: New tests.\n+\n 2005-06-21  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/22010"}, {"sha": "e4cac2e57ecdf7702acefbf75311892e33a855e5", "filename": "gcc/testsuite/obj-c++.dg/const-str-1.mm", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-1.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,25 @@\n+/* Test errors for constant strings.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fgnu-runtime\" } */\n+\n+#ifdef __cplusplus\n+extern void baz(...);\n+#endif\n+\n+void foo()\n+{\n+  baz(@\"hiya\");  /* { dg-error \"annot find interface declaration\" } */\n+}\n+\n+@interface NXConstantString\n+{\n+  void *isa;\n+  char *str;\n+  int len;\n+}\n+@end\n+\n+void bar()\n+{\n+  baz(@\"howdah\");\n+}"}, {"sha": "c406665c57617aec1e68376c575876ffba2e9a5c", "filename": "gcc/testsuite/obj-c++.dg/const-str-2.mm", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-2.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,7 @@\n+/* Test the -fconstant-string-class flag error.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fconstant-string-class=\" } */\n+\n+{ dg-error \"no class name specified|missing argument\" \"\" { target *-*-* } 0 }\n+\n+void foo () {}"}, {"sha": "7d4f80863d28d0bc64b074cc380c1c934c620b2e", "filename": "gcc/testsuite/obj-c++.dg/const-str-3.mm", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-3.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,48 @@\n+/* Test the -fconstant-string-class=Foo option under the NeXT\n+   runtime.  */\n+/* Developed by Markus Hitter <mah@jump-ing.de>.  */\n+\n+/* { dg-options \"-fnext-runtime -fconstant-string-class=Foo -lobjc\" } */\n+/* { dg-do run { target *-*-darwin* } } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <memory.h>\n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+\n+@interface Foo: Object {\n+  char *cString;\n+  unsigned int len;\n+}\n+- (char *)customString;\n+@end\n+\n+struct objc_class _FooClassReference;\n+\n+@implementation Foo : Object\n+- (char *)customString {\n+  return cString;\n+}\n+@end\n+\n+int main () {\n+  Foo *string = @\"bla\";\n+  Foo *string2 = @\"bla\";\n+\n+  if(string != string2)\n+    abort();\n+  printf(\"Strings are being uniqued properly\\n\");\n+\n+  /* This memcpy has to be done before the first message is sent to a\n+     constant string object. Can't be moved to +initialize since _that_\n+     is already a message. */\n+\n+  memcpy(&_FooClassReference, objc_getClass(\"Foo\"), sizeof(_FooClassReference));\n+  if (strcmp ([string customString], \"bla\")) {\n+    abort ();\n+  }\n+\n+  printf([@\"This is a working constant string object\\n\" customString]);\n+  return 0;\n+}"}, {"sha": "df53c238a58d4f05e070bad990537af26e98ac7d", "filename": "gcc/testsuite/obj-c++.dg/const-str-4.mm", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-4.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-4.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-4.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,31 @@\n+/* Ensure that the preprocessor handles ObjC string constants gracefully. */\n+/* Author: Ziemowit Laski <zlaski@apple.com> */\n+/* { dg-options \"-fnext-runtime -fconstant-string-class=MyString -lobjc\" } */ \n+/* { dg-do run { target *-*-darwin* } } */\n+\n+extern \"C\" void abort(void);\n+\n+@interface MyString\n+{\n+  void *isa;\n+  char *str;\n+  int len;\n+}\n+@end\n+\n+#define kMyStringMacro1 \"My String\"\n+#define kMyStringMacro2 @\"My String\"\n+\n+void *_MyStringClassReference;\n+\n+@implementation MyString\n+@end\n+\n+int main(void) {\n+  MyString* aString1 = @kMyStringMacro1;\n+  MyString* aString2 = kMyStringMacro2;\n+  if(aString1 != aString2) {\n+    abort();\n+  }\n+  return 0;\n+}"}, {"sha": "186edcfceb22635af5b6f6ca2f9d803cbd170782", "filename": "gcc/testsuite/obj-c++.dg/const-str-5.mm", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-5.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,27 @@\n+/* Positive test case for constant string layout.  */\n+/* Contributed by Ziemowit Laski  <zlaski@apple.com>.  */\n+\n+/* { dg-options \"-fconstant-string-class=MyConstantString\" } */\n+/* { dg-do compile } */\n+\n+@interface MyBase {\n+  const char *p;\n+}\n+@end\n+\n+@interface MyConstantString: MyBase {\n+  union {\n+    void     *u;\n+    unsigned char   *c;\n+  } _contents;\n+  unsigned int  _count;\n+}\n+@end\n+\n+/* The NeXT runtime initializes the 'isa' pointer of string constants at\n+   compile time.  */\n+#ifdef __NEXT_RUNTIME__\n+extern void *_MyConstantStringClassReference;\n+#endif\n+\n+MyConstantString *str = @\"Hello\";"}, {"sha": "a7cbbf7141a79efa7dafffaf7f98393f4c8da1e2", "filename": "gcc/testsuite/obj-c++.dg/const-str-6.mm", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-6.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-6.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-6.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,27 @@\n+/* Negative test case for constant string layout.  */\n+/* Contributed by Ziemowit Laski  <zlaski@apple.com>.  */\n+\n+/* { dg-options \"-fconstant-string-class=MyConstantString\" } */\n+/* { dg-do compile } */\n+\n+@interface MyBase {\n+  char p;\n+}\n+@end\n+\n+@interface MyConstantString: MyBase {\n+  union {\n+    void     *u;\n+    unsigned char   *c;\n+  } _contents;\n+  char  _count;\n+}\n+@end\n+\n+/* The NeXT runtime initializes the 'isa' pointer of string constants at\n+   compile time.  */\n+#ifdef __NEXT_RUNTIME__\n+extern void *_MyConstantStringClassReference;\n+#endif\n+\n+MyConstantString *str = @\"Hello\"; /* { dg-error \"interface .MyConstantString. does not have valid constant string layout\" } */"}, {"sha": "3691579381d3a931b3697862998782ab77bc1cd5", "filename": "gcc/testsuite/obj-c++.dg/const-str-7.mm", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-7.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-7.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-7.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,46 @@\n+/* Test to make sure that the const objc strings are the same across\n+   scopes.  */\n+/* Developed by Andrew Pinski <pinskia@physics.uc.edu> */\n+\n+\n+/* { dg-options \"-fnext-runtime -fconstant-string-class=Foo -lobjc\" } */\n+/* { dg-do run { target *-*-darwin* } } */\n+\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <memory.h>\n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+\n+\n+@interface Foo: Object {\n+  char *cString;\n+  unsigned int len;\n+}\n+- (char *)customString;\n+@end\n+\n+struct objc_class _FooClassReference;\n+\n+\n+@implementation Foo : Object\n+- (char *)customString {\n+  return cString;\n+}\n+@end\n+\n+\n+int main () {\n+  Foo *string = @\"bla\";\n+  {\n+    Foo *string2 = @\"bla\";\n+\n+\n+    if(string != string2)\n+      abort();\n+    printf(\"Strings are being uniqued properly\\n\");\n+   }\n+  return 0;\n+}\n+"}, {"sha": "60abcbd52b167165f28328215f1a51cf8b80326b", "filename": "gcc/testsuite/obj-c++.dg/const-str-8.mm", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-8.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-8.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-8.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,39 @@\n+/* Test for assigning compile-time constant-string objects to static variables.  */\n+/* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n+\n+/* { dg-options \"-fnext-runtime -fconstant-string-class=Foo -lobjc\" } */\n+/* { dg-do run { target *-*-darwin* } } */\n+\n+\n+#include <stdlib.h>\n+#include <objc/Object.h>\n+\n+@interface Foo: Object {\n+  char *cString;\n+  unsigned int len;\n+}\n+@end\n+\n+struct objc_class _FooClassReference;\n+\n+@implementation Foo : Object\n+- (char *)customString {\n+  return cString;\n+}\n+@end\n+\n+static const Foo *appKey = @\"MyApp\";\n+static int CFPreferencesSynchronize (const Foo *ref) {\n+  return ref == appKey;\n+}\n+\n+static void PrefsSynchronize(void)\n+{\n+  if(!CFPreferencesSynchronize(appKey))\n+    abort();\n+}\n+\n+int main () {\n+  PrefsSynchronize();\n+  return 0;\n+}"}, {"sha": "97d49e9043cedcd26d1b26e64167e6962e87df92", "filename": "gcc/testsuite/obj-c++.dg/const-str-9.mm", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-9.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01277dc46a55d9695702d0008ddcd9eb8e193fec/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-9.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-9.mm?ref=01277dc46a55d9695702d0008ddcd9eb8e193fec", "patch": "@@ -0,0 +1,20 @@\n+/* Test if ObjC constant strings get placed in the correct section.  */\n+/* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n+\n+/* { dg-options \"-fnext-runtime\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+#include <objc/Object.h>\n+\n+@interface NSConstantString: Object {\n+  char *cString;\n+  unsigned int len;\n+}\n+@end\n+\n+extern struct objc_class _NSConstantStringClassReference;\n+\n+const NSConstantString *appKey = @\"MyApp\";\n+\n+/* { dg-final { scan-assembler \".section __OBJC, __cstring_object\" } } */\n+/* { dg-final { scan-assembler \".long\\t__NSConstantStringClassReference\\n\\t.long\\t.*\\n\\t.long\\t5\\n\\t.data\" } } */"}]}