{"sha": "21e51a55e9714d14a6df0e8e83ae005eb19f0f02", "node_id": "C_kwDOANBUbNoAKDIxZTUxYTU1ZTk3MTRkMTRhNmRmMGU4ZTgzYWUwMDVlYjE5ZjBmMDI", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2022-10-07T10:12:26Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2022-10-07T16:58:43Z"}, "message": "Specialize paths to version.h in _vxworks-versions.h\n\nThe _vxworks-versions.h runtime file helps us control\nthe compilation of some library components depending on\nthe OS version extracted out of a system header.\n\nThe system header name is \"version.h\", and gcc has a\n\"version.h\" file of its own.\n\ngcc's version.h is now generated and the current\ninstance instead of the OS one, resulting in build failures\nfrom\n\n  #if !defined(_WRS_VXWORKS_MAJOR)\n  #error \"_WRS_VXWORKS_MAJOR undefined\"\n  #endif\n\nThis change introduces a twist in the way\n_vxworks-versions.h #includes version.h, using a relative\npath with components that will match in the OS include\ndirs only.\n\nThe actual relative path is conditioned on _VSB_CONFIG_FILE\nto accommodate a change in the include dirs organisation between\nVxWorks 6 and 7.\n\n2022-10-07  Olivier Hainque  <hainque@adacore.com>\n\ngcc/\n\t* config/vxworks/_vxworks-versions.h: Use OS specific\n\tpaths in #include of version.h.", "tree": {"sha": "855c89f903d8a5c4aefa58367d5f3887e9a73b44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/855c89f903d8a5c4aefa58367d5f3887e9a73b44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21e51a55e9714d14a6df0e8e83ae005eb19f0f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21e51a55e9714d14a6df0e8e83ae005eb19f0f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21e51a55e9714d14a6df0e8e83ae005eb19f0f02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21e51a55e9714d14a6df0e8e83ae005eb19f0f02/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f09b99550a3c6cd16f5e9150ebd4b1d87033dcbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f09b99550a3c6cd16f5e9150ebd4b1d87033dcbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f09b99550a3c6cd16f5e9150ebd4b1d87033dcbd"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "994dda906430b82c103f9aef5429f98ebd1c076a", "filename": "gcc/config/vxworks/_vxworks-versions.h", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21e51a55e9714d14a6df0e8e83ae005eb19f0f02/gcc%2Fconfig%2Fvxworks%2F_vxworks-versions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21e51a55e9714d14a6df0e8e83ae005eb19f0f02/gcc%2Fconfig%2Fvxworks%2F_vxworks-versions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks%2F_vxworks-versions.h?ref=21e51a55e9714d14a6df0e8e83ae005eb19f0f02", "patch": "@@ -23,15 +23,24 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define _VXWORKS_VERSIONS_H  1\n \n /* All we need is access to the bare _WRS_VXWORKS_MAJOR/MINOR macros,\n-   exposed by version.h or already provided somehow (e.g. with a self\n-   spec for some reason).  When resorting to system headers, cheat a\n-   bit to make sure we don't drag additional header files, which can\n-   easily cause #include ordering nightmares.  */\n+   exposed by version.h or already provided somehow (e.g. with a self spec\n+   for some reason).  When resorting to system headers, use typical os\n+   paths to prevent possible confusion with a gcc version of version.h\n+   visible during the build and temporarily #undef _WRS_KERNEL to prevent\n+   indirect inclusion of internal header files, which can easily cause\n+   #include ordering nightmares.  */\n \n #if !defined(_WRS_VXWORKS_MAJOR)\n+\n+#if defined(_VSB_CONFIG_FILE)\n+#define _VXWORKS_VERSION_H <../public/version.h>\n+#else\n+#define _VXWORKS_VERSION_H <../h/version.h>\n+#endif\n+\n #pragma push_macro(\"_WRS_KERNEL\")\n #undef _WRS_KERNEL\n-#include <version.h>\n+#include _VXWORKS_VERSION_H\n #pragma pop_macro(\"_WRS_KERNEL\")\n #endif\n "}]}