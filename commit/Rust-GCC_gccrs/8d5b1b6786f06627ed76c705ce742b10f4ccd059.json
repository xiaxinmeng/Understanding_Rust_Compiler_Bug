{"sha": "8d5b1b6786f06627ed76c705ce742b10f4ccd059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ1YjFiNjc4NmYwNjYyN2VkNzZjNzA1Y2U3NDJiMTBmNGNjZDA1OQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2007-05-18T23:05:50Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2007-05-18T23:05:50Z"}, "message": "Index: gcc/java/ChangeLog\n2007-05-18  Geoffrey Keating  <geoffk@apple.com>\n\n\t* jcf-dump.c (HANDLE_MAGIC): Use 'unsigned long' for %lx.\n\t(print_constant): Likewise.\n\nIndex: gcc/ChangeLog\n2007-05-18  Geoffrey Keating  <geoffk@apple.com>\n\n\t* dwarf2out.c (print_die): Use '%ld' not '%lu' to print a 'long'.\n\t(output_die): Use 'unsigned long' with %x.\n\t* sched-vis.c (print_value): Use 'unsigned HOST_WIDE_INT' and\n\tHOST_WIDE_INT_PRINT_HEX to print HOST_WIDE_INT.\n\t* tree-dump.c (dump_pointer): Use 'unsigned long' for %lx.\n\nIndex: gcc/cp/ChangeLog\n2007-05-18  Geoffrey Keating  <geoffk@apple.com>\n\n\t* mangle.c (write_real_cst): Use 'unsigned long' for %lx.\n\nFrom-SVN: r124839", "tree": {"sha": "8ae71f8ebd710043f6c88db05c9fe55db40aecfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ae71f8ebd710043f6c88db05c9fe55db40aecfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d5b1b6786f06627ed76c705ce742b10f4ccd059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d5b1b6786f06627ed76c705ce742b10f4ccd059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d5b1b6786f06627ed76c705ce742b10f4ccd059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d5b1b6786f06627ed76c705ce742b10f4ccd059/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca0d5e024bf3dbf480927c1a00169843fe608b2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0d5e024bf3dbf480927c1a00169843fe608b2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0d5e024bf3dbf480927c1a00169843fe608b2c"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "d558fac20db4418ef5bc2982fc3e6d55decb81ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d5b1b6786f06627ed76c705ce742b10f4ccd059", "patch": "@@ -1,5 +1,11 @@\n 2007-05-18  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* dwarf2out.c (print_die): Use '%ld' not '%lu' to print a 'long'.\n+\t(output_die): Use 'unsigned long' with %x.\n+\t* sched-vis.c (print_value): Use 'unsigned HOST_WIDE_INT' and\n+\tHOST_WIDE_INT_PRINT_HEX to print HOST_WIDE_INT.\n+\t* tree-dump.c (dump_pointer): Use 'unsigned long' for %lx.\n+\n \t* unwind-dw2.c (uw_identify_context): Use the CFA, not the IP.\n \n 2007-05-18  H.J. Lu  <hongjiu.lu@intel.com>"}, {"sha": "125d56d6d8e720e6cd48495a8b46d068f9681e12", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8d5b1b6786f06627ed76c705ce742b10f4ccd059", "patch": "@@ -1,3 +1,7 @@\n+2007-05-18  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* mangle.c (write_real_cst): Use 'unsigned long' for %lx.\n+\n 2007-05-14  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/29928"}, {"sha": "df5b7d8bab4e8ea6c8af3fa5d7e20da99718aafc", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=8d5b1b6786f06627ed76c705ce742b10f4ccd059", "patch": "@@ -1340,7 +1340,7 @@ write_real_cst (const tree value)\n \n       for (; i != limit; i += dir)\n \t{\n-\t  sprintf (buffer, \"%08lx\", target_real[i]);\n+\t  sprintf (buffer, \"%08lx\", (unsigned long) target_real[i]);\n \t  write_chars (buffer, 8);\n \t}\n     }"}, {"sha": "ae540215ec4d0182dbc610b0675a1ab65a6d3573", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=8d5b1b6786f06627ed76c705ce742b10f4ccd059", "patch": "@@ -5768,11 +5768,11 @@ print_die (dw_die_ref die, FILE *outfile)\n   unsigned ix;\n \n   print_spaces (outfile);\n-  fprintf (outfile, \"DIE %4lu: %s\\n\",\n+  fprintf (outfile, \"DIE %4ld: %s\\n\",\n \t   die->die_offset, dwarf_tag_name (die->die_tag));\n   print_spaces (outfile);\n   fprintf (outfile, \"  abbrev id: %lu\", die->die_abbrev);\n-  fprintf (outfile, \" offset: %lu\\n\", die->die_offset);\n+  fprintf (outfile, \" offset: %ld\\n\", die->die_offset);\n \n   for (ix = 0; VEC_iterate (dw_attr_node, die->die_attr, ix, a); ix++)\n     {\n@@ -5820,7 +5820,7 @@ print_die (dw_die_ref die, FILE *outfile)\n \t      if (AT_ref (a)->die_symbol)\n \t\tfprintf (outfile, \"die -> label: %s\", AT_ref (a)->die_symbol);\n \t      else\n-\t\tfprintf (outfile, \"die -> %lu\", AT_ref (a)->die_offset);\n+\t\tfprintf (outfile, \"die -> %ld\", AT_ref (a)->die_offset);\n \t    }\n \t  else\n \t    fprintf (outfile, \"die -> <null>\");\n@@ -7091,7 +7091,8 @@ output_die (dw_die_ref die)\n     output_die_symbol (die);\n \n   dw2_asm_output_data_uleb128 (die->die_abbrev, \"(DIE (0x%lx) %s)\",\n-\t\t\t       die->die_offset, dwarf_tag_name (die->die_tag));\n+\t\t\t       (unsigned long)die->die_offset,\n+\t\t\t       dwarf_tag_name (die->die_tag));\n \n   for (ix = 0; VEC_iterate (dw_attr_node, die->die_attr, ix, a); ix++)\n     {\n@@ -7273,7 +7274,7 @@ output_die (dw_die_ref die)\n   /* Add null byte to terminate sibling list.  */\n   if (die->die_child != NULL)\n     dw2_asm_output_data (1, 0, \"end of children of DIE 0x%lx\",\n-\t\t\t die->die_offset);\n+\t\t\t (unsigned long) die->die_offset);\n }\n \n /* Output the compilation unit that appears at the beginning of the"}, {"sha": "7bfa288ec5f6982b3ac85a301712bd0283a17920", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=8d5b1b6786f06627ed76c705ce742b10f4ccd059", "patch": "@@ -1,3 +1,8 @@\n+2007-05-18  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* jcf-dump.c (HANDLE_MAGIC): Use 'unsigned long' for %lx.\n+\t(print_constant): Likewise.\n+\n 2007-05-14  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* expr.c (build_java_binop): Use unsigned_type_for instead of"}, {"sha": "5397bc353b141340ea2d0a5d59a46ba9a390ccf2", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=8d5b1b6786f06627ed76c705ce742b10f4ccd059", "patch": "@@ -138,7 +138,7 @@ utf8_equal_string (JCF *jcf, int index, const char * value)\n   if (flag_print_class_info) \\\n     fprintf (out, \\\n              \"Magic number: 0x%0lx, minor_version: %ld, major_version: %ld.\\n\",\\\n-\t     (long) MAGIC, (long) MINOR, (long) MAJOR)\n+\t     (unsigned long) MAGIC, (long) MINOR, (long) MAJOR)\n \n #define HANDLE_START_CONSTANT_POOL(COUNT) \\\n   if (flag_print_constant_pool) \\\n@@ -811,7 +811,7 @@ print_constant (FILE *out, JCF *jcf, int index, int verbosity)\n \t  }\n \n \tif (verbosity > 1)\n-\t  fprintf (out, \", bits = 0x%08lx\", (long) JPOOL_UINT (jcf, index));\n+\t  fprintf (out, \", bits = 0x%08lx\", (unsigned long) JPOOL_UINT (jcf, index));\n \t\n \tbreak;\n       }\n@@ -860,7 +860,8 @@ print_constant (FILE *out, JCF *jcf, int index, int verbosity)\n \t    int32 hi, lo;\n \t    hi = JPOOL_UINT (jcf, index);\n \t    lo = JPOOL_UINT (jcf, index + 1);\n-\t    fprintf (out, \", bits = 0x%08lx%08lx\", (long) hi, (long) lo);\n+\t    fprintf (out, \", bits = 0x%08lx%08lx\", (unsigned long) hi,\n+\t\t     (unsigned long) lo);\n \t  }\n \tbreak;\n       }"}, {"sha": "fec0bb7082420294c047f82a148ce9da979fb4e1", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=8d5b1b6786f06627ed76c705ce742b10f4ccd059", "patch": "@@ -430,7 +430,10 @@ print_value (char *buf, rtx x, int verbose)\n       if (FLOAT_MODE_P (GET_MODE (x)))\n \treal_to_decimal (t, CONST_DOUBLE_REAL_VALUE (x), sizeof (t), 0, 1);\n       else\n-\tsprintf (t, \"<0x%lx,0x%lx>\", (long) CONST_DOUBLE_LOW (x), (long) CONST_DOUBLE_HIGH (x));\n+\tsprintf (t,\n+\t\t \"<\" HOST_WIDE_INT_PRINT_HEX \",\" HOST_WIDE_INT_PRINT_HEX \">\",\n+\t\t (unsigned HOST_WIDE_INT) CONST_DOUBLE_LOW (x),\n+\t\t (unsigned HOST_WIDE_INT) CONST_DOUBLE_HIGH (x));\n       cur = safe_concat (buf, cur, t);\n       break;\n     case CONST_STRING:"}, {"sha": "d8f871e47db293414c533758433fb48b95b3c1a3", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d5b1b6786f06627ed76c705ce742b10f4ccd059/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=8d5b1b6786f06627ed76c705ce742b10f4ccd059", "patch": "@@ -166,7 +166,7 @@ void\n dump_pointer (dump_info_p di, const char *field, void *ptr)\n {\n   dump_maybe_newline (di);\n-  fprintf (di->stream, \"%-4s: %-8lx \", field, (long) ptr);\n+  fprintf (di->stream, \"%-4s: %-8lx \", field, (unsigned long) ptr);\n   di->column += 15;\n }\n "}]}