{"sha": "b55d9ff81426a8eaf68fbd962e5e41f788c82102", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU1ZDlmZjgxNDI2YThlYWY2OGZiZDk2MmU1ZTQxZjc4OGM4MjEwMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-01T02:26:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-01T02:26:06Z"}, "message": "(assign_temp): Add extra arg, DONT_PROMOTE.\n\nDon't return (const_int 0) for VOIDmode.\n\nFrom-SVN: r10923", "tree": {"sha": "450e329cb677e4dda5ea84fcab7d388740885f4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/450e329cb677e4dda5ea84fcab7d388740885f4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b55d9ff81426a8eaf68fbd962e5e41f788c82102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55d9ff81426a8eaf68fbd962e5e41f788c82102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b55d9ff81426a8eaf68fbd962e5e41f788c82102", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55d9ff81426a8eaf68fbd962e5e41f788c82102/comments", "author": null, "committer": null, "parents": [{"sha": "eb7102fe24d45f561bba70a655e93ce5f0ff5d42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb7102fe24d45f561bba70a655e93ce5f0ff5d42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb7102fe24d45f561bba70a655e93ce5f0ff5d42"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "66ff42091b626b3253fbb8002eac98fcc247f576", "filename": "gcc/function.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55d9ff81426a8eaf68fbd962e5e41f788c82102/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55d9ff81426a8eaf68fbd962e5e41f788c82102/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b55d9ff81426a8eaf68fbd962e5e41f788c82102", "patch": "@@ -922,13 +922,16 @@ assign_stack_temp (mode, size, keep)\n /* Assign a temporary of given TYPE.\n    KEEP is as for assign_stack_temp.\n    MEMORY_REQUIRED is 1 if the result must be addressable stack memory;\n-   it is 0 if a register is OK. */\n+   it is 0 if a register is OK.\n+   DONT_PROMOTE is 1 if we should not promote values in register\n+   to wider modes.  */\n \n rtx\n-assign_temp (type, keep, memory_required)\n+assign_temp (type, keep, memory_required, dont_promote)\n      tree type;\n      int keep;\n      int memory_required;\n+     int dont_promote;\n {\n   enum machine_mode mode = TYPE_MODE (type);\n   int unsignedp = TREE_UNSIGNED (type);\n@@ -952,11 +955,9 @@ assign_temp (type, keep, memory_required)\n       return tmp;\n     }\n \n-  if (mode == VOIDmode)\n-    return const0_rtx;\n-\n #ifndef PROMOTE_FOR_CALL_ONLY\n-  mode = promote_mode (type, mode, &unsignedp, 0);\n+  if (! dont_promote)\n+    mode = promote_mode (type, mode, &unsignedp, 0);\n #endif\n \n   return gen_reg_rtx (mode);"}]}