{"sha": "f1b54f9bbbdd82051937383d453d73559438d9a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFiNTRmOWJiYmRkODIwNTE5MzczODNkNDUzZDczNTU5NDM4ZDlhOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-02-07T13:21:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-02-07T13:21:36Z"}, "message": "aclocal.m4 (GCC_FUNC_PRINTF_PTR): New macro to test the printf functions for whether they support the %p format...\n\n* aclocal.m4 (GCC_FUNC_PRINTF_PTR): New macro to test the printf\nfunctions for whether they support the %p format specifier.\n* acconfig.h (HOST_PTR_PRINTF): Insert stub for autoconf.\n* configure.in (GCC_FUNC_PRINTF_PTR): Use it.\n* configure, config.in: Rebuild.\n\nFrom-SVN: r17760", "tree": {"sha": "6bdcb43666cef30b2f83a4a5fc6d613690298236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bdcb43666cef30b2f83a4a5fc6d613690298236"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1b54f9bbbdd82051937383d453d73559438d9a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b54f9bbbdd82051937383d453d73559438d9a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b54f9bbbdd82051937383d453d73559438d9a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b54f9bbbdd82051937383d453d73559438d9a9/comments", "author": null, "committer": null, "parents": [{"sha": "941ac66e0ba33e58a9ca6d2ffada7c304b9232d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941ac66e0ba33e58a9ca6d2ffada7c304b9232d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941ac66e0ba33e58a9ca6d2ffada7c304b9232d7"}], "stats": {"total": 144, "additions": 139, "deletions": 5}, "files": [{"sha": "91173766d75b7a321288425e4bb2e0e4998b8e0b", "filename": "gcc/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=f1b54f9bbbdd82051937383d453d73559438d9a9", "patch": "@@ -1,3 +1,6 @@\n+/* Define to \"%p\" if printf supports it, else machmode.h will define it.  */\n+#undef HOST_PTR_PRINTF\n+\n /* Define if your cpp understands the stringify operator.  */\n #undef HAVE_CPP_STRINGIFY\n "}, {"sha": "601af11cec011264967ee11f1f79805b69c9de85", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=f1b54f9bbbdd82051937383d453d73559438d9a9", "patch": "@@ -42,6 +42,27 @@ GCC_NEED_DECLARATION($ac_func)\n done\n ])\n \n+dnl See if the printf functions in libc support %p in format strings.\n+AC_DEFUN(GCC_FUNC_PRINTF_PTR,\n+[AC_CACHE_CHECK(whether the printf functions support %p,\n+  gcc_cv_func_printf_ptr,\n+[AC_TRY_RUN([#include <stdio.h>\n+\n+main()\n+{\n+  char buf[64];\n+  char *p = buf, *q = NULL;\n+  sprintf(buf, \"%p\", p);\n+  sscanf(buf, \"%p\", &q);\n+  exit (p != q);\n+}], gcc_cv_func_printf_ptr=yes, gcc_cv_func_printf_ptr=no,\n+\tgcc_cv_func_printf_ptr=no)\n+rm -f core core.* *.core])\n+if test $gcc_cv_func_printf_ptr = yes ; then\n+  AC_DEFINE(HOST_PTR_PRINTF, \"%p\")\n+fi\n+])\n+\n dnl See if symbolic links work and if not, try to substitute either hard links or simple copy.\n AC_DEFUN(GCC_PROG_LN_S,\n [AC_MSG_CHECKING(whether ln -s works)"}, {"sha": "6ca695d2bc1d6cea1f858e4a20983c104691a37a", "filename": "gcc/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=f1b54f9bbbdd82051937383d453d73559438d9a9", "patch": "@@ -1,4 +1,7 @@\n /* config.in.  Generated automatically from configure.in by autoheader.  */\n+/* Define to \"%p\" if printf supports it, else machmode.h will define it.  */\n+#undef HOST_PTR_PRINTF\n+\n /* Define if your cpp understands the stringify operator.  */\n #undef HAVE_CPP_STRINGIFY\n "}, {"sha": "31d9ccf810a7e43c8afda274658c7478480dc653", "filename": "gcc/configure", "status": "modified", "additions": 110, "deletions": 5, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f1b54f9bbbdd82051937383d453d73559438d9a9", "patch": "@@ -1917,16 +1917,121 @@ fi\n done\n \n \n-GCC_NEED_DECLARATIONS(malloc realloc calloc free bcopy bzero bcmp \\\n-\tindex rindex getenv atol sbrk abort)\n+echo $ac_n \"checking whether the printf functions support %p\"\"... $ac_c\" 1>&6\n+echo \"configure:1922: checking whether the printf functions support %p\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_func_printf_ptr'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test \"$cross_compiling\" = yes; then\n+  gcc_cv_func_printf_ptr=no\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1930 \"configure\"\n+#include \"confdefs.h\"\n+#include <stdio.h>\n+\n+main()\n+{\n+  char buf[64];\n+  char *p = buf, *q = NULL;\n+  sprintf(buf, \"%p\", p);\n+  sscanf(buf, \"%p\", &q);\n+  exit (p != q);\n+}\n+EOF\n+if { (eval echo configure:1943: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+then\n+  gcc_cv_func_printf_ptr=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -fr conftest*\n+  gcc_cv_func_printf_ptr=no\n+fi\n+rm -fr conftest*\n+fi\n+\n+rm -f core core.* *.core\n+fi\n+\n+echo \"$ac_t\"\"$gcc_cv_func_printf_ptr\" 1>&6\n+if test $gcc_cv_func_printf_ptr = yes ; then\n+  cat >> confdefs.h <<\\EOF\n+#define HOST_PTR_PRINTF \"%p\"\n+EOF\n+\n+fi\n+\n+\n+for ac_func in malloc realloc calloc free bcopy bzero bcmp \\\n+\tindex rindex getenv atol sbrk abort\n+do\n+echo $ac_n \"checking whether $ac_func must be declared\"\"... $ac_c\" 1>&6\n+echo \"configure:1971: checking whether $ac_func must be declared\" >&5\n+if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_$ac_func'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1976 \"configure\"\n+#include \"confdefs.h\"\n+\n+#include <stdio.h>\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif\n+#ifndef HAVE_RINDEX\n+#define rindex strrchr\n+#endif\n+#ifndef HAVE_INDEX\n+#define index strchr\n+#endif\n+int main() {\n+char *(*pfn) = (char *(*)) $ac_func\n+; return 0; }\n+EOF\n+if { (eval echo configure:2003: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  eval \"gcc_cv_decl_needed_$ac_func=no\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"gcc_cv_decl_needed_$ac_func=yes\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$gcc_cv_decl_needed_'$ac_func`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  gcc_tr_decl=NEED_DECLARATION_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+  cat >> confdefs.h <<EOF\n+#define $gcc_tr_decl 1\n+EOF\n+\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+done\n+\n \n echo $ac_n \"checking for sys_siglist declaration in signal.h or unistd.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1925: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n+echo \"configure:2030: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_decl_sys_siglist'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1930 \"configure\"\n+#line 2035 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <signal.h>\n@@ -1938,7 +2043,7 @@ int main() {\n char *msg = *(sys_siglist + 1);\n ; return 0; }\n EOF\n-if { (eval echo configure:1942: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2047: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_decl_sys_siglist=yes\n else"}, {"sha": "cdaf64159194481c867454c507f2cbb80941139c", "filename": "gcc/configure.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b54f9bbbdd82051937383d453d73559438d9a9/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=f1b54f9bbbdd82051937383d453d73559438d9a9", "patch": "@@ -180,6 +180,8 @@ AC_MSG_RESULT($gcc_cv_header_inttypes_h)\n AC_CHECK_FUNCS(strtoul bsearch strerror putenv popen vprintf bcopy bzero bcmp \\\n \tindex rindex kill getrlimit setrlimit atoll atoq)\n \n+GCC_FUNC_PRINTF_PTR\n+\n GCC_NEED_DECLARATIONS(malloc realloc calloc free bcopy bzero bcmp \\\n \tindex rindex getenv atol sbrk abort)\n "}]}