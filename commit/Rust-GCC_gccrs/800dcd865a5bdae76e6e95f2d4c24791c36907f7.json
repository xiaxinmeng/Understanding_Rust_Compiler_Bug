{"sha": "800dcd865a5bdae76e6e95f2d4c24791c36907f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAwZGNkODY1YTViZGFlNzZlNmU5NWYyZDRjMjQ3OTFjMzY5MDdmNw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-11-21T06:15:08Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-11-21T06:15:08Z"}, "message": "make recog () take a rtx_insn *\n\ngcc/ChangeLog:\n\n2016-11-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* config/v850/v850.c (expand_prologue): Adjust.\n\t(expand_epilogue): Likewise.\n\t* expr.c (init_expr_target): Likewise.\n\t* genrecog.c (print_subroutine): Always make the argument type\n\trtx_insn *.\n\t* recog.h: Adjust prototype.\n\nFrom-SVN: r242651", "tree": {"sha": "509ef6320640f978b338781791b3dbfd30eb42af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/509ef6320640f978b338781791b3dbfd30eb42af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/800dcd865a5bdae76e6e95f2d4c24791c36907f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800dcd865a5bdae76e6e95f2d4c24791c36907f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800dcd865a5bdae76e6e95f2d4c24791c36907f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800dcd865a5bdae76e6e95f2d4c24791c36907f7/comments", "author": null, "committer": null, "parents": [{"sha": "f370536c9c6a1eca30fe9685b9cbcb8dca681e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f370536c9c6a1eca30fe9685b9cbcb8dca681e36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f370536c9c6a1eca30fe9685b9cbcb8dca681e36"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "b08f0813811be4e6e97cb9a4695e479a87e92f06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=800dcd865a5bdae76e6e95f2d4c24791c36907f7", "patch": "@@ -1,3 +1,12 @@\n+2016-11-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* config/v850/v850.c (expand_prologue): Adjust.\n+\t(expand_epilogue): Likewise.\n+\t* expr.c (init_expr_target): Likewise.\n+\t* genrecog.c (print_subroutine): Always make the argument type\n+\trtx_insn *.\n+\t* recog.h: Adjust prototype.\n+\n 2016-11-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* config/aarch64/aarch64.c (aarch64_emit_unlikely_jump): split"}, {"sha": "c27bb6d021f09aa5cc33b4b4bd50a4e8bed6099a", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=800dcd865a5bdae76e6e95f2d4c24791c36907f7", "patch": "@@ -1741,7 +1741,7 @@ expand_prologue (void)\n \n \t  v850_all_frame_related (save_all);\n \n-\t  code = recog (save_all, NULL_RTX, NULL);\n+\t  code = recog (save_all, NULL, NULL);\n \t  if (code >= 0)\n \t    {\n \t      rtx insn = emit_insn (save_all);\n@@ -1887,7 +1887,7 @@ expand_epilogue (void)\n \t      offset -= 4;\n \t    }\n \n-\t  code = recog (restore_all, NULL_RTX, NULL);\n+\t  code = recog (restore_all, NULL, NULL);\n \t  \n \t  if (code >= 0)\n \t    {"}, {"sha": "fe752fb8f2b3dc17b644da9d25c15e72cd3800b3", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=800dcd865a5bdae76e6e95f2d4c24791c36907f7", "patch": "@@ -109,7 +109,7 @@ static HOST_WIDE_INT int_expr_size (tree);\n void\n init_expr_target (void)\n {\n-  rtx insn, pat;\n+  rtx pat;\n   machine_mode mode;\n   int num_clobbers;\n   rtx mem, mem1;\n@@ -125,7 +125,7 @@ init_expr_target (void)\n      useless RTL allocations.  */\n   reg = gen_rtx_REG (word_mode, LAST_VIRTUAL_REGISTER + 1);\n \n-  insn = rtx_alloc (INSN);\n+  rtx_insn *insn = as_a<rtx_insn *> (rtx_alloc (INSN));\n   pat = gen_rtx_SET (NULL_RTX, NULL_RTX);\n   PATTERN (insn) = pat;\n "}, {"sha": "e4377c3afa44575a198963a9c101b68287bf48a3", "filename": "gcc/genrecog.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=800dcd865a5bdae76e6e95f2d4c24791c36907f7", "patch": "@@ -5099,11 +5099,6 @@ print_pattern (output_state *os, pattern_routine *routine)\n static void\n print_subroutine (output_state *os, state *s, int proc_id)\n {\n-  /* For now, the top-level \"recog\" takes a plain \"rtx\", and performs a\n-     checked cast to \"rtx_insn *\" for use throughout the rest of the\n-     function and the code it calls.  */\n-  const char *insn_param\n-    = proc_id > 0 ? \"rtx_insn *insn\" : \"rtx uncast_insn\";\n   printf (\"\\n\");\n   switch (os->type)\n     {\n@@ -5116,8 +5111,8 @@ print_subroutine (output_state *os, state *s, int proc_id)\n       else\n \tprintf (\"int\\nrecog\");\n       printf (\" (rtx x1 ATTRIBUTE_UNUSED,\\n\"\n-\t      \"\\t%s ATTRIBUTE_UNUSED,\\n\"\n-\t      \"\\tint *pnum_clobbers ATTRIBUTE_UNUSED)\\n\", insn_param);\n+\t      \"\\trtx_insn *insn ATTRIBUTE_UNUSED,\\n\"\n+\t      \"\\tint *pnum_clobbers ATTRIBUTE_UNUSED)\\n\");\n       break;\n \n     case SPLIT:\n@@ -5142,11 +5137,6 @@ print_subroutine (output_state *os, state *s, int proc_id)\n   if (proc_id == 0)\n     {\n       printf (\"  recog_data.insn = NULL;\\n\");\n-      if (os->type == RECOG)\n-\t{\n-\t  printf (\"  rtx_insn *insn ATTRIBUTE_UNUSED;\\n\");\n-\t  printf (\"  insn = safe_as_a <rtx_insn *> (uncast_insn);\\n\");\n-\t}\n     }\n   print_state (os, s, 2, true);\n   printf (\"}\\n\");"}, {"sha": "9f6c42c83a205a033c0476893196caf8cc61b4d4", "filename": "gcc/recog.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/800dcd865a5bdae76e6e95f2d4c24791c36907f7/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=800dcd865a5bdae76e6e95f2d4c24791c36907f7", "patch": "@@ -124,7 +124,7 @@ extern int offsettable_address_addr_space_p (int, machine_mode, rtx,\n \t\t\t\t\t  ADDR_SPACE_GENERIC)\n extern bool mode_dependent_address_p (rtx, addr_space_t);\n \n-extern int recog (rtx, rtx, int *);\n+extern int recog (rtx, rtx_insn *, int *);\n #ifndef GENERATOR_FILE\n static inline int recog_memoized (rtx_insn *insn);\n #endif"}]}