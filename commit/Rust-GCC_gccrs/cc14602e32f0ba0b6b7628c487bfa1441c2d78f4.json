{"sha": "cc14602e32f0ba0b6b7628c487bfa1441c2d78f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MxNDYwMmUzMmYwYmEwYjZiNzYyOGM0ODdiZmExNDQxYzJkNzhmNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-17T02:28:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-17T02:28:06Z"}, "message": "PR c++/80614 - Wrong mangling for C++17 noexcept type\n\n\t* mangle.c (write_type): Put the eh spec back on the function type.\n\nFrom-SVN: r249321", "tree": {"sha": "f9b7c64916947594eee50c02da78aab19cca9bf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9b7c64916947594eee50c02da78aab19cca9bf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3da557ec145823c3f51ff3fa7c619d0064134800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da557ec145823c3f51ff3fa7c619d0064134800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da557ec145823c3f51ff3fa7c619d0064134800"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "66dd04427003d0a4bc8aad0099a9c140761565ab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cc14602e32f0ba0b6b7628c487bfa1441c2d78f4", "patch": "@@ -1,5 +1,8 @@\n 2017-06-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/80614 - Wrong mangling for C++17 noexcept type\n+\t* mangle.c (write_type): Put the eh spec back on the function type.\n+\n \tPR c++/81102 - Wrong error with partial specialization.\n \t* pt.c (unify) [TEMPLATE_PARM_INDEX]: Strip reference when comparing\n \ttypes.  Do type deduction later."}, {"sha": "c83aef5ede4bf37d26b00f5f9f93601bbed5d485", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=cc14602e32f0ba0b6b7628c487bfa1441c2d78f4", "patch": "@@ -2100,6 +2100,11 @@ write_type (tree type)\n \t  || TREE_CODE (t) == METHOD_TYPE)\n \t{\n \t  t = build_ref_qualified_type (t, type_memfn_rqual (type));\n+\t  if (flag_noexcept_type)\n+\t    {\n+\t      tree r = TYPE_RAISES_EXCEPTIONS (type);\n+\t      t = build_exception_variant (t, r);\n+\t    }\n \t  if (abi_version_at_least (8)\n \t      || type == TYPE_MAIN_VARIANT (type))\n \t    /* Avoid adding the unqualified function type as a substitution.  */"}, {"sha": "8c763a536a220876ad9fa3d3fe02b8d8de060208", "filename": "gcc/testsuite/g++.dg/cpp1z/noexcept-type16.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc14602e32f0ba0b6b7628c487bfa1441c2d78f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type16.C?ref=cc14602e32f0ba0b6b7628c487bfa1441c2d78f4", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/80614\n+// { dg-options -std=c++1z }\n+\n+template <typename T> void fn() {}\n+\n+int main() {\n+  // { dg-final { scan-assembler \"_Z2fnIKFvvEEvv\" } }\n+  fn<void() const>();\n+  // { dg-final { scan-assembler \"_Z2fnIKDoFvvEEvv\" } }\n+  fn<void() const noexcept>();\n+}"}]}