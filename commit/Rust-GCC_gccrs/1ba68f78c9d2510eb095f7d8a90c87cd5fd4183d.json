{"sha": "1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d", "node_id": "C_kwDOANBUbNoAKDFiYTY4Zjc4YzlkMjUxMGViMDk1ZjdkOGE5MGM4N2NkNWZkNDE4M2Q", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-04-05T13:23:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-04T07:51:19Z"}, "message": "debug/105158 - improve debug stmt retaining for forwarder removal\n\nCurrently when we cannot move debug stmt from a forwarder to the\ndestination block we drop/reset them.  But in some cases as for\nthe testcase we can move them to the predecessor when that has\na single successor and we can insert after the last stmt of the\nblock.  That allows us to preserve debug info here.\n\n2022-04-05  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/105158\n\t* tree-cfgcleanup.cc (move_debug_stmts_from_forwarder):\n\tMove debug stmts to the predecessor if moving to the\n\tdestination is not possible.\n\t(remove_forwarder_block): Adjust.\n\t(remove_forwarder_block_with_phi): Likewise.", "tree": {"sha": "4e1fb053f4fddbc9bcf465f41088e9d6d898613f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e1fb053f4fddbc9bcf465f41088e9d6d898613f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4ae175881f773383f392ee39bad4ac1c0fa53ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ae175881f773383f392ee39bad4ac1c0fa53ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ae175881f773383f392ee39bad4ac1c0fa53ca"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "893619eaaa43b3c055f79721ee0c65250a3854c1", "filename": "gcc/tree-cfgcleanup.cc", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d/gcc%2Ftree-cfgcleanup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d/gcc%2Ftree-cfgcleanup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.cc?ref=1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d", "patch": "@@ -468,15 +468,34 @@ phi_alternatives_equal (basic_block dest, edge e1, edge e2)\n   return true;\n }\n \n-/* Move debug stmts from the forwarder block SRC to DEST.  */\n+/* Move debug stmts from the forwarder block SRC to DEST or PRED.  */\n \n static void\n-move_debug_stmts_from_forwarder (basic_block src, basic_block dest,\n-\t\t\t\t bool dest_single_pred_p)\n+move_debug_stmts_from_forwarder (basic_block src,\n+\t\t\t\t basic_block dest, bool dest_single_pred_p,\n+\t\t\t\t basic_block pred, bool pred_single_succ_p)\n {\n   if (!MAY_HAVE_DEBUG_STMTS)\n     return;\n \n+  /* If we cannot move to the destination but to the predecessor do that.  */\n+  if (!dest_single_pred_p && pred_single_succ_p)\n+    {\n+      gimple_stmt_iterator gsi_to = gsi_last_bb (pred);\n+      if (gsi_end_p (gsi_to) || !stmt_ends_bb_p (gsi_stmt (gsi_to)))\n+\t{\n+\t  for (gimple_stmt_iterator gsi = gsi_after_labels (src);\n+\t       !gsi_end_p (gsi);)\n+\t    {\n+\t      gimple *debug = gsi_stmt (gsi);\n+\t      gcc_assert (is_gimple_debug (debug));\n+\t      gsi_move_after (&gsi, &gsi_to);\n+\t    }\n+\t  return;\n+\t}\n+    }\n+\n+  /* Else move to DEST or drop/reset them.  */\n   gimple_stmt_iterator gsi_to = gsi_after_labels (dest);\n   for (gimple_stmt_iterator gsi = gsi_after_labels (src); !gsi_end_p (gsi);)\n     {\n@@ -627,7 +646,8 @@ remove_forwarder_block (basic_block bb)\n \n   /* Move debug statements.  Reset them if the destination does not\n      have a single predecessor.  */\n-  move_debug_stmts_from_forwarder (bb, dest, dest_single_pred_p);\n+  move_debug_stmts_from_forwarder (bb, dest, dest_single_pred_p,\n+\t\t\t\t   pred, pred && single_succ_p (pred));\n \n   bitmap_set_bit (cfgcleanup_altered_bbs, dest->index);\n \n@@ -1309,7 +1329,8 @@ remove_forwarder_block_with_phi (basic_block bb)\n \n   /* Move debug statements.  Reset them if the destination does not\n      have a single predecessor.  */\n-  move_debug_stmts_from_forwarder (bb, dest, dest_single_pred_p);\n+  move_debug_stmts_from_forwarder (bb, dest, dest_single_pred_p,\n+\t\t\t\t   pred, pred && single_succ_p (pred));\n \n   /* Update the dominators.  */\n   dombb = get_immediate_dominator (CDI_DOMINATORS, bb);"}]}