{"sha": "716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE2YWMwZmM2YzBlZjBmMWJmM2EyOTVmMTMzOGVlYjY5N2NkZGI0Mw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-08-17T14:39:51Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-08-17T14:39:51Z"}, "message": "re PR fortran/78739 (ICE in gfc_get_symbol_decl, at fortran/trans-decl.c:1477)\n\n2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/78739\n\t* match.c (gfc_match_st_function):  When matching a statement function,\n\tneed to check if the statement function name shadows the function\n\tname.\n\n2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/78739\n\t* fortran.dg/pr78739.f90: New test.\n\nFrom-SVN: r274605", "tree": {"sha": "9b7bb21748305aae9a215666d079242f79bcb1fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b7bb21748305aae9a215666d079242f79bcb1fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/comments", "author": null, "committer": null, "parents": [{"sha": "1c3925e32aea0046e01f844f2519c47caa7aa63b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3925e32aea0046e01f844f2519c47caa7aa63b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3925e32aea0046e01f844f2519c47caa7aa63b"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "21593de0179468bcf8c4533dc1bf520092aaca5d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43", "patch": "@@ -1,3 +1,10 @@\n+2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/78739\n+\t* match.c (gfc_match_st_function):  When matching a statement function,\n+\tneed to check if the statement function name shadows the function\n+\tname.\n+\n 2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/78719"}, {"sha": "f148a02eb5059c450388cd361a8ab6dff2471713", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43", "patch": "@@ -5751,7 +5751,29 @@ gfc_match_st_function (void)\n   gfc_symbol *sym;\n   gfc_expr *expr;\n   match m;\n+  char name[GFC_MAX_SYMBOL_LEN + 1];\n+  locus old_locus;\n+  bool fcn;\n+  gfc_formal_arglist *ptr;\n+\n+  /* Read the possible statement function name, and then check to see if\n+     a symbol is already present in the namespace.  Record if it is a\n+     function and whether it has been referenced.  */\n+  fcn = false;\n+  ptr = NULL;\n+  old_locus = gfc_current_locus;\n+  m = gfc_match_name (name);\n+  if (m == MATCH_YES)\n+    {\n+      gfc_find_symbol (name, NULL, 1, &sym);\n+      if (sym && sym->attr.function && !sym->attr.referenced)\n+\t{\n+\t  fcn = true;\n+\t  ptr = sym->formal;\n+\t}\n+    }\n \n+  gfc_current_locus = old_locus;\n   m = gfc_match_symbol (&sym, 0);\n   if (m != MATCH_YES)\n     return m;\n@@ -5779,6 +5801,13 @@ gfc_match_st_function (void)\n       return MATCH_ERROR;\n     }\n \n+  if (fcn && ptr != sym->formal)\n+    {\n+      gfc_error (\"Statement function %qs at %L conflicts with function name\",\n+\t\t sym->name, &expr->where);\n+      return MATCH_ERROR;\n+    }\n+\n   sym->value = expr;\n \n   if ((gfc_current_state () == COMP_FUNCTION"}, {"sha": "8eecb3b96a480e80fd4b067666c81deead8e5a42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43", "patch": "@@ -1,3 +1,8 @@\n+2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/78739\n+\t* fortran.dg/pr78739.f90: New test.\n+\n 2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/78719"}, {"sha": "4b36b76ab21aef784c0e4fd6591a42ffe7f0f05e", "filename": "gcc/testsuite/gfortran.dg/pr78739.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78739.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78739.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78739.f90?ref=716ac0fc6c0ef0f1bf3a295f1338eeb697cddb43", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-w\" }\n+! PR fortran/78739\n+! Code contributed Gerhard Steinmetz\n+function f(n)\n+   f() = n    ! { dg-error \"conflicts with function name\" }\n+end\n+\n+function g()\n+   g(x) = x   ! { dg-error \"conflicts with function name\" }\n+end\n+\n+function a()  ! This should cause an error, but cannot be easily detected!\n+   a() = x\n+end"}]}