{"sha": "094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk0ZjZhYjNkNWFhOTc1M2Y1ZmMwYzM2YThjZGZlZjRjMjkzODE0MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-05-23T12:08:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-05-23T12:08:41Z"}, "message": "re PR tree-optimization/49115 (invalid return value optimization (?) when exception is thrown and caught)\n\n2011-05-23  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49115\n\t* tree-ssa-alias.c (stmt_kills_ref_p_1): If the assignment\n\tis not necessarily carried out, do not claim it kills the ref.\n\t* tree-ssa-dce.c (mark_aliased_reaching_defs_necessary_1): Likewise.\n\n\t* g++.dg/torture/pr49115.C: New testcase.\n\nFrom-SVN: r174066", "tree": {"sha": "517ad43ddd93528a11fead28a4b00d0da1d17b8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/517ad43ddd93528a11fead28a4b00d0da1d17b8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a9822e13ece30035ad18fed7f3946d8b1ce67a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a9822e13ece30035ad18fed7f3946d8b1ce67a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a9822e13ece30035ad18fed7f3946d8b1ce67a9"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "62990819dbf316d34cbfc907ab3ecec9b0f8bab1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "patch": "@@ -1,3 +1,10 @@\n+2011-05-23  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49115\n+\t* tree-ssa-alias.c (stmt_kills_ref_p_1): If the assignment\n+\tis not necessarily carried out, do not claim it kills the ref.\n+\t* tree-ssa-dce.c (mark_aliased_reaching_defs_necessary_1): Likewise.\n+\n 2011-05-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/15419"}, {"sha": "e647cb571452dbee00b9634482086299e350da4c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "patch": "@@ -1,3 +1,8 @@\n+2011-05-23  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49115\n+\t* g++.dg/torture/pr49115.C: New testcase.\n+\n 2011-05-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/15419"}, {"sha": "c4cce21ba5d9acff3af181252956b53089da1e90", "filename": "gcc/testsuite/g++.dg/torture/pr49115.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49115.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49115.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49115.C?ref=094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do run }\n+\n+extern \"C\" void abort (void);\n+struct MyException {};\n+struct Data {\n+    int nr;\n+    Data() : nr(66) {}\n+};\n+Data __attribute__((noinline,noclone)) getData(int i)\n+{\n+  if (i) throw MyException();\n+  Data data;\n+  data.nr = i;\n+  return data;\n+}\n+int main(int, char **)\n+{\n+  Data data;\n+  try {\n+      data = getData(1);\n+  } catch (MyException& e) {\n+      if (data.nr != 66)\n+\tabort ();\n+  }\n+}"}, {"sha": "ba76ae10ab1214448bdb29537fa3d9ba5be1da5f", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "patch": "@@ -1633,7 +1633,14 @@ stmt_kills_ref_p_1 (gimple stmt, ao_ref *ref)\n     return false;\n \n   if (gimple_has_lhs (stmt)\n-      && TREE_CODE (gimple_get_lhs (stmt)) != SSA_NAME)\n+      && TREE_CODE (gimple_get_lhs (stmt)) != SSA_NAME\n+      /* The assignment is not necessarily carried out if it can throw\n+\t and we can catch it in the current function where we could inspect\n+\t the previous value.\n+\t ???  We only need to care about the RHS throwing.  For aggregate\n+\t assignments or similar calls and non-call exceptions the LHS\n+\t might throw as well.  */\n+      && !stmt_can_throw_internal (stmt))\n     {\n       tree base, lhs = gimple_get_lhs (stmt);\n       HOST_WIDE_INT size, offset, max_size;"}, {"sha": "b13ef59af491b51a9b49470678b5e3bda5e400a8", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=094f6ab3d5aa9753f5fc0c36a8cdfef4c2938140", "patch": "@@ -521,7 +521,14 @@ mark_aliased_reaching_defs_necessary_1 (ao_ref *ref, tree vdef, void *data)\n \n   /* If the stmt lhs kills ref, then we can stop walking.  */\n   if (gimple_has_lhs (def_stmt)\n-      && TREE_CODE (gimple_get_lhs (def_stmt)) != SSA_NAME)\n+      && TREE_CODE (gimple_get_lhs (def_stmt)) != SSA_NAME\n+      /* The assignment is not necessarily carried out if it can throw\n+         and we can catch it in the current function where we could inspect\n+\t the previous value.\n+         ???  We only need to care about the RHS throwing.  For aggregate\n+\t assignments or similar calls and non-call exceptions the LHS\n+\t might throw as well.  */\n+      && !stmt_can_throw_internal (def_stmt))\n     {\n       tree base, lhs = gimple_get_lhs (def_stmt);\n       HOST_WIDE_INT size, offset, max_size;"}]}