{"sha": "2160d34c5ff8060723c4b71d31c3d195f51eaa06", "node_id": "C_kwDOANBUbNoAKDIxNjBkMzRjNWZmODA2MDcyM2M0YjcxZDMxYzNkMTk1ZjUxZWFhMDY", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-27T14:30:43Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-28T09:27:31Z"}, "message": "hir: Add mappings to ArrayElems", "tree": {"sha": "e8d2def3fa26a6a302a381f2badaabd0f622c6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8d2def3fa26a6a302a381f2badaabd0f622c6f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2160d34c5ff8060723c4b71d31c3d195f51eaa06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2160d34c5ff8060723c4b71d31c3d195f51eaa06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2160d34c5ff8060723c4b71d31c3d195f51eaa06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2160d34c5ff8060723c4b71d31c3d195f51eaa06/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bf54ff468270dc60cb06dc1940e4bfb9e918c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf54ff468270dc60cb06dc1940e4bfb9e918c2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bf54ff468270dc60cb06dc1940e4bfb9e918c2b"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "b420a4d808dc12b7ce9078be49dba2af03be5a59", "filename": "gcc/rust/hir/rust-ast-lower-expr.h", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2160d34c5ff8060723c4b71d31c3d195f51eaa06/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2160d34c5ff8060723c4b71d31c3d195f51eaa06/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h?ref=2160d34c5ff8060723c4b71d31c3d195f51eaa06", "patch": "@@ -307,7 +307,14 @@ class ASTLoweringExpr : public ASTLoweringBase\n \telements.push_back (std::unique_ptr<HIR::Expr> (translated_elem));\n       }\n \n-    translated_array_elems = new HIR::ArrayElemsValues (std::move (elements));\n+    auto crate_num = mappings->get_current_crate ();\n+    Analysis::NodeMapping mapping (mappings->get_current_crate (),\n+\t\t\t\t   elems.get_node_id (),\n+\t\t\t\t   mappings->get_next_hir_id (crate_num),\n+\t\t\t\t   UNKNOWN_LOCAL_DEFID);\n+\n+    translated_array_elems\n+      = new HIR::ArrayElemsValues (mapping, std::move (elements));\n   }\n \n   void visit (AST::ArrayElemsCopied &elems) override\n@@ -317,8 +324,15 @@ class ASTLoweringExpr : public ASTLoweringBase\n     HIR::Expr *num_copies\n       = ASTLoweringExpr::translate (elems.get_num_copies ().get ());\n \n+    auto crate_num = mappings->get_current_crate ();\n+    Analysis::NodeMapping mapping (mappings->get_current_crate (),\n+\t\t\t\t   elems.get_node_id (),\n+\t\t\t\t   mappings->get_next_hir_id (crate_num),\n+\t\t\t\t   UNKNOWN_LOCAL_DEFID);\n+\n     translated_array_elems\n-      = new HIR::ArrayElemsCopied (std::unique_ptr<HIR::Expr> (element),\n+      = new HIR::ArrayElemsCopied (mapping,\n+\t\t\t\t   std::unique_ptr<HIR::Expr> (element),\n \t\t\t\t   std::unique_ptr<HIR::Expr> (num_copies));\n   }\n "}, {"sha": "d16ac92f6caecc43b14f575ccc52568ec8c5f1a8", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2160d34c5ff8060723c4b71d31c3d195f51eaa06/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2160d34c5ff8060723c4b71d31c3d195f51eaa06/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=2160d34c5ff8060723c4b71d31c3d195f51eaa06", "patch": "@@ -849,6 +849,8 @@ class ArrayElems\n     COPIED,\n   };\n \n+  ArrayElems (Analysis::NodeMapping mappings) : mappings (mappings){};\n+\n   virtual ~ArrayElems () {}\n \n   // Unique pointer custom clone ArrayElems function\n@@ -863,9 +865,13 @@ class ArrayElems\n \n   virtual ArrayExprType get_array_expr_type () const = 0;\n \n+  Analysis::NodeMapping &get_mappings () { return mappings; }\n+\n protected:\n   // pure virtual clone implementation\n   virtual ArrayElems *clone_array_elems_impl () const = 0;\n+\n+  Analysis::NodeMapping mappings;\n };\n \n // Value array elements\n@@ -876,12 +882,13 @@ class ArrayElemsValues : public ArrayElems\n   // TODO: should this store location data?\n \n public:\n-  ArrayElemsValues (std::vector<std::unique_ptr<Expr> > elems)\n-    : values (std::move (elems))\n+  ArrayElemsValues (Analysis::NodeMapping mappings,\n+\t\t    std::vector<std::unique_ptr<Expr> > elems)\n+    : ArrayElems (mappings), values (std::move (elems))\n   {}\n \n   // copy constructor with vector clone\n-  ArrayElemsValues (ArrayElemsValues const &other)\n+  ArrayElemsValues (ArrayElemsValues const &other) : ArrayElems (other)\n   {\n     values.reserve (other.values.size ());\n     for (const auto &e : other.values)\n@@ -930,15 +937,16 @@ class ArrayElemsCopied : public ArrayElems\n \n public:\n   // Constructor requires pointers for polymorphism\n-  ArrayElemsCopied (std::unique_ptr<Expr> copied_elem,\n+  ArrayElemsCopied (Analysis::NodeMapping mappings,\n+\t\t    std::unique_ptr<Expr> copied_elem,\n \t\t    std::unique_ptr<Expr> copy_amount)\n-    : elem_to_copy (std::move (copied_elem)),\n+    : ArrayElems (mappings), elem_to_copy (std::move (copied_elem)),\n       num_copies (std::move (copy_amount))\n   {}\n \n   // Copy constructor required due to unique_ptr - uses custom clone\n   ArrayElemsCopied (ArrayElemsCopied const &other)\n-    : elem_to_copy (other.elem_to_copy->clone_expr ()),\n+    : ArrayElems (other), elem_to_copy (other.elem_to_copy->clone_expr ()),\n       num_copies (other.num_copies->clone_expr ())\n   {}\n "}]}