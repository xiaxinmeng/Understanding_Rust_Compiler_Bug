{"sha": "0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "node_id": "C_kwDOANBUbNoAKDBmZTYwNGEyZDkzMTY4YzhkMTlkYjgzZWRmOGE3ZjgwNmFhNGZlNjk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-09T00:16:54Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-09T00:16:54Z"}, "message": "Daily bump.", "tree": {"sha": "2f14ac05a477901a9cf52420612f6d84709d09ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f14ac05a477901a9cf52420612f6d84709d09ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/comments", "author": null, "committer": null, "parents": [{"sha": "55bb77b50a5ec520f28978ac3fdac1983200e1f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55bb77b50a5ec520f28978ac3fdac1983200e1f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55bb77b50a5ec520f28978ac3fdac1983200e1f7"}], "stats": {"total": 150, "additions": 149, "deletions": 1}, "files": [{"sha": "9f56ba2c38d3232b4b53acb08366713ca884a021", "filename": "gcc/ChangeLog", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "patch": "@@ -1,3 +1,91 @@\n+2022-07-08  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR preprocessor/91733\n+\t* input.cc (find_end_of_line): New helper function.\n+\t(file_cache_slot::get_next_line): Recognize \\r as a line ending.\n+\t* diagnostic-show-locus.cc (test_escaping_bytes_1): Adapt selftest\n+\tsince \\r will now be interpreted as a line-ending.\n+\n+2022-07-08  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/106132\n+\t* opts.cc (finish_options): Use 2 calls to\n+\treport_conflicting_sanitizer_options.\n+\n+2022-07-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106226\n+\t* tree-vect-loop-manip.cc (vect_do_peeling): Assert that\n+\tno SSA update is needed.  Move virtual SSA update ...\n+\t* tree-vectorizer.cc (pass_vectorize::execute): ... here,\n+\tvia forced virtual renaming when TODO_update_ssa_only_virtuals\n+\tis queued.\n+\t(vect_transform_loops): Return TODO_update_ssa_only_virtuals\n+\twhen virtual SSA update is required.\n+\t(try_vectorize_loop_1): Adjust.\n+\t* tree-vect-stmts.cc (vectorizable_simd_clone_call): Allow\n+\tvirtual renaming if the ABI forces an aggregate return\n+\tbut the original call did not have a virtual definition.\n+\n+2022-07-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* toplev.cc (init_asm_output): Do not init asm_out_file.\n+\n+2022-07-08  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/106063\n+\t* match.pd: Do not apply pattern after veclower is not supported.\n+\n+2022-07-08  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* lto-cgraph.cc (input_offload_tables) <LTO_symtab_edge>: Correct\n+\t'fn2' computation.\n+\n+2022-07-08  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* expmed.cc (store_bit_field_1): Add parameter that indicates if value is\n+\tstill undefined and if so emit a subreg move instead.\n+\t(store_integral_bit_field): Likewise.\n+\t(store_bit_field): Likewise.\n+\t* expr.h (write_complex_part): Likewise.\n+\t* expmed.h (store_bit_field): Add new parameter.\n+\t* builtins.cc (expand_ifn_atomic_compare_exchange_into_call): Use new\n+\tparameter.\n+\t(expand_ifn_atomic_compare_exchange): Likewise.\n+\t* calls.cc (store_unaligned_arguments_into_pseudos): Likewise.\n+\t* emit-rtl.cc (validate_subreg): Likewise.\n+\t* expr.cc (emit_group_store): Likewise.\n+\t(copy_blkmode_from_reg): Likewise.\n+\t(copy_blkmode_to_reg): Likewise.\n+\t(clear_storage_hints): Likewise.\n+\t(write_complex_part):  Likewise.\n+\t(emit_move_complex_parts): Likewise.\n+\t(expand_assignment): Likewise.\n+\t(store_expr): Likewise.\n+\t(store_field): Likewise.\n+\t(expand_expr_real_2): Likewise.\n+\t* ifcvt.cc (noce_emit_move_insn): Likewise.\n+\t* internal-fn.cc (expand_arith_set_overflow): Likewise.\n+\t(expand_arith_overflow_result_store): Likewise.\n+\t(expand_addsub_overflow): Likewise.\n+\t(expand_neg_overflow): Likewise.\n+\t(expand_mul_overflow): Likewise.\n+\t(expand_arith_overflow): Likewise.\n+\n+2022-07-08  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\tPR target/106180\n+\t* config/i386/sse.md (sse2_cvtps2pd<mask_name>_1):\n+\tRename from *sse2_cvtps2pd<mask_name>_1.\n+\t(vec_unpacks_lo_v4sf): Add handler for memory operand.\n+\n+2022-07-08  Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/loongarch.cc (loongarch_compute_frame_info):\n+\tModify fp_sp_offset and gp_sp_offset's calculation method,\n+\twhen frame->mask or frame->fmask is zero, don't minus UNITS_PER_WORD\n+\tor UNITS_PER_FP_REG.\n+\n 2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic-format-json.cc (json_from_location_range): Update for"}, {"sha": "2f349b0ec048641c5f76a09007b97e0b6779fede", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "patch": "@@ -1 +1 @@\n-20220708\n+20220709"}, {"sha": "3cf57fa5f03a088670ae2f563ee8e9d549f77537", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "patch": "@@ -1,3 +1,8 @@\n+2022-07-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-dump.cc (lto_main): Exit in the function\n+\tas we don't want any LTO bytecode processing.\n+\n 2022-06-27  David Malcolm  <dmalcolm@redhat.com>\n \n \t* lto-dump.cc: Add \"final\" and \"override\" to various vfunc"}, {"sha": "e40061c8e0fe0190ef3a1eceae0f79d31def7842", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "patch": "@@ -1,3 +1,43 @@\n+2022-07-08  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR testsuite/106216\n+\t* gcc.dg/tree-ssa/alias-access-path-13.c (union foo): Replace a long\n+\tint field with a struct that is larger than an int also on 32bit\n+\tplatforms.\n+\n+2022-07-08  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR preprocessor/91733\n+\t* c-c++-common/pr91733.c: New test.\n+\n+2022-07-08  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/106132\n+\t* c-c++-common/hwasan/arguments-3.c: Cover new ICE.\n+\n+2022-07-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106226\n+\t* gfortran.dg/pr106226.f: New testcase.\n+\n+2022-07-08  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/106063\n+\t* gcc.dg/pr106063.c: New test.\n+\n+2022-07-08  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* g++.target/aarch64/complex-init.C: New test.\n+\n+2022-07-08  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\tPR target/106180\n+\t* g++.target/i386/pr106180-1.C: New test.\n+\n+2022-07-08  Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* gcc.target/loongarch/prolog-opt.c: New test.\n+\n 2022-07-07  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/105956"}, {"sha": "291ba2ddf4dc22294220d0053ba59411df4c8322", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "patch": "@@ -1,3 +1,10 @@\n+2022-07-08  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* configure.ac: Check for sys/link.h.  Use either link.h or\n+\tsys/link.h when checking for dl_iterate_phdr.\n+\t* elf.c: Include sys/link.h if available.\n+\t* configure, config.h.in: Regenerate.\n+\n 2022-07-07  Ian Lance Taylor  <iant@golang.org>\n \n \t* macho.c (backtrace_initialize) [HAVE_MACH_O_DYLD_H]: Don't exit"}, {"sha": "d3b8380f2beb101f7470799394abd6bb8830e6db", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fe604a2d93168c8d19db83edf8a7f806aa4fe69/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=0fe604a2d93168c8d19db83edf8a7f806aa4fe69", "patch": "@@ -1,3 +1,11 @@\n+2022-07-08  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.c-c++-common/requires-1.c: Add 'dg-note's.\n+\t* testsuite/libgomp.c-c++-common/requires-2.c: Likewise.\n+\t* testsuite/libgomp.c-c++-common/requires-3.c: Likewise.\n+\t* testsuite/libgomp.c-c++-common/requires-7.c: Likewise.\n+\t* testsuite/libgomp.fortran/requires-1.f90: Likewise.\n+\n 2022-07-07  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* target.c (GOMP_offload_register, GOMP_offload_unregister):"}]}