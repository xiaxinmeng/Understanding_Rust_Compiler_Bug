{"sha": "769b55b24fa8db8cbe084203d2ed4354bbb6b060", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY5YjU1YjI0ZmE4ZGI4Y2JlMDg0MjAzZDJlZDQzNTRiYmI2YjA2MA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-05-20T19:57:52Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-05-20T19:57:52Z"}, "message": "remove some TYPE_ARG_TYPES usage in objc/\n\nremove some TYPE_ARG_TYPES usage in objc/\n\t* objc-act.c (objc_compare_types): Use function_args_iterator\n\tinstead of TYPE_ARG_TYPES to compare function argument types.\n\nFrom-SVN: r173977", "tree": {"sha": "81929bef88ad47d8accd79f31dc83c413380fe1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81929bef88ad47d8accd79f31dc83c413380fe1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/769b55b24fa8db8cbe084203d2ed4354bbb6b060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/769b55b24fa8db8cbe084203d2ed4354bbb6b060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/769b55b24fa8db8cbe084203d2ed4354bbb6b060", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/769b55b24fa8db8cbe084203d2ed4354bbb6b060/comments", "author": null, "committer": null, "parents": [{"sha": "e6450c11b26d746328554ba8041577e173fad8f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6450c11b26d746328554ba8041577e173fad8f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6450c11b26d746328554ba8041577e173fad8f1"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "1b2bb353abb34a2f61586954b1f0ab1734361018", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/769b55b24fa8db8cbe084203d2ed4354bbb6b060/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/769b55b24fa8db8cbe084203d2ed4354bbb6b060/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=769b55b24fa8db8cbe084203d2ed4354bbb6b060", "patch": "@@ -1,3 +1,8 @@\n+2011-05-20  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* objc-act.c (objc_compare_types): Use function_args_iterator\n+\tinstead of TYPE_ARG_TYPES to compare function argument types.\n+\n 2011-05-13  Toon Moene  <toon@moene.org>\n \n \t* objc-next-runtime-abi-02.c (newabi_append_ro):"}, {"sha": "0e15fe55aa798d1ab52e456d285406b51bca4f03", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/769b55b24fa8db8cbe084203d2ed4354bbb6b060/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/769b55b24fa8db8cbe084203d2ed4354bbb6b060/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=769b55b24fa8db8cbe084203d2ed4354bbb6b060", "patch": "@@ -2420,23 +2420,40 @@ objc_compare_types (tree ltyp, tree rtyp, int argno, tree callee)\n      lenient than C or C++ on this.  */\n   if (TREE_CODE (ltyp) == FUNCTION_TYPE && TREE_CODE (rtyp) == FUNCTION_TYPE)\n     {\n+      function_args_iterator liter, riter;\n+\n       /* Return types must be covariant.  */\n       if (!comptypes (TREE_TYPE (ltyp), TREE_TYPE (rtyp))\n \t  && !objc_compare_types (TREE_TYPE (ltyp), TREE_TYPE (rtyp),\n \t\t\t\t  argno, callee))\n       return false;\n \n       /* Argument types must be contravariant.  */\n-      for (ltyp = TYPE_ARG_TYPES (ltyp), rtyp = TYPE_ARG_TYPES (rtyp);\n-\t   ltyp && rtyp; ltyp = TREE_CHAIN (ltyp), rtyp = TREE_CHAIN (rtyp))\n+      function_args_iter_init (&liter, ltyp);\n+      function_args_iter_init (&riter, rtyp);\n+\n+      while (1)\n \t{\n-\t  if (!comptypes (TREE_VALUE (rtyp), TREE_VALUE (ltyp))\n-\t      && !objc_compare_types (TREE_VALUE (rtyp), TREE_VALUE (ltyp),\n-\t\t\t\t      argno, callee))\n+\t  ltyp = function_args_iter_cond (&liter);\n+\t  rtyp = function_args_iter_cond (&riter);\n+\n+\t  /* If we've exhaused both lists simulateously, we're done.  */\n+\t  if (ltyp == NULL_TREE && rtyp == NULL_TREE)\n+\t    break;\n+\n+\t  /* If one list is shorter than the other, they fail to match.  */\n+\t  if (ltyp == NULL_TREE || rtyp == NULL_TREE)\n \t    return false;\n-      }\n \n-      return (ltyp == rtyp);\n+\t  if (!comptypes (rtyp, ltyp)\n+\t      && !objc_compare_types (rtyp, ltyp, argno, callee))\n+\t    return false;\n+\n+\t  function_args_iter_next (&liter);\n+\t  function_args_iter_next (&riter);\n+\t}\n+\n+      return true;\n     }\n \n   /* Past this point, we are only interested in ObjC class instances,"}]}