{"sha": "6b3603c2731fd23a7b6444e3515e3a42d60d0894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIzNjAzYzI3MzFmZDIzYTdiNjQ0NGUzNTE1ZTNhNDJkNjBkMDg5NA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-08-15T00:33:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-15T00:33:57Z"}, "message": "loop.c (add_label_notes): Do not ignore references to labels before dispatch tables.\n\n        * loop.c (add_label_notes): Do not ignore references to labels\n        before dispatch tables.  Mirrors Apr 8 change to mark_jump_label.\n        * gcse.c (add_label_notes): Similarly.\n\nFrom-SVN: r21744", "tree": {"sha": "bc5dda9b52607bdd550eed99e6c8a9594e3b5781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc5dda9b52607bdd550eed99e6c8a9594e3b5781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b3603c2731fd23a7b6444e3515e3a42d60d0894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3603c2731fd23a7b6444e3515e3a42d60d0894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3603c2731fd23a7b6444e3515e3a42d60d0894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3603c2731fd23a7b6444e3515e3a42d60d0894/comments", "author": null, "committer": null, "parents": [{"sha": "fbe83d7ac8de863d96382e114d1bbd3307d803af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe83d7ac8de863d96382e114d1bbd3307d803af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe83d7ac8de863d96382e114d1bbd3307d803af"}], "stats": {"total": 47, "additions": 20, "deletions": 27}, "files": [{"sha": "d323f6f93166bd0bf33586ebea501d83eb0bbc86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3603c2731fd23a7b6444e3515e3a42d60d0894/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3603c2731fd23a7b6444e3515e3a42d60d0894/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b3603c2731fd23a7b6444e3515e3a42d60d0894", "patch": "@@ -1,5 +1,9 @@\n Fri Aug 14 21:07:03 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* loop.c (add_label_notes): Do not ignore references to labels\n+\tbefore dispatch tables.  Mirrors Apr 8 change to mark_jump_label.\n+\t* gcse.c (add_label_notes): Similarly.\n+\n \t* pa.h (ASM_OUTPUT_MI_THUNK): Strip name encoding.\n \n \t* m68k.md (adddi_dilshr32): One of the operands must be a register."}, {"sha": "b51754aa26a184144d749967e271f8bb870975d3", "filename": "gcc/gcse.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3603c2731fd23a7b6444e3515e3a42d60d0894/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3603c2731fd23a7b6444e3515e3a42d60d0894/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=6b3603c2731fd23a7b6444e3515e3a42d60d0894", "patch": "@@ -4733,17 +4733,13 @@ add_label_notes (x, insn)\n \n   if (code == LABEL_REF && !LABEL_REF_NONLOCAL_P (x))\n     {\n-      rtx next = next_real_insn (XEXP (x, 0));\n-\n-      /* Don't record labels that refer to dispatch tables.\n-\t This is not necessary, since the tablejump references the same label.\n-\t And if we did record them, flow.c would make worse code.  */\n-      if (next == 0\n-\t  || ! (GET_CODE (next) == JUMP_INSN\n-\t\t&& (GET_CODE (PATTERN (next)) == ADDR_VEC\n-\t\t    || GET_CODE (PATTERN (next)) == ADDR_DIFF_VEC)))\n-\tREG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_LABEL, XEXP (x, 0),\n-\t\t\t\t\t      REG_NOTES (insn));\n+      /* This code used to ignore labels that referred to dispatch tables to\n+         avoid flow generating (slighly) worse code.\n+\n+         We no longer ignore such label references (see LABEL_REF handling in\n+         mark_jump_label for additional information).  */\n+      REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_LABEL, XEXP (x, 0),\n+\t\t\t\t\t    REG_NOTES (insn));\n       return;\n     }\n "}, {"sha": "c5d1505e9e2eff8789deed1c521be1f85fc00219", "filename": "gcc/loop.c", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3603c2731fd23a7b6444e3515e3a42d60d0894/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3603c2731fd23a7b6444e3515e3a42d60d0894/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=6b3603c2731fd23a7b6444e3515e3a42d60d0894", "patch": "@@ -1627,22 +1627,15 @@ add_label_notes (x, insns)\n \n   if (code == LABEL_REF && !LABEL_REF_NONLOCAL_P (x))\n     {\n-      rtx next = next_real_insn (XEXP (x, 0));\n-\n-      /* Don't record labels that refer to dispatch tables.\n-\t This is not necessary, since the tablejump references the same label.\n-\t And if we did record them, flow.c would make worse code.  */\n-      if (next == 0\n-\t  || ! (GET_CODE (next) == JUMP_INSN\n-\t\t&& (GET_CODE (PATTERN (next)) == ADDR_VEC\n-\t\t    || GET_CODE (PATTERN (next)) == ADDR_DIFF_VEC)))\n-\t{\n-\t  for (insn = insns; insn; insn = NEXT_INSN (insn))\n-\t    if (reg_mentioned_p (XEXP (x, 0), insn))\n-\t      REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_LABEL, XEXP (x, 0),\n-\t\t\t\t\t\t    REG_NOTES (insn));\n-\t}\n-      return;\n+      /* This code used to ignore labels that referred to dispatch tables to\n+         avoid flow generating (slighly) worse code.\n+\n+         We no longer ignore such label references (see LABEL_REF handling in\n+         mark_jump_label for additional information).  */\n+      for (insn = insns; insn; insn = NEXT_INSN (insn))\n+\tif (reg_mentioned_p (XEXP (x, 0), insn))\n+\t  REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_LABEL, XEXP (x, 0),\n+\t\t\t\t\t\tREG_NOTES (insn));\n     }\n \n   fmt = GET_RTX_FORMAT (code);"}]}