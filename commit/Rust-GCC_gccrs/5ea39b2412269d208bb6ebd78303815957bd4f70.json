{"sha": "5ea39b2412269d208bb6ebd78303815957bd4f70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhMzliMjQxMjI2OWQyMDhiYjZlYmQ3ODMwMzgxNTk1N2JkNGY3MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-31T09:04:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-31T09:04:32Z"}, "message": "store-merging: Allow enums during bswap recognition [PR94403]\n\nThe following testcase is optimized with char/unsigned char/signed char,\nbut not with std::byte.  The following patch fixes that.  Didn't use\nINTEGRAL_TYPE_P because bswapping bools is just too weird.\n\n2020-03-31  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/94403\n\t* gimple-ssa-store-merging.c (verify_symbolic_number_p): Allow also\n\tENUMERAL_TYPE lhs_type.\n\n\t* g++.dg/tree-ssa/pr94403.C: New test.", "tree": {"sha": "fabce4d5301b2957be4737c120f88c3ad16aa94e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fabce4d5301b2957be4737c120f88c3ad16aa94e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ea39b2412269d208bb6ebd78303815957bd4f70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea39b2412269d208bb6ebd78303815957bd4f70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea39b2412269d208bb6ebd78303815957bd4f70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea39b2412269d208bb6ebd78303815957bd4f70/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56f0b32476c0c261c8e08525f9e47fe87492447a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f0b32476c0c261c8e08525f9e47fe87492447a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f0b32476c0c261c8e08525f9e47fe87492447a"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "e7ff9131f5d44cbaacc727076f7bf1df13af1229", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea39b2412269d208bb6ebd78303815957bd4f70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea39b2412269d208bb6ebd78303815957bd4f70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ea39b2412269d208bb6ebd78303815957bd4f70", "patch": "@@ -1,5 +1,9 @@\n 2020-03-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/94403\n+\t* gimple-ssa-store-merging.c (verify_symbolic_number_p): Allow also\n+\tENUMERAL_TYPE lhs_type.\n+\n \tPR rtl-optimization/94344\n \t* tree-ssa-forwprop.c (simplify_rotate): Handle also same precision\n \tconversions, either on both operands of |^+ or just one.  Handle"}, {"sha": "a6687cd9c98e2f66ce390a37090c7b09a6f4d5ea", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea39b2412269d208bb6ebd78303815957bd4f70/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea39b2412269d208bb6ebd78303815957bd4f70/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=5ea39b2412269d208bb6ebd78303815957bd4f70", "patch": "@@ -315,7 +315,8 @@ verify_symbolic_number_p (struct symbolic_number *n, gimple *stmt)\n \n   lhs_type = gimple_expr_type (stmt);\n \n-  if (TREE_CODE (lhs_type) != INTEGER_TYPE)\n+  if (TREE_CODE (lhs_type) != INTEGER_TYPE\n+      && TREE_CODE (lhs_type) != ENUMERAL_TYPE)\n     return false;\n \n   if (TYPE_PRECISION (lhs_type) != TYPE_PRECISION (n->type))"}, {"sha": "3f21cb321063af3e54a089ad182c113e1ca4cb36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea39b2412269d208bb6ebd78303815957bd4f70/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea39b2412269d208bb6ebd78303815957bd4f70/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ea39b2412269d208bb6ebd78303815957bd4f70", "patch": "@@ -1,5 +1,8 @@\n 2020-03-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/94403\n+\t* g++.dg/tree-ssa/pr94403.C: New test.\n+\n \tPR rtl-optimization/94344\n \t* gcc.dg/pr94344.c: New test.\n "}, {"sha": "d47e7fcc5a33073d71e1750b1083d29fcfb0108d", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr94403.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ea39b2412269d208bb6ebd78303815957bd4f70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr94403.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ea39b2412269d208bb6ebd78303815957bd4f70/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr94403.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr94403.C?ref=5ea39b2412269d208bb6ebd78303815957bd4f70", "patch": "@@ -0,0 +1,37 @@\n+// PR tree-optimization/94403\n+// Only test on some 64-bit targets which do have bswap{si,di}2 patterns and\n+// are either big or little endian (not pdp endian).\n+// { dg-do compile { target { lp64 && { i?86-*-* x86_64-*-* powerpc*-*-* aarch64*-*-* } } } }\n+// { dg-require-effective-target store_merge }\n+// { dg-options \"-O2 -fdump-tree-store-merging -std=c++17\" }\n+\n+namespace std {\n+  template <typename T>\n+  void swap (T& t1, T& t2) { T tmp (t1); t1 = t2; t2 = tmp; }\n+  enum class byte : unsigned char {};\n+}\n+\n+unsigned\n+bswap32 (unsigned int x)\n+{\n+  unsigned int y = x;\n+  std::byte *bytes = reinterpret_cast<std::byte*> (&y);\n+  std::swap (bytes[0], bytes[3]);\n+  std::swap (bytes[1], bytes[2]);\n+  return y;\n+}\n+\n+unsigned long long\n+bswap64 (unsigned long long x)\n+{\n+  unsigned long long y = x;\n+  std::byte *bytes = reinterpret_cast<std::byte*> (&y);\n+  std::swap (bytes[0], bytes[7]);\n+  std::swap (bytes[1], bytes[6]);\n+  std::swap (bytes[2], bytes[5]);\n+  std::swap (bytes[3], bytes[4]);\n+  return y;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"__builtin_bswap64\" 1 \"store-merging\" } } */\n+/* { dg-final { scan-tree-dump-times \"__builtin_bswap32\" 1 \"store-merging\" } } */"}]}