{"sha": "2b840e50679f5b3208241746984cd2f195785f02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI4NDBlNTA2NzlmNWIzMjA4MjQxNzQ2OTg0Y2QyZjE5NTc4NWYwMg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-11T21:52:22Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-11T21:52:22Z"}, "message": "re PR fortran/31189 (Support backtracing for non-library errors)\n\n\tPR fortran/31189\n\n\t* runtime/backtrace.c (show_backtrace): Skip _gfortrani_handler\n\twhen displaying backtrace.\n\t* runtime/compile_options.c: Include <signal.h>.\n\t(handler): New function.\n\t(set_options): Set signal handlers for backtrace.\n\t* libgfortran.h (handler): Add prototype.\n\n\t* invoke.texi (-fbacktrace): Document the new behaviour.\n\nCo-Authored-By: Tobias Burnus <burnus@gcc.gnu.org>\n\nFrom-SVN: r127364", "tree": {"sha": "60e7b5dcde1b34e0269164273f272c579b14a633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60e7b5dcde1b34e0269164273f272c579b14a633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b840e50679f5b3208241746984cd2f195785f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b840e50679f5b3208241746984cd2f195785f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b840e50679f5b3208241746984cd2f195785f02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b840e50679f5b3208241746984cd2f195785f02/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9ff1de3ae81dc074cac1fcf12292d38f1224b33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ff1de3ae81dc074cac1fcf12292d38f1224b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ff1de3ae81dc074cac1fcf12292d38f1224b33"}], "stats": {"total": 102, "additions": 100, "deletions": 2}, "files": [{"sha": "cbd28a51b7ff51db2d7240992602b0a43ccad0c2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b840e50679f5b3208241746984cd2f195785f02/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b840e50679f5b3208241746984cd2f195785f02/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2b840e50679f5b3208241746984cd2f195785f02", "patch": "@@ -1,3 +1,8 @@\n+2007-08-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/31189\n+\t* invoke.texi (-fbacktrace): Document the new behaviour.\n+\n 2007-08-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/32937"}, {"sha": "b1d790a8bd947cb3192eb2b3c932fdde2d36771b", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b840e50679f5b3208241746984cd2f195785f02/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b840e50679f5b3208241746984cd2f195785f02/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=2b840e50679f5b3208241746984cd2f195785f02", "patch": "@@ -544,7 +544,9 @@ zero), @samp{overflow} (overflow in a floating point operation),\n @opindex @code{fbacktrace}\n @cindex backtrace\n @cindex trace\n-Specify that, when a runtime error is encountered, the Fortran runtime\n+Specify that, when a runtime error is encountered or a deadly signal is\n+emitted (segmentation fault, illegal instruction, bus error or\n+floating-point exception), the Fortran runtime\n library should output a backtrace of the error.  This option\n only has influence for compilation of the Fortran main program.\n "}, {"sha": "13c6f283939b39bd020aa4fb3a7d819432510a05", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b840e50679f5b3208241746984cd2f195785f02/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b840e50679f5b3208241746984cd2f195785f02/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=2b840e50679f5b3208241746984cd2f195785f02", "patch": "@@ -1,3 +1,14 @@\n+2007-08-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\t    Tobias Burnus  <burnus@gcc.gnu.org>\n+\n+\tPR fortran/31189\n+\t* runtime/backtrace.c (show_backtrace): Skip _gfortrani_handler\n+\twhen displaying backtrace.\n+\t* runtime/compile_options.c: Include <signal.h>.\n+\t(handler): New function.\n+\t(set_options): Set signal handlers for backtrace.\n+\t* libgfortran.h (handler): Add prototype.\n+\n 2007-08-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* intrinsics/string_intrinsics.c (compare_string): Return an int."}, {"sha": "06718013cc854c9b64c8c123f3e73a359c1d26cf", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b840e50679f5b3208241746984cd2f195785f02/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b840e50679f5b3208241746984cd2f195785f02/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=2b840e50679f5b3208241746984cd2f195785f02", "patch": "@@ -373,6 +373,9 @@ options_t;\n extern options_t options;\n internal_proto(options);\n \n+extern void handler (int);\n+internal_proto(handler);\n+\n \n /* Compile-time options that will influence the library.  */\n "}, {"sha": "e969341212ba862daae0b1be5748c989577607f6", "filename": "libgfortran/runtime/backtrace.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b840e50679f5b3208241746984cd2f195785f02/libgfortran%2Fruntime%2Fbacktrace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b840e50679f5b3208241746984cd2f195785f02/libgfortran%2Fruntime%2Fbacktrace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fbacktrace.c?ref=2b840e50679f5b3208241746984cd2f195785f02", "patch": "@@ -223,7 +223,8 @@ show_backtrace (void)\n \t    /* Try to recognize the internal libgfortran functions.  */\n \t    if (strncasecmp (func, \"*_gfortran\", 10) == 0\n \t\t|| strncasecmp (func, \"_gfortran\", 9) == 0\n-\t\t|| strcmp (func, \"main\") == 0 || strcmp (func, \"_start\") == 0)\n+\t\t|| strcmp (func, \"main\") == 0 || strcmp (func, \"_start\") == 0\n+\t\t|| strcmp (func, \"_gfortrani_handler\") == 0)\n \t      continue;\n \n \t    if (local_strcasestr (str[i], \"libgfortran.so\") != NULL"}, {"sha": "c05b4009400f6a3bd8489322f312ee250972f8a2", "filename": "libgfortran/runtime/compile_options.c", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b840e50679f5b3208241746984cd2f195785f02/libgfortran%2Fruntime%2Fcompile_options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b840e50679f5b3208241746984cd2f195785f02/libgfortran%2Fruntime%2Fcompile_options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fcompile_options.c?ref=2b840e50679f5b3208241746984cd2f195785f02", "patch": "@@ -31,10 +31,61 @@ Boston, MA 02110-1301, USA.  */\n \n #include \"libgfortran.h\"\n \n+#ifdef HAVE_SIGNAL_H\n+#include <signal.h>\n+#endif\n+\n \n /* Useful compile-time options will be stored in here.  */\n compile_options_t compile_options;\n \n+\n+/* A signal handler to allow us to output a backtrace.  */\n+void\n+handler (int signum)\n+{\n+  const char * name = NULL, * desc = NULL;\n+\n+  switch (signum)\n+    {\n+#if defined(SIGSEGV)\n+      case SIGSEGV:\n+\tname = \"SIGSEGV\";\n+\tdesc = \"Segmentation fault\";\n+\tbreak;\n+#endif\n+\n+#if defined(SIGBUS)\n+      case SIGBUS:\n+\tname = \"SIGBUS\";\n+\tdesc = \"Bus error\";\n+\tbreak;\n+#endif\n+\n+#if defined(SIGILL)\n+      case SIGILL:\n+\tname = \"SIGILL\";\n+\tdesc = \"Illegal instruction\";\n+\tbreak;\n+#endif\n+\n+#if defined(SIGFPE)\n+      case SIGFPE:\n+\tname = \"SIGFPE\";\n+\tdesc = \"Floating-point exception\";\n+\tbreak;\n+#endif\n+    }\n+\n+  if (name)\n+    st_printf (\"\\nProgram received signal %d (%s): %s.\\n\", signum, name, desc);\n+  else\n+    st_printf (\"\\nProgram received signal %d.\\n\", signum);\n+\n+  sys_exit (5);\n+}\n+\n+\n /* Set the usual compile-time options.  */\n extern void set_options (int , int []);\n export_proto(set_options);\n@@ -56,6 +107,31 @@ set_options (int num, int options[])\n     compile_options.sign_zero = options[5];\n   if (num >= 7)\n     compile_options.bounds_check = options[6];\n+\n+  /* If backtrace is required, we set signal handlers on most common\n+     signals.  */\n+#if defined(HAVE_SIGNAL_H) && (defined(SIGSEGV) || defined(SIGBUS) \\\n+\t\t\t       || defined(SIGILL) || defined(SIGFPE))\n+  if (compile_options.backtrace)\n+    {\n+#if defined(SIGSEGV)\n+      signal (SIGSEGV, handler);\n+#endif\n+\n+#if defined(SIGBUS)\n+      signal (SIGBUS, handler);\n+#endif\n+\n+#if defined(SIGILL)\n+      signal (SIGILL, handler);\n+#endif\n+\n+#if defined(SIGFPE)\n+      signal (SIGFPE, handler);\n+#endif\n+    }\n+#endif\n+\n }\n \n "}]}