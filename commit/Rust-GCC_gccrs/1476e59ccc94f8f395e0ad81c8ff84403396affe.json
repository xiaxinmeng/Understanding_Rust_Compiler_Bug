{"sha": "1476e59ccc94f8f395e0ad81c8ff84403396affe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ3NmU1OWNjYzk0ZjhmMzk1ZTBhZDgxYzhmZjg0NDAzMzk2YWZmZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-08T11:19:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-08T11:19:37Z"}, "message": "[multiple changes]\n\n2007-10-08  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/std/utility (identity, move, forward): Move to...\n\t* include/bits/stl_move.h: ... here.\n\t* include/Makefile.am: Add.\n\t* include/bits/stl_algobase.h: Include the latter.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/20_util/pair/moveable.cc: Remove dg-require-rvalref.\n\n2007-10-08  Chris Jefferson  <chris@bubblescope.net>\n\t    Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_pair.h (pair<>:pair(pair&&),\n\tpair<>::operator=(pair&&)): Add.\n\nFrom-SVN: r129124", "tree": {"sha": "28197d38e697a01479ef45aff6ee33f18c31f99a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28197d38e697a01479ef45aff6ee33f18c31f99a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1476e59ccc94f8f395e0ad81c8ff84403396affe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1476e59ccc94f8f395e0ad81c8ff84403396affe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1476e59ccc94f8f395e0ad81c8ff84403396affe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1476e59ccc94f8f395e0ad81c8ff84403396affe/comments", "author": null, "committer": null, "parents": [{"sha": "6c5f0578d9ba4296583e0f77201d42d259f06128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c5f0578d9ba4296583e0f77201d42d259f06128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c5f0578d9ba4296583e0f77201d42d259f06128"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "73d5122a850e1e9c5bc22a7a86db28752d05c38a", "filename": "libstdc++-v3/include/bits/stl_move.h", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1476e59ccc94f8f395e0ad81c8ff84403396affe/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_move.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1476e59ccc94f8f395e0ad81c8ff84403396affe/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_move.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_move.h?ref=1476e59ccc94f8f395e0ad81c8ff84403396affe", "patch": "@@ -0,0 +1,64 @@\n+// Move, forward and identity implementation for C++0x -*- C++ -*-\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+/** @file stl_move.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n+#ifndef _STL_MOVE_H\n+#define _STL_MOVE_H 1\n+\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+#include <type_traits>\n+\n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n+  // 20.2.2, forward/move\n+  template<typename _Tp>\n+    struct identity\n+    {\n+      typedef _Tp type;\n+    };\n+\n+  template<typename _Tp>\n+    inline _Tp&&\n+    forward(typename std::identity<_Tp>::type&& __t)\n+    { return __t; }\n+\n+  template<typename _Tp>\n+    inline typename std::remove_reference<_Tp>::type&&\n+    move(_Tp&& __t)\n+    { return __t; }\n+\n+_GLIBCXX_END_NAMESPACE\n+\n+#endif\n+\n+#endif /* _STL_MOVE_H */"}]}