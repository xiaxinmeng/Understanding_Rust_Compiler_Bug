{"sha": "42101c23d5c364cd509d8024853e342e4317027d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIxMDFjMjNkNWMzNjRjZDUwOWQ4MDI0ODUzZTM0MmU0MzE3MDI3ZA==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2005-12-22T19:06:09Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-12-22T19:06:09Z"}, "message": "sse.md (sse_movhlps): Reverse operands for 2nd and 3rd alternatives.\n\n2005-12-22  Dale Johannesen  <dalej@apple.com>\n\n\t* config/i386/sse.md (sse_movhlps):  Reverse operands for\n\t2nd and 3rd alternatives.\n\n2005-12-22  Dale Johannesen  <dalej@apple.com>\n\n\t* gcc.target/i386/sse-17.c:  New.\n\nFrom-SVN: r108966", "tree": {"sha": "83fe8661832918aed388eec3810b8fe6c6469055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83fe8661832918aed388eec3810b8fe6c6469055"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42101c23d5c364cd509d8024853e342e4317027d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42101c23d5c364cd509d8024853e342e4317027d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42101c23d5c364cd509d8024853e342e4317027d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42101c23d5c364cd509d8024853e342e4317027d/comments", "author": null, "committer": null, "parents": [{"sha": "19b68a48afcec88625ca82b2edf641469a77ce02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b68a48afcec88625ca82b2edf641469a77ce02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b68a48afcec88625ca82b2edf641469a77ce02"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "8e265ab25e0aec61ae6d9a3ba173ad771839ad6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42101c23d5c364cd509d8024853e342e4317027d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42101c23d5c364cd509d8024853e342e4317027d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42101c23d5c364cd509d8024853e342e4317027d", "patch": "@@ -1,3 +1,8 @@\n+2005-12-22  Dale Johannesen  <dalej@apple.com>\n+\n+\t* config/i386/sse.md (sse_movhlps):  Reverse operands for\n+\t2nd and 3rd alternatives.\n+\n 2005-12-22  Andrew Pinski <pinskia@physics.uc.edu>\n \n \tPR tree-opt/25513"}, {"sha": "b444491138ee4a91450b7a5b7bdb3b143d948a62", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42101c23d5c364cd509d8024853e342e4317027d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42101c23d5c364cd509d8024853e342e4317027d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=42101c23d5c364cd509d8024853e342e4317027d", "patch": "@@ -1044,17 +1044,17 @@\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,m\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,o,x\")\n-\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \" x,0,0\"))\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \" 0,0,0\")\n+\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \" x,o,x\"))\n \t  (parallel [(const_int 6)\n \t\t     (const_int 7)\n \t\t     (const_int 2)\n \t\t     (const_int 3)])))]\n   \"TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    movhlps\\t{%2, %0|%0, %2}\n-   movlps\\t{%H1, %0|%0, %H1}\n-   movhps\\t{%1, %0|%0, %1}\"\n+   movlps\\t{%H2, %0|%0, %H2}\n+   movhps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"mode\" \"V4SF,V2SF,V2SF\")])\n "}, {"sha": "ebeb40a640125c9bbd810524a3d5504405689981", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42101c23d5c364cd509d8024853e342e4317027d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42101c23d5c364cd509d8024853e342e4317027d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42101c23d5c364cd509d8024853e342e4317027d", "patch": "@@ -1,3 +1,7 @@\n+2005-12-22  Dale Johannesen  <dalej@apple.com>\n+\n+\t* gcc.target/i386/sse-17.c:  New.\n+\n 2005-12-22  Paul Brook  <paul@codesourcery.com>\n \n \t* gcc.dg/tree-ssa/loop-1.c: Look for jump/branch on m68k."}, {"sha": "86d22c42c533a67f537e8ed3c4f7b5207a6dc831", "filename": "gcc/testsuite/gcc.target/i386/sse-17.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42101c23d5c364cd509d8024853e342e4317027d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42101c23d5c364cd509d8024853e342e4317027d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-17.c?ref=42101c23d5c364cd509d8024853e342e4317027d", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -msse2\" } */\n+#include <xmmintrin.h>\n+extern void abort();\n+int untrue = 0;\n+typedef union {\n+  __v4sf v;\n+  float f[4];\n+} u;\n+void foo (u, u) __attribute__((noinline));\n+void foo (u a, u b) {\n+  if (b.f[0] != 7.0 || b.f[1] != 8.0 || b.f[2] != 3.0 || b.f[3] != 4.0)\n+    abort();\n+}\n+void bar (__v4sf, __v4sf) __attribute__((noinline));\n+void bar (__v4sf a __attribute((unused)), __v4sf b __attribute((unused))) { untrue = 0;}\n+__v4sf setupa () __attribute((noinline));\n+__v4sf setupa () { __v4sf t = { 1.0, 2.0, 3.0, 4.0 }; return t; }\n+__v4sf setupb () __attribute((noinline));\n+__v4sf setupb () { __v4sf t = { 5.0, 6.0, 7.0, 8.0 }; return t; }\n+main() {\n+  u a, b;\n+  a.v = setupa ();\n+  b.v = setupb ();\n+  if (untrue)\n+    bar(a.v, b.v);\n+  b.v = (__v4sf) _mm_movehl_ps ((__m128)a.v, (__m128)b.v);\n+  foo (a, b);\n+  return 0;\n+}"}]}