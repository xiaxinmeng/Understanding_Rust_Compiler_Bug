{"sha": "65d0b859909d306e498ba5dc62c15d5b9e7ac81c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVkMGI4NTk5MDlkMzA2ZTQ5OGJhNWRjNjJjMTVkNWI5ZTdhYzgxYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2018-01-31T23:23:21Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-31T23:23:21Z"}, "message": "elf.c (elf_add): Close descriptor if we use a debugfile.\n\n\t* elf.c (elf_add): Close descriptor if we use a debugfile.\n\t* btest.c (check_open_files): New static function.\n\t(main): Call check_open_files.\n\nFrom-SVN: r257275", "tree": {"sha": "f8f63ae3f16e9ee325b8f57ba0f5cc31f18acba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8f63ae3f16e9ee325b8f57ba0f5cc31f18acba7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65d0b859909d306e498ba5dc62c15d5b9e7ac81c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d0b859909d306e498ba5dc62c15d5b9e7ac81c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d0b859909d306e498ba5dc62c15d5b9e7ac81c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d0b859909d306e498ba5dc62c15d5b9e7ac81c/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcbe891cd60adcb54eaf9ac2a993bb666f513b2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcbe891cd60adcb54eaf9ac2a993bb666f513b2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcbe891cd60adcb54eaf9ac2a993bb666f513b2c"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "9ebce200e37fa76917d17bd454da684bc79134dd", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d0b859909d306e498ba5dc62c15d5b9e7ac81c/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d0b859909d306e498ba5dc62c15d5b9e7ac81c/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=65d0b859909d306e498ba5dc62c15d5b9e7ac81c", "patch": "@@ -1,3 +1,9 @@\n+2018-01-31  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* elf.c (elf_add): Close descriptor if we use a debugfile.\n+\t* btest.c (check_open_files): New static function.\n+\t(main): Call check_open_files.\n+\n 2018-01-25  Ian Lance Taylor  <iant@golang.org>\n \n \t* elf.c (elf_open_debugfile_by_debuglink): Don't check CRC if the"}, {"sha": "1348d54da509d4daed4697d93b43239ea64639b5", "filename": "libbacktrace/btest.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d0b859909d306e498ba5dc62c15d5b9e7ac81c/libbacktrace%2Fbtest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d0b859909d306e498ba5dc62c15d5b9e7ac81c/libbacktrace%2Fbtest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fbtest.c?ref=65d0b859909d306e498ba5dc62c15d5b9e7ac81c", "patch": "@@ -37,6 +37,7 @@ POSSIBILITY OF SUCH DAMAGE.  */\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n+#include <unistd.h>\n \n #include \"filenames.h\"\n \n@@ -456,6 +457,25 @@ test5 (void)\n   return failures;\n }\n \n+/* Check that are no files left open.  */\n+\n+static void\n+check_open_files (void)\n+{\n+  int i;\n+\n+  for (i = 3; i < 10; i++)\n+    {\n+      if (close (i) == 0)\n+\t{\n+\t  fprintf (stderr,\n+\t\t   \"ERROR: descriptor %d still open after tests complete\\n\",\n+\t\t   i);\n+\t  ++failures;\n+\t}\n+    }\n+}\n+\n /* Run all the tests.  */\n \n int\n@@ -474,5 +494,7 @@ main (int argc ATTRIBUTE_UNUSED, char **argv)\n #endif\n #endif\n \n+  check_open_files ();\n+\n   exit (failures ? EXIT_FAILURE : EXIT_SUCCESS);\n }"}, {"sha": "3ee1dbeaf790cea1efdfc71edff77f9828b0edc8", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d0b859909d306e498ba5dc62c15d5b9e7ac81c/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d0b859909d306e498ba5dc62c15d5b9e7ac81c/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=65d0b859909d306e498ba5dc62c15d5b9e7ac81c", "patch": "@@ -2929,12 +2929,19 @@ elf_add (struct backtrace_state *state, const char *filename, int descriptor,\n \t\t\t\t\t error_callback, data);\n       if (d >= 0)\n \t{\n+\t  int ret;\n+\n \t  backtrace_release_view (state, &buildid_view, error_callback, data);\n \t  if (debuglink_view_valid)\n \t    backtrace_release_view (state, &debuglink_view, error_callback,\n \t\t\t\t    data);\n-\t  return elf_add (state, NULL, d, base_address, error_callback, data,\n-\t\t\t  fileline_fn, found_sym, found_dwarf, 0, 1);\n+\t  ret = elf_add (state, NULL, d, base_address, error_callback, data,\n+\t\t\t fileline_fn, found_sym, found_dwarf, 0, 1);\n+\t  if (ret < 0)\n+\t    backtrace_close (d, error_callback, data);\n+\t  else\n+\t    backtrace_close (descriptor, error_callback, data);\n+\t  return ret;\n \t}\n     }\n \n@@ -2953,10 +2960,17 @@ elf_add (struct backtrace_state *state, const char *filename, int descriptor,\n \t\t\t\t\t   data);\n       if (d >= 0)\n \t{\n+\t  int ret;\n+\n \t  backtrace_release_view (state, &debuglink_view, error_callback,\n \t\t\t\t  data);\n-\t  return elf_add (state, NULL, d, base_address, error_callback, data,\n-\t\t\t  fileline_fn, found_sym, found_dwarf, 0, 1);\n+\t  ret = elf_add (state, NULL, d, base_address, error_callback, data,\n+\t\t\t fileline_fn, found_sym, found_dwarf, 0, 1);\n+\t  if (ret < 0)\n+\t    backtrace_close (d, error_callback, data);\n+\t  else\n+\t    backtrace_close(descriptor, error_callback, data);\n+\t  return ret;\n \t}\n     }\n "}]}