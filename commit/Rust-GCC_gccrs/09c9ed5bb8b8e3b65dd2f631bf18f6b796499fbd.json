{"sha": "09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDljOWVkNWJiOGI4ZTNiNjVkZDJmNjMxYmYxOGY2Yjc5NjQ5OWZiZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-03T08:14:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-03T08:14:15Z"}, "message": "[Ada] Fix bogus error on array with overaligned scalar component\n\nThe compiler would wrongly reject an alignment clause larger than 8 on\nthe component type of an array of scalars, which is valid albeit\npathological.\n\n2019-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* layout.adb (Layout_Type): Do not set the component size of an\n\tarray with a scalar component if the component type is\n\toveraligned.\n\ngcc/testsuite/\n\n\t* gnat.dg/alignment14.adb: New testcase.\n\nFrom-SVN: r272968", "tree": {"sha": "a0f13786145129994116d8620769483ced1276dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f13786145129994116d8620769483ced1276dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/comments", "author": null, "committer": null, "parents": [{"sha": "6cbd53c2277e5013d83fe73d5e73844066b651a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cbd53c2277e5013d83fe73d5e73844066b651a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cbd53c2277e5013d83fe73d5e73844066b651a7"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "e932dab6568922053025b38a9272e6264529ca86", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd", "patch": "@@ -1,3 +1,9 @@\n+2019-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* layout.adb (Layout_Type): Do not set the component size of an\n+\tarray with a scalar component if the component type is\n+\toveraligned.\n+\n 2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n \n \t* inline.adb (Make_Loop_Labels_Unique):  New procedure to modify"}, {"sha": "56379465d0e1c65e750bf5e6699c53f9f24f5a8e", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd", "patch": "@@ -443,9 +443,12 @@ package body Layout is\n             Set_RM_Size (E, Esize (E));\n          end if;\n \n-         --  For array base types, set component size if object size of the\n+         --  For array base types, set the component size if object size of the\n          --  component type is known and is a small power of 2 (8, 16, 32, 64),\n-         --  since this is what will always be used.\n+         --  since this is what will always be used, except if a very large\n+         --  alignment was specified and so Adjust_Esize_For_Alignment gave up\n+         --  because, in this case, the object size is not a multiple of the\n+         --  alignment and, therefore, cannot be the component size.\n \n          if Ekind (E) = E_Array_Type and then Unknown_Component_Size (E) then\n             declare\n@@ -458,6 +461,9 @@ package body Layout is\n                if Present (CT)\n                  and then Is_Scalar_Type (CT)\n                  and then Known_Static_Esize (CT)\n+                 and then not (Known_Alignment (CT)\n+                                and then Alignment_In_Bits (CT) >\n+                                              Standard_Long_Long_Integer_Size)\n                then\n                   declare\n                      S : constant Uint := Esize (CT);"}, {"sha": "245bf25d4acff5b9d5e81b053c40edfa66ff52f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd", "patch": "@@ -1,3 +1,7 @@\n+2019-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/alignment14.adb: New testcase.\n+\n 2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/predicate4.adb, gnat.dg/predicate4_pkg.ads: New"}, {"sha": "48ef6bd14e60210c10d6691ddd6a48465520ab81", "filename": "gcc/testsuite/gnat.dg/alignment14.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/gcc%2Ftestsuite%2Fgnat.dg%2Falignment14.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd/gcc%2Ftestsuite%2Fgnat.dg%2Falignment14.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Falignment14.adb?ref=09c9ed5bb8b8e3b65dd2f631bf18f6b796499fbd", "patch": "@@ -0,0 +1,17 @@\n+--  { dg-do compile }\n+\n+procedure Alignment14 is\n+\n+  type My_Int1 is new Integer;\n+  for My_Int1'Alignment use 8;\n+\n+  type Arr1 is array (1 .. 2) of My_Int1;\n+\n+  type My_Int2 is new Integer;\n+  for My_Int2'Alignment use 16;\n+\n+  type Arr2 is array (1 .. 2) of My_Int2;\n+\n+begin\n+   null;\n+end Alignment14;"}]}