{"sha": "0d9e72449c87c6c4944800f3e8b156b141416d05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ5ZTcyNDQ5Yzg3YzZjNDk0NDgwMGYzZThiMTU2YjE0MTQxNmQwNQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2005-11-27T02:29:36Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2005-11-27T02:29:36Z"}, "message": "i386.md (*zero_extendqihi2_movzbw): Avoid partial register stalls by zero extending to the full register.\n\n2005-11-26  Eric Christopher  <echristo@apple.com>\n\n\t* config/i386/i386.md (*zero_extendqihi2_movzbw): Avoid partial\n\tregister stalls by zero extending to the full register.\n\nFrom-SVN: r107559", "tree": {"sha": "bb41a0ea4743ee338ea1183532ac3c5118e35224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb41a0ea4743ee338ea1183532ac3c5118e35224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d9e72449c87c6c4944800f3e8b156b141416d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9e72449c87c6c4944800f3e8b156b141416d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d9e72449c87c6c4944800f3e8b156b141416d05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9e72449c87c6c4944800f3e8b156b141416d05/comments", "author": null, "committer": null, "parents": [{"sha": "2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3ebe774cfd41fa47a986ad679381aa3dcf7b76"}], "stats": {"total": 86, "additions": 46, "deletions": 40}, "files": [{"sha": "c343af9e1b056536523efc779159cce729939fbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 37, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d9e72449c87c6c4944800f3e8b156b141416d05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d9e72449c87c6c4944800f3e8b156b141416d05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d9e72449c87c6c4944800f3e8b156b141416d05", "patch": "@@ -1,3 +1,8 @@\n+2005-11-26  Eric Christopher  <echristo@apple.com>\n+\n+\t* config/i386/i386.md (*zero_extendqihi2_movzbw): Avoid partial\n+\tregister stalls by zero extending to the full register.\n+\n 2005-11-27  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* config/floatunsisf.c, config/floatunsidf.c,\n@@ -224,8 +229,8 @@\n \n \tPR c++/21667\n \t* c-typeck.c (build_array_ref): Avoid code duplicate.  Use common\n-\tC/C++ diagnostic function warn_array_subscript_with_type_char. \n-\t* c-common.h (warn_array_subscript_with_type_char): Declare. \n+\tC/C++ diagnostic function warn_array_subscript_with_type_char.\n+\t* c-common.h (warn_array_subscript_with_type_char): Declare.\n \t* c-common.c (warn_array_subscript_with_type_char): Define.\n \n 2005-11-23  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n@@ -305,7 +310,7 @@\n \tPR target/24988\n \t* config/rs6000/darwin.h (TARGET_OS_CPP_BUILTINS): Remove call\n \tto SUBTARGET_OS_CPP_BUILTINS.\n-\t\n+\n 2005-11-22  Richard Earnshaw  <richard.earnshaw@arm.com>\n \n \t* arm.c (emit_set_insn): New function.\n@@ -319,7 +324,7 @@\n \t(vfp_emit_fstmx): Likewise.  Use plus_constant.\n \t(emit_multi_reg_push): Likewise.\n \t(emit_sfm): Use plus_constant.\n-\t\n+\n 2005-11-23  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/24954\n@@ -354,7 +359,7 @@\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Define __pic__ and __PIC__ when\n \tflag_pic is set.\n-\t\n+\n \t* config/alpha/freebsd.h, config/alpha/linux.h,\n \tconfig/arm/linux-elf.h, config/bfin/bfin.h,\n \tconfig/cris/linux.h, config/darwin.h, config/freebsd-spec.h,\n@@ -470,7 +475,7 @@\n \n 2005-11-21  Uros Bizjak  <uros@kss-loka.si>\n \n-\t* fold-const.c (fold_binary) <RDIV_EXPR>: Optimize A / A to 1.0 \n+\t* fold-const.c (fold_binary) <RDIV_EXPR>: Optimize A / A to 1.0\n \tif we don't care about NaNs or Infinities.\n \n 2005-11-20  Ian Lance Taylor  <ian@airs.com>\n@@ -599,7 +604,7 @@\n \t* langhooks-def.h (LANG_HOOKS_LOOKUP_NAME): Add.\n \t(LANG_HOOKS_DECLS): Add initializer for LANG_HOOKS_LOOKUP_NAME.\n \t* langhooks.h (lang_hooks_for_decls): Add lookup_name.\n-\t\n+\n 2005-11-18  Richard Earnshaw  <richard.earnshaw@arm.com>\n \n \tPR target/24914\n@@ -936,7 +941,7 @@\n \tas empty.\n \t* config/darwin.h (STARTFILE_SPEC): Use %(darwin_crt2) to possibly\n \tlink in crt2.o.\n-\t\n+\n \t* config/darwin.h (REAL_LIBGCC_SPEC): Link in shared libgcc depending\n \ton -mmacosx-version-min setting.\n \n@@ -1018,7 +1023,7 @@\n \n 2005-11-13  Razya Ladelsky <razya@il.ibm.com>\n \n-        * ipa-prop.c (ipa_callsite_compute_param ): Removed obsolete type \n+        * ipa-prop.c (ipa_callsite_compute_param ): Removed obsolete type\n \tchecking.\n \n 2005-11-13  Jason Merrill  <jason@redhat.com>\n@@ -1129,7 +1134,7 @@\n 2005-11-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/24686\n-\t* gimplify.c (gimplify_cleanup_point_expr): Also save and restore \n+\t* gimplify.c (gimplify_cleanup_point_expr): Also save and restore\n \tthe cleanup list.\n \n 2005-11-11  Zdenek Dvorak  <dvorakz@suse.cz>\n@@ -1169,7 +1174,7 @@\n \n 2005-11-10  Daniel Berlin  <dberlin@dberlin.org>\n \n-\t* tree-ssa-alias.c (compute_may_aliases): Remove call to \n+\t* tree-ssa-alias.c (compute_may_aliases): Remove call to\n \tdelete_old_heap_vars.\n \t* tree-dfa.c (referenced_var_remove): Remove function.\n \t* tree-ssa.c (init_tree_ssa): Call init_alias_heapvars.\n@@ -1294,12 +1299,12 @@\n 2005-11-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \tPR 24624\n-\t* config/s390/s390.c (struct s390_frame_layout): New fields \n+\t* config/s390/s390.c (struct s390_frame_layout): New fields\n \tfirst_save_gpr_slot and last_save_gpr_slot.\n-\t(cfun_grps_save_area_size, s390_frame_info, s390_emit_prologue,  \n-\ts390_emit_epilogue, s390_initial_elimination_offset): Replaced \n+\t(cfun_grps_save_area_size, s390_frame_info, s390_emit_prologue,\n+\ts390_emit_epilogue, s390_initial_elimination_offset): Replaced\n \tfirst_save_gpr and last_save_gpr with the _slot variants.\n-\t(s390_register_info): Calculate first_save_gpr_slot and \n+\t(s390_register_info): Calculate first_save_gpr_slot and\n \tlast_save_gpr_slot using regs_ever_live.\n \n 2005-11-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n@@ -1354,7 +1359,7 @@\n \n 2005-11-09  Per Bothner  <per@bothner.com>\n \t    Uros Bizjak  <uros@kss-loka.si>\n-\t\n+\n \tPR c/24101\n \t* toplev.c (process_options): Initialize debug_hooks early\n \tin case lang_hooks.post_options ends up calling a debug_hook.\n@@ -1396,7 +1401,7 @@\n \t(oldheapvars): Ditto.\n \t(get_constraint_for): Put heap vars on heapvars list.\n \t(delete_old_heap_vars): New function.\n-\t\n+\n 2005-11-08  Jason Merrill  <jason@redhat.com>\n \n \t* tree.h (CALL_FROM_THUNK_P): Add CALL_EXPR_CHECK.\n@@ -1501,7 +1506,7 @@\n \tDDR_DIST_VECTS.\n \t(build_classic_dist_vector, build_classic_dir_vector): Push a set\n \tof distance/direction vectors instead of a single one.\n-\t* tree-data-ref.h (dir_vects, dist_vects): Replace dir/dist \n+\t* tree-data-ref.h (dir_vects, dist_vects): Replace dir/dist\n \tlambda_vectors with a vec of lambda_vectors.\n \t(DDR_DIR_VECT, DDR_DIST_VECT): Redefined as operations on vec.\n \t(DDR_DIR_VECTS, DDR_DIST_VECTS, DDR_NUM_DIR_VECTS,\n@@ -1541,7 +1546,7 @@\n \t* predict.c (predict_loops): Use new param.\n \t* predict.def (MAX_PRED_LOOP_ITERATIONS): Remove.\n \n-\t* ipa-inline.c (cgraph_decide_inlining_of_small_function, \n+\t* ipa-inline.c (cgraph_decide_inlining_of_small_function,\n \tcgraph_decide_inlining, cgraph_decide_inlining_incrementally):\n \tDo not hold memory returned by cgraph_node_name across other call.\n \n@@ -1743,7 +1748,7 @@\n \t(collapse_rest_of_var): New function.\n \t(do_structure_copy): Collapse if do_simple_structure_copy returns\n \tfalse.\n-\t\n+\n 2005-11-03  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/24589\n@@ -1861,7 +1866,7 @@\n \t(compute_frame_pointer_to_cfa_displacement): Likewise.\n \t(gen_subprogram_die): Restore old code for when DWARF2_UNWIND_INFO is\n \tnot defined.\n-\t\n+\n \tPR rtl-optimization/17356\n \t*  cfgrtl.c (purge_dead_edges): Undo last change.  In EDGE_EH code,\n \tadd check for CALL_INSN if EDGE_ABRNOMAL_CALL true.\n@@ -1884,7 +1889,7 @@\n \t* predict.def (MAX_PRED_LOOP_ITERATIONS): Define.\n \n 2005-10-31  Andrew MacLeod  <amacleod@redhat.com>\n-\t\n+\n \tPR tree-optimization/19097\n \t* tree-ssa-operands.c (correct_use_link): Don't look for modified stmts.\n \n@@ -2037,7 +2042,7 @@\n \n \tPR/24220\n \t* c-common.c (vector_types_convertible_p): Check vector element type.\n-\t\n+\n 2005-10-21  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (prepare_move_operands): Handle the address\n@@ -2300,7 +2305,7 @@\n \tPR 23714\n \t* builtins.c (expand_builtin_trap): Export.\n \t* expr.h (expand_builtin_trap): Declare.\n-\t* expr.c (expand_assignment): Emit a trap for integral offsets \n+\t* expr.c (expand_assignment): Emit a trap for integral offsets\n \tfrom registers that weren't reduced to bitpos.\n \n \t* tree-cfg.c (mark_array_ref_addressable_1): Remove.\n@@ -2395,34 +2400,34 @@\n \t(struct cxx): Add adjust_class_at_definition target hook.\n \t* target-def.h: (TARGET_VALID_DLLIMPORT_ATTRIBUTE_P): New define,\n \tdefaulting to hook_bool_tree_true. Add to TARGET_INITIALIZER\n-\t(TARGET_CXX_ADJUST_CLASS_AT_DEFINITION): New define, defaulting to \n+\t(TARGET_CXX_ADJUST_CLASS_AT_DEFINITION): New define, defaulting to\n \thook_void_tree. Add to TARGET_CXX.\n \t* tree.h (struct decl_with_vis): Rename non_addr_const_p field to\n \tdllimport_flag.\n \t(DECL_NON_ADDR_CONSTANT_P): Replace with DECL_DLLIMPORT_P macro.\n \t* tree.c (merge_dllimport_decl_attributes): Check DECL_DLLIMPORT_P\n \tinstead of attribute. Check for dllexport override.  Warn if\n \tinconsistent dll linkage. Don't lose old dllimport if decl has\n-\thad address referenced.   Tweak lookup of dllimport atribute.  \n+\thad address referenced.   Tweak lookup of dllimport atribute.\n \t(handle_dll_attribute): Check targetm.valid_dllimport_attribute_p\n \tfor target specific rules.  Don't add dllimport attribute if\n \tDECL_DECLARED_INLINE_P.  Set DECL_DLLIMPORT_P when adding\n-\tdllimport attribute. \n+\tdllimport attribute.\n \t(staticp): Replace DECL_NON_ADDR_CONSTANT_P with DECL_DLLIMPORT_P.\n \t* varasm.c (initializer_constant_valid_p): Replace\n \tDECL_NON_ADDR_CONSTANT_P with DECL_DLLIMPORT_P\n \n \tPR target/21801\n \tPR target/23589\n-\t* config.gcc (i[34567]86-*-cygwin*): Add winnt-cxx.o to \n+\t* config.gcc (i[34567]86-*-cygwin*): Add winnt-cxx.o to\n \t'cxx_target_objs', winnt-stubs,o to 'extra_objs'.\n \t(i[34567]86-*-mingw32*): Likewise.\n \n \t* doc/tm.texi (TARGET_CXX_ADJUST_CLASS_AT_DEFINITION): Document.\n \t(TARGET_VALID_DLLIMPORT_ATTRIBUTE_P): Document.\n-\t\t\t\n+\n \t* config/i386/winnt.c (i386_pe_dllimport_p): Factor out\n-\tC++-specific code. Change return value to bool. \n+\tC++-specific code. Change return value to bool.\n \t(i386_pe_dllimport_p): Likewise.\n \t(associated_type): Simplify and make language-independent\n \t(i386_pe_encode_section_info): Replace override of ambiguous\n@@ -2434,9 +2439,9 @@\n \t* config/i386/winnt-stubs.c: New file. Define stub versions of\n \tlang-specific functions.\n \t* config/i386/i386-protos.h: Declare winnt-[cxx|stubs].c functions\n-\ti386_pe_type_dllimport_p, i386_pe_type_dllexport_p, \n+\ti386_pe_type_dllimport_p, i386_pe_type_dllexport_p,\n \ti386_pe_adjust_class_at_definition.\n-\t(i386_pe_valid_dllimport_attribute_p): Declare. \n+\t(i386_pe_valid_dllimport_attribute_p): Declare.\n \t* config/i386/cygming.h (TARGET_VALID_DLLIMPORT_ATTRIBUTE_P): Define.\n \t(TARGET_CXX_ADJUST_CLASS_AT_DEFINITION): Define.\n \t* config/i386/t-cygming: Add rules for winnt-cxx.o, winnt-stubs.o.\n@@ -2505,7 +2510,7 @@\n \n 2005-10-11  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n-\tPR middle-end/24263 \n+\tPR middle-end/24263\n \t* convert.c (convert_to_real): Revert 2005-10-05 patch.\n \tOnly apply the optimization for rounding builtins if the inner\n \tcast is also an extension.\n@@ -2615,7 +2620,7 @@\n \n \t2004-11-22  Mark Mitchell  <mark@codesourcery.com>\n \t* config.gcc (arm*-*-linux-gnueabi): Use __cxa_atexit.\n- \n+\n \t2004-11-19  Mark Mitchell  <mark@codesourcery.com>\n \t* config.gcc (arm*-*-linux-gnueabi): Add it.\n \t* config/arm/bpabi.h (FPUTYPE_DEFAULT): Undefine it before\n@@ -2713,7 +2718,7 @@\n \tout return_label and naked_return_label.\n \n 2005-10-06  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \t* tree-ssa-structalias.c (check_for_overlaps): Fix bug in last\n \tchange.\n \n@@ -2724,7 +2729,7 @@\n \tbeing a DECL.\n \n 2005-10-06  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \tFix PR tree-optimization/22488\n \t* tree-ssa-structalias.c (check_for_overlaps): New function.\n \t(create_variable_info_for): Use it.\n@@ -2788,7 +2793,7 @@\n \tPR Debug/23205\n \t* dbxout.c (dbxout_symbol): Check DECL_RTL_SET_P, after\n \thandling constants. Check NAMESPACE_DECL context for constants.\n-\t\n+\n 2005-10-05  Eric Christopher  <echristo@apple.com>\n \n \t* doc/md.texi (Standard Names): Fix name of pushm1 pattern."}, {"sha": "1475e7fd36d2a55371cfb7bcd830c7ab3c9005b7", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d9e72449c87c6c4944800f3e8b156b141416d05/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d9e72449c87c6c4944800f3e8b156b141416d05/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=0d9e72449c87c6c4944800f3e8b156b141416d05", "patch": "@@ -3036,13 +3036,14 @@\n   [(set_attr \"type\" \"imovx,alu1\")\n    (set_attr \"mode\" \"HI\")])\n \n-(define_insn \"*zero_extendqihi2_movzbw\"\n+; zero extend to SImode here to avoid partial register stalls\n+(define_insn \"*zero_extendqihi2_movzbl\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n      (zero_extend:HI (match_operand:QI 1 \"nonimmediate_operand\" \"qm\")))]\n   \"(!TARGET_ZERO_EXTEND_WITH_AND || optimize_size) && reload_completed\"\n-  \"movz{bw|x}\\t{%1, %0|%0, %1}\"\n+  \"movz{bl|x}\\t{%1, %k0|%k0, %k1}\"\n   [(set_attr \"type\" \"imovx\")\n-   (set_attr \"mode\" \"HI\")])\n+   (set_attr \"mode\" \"SI\")])\n \n ;; For the movzbw case strip only the clobber\n (define_split"}]}