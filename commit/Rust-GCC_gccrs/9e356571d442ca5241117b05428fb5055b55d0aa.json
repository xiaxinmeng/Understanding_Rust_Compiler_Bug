{"sha": "9e356571d442ca5241117b05428fb5055b55d0aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzNTY1NzFkNDQyY2E1MjQxMTE3YjA1NDI4ZmI1MDU1YjU1ZDBhYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-08-03T20:32:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-08-03T20:32:00Z"}, "message": "DR 1430 PR c++/51239\n\n\tDR 1430\n\tPR c++/51239\n\t* pt.c (pack_expansion_args_count): Rename from\n\tany_pack_expanson_args_p.\n\t(coerce_template_parms): Reject pack expansion to\n\tnon-pack template parameter of alias template.\n\nFrom-SVN: r201469", "tree": {"sha": "41425791228c8d39bef684f2738624f37bed404c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41425791228c8d39bef684f2738624f37bed404c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e356571d442ca5241117b05428fb5055b55d0aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e356571d442ca5241117b05428fb5055b55d0aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e356571d442ca5241117b05428fb5055b55d0aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e356571d442ca5241117b05428fb5055b55d0aa/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "815effe15595b6f680baedaf28868a0d21335302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815effe15595b6f680baedaf28868a0d21335302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/815effe15595b6f680baedaf28868a0d21335302"}], "stats": {"total": 95, "additions": 87, "deletions": 8}, "files": [{"sha": "8b9b997c2c54d1cbbdf13e9f3529ef23a3ef747b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e356571d442ca5241117b05428fb5055b55d0aa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e356571d442ca5241117b05428fb5055b55d0aa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e356571d442ca5241117b05428fb5055b55d0aa", "patch": "@@ -1,3 +1,12 @@\n+2013-08-03  Jason Merrill  <jason@redhat.com>\n+\n+\tDR 1430\n+\tPR c++/51239\n+\t* pt.c (pack_expansion_args_count): Rename from\n+\tany_pack_expanson_args_p.\n+\t(coerce_template_parms): Reject pack expansion to\n+\tnon-pack template parameter of alias template.\n+\n 2013-08-03  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* error.c (dump_aggr_type): Use specialized pretty printer"}, {"sha": "bbaeb7d8daa8613b6b68526e5e583a4d4bbdb16b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 43, "deletions": 8, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e356571d442ca5241117b05428fb5055b55d0aa/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e356571d442ca5241117b05428fb5055b55d0aa/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9e356571d442ca5241117b05428fb5055b55d0aa", "patch": "@@ -6542,18 +6542,22 @@ coerce_template_parameter_pack (tree parms,\n   return argument_pack;\n }\n \n-/* Returns true if the template argument vector ARGS contains\n-   any pack expansions, false otherwise.  */\n+/* Returns the number of pack expansions in the template argument vector\n+   ARGS.  */\n \n-static bool\n-any_pack_expanson_args_p (tree args)\n+static int\n+pack_expansion_args_count (tree args)\n {\n   int i;\n+  int count = 0;\n   if (args)\n     for (i = 0; i < TREE_VEC_LENGTH (args); ++i)\n-      if (PACK_EXPANSION_P (TREE_VEC_ELT (args, i)))\n-\treturn true;\n-  return false;\n+      {\n+\ttree elt = TREE_VEC_ELT (args, i);\n+\tif (elt && PACK_EXPANSION_P (elt))\n+\t  ++count;\n+      }\n+  return count;\n }\n \n /* Convert all template arguments to their appropriate types, and\n@@ -6588,6 +6592,7 @@ coerce_template_parms (tree parms,\n      subtract it from nparms to get the number of non-variadic\n      parameters.  */\n   int variadic_p = 0;\n+  int variadic_args_p = 0;\n   int post_variadic_parms = 0;\n \n   if (args == error_mark_node)\n@@ -6617,11 +6622,14 @@ coerce_template_parms (tree parms,\n   if (!post_variadic_parms)\n     inner_args = expand_template_argument_pack (inner_args);\n \n+  /* Count any pack expansion args.  */\n+  variadic_args_p = pack_expansion_args_count (inner_args);\n+\n   nargs = inner_args ? NUM_TMPL_ARGS (inner_args) : 0;\n   if ((nargs > nparms && !variadic_p)\n       || (nargs < nparms - variadic_p\n \t  && require_all_args\n-\t  && !any_pack_expanson_args_p (inner_args)\n+\t  && !variadic_args_p\n \t  && (!use_default_args\n \t      || (TREE_VEC_ELT (parms, nargs) != error_mark_node\n                   && !TREE_PURPOSE (TREE_VEC_ELT (parms, nargs))))))\n@@ -6644,6 +6652,33 @@ coerce_template_parms (tree parms,\n \n       return error_mark_node;\n     }\n+  /* We can't pass a pack expansion to a non-pack parameter of an alias\n+     template (DR 1430).  */\n+  else if (in_decl && DECL_ALIAS_TEMPLATE_P (in_decl)\n+\t   && variadic_args_p\n+\t   && nargs - variadic_args_p < nparms - variadic_p)\n+    {\n+      if (complain & tf_error)\n+\t{\n+\t  for (int i = 0; i < TREE_VEC_LENGTH (inner_args); ++i)\n+\t    {\n+\t      tree arg = TREE_VEC_ELT (inner_args, i);\n+\t      tree parm = TREE_VALUE (TREE_VEC_ELT (parms, i));\n+\n+\t      if (PACK_EXPANSION_P (arg)\n+\t\t  && !template_parameter_pack_p (parm))\n+\t\t{\n+\t\t  error (\"pack expansion argument for non-pack parameter \"\n+\t\t\t \"%qD of alias template %qD\", parm, in_decl);\n+\t\t  inform (DECL_SOURCE_LOCATION (parm), \"declared here\");\n+\t\t  goto found;\n+\t\t}\n+\t    }\n+\t  gcc_unreachable ();\n+\tfound:;\n+\t}\n+      return error_mark_node;\n+    }\n \n   /* We need to evaluate the template arguments, even though this\n      template-id may be nested within a \"sizeof\".  */"}, {"sha": "25781a484e0686d494f9764f929d2851d94551c9", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-33.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e356571d442ca5241117b05428fb5055b55d0aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e356571d442ca5241117b05428fb5055b55d0aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-33.C?ref=9e356571d442ca5241117b05428fb5055b55d0aa", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/51239\n+// { dg-require-effective-target c++11 }\n+\n+template<class... x>\n+class list{};\n+template<class a, class... b>\n+using tail=list<b...>;\n+template <class...T>\n+void f(tail<T...>);\t\t// { dg-error \"alias\" }\n+\n+int main()\n+{\n+  f<int,int>({});\n+}"}, {"sha": "d6a3e12cea248c733eb28f1fa863ce30df29275b", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-37.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e356571d442ca5241117b05428fb5055b55d0aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e356571d442ca5241117b05428fb5055b55d0aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-37.C?ref=9e356571d442ca5241117b05428fb5055b55d0aa", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/57138\n+// { dg-do compile { target c++11 } }\n+\n+template <template <typename ... X> class T, typename ... Y>\n+struct D\n+{\n+  template <typename ... Z>\n+  using type = T <Y..., Z...>;\t// { dg-error \"pack expansion\" }\n+};\n+template <typename T>\n+class A {};\n+template <typename X, typename Y>\n+struct B;\n+template <typename T>\n+struct B <int, T>\n+{\n+  typedef A <T> type;\n+};\n+template <typename X, typename Y>\n+using C = typename B <X, Y>::type;\n+struct E : public D <C> {};"}]}