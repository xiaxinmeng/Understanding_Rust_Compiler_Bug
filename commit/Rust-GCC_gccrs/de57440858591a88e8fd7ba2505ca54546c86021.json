{"sha": "de57440858591a88e8fd7ba2505ca54546c86021", "node_id": "C_kwDOANBUbNoAKGRlNTc0NDA4NTg1OTFhODhlOGZkN2JhMjUwNWNhNTQ1NDZjODYwMjE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-27T11:43:18Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-27T14:21:07Z"}, "message": "libstdc++: Mark non-exported function always_inline [PR105671]\n\nThis new function was added for gcc 11.1 but is not exported from the\nshared library. Depending on inlining decisions, its callers might get\ninlined but an external definition be needed for this function. That\nthen fails to link.\n\nSince we can't add the export to the gcc-11 release branch now, mark it\nalways_inline. We can consider exporting it for gcc-13 if/when we bump\nthe shared library version (and maybe also for gcc-12 which is currently\nat the same version as trunk). For now, the attribute will solve the\nproblem on all affected branches. The function is small enough that\nforce-inlining it shouldn't cause problems.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/105671\n\t* include/std/sstream (basic_stringbuf::_M_high_mark): Add\n\talways_inline attribute.", "tree": {"sha": "f01419f1821355ef914ac3e92a35a6c21d598026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f01419f1821355ef914ac3e92a35a6c21d598026"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de57440858591a88e8fd7ba2505ca54546c86021", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de57440858591a88e8fd7ba2505ca54546c86021", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de57440858591a88e8fd7ba2505ca54546c86021", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de57440858591a88e8fd7ba2505ca54546c86021/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8af266501795dd76d05faef498dbd3472a01b305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af266501795dd76d05faef498dbd3472a01b305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8af266501795dd76d05faef498dbd3472a01b305"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "bc7d636e702ea4352a182cc521fd32a06ca31b6f", "filename": "libstdc++-v3/include/std/sstream", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de57440858591a88e8fd7ba2505ca54546c86021/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de57440858591a88e8fd7ba2505ca54546c86021/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream?ref=de57440858591a88e8fd7ba2505ca54546c86021", "patch": "@@ -425,6 +425,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       // This might not be the same character as _M_string.end() because\n       // basic_stringbuf::overflow might have written to unused capacity\n       // in _M_string without updating its length.\n+      __attribute__((__always_inline__))\n       char_type*\n       _M_high_mark() const _GLIBCXX_NOEXCEPT\n       {"}]}