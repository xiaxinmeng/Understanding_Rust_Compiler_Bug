{"sha": "313b2cc05048521c3825e6a866860d6825bb4864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEzYjJjYzA1MDQ4NTIxYzM4MjVlNmE4NjY4NjBkNjgyNWJiNDg2NA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-05-13T11:26:45Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-05-13T11:26:45Z"}, "message": "combine.c (simplify_set): When generating a CC set...\n\n\t* combine.c (simplify_set): When generating a CC set, if the\n\tsource already is in the correct mode, do not wrap it in a\n\tcompare.  Simplify the rest of that code.\n\nFrom-SVN: r223146", "tree": {"sha": "c49518f2a74752137cad44dc0db90a02c2b87de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c49518f2a74752137cad44dc0db90a02c2b87de8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/313b2cc05048521c3825e6a866860d6825bb4864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313b2cc05048521c3825e6a866860d6825bb4864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/313b2cc05048521c3825e6a866860d6825bb4864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313b2cc05048521c3825e6a866860d6825bb4864/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a540dfabf4839fdefb0d08bc034b94d64ab88e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a540dfabf4839fdefb0d08bc034b94d64ab88e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a540dfabf4839fdefb0d08bc034b94d64ab88e8c"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "2f8a0205754ff4f1c1eea90803bfc0334df362ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313b2cc05048521c3825e6a866860d6825bb4864/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313b2cc05048521c3825e6a866860d6825bb4864/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=313b2cc05048521c3825e6a866860d6825bb4864", "patch": "@@ -1,3 +1,9 @@\n+2015-05-13  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* combine.c (simplify_set): When generating a CC set, if the\n+\tsource already is in the correct mode, do not wrap it in a\n+\tcompare.  Simplify the rest of that code.\n+\n 2015-05-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66123"}, {"sha": "5bb49cbc53810a3d4f7c99f3d2fbf00b541beb05", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/313b2cc05048521c3825e6a866860d6825bb4864/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/313b2cc05048521c3825e6a866860d6825bb4864/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=313b2cc05048521c3825e6a866860d6825bb4864", "patch": "@@ -6705,20 +6705,16 @@ simplify_set (rtx x)\n       if (other_changed)\n \tundobuf.other_insn = other_insn;\n \n-      /* Otherwise, if we didn't previously have a COMPARE in the\n-\t correct mode, we need one.  */\n-      if (GET_CODE (src) != COMPARE || GET_MODE (src) != compare_mode)\n-\t{\n-\t  SUBST (SET_SRC (x), gen_rtx_COMPARE (compare_mode, op0, op1));\n-\t  src = SET_SRC (x);\n-\t}\n-      else if (GET_MODE (op0) == compare_mode && op1 == const0_rtx)\n+      /* Don't generate a compare of a CC with 0, just use that CC.  */\n+      if (GET_MODE (op0) == compare_mode && op1 == const0_rtx)\n \t{\n \t  SUBST (SET_SRC (x), op0);\n \t  src = SET_SRC (x);\n \t}\n-      /* Otherwise, update the COMPARE if needed.  */\n-      else if (XEXP (src, 0) != op0 || XEXP (src, 1) != op1)\n+      /* Otherwise, if we didn't previously have the same COMPARE we\n+\t want, create it from scratch.  */\n+      else if (GET_CODE (src) != COMPARE || GET_MODE (src) != compare_mode\n+\t       || XEXP (src, 0) != op0 || XEXP (src, 1) != op1)\n \t{\n \t  SUBST (SET_SRC (x), gen_rtx_COMPARE (compare_mode, op0, op1));\n \t  src = SET_SRC (x);"}]}