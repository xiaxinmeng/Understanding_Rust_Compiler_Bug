{"sha": "94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRlNzQ3N2YwY2IzYTliN2QwNTIzZDJjMmZiZjAzOWFiMTljZjA4MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-07-22T15:22:52Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-07-22T15:22:52Z"}, "message": "re PR libstdc++/57920 ([c++11] Linux: std::random_device reads too much from /dev/urandom)\n\n2013-07-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/57920\n\t* src/c++11/random.cc (random_device::_M_getval): If possible, use\n\tread instead of std::fread.\n\t* include/std/random: Do not include <cstdio> unnecessarily.\n\nFrom-SVN: r201133", "tree": {"sha": "5a680837da70bd375bf6a218dbb0ae584a14fbcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a680837da70bd375bf6a218dbb0ae584a14fbcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081/comments", "author": null, "committer": null, "parents": [{"sha": "ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae382ebd8cbd04ae9d6bd24507b307f00d7ff5b4"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "cd87d9484872fc701736182f21abee539425e692", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081", "patch": "@@ -1,3 +1,10 @@\n+2013-07-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/57920\n+\t* src/c++11/random.cc (random_device::_M_getval): If possible, use\n+\tread instead of std::fread.\n+\t* include/std/random: Do not include <cstdio> unnecessarily.\n+\n 2013-07-21  Tim Shen  <timshen91@gmail.com>\n \n \tPartially implement regex_search."}, {"sha": "84b176154b9b4e0787004525d45c81f577ae04bc", "filename": "libstdc++-v3/include/std/random", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081/libstdc%2B%2B-v3%2Finclude%2Fstd%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081/libstdc%2B%2B-v3%2Finclude%2Fstd%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Frandom?ref=94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081", "patch": "@@ -36,7 +36,6 @@\n #else\n \n #include <cmath>\n-#include <cstdio>\n #include <cstdlib>\n #include <string>\n #include <iosfwd>"}, {"sha": "1646786882adbb9ac68b7c599cdab0b273232fca", "filename": "libstdc++-v3/src/c++11/random.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Frandom.cc?ref=94e7477f0cb3a9b7d0523d2c2fbf039ab19cf081", "patch": "@@ -30,6 +30,11 @@\n # include <cpuid.h>\n #endif\n \n+#include <cstdio>\n+\n+#ifdef _GLIBCXX_HAVE_UNISTD_H\n+# include <unistd.h>\n+#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -126,8 +131,12 @@ namespace std _GLIBCXX_VISIBILITY(default)\n #endif\n \n     result_type __ret;\n+#ifdef _GLIBCXX_HAVE_UNISTD_H\n+    read(fileno(_M_file), reinterpret_cast<void*>(&__ret), sizeof(result_type));\n+#else\n     std::fread(reinterpret_cast<void*>(&__ret), sizeof(result_type),\n \t       1, _M_file);\n+#endif\n     return __ret;\n   }\n "}]}