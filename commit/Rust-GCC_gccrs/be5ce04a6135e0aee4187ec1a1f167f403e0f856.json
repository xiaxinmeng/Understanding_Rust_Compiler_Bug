{"sha": "be5ce04a6135e0aee4187ec1a1f167f403e0f856", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU1Y2UwNGE2MTM1ZTBhZWU0MTg3ZWMxYTFmMTY3ZjQwM2UwZjg1Ng==", "commit": {"author": {"name": "Thomas Otto", "email": "thomas.otto@pdv-fs.de", "date": "2019-03-25T13:50:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-25T13:50:46Z"}, "message": "dwarf2out.c (comp_dir_string): cached_wd could be set to both a heap string and a gc string...\n\n2019-03-25  Thomas Otto  <thomas.otto@pdv-fs.de>\n\n\t* dwarf2out.c (comp_dir_string): cached_wd could be set to both a\n\theap string and a gc string, but since this variable is unknown to\n\tggc the gc string might get reused and corrupted. Fixed by always\n\tusing a heap string.\n\nFrom-SVN: r269916", "tree": {"sha": "4b095e26986c7cb2a68e1c7f2f9da479827bc8ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b095e26986c7cb2a68e1c7f2f9da479827bc8ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be5ce04a6135e0aee4187ec1a1f167f403e0f856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5ce04a6135e0aee4187ec1a1f167f403e0f856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be5ce04a6135e0aee4187ec1a1f167f403e0f856", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5ce04a6135e0aee4187ec1a1f167f403e0f856/comments", "author": {"login": "totph", "id": 39962140, "node_id": "MDQ6VXNlcjM5OTYyMTQw", "avatar_url": "https://avatars.githubusercontent.com/u/39962140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/totph", "html_url": "https://github.com/totph", "followers_url": "https://api.github.com/users/totph/followers", "following_url": "https://api.github.com/users/totph/following{/other_user}", "gists_url": "https://api.github.com/users/totph/gists{/gist_id}", "starred_url": "https://api.github.com/users/totph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/totph/subscriptions", "organizations_url": "https://api.github.com/users/totph/orgs", "repos_url": "https://api.github.com/users/totph/repos", "events_url": "https://api.github.com/users/totph/events{/privacy}", "received_events_url": "https://api.github.com/users/totph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d03f6e7bf321767f80c8474fb5aa8c60226bf445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d03f6e7bf321767f80c8474fb5aa8c60226bf445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d03f6e7bf321767f80c8474fb5aa8c60226bf445"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "d2db34b7189f58bbe7fdd366883532907015239b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5ce04a6135e0aee4187ec1a1f167f403e0f856/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5ce04a6135e0aee4187ec1a1f167f403e0f856/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be5ce04a6135e0aee4187ec1a1f167f403e0f856", "patch": "@@ -1,3 +1,10 @@\n+2019-03-25  Thomas Otto  <thomas.otto@pdv-fs.de>\n+\n+\t* dwarf2out.c (comp_dir_string): cached_wd could be set to both a\n+\theap string and a gc string, but since this variable is unknown to\n+\tggc the gc string might get reused and corrupted. Fixed by always\n+\tusing a heap string.\n+\n 2019-03-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89779"}, {"sha": "ae8bdee99818e7a59a4c961026897cb7d8c13918", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5ce04a6135e0aee4187ec1a1f167f403e0f856/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5ce04a6135e0aee4187ec1a1f167f403e0f856/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=be5ce04a6135e0aee4187ec1a1f167f403e0f856", "patch": "@@ -20702,7 +20702,7 @@ static const char *\n comp_dir_string (void)\n {\n   const char *wd;\n-  char *wd1;\n+  char *wd_plus_sep = NULL;\n   static const char *cached_wd = NULL;\n \n   if (cached_wd != NULL)\n@@ -20714,17 +20714,26 @@ comp_dir_string (void)\n \n   if (DWARF2_DIR_SHOULD_END_WITH_SEPARATOR)\n     {\n-      int wdlen;\n-\n-      wdlen = strlen (wd);\n-      wd1 = ggc_vec_alloc<char> (wdlen + 2);\n-      strcpy (wd1, wd);\n-      wd1 [wdlen] = DIR_SEPARATOR;\n-      wd1 [wdlen + 1] = 0;\n-      wd = wd1;\n+      size_t wdlen = strlen (wd);\n+      wd_plus_sep = XNEWVEC (char, wdlen + 2);\n+      strcpy (wd_plus_sep, wd);\n+      wd_plus_sep [wdlen] = DIR_SEPARATOR;\n+      wd_plus_sep [wdlen + 1] = 0;\n+      wd = wd_plus_sep;\n     }\n \n   cached_wd = remap_debug_filename (wd);\n+\n+  /* remap_debug_filename can just pass through wd or return a new gc string.\n+     These two types can't be both stored in a GTY(())-tagged string, but since\n+     the cached value lives forever just copy it if needed.  */\n+  if (cached_wd != wd)\n+    {\n+      cached_wd = xstrdup (cached_wd);\n+      if (DWARF2_DIR_SHOULD_END_WITH_SEPARATOR && wd_plus_sep != NULL)\n+        free (wd_plus_sep);\n+    }\n+\n   return cached_wd;\n }\n "}]}