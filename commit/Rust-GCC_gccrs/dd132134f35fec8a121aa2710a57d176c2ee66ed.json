{"sha": "dd132134f35fec8a121aa2710a57d176c2ee66ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQxMzIxMzRmMzVmZWM4YTEyMWFhMjcxMGE1N2QxNzZjMmVlNjZlZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-16T12:25:13Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-16T12:25:13Z"}, "message": "(expand_goto): Set LABEL_REF_NONLOCAL_P in the LABEL_REF we make in\nthe non-local case.\n\nFrom-SVN: r2882", "tree": {"sha": "67769aed3cecc0b55a501f50ea2422afc42eef0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67769aed3cecc0b55a501f50ea2422afc42eef0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd132134f35fec8a121aa2710a57d176c2ee66ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd132134f35fec8a121aa2710a57d176c2ee66ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd132134f35fec8a121aa2710a57d176c2ee66ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd132134f35fec8a121aa2710a57d176c2ee66ed/comments", "author": null, "committer": null, "parents": [{"sha": "381ee8af99ad3074e921820775208947d7d3b2a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/381ee8af99ad3074e921820775208947d7d3b2a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/381ee8af99ad3074e921820775208947d7d3b2a1"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "98c2c9e507906c7ece240992d934552f09e1d32c", "filename": "gcc/stmt.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd132134f35fec8a121aa2710a57d176c2ee66ed/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd132134f35fec8a121aa2710a57d176c2ee66ed/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=dd132134f35fec8a121aa2710a57d176c2ee66ed", "patch": "@@ -625,8 +625,11 @@ expand_goto (label)\n   if (context != 0 && context != current_function_decl)\n     {\n       struct function *p = find_function_data (context);\n+      rtx label_ref = gen_rtx (LABEL_REF, Pmode, label_rtx (label));\n       rtx temp;\n+\n       p->has_nonlocal_label = 1;\n+      LABEL_REF_NONLOCAL_P (label_ref) = 1;\n \n       /* Copy the rtl for the slots so that they won't be shared in\n \t case the virtual stack vars register gets instantiated differently\n@@ -637,8 +640,7 @@ expand_goto (label)\n \temit_insn (gen_nonlocal_goto (lookup_static_chain (label),\n \t\t\t\t      copy_rtx (p->nonlocal_goto_handler_slot),\n \t\t\t\t      copy_rtx (p->nonlocal_goto_stack_level),\n-\t\t\t\t      gen_rtx (LABEL_REF, Pmode,\n-\t\t\t\t\t       label_rtx (label))));\n+\t\t\t\t      label_ref));\n       else\n #endif\n \t{\n@@ -671,8 +673,7 @@ expand_goto (label)\n \t  emit_stack_restore (SAVE_NONLOCAL, addr, NULL_RTX);\n \n \t  /* Put in the static chain register the nonlocal label address.  */\n-\t  emit_move_insn (static_chain_rtx,\n-\t\t\t  gen_rtx (LABEL_REF, Pmode, label_rtx (label)));\n+\t  emit_move_insn (static_chain_rtx, label_ref);\n \t  /* USE of frame_pointer_rtx added for consistency; not clear if\n \t     really needed.  */\n \t  emit_insn (gen_rtx (USE, VOIDmode, frame_pointer_rtx));"}]}