{"sha": "ba591f5a882f10537db190126830fee42af14448", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE1OTFmNWE4ODJmMTA1MzdkYjE5MDEyNjgzMGZlZTQyYWYxNDQ0OA==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2003-10-11T04:23:20Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-10-11T04:23:20Z"}, "message": "t-uclinux: New target Makefile fragment.\n\n\t* config/m68k/t-uclinux: New target Makefile fragment.\n\t* config/m68k/uclinux.h: New target macro file.\n\t* config.gcc (m68k-*-uclinux): New target definition.\n\nFrom-SVN: r72328", "tree": {"sha": "e70d6fd26d535866b868216952446961525a789b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e70d6fd26d535866b868216952446961525a789b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba591f5a882f10537db190126830fee42af14448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba591f5a882f10537db190126830fee42af14448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba591f5a882f10537db190126830fee42af14448", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba591f5a882f10537db190126830fee42af14448/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "feda184548246b017ca2b2338cb6b50293d5e3f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feda184548246b017ca2b2338cb6b50293d5e3f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feda184548246b017ca2b2338cb6b50293d5e3f6"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "e8a4ab61683d918dcca207b6e7997e225ec60333", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba591f5a882f10537db190126830fee42af14448/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba591f5a882f10537db190126830fee42af14448/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba591f5a882f10537db190126830fee42af14448", "patch": "@@ -1,3 +1,9 @@\n+2003-10-11  Bernardo Innocenti  <bernie@develer.com>\n+\n+\t* config/m68k/t-uclinux: New target Makefile fragment.\n+\t* config/m68k/uclinux.h: New target macro file.\n+\t* config.gcc (m68k-*-uclinux): New target definition.\n+\n 2003-10-10  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtins.c (builtin_mathfn_code): Generalize to check whether"}, {"sha": "3a51b08d25ad76c1a98d0d64a83c500c78f06bea", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba591f5a882f10537db190126830fee42af14448/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba591f5a882f10537db190126830fee42af14448/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ba591f5a882f10537db190126830fee42af14448", "patch": "@@ -1323,6 +1323,12 @@ m68k-*-sysv4*)\t\t\t# Motorola m68k's running system V.4\n \textra_parts=\"crtbegin.o crtend.o\"\n \tuse_fixproto=yes\n \t;;\n+m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux with uClibc\n+\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/uclinux.h\"\n+ \ttm_defines=\"MOTOROLA USE_GAS\"\n+\ttmake_file=m68k/t-uclinux\n+\tuse_fixproto=no\n+\t;;\n m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# with ELF format using glibc 2\n \t\t\t\t# aka the GNU/Linux C library 6."}, {"sha": "8d864bfeb5811dcda291a90315c38cde7e2173d0", "filename": "gcc/config/m68k/t-uclinux", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba591f5a882f10537db190126830fee42af14448/gcc%2Fconfig%2Fm68k%2Ft-uclinux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba591f5a882f10537db190126830fee42af14448/gcc%2Fconfig%2Fm68k%2Ft-uclinux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-uclinux?ref=ba591f5a882f10537db190126830fee42af14448", "patch": "@@ -0,0 +1,24 @@\n+LIB1ASMSRC = m68k/lb1sf68.asm\n+LIB1ASMFUNCS = _mulsi3 _udivsi3 _divsi3 _umodsi3 _modsi3 \\\n+   _double _float _floatex \\\n+   _eqdf2 _nedf2 _gtdf2 _gedf2 _ltdf2 _ledf2 \\\n+   _eqsf2 _nesf2 _gtsf2 _gesf2 _ltsf2 _lesf2\n+\n+LIB2FUNCS_EXTRA = fpgnulib.c xfgnulib.c\n+\n+fpgnulib.c: $(srcdir)/config/m68k/fpgnulib.c\n+\tcp $(srcdir)/config/m68k/fpgnulib.c fpgnulib.c\n+xfgnulib.c: $(srcdir)/config/m68k/fpgnulib.c\n+\techo '#define EXTFLOAT' > xfgnulib.c\n+\tcat $(srcdir)/config/m68k/fpgnulib.c >> xfgnulib.c\n+\n+MULTILIB_OPTIONS = m68000/m5200/m5206e/m528x/m5307/m5407/mcpu32 msep-data/mid-shared-library\n+MULTILIB_DIRNAMES =\n+MULTILIB_MATCHES = m68000=mc68000 m68000=m68302 mcpu32=m68332 m5206e=m5272\n+MULTILIB_EXCEPTIONS = m68000/msep-data* m68000/mid-shared-library* msep-data* mid-shared-library*\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib\n+\n+# We don't use crtbegin.o and crtend.o\n+EXTRA_PARTS="}, {"sha": "0231539281ddd7636c769dd4eb51f9c333e99ae1", "filename": "gcc/config/m68k/uclinux.h", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba591f5a882f10537db190126830fee42af14448/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba591f5a882f10537db190126830fee42af14448/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fuclinux.h?ref=ba591f5a882f10537db190126830fee42af14448", "patch": "@@ -0,0 +1,63 @@\n+/* Definitions of target machine for GCC.  m68k/ColdFire based uClinux system\n+   using ELF objects with special linker post-processing to produce FLAT\n+   executables.\n+\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+\n+/* Undo the definition of STARTFILE_SPEC from m68kelf.h so we'll\n+   pick the default from gcc.c (just link crt0.o from multilib dir).  */\n+#undef\tSTARTFILE_SPEC\n+\n+/* Override the default LIB_SPEC from gcc.c.  We don't currently support\n+   profiling, or libg.a.  */\n+#undef LIB_SPEC\n+#define LIB_SPEC \"\\\n+%{mid-shared-library:-R libc.gdb%s} -lc \\\n+\"\n+\n+/* we don't want a .eh_frame section.  */\n+#define EH_FRAME_IN_DATA_SECTION\n+\n+/* ??? Quick hack to get constructors working.  Make this look more like a\n+   COFF target, so the existing dejagnu/libgloss support works.  A better\n+   solution would be to make the necessary dejagnu and libgloss changes so\n+   that we can use normal the ELF constructor mechanism.  */\n+#undef INIT_SECTION_ASM_OP\n+#undef FINI_SECTION_ASM_OP\n+#undef ENDFILE_SPEC\n+#define ENDFILE_SPEC \"\"\n+ \n+/* Bring in standard linux defines */\n+#undef TARGET_OS_CPP_BUILTINS\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"mc68000\");\t\t\\\n+\tbuiltin_define (\"__uClinux__\");\t\t\\\n+\tbuiltin_define_std (\"linux\");\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define (\"__gnu_linux__\");\t\\\n+\tbuiltin_assert (\"system=posix\");\t\\\n+\tif (TARGET_ID_SHARED_LIBRARY)\t\t\\\n+\t  builtin_define (\"__ID_SHARED_LIBRARY__\"); \\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+"}]}