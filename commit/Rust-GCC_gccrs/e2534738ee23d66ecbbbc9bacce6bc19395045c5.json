{"sha": "e2534738ee23d66ecbbbc9bacce6bc19395045c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI1MzQ3MzhlZTIzZDY2ZWNiYmJjOWJhY2NlNmJjMTkzOTUwNDVjNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-08-05T09:26:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-08-05T09:26:47Z"}, "message": "[multiple changes]\n\n2010-08-05  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat1drv.adb: Minor reformatting.\n\n2010-08-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem.adb (Do_Unit_And_Dependents): If some parent unit is an\n\tinstantiation, process its body before the spec of the main unit,\n\tbecause it may contain subprograms invoked in the spec of main.\n\t* einfo.ads: Add documention of delayed freeze.\n\n2010-08-05  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Process_Linker): Take into account new values for\n\tattribute Response_File_Format.\n\t* prj.ads (Response_File_Format): New enumeration values GCC_GNU,\n\tGCC_Object_List and GCC_Option_List.\n\n2010-08-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Selected_Component): Do not constant-fold a\n\tselected component that denotes a discriminant if it is the\n\tdiscriminant of a component of an unconstrained record type.\n\nFrom-SVN: r162908", "tree": {"sha": "9cb001b94cea0d4db4614c5941dceeb4da481067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cb001b94cea0d4db4614c5941dceeb4da481067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2534738ee23d66ecbbbc9bacce6bc19395045c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2534738ee23d66ecbbbc9bacce6bc19395045c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2534738ee23d66ecbbbc9bacce6bc19395045c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2534738ee23d66ecbbbc9bacce6bc19395045c5/comments", "author": null, "committer": null, "parents": [{"sha": "aa9a7dd7c2252947fb6e28b8da8a5cf8e9cdde87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9a7dd7c2252947fb6e28b8da8a5cf8e9cdde87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9a7dd7c2252947fb6e28b8da8a5cf8e9cdde87"}], "stats": {"total": 176, "additions": 142, "deletions": 34}, "files": [{"sha": "224099ba77e0be6c53b8ff4a2dcc2367e5178de2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e2534738ee23d66ecbbbc9bacce6bc19395045c5", "patch": "@@ -1,3 +1,27 @@\n+2010-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat1drv.adb: Minor reformatting.\n+\n+2010-08-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem.adb (Do_Unit_And_Dependents): If some parent unit is an\n+\tinstantiation, process its body before the spec of the main unit,\n+\tbecause it may contain subprograms invoked in the spec of main.\n+\t* einfo.ads: Add documention of delayed freeze.\n+\n+2010-08-05  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Process_Linker): Take into account new values for\n+\tattribute Response_File_Format.\n+\t* prj.ads (Response_File_Format): New enumeration values GCC_GNU,\n+\tGCC_Object_List and GCC_Option_List.\n+\n+2010-08-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Selected_Component): Do not constant-fold a\n+\tselected component that denotes a discriminant if it is the\n+\tdiscriminant of a component of an unconstrained record type.\n+\n 2010-08-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_util.adb (Insert_Actions): If the action appears within a"}, {"sha": "b6c87371fb6e7a73c24086273f698c40afba7403", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 49, "deletions": 15, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=e2534738ee23d66ecbbbc9bacce6bc19395045c5", "patch": "@@ -250,6 +250,40 @@ package Einfo is\n --  reference GCC expressions for the case of non-static sizes, as explained\n --  in Repinfo.\n \n+--------------------------------------\n+-- Delayed Freezing and Elaboration --\n+--------------------------------------\n+\n+--  The flag Has_Delayed_Freeze indicates that an entity carries an explicit\n+--  freeze node, which appears later in the expanded tree.\n+\n+--  a) The flag is used by the front-end to trigger expansion actions which\n+--  include the generation of that freeze node. Typically this happens at the\n+--  end of the current compilation unit, or before the first subprogram body is\n+--  encountered in the current unit. See files freeze and exp_ch13 for details\n+--  on the actions triggered by a freeze node, which include the construction\n+--  of initialization procedures and dispatch tables.\n+\n+--  b) The presence of a freeze node on an entity  is used by the backend to\n+--  defer elaboration of the entity until its freeze node is seen.  In the\n+--  absence of an explicit freeze node, an entity is frozen (and elaborated)\n+--  at the point of declaration.\n+\n+--  For object declarations, the flag is set when an address clause for the\n+--  object is encountered. Legality checks on the address expression only take\n+--  place at the freeze point of the object.\n+\n+--  Most types have an explicit freeze node, because they cannot be elaborated\n+--  until all representation and operational items that apply to them have been\n+--  analyzed. Private types and incomplete types have the flag set as well, as\n+--  do task and protected types.\n+\n+--  Implicit base types created for type derivations, as well as classwide\n+--  types created for all tagged types, have the flag set.\n+\n+--  If a subprogram has an access parameter whose designated type is incomplete\n+--  the subprogram has the flag set.\n+\n -----------------------\n -- Entity Attributes --\n -----------------------\n@@ -3394,29 +3428,29 @@ package Einfo is\n --       the Scope will be Standard.\n \n --    Scope_Depth (synthesized)\n---       Applies to program units, blocks, concurrent types and entries,\n---       and also to record types, i.e. to any entity that can appear on\n---       the scope stack. Yields the scope depth value, which for those\n---       entities other than records is simply the scope depth value,\n---       for record entities, it is the Scope_Depth of the record scope.\n+--       Applies to program units, blocks, concurrent types and entries, and\n+--       also to record types, i.e. to any entity that can appear on the scope\n+--       stack. Yields the scope depth value, which for those entities other\n+--       than records is simply the scope depth value, for record entities, it\n+--       is the Scope_Depth of the record scope.\n \n --    Scope_Depth_Value (Uint22)\n---       Present in program units, blocks, concurrent types and entries.\n---       Indicates the number of scopes that statically enclose the\n---       declaration of the unit or type. Library units have a depth of zero.\n---       Note that record types can act as scopes but do NOT have this field\n---       set (see Scope_Depth above)\n+--       Present in program units, blocks, concurrent types, and entries.\n+--       Indicates the number of scopes that statically enclose the declaration\n+--       of the unit or type. Library units have a depth of zero. Note that\n+--       record types can act as scopes but do NOT have this field set (see\n+--       Scope_Depth above)\n \n --    Scope_Depth_Set (synthesized)\n --       Applies to a special predicate function that returns a Boolean value\n---       indicating whether or not the Scope_Depth field has been set. It\n---       is needed, since returns an invalid value in this case!\n+--       indicating whether or not the Scope_Depth field has been set. It is\n+--       needed, since returns an invalid value in this case!\n \n --    Sec_Stack_Needed_For_Return (Flag167)\n --       Present in scope entities (blocks, functions, procedures, tasks,\n---       entries). Set to True when secondary stack is used to hold\n---       the returned value of a function and thus should not be\n---       released on scope exit.\n+--       entries). Set to True when secondary stack is used to hold the\n+--       returned value of a function and thus should not be released on\n+--       scope exit.\n \n --    Shadow_Entities (List14)\n --       Present in package and generic package entities. Points to a list"}, {"sha": "2b3c28b0994b2752c728b8b075732bf81bee2ed4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=e2534738ee23d66ecbbbc9bacce6bc19395045c5", "patch": "@@ -7463,7 +7463,7 @@ package body Exp_Ch4 is\n                null;\n \n             --  Don't do this optimization for the prefix of an attribute or\n-            --  the operand of an object renaming declaration since these are\n+            --  the name of an object renaming declaration since these are\n             --  contexts where we do not want the value anyway.\n \n             elsif (Nkind (Par) = N_Attribute_Reference\n@@ -7472,6 +7472,18 @@ package body Exp_Ch4 is\n             then\n                null;\n \n+            --  If this is a discriminant of a component of a mutable record,\n+            --  or a renaming of such, no optimization is possible, and value\n+            --  must be retrieved anew. Note that in the previous case we may\n+            --  be dealing with a renaming declaration, while here we may have\n+            --  a use of a renaming.\n+\n+            elsif Nkind (P) = N_Selected_Component\n+              and then Is_Record_Type (Etype (Prefix (P)))\n+              and then not Is_Constrained (Etype (Prefix (P)))\n+            then\n+               null;\n+\n             --  Don't do this optimization if we are within the code for a\n             --  discriminant check, since the whole point of such a check may\n             --  be to verify the condition on which the code below depends!"}, {"sha": "414d61446f40d2671fb7d793e31e7d72030fe04e", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=e2534738ee23d66ecbbbc9bacce6bc19395045c5", "patch": "@@ -801,19 +801,17 @@ begin\n       --  We can generate code for a generic package declaration of a generic\n       --  subprogram declaration only if does not require a body.\n \n-      elsif Nkind_In (Main_Kind,\n-              N_Generic_Package_Declaration,\n-              N_Generic_Subprogram_Declaration)\n+      elsif Nkind_In (Main_Kind, N_Generic_Package_Declaration,\n+                                 N_Generic_Subprogram_Declaration)\n         and then not Body_Required (Main_Unit_Node)\n       then\n          Back_End_Mode := Generate_Object;\n \n       --  Compilation units that are renamings do not require bodies, so we can\n       --  generate code for them.\n \n-      elsif Nkind_In (Main_Kind,\n-              N_Package_Renaming_Declaration,\n-              N_Subprogram_Renaming_Declaration)\n+      elsif Nkind_In (Main_Kind, N_Package_Renaming_Declaration,\n+                                 N_Subprogram_Renaming_Declaration)\n       then\n          Back_End_Mode := Generate_Object;\n "}, {"sha": "456db4484085cf03304882109a0cf717a555ef6b", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=e2534738ee23d66ecbbbc9bacce6bc19395045c5", "patch": "@@ -1841,10 +1841,11 @@ package body Prj.Nmsc is\n \n                   elsif Attribute.Name = Name_Required_Switches then\n \n-                     --  Attribute Required_Switches: the minimum\n+                     --  Attribute Required_Switches: the minimum trailing\n                      --  options to use when invoking the linker\n \n-                     Put (Into_List => Project.Config.Minimum_Linker_Options,\n+                     Put (Into_List =>\n+                            Project.Config.Trailing_Linker_Required_Switches,\n                           From_List => Attribute.Value.Values,\n                           In_Tree   => Data.Tree);\n \n@@ -1880,15 +1881,28 @@ package body Prj.Nmsc is\n                         elsif Name = Name_Gnu then\n                            Project.Config.Resp_File_Format := GNU;\n \n-                        elsif Name_Buffer (1 .. Name_Len) = \"gcc\" then\n-                           Project.Config.Resp_File_Format := GCC;\n-\n                         elsif Name = Name_Object_List then\n                            Project.Config.Resp_File_Format := Object_List;\n \n                         elsif Name = Name_Option_List then\n                            Project.Config.Resp_File_Format := Option_List;\n \n+                        elsif Name_Buffer (1 .. Name_Len) = \"gcc\" then\n+                           Project.Config.Resp_File_Format := GCC;\n+\n+                        elsif Name_Buffer (1 .. Name_Len) = \"gcc_gnu\" then\n+                           Project.Config.Resp_File_Format := GCC_GNU;\n+\n+                        elsif\n+                          Name_Buffer (1 .. Name_Len) = \"gcc_option_list\"\n+                        then\n+                           Project.Config.Resp_File_Format := GCC_Option_List;\n+\n+                        elsif\n+                          Name_Buffer (1 .. Name_Len) = \"gcc_object_list\"\n+                        then\n+                           Project.Config.Resp_File_Format := GCC_Object_List;\n+\n                         else\n                            Error_Msg\n                              (Data.Flags,"}, {"sha": "146d5302240bb10a5b88d2d9a4fd2195e5804c6a", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=e2534738ee23d66ecbbbc9bacce6bc19395045c5", "patch": "@@ -899,9 +899,12 @@ package Prj is\n    type Response_File_Format is\n      (None,\n       GNU,\n-      GCC,\n       Object_List,\n-      Option_List);\n+      Option_List,\n+      GCC,\n+      GCC_GNU,\n+      GCC_Object_List,\n+      GCC_Option_List);\n    --  The format of the different response files\n \n    type Project_Configuration is record\n@@ -939,7 +942,7 @@ package Prj is\n       Map_File_Option : Name_Id := No_Name;\n       --  Option to use when invoking the linker to build a map file\n \n-      Minimum_Linker_Options : Name_List_Index := No_Name_List;\n+      Trailing_Linker_Required_Switches : Name_List_Index := No_Name_List;\n       --  The minimum options for the linker driver. Specified in the\n       --  configuration.\n \n@@ -1038,7 +1041,8 @@ package Prj is\n                                Executable_Suffix             => No_Name,\n                                Linker                        => No_Path,\n                                Map_File_Option               => No_Name,\n-                               Minimum_Linker_Options        => No_Name_List,\n+                               Trailing_Linker_Required_Switches =>\n+                                 No_Name_List,\n                                Linker_Executable_Option      => No_Name_List,\n                                Linker_Lib_Dir_Option         => No_Name,\n                                Linker_Lib_Name_Option        => No_Name,"}, {"sha": "f18e5e687850ec92a5d3f9fb53b5a6b54462a1e5", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2534738ee23d66ecbbbc9bacce6bc19395045c5/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=e2534738ee23d66ecbbbc9bacce6bc19395045c5", "patch": "@@ -1730,6 +1730,7 @@ package body Sem is\n       procedure Do_Unit_And_Dependents (CU : Node_Id; Item : Node_Id) is\n          Unit_Num  : constant Unit_Number_Type := Get_Cunit_Unit_Number (CU);\n          Child     : Node_Id;\n+         Body_U    : Unit_Number_Type;\n          Parent_CU : Node_Id;\n \n          procedure Do_Withed_Units is new Walk_Withs (Do_Withed_Unit);\n@@ -1758,8 +1759,11 @@ package body Sem is\n                   if CU = Library_Unit (Main_CU) then\n                      Process_Bodies_In_Context (CU);\n \n-                     --  If main is a child unit, examine context of parent\n-                     --  units to see if they include instantiated units.\n+                     --  If main is a child unit, examine parent unit contexts\n+                     --  to see if they include instantiated units. Also, if\n+                     --  the parent itself is an instance, process its body\n+                     --  because it may contain subprograms that are called\n+                     --  in the main unit.\n \n                      if Is_Child_Unit (Cunit_Entity (Main_Unit)) then\n                         Child := Cunit_Entity (Main_Unit);\n@@ -1768,6 +1772,20 @@ package body Sem is\n                              Cunit\n                                (Get_Cunit_Entity_Unit_Number (Scope (Child)));\n                            Process_Bodies_In_Context (Parent_CU);\n+\n+                           if Nkind (Unit (Parent_CU)) = N_Package_Body\n+                             and then\n+                               Nkind (Original_Node (Unit (Parent_CU)))\n+                                 = N_Package_Instantiation\n+                             and then\n+                               not Seen (Get_Cunit_Unit_Number (Parent_CU))\n+                           then\n+                              Body_U := Get_Cunit_Unit_Number (Parent_CU);\n+                              Seen (Body_U) := True;\n+                              Do_Action (Parent_CU, Unit (Parent_CU));\n+                              Done (Body_U) := True;\n+                           end if;\n+\n                            Child := Scope (Child);\n                         end loop;\n                      end if;\n@@ -1842,7 +1860,8 @@ package body Sem is\n \n                --  If we are processing the spec of the main unit, load bodies\n                --  only if the with_clause indicates that it forced the loading\n-               --  of the body for a generic instantiation.\n+               --  of the body for a generic instantiation. Note that bodies of\n+               --  parents that are instances have been loaded already.\n \n                if Present (Body_CU)\n                  and then Body_CU /= Cunit (Main_Unit)\n@@ -1976,6 +1995,9 @@ package body Sem is\n             --  If the main unit is a child unit, parent bodies may be present\n             --  because they export instances or inlined subprograms. Check for\n             --  presence of these, which are not present in context clauses.\n+            --  Note that if the parents are instances, their bodies have been\n+            --  processed before the main spec, because they may be needed\n+            --  therein, so the following loop only affects non-instances.\n \n             if Is_Child_Unit (Cunit_Entity (Main_Unit)) then\n                Child := Cunit_Entity (Main_Unit);"}]}