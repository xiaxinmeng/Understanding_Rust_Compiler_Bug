{"sha": "63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNiYzFkMDVjYzc2N2Y0YmE5ZTdiMjc5OTkyN2ZiOWU1MWFhNDA5ZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-07-28T16:08:54Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-07-28T16:08:54Z"}, "message": "dwarf2out.c: Indent #error directive.\n\n\t* dwarf2out.c: Indent #error directive.\n\n\t* gbl-ctors.h: Fix typo in comment.\n\t(__do_global_ctors): Prototype.\n\n\t* gcse.c (record_one_set, pre_delete): Remove unused variables.\n\n\t* rs6000.c (rs6000_maybe_dead): Delete unused prototype.\n\t(print_operand): Initialize variable `t'.\n\nFrom-SVN: r35319", "tree": {"sha": "734e96f3da18c93c6b7322e5540e77ed92beff78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/734e96f3da18c93c6b7322e5540e77ed92beff78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/comments", "author": null, "committer": null, "parents": [{"sha": "60dd1b7be977f07cfddcc7a501db2874a2cd6ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60dd1b7be977f07cfddcc7a501db2874a2cd6ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60dd1b7be977f07cfddcc7a501db2874a2cd6ca3"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "e97104a37bd6713b39fe5da67bf8a22ebabb5e50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "patch": "@@ -1,3 +1,15 @@\n+2000-07-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* dwarf2out.c: Indent #error directive.\n+\n+\t* gbl-ctors.h: Fix typo in comment.\n+\t(__do_global_ctors): Prototype.\n+\n+\t* gcse.c (record_one_set, pre_delete): Remove unused variables.\n+\t\n+\t* rs6000.c (rs6000_maybe_dead): Delete unused prototype.\n+\t(print_operand): Initialize variable `t'.\n+\n 2000-07-27  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* config/arm/arm.md (\"call_value\"): removed constraints."}, {"sha": "16a55afd6f1e777f9ed81190b41728b8b1958ccd", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "patch": "@@ -119,7 +119,6 @@ static int rs6000_sr_alias_set;\n static void rs6000_add_gc_roots PARAMS ((void));\n static int num_insns_constant_wide PARAMS ((HOST_WIDE_INT));\n static rtx expand_block_move_mem PARAMS ((enum machine_mode, rtx, rtx));\n-static void rs6000_maybe_dead PARAMS ((rtx));\n static void rs6000_emit_stack_tie PARAMS ((void));\n static void rs6000_frame_related PARAMS ((rtx, rtx, HOST_WIDE_INT, rtx, rtx));\n static void rs6000_emit_allocate_stack PARAMS ((HOST_WIDE_INT, int));\n@@ -3905,7 +3904,7 @@ print_operand (file, x, code)\n \t expression.  The expression may have one or both operands\n \t negated (if one, only the first one).  */\n       {\n-\tconst char *const *t;\n+\tconst char *const *t = 0;\n \tconst char *s;\n \tenum rtx_code code = GET_CODE (x);\n \tstatic const char * const tbl[3][3] = {"}, {"sha": "31c66a74d1c0a50b8c4b601e74a1879bb547174b", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "patch": "@@ -465,7 +465,7 @@ static void def_cfa_1\t\t \tPARAMS ((const char *, dw_cfa_location *));\n    .debug_frame.  But we know it won't work for .debug_info.  */\n \n #ifdef DWARF2_DEBUGGING_INFO\n-#error DWARF2_DEBUGGING_INFO requires UNALIGNED_INT_ASM_OP.\n+ #error DWARF2_DEBUGGING_INFO requires UNALIGNED_INT_ASM_OP.\n #endif\n \n #ifndef ASM_OUTPUT_DWARF_ADDR"}, {"sha": "ad72b16f4b306b7749cd3bf0758f9087df021427", "filename": "gcc/gbl-ctors.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2Fgbl-ctors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2Fgbl-ctors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgbl-ctors.h?ref=63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "patch": "@@ -2,7 +2,8 @@\n    for getting g++ file-scope static objects constructed.  This file\n    will get included either by libgcc2.c (for systems that don't support\n    a .init section) or by crtstuff.c (for those that do).\n-   Copyright (C) 1991, 1995, 1996, 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1995, 1996, 1998, 1999, 2000\n+   Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@segfault.us.com)\n \n This file is part of GNU CC.\n@@ -44,7 +45,11 @@ typedef void (*func_ptr) (void);\n extern func_ptr __CTOR_LIST__[];\n extern func_ptr __DTOR_LIST__[];\n \n-/* Declare the routine which need to get invoked at program exit time.  */\n+/* Declare the routine which needs to get invoked at program start time.  */\n+\n+extern void __do_global_ctors (void);\n+\n+/* Declare the routine which needs to get invoked at program exit time.  */\n \n extern void __do_global_dtors (void);\n "}, {"sha": "6275c097258d7d88baf17a1c43a270ae805b3b15", "filename": "gcc/gcse.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bc1d05cc767f4ba9e7b2799927fb9e51aa409e/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=63bc1d05cc767f4ba9e7b2799927fb9e51aa409e", "patch": "@@ -1114,7 +1114,7 @@ record_one_set (regno, insn)\n      rtx insn;\n {\n   /* allocate a new reg_set element and link it onto the list */\n-  struct reg_set *new_reg_info, *reg_info_ptr1, *reg_info_ptr2;\n+  struct reg_set *new_reg_info;\n \n   /* If the table isn't big enough, enlarge it.  */\n   if (regno >= reg_set_table_size)\n@@ -4569,7 +4569,7 @@ static int\n pre_delete ()\n {\n   unsigned int i;\n-  int bb, changed;\n+  int changed;\n   struct expr *expr;\n   struct occr *occr;\n "}]}