{"sha": "7c2b7f4582ac272de2e91620913bde9a73f5eacf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MyYjdmNDU4MmFjMjcyZGUyZTkxNjIwOTEzYmRlOWE3M2Y1ZWFjZg==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-01-14T20:16:57Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-01-14T20:16:57Z"}, "message": "libgomp.texi: Document implementation specific default values of environment variables.\n\n2007-01-14  Daniel Franke  <franke.daniel@gmail.com>\n\n        * libgomp.texi: Document implementation specific default values of\n        environment variables.\n\nFrom-SVN: r120783", "tree": {"sha": "b16f6cbf41d96e88349f7f8b1987d9852a41f2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b16f6cbf41d96e88349f7f8b1987d9852a41f2d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c2b7f4582ac272de2e91620913bde9a73f5eacf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2b7f4582ac272de2e91620913bde9a73f5eacf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2b7f4582ac272de2e91620913bde9a73f5eacf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2b7f4582ac272de2e91620913bde9a73f5eacf/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4c1c7e3bdb764d242c29d530a0730dd864323a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c1c7e3bdb764d242c29d530a0730dd864323a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4c1c7e3bdb764d242c29d530a0730dd864323a8"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "1d67c0526dc40348a3f5263918c90a829eb589c4", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2b7f4582ac272de2e91620913bde9a73f5eacf/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2b7f4582ac272de2e91620913bde9a73f5eacf/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=7c2b7f4582ac272de2e91620913bde9a73f5eacf", "patch": "@@ -1,3 +1,8 @@\n+2007-01-14  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\t* libgomp.texi: Document implementation specific default values of\n+\tenvironment variables.\n+\n 2006-12-21  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR libgomp/28209"}, {"sha": "a5a9b1f71e9d764cb3eb2868d06f795a78bc69c7", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2b7f4582ac272de2e91620913bde9a73f5eacf/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2b7f4582ac272de2e91620913bde9a73f5eacf/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=7c2b7f4582ac272de2e91620913bde9a73f5eacf", "patch": "@@ -412,10 +412,6 @@ Specifies the number of threads used by default in subsequent parallel\n sections, if those do not specify a @code{num_threads} clause. The \n argument of @code{omp_set_num_threads} shall be a positive integer. \n \n-If the argument is negative integer or zero, the application will crash or\n-stop, respectively. An enhancement request was filed,\n-@uref{http://gcc.gnu.org/bugzilla/show_bug.cgi?id=29949, PR29949}.\n-\n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n @item @emph{Prototype}: @tab @code{void omp_set_num_threads(int);}\n@@ -807,7 +803,8 @@ extensions.\n @item @emph{Description}:\n Enable or disable the dynamic adjustment of the number of threads \n within a team. The value of this environment variable shall be \n-@code{TRUE} or @code{FALSE}.\n+@code{TRUE} or @code{FALSE}. If undefined, dynamic adjustment is\n+disabled by default.\n \n @item @emph{See also}:\n @ref{omp_set_dynamic}\n@@ -825,7 +822,8 @@ within a team. The value of this environment variable shall be\n @item @emph{Description}:\n Enable or disable nested parallel regions, i. e. whether team members\n are allowed to create new teams. The value of this environment variable \n-shall be @code{TRUE} or @code{FALSE}.\n+shall be @code{TRUE} or @code{FALSE}. If undefined, nested parallel \n+regions are disabled by default.\n \n @item @emph{See also}:\n @ref{omp_set_nested}\n@@ -862,10 +860,11 @@ positive integer.\n Allows to specify @code{schedule type} and @code{chunk size}. \n The value of the variable shall have the form: @code{type[,chunk]} where\n @code{type} is one of @code{static}, @code{dynamic} or @code{guided}. \n-The optional @code{chunk size} shall be a positive integer. \n+The optional @code{chunk size} shall be a positive integer. If undefined,\n+dynamic scheduling and a chunk size of 1 is used.\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 4.1\n+@uref{http://www.openmp.org/, OpenMP specifications v2.5}, sections 2.5.1 and 4.1\n @end table\n \n \n@@ -895,7 +894,8 @@ GCC Patches Mailinglist}\n Set the default thread stack size in kilobytes. This is in opposition \n to @code{pthread_attr_setstacksize} which gets the number of bytes as an \n argument. If the stacksize can not be set due to system constraints, an \n-error is reported and the initial stacksize is left unchanged.\n+error is reported and the initial stacksize is left unchanged. If undefined,\n+the stack size is system dependent.\n \n @item @emph{Reference}: \n @uref{http://gcc.gnu.org/ml/gcc-patches/2006-06/msg00493.html, "}]}