{"sha": "866263a5fe0d657cb9ec06d01bbc100900159036", "node_id": "C_kwDOANBUbNoAKDg2NjI2M2E1ZmUwZDY1N2NiOWVjMDZkMDFiYmMxMDA5MDAxNTkwMzY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-03T11:10:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-03T11:45:05Z"}, "message": "libstdc++: Fix tests broken by C++23 P2266R3 \"Simpler implicit move\"\n\nIn C++23 mode these tests started to FAIL because an rvalue reference\nparameter can no longer be bound to an lvalue reference return type. As\nconfirmed by Ville (who added these tests) the problem overloads are not\nintended to be called, and only exist to verify that they don't\ninterfere with the intended behaviour. This changes the function bodies\nto just throw, so that the tests will fail if the function is called.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/27_io/basic_ostream/inserters_other/char/6.cc:\n\tChange body of unused operator<< overload to throw if called.\n\t* testsuite/27_io/basic_ostream/inserters_other/wchar_t/6.cc:\n\tLikewise.", "tree": {"sha": "8624429f4a3421e10c9a48ae0e00cf0c508d8e48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8624429f4a3421e10c9a48ae0e00cf0c508d8e48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/866263a5fe0d657cb9ec06d01bbc100900159036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866263a5fe0d657cb9ec06d01bbc100900159036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/866263a5fe0d657cb9ec06d01bbc100900159036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866263a5fe0d657cb9ec06d01bbc100900159036/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0129d6b2a5f2b3cfedd213d48c95581f75312aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0129d6b2a5f2b3cfedd213d48c95581f75312aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0129d6b2a5f2b3cfedd213d48c95581f75312aa"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e45af3c02affa6a89306481461ceaf5d8bc43232", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_other/char/6.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866263a5fe0d657cb9ec06d01bbc100900159036/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866263a5fe0d657cb9ec06d01bbc100900159036/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fchar%2F6.cc?ref=866263a5fe0d657cb9ec06d01bbc100900159036", "patch": "@@ -42,7 +42,7 @@ std::ostream& operator<<(std::ostream&, const X&) = delete;\n \n struct Y {};\n std::ostream& operator<<(std::ostream& os, const Y&) {return os;}\n-std::ostream& operator<<(std::ostream&& os, const Y&) {return os;}\n+std::ostream& operator<<(std::ostream&& os, const Y&) {throw 1;} // not used\n \n struct Z{};\n "}, {"sha": "7ef6442d358cdc570a5da12dd5b64c78cf9c5480", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_other/wchar_t/6.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866263a5fe0d657cb9ec06d01bbc100900159036/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866263a5fe0d657cb9ec06d01bbc100900159036/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_other%2Fwchar_t%2F6.cc?ref=866263a5fe0d657cb9ec06d01bbc100900159036", "patch": "@@ -42,7 +42,7 @@ std::wostream& operator<<(std::wostream&, const X&) = delete;\n \n struct Y {};\n std::wostream& operator<<(std::wostream& os, const Y&) {return os;}\n-std::wostream& operator<<(std::wostream&& os, const Y&) {return os;}\n+std::wostream& operator<<(std::wostream&& os, const Y&) {throw 1;} // not used\n \n struct Z{};\n "}]}