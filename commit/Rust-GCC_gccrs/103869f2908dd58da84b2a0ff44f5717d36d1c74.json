{"sha": "103869f2908dd58da84b2a0ff44f5717d36d1c74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAzODY5ZjI5MDhkZDU4ZGE4NGIyYTBmZjQ0ZjU3MTdkMzZkMWM3NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-02T13:10:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-02T13:10:43Z"}, "message": "(scan_loop): Correct arguments for register check.\n\nFrom-SVN: r6180", "tree": {"sha": "4c00c9403175294bbe8ba54437068f4d15a99dbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c00c9403175294bbe8ba54437068f4d15a99dbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/103869f2908dd58da84b2a0ff44f5717d36d1c74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103869f2908dd58da84b2a0ff44f5717d36d1c74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/103869f2908dd58da84b2a0ff44f5717d36d1c74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103869f2908dd58da84b2a0ff44f5717d36d1c74/comments", "author": null, "committer": null, "parents": [{"sha": "629a423896bffaacb2b2f1558ed60a9283b18f1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/629a423896bffaacb2b2f1558ed60a9283b18f1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/629a423896bffaacb2b2f1558ed60a9283b18f1a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ee67209d1c3af5717b2e17307fc82f692bc438bb", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/103869f2908dd58da84b2a0ff44f5717d36d1c74/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/103869f2908dd58da84b2a0ff44f5717d36d1c74/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=103869f2908dd58da84b2a0ff44f5717d36d1c74", "patch": "@@ -690,9 +690,9 @@ scan_loop (loop_start, end, nregs)\n \t  else if (! ((! maybe_never\n \t\t       && ! loop_reg_used_before_p (set, p, loop_start,\n \t\t\t\t\t\t    scan_start, end))\n-\t\t      || (! REG_USERVAR_P (SET_DEST (PATTERN (p)))\n-\t\t\t  && ! REG_LOOP_TEST_P (SET_DEST (PATTERN (p))))\n-\t\t      || reg_in_basic_block_p (p, SET_DEST (PATTERN (p)))))\n+\t\t      || (! REG_USERVAR_P (SET_DEST (set))\n+\t\t\t  && ! REG_LOOP_TEST_P (SET_DEST (set)))\n+\t\t      || reg_in_basic_block_p (p, SET_DEST (set))))\n \t    ;\n \t  else if ((tem = invariant_p (src))\n \t\t   && (dependencies == 0"}]}