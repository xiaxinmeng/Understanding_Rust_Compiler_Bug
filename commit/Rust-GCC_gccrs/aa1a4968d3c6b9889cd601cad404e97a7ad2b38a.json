{"sha": "aa1a4968d3c6b9889cd601cad404e97a7ad2b38a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWExYTQ5NjhkM2M2Yjk4ODljZDYwMWNhZDQwNGU5N2E3YWQyYjM4YQ==", "commit": {"author": {"name": "Razya Ladelsky", "email": "razya@il.ibm.com", "date": "2007-12-03T11:16:36Z"}, "committer": {"name": "Razya Ladelsky", "email": "razya@gcc.gnu.org", "date": "2007-12-03T11:16:36Z"}, "message": "invoke.texi (fipa-cp, [...]): Add documentation.\n\n2007-12-03  Razya Ladelsky <razya@il.ibm.com>\n\n    * doc/invoke.texi (fipa-cp, fipa-matrix-reorg): Add documentation.\n\nFrom-SVN: r130580", "tree": {"sha": "1feccbb30cb6200e2f3922aa4e5720f8f273f6e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1feccbb30cb6200e2f3922aa4e5720f8f273f6e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa1a4968d3c6b9889cd601cad404e97a7ad2b38a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1a4968d3c6b9889cd601cad404e97a7ad2b38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa1a4968d3c6b9889cd601cad404e97a7ad2b38a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1a4968d3c6b9889cd601cad404e97a7ad2b38a/comments", "author": null, "committer": null, "parents": [{"sha": "e90338556a009ae59ec9d262cb127303f13843e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90338556a009ae59ec9d262cb127303f13843e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e90338556a009ae59ec9d262cb127303f13843e7"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "102f980d69fa0425812ad4e8dbff907cfa83e181", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1a4968d3c6b9889cd601cad404e97a7ad2b38a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1a4968d3c6b9889cd601cad404e97a7ad2b38a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa1a4968d3c6b9889cd601cad404e97a7ad2b38a", "patch": "@@ -1,3 +1,8 @@\n+2007-12-03  Razya Ladelsky <razya@il.ibm.com>\n+\n+    * doc/invoke.texi (fipa-cp, fipa-matrix-reorg): Add documentation.\n+\n+\n 2007-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/34317"}, {"sha": "c8a97f46473ff4da1adfb635363efeb6ba0afcce", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1a4968d3c6b9889cd601cad404e97a7ad2b38a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1a4968d3c6b9889cd601cad404e97a7ad2b38a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=aa1a4968d3c6b9889cd601cad404e97a7ad2b38a", "patch": "@@ -328,7 +328,8 @@ Objective-C and Objective-C++ Dialects}.\n -ffunction-sections -fgcse -fgcse-after-reload -fgcse-las -fgcse-lm @gol\n -fgcse-sm -fif-conversion -fif-conversion2 -finline-functions @gol\n -finline-functions-called-once -finline-limit=@var{n} @gol\n--finline-small-functions -fipa-pta -fipa-pure-const -fipa-reference @gol\n+-finline-small-functions -fipa-cp -fipa-marix-reorg -fipa-pta @gol \n+-fipa-pure-const -fipa-reference @gol\n -fipa-type-escape -fivopts -fkeep-inline-functions -fkeep-static-consts @gol\n -fmerge-all-constants -fmerge-constants -fmodulo-sched @gol\n -fmodulo-sched-allow-regmoves -fmove-loop-invariants -fmudflap @gol\n@@ -5715,6 +5716,29 @@ Enabled by default at @option{-O} and higher.\n @opindex fipa-pta\n Perform interprocedural pointer analysis.\n \n+@item -fipa-cp\n+@opindex fipa-cp\n+Perform interprocedural constant propagation.\n+This optimization analyzes the program to determine when values passed\n+to functions are constants and then optimizes accordingly.  \n+This optimization can substantially increase performance\n+if the application has constants passed to functions, but\n+because this optimization can create multiple copies of functions,\n+it may significantly increase code size.\n+\n+@item -fipa-matrix-reorg\n+@opindex fipa-matrix-reorg\n+Perform matrix flattening and transposing.\n+Matrix flattening tries to replace a m-dimensional matrix \n+with its equivalent n-dimensional matrix, where n < m.\n+This reduces the level of indirection needed for accessing the elements\n+of the matrix. The second optimization is matrix transposing that\n+attemps to change the order of the matrix's dimensions in order to \n+improve cache locality.\n+Both optimizations need fwhole-program flag. \n+Transposing is enabled only if profiling information is avaliable.\n+\n+\n @item -ftree-sink\n @opindex ftree-sink\n Perform forward store motion  on trees.  This flag is"}]}