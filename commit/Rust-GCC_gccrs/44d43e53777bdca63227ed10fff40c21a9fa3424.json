{"sha": "44d43e53777bdca63227ed10fff40c21a9fa3424", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRkNDNlNTM3NzdiZGNhNjMyMjdlZDEwZmZmNDBjMjFhOWZhMzQyNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-22T15:15:19Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-22T15:15:19Z"}, "message": "rs6000-protos.h (rs6000_initialize_trampoline): Remove.\n\n        * config/rs6000/rs6000-protos.h (rs6000_initialize_trampoline): Remove.\n        * config/rs6000/rs6000.c (TARGET_TRAMPOLINE_INIT): New.\n        (rs6000_trampoline_init): Rename from rs6000_initialize_trampoline;\n        make static; adjust parameters for the hook.\n        * config/rs6000/rs6000.h (INITIALIZE_TRAMPOLINE): Remove.\n\nFrom-SVN: r152008", "tree": {"sha": "76be6df5da57e82ca78e59735839271068d0a492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76be6df5da57e82ca78e59735839271068d0a492"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44d43e53777bdca63227ed10fff40c21a9fa3424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d43e53777bdca63227ed10fff40c21a9fa3424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d43e53777bdca63227ed10fff40c21a9fa3424", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d43e53777bdca63227ed10fff40c21a9fa3424/comments", "author": null, "committer": null, "parents": [{"sha": "454da45131d4efbd521374a5c185bacbb3f15ab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454da45131d4efbd521374a5c185bacbb3f15ab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/454da45131d4efbd521374a5c185bacbb3f15ab8"}], "stats": {"total": 52, "additions": 28, "deletions": 24}, "files": [{"sha": "be030e1a8936179b9e0bd33af465e3221f237252", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d43e53777bdca63227ed10fff40c21a9fa3424/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d43e53777bdca63227ed10fff40c21a9fa3424/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44d43e53777bdca63227ed10fff40c21a9fa3424", "patch": "@@ -211,6 +211,12 @@\n \n \t* config/picochip/picochip.h (INITIALIZE_TRAMPOLINE): Remove.\n \n+\t* config/rs6000/rs6000-protos.h (rs6000_initialize_trampoline): Remove.\n+\t* config/rs6000/rs6000.c (TARGET_TRAMPOLINE_INIT): New.\n+\t(rs6000_trampoline_init): Rename from rs6000_initialize_trampoline;\n+\tmake static; adjust parameters for the hook.\n+\t* config/rs6000/rs6000.h (INITIALIZE_TRAMPOLINE): Remove.\n+\n 2009-09-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.c (bdesc_2arg): Fix CODE_FOR_vector_gt* codes"}, {"sha": "9eaddc39b3b175d1b99a61b6294981b25317cab3", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d43e53777bdca63227ed10fff40c21a9fa3424/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d43e53777bdca63227ed10fff40c21a9fa3424/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=44d43e53777bdca63227ed10fff40c21a9fa3424", "patch": "@@ -109,7 +109,6 @@ extern void rs6000_emit_swdivsf (rtx, rtx, rtx);\n extern void rs6000_emit_swdivdf (rtx, rtx, rtx);\n extern void rs6000_emit_swrsqrtsf (rtx, rtx);\n extern void output_toc (FILE *, rtx, int, enum machine_mode);\n-extern void rs6000_initialize_trampoline (rtx, rtx, rtx);\n extern rtx rs6000_longcall_ref (rtx);\n extern void rs6000_fatal_bad_address (rtx);\n extern rtx create_TOC_reference (rtx);"}, {"sha": "a4b59c6208c46274d8f31c998e0be9bf1e018cd4", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d43e53777bdca63227ed10fff40c21a9fa3424/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d43e53777bdca63227ed10fff40c21a9fa3424/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=44d43e53777bdca63227ed10fff40c21a9fa3424", "patch": "@@ -1094,6 +1094,7 @@ static const enum reg_class *rs6000_ira_cover_classes (void);\n const int INSN_NOT_AVAILABLE = -1;\n static enum machine_mode rs6000_eh_return_filter_mode (void);\n static bool rs6000_can_eliminate (const int, const int);\n+static void rs6000_trampoline_init (rtx, tree, rtx);\n \n /* Hash table stuff for keeping track of TOC entries.  */\n \n@@ -1467,6 +1468,9 @@ static const struct attribute_spec rs6000_attribute_table[] =\n #undef TARGET_CAN_ELIMINATE\n #define TARGET_CAN_ELIMINATE rs6000_can_eliminate\n \n+#undef TARGET_TRAMPOLINE_INIT\n+#define TARGET_TRAMPOLINE_INIT rs6000_trampoline_init\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Return number of consecutive hard regs needed starting at reg REGNO\n@@ -22962,32 +22966,38 @@ rs6000_trampoline_size (void)\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.  */\n \n-void\n-rs6000_initialize_trampoline (rtx addr, rtx fnaddr, rtx cxt)\n+static void\n+rs6000_trampoline_init (rtx m_tramp, tree fndecl, rtx cxt)\n {\n   int regsize = (TARGET_32BIT) ? 4 : 8;\n+  rtx fnaddr = XEXP (DECL_RTL (fndecl), 0);\n   rtx ctx_reg = force_reg (Pmode, cxt);\n+  rtx addr = force_reg (Pmode, XEXP (m_tramp, 0));\n \n   switch (DEFAULT_ABI)\n     {\n     default:\n       gcc_unreachable ();\n \n-/* Macros to shorten the code expansions below.  */\n-#define MEM_DEREF(addr) gen_rtx_MEM (Pmode, memory_address (Pmode, addr))\n-#define MEM_PLUS(addr,offset) \\\n-  gen_rtx_MEM (Pmode, memory_address (Pmode, plus_constant (addr, offset)))\n-\n     /* Under AIX, just build the 3 word function descriptor */\n     case ABI_AIX:\n       {\n+\trtx fnmem = gen_const_mem (Pmode, force_reg (Pmode, fnaddr));\n \trtx fn_reg = gen_reg_rtx (Pmode);\n \trtx toc_reg = gen_reg_rtx (Pmode);\n-\temit_move_insn (fn_reg, MEM_DEREF (fnaddr));\n-\temit_move_insn (toc_reg, MEM_PLUS (fnaddr, regsize));\n-\temit_move_insn (MEM_DEREF (addr), fn_reg);\n-\temit_move_insn (MEM_PLUS (addr, regsize), toc_reg);\n-\temit_move_insn (MEM_PLUS (addr, 2*regsize), ctx_reg);\n+\n+  /* Macro to shorten the code expansions below.  */\n+# define MEM_PLUS(MEM, OFFSET) adjust_address (MEM, Pmode, OFFSET)\n+\n+\tm_tramp = replace_equiv_address (m_tramp, addr);\n+\n+\temit_move_insn (fn_reg, MEM_PLUS (fnmem, 0));\n+\temit_move_insn (toc_reg, MEM_PLUS (fnmem, regsize));\n+\temit_move_insn (MEM_PLUS (m_tramp, 0), fn_reg);\n+\temit_move_insn (MEM_PLUS (m_tramp, regsize), toc_reg);\n+\temit_move_insn (MEM_PLUS (m_tramp, 2*regsize), ctx_reg);\n+\n+# undef MEM_PLUS\n       }\n       break;\n \n@@ -23002,8 +23012,6 @@ rs6000_initialize_trampoline (rtx addr, rtx fnaddr, rtx cxt)\n \t\t\t ctx_reg, Pmode);\n       break;\n     }\n-\n-  return;\n }\n \n \f"}, {"sha": "e52a9a06882c23d37c3b76b5f938e6a4702936ad", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d43e53777bdca63227ed10fff40c21a9fa3424/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d43e53777bdca63227ed10fff40c21a9fa3424/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=44d43e53777bdca63227ed10fff40c21a9fa3424", "patch": "@@ -1727,18 +1727,9 @@ typedef struct rs6000_args\n        && (REGNO) == 2))\n \n \f\n-/* TRAMPOLINE_TEMPLATE deleted */\n-\n /* Length in units of the trampoline for entering a nested function.  */\n \n #define TRAMPOLINE_SIZE rs6000_trampoline_size ()\n-\n-/* Emit RTL insns to initialize the variable parts of a trampoline.\n-   FNADDR is an RTX for the address of the function's pure code.\n-   CXT is an RTX for the static chain value for the function.  */\n-\n-#define INITIALIZE_TRAMPOLINE(ADDR, FNADDR, CXT)\t\t\\\n-  rs6000_initialize_trampoline (ADDR, FNADDR, CXT)\n \f\n /* Definitions for __builtin_return_address and __builtin_frame_address.\n    __builtin_return_address (0) should give link register (65), enable"}]}