{"sha": "3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkNjdmYmYzZDIxYzNkODFmOWQzMTA3YjFlMDdmOTcwYzlmYWMwMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-21T08:22:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-21T08:22:57Z"}, "message": "re PR sanitizer/78158 (Strange data race detection with thread sanitizer)\n\n\tPR sanitizer/78158\n\t* tsan.c (instrument_builtin_call): If the memory model argument\n\tis not a constant, assume it is valid.\n\nFrom-SVN: r246306", "tree": {"sha": "8889793db5e33901cecca403528c78c5981029d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8889793db5e33901cecca403528c78c5981029d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f30dff0eed2813ead7a2e2927e0eb8c333baf8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f30dff0eed2813ead7a2e2927e0eb8c333baf8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f30dff0eed2813ead7a2e2927e0eb8c333baf8b"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "62c63c46a08e05b8d8946fa4e5be4f0d3ddf292a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01", "patch": "@@ -1,5 +1,9 @@\n 2017-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR sanitizer/78158\n+\t* tsan.c (instrument_builtin_call): If the memory model argument\n+\tis not a constant, assume it is valid.\n+\n \tPR c/67338\n \t* fold-const.c (round_up_loc): Negate divisor in unsigned type to\n \tavoid UB."}, {"sha": "5e5961f4bdaf57871304ffbc7325fe29661003a7", "filename": "gcc/tsan.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01/gcc%2Ftsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01/gcc%2Ftsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsan.c?ref=3ed67fbf3d21c3d81f9d3107b1e07f970c9fac01", "patch": "@@ -499,8 +499,8 @@ instrument_builtin_call (gimple_stmt_iterator *gsi)\n \t  case check_last:\n \t  case fetch_op:\n \t    last_arg = gimple_call_arg (stmt, num - 1);\n-\t    if (!tree_fits_uhwi_p (last_arg)\n-\t\t|| memmodel_base (tree_to_uhwi (last_arg)) >= MEMMODEL_LAST)\n+\t    if (tree_fits_uhwi_p (last_arg)\n+\t\t&& memmodel_base (tree_to_uhwi (last_arg)) >= MEMMODEL_LAST)\n \t      return;\n \t    gimple_call_set_fndecl (stmt, decl);\n \t    update_stmt (stmt);\n@@ -564,11 +564,11 @@ instrument_builtin_call (gimple_stmt_iterator *gsi)\n \t    gcc_assert (num == 6);\n \t    for (j = 0; j < 6; j++)\n \t      args[j] = gimple_call_arg (stmt, j);\n-\t    if (!tree_fits_uhwi_p (args[4])\n-\t\t|| memmodel_base (tree_to_uhwi (args[4])) >= MEMMODEL_LAST)\n+\t    if (tree_fits_uhwi_p (args[4])\n+\t\t&& memmodel_base (tree_to_uhwi (args[4])) >= MEMMODEL_LAST)\n \t      return;\n-\t    if (!tree_fits_uhwi_p (args[5])\n-\t\t|| memmodel_base (tree_to_uhwi (args[5])) >= MEMMODEL_LAST)\n+\t    if (tree_fits_uhwi_p (args[5])\n+\t\t&& memmodel_base (tree_to_uhwi (args[5])) >= MEMMODEL_LAST)\n \t      return;\n \t    update_gimple_call (gsi, decl, 5, args[0], args[1], args[2],\n \t\t\t\targs[4], args[5]);\n@@ -642,8 +642,8 @@ instrument_builtin_call (gimple_stmt_iterator *gsi)\n \t\t  return;\n \t      }\n \t    last_arg = gimple_call_arg (stmt, num - 1);\n-\t    if (!tree_fits_uhwi_p (last_arg)\n-\t\t|| memmodel_base (tree_to_uhwi (last_arg)) >= MEMMODEL_LAST)\n+\t    if (tree_fits_uhwi_p (last_arg)\n+\t\t&& memmodel_base (tree_to_uhwi (last_arg)) >= MEMMODEL_LAST)\n \t      return;\n \t    t = TYPE_ARG_TYPES (TREE_TYPE (decl));\n \t    t = TREE_VALUE (TREE_CHAIN (t));"}]}