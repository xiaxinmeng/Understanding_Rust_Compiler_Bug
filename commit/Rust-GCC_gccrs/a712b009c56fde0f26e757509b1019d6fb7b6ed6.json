{"sha": "a712b009c56fde0f26e757509b1019d6fb7b6ed6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcxMmIwMDljNTZmZGUwZjI2ZTc1NzUwOWIxMDE5ZDZmYjdiNmVkNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-07-18T12:20:06Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-07-18T12:20:06Z"}, "message": "trans.c (stmt_group_may_fallthru): New function.\n\n\t* gcc-interface/trans.c (stmt_group_may_fallthru): New function.\n\t(gnat_to_gnu) <N_Block_Statement>: Use it to find out whether the\n\tblock needs to be translated.\n\nFrom-SVN: r189612", "tree": {"sha": "f5f56fec465806d6c16572fa83015e989dc46ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f56fec465806d6c16572fa83015e989dc46ef8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a712b009c56fde0f26e757509b1019d6fb7b6ed6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a712b009c56fde0f26e757509b1019d6fb7b6ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a712b009c56fde0f26e757509b1019d6fb7b6ed6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a712b009c56fde0f26e757509b1019d6fb7b6ed6/comments", "author": null, "committer": null, "parents": [{"sha": "edd5e90012b96ce9c2f9ff3837561e51aa509ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd5e90012b96ce9c2f9ff3837561e51aa509ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edd5e90012b96ce9c2f9ff3837561e51aa509ebd"}], "stats": {"total": 90, "additions": 84, "deletions": 6}, "files": [{"sha": "8f3ec6415093478836505bb2dc6e48a9dc51c4fc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a712b009c56fde0f26e757509b1019d6fb7b6ed6", "patch": "@@ -1,3 +1,9 @@\n+2012-07-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (stmt_group_may_fallthru): New function.\n+\t(gnat_to_gnu) <N_Block_Statement>: Use it to find out whether the\n+\tblock needs to be translated.\n+\n 2012-07-17  Tristan Gingold  <gingold@adacore.com>\n \n \t* gnat_rm.texi: Adjust previous change."}, {"sha": "95b83fe31f6c8c4a3e36154904b00e3f7bd91837", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=a712b009c56fde0f26e757509b1019d6fb7b6ed6", "patch": "@@ -244,6 +244,7 @@ static void add_cleanup (tree, Node_Id);\n static void add_stmt_list (List_Id);\n static void push_exception_label_stack (VEC(tree,gc) **, Entity_Id);\n static tree build_stmt_group (List_Id, bool);\n+static inline bool stmt_group_may_fallthru (void);\n static enum gimplify_status gnat_gimplify_stmt (tree *);\n static void elaborate_all_entities (Node_Id);\n static void process_freeze_entity (Node_Id);\n@@ -6197,12 +6198,18 @@ gnat_to_gnu (Node_Id gnat_node)\n       break;\n \n     case N_Block_Statement:\n-      start_stmt_group ();\n-      gnat_pushlevel ();\n-      process_decls (Declarations (gnat_node), Empty, Empty, true, true);\n-      add_stmt (gnat_to_gnu (Handled_Statement_Sequence (gnat_node)));\n-      gnat_poplevel ();\n-      gnu_result = end_stmt_group ();\n+      /* The only way to enter the block is to fall through to it.  */\n+      if (stmt_group_may_fallthru ())\n+\t{\n+\t  start_stmt_group ();\n+\t  gnat_pushlevel ();\n+\t  process_decls (Declarations (gnat_node), Empty, Empty, true, true);\n+\t  add_stmt (gnat_to_gnu (Handled_Statement_Sequence (gnat_node)));\n+\t  gnat_poplevel ();\n+\t  gnu_result = end_stmt_group ();\n+\t}\n+      else\n+\tgnu_result = alloc_stmt_list ();\n       break;\n \n     case N_Exit_Statement:\n@@ -7240,6 +7247,17 @@ end_stmt_group (void)\n   return gnu_retval;\n }\n \n+/* Return whether the current statement group may fall through.  */\n+\n+static inline bool\n+stmt_group_may_fallthru (void)\n+{\n+  if (current_stmt_group->stmt_list)\n+    return block_may_fallthru (current_stmt_group->stmt_list);\n+  else\n+    return true;\n+}\n+\n /* Add a list of statements from GNAT_LIST, a possibly-empty list of\n    statements.*/\n "}, {"sha": "3b0f299f2ce7eac59eb0230b3f9456023ccd5c17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a712b009c56fde0f26e757509b1019d6fb7b6ed6", "patch": "@@ -1,3 +1,8 @@\n+2012-07-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/noreturn4.ad[sb]: New test.\n+\t* gnat.dg/noreturn4_pkg.ads: New helper.\n+\n 2012-07-18  Jie Zhang  <jzhang918@gmail.com>\n \t    Julian Brown  <julian@codesourcery.com>\n "}, {"sha": "7225f6cb4f2582e9da9a450ece0db5ba5ead0a53", "filename": "gcc/testsuite/gnat.dg/noreturn4.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4.adb?ref=a712b009c56fde0f26e757509b1019d6fb7b6ed6", "patch": "@@ -0,0 +1,21 @@\n+-- { dg-do compile }\n+\n+with Noreturn4_Pkg; use Noreturn4_Pkg;\n+\n+package body Noreturn4 is\n+\n+  procedure P1 (Msg : String) is\n+  begin\n+     P1 (Msg, 0);\n+  end;\n+  procedure P1 (Msg : String; Val : Integer) is\n+  begin\n+     Fatal_Error (Value (It));\n+  end;\n+\n+  procedure Fatal_Error (X : Integer) is\n+  begin\n+     raise PRogram_Error;\n+  end;\n+\n+end Noreturn4;"}, {"sha": "d6216da33619817608d12c9d2ca35b07487a649c", "filename": "gcc/testsuite/gnat.dg/noreturn4.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4.ads?ref=a712b009c56fde0f26e757509b1019d6fb7b6ed6", "patch": "@@ -0,0 +1,10 @@\n+package Noreturn4 is\n+\n+  procedure P1 (Msg : String);\n+  procedure P1 (Msg : String; Val : Integer);\n+  pragma No_Return (P1);\n+\n+  procedure Fatal_Error (X : Integer);\n+  pragma No_Return (Fatal_Error);\n+\n+end Noreturn4;"}, {"sha": "1d0029e325ceef7f51d4e082227870e5957fccfd", "filename": "gcc/testsuite/gnat.dg/noreturn4_pkg.ads", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a712b009c56fde0f26e757509b1019d6fb7b6ed6/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnoreturn4_pkg.ads?ref=a712b009c56fde0f26e757509b1019d6fb7b6ed6", "patch": "@@ -0,0 +1,18 @@\n+with Ada.Finalization; use Ada.Finalization;\n+\n+package Noreturn4_Pkg is\n+\n+  type Priv is private;\n+  function It return Priv;\n+  function Value (Obj : Priv) return Integer;\n+  function OK (Obj : Priv) return Boolean;\n+\n+private\n+  type Priv is new Controlled with record\n+     Value : Integer := 15;\n+  end record;\n+\n+  procedure Adjust   (Obj : in out Priv);\n+  procedure Finalize (Obj : in out Priv);\n+\n+end Noreturn4_Pkg;"}]}