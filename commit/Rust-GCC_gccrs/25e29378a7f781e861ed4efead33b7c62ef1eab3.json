{"sha": "25e29378a7f781e861ed4efead33b7c62ef1eab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVlMjkzNzhhN2Y3ODFlODYxZWQ0ZWZlYWQzM2I3YzYyZWYxZWFiMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-21T09:55:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-21T09:55:51Z"}, "message": "[multiple changes]\n\n2010-10-21  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_attr.adb (Resolve_Attribute): After replacing the range attribute\n\tnode with a range expression ensure that its evaluation will not have\n\tside effects.\n\t* exp_ch5.adb (Expand_Assign_Array): Propagate the Parent to the\n\tunchecked conversion node generated to handle assignment of private\n\ttypes. Required to allow climbing the subtree if Insert_Action is\n\tinvoked later.\n\n2010-10-21  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch3.adb (P_Interface_Type_Definition): Allow for possibility of\n\taspect clause presence terminating the type definition.\n\nFrom-SVN: r165757", "tree": {"sha": "b4ba5b68e043d3f97abc249c3fb24a8b62d7feab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4ba5b68e043d3f97abc249c3fb24a8b62d7feab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25e29378a7f781e861ed4efead33b7c62ef1eab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e29378a7f781e861ed4efead33b7c62ef1eab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25e29378a7f781e861ed4efead33b7c62ef1eab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e29378a7f781e861ed4efead33b7c62ef1eab3/comments", "author": null, "committer": null, "parents": [{"sha": "90c63b098ced9fb7b17143e4e5a4f860d31ea680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90c63b098ced9fb7b17143e4e5a4f860d31ea680", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90c63b098ced9fb7b17143e4e5a4f860d31ea680"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "76b69a1c3080f763dc80ff5501846b48ab69c421", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25e29378a7f781e861ed4efead33b7c62ef1eab3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25e29378a7f781e861ed4efead33b7c62ef1eab3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=25e29378a7f781e861ed4efead33b7c62ef1eab3", "patch": "@@ -1,3 +1,18 @@\n+2010-10-21  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_attr.adb (Resolve_Attribute): After replacing the range attribute\n+\tnode with a range expression ensure that its evaluation will not have\n+\tside effects.\n+\t* exp_ch5.adb (Expand_Assign_Array): Propagate the Parent to the\n+\tunchecked conversion node generated to handle assignment of private\n+\ttypes. Required to allow climbing the subtree if Insert_Action is\n+\tinvoked later.\n+\n+2010-10-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch3.adb (P_Interface_Type_Definition): Allow for possibility of\n+\taspect clause presence terminating the type definition.\n+\n 2010-10-21  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch4.adb, exp_intr.adb, par-ch4.adb, scn.adb, sem_ch4.adb,"}, {"sha": "7c69d5e634e6c56f6ddf61ee4a672b22c1604f5f", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25e29378a7f781e861ed4efead33b7c62ef1eab3/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25e29378a7f781e861ed4efead33b7c62ef1eab3/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=25e29378a7f781e861ed4efead33b7c62ef1eab3", "patch": "@@ -562,15 +562,23 @@ package body Exp_Ch5 is\n          --  cannot assign to elements of the array without this extra\n          --  unchecked conversion.\n \n+         --  Note: We must propagate Parent to the conversion node to allow\n+         --  climbing the subtree if Insert_Action is invoked later.\n+\n          if Nkind (Act_Lhs) = N_Slice then\n             Larray := Prefix (Act_Lhs);\n          else\n             Larray := Act_Lhs;\n \n             if Is_Private_Type (Etype (Larray)) then\n-               Larray :=\n-                 Unchecked_Convert_To\n-                   (Underlying_Type (Etype (Larray)), Larray);\n+               declare\n+                  Par : constant Node_Id := Parent (Larray);\n+               begin\n+                  Larray :=\n+                    Unchecked_Convert_To\n+                      (Underlying_Type (Etype (Larray)), Larray);\n+                  Set_Parent (Larray, Par);\n+               end;\n             end if;\n          end if;\n \n@@ -580,9 +588,14 @@ package body Exp_Ch5 is\n             Rarray := Act_Rhs;\n \n             if Is_Private_Type (Etype (Rarray)) then\n-               Rarray :=\n-                 Unchecked_Convert_To\n-                   (Underlying_Type (Etype (Rarray)), Rarray);\n+               declare\n+                  Par : constant Node_Id := Parent (Rarray);\n+               begin\n+                  Rarray :=\n+                    Unchecked_Convert_To\n+                      (Underlying_Type (Etype (Rarray)), Rarray);\n+                  Set_Parent (Rarray, Par);\n+               end;\n             end if;\n          end if;\n \n@@ -1049,6 +1062,8 @@ package body Exp_Ch5 is\n          return Step;\n       end Build_Step;\n \n+   --  Start of processing for Expand_Assign_Array_Loop\n+\n    begin\n       if Rev then\n          F_Or_L := Name_Last;"}, {"sha": "87f03a92476b45c441612513c133a1108afeaae6", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25e29378a7f781e861ed4efead33b7c62ef1eab3/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25e29378a7f781e861ed4efead33b7c62ef1eab3/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=25e29378a7f781e861ed4efead33b7c62ef1eab3", "patch": "@@ -3784,7 +3784,7 @@ package body Ch3 is\n       --  Ada 2005 (AI-345): In case of interfaces with a null list of\n       --  interfaces we build a record_definition node.\n \n-      if Token = Tok_Semicolon then\n+      if Token = Tok_Semicolon or else Aspect_Specifications_Present then\n          Typedef_Node := New_Node (N_Record_Definition, Token_Ptr);\n \n          Set_Abstract_Present  (Typedef_Node);"}, {"sha": "6b5741a24ea6f15d9f60095b7ec64e67158fe730", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25e29378a7f781e861ed4efead33b7c62ef1eab3/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25e29378a7f781e861ed4efead33b7c62ef1eab3/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=25e29378a7f781e861ed4efead33b7c62ef1eab3", "patch": "@@ -8791,6 +8791,11 @@ package body Sem_Attr is\n                Rewrite (N, Make_Range (Loc, LB, HB));\n                Analyze_And_Resolve (N, Typ);\n \n+               --  Ensure that the expanded range does not have side effects\n+\n+               Force_Evaluation (LB);\n+               Force_Evaluation (HB);\n+\n                --  Normally after resolving attribute nodes, Eval_Attribute\n                --  is called to do any possible static evaluation of the node.\n                --  However, here since the Range attribute has just been"}]}