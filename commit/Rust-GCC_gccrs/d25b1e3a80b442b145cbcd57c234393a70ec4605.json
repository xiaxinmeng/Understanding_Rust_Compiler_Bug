{"sha": "d25b1e3a80b442b145cbcd57c234393a70ec4605", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1YjFlM2E4MGI0NDJiMTQ1Y2JjZDU3YzIzNDM5M2E3MGVjNDYwNQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2012-02-14T20:38:39Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2012-02-14T20:38:39Z"}, "message": "cxx11.cc (main): Add new tests.\n\n\t* testsuite/libstdc++-prettyprinters/cxx11.cc (main): Add new\n\ttests.\n\t* python/libstdcxx/v6/printers.py (Tr1HashtableIterator.__init__):\n\tRewrite.\n\t(Tr1HashtableIterator.update): Remove.\n\t(Tr1HashtableIterator.next): Rewrite.\n\nFrom-SVN: r184233", "tree": {"sha": "1fa0e0f794e19c0319ce2d56c75a4b04dfbbe30a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fa0e0f794e19c0319ce2d56c75a4b04dfbbe30a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d25b1e3a80b442b145cbcd57c234393a70ec4605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25b1e3a80b442b145cbcd57c234393a70ec4605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d25b1e3a80b442b145cbcd57c234393a70ec4605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25b1e3a80b442b145cbcd57c234393a70ec4605/comments", "author": null, "committer": null, "parents": [{"sha": "7a07ae52847ee08f47746f4b7cddd394839a3d6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a07ae52847ee08f47746f4b7cddd394839a3d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a07ae52847ee08f47746f4b7cddd394839a3d6e"}], "stats": {"total": 61, "additions": 34, "deletions": 27}, "files": [{"sha": "92edfceb35a6667f495d206fc79de58a71584b6e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25b1e3a80b442b145cbcd57c234393a70ec4605/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25b1e3a80b442b145cbcd57c234393a70ec4605/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d25b1e3a80b442b145cbcd57c234393a70ec4605", "patch": "@@ -1,3 +1,12 @@\n+2012-02-14  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libstdc++-prettyprinters/cxx11.cc (main): Add new\n+\ttests.\n+\t* python/libstdcxx/v6/printers.py (Tr1HashtableIterator.__init__):\n+\tRewrite.\n+\t(Tr1HashtableIterator.update): Remove.\n+\t(Tr1HashtableIterator.next): Rewrite.\n+\n 2012-02-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/20_util/shared_ptr/cons/43820_neg.cc: Adjust line numbers."}, {"sha": "76c54b1598e66370ddd131b59332d8c98174c826", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 6, "deletions": 26, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25b1e3a80b442b145cbcd57c234393a70ec4605/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25b1e3a80b442b145cbcd57c234393a70ec4605/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=d25b1e3a80b442b145cbcd57c234393a70ec4605", "patch": "@@ -610,38 +610,18 @@ def display_hint (self):\n \n class Tr1HashtableIterator:\n     def __init__ (self, hash):\n-        self.count = 0\n-        self.n_buckets = hash['_M_element_count']\n-        if self.n_buckets == 0:\n-            self.node = False\n-        else:\n-            self.bucket = hash['_M_buckets']\n-            self.node = self.bucket[0]\n-            self.update ()\n+        self.node = hash['_M_before_begin']['_M_nxt']\n+        self.node_type = find_type(hash.type, '_Node').pointer()\n \n     def __iter__ (self):\n         return self\n \n-    def update (self):\n-        # If we advanced off the end of the chain, move to the next\n-        # bucket.\n-        while self.node == 0:\n-            self.bucket = self.bucket + 1\n-            self.node = self.bucket[0]\n-\n-       # If we advanced off the end of the bucket array, then\n-       # we're done.\n-        if self.count == self.n_buckets:\n-            self.node = False\n-        else:\n-            self.count = self.count + 1\n-\n     def next (self):\n-        if not self.node:\n+        if self.node == 0:\n             raise StopIteration\n-        result = self.node.dereference()['_M_v']\n-        self.node = self.node.dereference()['_M_next']\n-        self.update ()\n+        node = self.node.cast(self.node_type)\n+        result = node.dereference()['_M_v']\n+        self.node = node.dereference()['_M_nxt']\n         return result\n \n class Tr1UnorderedSetPrinter:"}, {"sha": "54b32757894bbb2d64fdec9b2d06d8d8640162e4", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/cxx11.cc", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25b1e3a80b442b145cbcd57c234393a70ec4605/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25b1e3a80b442b145cbcd57c234393a70ec4605/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc?ref=d25b1e3a80b442b145cbcd57c234393a70ec4605", "patch": "@@ -1,7 +1,7 @@\n // { dg-do run }\n // { dg-options \"-std=gnu++11 -g\" }\n \n-// Copyright (C) 2011 Free Software Foundation, Inc.\n+// Copyright (C) 2011, 2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -68,6 +68,24 @@ main()\n   std::unordered_multiset<int> eums;\n // { dg-final { note-test eums \"std::unordered_multiset with 0 elements\" } }\n \n+  std::unordered_map<int, std::string> uom;\n+  uom[5] = \"three\";\n+  uom[3] = \"seven\";\n+// { dg-final { note-test uom {std::unordered_map with 2 elements = {[3] = \"seven\", [5] = \"three\"}} } }\n+\n+  std::unordered_multimap<int, std::string> uomm;\n+  uomm.insert(std::pair<int, std::string> (5, \"three\"));\n+  uomm.insert(std::pair<int, std::string> (5, \"seven\"));\n+// { dg-final { note-test uomm {std::unordered_multimap with 2 elements = {[5] = \"seven\", [5] = \"three\"}} } }\n+\n+  std::unordered_set<int> uos;\n+  uos.insert(5);\n+// { dg-final { note-test uos {std::unordered_set with 1 elements = {[0] = 5}} } }\n+\n+  std::unordered_multiset<int> uoms;\n+  uoms.insert(5);\n+// { dg-final { note-test uoms {std::unordered_multiset with 1 elements = {[0] = 5}} } }\n+\n   placeholder(\"\"); // Mark SPOT\n   use(efl);\n   use(fl);"}]}