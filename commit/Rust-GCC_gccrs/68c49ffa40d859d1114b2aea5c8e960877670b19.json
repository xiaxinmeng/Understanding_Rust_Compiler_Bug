{"sha": "68c49ffa40d859d1114b2aea5c8e960877670b19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjNDlmZmE0MGQ4NTlkMTExNGIyYWVhNWM4ZTk2MDg3NzY3MGIxOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-02T21:47:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-02T21:47:12Z"}, "message": "(processor_target_table): Use new macros.\n\nFrom-SVN: r7429", "tree": {"sha": "35325f7923e190f2e9f814a9066310303d5d64d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35325f7923e190f2e9f814a9066310303d5d64d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68c49ffa40d859d1114b2aea5c8e960877670b19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c49ffa40d859d1114b2aea5c8e960877670b19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c49ffa40d859d1114b2aea5c8e960877670b19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c49ffa40d859d1114b2aea5c8e960877670b19/comments", "author": null, "committer": null, "parents": [{"sha": "583cf4db894f55946ac508e7c3fa119a527b2bdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/583cf4db894f55946ac508e7c3fa119a527b2bdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/583cf4db894f55946ac508e7c3fa119a527b2bdd"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "a606f1911fdccf72fd76312fd1793ea2cbd963fa", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c49ffa40d859d1114b2aea5c8e960877670b19/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c49ffa40d859d1114b2aea5c8e960877670b19/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=68c49ffa40d859d1114b2aea5c8e960877670b19", "patch": "@@ -75,7 +75,9 @@ rs6000_override_options ()\n      variant and any PowerPC variant.  */\n \n #define POWER_MASKS (MASK_POWER | MASK_POWER2)\n-#define POWERPC_MASKS (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64)\n+#define POWERPC_MASKS (MASK_POWERPC | MASK_PPC_GPOPT \\\n+\t\t       | MASK_PPC_GFXOPT | MASK_POWERPC64)\n+#define POWERPC_OPT_MASKS (MASK_PPC_GPOPT | MASK_PPC_GFXOPT)\n \n   static struct ptt\n     {\n@@ -90,7 +92,7 @@ rs6000_override_options ()\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"powerpc\", PROCESSOR_POWERPC,\n \t    MASK_POWERPC | MASK_NEW_MNEMONICS,\n-\t    POWER_MASKS | MASK_PPCFPX | MASK_POWERPC64},\n+\t    POWER_MASKS | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"rios\", PROCESSOR_RIOS1,\n \t    MASK_POWER,\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n@@ -108,41 +110,41 @@ rs6000_override_options ()\n \t    POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"601\", PROCESSOR_PPC601,\n \t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS,\n-\t    MASK_POWER2 | MASK_PPCFPX | MASK_POWERPC64},\n+\t    MASK_POWER2 | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"mpc601\", PROCESSOR_PPC601,\n \t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS,\n-\t    MASK_POWER2 | MASK_PPCFPX | MASK_POWERPC64},\n+\t    MASK_POWER2 | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"ppc601\", PROCESSOR_PPC601,\n \t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS,\n-\t    MASK_POWER2 | MASK_PPCFPX | MASK_POWERPC64},\n+\t    MASK_POWER2 | POWERPC_OPT_MASKS | MASK_POWERPC64},\n \t {\"603\", PROCESSOR_PPC603,\n-\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n-\t    POWER_MASKS | MASK_POWERPC64},\n+\t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n \t {\"mpc603\", PROCESSOR_PPC603,\n-\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n-\t    POWER_MASKS | MASK_POWERPC64},\n+\t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n \t {\"ppc603\", PROCESSOR_PPC603,\n-\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n-\t    POWER_MASKS | MASK_POWERPC64},\n+\t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n \t {\"604\", PROCESSOR_PPC604,\n-\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n-\t    POWER_MASKS | MASK_POWERPC64},\n+\t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n \t {\"mpc604\", PROCESSOR_PPC604,\n-\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n-\t    POWER_MASKS | MASK_POWERPC64},\n+\t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n \t {\"ppc604\", PROCESSOR_PPC604,\n-\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n-\t    POWER_MASKS | MASK_POWERPC64},\n+\t    MASK_POWERPC | MASK_PPC_GFXOPT | MASK_NEW_MNEMONICS,\n+\t    POWER_MASKS | MASK_PPC_GPOPT | MASK_POWERPC64},\n \t {\"620\", PROCESSOR_PPC620,\n-\t    (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64\n+\t    (MASK_POWERPC | POWERPC_OPT_MASKS | MASK_POWERPC64\n \t     | MASK_NEW_MNEMONICS),\n \t      POWER_MASKS},\n \t {\"mpc620\", PROCESSOR_PPC620,\n-\t    (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64\n+\t    (MASK_POWERPC | POWERPC_OPT_MASKS | MASK_POWERPC64\n \t     | MASK_NEW_MNEMONICS),\n \t      POWER_MASKS},\n \t {\"ppc620\", PROCESSOR_PPC620,\n-\t    (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64\n+\t    (MASK_POWERPC | POWERPC_OPT_MASKS | MASK_POWERPC64\n \t     | MASK_NEW_MNEMONICS),\n \t      POWER_MASKS}};\n "}]}