{"sha": "f12f485a960ab57b3069f789faef1d57ee0e88c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjEyZjQ4NWE5NjBhYjU3YjMwNjlmNzg5ZmFlZjFkNTdlZTBlODhjNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-14T04:34:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-14T04:34:07Z"}, "message": "(do_jump_for_compare): Don't blow up if aren't any insns in this\nsequence yet.\n\nFrom-SVN: r5789", "tree": {"sha": "41a289485fa34027fe3054498d5500f4214a0a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41a289485fa34027fe3054498d5500f4214a0a5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f12f485a960ab57b3069f789faef1d57ee0e88c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12f485a960ab57b3069f789faef1d57ee0e88c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12f485a960ab57b3069f789faef1d57ee0e88c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12f485a960ab57b3069f789faef1d57ee0e88c4/comments", "author": null, "committer": null, "parents": [{"sha": "658231787c8855dac4230eb5a880abb10724b9a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/658231787c8855dac4230eb5a880abb10724b9a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/658231787c8855dac4230eb5a880abb10724b9a0"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "59ee991a5a68ad1300c0a825566bf65c57eb2578", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f12f485a960ab57b3069f789faef1d57ee0e88c4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f12f485a960ab57b3069f789faef1d57ee0e88c4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f12f485a960ab57b3069f789faef1d57ee0e88c4", "patch": "@@ -8615,9 +8615,12 @@ do_jump_for_compare (comparison, if_false_label, if_true_label)\n   else if (if_false_label)\n     {\n       rtx insn;\n-      rtx prev = PREV_INSN (get_last_insn ());\n+      rtx prev = get_last_insn ();\n       rtx branch = 0;\n \n+      if (prev != 0)\n+\tprev = PREV_INSN (prev);\n+\n       /* Output the branch with the opposite condition.  Then try to invert\n \t what is generated.  If more than one insn is a branch, or if the\n \t branch is not the last insn written, abort. If we can't invert"}]}