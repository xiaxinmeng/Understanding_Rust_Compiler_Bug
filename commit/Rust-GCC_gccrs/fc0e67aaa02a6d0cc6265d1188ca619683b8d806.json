{"sha": "fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMwZTY3YWFhMDJhNmQwY2M2MjY1ZDExODhjYTYxOTY4M2I4ZDgwNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-10-30T12:03:00Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-10-30T12:03:00Z"}, "message": "Remove alias set comparison.\n\n2019-10-30  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-icf-gimple.c (func_checker::compatible_types_p):\n\tDo not compare alias sets.  It's handled by operand_equal_p.\n2019-10-30  Martin Liska  <mliska@suse.cz>\n\n\t* c-c++-common/Wstringop-truncation-4.c: Disable IPA ICF.\n\t* gcc.dg/tree-ssa/pr64910-2.c: Likewise.\n\t* gcc.dg/tree-ssa/pr79352.c: Likewise.\n\nFrom-SVN: r277618", "tree": {"sha": "08d5c931dd32510bca70cabe55307cf8725c94c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08d5c931dd32510bca70cabe55307cf8725c94c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "430d1e8de0800bc758534ad8048d9e8d53bb2335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/430d1e8de0800bc758534ad8048d9e8d53bb2335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/430d1e8de0800bc758534ad8048d9e8d53bb2335"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "3ea3d91b61d2b9fb3d21fbd5def975b52a27bd0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "patch": "@@ -1,3 +1,8 @@\n+2019-10-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf-gimple.c (func_checker::compatible_types_p):\n+\tDo not compare alias sets.  It's handled by operand_equal_p.\n+\n 2019-10-30  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf-gimple.c (func_checker::func_checker): Do not"}, {"sha": "5b0fbc19fc460a7a14a5446407e62b49766978b4", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"data-streamer.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"alias.h\"\n #include \"fold-const.h\"\n #include \"gimple-iterator.h\"\n #include \"ipa-utils.h\"\n@@ -209,17 +208,6 @@ func_checker::compatible_types_p (tree t1, tree t2)\n   if (!types_compatible_p (t1, t2))\n     return return_false_with_msg (\"types are not compatible\");\n \n-  /* We do a lot of unnecesary matching of types that are not being\n-     accessed and thus do not need to be compatible.  In longer term we should\n-     remove these checks on all types which are not accessed as memory\n-     locations.\n-\n-     For time being just avoid calling get_alias_set on types that are not\n-     having alias sets defined at all.  */\n-  if (type_with_alias_set_p (t1) && type_with_alias_set_p (t2)\n-      && get_alias_set (t1) != get_alias_set (t2))\n-    return return_false_with_msg (\"alias sets are different\");\n-\n   return true;\n }\n "}, {"sha": "59c2e561af642071236d4752aeb15ef70bf506e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "patch": "@@ -1,3 +1,9 @@\n+2019-10-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-c++-common/Wstringop-truncation-4.c: Disable IPA ICF.\n+\t* gcc.dg/tree-ssa/pr64910-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr79352.c: Likewise.\n+\n 2019-10-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-c++-common/gomp/declare-variant-2.c: Add a test with , before"}, {"sha": "15209536add79e112ef62d03d3551d11d0ba4b4d", "filename": "gcc/testsuite/c-c++-common/Wstringop-truncation-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWstringop-truncation-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWstringop-truncation-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWstringop-truncation-4.c?ref=fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "patch": "@@ -3,7 +3,7 @@\n    Verify that -Wstringop-truncation is issued for uses of arrays and\n    pointers to qualified forms of characters of all three types.\n    { dg-do compile }\n-   { dg-options \"-O2 -Wall -Wstringop-truncation\" } */\n+   { dg-options \"-O2 -Wall -Wstringop-truncation -fno-ipa-icf\" } */\n \n #if __cplusplus\n extern \"C\""}, {"sha": "812bfa488254543ddaeb93eda93a5aa81bba9262", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr64910-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64910-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64910-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr64910-2.c?ref=fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-reassoc1\" } */\n+/* { dg-options \"-O2 -fdump-tree-reassoc1 -fno-ipa-icf\" } */\n \n /* We want to make sure that we reassociate in a way that has the\n    constant last.  With the constant last, it's more likely to result"}, {"sha": "36e195c3a063c4cf42392f372725a1e22924491a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79352.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79352.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0e67aaa02a6d0cc6265d1188ca619683b8d806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79352.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79352.c?ref=fc0e67aaa02a6d0cc6265d1188ca619683b8d806", "patch": "@@ -1,7 +1,7 @@\n /* PR tree-optimization/79352 - -fprintf-return-value doesn't handle\n    flexible-like array members properly\n    { dg-do compile }\n-   { dg-options \"-O2 -fdump-tree-optimized\" } */\n+   { dg-options \"-O2 -fdump-tree-optimized -fno-ipa-icf\" } */\n \n struct A { int i; char a1[1]; };\n struct B { int i; char a3[3]; };"}]}