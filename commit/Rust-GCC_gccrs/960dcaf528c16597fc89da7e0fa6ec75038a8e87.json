{"sha": "960dcaf528c16597fc89da7e0fa6ec75038a8e87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYwZGNhZjUyOGMxNjU5N2ZjODlkYTdlMGZhNmVjNzUwMzhhOGU4Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-09-25T15:03:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-09-25T15:03:56Z"}, "message": "tree-ssa-structalias.c (intra_create_variable_infos): Treat TYPE_RESTRICT REFERENCE_TYPE parameters like restricted DECL_BY_REFERENCE...\n\n\t* tree-ssa-structalias.c (intra_create_variable_infos): Treat\n\tTYPE_RESTRICT REFERENCE_TYPE parameters like restricted\n\tDECL_BY_REFERENCE parameters.\n\n\t* g++.dg/tree-ssa/restrict2.C: New test.\n\nFrom-SVN: r179166", "tree": {"sha": "3009a9f38ca66b062d817745dc0546775fdb4e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3009a9f38ca66b062d817745dc0546775fdb4e23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/960dcaf528c16597fc89da7e0fa6ec75038a8e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960dcaf528c16597fc89da7e0fa6ec75038a8e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/960dcaf528c16597fc89da7e0fa6ec75038a8e87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960dcaf528c16597fc89da7e0fa6ec75038a8e87/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ee0d6604012f8bf441431e191ea8484ecde1b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee0d6604012f8bf441431e191ea8484ecde1b00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee0d6604012f8bf441431e191ea8484ecde1b00"}], "stats": {"total": 81, "additions": 77, "deletions": 4}, "files": [{"sha": "71251cecb26121642df33ede57ae7bb24f3da6e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960dcaf528c16597fc89da7e0fa6ec75038a8e87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960dcaf528c16597fc89da7e0fa6ec75038a8e87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=960dcaf528c16597fc89da7e0fa6ec75038a8e87", "patch": "@@ -1,3 +1,9 @@\n+2011-09-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-ssa-structalias.c (intra_create_variable_infos): Treat\n+\tTYPE_RESTRICT REFERENCE_TYPE parameters like restricted\n+\tDECL_BY_REFERENCE parameters.\n+\n 2011-09-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-eh.c (cleanup_empty_eh): Allow a call to __builtin_stack_restore"}, {"sha": "fc9624f849d8a8f24ae535c2afc8f7cc117e2fb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960dcaf528c16597fc89da7e0fa6ec75038a8e87/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960dcaf528c16597fc89da7e0fa6ec75038a8e87/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=960dcaf528c16597fc89da7e0fa6ec75038a8e87", "patch": "@@ -1,3 +1,7 @@\n+2011-09-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/tree-ssa/restrict2.C: New test.\n+\n 2011-09-25  Ira Rosen  <ira.rosen@linaro.org>\n \n \t* lib/target-supports.exp (check_effective_target_vect64): New."}, {"sha": "35957f53541964957ed7789f2b854e6c9b67267d", "filename": "gcc/testsuite/g++.dg/tree-ssa/restrict2.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960dcaf528c16597fc89da7e0fa6ec75038a8e87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960dcaf528c16597fc89da7e0fa6ec75038a8e87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict2.C?ref=960dcaf528c16597fc89da7e0fa6ec75038a8e87", "patch": "@@ -0,0 +1,62 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fdump-tree-optimized\" }\n+\n+struct S { int *__restrict p; int q; };\n+S s;\n+\n+int\n+f1 (S x, S y)\n+{\n+  x.p[0] = 1;\n+  y.p[0] = 0;\n+// { dg-final { scan-tree-dump-times \"return 1\" 1 \"optimized\" } }\n+  return x.p[0];\n+}\n+\n+int\n+f2 (S x)\n+{\n+  x.p[0] = 2;\n+  s.p[0] = 0;\n+// { dg-final { scan-tree-dump-times \"return 2\" 1 \"optimized\" } }\n+  return x.p[0];\n+}\n+\n+int\n+f3 (S &__restrict x, S &__restrict y)\n+{\n+  x.p[0] = 3;\n+  y.p[0] = 0;\n+// { dg-final { scan-tree-dump-times \"return 3\" 1 \"optimized\" } }\n+  return x.p[0];\n+}\n+\n+int\n+f4 (S &x, S &y)\n+{\n+  x.p[0] = 4;\n+  y.p[0] = 0;\n+// { dg-final { scan-tree-dump-times \"return 4\" 0 \"optimized\" } }\n+  return x.p[0];\n+}\n+\n+int\n+f5 (S *__restrict x, S *__restrict y)\n+{\n+  x->p[0] = 5;\n+  y->p[0] = 0;\n+// We might handle this some day\n+// { dg-final { scan-tree-dump-times \"return 5\" 1 \"optimized\" { xfail *-*-* } } }\n+  return x->p[0];\n+}\n+\n+int\n+f6 (S *x, S *y)\n+{\n+  x->p[0] = 6;\n+  y->p[0] = 0;\n+// { dg-final { scan-tree-dump-times \"return 6\" 0 \"optimized\" } }\n+  return x->p[0];\n+}\n+\n+// { dg-final { cleanup-tree-dump \"optimized\" } }"}, {"sha": "b2f068a0ac42bcd6fe32cf231be639e2431feaf9", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960dcaf528c16597fc89da7e0fa6ec75038a8e87/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960dcaf528c16597fc89da7e0fa6ec75038a8e87/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=960dcaf528c16597fc89da7e0fa6ec75038a8e87", "patch": "@@ -5589,10 +5589,11 @@ intra_create_variable_infos (void)\n       varinfo_t p;\n \n       /* For restrict qualified pointers to objects passed by\n-         reference build a real representative for the pointed-to object.  */\n-      if (DECL_BY_REFERENCE (t)\n-\t  && POINTER_TYPE_P (TREE_TYPE (t))\n-\t  && TYPE_RESTRICT (TREE_TYPE (t)))\n+         reference build a real representative for the pointed-to object.\n+\t Treat restrict qualified references the same.  */\n+      if (TYPE_RESTRICT (TREE_TYPE (t))\n+\t  && ((DECL_BY_REFERENCE (t) && POINTER_TYPE_P (TREE_TYPE (t)))\n+\t      || TREE_CODE (TREE_TYPE (t)) == REFERENCE_TYPE))\n \t{\n \t  struct constraint_expr lhsc, rhsc;\n \t  varinfo_t vi;"}]}