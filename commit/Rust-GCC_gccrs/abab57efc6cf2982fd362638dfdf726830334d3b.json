{"sha": "abab57efc6cf2982fd362638dfdf726830334d3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJhYjU3ZWZjNmNmMjk4MmZkMzYyNjM4ZGZkZjcyNjgzMDMzNGQzYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-09-23T18:07:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-09-23T18:07:07Z"}, "message": "re PR debug/41439 (choose DW_OP_stack_value over DW_OP_implicit_value more often, please)\n\n\tPR debug/41439\n\t* dwarf2out.c (address_of_int_loc_descriptor): Don't emit\n\tDW_OP_piece after DW_OP_stack_value, adjust size calculations\n\tfor it, when DW_OP_stack_value and DW_OP_implicit_value has\n\tthe same size, prefer DW_OP_stack_value.\n\t(loc_descriptor, loc_list_for_address_of_addr_expr_of_indirect_ref,\n\tloc_list_from_tree): Don't emit DW_OP_piece after DW_OP_stack_value.\n\nFrom-SVN: r152091", "tree": {"sha": "3778747985d93fb372f79d56361aa9655317ae72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3778747985d93fb372f79d56361aa9655317ae72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abab57efc6cf2982fd362638dfdf726830334d3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abab57efc6cf2982fd362638dfdf726830334d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abab57efc6cf2982fd362638dfdf726830334d3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abab57efc6cf2982fd362638dfdf726830334d3b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7168dc4708775024f33cfa33b1e86566591af8ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7168dc4708775024f33cfa33b1e86566591af8ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7168dc4708775024f33cfa33b1e86566591af8ac"}], "stats": {"total": 36, "additions": 15, "deletions": 21}, "files": [{"sha": "18fe6df04da8287ac8a7a03e585cacd27efb1c69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abab57efc6cf2982fd362638dfdf726830334d3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abab57efc6cf2982fd362638dfdf726830334d3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abab57efc6cf2982fd362638dfdf726830334d3b", "patch": "@@ -1,3 +1,13 @@\n+2009-09-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41439\n+\t* dwarf2out.c (address_of_int_loc_descriptor): Don't emit\n+\tDW_OP_piece after DW_OP_stack_value, adjust size calculations\n+\tfor it, when DW_OP_stack_value and DW_OP_implicit_value has\n+\tthe same size, prefer DW_OP_stack_value.\n+\t(loc_descriptor, loc_list_for_address_of_addr_expr_of_indirect_ref,\n+\tloc_list_from_tree): Don't emit DW_OP_piece after DW_OP_stack_value.\n+\n 2009-09-23  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/41353"}, {"sha": "ed1a0fee5e02c4f87e9ca3ed65dc60b87e3da369", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abab57efc6cf2982fd362638dfdf726830334d3b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abab57efc6cf2982fd362638dfdf726830334d3b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=abab57efc6cf2982fd362638dfdf726830334d3b", "patch": "@@ -10941,17 +10941,14 @@ address_of_int_loc_descriptor (int size, HOST_WIDE_INT i)\n     }\n   /* Determine if DW_OP_stack_value or DW_OP_implicit_value\n      is more compact.  For DW_OP_stack_value we need:\n-     litsize + 1 (DW_OP_stack_value) + 1 (DW_OP_bit_size)\n-     + 1 (mode size)\n+     litsize + 1 (DW_OP_stack_value)\n      and for DW_OP_implicit_value:\n-     1 (DW_OP_implicit_value) + 1 (length) + mode_size.  */\n-  if ((int) DWARF2_ADDR_SIZE >= size\n-      && litsize + 1 + 1 + 1 < 1 + 1 + size)\n+     1 (DW_OP_implicit_value) + 1 (length) + size.  */\n+  if ((int) DWARF2_ADDR_SIZE >= size && litsize + 1 <= 1 + 1 + size)\n     {\n       loc_result = int_loc_descriptor (i);\n       add_loc_descr (&loc_result,\n \t\t     new_loc_descr (DW_OP_stack_value, 0, 0));\n-      add_loc_descr_op_piece (&loc_result, size);\n       return loc_result;\n     }\n \n@@ -11997,11 +11994,8 @@ loc_descriptor (rtx rtl, enum machine_mode mode,\n \t  /* Value expression.  */\n \t  loc_result = mem_loc_descriptor (rtl, VOIDmode, initialized);\n \t  if (loc_result)\n-\t    {\n-\t      add_loc_descr (&loc_result,\n-\t\t\t     new_loc_descr (DW_OP_stack_value, 0, 0));\n-\t      add_loc_descr_op_piece (&loc_result, GET_MODE_SIZE (mode));\n-\t    }\n+\t    add_loc_descr (&loc_result,\n+\t\t\t   new_loc_descr (DW_OP_stack_value, 0, 0));\n \t}\n       break;\n     }\n@@ -12391,11 +12385,6 @@ loc_list_for_address_of_addr_expr_of_indirect_ref (tree loc, bool toplev)\n \tloc_list_plus_const (list_ret, bytepos);\n       add_loc_descr_to_each (list_ret,\n \t\t\t     new_loc_descr (DW_OP_stack_value, 0, 0));\n-      add_loc_descr_to_each (list_ret,\n-\t\t\t     new_loc_descr (DW_OP_piece,\n-\t\t\t\t\t    int_size_in_bytes (TREE_TYPE\n-\t\t\t\t\t\t\t       (loc)),\n-\t\t\t\t\t    0));\n     }\n   return list_ret;\n }\n@@ -12916,11 +12905,6 @@ loc_list_from_tree (tree loc, int want_address)\n \t}\n       add_loc_descr_to_each (list_ret,\n \t\t\t     new_loc_descr (DW_OP_stack_value, 0, 0));\n-      add_loc_descr_to_each (list_ret,\n-\t\t\t     new_loc_descr (DW_OP_piece,\n-\t\t\t\t\t    int_size_in_bytes (TREE_TYPE\n-\t\t\t\t\t\t\t       (loc)),\n-\t\t\t\t\t    0));\n       have_address = 1;\n     }\n   /* Show if we can't fill the request for an address.  */"}]}