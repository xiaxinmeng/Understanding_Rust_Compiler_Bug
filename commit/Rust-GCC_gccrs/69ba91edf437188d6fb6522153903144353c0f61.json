{"sha": "69ba91edf437188d6fb6522153903144353c0f61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjliYTkxZWRmNDM3MTg4ZDZmYjY1MjIxNTM5MDMxNDQzNTNjMGY2MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-28T13:50:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-28T13:50:10Z"}, "message": "[multiple changes]\n\n2009-10-28  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb, exp_ch9.adb, prj-nmsc.adb, tbuild.adb, ali.adb,\n\ttypes.ads: Minor reformatting\n\n2009-10-28  Tristan Gingold  <gingold@adacore.com>\n\n\t* init.c: Fix __gnat_error_handler for Darwin10 (Snow Leopard)\n\nFrom-SVN: r153658", "tree": {"sha": "c1b19f5264ff3f937e8799d40e5e8a7a215dfa70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1b19f5264ff3f937e8799d40e5e8a7a215dfa70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69ba91edf437188d6fb6522153903144353c0f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69ba91edf437188d6fb6522153903144353c0f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69ba91edf437188d6fb6522153903144353c0f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69ba91edf437188d6fb6522153903144353c0f61/comments", "author": null, "committer": null, "parents": [{"sha": "5f3f175d79b2263927f1a4b84db71fb61a71d0e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3f175d79b2263927f1a4b84db71fb61a71d0e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3f175d79b2263927f1a4b84db71fb61a71d0e1"}], "stats": {"total": 97, "additions": 56, "deletions": 41}, "files": [{"sha": "226fb9526df2f24b50ab9796238472e4409cd1b3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=69ba91edf437188d6fb6522153903144353c0f61", "patch": "@@ -1,3 +1,12 @@\n+2009-10-28  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb, exp_ch9.adb, prj-nmsc.adb, tbuild.adb, ali.adb,\n+\ttypes.ads: Minor reformatting\n+\n+2009-10-28  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* init.c: Fix __gnat_error_handler for Darwin10 (Snow Leopard)\n+\n 2009-10-28  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Type_Conversion): Perform Integer promotion for"}, {"sha": "20438cf66e63386aa684e71792b8ad56c4e60010", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=69ba91edf437188d6fb6522153903144353c0f61", "patch": "@@ -190,7 +190,7 @@ package body ALI is\n \n       function Get_Name\n         (Ignore_Spaces  : Boolean := False;\n-         Ignore_Special : Boolean := False)return Name_Id;\n+         Ignore_Special : Boolean := False) return Name_Id;\n       --  Skip blanks, then scan out a name (name is left in Name_Buffer with\n       --  length in Name_Len, as well as being returned in Name_Id form).\n       --  If Lower is set to True then the Name_Buffer will be converted to"}, {"sha": "48bd566b38babfebd1c4811058ce32d11e7732b3", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=69ba91edf437188d6fb6522153903144353c0f61", "patch": "@@ -661,12 +661,10 @@ package body Exp_Attr is\n \n       if Is_Protected_Self_Reference (Pref)\n            and then not\n-             (Nkind_In (Parent (N),\n-                N_Index_Or_Discriminant_Constraint,\n-                N_Discriminant_Association)\n-                and then\n-              Nkind (Parent (Parent (Parent (Parent (N)))))\n-                = N_Component_Definition)\n+             (Nkind_In (Parent (N), N_Index_Or_Discriminant_Constraint,\n+                                    N_Discriminant_Association)\n+                and then Nkind (Parent (Parent (Parent (Parent (N))))) =\n+                                                      N_Component_Definition)\n       then\n          Rewrite (Pref, Concurrent_Ref (Pref));\n          Analyze (Pref);\n@@ -690,9 +688,9 @@ package body Exp_Attr is\n \n             function Enclosing_Object (N : Node_Id) return Node_Id;\n             --  If N denotes a compound name (selected component, indexed\n-            --  component, or slice), returns the name of the outermost\n-            --  such enclosing object. Otherwise returns N. If the object\n-            --  is a renaming, then the renamed object is returned.\n+            --  component, or slice), returns the name of the outermost such\n+            --  enclosing object. Otherwise returns N. If the object is a\n+            --  renaming, then the renamed object is returned.\n \n             ----------------------\n             -- Enclosing_Object --"}, {"sha": "e26734ea40ecbfec3607cbe6d31d038efbadad61", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=69ba91edf437188d6fb6522153903144353c0f61", "patch": "@@ -7824,8 +7824,8 @@ package body Exp_Ch9 is\n                   Oent     : constant Entity_Id := Defining_Identifier (Priv);\n                   New_Comp : Node_Id;\n                   Nent     : constant Entity_Id :=\n-                               Make_Defining_Identifier\n-                                 (Sloc (Oent), Chars (Oent));\n+                               Make_Defining_Identifier (Sloc (Oent),\n+                                 Chars => Chars (Oent));\n \n                begin\n                   if Present (Subtype_Indication (Old_Comp)) then\n@@ -7846,9 +7846,9 @@ package body Exp_Ch9 is\n \n                   New_Priv :=\n                     Make_Component_Declaration (Loc,\n-                      Defining_Identifier => Nent,\n+                      Defining_Identifier  => Nent,\n                       Component_Definition => New_Comp,\n-                      Expression => Expression (Priv));\n+                      Expression           => Expression (Priv));\n \n                   Set_Has_Per_Object_Constraint (Nent,\n                     Has_Per_Object_Constraint (Oent));"}, {"sha": "f9bcf634e5346c3dfb86773b34cf359353fff848", "filename": "gcc/ada/init.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=69ba91edf437188d6fb6522153903144353c0f61", "patch": "@@ -2114,6 +2114,7 @@ __gnat_install_handler(void)\n #elif defined(__APPLE__)\n \n #include <signal.h>\n+#include <sys/syscall.h>\n #include <mach/mach_vm.h>\n #include <mach/mach_init.h>\n #include <mach/vm_statistics.h>\n@@ -2123,9 +2124,9 @@ char __gnat_alternate_stack[32 * 1024]; /* 1 * MINSIGSTKSZ */\n \n static void __gnat_error_handler (int sig, siginfo_t * si, void * uc);\n \n-/* Defined in xnu unix_signal.c  */\n+/* Defined in xnu unix_signal.c.\n+   Tell the kernel to re-use alt stack when delivering a signal.  */\n #define\tUC_RESET_ALT_STACK\t0x80000000\n-extern int sigreturn (void *uc, int flavour);\n \n /* Return true if ADDR is within a stack guard area.  */\n static int\n@@ -2173,8 +2174,9 @@ __gnat_error_handler (int sig, siginfo_t * si, void * uc ATTRIBUTE_UNUSED)\n \t  msg = \"erroneous memory access\";\n \t}\n       /* Reset the use of alt stack, so that the alt stack will be used\n-\t for the next signal delivery.  */\n-      sigreturn (NULL, UC_RESET_ALT_STACK);\n+\t for the next signal delivery.\n+         The stack can't be used in case of stack checking.  */\n+      syscall (SYS_sigreturn, NULL, UC_RESET_ALT_STACK);\n       break;\n \n     case SIGFPE:"}, {"sha": "b8d6674cc0e48dd01f9924ed3c9c40e1bf9a599c", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=69ba91edf437188d6fb6522153903144353c0f61", "patch": "@@ -4712,7 +4712,7 @@ package body Prj.Nmsc is\n            (Path_Id         : Name_Id;\n             Display_Path_Id : Name_Id);\n          --  Add the directory Path_Id to the list of source_dirs if not\n-         --  already in the list\n+         --  already in the list.\n \n          procedure Recursive_Find_Dirs (Path : Name_Id);\n          --  Find all the subdirectories (recursively) of Path and add them\n@@ -4731,12 +4731,12 @@ package body Prj.Nmsc is\n             Rank_List  : Number_List_Index;\n             Prev_Rank  : Number_List_Index;\n             Element    : String_Element;\n+\n          begin\n             Prev      := Nil_String;\n             Prev_Rank := No_Number_List;\n             List      := Project.Source_Dirs;\n             Rank_List := Project.Source_Dir_Ranks;\n-\n             while List /= Nil_String loop\n                Element := Data.Tree.String_Elements.Table (List);\n                exit when Element.Value = Path_Id;\n@@ -4782,7 +4782,6 @@ package body Prj.Nmsc is\n                     String_Element_Table.Last (Data.Tree.String_Elements);\n                   Data.Tree.Number_Lists.Table (Last_Src_Dir_Rank).Next :=\n                     Number_List_Table.Last (Data.Tree.Number_Lists);\n-\n                end if;\n \n                --  And register this source directory as the new last\n@@ -4796,6 +4795,7 @@ package body Prj.Nmsc is\n                  (Number => Rank, Next => No_Number_List);\n \n             elsif List /= Nil_String then\n+\n                --  Remove source dir, if present\n \n                if Prev = Nil_String then\n@@ -4818,9 +4818,10 @@ package body Prj.Nmsc is\n          -------------------------\n \n          procedure Recursive_Find_Dirs (Path : Name_Id) is\n-            Dir     : Dir_Type;\n-            Name    : String (1 .. 250);\n-            Last    : Natural;\n+            Dir  : Dir_Type;\n+            Name : String (1 .. 250);\n+            Last : Natural;\n+\n             Non_Canonical_Path : Name_Id := No_Name;\n             Canonical_Path     : Name_Id := No_Name;\n \n@@ -4860,9 +4861,9 @@ package body Prj.Nmsc is\n               (Path_Id         => Canonical_Path,\n                Display_Path_Id => Non_Canonical_Path);\n \n-            --  Now look for subdirectories. We do that even when this\n-            --  directory is already in the list, because some of its\n-            --  subdirectories may not be in the list yet.\n+            --  Now look for subdirectories. Do that even when this directory\n+            --  is already in the list, because some of its subdirectories may\n+            --  not be in the list yet.\n \n             Open (Dir, The_Path (The_Path'First .. The_Path_Last));\n \n@@ -4882,12 +4883,14 @@ package body Prj.Nmsc is\n \n                   declare\n                      Path_Name : constant String :=\n-                       Normalize_Pathname\n-                         (Name      => Name (1 .. Last),\n-                          Directory =>\n-                            The_Path (The_Path'First .. The_Path_Last),\n-                          Resolve_Links  => Opt.Follow_Links_For_Dirs,\n-                          Case_Sensitive => True);\n+                                   Normalize_Pathname\n+                                     (Name           => Name (1 .. Last),\n+                                      Directory      =>\n+                                        The_Path\n+                                          (The_Path'First .. The_Path_Last),\n+                                      Resolve_Links  =>\n+                                        Opt.Follow_Links_For_Dirs,\n+                                      Case_Sensitive => True);\n \n                   begin\n                      if Is_Directory (Path_Name) then\n@@ -5028,13 +5031,14 @@ package body Prj.Nmsc is\n \n                else\n                   declare\n-                     Path              : constant String :=\n-                        Normalize_Pathname\n-                         (Name           => Get_Name_String (Path_Name.Name),\n-                          Directory      =>\n-                            Get_Name_String (Project.Directory.Name),\n-                          Resolve_Links  => Opt.Follow_Links_For_Dirs,\n-                          Case_Sensitive => True);\n+                     Path : constant String :=\n+                              Normalize_Pathname\n+                                (Name           =>\n+                                   Get_Name_String (Path_Name.Name),\n+                                 Directory      =>\n+                                   Get_Name_String (Project.Directory.Name),\n+                                 Resolve_Links  => Opt.Follow_Links_For_Dirs,\n+                                 Case_Sensitive => True);\n \n                      Last_Path         : constant Natural :=\n                                            Compute_Directory_Last (Path);"}, {"sha": "3da3c611198971a547263dc12e11956b21a8493b", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=69ba91edf437188d6fb6522153903144353c0f61", "patch": "@@ -668,10 +668,12 @@ package body Tbuild is\n          N_Op_Shift_Right_Arithmetic => Name_Shift_Right_Arithmetic);\n \n       Nod : constant Node_Id := New_Node (New_Node_Kind, New_Sloc);\n+\n    begin\n       if New_Node_Kind in Name_Of'Range then\n          Set_Chars (Nod, Name_Of (New_Node_Kind));\n       end if;\n+\n       return Nod;\n    end New_Op_Node;\n "}, {"sha": "cc3603aafa080ed94871d2f995db6b4a03db56a2", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69ba91edf437188d6fb6522153903144353c0f61/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=69ba91edf437188d6fb6522153903144353c0f61", "patch": "@@ -31,7 +31,7 @@\n \n --  This package contains host independent type definitions which are used\n --  in more than one unit in the compiler. They are gathered here for easy\n---  reference, though in some cases the full description is found in the\n+--  reference, although in some cases the full description is found in the\n --  relevant module which implements the definition. The main reason that they\n --  are not in their \"natural\" specs is that this would cause a lot of inter-\n --  spec dependencies, and in particular some awkward circular dependencies"}]}