{"sha": "c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZiM2YzNDlmNWVjNzdiMGQ5MWMxMTA1ZGFkNGE0MTM4YzlhYTBiYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-08-13T18:40:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-08-13T18:40:10Z"}, "message": "re PR libstdc++/61841 (broken std::thread on Hurd)\n\n\tPR libstdc++/61841\n\t* include/std/thread (thread::_M_start_thread): Declare new overload.\n\t(thread::thread<_Callable, _Args...>): Call new overload with an\n\texplicit reference to pthread_create.\n\t* src/c++11/thread.cc (thread::_M_start_thread): Add new overload.\n\t* config/abi/pre/gnu.ver: Export new function.\n\nFrom-SVN: r213922", "tree": {"sha": "c392e014c949123a3926cb7b947751e628c2c887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c392e014c949123a3926cb7b947751e628c2c887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2f2e467c03f108a407473366c950bc2371ca00a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f2e467c03f108a407473366c950bc2371ca00a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f2e467c03f108a407473366c950bc2371ca00a"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "208c778b7aa03810eb676d18e36a099f400db070", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba", "patch": "@@ -1,3 +1,12 @@\n+2014-08-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/61841\n+\t* include/std/thread (thread::_M_start_thread): Declare new overload.\n+\t(thread::thread<_Callable, _Args...>): Call new overload with an\n+\texplicit reference to pthread_create.\n+\t* src/c++11/thread.cc (thread::_M_start_thread): Add new overload.\n+\t* config/abi/pre/gnu.ver: Export new function.\n+\n 2014-08-13  Sylvestre Ledru  <sylvestre@debian.org>\n \n \t* include/profile/impl/profiler_hash_func.h: Fix a comment typo"}, {"sha": "41fac71adaf95652b6c068dbd4e6d2b00776f121", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba", "patch": "@@ -1372,6 +1372,9 @@ GLIBCXX_3.4.21 {\n     # std::regex_error::regex_error(std::regex_constants::error_type)\n     _ZNSt11regex_errorC2ENSt15regex_constants10error_typeE;\n \n+    # void std::thread::_M_start_thread(__shared_base_type, void(*)())\n+    _ZNSt6thread15_M_start_threadESt10shared_ptrINS_10_Impl_baseEEPFvvE;\n+\n } GLIBCXX_3.4.20;\n \n "}, {"sha": "057634722eedd3dfea052057eab598f9d60b5c32", "filename": "libstdc++-v3/include/std/thread", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread?ref=c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba", "patch": "@@ -132,9 +132,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       explicit \n       thread(_Callable&& __f, _Args&&... __args)\n       {\n+#ifdef GTHR_ACTIVE_PROXY\n+\t// Create a reference to pthread_create, not just the gthr weak symbol\n+        _M_start_thread(_M_make_routine(std::__bind_simple(\n+                std::forward<_Callable>(__f),\n+                std::forward<_Args>(__args)...)),\n+\t    reinterpret_cast<void(*)()>(&pthread_create));\n+#else\n         _M_start_thread(_M_make_routine(std::__bind_simple(\n                 std::forward<_Callable>(__f),\n                 std::forward<_Args>(__args)...)));\n+#endif\n       }\n \n     ~thread()\n@@ -182,6 +190,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     hardware_concurrency() noexcept;\n \n   private:\n+    void\n+    _M_start_thread(__shared_base_type, void (*)());\n+\n     void\n     _M_start_thread(__shared_base_type);\n "}, {"sha": "bbcc99c56b89fe9bfe4b1bd2774721f224e58513", "filename": "libstdc++-v3/src/c++11/thread.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc?ref=c6b3f349f5ec77b0d91c1105dad4a4138c9aa0ba", "patch": "@@ -137,6 +137,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __throw_system_error(int(errc::operation_not_permitted));\n #endif\n \n+    _M_start_thread(__b, nullptr);\n+  }\n+\n+  void\n+  thread::_M_start_thread(__shared_base_type __b, void (*)())\n+  {\n     __b->_M_this_ptr = __b;\n     int __e = __gthread_create(&_M_id._M_thread,\n \t\t\t       &execute_native_thread_routine, __b.get());"}]}