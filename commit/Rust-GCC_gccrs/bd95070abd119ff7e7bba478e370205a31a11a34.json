{"sha": "bd95070abd119ff7e7bba478e370205a31a11a34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ5NTA3MGFiZDExOWZmN2U3YmJhNDc4ZTM3MDIwNWEzMWExMWEzNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-11-29T18:59:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-11-29T18:59:13Z"}, "message": "(integrate_decl_tree): Delete variable newd.\n\nAlways set DECL_ABSTRACT_ORIGIN before calling pushdecl.\n\nFrom-SVN: r10621", "tree": {"sha": "a8e87f66f4ddd0da00a16fccf85564b953461844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8e87f66f4ddd0da00a16fccf85564b953461844"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd95070abd119ff7e7bba478e370205a31a11a34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd95070abd119ff7e7bba478e370205a31a11a34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd95070abd119ff7e7bba478e370205a31a11a34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd95070abd119ff7e7bba478e370205a31a11a34/comments", "author": null, "committer": null, "parents": [{"sha": "7afbf31f02054b3b2977b5d6e511de71c192e7e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afbf31f02054b3b2977b5d6e511de71c192e7e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7afbf31f02054b3b2977b5d6e511de71c192e7e6"}], "stats": {"total": 22, "additions": 3, "deletions": 19}, "files": [{"sha": "3d370695c0f24928eefb7de8cc93b8605deaf7e9", "filename": "gcc/integrate.c", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd95070abd119ff7e7bba478e370205a31a11a34/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd95070abd119ff7e7bba478e370205a31a11a34/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=bd95070abd119ff7e7bba478e370205a31a11a34", "patch": "@@ -1973,7 +1973,6 @@ integrate_decl_tree (let, level, map)\n   for (t = BLOCK_VARS (let); t; t = TREE_CHAIN (t))\n     {\n       tree d;\n-      tree newd;\n \n       push_obstacks_nochange ();\n       saveable_allocation ();\n@@ -1992,28 +1991,13 @@ integrate_decl_tree (let, level, map)\n \t}\n       /* These args would always appear unused, if not for this.  */\n       TREE_USED (d) = 1;\n+      /* Prevent warning for shadowing with these.  */\n+      DECL_ABSTRACT_ORIGIN (d) = t;\n \n       if (DECL_LANG_SPECIFIC (d))\n \tcopy_lang_decl (d);\n \n-      /* Must set DECL_ABSTRACT_ORIGIN here for local variables, to ensure\n-\t that we don't get -Wshadow warnings.  But don't set it here if\n-\t pushdecl might return a duplicate decl, as that will result in\n-\t incorrect DWARF debug info.  */\n-      if (! DECL_EXTERNAL (d) || ! TREE_PUBLIC (d))\n-\t/* Prevent warning for shadowing with these.  */\n-\tDECL_ABSTRACT_ORIGIN (d) = t;\n-\n-      newd = pushdecl (d);\n-\n-      /* If we didn't set DECL_ABSTRACT_ORIGIN above, then set it now.\n-\t Simpler to just set it always rather than checking.\n-\t If the decl we get back is the copy of 't' that we started with,\n-\t then set the DECL_ABSTRACT_ORIGIN.  Otherwise, we must have a\n-\t duplicate decl, and we got the older one back.  In that case, setting\n-\t DECL_ABSTRACT_ORIGIN is not appropriate.  */\n-      if (newd == d)\n-\tDECL_ABSTRACT_ORIGIN (d) = t;\n+      pushdecl (d);\n     }\n \n   for (t = BLOCK_SUBBLOCKS (let); t; t = TREE_CHAIN (t))"}]}