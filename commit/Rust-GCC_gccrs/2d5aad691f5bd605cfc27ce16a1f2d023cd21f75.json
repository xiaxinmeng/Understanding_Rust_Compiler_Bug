{"sha": "2d5aad691f5bd605cfc27ce16a1f2d023cd21f75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ1YWFkNjkxZjViZDYwNWNmYzI3Y2UxNmExZjJkMDIzY2QyMWY3NQ==", "commit": {"author": {"name": "zhengnannan", "email": "zhengnannan@huawei.com", "date": "2020-10-26T13:02:18Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-10-26T13:02:18Z"}, "message": "AArch64: Add FLAG for store intrinsics [PR94442]\n\n2020-10-26  Zhiheng Xie  <xiezhiheng@huawei.com>\n\t    Nannan Zheng  <zhengnannan@huawei.com>\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-builtins.c: Add FLAG STORE.\n\t* config/aarch64/aarch64-simd-builtins.def: Add proper FLAG\n\tfor store intrinsics.", "tree": {"sha": "aee1a9545aaa29a180e6e67b13c052b11128faff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aee1a9545aaa29a180e6e67b13c052b11128faff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93e9a7bcd5434a24c945de33cd7fa01a25f68418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e9a7bcd5434a24c945de33cd7fa01a25f68418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e9a7bcd5434a24c945de33cd7fa01a25f68418"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "9d5e8c75c55de26a1a87a3216aa72b7ddf47cbc4", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=2d5aad691f5bd605cfc27ce16a1f2d023cd21f75", "patch": "@@ -132,6 +132,7 @@ const unsigned int FLAG_AUTO_FP = 1U << 5;\n const unsigned int FLAG_FP = FLAG_READ_FPCR | FLAG_RAISE_FP_EXCEPTIONS;\n const unsigned int FLAG_ALL = FLAG_READ_FPCR | FLAG_RAISE_FP_EXCEPTIONS\n   | FLAG_READ_MEMORY | FLAG_PREFETCH_MEMORY | FLAG_WRITE_MEMORY;\n+const unsigned int FLAG_STORE = FLAG_WRITE_MEMORY | FLAG_AUTO_FP;\n \n typedef struct\n {"}, {"sha": "bae7a048b7239b9fc2875b47da50f1dbde4f0ad6", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5aad691f5bd605cfc27ce16a1f2d023cd21f75/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=2d5aad691f5bd605cfc27ce16a1f2d023cd21f75", "patch": "@@ -111,13 +111,13 @@\n   BUILTIN_VALLDIF (LOADSTRUCT_LANE, ld3_lane, 0, ALL)\n   BUILTIN_VALLDIF (LOADSTRUCT_LANE, ld4_lane, 0, ALL)\n   /* Implemented by aarch64_st<VSTRUCT:nregs><VDC:mode>.  */\n-  BUILTIN_VDC (STORESTRUCT, st2, 0, ALL)\n-  BUILTIN_VDC (STORESTRUCT, st3, 0, ALL)\n-  BUILTIN_VDC (STORESTRUCT, st4, 0, ALL)\n+  BUILTIN_VDC (STORESTRUCT, st2, 0, STORE)\n+  BUILTIN_VDC (STORESTRUCT, st3, 0, STORE)\n+  BUILTIN_VDC (STORESTRUCT, st4, 0, STORE)\n   /* Implemented by aarch64_st<VSTRUCT:nregs><VQ:mode>.  */\n-  BUILTIN_VQ (STORESTRUCT, st2, 0, ALL)\n-  BUILTIN_VQ (STORESTRUCT, st3, 0, ALL)\n-  BUILTIN_VQ (STORESTRUCT, st4, 0, ALL)\n+  BUILTIN_VQ (STORESTRUCT, st2, 0, STORE)\n+  BUILTIN_VQ (STORESTRUCT, st3, 0, STORE)\n+  BUILTIN_VQ (STORESTRUCT, st4, 0, STORE)\n \n   BUILTIN_VALLDIF (STORESTRUCT_LANE, st2_lane, 0, ALL)\n   BUILTIN_VALLDIF (STORESTRUCT_LANE, st3_lane, 0, ALL)\n@@ -482,8 +482,8 @@\n   VAR1(STORE1P, ld1, 0, ALL, v2di)\n \n   /* Implemented by aarch64_st1<VALL_F16:mode>.  */\n-  BUILTIN_VALL_F16 (STORE1, st1, 0, ALL)\n-  VAR1(STORE1P, st1, 0, ALL, v2di)\n+  BUILTIN_VALL_F16 (STORE1, st1, 0, STORE)\n+  VAR1 (STORE1P, st1, 0, STORE, v2di)\n \n   /* Implemented by aarch64_ld1x3<VALLDIF:mode>.  */\n   BUILTIN_VALLDIF (LOADSTRUCT, ld1x3, 0, ALL)\n@@ -492,13 +492,13 @@\n   BUILTIN_VALLDIF (LOADSTRUCT, ld1x4, 0, ALL)\n \n   /* Implemented by aarch64_st1x2<VALLDIF:mode>.  */\n-  BUILTIN_VALLDIF (STORESTRUCT, st1x2, 0, ALL)\n+  BUILTIN_VALLDIF (STORESTRUCT, st1x2, 0, STORE)\n \n   /* Implemented by aarch64_st1x3<VALLDIF:mode>.  */\n-  BUILTIN_VALLDIF (STORESTRUCT, st1x3, 0, ALL)\n+  BUILTIN_VALLDIF (STORESTRUCT, st1x3, 0, STORE)\n \n   /* Implemented by aarch64_st1x4<VALLDIF:mode>.  */\n-  BUILTIN_VALLDIF (STORESTRUCT, st1x4, 0, ALL)\n+  BUILTIN_VALLDIF (STORESTRUCT, st1x4, 0, STORE)\n \n   /* Implemented by fma<mode>4.  */\n   BUILTIN_VHSDF (TERNOP, fma, 4, ALL)"}]}