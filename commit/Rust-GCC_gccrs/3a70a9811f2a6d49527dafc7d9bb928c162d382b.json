{"sha": "3a70a9811f2a6d49527dafc7d9bb928c162d382b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3MGE5ODExZjJhNmQ0OTUyN2RhZmM3ZDliYjkyOGMxNjJkMzgyYg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-05-12T15:07:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-07T09:26:56Z"}, "message": "[Ada] Use pragma Unsuppress in Time_IO\n\ngcc/ada/\n\n\t* libgnat/g-catiio.adb (Value, Parse_ISO_8601): Unsuppress\n\tchecks, and don't rely on 'Valid.", "tree": {"sha": "f95d1ae8769d944adbac80774fca91073093f7ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f95d1ae8769d944adbac80774fca91073093f7ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a70a9811f2a6d49527dafc7d9bb928c162d382b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70a9811f2a6d49527dafc7d9bb928c162d382b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a70a9811f2a6d49527dafc7d9bb928c162d382b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70a9811f2a6d49527dafc7d9bb928c162d382b/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8deaec2952797afe2d0d14ab60142397e96173c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8deaec2952797afe2d0d14ab60142397e96173c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8deaec2952797afe2d0d14ab60142397e96173c2"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "cd2df6a438b33b7cbba46aae0b3772e5cdc62a14", "filename": "gcc/ada/libgnat/g-catiio.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70a9811f2a6d49527dafc7d9bb928c162d382b/gcc%2Fada%2Flibgnat%2Fg-catiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70a9811f2a6d49527dafc7d9bb928c162d382b/gcc%2Fada%2Flibgnat%2Fg-catiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-catiio.adb?ref=3a70a9811f2a6d49527dafc7d9bb928c162d382b", "patch": "@@ -654,6 +654,12 @@ package body GNAT.Calendar.Time_IO is\n        Time    : out Ada.Calendar.Time;\n        Success : out Boolean)\n    is\n+      pragma Unsuppress (All_Checks);\n+      --  This is necessary because the run-time library is usually compiled\n+      --  with checks suppressed, and we are relying on constraint checks in\n+      --  this code to catch syntax errors in the Date string (e.g. out of\n+      --  bounds slices).\n+\n       Index : Positive := Date'First;\n       --  The current character scan index. After a call to Advance, Index\n       --  points to the next character.\n@@ -1021,7 +1027,10 @@ package body GNAT.Calendar.Time_IO is\n       Success := True;\n \n    exception\n-      when Wrong_Syntax =>\n+      when Wrong_Syntax | Constraint_Error =>\n+         --  If constraint check fails, we want to behave the same as\n+         --  Wrong_Syntax; we want the caller (Value) to try other\n+         --  allowed syntaxes.\n          Time :=\n            Time_Of (Year_Number'First, Month_Number'First, Day_Number'First);\n          Success := False;\n@@ -1032,6 +1041,8 @@ package body GNAT.Calendar.Time_IO is\n    -----------\n \n    function Value (Date : String) return Ada.Calendar.Time is\n+      pragma Unsuppress (All_Checks); -- see comment in Parse_ISO_8601\n+\n       D          : String (1 .. 21);\n       D_Length   : constant Natural := Date'Length;\n \n@@ -1281,18 +1292,6 @@ package body GNAT.Calendar.Time_IO is\n          Extract_Time (1, Hour, Minute, Second, Check_Space => False);\n       end if;\n \n-      --  Sanity checks\n-\n-      if not Year'Valid\n-        or else not Month'Valid\n-        or else not Day'Valid\n-        or else not Hour'Valid\n-        or else not Minute'Valid\n-        or else not Second'Valid\n-      then\n-         raise Constraint_Error;\n-      end if;\n-\n       return Time_Of (Year, Month, Day, Hour, Minute, Second);\n    end Value;\n "}]}