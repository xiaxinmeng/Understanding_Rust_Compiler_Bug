{"sha": "e12825cd4853b560d81955e2b6711fc7484bcf02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEyODI1Y2Q0ODUzYjU2MGQ4MTk1NWUyYjY3MTFmYzc0ODRiY2YwMg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2003-01-24T16:30:17Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2003-01-24T16:30:17Z"}, "message": "ada-tree.h (SET_TYPE_DIGITS_VALUE): Add intermediate cast to size_t to avoid warning.\n\n\t* ada-tree.h (SET_TYPE_DIGITS_VALUE): Add intermediate cast to\n\tsize_t to avoid warning.\n\nFrom-SVN: r61705", "tree": {"sha": "5bb3da4f8a64b24f8136d1c1ca8f308c9921bb20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bb3da4f8a64b24f8136d1c1ca8f308c9921bb20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e12825cd4853b560d81955e2b6711fc7484bcf02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e12825cd4853b560d81955e2b6711fc7484bcf02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e12825cd4853b560d81955e2b6711fc7484bcf02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e12825cd4853b560d81955e2b6711fc7484bcf02/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38df970effee179b44b5701603fa9c39f6af3688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38df970effee179b44b5701603fa9c39f6af3688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38df970effee179b44b5701603fa9c39f6af3688"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c2b50acafeeb795bc56870a9b6b3c98d285508a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e12825cd4853b560d81955e2b6711fc7484bcf02/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e12825cd4853b560d81955e2b6711fc7484bcf02/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e12825cd4853b560d81955e2b6711fc7484bcf02", "patch": "@@ -1,3 +1,8 @@\n+2003-01-24  Andreas Schwab  <schwab@suse.de>\n+\n+\t* ada-tree.h (SET_TYPE_DIGITS_VALUE): Add intermediate cast to\n+\tsize_t to avoid warning.\n+\n 2003-01-21  Zack Weinberg  <zack@codesourcery.com>\n \n \t* Make-lang.in: Disable -Werror for tracebak.c and b_gnatb.c."}, {"sha": "eaebe7b456affb5a4f8e3ef4d2d6ca8703d6edd7", "filename": "gcc/ada/ada-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e12825cd4853b560d81955e2b6711fc7484bcf02/gcc%2Fada%2Fada-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e12825cd4853b560d81955e2b6711fc7484bcf02/gcc%2Fada%2Fada-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada-tree.h?ref=e12825cd4853b560d81955e2b6711fc7484bcf02", "patch": "@@ -182,7 +182,7 @@ struct lang_type GTY(())\n #define TYPE_DIGITS_VALUE(NODE)  \\\n   ((long) TYPE_LANG_SPECIFIC (INTEGER_TYPE_CHECK (NODE)))\n #define SET_TYPE_DIGITS_VALUE(NODE, X)  \\\n-  (TYPE_LANG_SPECIFIC (INTEGER_TYPE_CHECK (NODE)) = (struct lang_type *)(X))\n+  (TYPE_LANG_SPECIFIC (INTEGER_TYPE_CHECK (NODE)) = (struct lang_type *)(size_t)(X))\n \n /* For INTEGER_TYPE, stores the RM_Size of the type.  */\n #define TYPE_RM_SIZE_INT(NODE)\tTYPE_VALUES (INTEGER_TYPE_CHECK (NODE))"}]}