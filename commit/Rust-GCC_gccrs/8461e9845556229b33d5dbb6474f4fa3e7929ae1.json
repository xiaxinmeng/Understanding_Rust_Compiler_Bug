{"sha": "8461e9845556229b33d5dbb6474f4fa3e7929ae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ2MWU5ODQ1NTU2MjI5YjMzZDVkYmI2NDc0ZjRmYTNlNzkyOWFlMQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-04-13T16:41:16Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-04-13T16:41:16Z"}, "message": "Makefile.in (toplev.o, [...]): Depend on reload.h\n\n\t* Makefile.in (toplev.o, jump.o, regmove.o): Depend on reload.h\n\n\t* jump.c, regmove.c, toplev.c: Include reload.h.\n\n\t* reload.h (reload_cse_regs): Declare.\n\n\t* rtl.h (find_equiv_reg, operands_match_p, safe_from_earlyclobber,\n\treload_cse_regs, init_reload, mark_home_live, reload,\n\tinit_caller_save): Delete redundant prototypes.\n\nFrom-SVN: r41338", "tree": {"sha": "68d209ee044a7e7800e489d27bec1b57a191815e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68d209ee044a7e7800e489d27bec1b57a191815e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8461e9845556229b33d5dbb6474f4fa3e7929ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8461e9845556229b33d5dbb6474f4fa3e7929ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8461e9845556229b33d5dbb6474f4fa3e7929ae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8461e9845556229b33d5dbb6474f4fa3e7929ae1/comments", "author": null, "committer": null, "parents": [{"sha": "0829d244e790076d9867c95e10e29bfdc1ff9198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0829d244e790076d9867c95e10e29bfdc1ff9198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0829d244e790076d9867c95e10e29bfdc1ff9198"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "b3d3c91a8e13a43f89f852d79d10077214aa1952", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8461e9845556229b33d5dbb6474f4fa3e7929ae1", "patch": "@@ -1,3 +1,15 @@\n+2001-04-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (toplev.o, jump.o, regmove.o): Depend on reload.h\n+\n+\t* jump.c, regmove.c, toplev.c: Include reload.h.\n+\n+\t* reload.h (reload_cse_regs): Declare.\n+\n+\t* rtl.h (find_equiv_reg, operands_match_p, safe_from_earlyclobber,\n+\treload_cse_regs, init_reload, mark_home_live, reload,\n+\tinit_caller_save): Delete redundant prototypes.\n+\n 2001-04-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (ssa.o, regclass.o): Depend on $(EXPR_H)."}, {"sha": "b824f3965f0353982f7c4190058394c649a025a2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8461e9845556229b33d5dbb6474f4fa3e7929ae1", "patch": "@@ -1379,7 +1379,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) function.h \\\n    insn-config.h intl.h $(RECOG_H) Makefile toplev.h dwarfout.h \\\n    dwarf2out.h sdbout.h dbxout.h $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n    graph.h $(LOOP_H) except.h $(REGS_H) $(TIMEVAR_H) $(lang_options_files) \\\n-   ssa.h params.h $(TM_P_H)\n+   ssa.h params.h $(TM_P_H) reload.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(MAYBE_USE_COLLECT2) \\\n \t  -DTARGET_NAME=\\\"$(target_alias)\\\" \\\n \t  -c $(srcdir)/toplev.c\n@@ -1455,7 +1455,7 @@ integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n    params.h $(TM_P_H)\n jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h hard-reg-set.h $(REGS_H) \\\n    insn-config.h $(RECOG_H) $(EXPR_H) real.h except.h function.h \\\n-   toplev.h $(INSN_ATTR_H) $(TM_P_H)\n+   toplev.h $(INSN_ATTR_H) $(TM_P_H) reload.h\n \n simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h flags.h real.h insn-config.h $(RECOG_H) $(EXPR_H) toplev.h \\\n@@ -1533,7 +1533,7 @@ alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h hard-reg-set.h \\\n    $(GGC_H) function.h cselib.h $(TREE_H) $(TM_P_H)\n regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) insn-config.h \\\n    $(RECOG_H) output.h $(REGS_H) hard-reg-set.h flags.h function.h \\\n-   $(EXPR_H) $(BASIC_BLOCK_H) toplev.h $(TM_P_H) except.h\n+   $(EXPR_H) $(BASIC_BLOCK_H) toplev.h $(TM_P_H) except.h reload.h\n haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) sched-int.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(TM_P_H)"}, {"sha": "779972252acde17d26b5ec682c2aa9dac7f3823f", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=8461e9845556229b33d5dbb6474f4fa3e7929ae1", "patch": "@@ -66,6 +66,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"real.h\"\n #include \"except.h\"\n #include \"toplev.h\"\n+#include \"reload.h\"\n \n /* ??? Eventually must record somehow the labels used by jumps\n    from nested functions.  */"}, {"sha": "2e0fa9ed5fe14f893f6043397595a5bb429d2c55", "filename": "gcc/regmove.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=8461e9845556229b33d5dbb6474f4fa3e7929ae1", "patch": "@@ -40,6 +40,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"basic-block.h\"\n #include \"except.h\"\n #include \"toplev.h\"\n+#include \"reload.h\"\n \n static int perhaps_ends_bb_p\tPARAMS ((rtx));\n static int optimize_reg_copy_1\tPARAMS ((rtx, rtx, rtx));"}, {"sha": "40af087e48e0a7e4e40192f68f91c301da52101b", "filename": "gcc/reload.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Freload.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Freload.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.h?ref=8461e9845556229b33d5dbb6474f4fa3e7929ae1", "patch": "@@ -343,6 +343,7 @@ int earlyclobber_operand_p PARAMS ((rtx));\n \n /* Functions in reload1.c:  */\n \n+extern void reload_cse_regs\t\tPARAMS ((rtx));\n extern int reloads_conflict\t\tPARAMS ((int, int));\n \n /* Initialize the reload pass once per compilation.  */"}, {"sha": "a417a955ce3a0273e8118b88f256592eb8170cc0", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=8461e9845556229b33d5dbb6474f4fa3e7929ae1", "patch": "@@ -1274,9 +1274,6 @@ extern enum rtx_code unsigned_condition\tPARAMS ((enum rtx_code));\n extern enum rtx_code signed_condition\tPARAMS ((enum rtx_code));\n extern void mark_jump_label\t\tPARAMS ((rtx, rtx, int, int));\n \n-/* In reload.c */\n-extern rtx find_equiv_reg\t\tPARAMS ((rtx, rtx, enum reg_class, int, short *, int, enum machine_mode));\n-\n /* In jump.c */\n extern rtx squeeze_notes\t\tPARAMS ((rtx, rtx));\n extern rtx delete_insn\t\t\tPARAMS ((rtx));\n@@ -1803,10 +1800,6 @@ extern void update_temp_slot_address\t\t\tPARAMS ((rtx, rtx));\n extern void purge_addressof\t\t\t\tPARAMS ((rtx));\n extern void purge_hard_subreg_sets\t\t\tPARAMS ((rtx));\n \n-/* In reload.c */\n-extern int operands_match_p\t\tPARAMS ((rtx, rtx));\n-extern int safe_from_earlyclobber\tPARAMS ((rtx, rtx));\n-\n /* In stmt.c */\n extern void set_file_and_line_for_stmt\tPARAMS ((const char *, int));\n extern void expand_null_return\t\tPARAMS ((void));\n@@ -1882,15 +1875,6 @@ extern void dump_local_alloc\t\tPARAMS ((FILE *));\n extern int local_alloc\t\t\tPARAMS ((void));\n extern int function_invariant_p\t\tPARAMS ((rtx));\n \n-/* In reload1.c */\n-extern void reload_cse_regs\t\tPARAMS ((rtx));\n-extern void init_reload\t\t\tPARAMS ((void));\n-extern void mark_home_live\t\tPARAMS ((int));\n-extern int reload\t\t\tPARAMS ((rtx, int));\n-\n-/* In caller-save.c */\n-extern void init_caller_save\t\tPARAMS ((void));\n-\n /* In profile.c */\n extern void init_branch_prob\t\tPARAMS ((const char *));\n extern void branch_prob\t\t\tPARAMS ((void));"}, {"sha": "413fa2f144268185b01e27261ef954cab7a50305", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8461e9845556229b33d5dbb6474f4fa3e7929ae1/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=8461e9845556229b33d5dbb6474f4fa3e7929ae1", "patch": "@@ -63,6 +63,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"diagnostic.h\"\n #include \"ssa.h\"\n #include \"params.h\"\n+#include \"reload.h\"\n \n #ifdef DWARF_DEBUGGING_INFO\n #include \"dwarfout.h\""}]}