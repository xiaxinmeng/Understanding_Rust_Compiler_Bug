{"sha": "917afb0c3fa15b32383bdfbc13a481012c42fcb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3YWZiMGMzZmExNWIzMjM4M2JkZmJjMTNhNDgxMDEyYzQyZmNiNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2002-01-27T18:29:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-01-27T18:29:33Z"}, "message": "emit-rtl.c (get_mem_attrs): Don't default alignment for non-BLKmode if not STRICT_ALIGNMENT.\n\n\t* emit-rtl.c (get_mem_attrs): Don't default alignment for non-BLKmode\n\tif not STRICT_ALIGNMENT.\n\t* rtl.h (MEM_ALIGN): Likewise.\n\nFrom-SVN: r49268", "tree": {"sha": "4c36f941d21f80038408fabd59032302b6791807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c36f941d21f80038408fabd59032302b6791807"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/917afb0c3fa15b32383bdfbc13a481012c42fcb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917afb0c3fa15b32383bdfbc13a481012c42fcb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/917afb0c3fa15b32383bdfbc13a481012c42fcb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917afb0c3fa15b32383bdfbc13a481012c42fcb4/comments", "author": null, "committer": null, "parents": [{"sha": "f70a54cb876ecdde60b6ea9caa1e730b360f3272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70a54cb876ecdde60b6ea9caa1e730b360f3272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f70a54cb876ecdde60b6ea9caa1e730b360f3272"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "c245eeaddfc746474e0210a8d9a9ccb09c78434d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917afb0c3fa15b32383bdfbc13a481012c42fcb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917afb0c3fa15b32383bdfbc13a481012c42fcb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=917afb0c3fa15b32383bdfbc13a481012c42fcb4", "patch": "@@ -1,3 +1,9 @@\n+Sun Jan 27 13:23:40 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* emit-rtl.c (get_mem_attrs): Don't default alignment for non-BLKmode\n+\tif not STRICT_ALIGNMENT.\n+\t* rtl.h (MEM_ALIGN): Likewise.\n+\n 2002-01-27  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n \t* doc/invoke.texi (-fdump-translation-unit): Revert this"}, {"sha": "2f3e100c8db2e28b2962b80afe2ec72a0d268711", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917afb0c3fa15b32383bdfbc13a481012c42fcb4/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917afb0c3fa15b32383bdfbc13a481012c42fcb4/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=917afb0c3fa15b32383bdfbc13a481012c42fcb4", "patch": "@@ -292,7 +292,8 @@ get_mem_attrs (alias, expr, offset, size, align, mode)\n       && (size == 0\n \t  || (mode != BLKmode && GET_MODE_SIZE (mode) == INTVAL (size)))\n       && (align == BITS_PER_UNIT\n-\t  || (mode != BLKmode && align == GET_MODE_ALIGNMENT (mode))))\n+\t  || (STRICT_ALIGNMENT\n+\t      && mode != BLKmode && align == GET_MODE_ALIGNMENT (mode))))\n     return 0;\n \n   attrs.alias = alias;"}, {"sha": "b4745311c2ee92b4af1463ff366bed716c7164d0", "filename": "gcc/rtl.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917afb0c3fa15b32383bdfbc13a481012c42fcb4/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917afb0c3fa15b32383bdfbc13a481012c42fcb4/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=917afb0c3fa15b32383bdfbc13a481012c42fcb4", "patch": "@@ -926,12 +926,12 @@ do {\t\t\t\t\t\t\\\n  : GET_MODE (RTX) != BLKmode ? GEN_INT (GET_MODE_SIZE (GET_MODE (RTX)))\t\\\n  : 0)\n \n-/* For a MEM rtx, the alignment in bits.  */\n+/* For a MEM rtx, the alignment in bits.  We can use the alignment of the\n+   mode as a default when STRICT_ALIGNMENT, but not if not.  */\n #define MEM_ALIGN(RTX)\t\t\t\t\t\t\t\\\n (MEM_ATTRS (RTX) != 0 ? MEM_ATTRS (RTX)->align\t\t\t\t\\\n- : GET_MODE (RTX) != BLKmode ? GET_MODE_ALIGNMENT (GET_MODE (RTX))\t\\\n- : BITS_PER_UNIT)\n-\n+ : (STRICT_ALIGNMENT && GET_MODE (RTX) != BLKmode\t\t\t\\\n+    ? GET_MODE_ALIGNMENT (GET_MODE (RTX)) : BITS_PER_UNIT))\n \n /* Copy the attributes that apply to memory locations from RHS to LHS.  */\n #define MEM_COPY_ATTRIBUTES(LHS, RHS)\t\t\t\t\\"}]}