{"sha": "39157bcc1d86ed2eaea0d5cf5bfb937fb0190fe8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkxNTdiY2MxZDg2ZWQyZWFlYTBkNWNmNWJmYjkzN2ZiMDE5MGZlOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-01-27T17:54:45Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-01-27T17:54:45Z"}, "message": "Move `normal_memory_operand' from gcc2 merge into the operand\npredicates section of the file.\n\nFrom-SVN: r24890", "tree": {"sha": "e7055097603d36c10c02fd12030b1bf24eb9ff7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7055097603d36c10c02fd12030b1bf24eb9ff7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39157bcc1d86ed2eaea0d5cf5bfb937fb0190fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39157bcc1d86ed2eaea0d5cf5bfb937fb0190fe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39157bcc1d86ed2eaea0d5cf5bfb937fb0190fe8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39157bcc1d86ed2eaea0d5cf5bfb937fb0190fe8/comments", "author": null, "committer": null, "parents": [{"sha": "3ec2b59097937f6c218fa04101ba7b649ddf15b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ec2b59097937f6c218fa04101ba7b649ddf15b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ec2b59097937f6c218fa04101ba7b649ddf15b5"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "7a057017b0bc05ad5fef065c39e263a74d09457f", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39157bcc1d86ed2eaea0d5cf5bfb937fb0190fe8/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39157bcc1d86ed2eaea0d5cf5bfb937fb0190fe8/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=39157bcc1d86ed2eaea0d5cf5bfb937fb0190fe8", "patch": "@@ -848,17 +848,6 @@ reg_not_elim_operand (op, mode)\n \n   return register_operand (op, mode);\n }\n-\f\n-/* Return 1 if this function can directly return via $26.  */\n-\n-int\n-direct_return ()\n-{\n-  return (! TARGET_OPEN_VMS && reload_completed && alpha_sa_size () == 0\n-\t  && get_frame_size () == 0\n-\t  && current_function_outgoing_args_size == 0\n-\t  && current_function_pretend_args_size == 0);\n-}\n \n /* Return 1 is OP is a memory location that is not an reference (using\n    an AND) to an unaligned location.  Take into account what reload\n@@ -882,6 +871,17 @@ normal_memory_operand (op, mode)\n \n   return GET_CODE (op) == MEM && GET_CODE (XEXP (op, 0)) != AND;\n }\n+\f\n+/* Return 1 if this function can directly return via $26.  */\n+\n+int\n+direct_return ()\n+{\n+  return (! TARGET_OPEN_VMS && reload_completed && alpha_sa_size () == 0\n+\t  && get_frame_size () == 0\n+\t  && current_function_outgoing_args_size == 0\n+\t  && current_function_pretend_args_size == 0);\n+}\n \n /* REF is an alignable memory location.  Place an aligned SImode\n    reference into *PALIGNED_MEM and the number of bits to shift into"}]}