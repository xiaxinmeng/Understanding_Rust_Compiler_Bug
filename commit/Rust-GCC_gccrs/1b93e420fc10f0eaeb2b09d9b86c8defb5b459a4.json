{"sha": "1b93e420fc10f0eaeb2b09d9b86c8defb5b459a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI5M2U0MjBmYzEwZjBlYWViMmIwOWQ5Yjg2YzhkZWZiNWI0NTlhNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-07-16T09:07:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-20T07:21:34Z"}, "message": "[Ada] Fix internal error on bit-aligned component of function call\n\ngcc/ada/\n\n\t* exp_util.adb (Remove_Side_Effects): Always generate a renaming\n\tthat is handled by the front-end in the case of an indexed or a\n\tselected component whose prefix has a nonstandard representation.", "tree": {"sha": "248397daf9f92bef00d1172a4347ff5794404341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/248397daf9f92bef00d1172a4347ff5794404341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b93e420fc10f0eaeb2b09d9b86c8defb5b459a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b93e420fc10f0eaeb2b09d9b86c8defb5b459a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b93e420fc10f0eaeb2b09d9b86c8defb5b459a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b93e420fc10f0eaeb2b09d9b86c8defb5b459a4/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3c2ce8e4e059e4350cf9f917c9cca4a0e5821db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3c2ce8e4e059e4350cf9f917c9cca4a0e5821db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3c2ce8e4e059e4350cf9f917c9cca4a0e5821db"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "2c08ea9077137804fcb547f807e7803314bd88c1", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b93e420fc10f0eaeb2b09d9b86c8defb5b459a4/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b93e420fc10f0eaeb2b09d9b86c8defb5b459a4/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=1b93e420fc10f0eaeb2b09d9b86c8defb5b459a4", "patch": "@@ -11530,7 +11530,26 @@ package body Exp_Util is\n             Insert_Action (Exp, E);\n          end if;\n \n-      --  For expressions that denote names, we can use a renaming scheme.\n+      --  If this is a packed array component or a selected component with a\n+      --  nonstandard representation, we cannot generate a reference because\n+      --  the component may be unaligned, so we must use a renaming and this\n+      --  renaming must be handled by the front end, as the back end may balk\n+      --  at the nonstandard representation (see Exp_Ch2.Expand_Renaming).\n+\n+      elsif Nkind (Exp) in N_Indexed_Component | N_Selected_Component\n+        and then Has_Non_Standard_Rep (Etype (Prefix (Exp)))\n+      then\n+         Def_Id := Build_Temporary (Loc, 'R', Exp);\n+         Res := New_Occurrence_Of (Def_Id, Loc);\n+\n+         Insert_Action (Exp,\n+           Make_Object_Renaming_Declaration (Loc,\n+             Defining_Identifier => Def_Id,\n+             Subtype_Mark        => New_Occurrence_Of (Exp_Type, Loc),\n+             Name                => Relocate_Node (Exp)));\n+\n+      --  For an expression that denotes a name, we can use a renaming scheme\n+      --  that is handled by the back end, instead of the front end as above.\n       --  This is needed for correctness in the case of a volatile object of\n       --  a nonvolatile type because the Make_Reference call of the \"default\"\n       --  approach would generate an illegal access value (an access value\n@@ -11553,21 +11572,7 @@ package body Exp_Util is\n              Subtype_Mark        => New_Occurrence_Of (Exp_Type, Loc),\n              Name                => Relocate_Node (Exp)));\n \n-         --  If this is a packed reference, or a selected component with\n-         --  a nonstandard representation, a reference to the temporary\n-         --  will be replaced by a copy of the original expression (see\n-         --  Exp_Ch2.Expand_Renaming). Otherwise the temporary must be\n-         --  elaborated by gigi, and is of course not to be replaced in-line\n-         --  by the expression it renames, which would defeat the purpose of\n-         --  removing the side effect.\n-\n-         if Nkind (Exp) in N_Selected_Component | N_Indexed_Component\n-           and then Has_Non_Standard_Rep (Etype (Prefix (Exp)))\n-         then\n-            null;\n-         else\n-            Set_Is_Renaming_Of_Object (Def_Id, False);\n-         end if;\n+         Set_Is_Renaming_Of_Object (Def_Id, False);\n \n       --  Avoid generating a variable-sized temporary, by generating the\n       --  reference just for the function call. The transformation could be"}]}