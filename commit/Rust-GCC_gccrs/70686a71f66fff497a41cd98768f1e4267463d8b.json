{"sha": "70686a71f66fff497a41cd98768f1e4267463d8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2ODZhNzFmNjZmZmY0OTdhNDFjZDk4NzY4ZjFlNDI2NzQ2M2Q4Yg==", "commit": {"author": {"name": "Marco Trudel", "email": "mtrudel@gmx.ch", "date": "2007-01-17T12:55:52Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-01-17T12:55:52Z"}, "message": "jvmti.cc (_Jv_JVMTI_GetAllThreads): Now static.\n\n2007-01-17  Marco Trudel  <mtrudel@gmx.ch>\n\n\t* jvmti.cc (_Jv_JVMTI_GetAllThreads): Now static.  Use JNICALL.\n\tFixed indentation.  Removed unused variable.\n\nFrom-SVN: r120854", "tree": {"sha": "28bd6c20fba37b39f189102df4833d15ec9b926c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28bd6c20fba37b39f189102df4833d15ec9b926c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70686a71f66fff497a41cd98768f1e4267463d8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70686a71f66fff497a41cd98768f1e4267463d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70686a71f66fff497a41cd98768f1e4267463d8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70686a71f66fff497a41cd98768f1e4267463d8b/comments", "author": null, "committer": null, "parents": [{"sha": "ceb84404df46bbac63d20099cf43281685642f81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceb84404df46bbac63d20099cf43281685642f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceb84404df46bbac63d20099cf43281685642f81"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "e2ba835c48f44c9d5d957591c8efbab6f52e049c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70686a71f66fff497a41cd98768f1e4267463d8b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70686a71f66fff497a41cd98768f1e4267463d8b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=70686a71f66fff497a41cd98768f1e4267463d8b", "patch": "@@ -1,3 +1,8 @@\n+2007-01-17  Marco Trudel  <mtrudel@gmx.ch>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetAllThreads): Now static.  Use JNICALL.\n+\tFixed indentation.  Removed unused variable.\n+\n 2007-01-16  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/natThread.cc (finalize_native): Remove cast."}, {"sha": "f6df8c560846617b332fedc46decf5c8af19846a", "filename": "libjava/jvmti.cc", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70686a71f66fff497a41cd98768f1e4267463d8b/libjava%2Fjvmti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70686a71f66fff497a41cd98768f1e4267463d8b/libjava%2Fjvmti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjvmti.cc?ref=70686a71f66fff497a41cd98768f1e4267463d8b", "patch": "@@ -1,6 +1,6 @@\n // jvmti.cc - JVMTI implementation\n \n-/* Copyright (C) 2006 Free Software Foundation\n+/* Copyright (C) 2006, 2007 Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -198,7 +198,7 @@ _Jv_JVMTI_InterruptThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n   return JVMTI_ERROR_NONE;\n }\n \n-jvmtiError\n+static jvmtiError JNICALL\n _Jv_JVMTI_GetAllThreads(MAYBE_UNUSED jvmtiEnv *env, jint *thread_cnt,\n                         jthread **threads)\n {\n@@ -207,7 +207,6 @@ _Jv_JVMTI_GetAllThreads(MAYBE_UNUSED jvmtiEnv *env, jint *thread_cnt,\n   NULL_CHECK (threads);\n    \n   using namespace java::lang;\n-  Thread *thr = Thread::currentThread ();\n    \n   ThreadGroup *root_grp = ThreadGroup::root;\n   jint estimate = root_grp->activeCount ();\n@@ -217,10 +216,9 @@ _Jv_JVMTI_GetAllThreads(MAYBE_UNUSED jvmtiEnv *env, jint *thread_cnt,\n   // Allocate some extra space since threads can be created between calls\n   try\n     { \n-      thr_arr\n-\t\t\t  = reinterpret_cast<JArray<Thread *> *> (JvNewObjectArray \n-\t\t\t                                           ((estimate * 2),\n-                                                 &Thread::class$, NULL));\n+      thr_arr = reinterpret_cast<JArray<Thread *> *> (JvNewObjectArray \n+\t\t\t\t\t\t      ((estimate * 2),\n+\t\t\t\t\t\t       &Thread::class$, NULL));\n     }\n   catch (java::lang::OutOfMemoryError *err)\n     {"}]}