{"sha": "300e89a2b66eb8d9d9467168251927525d5c4fe8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAwZTg5YTJiNjZlYjhkOWQ5NDY3MTY4MjUxOTI3NTI1ZDVjNGZlOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-07-02T14:30:53Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-07-02T14:30:53Z"}, "message": "re PR c++/11072 (Implementation of offsetof macro)\n\n\tPR c++/11072\n\t* ginclude/stddef.h (offsetof): Remove cast to 'char &'. Explain why.\ntestsuite:\n\tPR c++/11072\n\t* g++.dg/other/offsetof2.C: XFAIL.\n\t* g++.dg/other/offsetof5.C: New.\n\nFrom-SVN: r68831", "tree": {"sha": "c7270cd5c87616a67700ed7086e69da94972c8fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7270cd5c87616a67700ed7086e69da94972c8fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/300e89a2b66eb8d9d9467168251927525d5c4fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300e89a2b66eb8d9d9467168251927525d5c4fe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/300e89a2b66eb8d9d9467168251927525d5c4fe8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300e89a2b66eb8d9d9467168251927525d5c4fe8/comments", "author": null, "committer": null, "parents": [{"sha": "eaac6968d6102aa421ef9109d2440b520fad0a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaac6968d6102aa421ef9109d2440b520fad0a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaac6968d6102aa421ef9109d2440b520fad0a76"}], "stats": {"total": 53, "additions": 46, "deletions": 7}, "files": [{"sha": "89afad458a7d02f6cac85efeb0da1f0a1c346f2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=300e89a2b66eb8d9d9467168251927525d5c4fe8", "patch": "@@ -1,3 +1,8 @@\n+2003-07-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/11072\n+\t* ginclude/stddef.h (offsetof): Remove cast to 'char &'. Explain why.\n+\n 2003-07-02  Andreas Schwab  <schwab@suse.de>\n \n \t* dbxout.c (pending_bincls): Only define if DBX_DEBUGGING_INFO.\n@@ -6209,6 +6214,7 @@ Fri May 23 21:19:31 CEST 2003  Jan Hubicka  <jh@suse.cz>\n 2003-05-18  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* config/sparc/sparc.h: Define sparc for now.\n+\n 2003-05-18  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* config.gcc: Clear xm_file, md_file at the beginning of each pass."}, {"sha": "d19d78a3140ad4e02ccb8fa63df2ed3ed0fea6ae", "filename": "gcc/ginclude/stddef.h", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2Fginclude%2Fstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2Fginclude%2Fstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstddef.h?ref=300e89a2b66eb8d9d9467168251927525d5c4fe8", "patch": "@@ -409,16 +409,26 @@ typedef __WINT_TYPE__ wint_t;\n \n #ifdef _STDDEF_H\n \n-/* Offset of member MEMBER in a struct of type TYPE.  */\n+/* Offset of member MEMBER in a struct of type TYPE. */\n #ifndef __cplusplus\n #define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)\n-#else /* C++ */\n-/* The reference cast is necessary to thwart an operator& that might\n-   be applicable to MEMBER's type.  See DR 273 for details.  */\n+#else\n+/* In C++ a POD type can have a user defined address-of operator, and\n+   that will break offsetof. C++ core defect 273 addresses this and\n+   claims that reinterpret_casts to char & type are sufficient to\n+   overcome this problem.\n+\n+   (reinterpret_cast <size_t>\n+     (&reinterpret_cast <char &>(static_cast <TYPE *> (0)->MEMBER)))\n+\n+   But, such casts are not permitted in integral constant expressions,\n+   which offsetof is supposed to be.\n+\n+   It appears that offsetof is unimplementable in C++ without a\n+   compiler extension.  */\n #define offsetof(TYPE, MEMBER) (reinterpret_cast <size_t> \\\n-    (&reinterpret_cast <char &>(static_cast <TYPE *> (0)->MEMBER)))\n+\t(&static_cast<TYPE *> (0)->MEMBER))\n #endif /* C++ */\n-\n #endif /* _STDDEF_H was defined this time */\n \n #endif /* !_STDDEF_H && !_STDDEF_H_ && !_ANSI_STDDEF_H && !__STDDEF_H__"}, {"sha": "78f0f595c6d35d271ac0178935dc6f94e1110ad7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=300e89a2b66eb8d9d9467168251927525d5c4fe8", "patch": "@@ -1,5 +1,9 @@\n 2003-07-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/11072\n+\t* g++.dg/other/offsetof2.C: XFAIL.\n+\t* g++.dg/other/offsetof5.C: New.\n+\n \tPR c++/10219\n \t* g++.dg/template/error1.C: New.\n \t"}, {"sha": "64b4fbdc84dcccf6f341b4be105867651a7da148", "filename": "gcc/testsuite/g++.dg/other/offsetof2.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof2.C?ref=300e89a2b66eb8d9d9467168251927525d5c4fe8", "patch": "@@ -1,11 +1,13 @@\n-// { dg-do run }\n+// { dg-do run { xfail *-*-* } }\n // { dg-options -Wold-style-cast }\n \n // Copyright (C) 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 22 Apr 2003 <nathan@codesourcery.com>\n \n // DR273 POD can have an operator&, offsetof is still required to work\n \n+// XFAILED - you can't write offsetof without an extension\n+\n #include <stddef.h>\n \n struct POD1"}, {"sha": "40a44068ccc0de36d367ec1f61dd28f78b5e7bf6", "filename": "gcc/testsuite/g++.dg/other/offsetof5.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/300e89a2b66eb8d9d9467168251927525d5c4fe8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C?ref=300e89a2b66eb8d9d9467168251927525d5c4fe8", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 30 June 2003 <nathan@codesourcery.com>\n+\n+// PR c++ 11072, DR 273's solution is broken\n+\n+#include <stddef.h>\n+\n+struct F\n+{\n+  char i;\n+  char j;\n+};\n+\n+static int ary[offsetof (F, j)];\n+"}]}