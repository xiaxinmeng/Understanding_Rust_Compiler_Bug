{"sha": "568d1435c5e359df59f0a5b7ffc25f4178c5b781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY4ZDE0MzVjNWUzNTlkZjU5ZjBhNWI3ZmZjMjVmNDE3OGM1Yjc4MQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2002-03-16T20:57:10Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-03-16T20:57:10Z"}, "message": "re PR java/5935 (problem with anonymous inner classes)\n\n\t* parse.y (craft_constructor): Return the constructor decl.\n\t(java_expand_classes): Update comments.\n\t(lookup_method_invoke): Call fix_constructors immediately for\n\tanonymous class. Fixes PR java/5935.\n\nFrom-SVN: r50891", "tree": {"sha": "581a94803ebebec7ba9ff8a591be8dc0d905fc8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/581a94803ebebec7ba9ff8a591be8dc0d905fc8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/568d1435c5e359df59f0a5b7ffc25f4178c5b781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568d1435c5e359df59f0a5b7ffc25f4178c5b781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/568d1435c5e359df59f0a5b7ffc25f4178c5b781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568d1435c5e359df59f0a5b7ffc25f4178c5b781/comments", "author": null, "committer": null, "parents": [{"sha": "5dd236e238bbea08ee2134d00306e03befd7e25b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd236e238bbea08ee2134d00306e03befd7e25b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd236e238bbea08ee2134d00306e03befd7e25b"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "ce82f8d6485f1673e7b6b14ea0cd3323235b4767", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568d1435c5e359df59f0a5b7ffc25f4178c5b781/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568d1435c5e359df59f0a5b7ffc25f4178c5b781/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=568d1435c5e359df59f0a5b7ffc25f4178c5b781", "patch": "@@ -1,3 +1,10 @@\n+2002-03-16  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* parse.y (craft_constructor): Return the constructor decl.\n+\t(java_expand_classes): Update comments.\n+\t(lookup_method_invoke): Call fix_constructors immediately for\n+\tanonymous class. Fixes PR java/5935.\n+\n 2002-03-15  Anthony Green  <green@redhat.com>\n \n \t* jcf-parse.c (yyparse): Don't emit class registration"}, {"sha": "6c39ad108ee7e1b6a823727e5b44bd5dc610ad73", "filename": "gcc/java/parse.y", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/568d1435c5e359df59f0a5b7ffc25f4178c5b781/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/568d1435c5e359df59f0a5b7ffc25f4178c5b781/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=568d1435c5e359df59f0a5b7ffc25f4178c5b781", "patch": "@@ -243,7 +243,7 @@ static tree build_instinit_invocation PARAMS ((tree));\n static void fix_constructors PARAMS ((tree));\n static tree build_alias_initializer_parameter_list PARAMS ((int, tree,\n \t\t\t\t\t\t\t    tree, int *));\n-static void craft_constructor PARAMS ((tree, tree));\n+static tree craft_constructor PARAMS ((tree, tree));\n static int verify_constructor_super PARAMS ((tree));\n static tree create_artificial_method PARAMS ((tree, int, tree, tree, tree));\n static void start_artificial_method_body PARAMS ((tree));\n@@ -5400,7 +5400,7 @@ build_alias_initializer_parameter_list (mode, class_type, parm, artificial)\n    where found. ARGS is non NULL when a special signature must be\n    enforced. This is the case for anonymous classes.  */\n \n-static void\n+static tree\n craft_constructor (class_decl, args)\n      tree class_decl, args;\n {\n@@ -5449,6 +5449,7 @@ craft_constructor (class_decl, args)\n   /* Now, mark the artificial parameters. */\n   DECL_FUNCTION_NAP (decl) = artificial;\n   DECL_FUNCTION_SYNTHETIC_CTOR (decl) = DECL_CONSTRUCTOR_P (decl) = 1;\n+  return decl;\n }\n \n \n@@ -8999,8 +9000,10 @@ java_expand_classes ()\n     }\n   input_filename = main_input_filename;\n \n-  /* Find anonymous classes and expand their constructor, now they\n-     have been fixed. */\n+\n+  /* Find anonymous classes and expand their constructor. This extra pass is\n+     neccessary because the constructor itself is only generated when the\n+     method in which it is defined is expanded. */\n   for (cur_ctxp = ctxp_for_generation; cur_ctxp; cur_ctxp = cur_ctxp->next)\n     {\n       tree current;\n@@ -9018,7 +9021,7 @@ java_expand_classes ()\n \t\t      restore_line_number_status (1);\n \t\t      java_complete_expand_method (d);\n \t\t      restore_line_number_status (0);\n-\t\t      break;\t/* We now there are no other ones */\n+\t\t      break;\t/* There is only one constructor. */\n \t\t    }\n \t\t}\n \t    }\n@@ -10855,7 +10858,14 @@ lookup_method_invoke (lc, cl, class, name, arg_list)\n      know the arguments' types. */\n \n   if (lc && ANONYMOUS_CLASS_P (class))\n-    craft_constructor (TYPE_NAME (class), atl);\n+    {\n+      tree saved_current_class;\n+      tree mdecl = craft_constructor (TYPE_NAME (class), atl);\n+      saved_current_class = current_class;\n+      current_class = class;\n+      fix_constructors (mdecl);\n+      current_class = saved_current_class;\n+    }\n \n   /* Find all candidates and then refine the list, searching for the\n      most specific method. */"}]}