{"sha": "37317a1fc012ba4208a01d337864c579c55d3a3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzczMTdhMWZjMDEyYmE0MjA4YTAxZDMzNzg2NGM1NzljNTVkM2EzZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-06-22T17:21:08Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-06-22T17:21:08Z"}, "message": "rs6000: Merge the var_shift yes/no alternatives\n\nAll instructions that are \"var_shift\" for some alternative have the shift\namount as operands[2].\n\nThis patch introduces an attribute \"maybe_var_shift\".  If that is set to\n\"yes\", the default value of \"var_shift\" is set based on the operands[2]\nvalue.\n\nWith that, we can merge the var_shift yes/no cases everywhere.  Do so.\n\nAlso change some more \"i\" to \"n\".\n\nFrom-SVN: r211880", "tree": {"sha": "4497704d5a9319303117bde7e1dd1de795b10fcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4497704d5a9319303117bde7e1dd1de795b10fcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37317a1fc012ba4208a01d337864c579c55d3a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37317a1fc012ba4208a01d337864c579c55d3a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37317a1fc012ba4208a01d337864c579c55d3a3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37317a1fc012ba4208a01d337864c579c55d3a3d/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85c1cb2250016893b1e07cc529fd614bb4cddc40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c1cb2250016893b1e07cc529fd614bb4cddc40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85c1cb2250016893b1e07cc529fd614bb4cddc40"}], "stats": {"total": 775, "additions": 354, "deletions": 421}, "files": [{"sha": "5bc7bfca56c00c96d54c3069be14dbaf4439328d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37317a1fc012ba4208a01d337864c579c55d3a3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37317a1fc012ba4208a01d337864c579c55d3a3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37317a1fc012ba4208a01d337864c579c55d3a3d", "patch": "@@ -1,3 +1,25 @@\n+2014-06-22  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (maybe_var_shift): New define_attr.\n+\t(var_shift): Use it.\n+\t(rotl<mode>3, *rotlsi3_64, *rotl<mode>3_dot, *rotl<mode>3_dot2,\n+\t*rotlsi3_internal4, *rotlsi3_internal5, *rotlsi3_internal6,\n+\t*rotlsi3_internal8le, *rotlsi3_internal8be, *rotlsi3_internal9le,\n+\t*rotlsi3_internal9be, *rotlsi3_internal10le, *rotlsi3_internal10be,\n+\t*rotlsi3_internal11le, *rotlsi3_internal11be, *rotlsi3_internal12le,\n+\t*rotlsi3_internal12be, ashl<mode>3, *ashlsi3_64, *ashl<mode>3_dot,\n+\t*ashl<mode>3_dot2, lshr<mode>3, *lshrsi3_64, *lshr<mode>3_dot,\n+\t*lshr<mode>3_dot2, *ashr<mode>3, *ashrsi3_64, *ashr<mode>3_dot,\n+\t*ashr<mode>3_dot2, *rotldi3_internal4, *rotldi3_internal5,\n+\t*rotldi3_internal6, *rotldi3_internal7le, *rotldi3_internal7be,\n+\t*rotldi3_internal8le, *rotldi3_internal8be, *rotldi3_internal9le,\n+\t*rotldi3_internal9be, *rotldi3_internal10le, *rotldi3_internal10be,\n+\t*rotldi3_internal11le, *rotldi3_internal11be, *rotldi3_internal12le,\n+\t*rotldi3_internal12be, *rotldi3_internal13le, *rotldi3_internal13be,\n+\t*rotldi3_internal14le, *rotldi3_internal14be, *rotldi3_internal15le,\n+\t*rotldi3_internal15be): Use the new attribute.  Merge register and\n+\tinteger alternatives.\n+\n 2014-06-22  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (ashrsi3, two anonymous define_insns and"}, {"sha": "8e9039e2232e8cafe29044ac8332440373b2767b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 332, "deletions": 421, "changes": 753, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37317a1fc012ba4208a01d337864c579c55d3a3d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37317a1fc012ba4208a01d337864c579c55d3a3d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=37317a1fc012ba4208a01d337864c579c55d3a3d", "patch": "@@ -205,9 +205,20 @@\n \t\t(const_string \"yes\")\n \t\t(const_string \"no\")))\n \n+;; Is this instruction using operands[2] as shift amount, and can that be a\n+;; register?\n+;; This is used for shift insns.\n+(define_attr \"maybe_var_shift\" \"no,yes\" (const_string \"no\"))\n+\n ;; Is this instruction using a shift amount from a register?\n ;; This is used for shift insns.\n-(define_attr \"var_shift\" \"no,yes\" (const_string \"no\"))\n+(define_attr \"var_shift\" \"no,yes\"\n+  (if_then_else (and (eq_attr \"type\" \"shift\")\n+\t\t     (eq_attr \"maybe_var_shift\" \"yes\"))\n+\t\t(if_then_else (match_operand 2 \"gpc_reg_operand\")\n+\t\t\t      (const_string \"yes\")\n+\t\t\t      (const_string \"no\"))\n+\t\t(const_string \"no\")))\n \n ;; Define floating point instruction sub-types for use with Xfpu.md\n (define_attr \"fp_type\" \"fp_default,fp_addsub_s,fp_addsub_d,fp_mul_s,fp_mul_d,fp_div_s,fp_div_d,fp_maddsub_s,fp_maddsub_d,fp_sqrt_s,fp_sqrt_d\" (const_string \"fp_default\"))\n@@ -3861,39 +3872,33 @@\n \n \n (define_insn \"rotl<mode>3\"\n-  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(rotate:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t    (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n\")))]\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(rotate:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n+\t\t    (match_operand:GPR 2 \"reg_or_cint_operand\" \"rn\")))]\n   \"\"\n-  \"@\n-   rotl<wd> %0,%1,%2\n-   rotl<wd>i %0,%1,%<hH>2\"\n+  \"rotl<wd>%I2 %0,%1,%<hH>2\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotlsi3_64\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n-\t    (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"r,n\"))))]\n+\t    (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"rn\"))))]\n   \"TARGET_POWERPC64\"\n-  \"@\n-   rotlw %0,%1,%2\n-   rotlwi %0,%1,%h2\"\n+  \"rotlw%I2 %0,%1,%h2\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn_and_split \"*rotl<mode>3_dot\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (rotate:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t(match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (rotate:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t(match_operand:GPR 2 \"reg_or_cint_operand\" \"rn,rn\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:GPR 0 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))]\n   \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   rotl<wd>. %0,%1,%2\n-   rotl<wd>i. %0,%1,%<hH>2\n-   #\n+   rotl<wd>%I2. %0,%1,%<hH>2\n    #\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -3904,23 +3909,21 @@\n \t\t    (const_int 0)))]\n   \"\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn_and_split \"*rotl<mode>3_dot2\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (rotate:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t(match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (rotate:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t(match_operand:GPR 2 \"reg_or_cint_operand\" \"rn,rn\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(rotate:GPR (match_dup 1)\n \t\t    (match_dup 2)))]\n   \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   rotl<wd>. %0,%1,%2\n-   rotl<wd>i. %0,%1,%<hH>2\n-   #\n+   rotl<wd>%I2. %0,%1,%<hH>2\n    #\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -3931,41 +3934,37 @@\n \t\t    (const_int 0)))]\n   \"\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n \n (define_insn \"*rotlsi3_internal4\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(and:SI (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t\t   (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i\"))\n-\t\t(match_operand:SI 3 \"mask_operand\" \"n,n\")))]\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(and:SI (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t   (match_operand:SI 2 \"reg_or_cint_operand\" \"rn\"))\n+\t\t(match_operand:SI 3 \"mask_operand\" \"n\")))]\n   \"\"\n-  \"@\n-   rlwnm %0,%1,%2,%m3,%M3\n-   rlwinm %0,%1,%h2,%m3,%M3\"\n+  \"rlw%I2nm %0,%1,%h2,%m3,%M3\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotlsi3_internal5\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (and:SI\n-\t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\"))\n-\t\t     (match_operand:SI 3 \"mask_operand\" \"n,n,n,n\"))\n+\t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\"))\n+\t\t     (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 4 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:SI 4 \"=r,r\"))]\n   \"\"\n   \"@\n-   rlwnm. %4,%1,%2,%m3,%M3\n-   rlwinm. %4,%1,%h2,%m3,%M3\n-   #\n+   rlw%I2nm. %4,%1,%h2,%m3,%M3\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -3986,24 +3985,22 @@\n   \"\")\n \n (define_insn \"*rotlsi3_internal6\"\n-  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (and:SI\n-\t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\"))\n-\t\t     (match_operand:SI 3 \"mask_operand\" \"n,n,n,n\"))\n+\t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\"))\n+\t\t     (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(and:SI (rotate:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"\"\n   \"@\n-   rlwnm. %0,%1,%2,%m3,%M3\n-   rlwinm. %0,%1,%h2,%m3,%M3\n-   #\n+   rlw%I2nm. %0,%1,%h2,%m3,%M3\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 4 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -4051,42 +4048,38 @@\n    (set_attr \"type\" \"shift\")])\n \n (define_insn \"*rotlsi3_internal8le\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:QI\n-\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n   \"!BYTES_BIG_ENDIAN\"\n   \"@\n-   rlwnm. %3,%1,%2,0xff\n-   rlwinm. %3,%1,%h2,0xff\n-   #\n+   rlw%I2nm. %3,%1,%h2,0xff\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotlsi3_internal8be\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:QI\n-\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 3))\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\")) 3))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n   \"BYTES_BIG_ENDIAN\"\n   \"@\n-   rlwnm. %3,%1,%2,0xff\n-   rlwinm. %3,%1,%h2,0xff\n-   #\n+   rlw%I2nm. %3,%1,%h2,0xff\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -4125,44 +4118,40 @@\n   \"\")\n \n (define_insn \"*rotlsi3_internal9le\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:QI\n-\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:SI (subreg:QI (rotate:SI (match_dup 1) (match_dup 2)) 0)))]\n   \"!BYTES_BIG_ENDIAN\"\n   \"@\n-   rlwnm. %0,%1,%2,0xff\n-   rlwinm. %0,%1,%h2,0xff\n-   #\n+   rlw%I2nm. %0,%1,%h2,0xff\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotlsi3_internal9be\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:QI\n-\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 3))\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\")) 3))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:SI (subreg:QI (rotate:SI (match_dup 1) (match_dup 2)) 3)))]\n   \"BYTES_BIG_ENDIAN\"\n   \"@\n-   rlwnm. %0,%1,%2,0xff\n-   rlwinm. %0,%1,%h2,0xff\n-   #\n+   rlw%I2nm. %0,%1,%h2,0xff\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -4199,68 +4188,60 @@\n   \"\")\n \n (define_insn \"*rotlsi3_internal10le\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:SI\n \t (subreg:HI\n-\t  (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i\")) 0)))]\n+\t  (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"rn\")) 0)))]\n   \"!BYTES_BIG_ENDIAN\"\n-  \"@\n-   rlwnm %0,%1,%2,0xffff\n-   rlwinm %0,%1,%h2,0xffff\"\n+  \"rlw%I2nm %0,%1,%h2,0xffff\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotlsi3_internal10be\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:SI\n \t (subreg:HI\n-\t  (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i\")) 2)))]\n+\t  (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"rn\")) 2)))]\n   \"BYTES_BIG_ENDIAN\"\n-  \"@\n-   rlwnm %0,%1,%2,0xffff\n-   rlwinm %0,%1,%h2,0xffff\"\n+  \"rlw%I2nm %0,%1,%h2,0xffff\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotlsi3_internal11le\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:HI\n-\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n   \"!BYTES_BIG_ENDIAN\"\n   \"@\n-   rlwnm. %3,%1,%2,0xffff\n-   rlwinm. %3,%1,%h2,0xffff\n-   #\n+   rlw%I2nm. %3,%1,%h2,0xffff\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotlsi3_internal11be\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:HI\n-\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 2))\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\")) 2))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n   \"BYTES_BIG_ENDIAN\"\n   \"@\n-   rlwnm. %3,%1,%2,0xffff\n-   rlwinm. %3,%1,%h2,0xffff\n-   #\n+   rlw%I2nm. %3,%1,%h2,0xffff\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -4299,44 +4280,40 @@\n   \"\")\n \n (define_insn \"*rotlsi3_internal12le\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:HI\n-\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:SI (subreg:HI (rotate:SI (match_dup 1) (match_dup 2)) 0)))]\n   \"!BYTES_BIG_ENDIAN\"\n   \"@\n-   rlwnm. %0,%1,%2,0xffff\n-   rlwinm. %0,%1,%h2,0xffff\n-   #\n+   rlw%I2nm. %0,%1,%h2,0xffff\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotlsi3_internal12be\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:HI\n-\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 2))\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn,rn\")) 2))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:SI (subreg:HI (rotate:SI (match_dup 1) (match_dup 2)) 2)))]\n   \"BYTES_BIG_ENDIAN\"\n   \"@\n-   rlwnm. %0,%1,%2,0xffff\n-   rlwinm. %0,%1,%h2,0xffff\n-   #\n+   rlw%I2nm. %0,%1,%h2,0xffff\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -4374,39 +4351,33 @@\n \n \n (define_insn \"ashl<mode>3\"\n-  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(ashift:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t    (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n\")))]\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(ashift:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n+\t\t    (match_operand:GPR 2 \"reg_or_cint_operand\" \"rn\")))]\n   \"\"\n-  \"@\n-   sl<wd> %0,%1,%2\n-   sl<wd>i %0,%1,%<hH>2\"\n+  \"sl<wd>%I2 %0,%1,%<hH>2\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*ashlsi3_64\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n-\t    (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"r,n\"))))]\n+\t    (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"rn\"))))]\n   \"TARGET_POWERPC64\"\n-  \"@\n-   slw %0,%1,%2\n-   slwi %0,%1,%h2\"\n+  \"slw%I2 %0,%1,%h2\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn_and_split \"*ashl<mode>3_dot\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (ashift:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t(match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (ashift:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t(match_operand:GPR 2 \"reg_or_cint_operand\" \"rn,rn\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:GPR 0 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))]\n   \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   sl<wd>. %0,%1,%2\n-   sl<wd>i. %0,%1,%<hH>2\n-   #\n+   sl<wd>%I2. %0,%1,%<hH>2\n    #\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -4417,23 +4388,21 @@\n \t\t    (const_int 0)))]\n   \"\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn_and_split \"*ashl<mode>3_dot2\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (ashift:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t(match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (ashift:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t(match_operand:GPR 2 \"reg_or_cint_operand\" \"rn,rn\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(ashift:GPR (match_dup 1)\n \t\t    (match_dup 2)))]\n   \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   sl<wd>. %0,%1,%2\n-   sl<wd>i. %0,%1,%<hH>2\n-   #\n+   sl<wd>%I2. %0,%1,%<hH>2\n    #\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -4444,9 +4413,9 @@\n \t\t    (const_int 0)))]\n   \"\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n \n (define_insn \"rlwinm\"\n@@ -4527,39 +4496,33 @@\n \n \n (define_insn \"lshr<mode>3\"\n-  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t      (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n\")))]\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n+\t\t      (match_operand:GPR 2 \"reg_or_cint_operand\" \"rn\")))]\n   \"\"\n-  \"@\n-   sr<wd> %0,%1,%2\n-   sr<wd>i %0,%1,%<hH>2\"\n+  \"sr<wd>%I2 %0,%1,%<hH>2\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*lshrsi3_64\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n-\t    (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,n\"))))]\n+\t    (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn\"))))]\n   \"TARGET_POWERPC64\"\n-  \"@\n-   srw %0,%1,%2\n-   srwi %0,%1,%h2\"\n+  \"srw%I2 %0,%1,%h2\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn_and_split \"*lshr<mode>3_dot\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"rn,rn\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:GPR 0 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))]\n   \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   sr<wd>. %0,%1,%2\n-   sr<wd>i. %0,%1,%<hH>2\n-   #\n+   sr<wd>%I2. %0,%1,%<hH>2\n    #\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -4570,23 +4533,21 @@\n \t\t    (const_int 0)))]\n   \"\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn_and_split \"*lshr<mode>3_dot2\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"rn,rn\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(lshiftrt:GPR (match_dup 1)\n \t\t      (match_dup 2)))]\n   \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   sr<wd>. %0,%1,%2\n-   sr<wd>i. %0,%1,%<hH>2\n-   #\n+   sr<wd>%I2. %0,%1,%<hH>2\n    #\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -4597,9 +4558,9 @@\n \t\t    (const_int 0)))]\n   \"\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n \n (define_insn \"\"\n@@ -5030,39 +4991,33 @@\n })\n \n (define_insn \"*ashr<mode>3\"\n-  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(ashiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t      (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n\")))]\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n+\t(ashiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n+\t\t      (match_operand:GPR 2 \"reg_or_cint_operand\" \"rn\")))]\n   \"\"\n-  \"@\n-   sra<wd> %0,%1,%2\n-   sra<wd>i %0,%1,%<hH>2\"\n+  \"sra<wd>%I2 %0,%1,%<hH>2\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*ashrsi3_64\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(sign_extend:DI\n-\t    (ashiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,n\"))))]\n+\t    (ashiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"rn\"))))]\n   \"TARGET_POWERPC64\"\n-  \"@\n-   sraw %0,%1,%2\n-   srawi %0,%1,%h2\"\n+  \"sraw%I2 %0,%1,%h2\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn_and_split \"*ashr<mode>3_dot\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (ashiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (ashiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"rn,rn\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:GPR 0 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))]\n   \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   sra<wd>. %0,%1,%2\n-   sra<wd>i. %0,%1,%<hH>2\n-   #\n+   sra<wd>%I2. %0,%1,%<hH>2\n    #\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -5073,23 +5028,21 @@\n \t\t    (const_int 0)))]\n   \"\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn_and_split \"*ashr<mode>3_dot2\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (ashiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (ashiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"rn,rn\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(ashiftrt:GPR (match_dup 1)\n \t\t      (match_dup 2)))]\n   \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   sra<wd>. %0,%1,%2\n-   sra<wd>i. %0,%1,%<hH>2\n-   #\n+   sra<wd>%I2. %0,%1,%<hH>2\n    #\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -5100,9 +5053,9 @@\n \t\t    (const_int 0)))]\n   \"\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \f\n ;; Builtins to replace a division to generate FRE reciprocal estimate\n ;; instructions and the necessary fixup instructions\n@@ -6962,35 +6915,31 @@\n })\n \n (define_insn \"*rotldi3_internal4\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(and:DI (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t\t   (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\"))\n-\t\t(match_operand:DI 3 \"mask64_operand\" \"n,n\")))]\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(and:DI (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t   (match_operand:DI 2 \"reg_or_cint_operand\" \"rn\"))\n+\t\t(match_operand:DI 3 \"mask64_operand\" \"n\")))]\n   \"TARGET_POWERPC64\"\n-  \"@\n-   rldc%B3 %0,%1,%2,%S3\n-   rldic%B3 %0,%1,%H2,%S3\"\n+  \"rld%I2c%B3 %0,%1,%H2,%S3\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotldi3_internal5\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (and:DI\n-\t\t     (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t(match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\"))\n-\t\t     (match_operand:DI 3 \"mask64_operand\" \"n,n,n,n\"))\n+\t\t     (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t(match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\"))\n+\t\t     (match_operand:DI 3 \"mask64_operand\" \"n,n\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 4 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:DI 4 \"=r,r\"))]\n   \"TARGET_64BIT\"\n   \"@\n-   rldc%B3. %4,%1,%2,%S3\n-   rldic%B3. %4,%1,%H2,%S3\n-   #\n+   rld%I2c%B3. %4,%1,%H2,%S3\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -7011,24 +6960,22 @@\n   \"\")\n \n (define_insn \"*rotldi3_internal6\"\n-  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (and:DI\n-\t\t     (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t(match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\"))\n-\t\t     (match_operand:DI 3 \"mask64_operand\" \"n,n,n,n\"))\n+\t\t     (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t(match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\"))\n+\t\t     (match_operand:DI 3 \"mask64_operand\" \"n,n\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(and:DI (rotate:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"TARGET_64BIT\"\n   \"@\n-   rldc%B3. %0,%1,%2,%S3\n-   rldic%B3. %0,%1,%H2,%S3\n-   #\n+   rld%I2c%B3. %0,%1,%H2,%S3\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 4 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -7048,68 +6995,60 @@\n   \"\")\n \n (define_insn \"*rotldi3_internal7le\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n \t (subreg:QI\n-\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 0)))]\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"rn\")) 0)))]\n   \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN\"\n-  \"@\n-   rldcl %0,%1,%2,56\n-   rldicl %0,%1,%H2,56\"\n+  \"rld%I2cl %0,%1,%H2,56\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotldi3_internal7be\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n \t (subreg:QI\n-\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 7)))]\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"rn\")) 7)))]\n   \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN\"\n-  \"@\n-   rldcl %0,%1,%2,56\n-   rldicl %0,%1,%H2,56\"\n+  \"rld%I2cl %0,%1,%H2,56\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotldi3_internal8le\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:QI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:DI 3 \"=r,r\"))]\n   \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %3,%1,%2,56\n-   rldicl. %3,%1,%H2,56\n-   #\n+   rld%I2cl. %3,%1,%H2,56\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotldi3_internal8be\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:QI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 7))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 7))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:DI 3 \"=r,r\"))]\n   \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %3,%1,%2,56\n-   rldicl. %3,%1,%H2,56\n-   #\n+   rld%I2cl. %3,%1,%H2,56\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -7148,44 +7087,40 @@\n   \"\")\n \n (define_insn \"*rotldi3_internal9le\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:QI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI (subreg:QI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n   \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %0,%1,%2,56\n-   rldicl. %0,%1,%H2,56\n-   #\n+   rld%I2cl. %0,%1,%H2,56\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotldi3_internal9be\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:QI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 7))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 7))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI (subreg:QI (rotate:DI (match_dup 1) (match_dup 2)) 7)))]\n   \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %0,%1,%2,56\n-   rldicl. %0,%1,%H2,56\n-   #\n+   rld%I2cl. %0,%1,%H2,56\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -7222,68 +7157,60 @@\n   \"\")\n \n (define_insn \"*rotldi3_internal10le\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n \t (subreg:HI\n-\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 0)))]\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"rn\")) 0)))]\n   \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN\"\n-  \"@\n-   rldcl %0,%1,%2,48\n-   rldicl %0,%1,%H2,48\"\n+  \"rld%I2cl %0,%1,%H2,48\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotldi3_internal10be\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n \t (subreg:HI\n-\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 6)))]\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"rn\")) 6)))]\n   \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN\"\n-  \"@\n-   rldcl %0,%1,%2,48\n-   rldicl %0,%1,%H2,48\"\n+  \"rld%I2cl %0,%1,%H2,48\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotldi3_internal11le\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:HI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:DI 3 \"=r,r\"))]\n   \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %3,%1,%2,48\n-   rldicl. %3,%1,%H2,48\n-   #\n+   rld%I2cl. %3,%1,%H2,48\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotldi3_internal11be\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:HI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 6))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 6))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:DI 3 \"=r,r\"))]\n   \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %3,%1,%2,48\n-   rldicl. %3,%1,%H2,48\n-   #\n+   rld%I2cl. %3,%1,%H2,48\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -7322,44 +7249,40 @@\n   \"\")\n \n (define_insn \"*rotldi3_internal12le\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:HI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI (subreg:HI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n   \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %0,%1,%2,48\n-   rldicl. %0,%1,%H2,48\n-   #\n+   rld%I2cl. %0,%1,%H2,48\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotldi3_internal12be\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:HI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 6))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 6))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI (subreg:HI (rotate:DI (match_dup 1) (match_dup 2)) 6)))]\n   \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %0,%1,%2,48\n-   rldicl. %0,%1,%H2,48\n-   #\n+   rld%I2cl. %0,%1,%H2,48\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -7396,68 +7319,60 @@\n   \"\")\n \n (define_insn \"*rotldi3_internal13le\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n \t (subreg:SI\n-\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 0)))]\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"rn\")) 0)))]\n   \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN\"\n-  \"@\n-   rldcl %0,%1,%2,32\n-   rldicl %0,%1,%H2,32\"\n+  \"rld%I2cl %0,%1,%H2,32\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotldi3_internal13be\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:DI\n \t (subreg:SI\n-\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 4)))]\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"rn\")) 4)))]\n   \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN\"\n-  \"@\n-   rldcl %0,%1,%2,32\n-   rldicl %0,%1,%H2,32\"\n+  \"rld%I2cl %0,%1,%H2,32\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n+   (set_attr \"maybe_var_shift\" \"yes\")])\n \n (define_insn \"*rotldi3_internal14le\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:SI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:DI 3 \"=r,r\"))]\n   \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %3,%1,%2,32\n-   rldicl. %3,%1,%H2,32\n-   #\n+   rld%I2cl. %3,%1,%H2,32\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotldi3_internal14be\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:SI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 4))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 4))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+   (clobber (match_scratch:DI 3 \"=r,r\"))]\n   \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %3,%1,%2,32\n-   rldicl. %3,%1,%H2,32\n-   #\n+   rld%I2cl. %3,%1,%H2,32\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n@@ -7496,44 +7411,40 @@\n   \"\")\n \n (define_insn \"*rotldi3_internal15le\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:SI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 0))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI (subreg:SI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n   \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %0,%1,%2,32\n-   rldicl. %0,%1,%H2,32\n-   #\n+   rld%I2cl. %0,%1,%H2,32\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*rotldi3_internal15be\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:SI\n-\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 4))\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"rn,rn\")) 4))\n \t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI (subreg:SI (rotate:DI (match_dup 1) (match_dup 2)) 4)))]\n   \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n-   rldcl. %0,%1,%2,32\n-   rldicl. %0,%1,%H2,32\n-   #\n+   rld%I2cl. %0,%1,%H2,32\n    #\"\n   [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n+   (set_attr \"maybe_var_shift\" \"yes\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")"}]}