{"sha": "019578498e189c256e1238fe7d981fb02740a71a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5NTc4NDk4ZTE4OWMyNTZlMTIzOGZlN2Q5ODFmYjAyNzQwYTcxYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T08:39:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T08:39:28Z"}, "message": "[multiple changes]\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: The gnatf switch no longer is needed to get full\n\tdetails on unsupported constructs.\n\n\t* rtsfind.adb: Remove references to All_Errors_Mode, give errors\n\tunconditionally.\n\n\t* s-trafor-default.adb: Correct some warnings\n\n\t* s-valwch.adb, a-calend.adb, freeze.adb, prj.ads, s-vmexta.adb,\n\tsem.adb, sem_ch10.adb, sem_ch6.adb, sem_disp.adb, vxaddr2line.adb:\n\tMinor reformatting.\n\n\t* par-ch4.adb (Conditional_Expression): Capture proper location for\n\tconditional expression, should point to IF.\n\n\t* s-tassta.adb, a-wtdeau.adb, s-tasren.adb, s-arit64.adb, s-imgdec.adb,\n\ts-direio.adb, s-tpobop.adb, g-socket.adb, s-tposen.adb, s-taskin.adb,\n\tg-calend.adb, s-regpat.adb, s-scaval.adb, g-catiio.adb: Minor code\n\treorganization (use conditional expressions).\n\n2009-07-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_util.adb (Remove_Side_Effects): If the expression is a call to a\n\tbuild-in-place function that returns an inherently limited type (not\n\tjust a task type) create proper object declaration so that extra\n\tbuild-in-place actuals are properly added to the call.\n\nFrom-SVN: r149551", "tree": {"sha": "164176c7f48023bea63ede90147c01010044b3fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/164176c7f48023bea63ede90147c01010044b3fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/019578498e189c256e1238fe7d981fb02740a71a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019578498e189c256e1238fe7d981fb02740a71a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/019578498e189c256e1238fe7d981fb02740a71a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019578498e189c256e1238fe7d981fb02740a71a/comments", "author": null, "committer": null, "parents": [{"sha": "79afa047b2dd7cd699600ade0275d5392cfc3e03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79afa047b2dd7cd699600ade0275d5392cfc3e03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79afa047b2dd7cd699600ade0275d5392cfc3e03"}], "stats": {"total": 541, "additions": 198, "deletions": 343}, "files": [{"sha": "35ffd9714b96873f5b5e85e2250fe069c18713a5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -1,3 +1,32 @@\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: The gnatf switch no longer is needed to get full\n+\tdetails on unsupported constructs.\n+\n+\t* rtsfind.adb: Remove references to All_Errors_Mode, give errors\n+\tunconditionally.\n+\n+\t* s-trafor-default.adb: Correct some warnings\n+\n+\t* s-valwch.adb, a-calend.adb, freeze.adb, prj.ads, s-vmexta.adb,\n+\tsem.adb, sem_ch10.adb, sem_ch6.adb, sem_disp.adb, vxaddr2line.adb:\n+\tMinor reformatting.\n+\n+\t* par-ch4.adb (Conditional_Expression): Capture proper location for\n+\tconditional expression, should point to IF.\n+\n+\t* s-tassta.adb, a-wtdeau.adb, s-tasren.adb, s-arit64.adb, s-imgdec.adb,\n+\ts-direio.adb, s-tpobop.adb, g-socket.adb, s-tposen.adb, s-taskin.adb,\n+\tg-calend.adb, s-regpat.adb, s-scaval.adb, g-catiio.adb: Minor code\n+\treorganization (use conditional expressions).\n+\n+2009-07-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_util.adb (Remove_Side_Effects): If the expression is a call to a\n+\tbuild-in-place function that returns an inherently limited type (not\n+\tjust a task type) create proper object declaration so that extra\n+\tbuild-in-place actuals are properly added to the call.\n+\n 2009-07-13  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb (Freeze_Entity): Implement Warn_On_Suspicious_Modulus_Value"}, {"sha": "05c327db3b336754e6ac8a6052e7b7a2ae46a857", "filename": "gcc/ada/a-calend.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fa-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fa-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -1357,8 +1357,8 @@ package body Ada.Calendar is\n             Res_N := Res_N + Duration_To_Time_Rep (Day_Secs);\n \n          else\n-            Res_N := Res_N +\n-              Time_Rep (Hour * 3_600 + Minute * 60 + Second) * Nano;\n+            Res_N :=\n+              Res_N + Time_Rep (Hour * 3_600 + Minute * 60 + Second) * Nano;\n \n             if Sub_Sec = 1.0 then\n                Res_N := Res_N + Time_Rep (1) * Nano;"}, {"sha": "78b10299b2c93fec741db7bddda63f417d41e7b4", "filename": "gcc/ada/a-wtdeau.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fa-wtdeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fa-wtdeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeau.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -244,11 +244,10 @@ package body Ada.Wide_Text_IO.Decimal_Aux is\n       Ptr  : Natural := 0;\n \n    begin\n-      if Exp = 0 then\n-         Fore := To'Length - 1 - Aft;\n-      else\n-         Fore := To'Length - 2 - Aft - Exp;\n-      end if;\n+      Fore :=\n+        (if Exp = 0\n+         then To'Length - 1 - Aft\n+         else To'Length - 2 - Aft - Exp);\n \n       if Fore < 1 then\n          raise Layout_Error;"}, {"sha": "21183b2109e1ea0a6446371ff30344b8fd39f751", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -1350,7 +1350,7 @@ package body Exp_Util is\n               Make_Subtype_From_Expr (Exp, Underlying_Record_View (Unc_Type)));\n          end if;\n \n-      --  In Ada95, Nothing to be done if the type of the expression is\n+      --  In Ada95, nothing to be done if the type of the expression is\n       --  limited, because in this case the expression cannot be copied,\n       --  and its use can only be by reference.\n \n@@ -4736,15 +4736,17 @@ package body Exp_Util is\n       --  Otherwise we generate a reference to the value\n \n       else\n-         --  Special processing for function calls that return a task. We need\n-         --  to build a declaration that will enable build-in-place expansion\n-         --  of the call.\n+         --  Special processing for function calls that return a limited type.\n+         --  We need to build a declaration that will enable build-in-place\n+         --  expansion of the call. This is not done if the context is already\n+         --  an object declaration, to prevent infinite recursion.\n \n          --  This is relevant only in Ada 2005 mode. In Ada 95 programs we have\n          --  to accommodate functions returning limited objects by reference.\n \n          if Nkind (Exp) = N_Function_Call\n-           and then Is_Task_Type (Etype (Exp))\n+           and then Is_Inherently_Limited_Type (Etype (Exp))\n+           and then Nkind (Parent (Exp)) /= N_Object_Declaration\n            and then Ada_Version >= Ada_05\n          then\n             declare"}, {"sha": "302b4317306d5e547ccab7c60f7af54c180b51b6", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -1127,7 +1127,7 @@ package body Freeze is\n    begin\n       Par := Parent (E);\n \n-      --  Array may be qualified, so find outer context.\n+      --  Array may be qualified, so find outer context\n \n       if Nkind (Par) = N_Qualified_Expression then\n          Par := Parent (Par);"}, {"sha": "46d647f8af316d7b681d5a45bd0415ccaa49bb16", "filename": "gcc/ada/g-calend.adb", "status": "modified", "additions": 13, "deletions": 33, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fg-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fg-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2008, AdaCore                     --\n+--                     Copyright (C) 1999-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -182,12 +182,7 @@ package body GNAT.Calendar is\n    begin\n       Split (Date, Year, Month, Day, Day_Secs);\n \n-      if Day_Secs = 0.0 then\n-         Secs := 0;\n-      else\n-         Secs := Natural (Day_Secs - 0.5);\n-      end if;\n-\n+      Secs       := (if Day_Secs = 0.0 then 0 else Natural (Day_Secs - 0.5));\n       Sub_Second := Second_Duration (Day_Secs - Day_Duration (Secs));\n       Hour       := Hour_Number (Secs / 3_600);\n       Secs       := Secs mod 3_600;\n@@ -370,18 +365,9 @@ package body GNAT.Calendar is\n \n       begin\n          if Last_Year then\n-            if Is_Leap (Year - 1) then\n-               Shift := -2;\n-            else\n-               Shift := -1;\n-            end if;\n-\n+            Shift := (if Is_Leap (Year - 1) then -2 else -1);\n          elsif Next_Year then\n-            if Is_Leap (Year) then\n-               Shift := 2;\n-            else\n-               Shift := 1;\n-            end if;\n+            Shift := (if Is_Leap (Year) then 2 else 1);\n          end if;\n \n          return Day_Name'Val ((Day_Name'Pos (Jan_1) + Shift) mod 7);\n@@ -452,11 +438,11 @@ package body GNAT.Calendar is\n       --  when special casing the first week of January and the last week of\n       --  December.\n \n-      if Day = 1 and then Month = 1 then\n-         Jan_1 := Day_Of_Week (Date);\n-      else\n-         Jan_1 := Day_Of_Week (Time_Of (Year, 1, 1, 0.0));\n-      end if;\n+      Jan_1 := Day_Of_Week (if Day = 1 and then Month = 1\n+                            then Date\n+                            else (Time_Of (Year, 1, 1, 0.0)));\n+\n+      --  Special cases for January\n \n       if Month = 1 then\n \n@@ -479,11 +465,7 @@ package body GNAT.Calendar is\n                or else\n             (Day = 3 and then Jan_1 = Friday)\n          then\n-            if Last_Year_Has_53_Weeks (Jan_1, Year) then\n-               Week := 53;\n-            else\n-               Week := 52;\n-            end if;\n+            Week := (if Last_Year_Has_53_Weeks (Jan_1, Year) then 53 else 52);\n \n             --  January 1, 2 and 3 belong to the previous year\n \n@@ -516,6 +498,8 @@ package body GNAT.Calendar is\n             return;\n          end if;\n \n+      --  Month other than 1\n+\n       --  Special case 3: December 29, 30 and 31. These days may belong to\n       --  next year's first week.\n \n@@ -551,11 +535,7 @@ package body GNAT.Calendar is\n       --  not belong to the first week of the input year, then the next week\n       --  is the first week.\n \n-      if Jan_1 in Friday .. Sunday then\n-         Start_Week := 1;\n-      else\n-         Start_Week := 2;\n-      end if;\n+      Start_Week := (if Jan_1 in Friday .. Sunday then 1 else 2);\n \n       --  At this point all special combinations have been accounted for and\n       --  the proper start week has been found. Since January 1 may not fall"}, {"sha": "66a6480b38d5616838fee887c82e8240c8c0c3c4", "filename": "gcc/ada/g-catiio.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fg-catiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fg-catiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-catiio.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2008, AdaCore                     --\n+--                     Copyright (C) 1999-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -471,15 +471,11 @@ package body GNAT.Calendar.Time_IO is\n \n                when 'w' =>\n                   declare\n-                     DOW : Natural range 0 .. 6;\n-\n+                     DOW : constant Natural range 0 .. 6 :=\n+                             (if Day_Of_Week (Date) = Sunday\n+                              then 0\n+                              else Day_Name'Pos (Day_Of_Week (Date)));\n                   begin\n-                     if Day_Of_Week (Date) = Sunday then\n-                        DOW := 0;\n-                     else\n-                        DOW := Day_Name'Pos (Day_Of_Week (Date));\n-                     end if;\n-\n                      Result := Result & Image (DOW, Length => 1);\n                   end;\n "}, {"sha": "badebbca59965bc76fbcdd2c082b3123e7f1456a", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -1150,11 +1150,7 @@ package body GNAT.Sockets is\n    --  Start of processing for Image\n \n    begin\n-      if Hex then\n-         Separator := ':';\n-      else\n-         Separator := '.';\n-      end if;\n+      Separator := (if Hex then ':' else '.');\n \n       for J in Val'Range loop\n          if Hex then\n@@ -1592,6 +1588,7 @@ package body GNAT.Sockets is\n          --  Last is set to Stream_Element_Offset'Last.\n \n          Last := Ada.Streams.Stream_Element_Offset'Last;\n+\n       else\n          Last := Item'First + Ada.Streams.Stream_Element_Offset (Res - 1);\n       end if;\n@@ -1873,6 +1870,7 @@ package body GNAT.Sockets is\n          --  Last is set to Stream_Element_Offset'Last.\n \n          Last := Ada.Streams.Stream_Element_Offset'Last;\n+\n       else\n          Last := Item'First + Ada.Streams.Stream_Element_Offset (Res - 1);\n       end if;\n@@ -1904,11 +1902,10 @@ package body GNAT.Sockets is\n          pragma Warnings (Off);\n          --  Following test may be compile time known on some targets\n \n-         if Vector'Length - Iov_Count > SOSC.IOV_MAX then\n-            This_Iov_Count := SOSC.IOV_MAX;\n-         else\n-            This_Iov_Count := Vector'Length - Iov_Count;\n-         end if;\n+         This_Iov_Count :=\n+           (if Vector'Length - Iov_Count > SOSC.IOV_MAX\n+            then SOSC.IOV_MAX\n+            else Vector'Length - Iov_Count);\n \n          pragma Warnings (On);\n "}, {"sha": "c88a24031932782931573736670c93e12a2bf148", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -4784,8 +4784,6 @@ some error messages.  Some examples are:\n \n @itemize @bullet\n @item\n-Full details on entities not available in high integrity mode\n-@item\n Details on possibly non-portable unchecked conversion\n @item\n List possible interpretations for ambiguous calls"}, {"sha": "c164e60b61d0400d8a57ac1e2f3d5f7b5372dd1e", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -2658,7 +2658,7 @@ package body Ch4 is\n \n    function P_Conditional_Expression return Node_Id is\n       Exprs : constant List_Id    := New_List;\n-      Loc   : constant Source_Ptr := Scan_Ptr;\n+      Loc   : constant Source_Ptr := Token_Ptr;\n       Expr  : Node_Id;\n       State : Saved_Scan_State;\n "}, {"sha": "1923df17c8e8b7a76c0383be1a4e03c45a6e4e38", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -1236,7 +1236,7 @@ package Prj is\n    end record;\n \n    function Empty_Project return Project_Data;\n-   --  Return the representation of an empty project.\n+   --  Return the representation of an empty project\n \n    function Is_Extending\n      (Extending : Project_Id;"}, {"sha": "450fdc0185b4cc704825093bd4c62833155782ee", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 16, "deletions": 21, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -158,8 +158,8 @@ package body Rtsfind is\n    --     \"had semantic errors\"\n    --\n    --  The \"not found\" case is treated specially in that it is considered\n-   --  a normal situation in configurable run-time mode (and the message in\n-   --  this case is suppressed unless we are operating in All_Errors_Mode).\n+   --  a normal situation in configurable run-time mode, and generates\n+   --  a warning, but is otherwise ignored.\n \n    procedure Load_RTU\n      (U_Id        : RTU_Id;\n@@ -537,30 +537,25 @@ package body Rtsfind is\n \n       --  Output file name and reason string\n \n-      if S /= \"not found\"\n-        or else not Configurable_Run_Time_Mode\n-        or else All_Errors_Mode\n-      then\n-         M (1 .. 6) := \"\\file \";\n-         P := 6;\n+      M (1 .. 6) := \"\\file \";\n+      P := 6;\n \n-         Get_Name_String\n-           (Get_File_Name (RT_Unit_Table (U_Id).Uname, Subunit => False));\n-         M (P + 1 .. P + Name_Len) := Name_Buffer (1 .. Name_Len);\n-         P := P + Name_Len;\n+      Get_Name_String\n+        (Get_File_Name (RT_Unit_Table (U_Id).Uname, Subunit => False));\n+      M (P + 1 .. P + Name_Len) := Name_Buffer (1 .. Name_Len);\n+      P := P + Name_Len;\n \n-         M (P + 1) := ' ';\n-         P := P + 1;\n+      M (P + 1) := ' ';\n+      P := P + 1;\n \n-         M (P + 1 .. P + S'Length) := S;\n-         P := P + S'Length;\n+      M (P + 1 .. P + S'Length) := S;\n+      P := P + S'Length;\n \n-         RTE_Error_Msg (M (1 .. P));\n+      RTE_Error_Msg (M (1 .. P));\n \n-         --  Output entity name\n+      --  Output entity name\n \n-         Output_Entity_Name (Id, \"not available\");\n-      end if;\n+      Output_Entity_Name (Id, \"not available\");\n \n       --  In configurable run time mode, we raise RE_Not_Available, and the\n       --  caller is expected to deal gracefully with this. In the case of a\n@@ -869,7 +864,7 @@ package body Rtsfind is\n       RE_Image : constant String := RE_Id'Image (Id);\n \n    begin\n-      if Id = RE_Null or else not All_Errors_Mode then\n+      if Id = RE_Null then\n          return;\n       end if;\n "}, {"sha": "b6f253585c149dca75950a0dc8afc7c9312c7d81", "filename": "gcc/ada/s-arit64.adb", "status": "modified", "additions": 9, "deletions": 37, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-arit64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-arit64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-arit64.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -211,11 +211,7 @@ package body System.Arith_64 is\n          end if;\n \n       else\n-         if Zhi /= 0 then\n-            T2 := Ylo * Zhi;\n-         else\n-            T2 := 0;\n-         end if;\n+         T2 := (if Zhi /= 0 then Ylo * Zhi else 0);\n       end if;\n \n       T1 := Ylo * Zlo;\n@@ -254,23 +250,13 @@ package body System.Arith_64 is\n \n       if X >= 0 then\n          R := To_Int (Ru);\n-\n-         if Den_Pos then\n-            Q := To_Int (Qu);\n-         else\n-            Q := -To_Int (Qu);\n-         end if;\n+         Q := (if Den_Pos then To_Int (Qu) else -To_Int (Qu));\n \n       --  Case of dividend (X) sign negative\n \n       else\n          R := -To_Int (Ru);\n-\n-         if Den_Pos then\n-            Q := -To_Int (Qu);\n-         else\n-            Q := To_Int (Qu);\n-         end if;\n+         Q := (if Den_Pos then -To_Int (Qu) else To_Int (Qu));\n       end if;\n    end Double_Divide;\n \n@@ -548,11 +534,9 @@ package body System.Arith_64 is\n             --  which ensured the first bit of the divisor is set, this gives\n             --  an estimate of the quotient that is at most two too high.\n \n-            if D (J + 1) = Zhi then\n-               Qd (J + 1) := 2 ** 32 - 1;\n-            else\n-               Qd (J + 1) := Lo ((D (J + 1) & D (J + 2)) / Zhi);\n-            end if;\n+            Qd (J + 1) := (if D (J + 1) = Zhi\n+                           then 2 ** 32 - 1\n+                           else Lo ((D (J + 1) & D (J + 2)) / Zhi));\n \n             --  Compute amount to subtract\n \n@@ -598,27 +582,15 @@ package body System.Arith_64 is\n \n       --  Case of dividend (X * Y) sign positive\n \n-      if (X >= 0 and then Y >= 0)\n-        or else (X < 0 and then Y < 0)\n-      then\n+      if (X >= 0 and then Y >= 0) or else (X < 0 and then Y < 0) then\n          R := To_Pos_Int (Ru);\n-\n-         if Z > 0 then\n-            Q := To_Pos_Int (Qu);\n-         else\n-            Q := To_Neg_Int (Qu);\n-         end if;\n+         Q := (if Z > 0 then To_Pos_Int (Qu) else To_Neg_Int (Qu));\n \n       --  Case of dividend (X * Y) sign negative\n \n       else\n          R := To_Neg_Int (Ru);\n-\n-         if Z > 0 then\n-            Q := To_Neg_Int (Qu);\n-         else\n-            Q := To_Pos_Int (Qu);\n-         end if;\n+         Q := (if Z > 0 then To_Neg_Int (Qu) else To_Pos_Int (Qu));\n       end if;\n    end Scaled_Divide;\n "}, {"sha": "dee00cd36097577e84466946dd7cd0ca9a1271be", "filename": "gcc/ada/s-direio.adb", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -223,11 +223,7 @@ package body System.Direct_IO is\n       --  last operation as other, to force the file position to be reset\n       --  on the next read.\n \n-      if File.Bytes = Size then\n-         File.Last_Op := Op_Read;\n-      else\n-         File.Last_Op := Op_Other;\n-      end if;\n+      File.Last_Op := (if File.Bytes = Size then Op_Read else Op_Other);\n    end Read;\n \n    --  The following is the required overriding for Stream.Read, which is\n@@ -376,11 +372,7 @@ package body System.Direct_IO is\n       --  last operation as other, to force the file position to be reset\n       --  on the next write.\n \n-      if File.Bytes = Size then\n-         File.Last_Op := Op_Write;\n-      else\n-         File.Last_Op := Op_Other;\n-      end if;\n+      File.Last_Op := (if File.Bytes = Size then Op_Write else Op_Other);\n    end Write;\n \n    --  The following is the required overriding for Stream.Write, which is"}, {"sha": "6ddf5e0f9205a488cc063f88fe161f009e7b8e39", "filename": "gcc/ada/s-imgdec.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-imgdec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-imgdec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgdec.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -273,12 +273,7 @@ package body System.Img_Dec is\n          --  exception is for the value zero, which by convention has an\n          --  exponent of +0.\n \n-         if Zero then\n-            Expon := 0;\n-         else\n-            Expon := Digits_Before_Point - 1;\n-         end if;\n-\n+         Expon := (if Zero then 0 else Digits_Before_Point - 1);\n          Set ('E');\n          ND := 0;\n "}, {"sha": "8d83b93e1a312866c791f50ba30eecc568c17f3e", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 44, "deletions": 127, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                                                                          --\n --               Copyright (C) 1986 by University of Toronto.               --\n---                      Copyright (C) 1999-2008, AdaCore                    --\n+--                      Copyright (C) 1999-2009, AdaCore                    --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -988,29 +988,23 @@ package body System.Regpat is\n \n          case (C) is\n             when '^' =>\n-               if (Flags and Multiple_Lines) /= 0  then\n-                  IP := Emit_Node (MBOL);\n-               elsif (Flags and Single_Line) /= 0 then\n-                  IP := Emit_Node (SBOL);\n-               else\n-                  IP := Emit_Node (BOL);\n-               end if;\n+               IP :=\n+                 Emit_Node\n+                   (if (Flags and Multiple_Lines) /= 0 then MBOL\n+                    elsif (Flags and Single_Line) /= 0 then SBOL\n+                    else BOL);\n \n             when '$' =>\n-               if (Flags and Multiple_Lines) /= 0  then\n-                  IP := Emit_Node (MEOL);\n-               elsif (Flags and Single_Line) /= 0 then\n-                  IP := Emit_Node (SEOL);\n-               else\n-                  IP := Emit_Node (EOL);\n-               end if;\n+               IP :=\n+                 Emit_Node\n+                   (if (Flags and Multiple_Lines) /= 0 then MEOL\n+                    elsif (Flags and Single_Line) /= 0 then SEOL\n+                    else EOL);\n \n             when '.' =>\n-               if (Flags and Single_Line) /= 0 then\n-                  IP := Emit_Node (SANY);\n-               else\n-                  IP := Emit_Node (ANY);\n-               end if;\n+               IP :=\n+                 Emit_Node\n+                   (if (Flags and Single_Line) /= 0 then SANY else ANY);\n \n                Expr_Flags.Has_Width := True;\n                Expr_Flags.Simple := True;\n@@ -1146,15 +1140,9 @@ package body System.Regpat is\n \n       begin\n          Flags := Worst_Expression;    -- Tentatively\n-\n-         if First then\n-            IP := Emit_Ptr;\n-         else\n-            IP := Emit_Node (BRANCH);\n-         end if;\n+         IP := (if First then Emit_Ptr else Emit_Node (BRANCH));\n \n          Chain := 0;\n-\n          while Parse_Pos <= Parse_End\n            and then E (Parse_Pos) /= ')'\n            and then E (Parse_Pos) /= ASCII.LF\n@@ -1566,11 +1554,9 @@ package body System.Regpat is\n       begin\n          Parse_Pos := Parse_Pos - 1;      --  Look at current character\n \n-         if (Flags and Case_Insensitive) /= 0 then\n-            IP := Emit_Node (EXACTF);\n-         else\n-            IP := Emit_Node (EXACT);\n-         end if;\n+         IP :=\n+           Emit_Node\n+             (if (Flags and Case_Insensitive) /= 0 then EXACTF else EXACT);\n \n          Length_Ptr := Emit_Ptr;\n          Emit_Ptr := String_Operand (IP);\n@@ -1707,11 +1693,10 @@ package body System.Regpat is\n \n          Op := Expression (Parse_Pos);\n \n-         if Op /= '+' then\n-            Expr_Flags := (SP_Start => True, others => False);\n-         else\n-            Expr_Flags := (Has_Width => True, others => False);\n-         end if;\n+         Expr_Flags :=\n+           (if Op /= '+'\n+            then (SP_Start  => True, others => False)\n+            else (Has_Width => True, others => False));\n \n          --  Detect non greedy operators in the easy cases\n \n@@ -1840,36 +1825,23 @@ package body System.Regpat is\n                      if\n                        E (Parse_Pos .. Parse_Pos + Alnum'Length - 1) = Alnum\n                      then\n-                        if Invert then\n-                           Class := ANYOF_NALNUMC;\n-                        else\n-                           Class := ANYOF_ALNUMC;\n-                        end if;\n-\n+                        Class :=\n+                          (if Invert then ANYOF_NALNUMC else ANYOF_ALNUMC);\n                         Parse_Pos := Parse_Pos + Alnum'Length;\n \n                      elsif\n                        E (Parse_Pos .. Parse_Pos + Alpha'Length - 1) = Alpha\n                      then\n-                        if Invert then\n-                           Class := ANYOF_NALPHA;\n-                        else\n-                           Class := ANYOF_ALPHA;\n-                        end if;\n-\n+                        Class :=\n+                          (if Invert then ANYOF_NALPHA else ANYOF_ALPHA);\n                         Parse_Pos := Parse_Pos + Alpha'Length;\n \n                      elsif E (Parse_Pos .. Parse_Pos + Ascii_C'Length - 1) =\n                                                                       Ascii_C\n                      then\n-                        if Invert then\n-                           Class := ANYOF_NASCII;\n-                        else\n-                           Class := ANYOF_ASCII;\n-                        end if;\n-\n+                        Class :=\n+                          (if Invert then ANYOF_NASCII else ANYOF_ASCII);\n                         Parse_Pos := Parse_Pos + Ascii_C'Length;\n-\n                      else\n                         Fail (\"Invalid character class: \" & E);\n                      end if;\n@@ -1883,14 +1855,8 @@ package body System.Regpat is\n                     and then\n                       E (Parse_Pos .. Parse_Pos + Cntrl'Length - 1) = Cntrl\n                   then\n-                     if Invert then\n-                        Class := ANYOF_NCNTRL;\n-                     else\n-                        Class := ANYOF_CNTRL;\n-                     end if;\n-\n+                     Class := (if Invert then ANYOF_NCNTRL else ANYOF_CNTRL);\n                      Parse_Pos := Parse_Pos + Cntrl'Length;\n-\n                   else\n                      Fail (\"Invalid character class: \" & E);\n                   end if;\n@@ -1900,12 +1866,7 @@ package body System.Regpat is\n                     and then\n                       E (Parse_Pos .. Parse_Pos + Digit'Length - 1) = Digit\n                   then\n-                     if Invert then\n-                        Class := ANYOF_NDIGIT;\n-                     else\n-                        Class := ANYOF_DIGIT;\n-                     end if;\n-\n+                     Class := (if Invert then ANYOF_NDIGIT else ANYOF_DIGIT);\n                      Parse_Pos := Parse_Pos + Digit'Length;\n                   end if;\n \n@@ -1914,14 +1875,8 @@ package body System.Regpat is\n                     and then\n                       E (Parse_Pos .. Parse_Pos + Graph'Length - 1) = Graph\n                   then\n-                     if Invert then\n-                        Class := ANYOF_NGRAPH;\n-                     else\n-                        Class := ANYOF_GRAPH;\n-                     end if;\n-\n+                     Class := (if Invert then ANYOF_NGRAPH else ANYOF_GRAPH);\n                      Parse_Pos := Parse_Pos + Graph'Length;\n-\n                   else\n                      Fail (\"Invalid character class: \" & E);\n                   end if;\n@@ -1931,14 +1886,8 @@ package body System.Regpat is\n                     and then\n                       E (Parse_Pos .. Parse_Pos + Lower'Length - 1) = Lower\n                   then\n-                     if Invert then\n-                        Class := ANYOF_NLOWER;\n-                     else\n-                        Class := ANYOF_LOWER;\n-                     end if;\n-\n+                     Class := (if Invert then ANYOF_NLOWER else ANYOF_LOWER);\n                      Parse_Pos := Parse_Pos + Lower'Length;\n-\n                   else\n                      Fail (\"Invalid character class: \" & E);\n                   end if;\n@@ -1951,23 +1900,15 @@ package body System.Regpat is\n                      if\n                        E (Parse_Pos .. Parse_Pos + Print'Length - 1) = Print\n                      then\n-                        if Invert then\n-                           Class := ANYOF_NPRINT;\n-                        else\n-                           Class := ANYOF_PRINT;\n-                        end if;\n-\n+                        Class :=\n+                          (if Invert then ANYOF_NPRINT else ANYOF_PRINT);\n                         Parse_Pos := Parse_Pos + Print'Length;\n \n                      elsif\n                        E (Parse_Pos .. Parse_Pos + Punct'Length - 1) = Punct\n                      then\n-                        if Invert then\n-                           Class := ANYOF_NPUNCT;\n-                        else\n-                           Class := ANYOF_PUNCT;\n-                        end if;\n-\n+                        Class :=\n+                          (if Invert then ANYOF_NPUNCT else ANYOF_PUNCT);\n                         Parse_Pos := Parse_Pos + Punct'Length;\n \n                      else\n@@ -1983,14 +1924,8 @@ package body System.Regpat is\n                     and then\n                       E (Parse_Pos .. Parse_Pos + Space'Length - 1) = Space\n                   then\n-                     if Invert then\n-                        Class := ANYOF_NSPACE;\n-                     else\n-                        Class := ANYOF_SPACE;\n-                     end if;\n-\n+                     Class := (if Invert then ANYOF_NSPACE else ANYOF_SPACE);\n                      Parse_Pos := Parse_Pos + Space'Length;\n-\n                   else\n                      Fail (\"Invalid character class: \" & E);\n                   end if;\n@@ -2000,14 +1935,8 @@ package body System.Regpat is\n                     and then\n                       E (Parse_Pos .. Parse_Pos + Upper'Length - 1) = Upper\n                   then\n-                     if Invert then\n-                        Class := ANYOF_NUPPER;\n-                     else\n-                        Class := ANYOF_UPPER;\n-                     end if;\n-\n+                     Class := (if Invert then ANYOF_NUPPER else ANYOF_UPPER);\n                      Parse_Pos := Parse_Pos + Upper'Length;\n-\n                   else\n                      Fail (\"Invalid character class: \" & E);\n                   end if;\n@@ -2017,14 +1946,8 @@ package body System.Regpat is\n                     and then\n                       E (Parse_Pos .. Parse_Pos + Word'Length - 1) = Word\n                   then\n-                     if Invert then\n-                        Class := ANYOF_NALNUM;\n-                     else\n-                        Class := ANYOF_ALNUM;\n-                     end if;\n-\n+                     Class := (if Invert then ANYOF_NALNUM else ANYOF_ALNUM);\n                      Parse_Pos := Parse_Pos + Word'Length;\n-\n                   else\n                      Fail (\"Invalid character class: \" & E);\n                   end if;\n@@ -2034,12 +1957,7 @@ package body System.Regpat is\n                     and then\n                       E (Parse_Pos .. Parse_Pos + Xdigit'Length - 1) = Xdigit\n                   then\n-                     if Invert then\n-                        Class := ANYOF_NXDIGIT;\n-                     else\n-                        Class := ANYOF_XDIGIT;\n-                     end if;\n-\n+                     Class := (if Invert then ANYOF_NXDIGIT else ANYOF_XDIGIT);\n                      Parse_Pos := Parse_Pos + Xdigit'Length;\n \n                   else\n@@ -2633,11 +2551,10 @@ package body System.Regpat is\n                         N := Is_Alnum (Data (Input_Pos - 1));\n                      end if;\n \n-                     if Input_Pos > Last_In_Data then\n-                        Ln := False;\n-                     else\n-                        Ln := Is_Alnum (Data (Input_Pos));\n-                     end if;\n+                     Ln :=\n+                       (if Input_Pos > Last_In_Data\n+                        then False\n+                        else Is_Alnum (Data (Input_Pos)));\n \n                      if Op = BOUND then\n                         if N = Ln then"}, {"sha": "f1742a72a380a3ee3e87b1f02e57d97c8d723c86", "filename": "gcc/ada/s-scaval.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-scaval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-scaval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-scaval.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -270,17 +270,14 @@ package body System.Scalar_Values is\n       else\n          --  Convert the two hex digits (we know they are valid here)\n \n-         if C1 in '0' .. '9' then\n-            B := Character'Pos (C1) - Character'Pos ('0');\n-         else\n-            B := Character'Pos (C1) - (Character'Pos ('A') - 10);\n-         end if;\n-\n-         if C2 in '0' .. '9' then\n-            B := B * 16 + Character'Pos (C2) - Character'Pos ('0');\n-         else\n-            B := B * 16 + Character'Pos (C2) - (Character'Pos ('A') - 10);\n-         end if;\n+         B := 16 * (Character'Pos (C1)\n+                     - (if C1 in '0' .. '9'\n+                        then Character'Pos ('0')\n+                        else Character'Pos ('A') - 10))\n+                 + (Character'Pos (C2)\n+                     - (if C2 in '0' .. '9'\n+                        then Character'Pos ('0')\n+                        else Character'Pos ('A') - 10));\n \n          --  Initialize data values from the hex value\n "}, {"sha": "e3d30fc0cbfc562462e9c1f986c6c0dde5f62423", "filename": "gcc/ada/s-taskin.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-taskin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-taskin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -187,11 +187,10 @@ package body System.Tasking is\n \n       --  Initialize Environment Task\n \n-      if Main_Priority = Unspecified_Priority then\n-         Base_Priority := Default_Priority;\n-      else\n-         Base_Priority := Priority (Main_Priority);\n-      end if;\n+      Base_Priority :=\n+        (if Main_Priority = Unspecified_Priority\n+         then Default_Priority\n+         else Priority (Main_Priority));\n \n       T := STPO.New_ATCB (0);\n       Initialize_ATCB"}, {"sha": "35e0dd37d6308f693cb10f290a16510cc3f11c55", "filename": "gcc/ada/s-tasren.adb", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasren.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -405,11 +405,10 @@ package body System.Tasking.Rendezvous is\n       --  If this is a call made inside of an abort deferred region,\n       --  the call should be never abortable.\n \n-      if Self_Id.Deferral_Level > 1 then\n-         Entry_Call.State := Never_Abortable;\n-      else\n-         Entry_Call.State := Now_Abortable;\n-      end if;\n+      Entry_Call.State :=\n+        (if Self_Id.Deferral_Level > 1\n+         then Never_Abortable\n+         else Now_Abortable);\n \n       Entry_Call.E := Entry_Index (E);\n       Entry_Call.Prio := Get_Priority (Self_Id);\n@@ -1706,11 +1705,10 @@ package body System.Tasking.Rendezvous is\n       --  If this is a call made inside of an abort deferred region,\n       --  the call should be never abortable.\n \n-      if Self_Id.Deferral_Level > 1 then\n-         Entry_Call.State := Never_Abortable;\n-      else\n-         Entry_Call.State := Now_Abortable;\n-      end if;\n+      Entry_Call.State :=\n+        (if Self_Id.Deferral_Level > 1\n+         then Never_Abortable\n+         else Now_Abortable);\n \n       Entry_Call.E := Entry_Index (E);\n       Entry_Call.Prio := Get_Priority (Self_Id);"}, {"sha": "e26a09de8ec47afad6e195e2916ca3c40314b74e", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -282,11 +282,10 @@ package body System.Tasking.Stages is\n             Write_Lock (P);\n             Write_Lock (C);\n \n-            if C.Common.Base_Priority < Get_Priority (Self_ID) then\n-               Activate_Prio := Get_Priority (Self_ID);\n-            else\n-               Activate_Prio := C.Common.Base_Priority;\n-            end if;\n+            Activate_Prio :=\n+              (if C.Common.Base_Priority < Get_Priority (Self_ID)\n+               then Get_Priority (Self_ID)\n+               else C.Common.Base_Priority);\n \n             System.Task_Primitives.Operations.Create_Task\n               (C, Task_Wrapper'Address,\n@@ -517,11 +516,10 @@ package body System.Tasking.Stages is\n \n       pragma Debug (Debug.Trace (Self_ID, \"Create_Task\", 'C'));\n \n-      if Priority = Unspecified_Priority then\n-         Base_Priority := Self_ID.Common.Base_Priority;\n-      else\n-         Base_Priority := System.Any_Priority (Priority);\n-      end if;\n+      Base_Priority :=\n+        (if Priority = Unspecified_Priority\n+         then Self_ID.Common.Base_Priority\n+         else System.Any_Priority (Priority));\n \n       --  Find parent P of new Task, via master level number\n \n@@ -589,6 +587,7 @@ package body System.Tasking.Stages is\n          --  confused when waiting for these tasks to terminate.\n \n          T.Master_of_Task := Library_Task_Level;\n+\n       else\n          T.Master_of_Task := Master;\n       end if;\n@@ -1075,11 +1074,10 @@ package body System.Tasking.Stages is\n \n       --  Assume a size of the stack taken at this stage\n \n-      if Size < Small_Stack_Limit then\n-         Overflow_Guard := Small_Overflow_Guard;\n-      else\n-         Overflow_Guard := Big_Overflow_Guard;\n-      end if;\n+      Overflow_Guard :=\n+        (if Size < Small_Stack_Limit\n+         then Small_Overflow_Guard\n+         else Big_Overflow_Guard);\n \n       if not Parameters.Sec_Stack_Dynamic then\n          Self_ID.Common.Compiler_Data.Sec_Stack_Addr :="}, {"sha": "13688e6c669a63fe8dc9ca3abcdb4d9634e0a076", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -582,11 +582,9 @@ package body System.Tasking.Protected_Objects.Operations is\n       Entry_Call.Mode := Mode;\n       Entry_Call.Cancellation_Attempted := False;\n \n-      if Self_ID.Deferral_Level > 1 then\n-         Entry_Call.State := Never_Abortable;\n-      else\n-         Entry_Call.State := Now_Abortable;\n-      end if;\n+      Entry_Call.State :=\n+        (if Self_ID.Deferral_Level > 1\n+         then Never_Abortable else Now_Abortable);\n \n       Entry_Call.E := Entry_Index (E);\n       Entry_Call.Prio := STPO.Get_Priority (Self_ID);\n@@ -972,17 +970,15 @@ package body System.Tasking.Protected_Objects.Operations is\n       pragma Debug\n         (Debug.Trace (Self_Id, \"TPEC: exited to ATC level: \" &\n          ATC_Level'Image (Self_Id.ATC_Nesting_Level), 'A'));\n-      Entry_Call :=\n-        Self_Id.Entry_Calls (Self_Id.ATC_Nesting_Level)'Access;\n+      Entry_Call := Self_Id.Entry_Calls (Self_Id.ATC_Nesting_Level)'Access;\n       Entry_Call.Next := null;\n       Entry_Call.Mode := Timed_Call;\n       Entry_Call.Cancellation_Attempted := False;\n \n-      if Self_Id.Deferral_Level > 1 then\n-         Entry_Call.State := Never_Abortable;\n-      else\n-         Entry_Call.State := Now_Abortable;\n-      end if;\n+      Entry_Call.State :=\n+        (if Self_Id.Deferral_Level > 1\n+         then Never_Abortable\n+         else Now_Abortable);\n \n       Entry_Call.E := Entry_Index (E);\n       Entry_Call.Prio := STPO.Get_Priority (Self_Id);"}, {"sha": "10cfca21016aa75c4a1e2b868eba1795ff872c15", "filename": "gcc/ada/s-tposen.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-tposen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-tposen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -231,12 +231,7 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n       STPO.Timed_Sleep\n         (Self_Id, Wakeup_Time, Mode, Entry_Caller_Sleep, Timedout, Yielded);\n \n-      if Timedout then\n-         Entry_Call.State := Cancelled;\n-      else\n-         Entry_Call.State := Done;\n-      end if;\n-\n+      Entry_Call.State := (if Timedout then Cancelled else Done);\n       Self_Id.Common.State := Runnable;\n    end Wait_For_Completion_With_Timeout;\n "}, {"sha": "93f0e24c5b3cf7ee328efa95acdeccd32a7fd9bc", "filename": "gcc/ada/s-trafor-default.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-trafor-default.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-trafor-default.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trafor-default.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -40,8 +40,8 @@ package body System.Traces.Format is\n    ------------------\n \n    function Format_Trace (Source : String) return String_Trace is\n-      Length : Integer      := Source'Length;\n-      Result : String_Trace := (others => ' ');\n+      Length : constant Integer := Source'Length;\n+      Result : String_Trace     := (others => ' ');\n \n    begin\n       --  If run-time tracing active, then fill the string\n@@ -52,7 +52,8 @@ package body System.Traces.Format is\n             Result (Length + 1 .. Max_Size) := (others => ' ');\n             Result (Length + 1) := ASCII.NUL;\n          else\n-            Result (1 .. Max_Size - 1) := Source (1 .. Max_Size - 1);\n+            Result (1 .. Max_Size - 1) :=\n+              Source (Source'First .. Source'First - 1 + Max_Size - 1);\n             Result (Max_Size) := ASCII.NUL;\n          end if;\n       end if;\n@@ -68,8 +69,8 @@ package body System.Traces.Format is\n      (Source : String_Trace;\n       Annex  : String) return String_Trace\n    is\n-      Result        : String_Trace := (others => ' ');\n-      Annex_Length  : Integer := Annex'Length;\n+      Result        : String_Trace     := (others => ' ');\n+      Annex_Length  : constant Integer := Annex'Length;\n       Source_Length : Integer;\n \n    begin"}, {"sha": "b2db5005adc6b8b57d722404b64af355891d3922", "filename": "gcc/ada/s-valwch.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-valwch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-valwch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valwch.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -119,7 +119,6 @@ package body System.Val_WChar is\n \n                if S (F + 1) = '[' then\n                   W := Wide_Wide_Character'Val (UTF_32 ('[', WCEM_Brackets));\n-\n                else\n                   W := Wide_Wide_Character'Val (UTF_32 (S (F + 1), EM));\n                end if;"}, {"sha": "b19e27436eae3a66a9d3d13d3f12a1fa9db54e04", "filename": "gcc/ada/s-vmexta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-vmexta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fs-vmexta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vmexta.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is an Alpha/VMS package.\n+--  This is an Alpha/VMS package\n \n with System.HTable;\n pragma Elaborate_All (System.HTable);"}, {"sha": "f5beda4b2d3f1af563013a9cc47ef872e65c8f7d", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -1788,7 +1788,7 @@ package body Sem is\n          end;\n       end loop;\n \n-      --  Now traverse compilation units in order.\n+      --  Now traverse compilation units in order\n \n       Cur := First_Elmt (Comp_Unit_List);\n       while Present (Cur) loop"}, {"sha": "d715432e1f62b45ede08f030e5c03b71bbcd0aaf", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -5721,7 +5721,7 @@ package body Sem_Ch10 is\n                      end if;\n                   end if;\n \n-                  --  Preserve structure of homonym chain.\n+                  --  Preserve structure of homonym chain\n \n                   Set_Homonym (E, Homonym (Lim_Typ));\n                end if;"}, {"sha": "009af960a24d35a5270c5eceff42f457f368726b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -2637,7 +2637,7 @@ package body Sem_Ch6 is\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  Statements => New_List (Make_Null_Statement (Loc))));\n \n-         --  Create new entities for body and formals.\n+         --  Create new entities for body and formals\n \n          Set_Defining_Unit_Name (Specification (Null_Body),\n            Make_Defining_Identifier (Loc, Chars (Defining_Entity (N))));"}, {"sha": "f56fd8a89583b177d3e7905909046dd164a863c4", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -758,7 +758,7 @@ package body Sem_Disp is\n             E := First_Entity (Subp);\n             while Present (E) loop\n \n-               --  For an access parameter, check designated type.\n+               --  For an access parameter, check designated type\n \n                if Ekind (Etype (E)) = E_Anonymous_Access_Type then\n                   Typ := Designated_Type (Etype (E));\n@@ -1346,7 +1346,7 @@ package body Sem_Disp is\n          Set_Scope (Subp, Current_Scope);\n          Tagged_Type := Find_Dispatching_Type (Subp);\n \n-         --  Add Old_Subp to primitive operations if not already present.\n+         --  Add Old_Subp to primitive operations if not already present\n \n          if Present (Tagged_Type) and then Is_Tagged_Type (Tagged_Type) then\n             Append_Unique_Elmt (Old_Subp, Primitive_Operations (Tagged_Type));"}, {"sha": "f1bb48a74289d64648690c2b9fb78bb7bd32cd13", "filename": "gcc/ada/vxaddr2line.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fvxaddr2line.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019578498e189c256e1238fe7d981fb02740a71a/gcc%2Fada%2Fvxaddr2line.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvxaddr2line.adb?ref=019578498e189c256e1238fe7d981fb02740a71a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2008, AdaCore                     --\n+--                     Copyright (C) 2002-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,7 +75,7 @@ with GNAT.Regpat;               use GNAT.Regpat;\n procedure VxAddr2Line is\n \n    package Unsigned_32_IO is new Modular_IO (Unsigned_32);\n-   --  Instantiate Modular_IO to have Put.\n+   --  Instantiate Modular_IO to have Put\n \n    Ref_Symbol : constant String := \"adainit\";\n    --  This is the name of the reference symbol which runtime address shall"}]}