{"sha": "b47f8cfcfc9a9c198ce1450359965f37bed2e0c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ3ZjhjZmNmYzlhOWMxOThjZTE0NTAzNTk5NjVmMzdiZWQyZTBjOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-06-07T11:23:34Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-06-07T11:23:34Z"}, "message": "Thu Jun  7 13:20:14 CEST 2001  Jan Hubicka  <jh@suse.cz>\n\n\t* expr.c (copy_blkmode_from_reg): Fix operand_subword_force call.\n\nThu Jun  7 12:12:58 CEST 2001  Jan Hubicka  <jh@suse.cz>\n\n\t* toplev.c (rest_of_compilation): Call split_all_insns\n\tbefore reg-stack and shorten-branches. Do shorten-branches\n\tafter reg-stack.\n\t* final.c (shorten_branches): Remove insn splitting code.\n\nFrom-SVN: r42956", "tree": {"sha": "f98f1cc50930ff0dd1201a73f76eb698d5d8683c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f98f1cc50930ff0dd1201a73f76eb698d5d8683c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/comments", "author": null, "committer": null, "parents": [{"sha": "43160d015f6a0d6657b2ad4e06a242918a4006c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43160d015f6a0d6657b2ad4e06a242918a4006c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43160d015f6a0d6657b2ad4e06a242918a4006c8"}], "stats": {"total": 61, "additions": 28, "deletions": 33}, "files": [{"sha": "199f94d8591f81598cde6288cd1d4472ce003350", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b47f8cfcfc9a9c198ce1450359965f37bed2e0c9", "patch": "@@ -1,3 +1,14 @@\n+Thu Jun  7 13:20:14 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* expr.c (copy_blkmode_from_reg): Fix operand_subword_force call.\n+\n+Thu Jun  7 12:12:58 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* toplev.c (rest_of_compilation): Call split_all_insns\n+\tbefore reg-stack and shorten-branches. Do shorten-branches\n+\tafter reg-stack.\n+\t* final.c (shorten_branches): Remove insn splitting code.\n+\n 2001-06-07  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* configure.in (sparc*-*-*): Check assembler R_SPARC_UA32 support."}, {"sha": "aaaab7a32f69bd10e408531cd608cdfe9ba5619e", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b47f8cfcfc9a9c198ce1450359965f37bed2e0c9", "patch": "@@ -2200,7 +2200,8 @@ copy_blkmode_from_reg (tgtblk, srcreg, type)\n \t (the first time through).  */\n       if (xbitpos % BITS_PER_WORD == 0\n \t  || xbitpos == big_endian_correction)\n-\tsrc = operand_subword_force (srcreg, xbitpos / BITS_PER_WORD, BLKmode);\n+\tsrc = operand_subword_force (srcreg, xbitpos / BITS_PER_WORD,\n+\t\t\t\t     GET_MODE (srcreg));\n \n       /* We need a new destination operand each time bitpos is on\n \t a word boundary.  */"}, {"sha": "a3fe70d61cbf28d5b0e1143aada970b17b9addf5", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=b47f8cfcfc9a9c198ce1450359965f37bed2e0c9", "patch": "@@ -960,26 +960,6 @@ shorten_branches (first)\n   int uid;\n   rtx align_tab[MAX_CODE_ALIGN];\n \n-  /* In order to make sure that all instructions have valid length info,\n-     we must split them before we compute the address/length info.  */\n-\n-  for (insn = NEXT_INSN (first); insn; insn = NEXT_INSN (insn))\n-    if (INSN_P (insn))\n-      {\n-\trtx old = insn;\n-\t/* Don't split the insn if it has been deleted.  */\n-\tif (! INSN_DELETED_P (old))\n-\t  insn = try_split (PATTERN (old), old, 1);\n-\t/* When not optimizing, the old insn will be still left around\n-\t   with only the 'deleted' bit set.  Transform it into a note\n-\t   to avoid confusion of subsequent processing.  */\n-\tif (INSN_DELETED_P (old))\n-\t  {\n-\t    PUT_CODE (old, NOTE);\n-\t    NOTE_LINE_NUMBER (old) = NOTE_INSN_DELETED;\n-\t    NOTE_SOURCE_FILE (old) = 0;\n-\t  }\n-      }\n #endif\n \n   /* We must do some computations even when not actually shortening, in"}, {"sha": "0e197cc2581de7ef80fa7d43947acaad50810ed5", "filename": "gcc/toplev.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47f8cfcfc9a9c198ce1450359965f37bed2e0c9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=b47f8cfcfc9a9c198ce1450359965f37bed2e0c9", "patch": "@@ -3685,18 +3685,16 @@ rest_of_compilation (decl)\n     }\n #endif\n \n-#ifndef STACK_REGS\n-  /* ??? Do this before shorten branches so that we aren't creating\n-     insns too late and fail sanity checks in final. */\n-  convert_to_eh_region_ranges ();\n-#endif\n-\n-  /* Shorten branches.\n-\n-     Note this must run before reg-stack because of death note (ab)use\n-     in the ia32 backend.  */\n   timevar_push (TV_SHORTEN_BRANCH);\n-  shorten_branches (get_insns ());\n+  if (0\n+#ifdef HAVE_ATTR_length\n+      || 1\n+#endif\n+#ifdef STACK_REGS\n+      || 1\n+#endif\n+      )\n+    split_all_insns (0);\n   timevar_pop (TV_SHORTEN_BRANCH);\n \n #ifdef STACK_REGS\n@@ -3709,9 +3707,14 @@ rest_of_compilation (decl)\n   timevar_pop (TV_REG_STACK);\n \n   ggc_collect ();\n+#endif\n \n   convert_to_eh_region_ranges ();\n-#endif\n+\n+  /* Shorten branches.  */\n+  timevar_push (TV_SHORTEN_BRANCH);\n+  shorten_branches (get_insns ());\n+  timevar_pop (TV_SHORTEN_BRANCH);\n \n   current_function_nothrow = nothrow_function_p ();\n   if (current_function_nothrow)"}]}