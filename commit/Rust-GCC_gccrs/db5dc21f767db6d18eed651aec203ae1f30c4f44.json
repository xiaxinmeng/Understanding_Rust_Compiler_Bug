{"sha": "db5dc21f767db6d18eed651aec203ae1f30c4f44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI1ZGMyMWY3NjdkYjZkMThlZWQ2NTFhZWMyMDNhZTFmMzBjNGY0NA==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-03-09T02:45:20Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-03-09T02:45:20Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r425", "tree": {"sha": "6cc523d6f703de9de2ed98cb8ffb287b1a29a73d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cc523d6f703de9de2ed98cb8ffb287b1a29a73d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db5dc21f767db6d18eed651aec203ae1f30c4f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db5dc21f767db6d18eed651aec203ae1f30c4f44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db5dc21f767db6d18eed651aec203ae1f30c4f44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db5dc21f767db6d18eed651aec203ae1f30c4f44/comments", "author": null, "committer": null, "parents": [{"sha": "d7cce3adb8759d3732a8ddf6b460f1cbfc014576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7cce3adb8759d3732a8ddf6b460f1cbfc014576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7cce3adb8759d3732a8ddf6b460f1cbfc014576"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "b75f27f13b6892d21e7cea1d66ef2b469f0e2c49", "filename": "gcc/config/i386/sco.h", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db5dc21f767db6d18eed651aec203ae1f30c4f44/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db5dc21f767db6d18eed651aec203ae1f30c4f44/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=db5dc21f767db6d18eed651aec203ae1f30c4f44", "patch": "@@ -8,9 +8,9 @@\n /* Use crt1.o as a startup file and crtn.o as a closing file.  */\n \n #undef STARTFILE_SPEC\n-#define STARTFILE_SPEC  \"%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}\"\n+#define STARTFILE_SPEC  \"%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}} crtbegin.o%s\"\n \n-#define ENDFILE_SPEC \"crtn.o%s\"\n+#define ENDFILE_SPEC \"crtend.o%s crtn.o%s\"\n \n /* Library spec, including SCO international language support. */\n \n@@ -23,6 +23,7 @@\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dunix -Di386 -DM_UNIX -DM_I386 -DM_COFF -DM_WORDSWAP\"\n \n+#undef CPP_SPEC\n #define CPP_SPEC \"%{scointl:-DM_INTERNAT}\"\n \n /* Use atexit for static destructors, instead of defining\n@@ -46,3 +47,17 @@\n \t\t     && GET_MODE_UNIT_SIZE (MODE) <= 8)\t\t\t\\\n    : (MODE) != QImode)\n #endif\n+\n+/* caller has to pop the extra argument passed to functions that return\n+   structures. */\n+\n+#undef RETURN_POPS_ARGS\n+#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+  (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\\\n+   : (TARGET_RTD\t\t\t\t\t\t\\\n+      && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n+\t  || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\\n+\t      == void_type_node))) ? (SIZE)\t\t\t\\\n+   : 0)\n+/* On other 386 systems, the last line looks like this:\n+   : (aggregate_value_p (FUNTYPE)) ? GET_MODE_SIZE (Pmode) : 0)  */"}]}