{"sha": "7445de0a7b7dceda90638c48bc7933271f3ca5ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0NWRlMGE3YjdkY2VkYTkwNjM4YzQ4YmM3OTMzMjcxZjNjYTVjZQ==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2006-10-26T03:16:11Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2006-10-26T03:16:11Z"}, "message": "pex-win32.c (argv_to_cmdline): Replace xmalloc with XNEWVEC.\n\n\t(find_executable): Likewise.\n\t(win32_spawn): Cast alloca return to (char**).\n\tReplace malloc with XNEWVEC.\n\tbcopy.c (bcopy): Add explict casts in assignments.\n\nFrom-SVN: r118058", "tree": {"sha": "b9531f4e002ae77498330923913f89208814a92c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9531f4e002ae77498330923913f89208814a92c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7445de0a7b7dceda90638c48bc7933271f3ca5ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7445de0a7b7dceda90638c48bc7933271f3ca5ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7445de0a7b7dceda90638c48bc7933271f3ca5ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7445de0a7b7dceda90638c48bc7933271f3ca5ce/comments", "author": null, "committer": null, "parents": [{"sha": "0da67a3234a3bf9c2fc3458ea6a1861303f1364d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da67a3234a3bf9c2fc3458ea6a1861303f1364d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da67a3234a3bf9c2fc3458ea6a1861303f1364d"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "7d1c2c90193dbaac800a3c41b0ca76ef37d1c75a", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7445de0a7b7dceda90638c48bc7933271f3ca5ce/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7445de0a7b7dceda90638c48bc7933271f3ca5ce/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=7445de0a7b7dceda90638c48bc7933271f3ca5ce", "patch": "@@ -1,3 +1,11 @@\n+2006-10-26  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tpex-win32.c (argv_to_cmdline): Replace xmalloc with XNEWVEC.\n+\t(find_executable): Likewise.\n+\t(win32_spawn): Cast alloca return to (char**).\n+\tReplace malloc with XNEWVEC.\n+\tbcopy.c (bcopy): Add explict casts in assignments.\n+\n 2006-10-25  Ben Elliston  <bje@au.ibm.com>\n \n \t* pexecute.txh: Wrap pexecute's \"flag\" argument with @var {..}."}, {"sha": "f9b7a8acd5c72bbd870789f44124135bad5a06ab", "filename": "libiberty/bcopy.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7445de0a7b7dceda90638c48bc7933271f3ca5ce/libiberty%2Fbcopy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7445de0a7b7dceda90638c48bc7933271f3ca5ce/libiberty%2Fbcopy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fbcopy.c?ref=7445de0a7b7dceda90638c48bc7933271f3ca5ce", "patch": "@@ -16,8 +16,8 @@ bcopy (const void *src, void *dest, size_t len)\n {\n   if (dest < src)\n     {\n-      const char *firsts = src;\n-      char *firstd = dest;\n+      const char *firsts = (const char *) src;\n+      char *firstd = (char *) dest;\n       while (len--)\n \t*firstd++ = *firsts++;\n     }"}, {"sha": "90a9ed1f95051f4510c3ef8156e9203766fadda9", "filename": "libiberty/pex-win32.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7445de0a7b7dceda90638c48bc7933271f3ca5ce/libiberty%2Fpex-win32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7445de0a7b7dceda90638c48bc7933271f3ca5ce/libiberty%2Fpex-win32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-win32.c?ref=7445de0a7b7dceda90638c48bc7933271f3ca5ce", "patch": "@@ -1,6 +1,6 @@\n /* Utilities to execute a program in a subprocess (possibly linked by pipes\n    with other subprocesses), and wait for it.  Generic Win32 specialization.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006\n    Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n@@ -358,7 +358,7 @@ argv_to_cmdline (char *const *argv)\n       cmdline_len += j;\n       cmdline_len += 3;  /* for leading and trailing quotes and space */\n     }\n-  cmdline = xmalloc (cmdline_len);\n+  cmdline = XNEWVEC (char, cmdline_len);\n   p = cmdline;\n   for (i = 0; argv[i]; i++)\n     {\n@@ -433,7 +433,7 @@ find_executable (const char *program, BOOL search)\n \tq++;\n     }\n   fe_len = fe_len + 1 + proglen + (has_extension ? 1 : 5);\n-  full_executable = xmalloc (fe_len);\n+  full_executable = XNEWVEC (char, fe_len);\n \n   p = path;\n   do\n@@ -557,14 +557,14 @@ win32_spawn (const char *executable,\n     \n           /* Windows needs the members of the block to be sorted by variable\n              name.  */\n-          env_copy = alloca (sizeof (char *) * env_size);\n+          env_copy = (char **) alloca (sizeof (char *) * env_size);\n           memcpy (env_copy, env, sizeof (char *) * env_size);\n           qsort (env_copy, env_size, sizeof (char *), env_compare);\n     \n           for (var = 0; var < env_size; var++)\n             total_size += strlen (env[var]) + 1;\n     \n-          env_block = malloc (total_size);\n+          env_block = XNEWVEC (char, total_size);\n           bufptr = env_block;\n           for (var = 0; var < env_size; var++)\n             bufptr = stpcpy (bufptr, env_copy[var]) + 1;"}]}