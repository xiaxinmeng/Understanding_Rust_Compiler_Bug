{"sha": "3aac38d70cbb15e40c377d39dd612df4d16ad259", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FhYzM4ZDcwY2JiMTVlNDBjMzc3ZDM5ZGQ2MTJkZjRkMTZhZDI1OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-11-21T07:39:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-11-21T07:39:52Z"}, "message": "parse.y (yyparse_1): Rename the parser entry point.\n\n        * cp/parse.y (yyparse_1): Rename the parser entry point.\n\n        * c-lex.c (orig_filename): New variable.\n        (init_c_lex): Set it.  Move call to cpp_start_read ...\n        (yyparse): ... here.  New function.\n        * c-parse.in (yyparse_1): Rename the parser entry point.\n        * c-tree.h: Declare it.\n\nFrom-SVN: r37607", "tree": {"sha": "bf302f0b96b0df7401aed3a7535da9fbf23c5932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf302f0b96b0df7401aed3a7535da9fbf23c5932"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aac38d70cbb15e40c377d39dd612df4d16ad259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aac38d70cbb15e40c377d39dd612df4d16ad259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aac38d70cbb15e40c377d39dd612df4d16ad259", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aac38d70cbb15e40c377d39dd612df4d16ad259/comments", "author": null, "committer": null, "parents": [{"sha": "66bc5940f137cfe9a38e37c2619189604fd246b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66bc5940f137cfe9a38e37c2619189604fd246b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66bc5940f137cfe9a38e37c2619189604fd246b7"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "ed6b6fe243525323868d33653afc5b0e0c9a2fd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3aac38d70cbb15e40c377d39dd612df4d16ad259", "patch": "@@ -1,3 +1,11 @@\n+2000-11-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* c-lex.c (orig_filename): New variable.\n+\t(init_c_lex): Set it.  Move call to cpp_start_read ...\n+\t(yyparse): ... here.  New function.\n+\t* c-parse.in (yyparse_1): Rename the parser entry point.\n+\t* c-tree.h: Declare it.\n+\n 2000-11-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expr.c (do_compare_and_jump): If op0 was replaced by promoted"}, {"sha": "4f9b8cc7e01e645308099c72c9071971c2de3209", "filename": "gcc/c-lex.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=3aac38d70cbb15e40c377d39dd612df4d16ad259", "patch": "@@ -60,6 +60,9 @@ extern cpp_reader  parse_in;\n FILE *finput;\n #endif\n \n+/* The original file name, before changing \"-\" to \"stdin\".  */\n+static const char *orig_filename;\n+\n /* Private idea of the line number.  See discussion in c_lex().  */\n static int lex_lineno;\n \n@@ -170,6 +173,8 @@ init_c_lex (filename)\n {\n   struct c_fileinfo *toplevel;\n \n+  orig_filename = filename;\n+\n   /* Set up filename timing.  Must happen before cpp_start_read.  */\n   file_info_tree = splay_tree_new ((splay_tree_compare_fn)strcmp,\n \t\t\t\t   0,\n@@ -214,9 +219,6 @@ init_c_lex (filename)\n   /* Make sure parse_in.digraphs matches flag_digraphs.  */\n   CPP_OPTION (&parse_in, digraphs) = flag_digraphs;\n \n-  if (! cpp_start_read (&parse_in, filename))\n-    exit (FATAL_EXIT_CODE);\t/* cpplib has emitted an error.  */\n-\n   if (filename == 0 || !strcmp (filename, \"-\"))\n     filename = \"stdin\";\n #endif\n@@ -232,6 +234,18 @@ init_c_lex (filename)\n   return filename;\n }\n \n+/* A thin wrapper around the real parser that initializes the \n+   integrated preprocessor after debug output has been initialized.  */\n+\n+int\n+yyparse()\n+{\n+  if (! cpp_start_read (&parse_in, orig_filename))\n+    return 1;\t\t\t/* cpplib has emitted an error.  */\n+\n+  return yyparse_1();\n+}\n+\n struct c_fileinfo *\n get_fileinfo (name)\n      const char *name;"}, {"sha": "5943fa4024a0ae72c0a7a1542248e7be7a40a982", "filename": "gcc/c-parse.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=3aac38d70cbb15e40c377d39dd612df4d16ad259", "patch": "@@ -72,8 +72,11 @@ end ifc\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n \n-/* Cause the `yydebug' variable to be defined.  */\n+/* Cause the \"yydebug\" variable to be defined.  */\n #define YYDEBUG 1\n+\n+/* Rename the \"yyparse\" function so that we can override it elsewhere.  */\n+#define yyparse yyparse_1\n %}\n \n %start program"}, {"sha": "41a6075c184f7777e54c15739175382f35478ee5", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=3aac38d70cbb15e40c377d39dd612df4d16ad259", "patch": "@@ -154,6 +154,7 @@ extern tree lookup_objc_ivar\t\t\tPARAMS ((tree));\n \f\n /* in c-parse.in */\n extern void c_parse_init\t\t\tPARAMS ((void));\n+extern int yyparse_1\t\t\t\tPARAMS ((void));\n \n /* in c-aux-info.c */\n extern void gen_aux_info_record                 PARAMS ((tree, int, int, int));"}, {"sha": "bc73be5a6f4992570dd75fa0e678224b29ba82b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3aac38d70cbb15e40c377d39dd612df4d16ad259", "patch": "@@ -1,4 +1,8 @@\n-2000-11-16  Alex Samuel  <samuel@codesourcery.com>\n+2000-11-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* parse.y (yyparse_1): Rename the parser entry point.\n+\n+2000-11-20  Alex Samuel  <samuel@codesourcery.com>\n \n \t* mangle.c (write_name): Use <unscoped-name> for names directly in\n \tfunction scope."}, {"sha": "d55f1b9f058f5106e108d60ebf62a78e837a608a", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aac38d70cbb15e40c377d39dd612df4d16ad259/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=3aac38d70cbb15e40c377d39dd612df4d16ad259", "patch": "@@ -214,6 +214,9 @@ cp_parse_init ()\n   ggc_add_tree_root (&current_enum_type, 1);\n   ggc_add_tree_root (&saved_scopes, 1);\n }\n+\n+/* Rename the \"yyparse\" function so that we can override it elsewhere.  */\n+#define yyparse yyparse_1\n %}\n \n %start program"}]}