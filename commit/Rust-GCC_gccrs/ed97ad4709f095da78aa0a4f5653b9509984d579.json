{"sha": "ed97ad4709f095da78aa0a4f5653b9509984d579", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ5N2FkNDcwOWYwOTVkYTc4YWEwYTRmNTY1M2I5NTA5OTg0ZDU3OQ==", "commit": {"author": {"name": "Ganesh Gopalasubramanian", "email": "Ganesh.Gopalasubramanian@amd.com", "date": "2013-11-18T09:25:21Z"}, "committer": {"name": "Ganesh Gopalasubramanian", "email": "gganesh@gcc.gnu.org", "date": "2013-11-18T09:25:21Z"}, "message": "AMD bdver4 enablement\n\nFrom-SVN: r204939", "tree": {"sha": "9f7a7cf7f1b537666804815feb73b7f92593f5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f7a7cf7f1b537666804815feb73b7f92593f5da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed97ad4709f095da78aa0a4f5653b9509984d579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed97ad4709f095da78aa0a4f5653b9509984d579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed97ad4709f095da78aa0a4f5653b9509984d579", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed97ad4709f095da78aa0a4f5653b9509984d579/comments", "author": {"login": "ganeshgit", "id": 5275884, "node_id": "MDQ6VXNlcjUyNzU4ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5275884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ganeshgit", "html_url": "https://github.com/ganeshgit", "followers_url": "https://api.github.com/users/ganeshgit/followers", "following_url": "https://api.github.com/users/ganeshgit/following{/other_user}", "gists_url": "https://api.github.com/users/ganeshgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/ganeshgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ganeshgit/subscriptions", "organizations_url": "https://api.github.com/users/ganeshgit/orgs", "repos_url": "https://api.github.com/users/ganeshgit/repos", "events_url": "https://api.github.com/users/ganeshgit/events{/privacy}", "received_events_url": "https://api.github.com/users/ganeshgit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2621c8604391474434d483dace479cb71452f123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2621c8604391474434d483dace479cb71452f123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2621c8604391474434d483dace479cb71452f123"}], "stats": {"total": 427, "additions": 296, "deletions": 131}, "files": [{"sha": "7f97e31708fe3d27e10625af3cc83d63f014d3d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -1,3 +1,34 @@\n+2013-11-12 Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n+\n+\t* config.gcc (i[34567]86-*-linux* | ...): Add bdver4.\n+\t(case ${target}): Add bdver4.\n+\t* config/i386/bdver3.md: Add bdver4.\n+\t* config/i386/driver-i386.c: (host_detect_local_cpu): Let\n+\t-march=native recognize bdver4 processors.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Add\n+\tbdver4 def_and_undef\n+\t* config/i386/i386.c (struct processor_costs bdver4_cost): New.\n+\t(m_BDVER4): New definition.\n+\t(m_AMD_MULTIPLE): Includes m_BDVER4.\n+\t(processor_target_table): Add bdver4 entry.\n+\t(static const char *const cpu_names): Add bdver4 entry.\n+\t(software_prefetching_beneficial_p): Add bdver3.\n+\t(ix86_option_override_internal): Add bdver4 instruction sets.\n+\t(ix86_issue_rate): Add bdver4.\n+\t(ix86_adjust_cost): Add bdver4.\n+\t(ia32_multipass_dfa_lookahead): Add bdver4.\n+\t(enum processor_model): Add M_AMDFAM15H_BDVER4.\n+\t(struct _arch_names_table): Add M_AMDFAM15H_BDVER4.\n+\t(has_dispatch): Add bdver4.\n+\t* config/i386/i386.h (TARGET_BDVER4): New definition.\n+\t(enum target_cpu_default): Add TARGET_CPU_DEFAULT_bdver4.\n+\t(enum processor_type): Add PROCESSOR_BDVER4.\n+\t* config/i386/i386.md (define_attr \"cpu\"): Add bdver4.\n+\t* config/i386/i386.opt (flag_dispatch_scheduler): Add bdver4.\n+\t* gcc/doc/extend.texi: Add details about bdver4.\n+\t* gcc/doc/invoke.texi: Add details about bdver4. Add\n+\tfma4 and fsgsbase for bdver3. Add fma4 for bdver2.\n+\n 2013-11-17  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_move): Use low word of"}, {"sha": "2907018987d866527cd213091fcb4ff07115e0e0", "filename": "gcc/config.gcc", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -1398,7 +1398,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \t\t\tTM_MULTILIB_CONFIG=`echo $TM_MULTILIB_CONFIG | sed 's/^,//'`\n \t\t\tneed_64bit_isa=yes\n \t\t\tcase X\"${with_cpu}\" in\n-\t\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\t\t\t\n+\t\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\t\t\t\n \t\t\t\t;;\n \t\t\tX)\n \t\t\t\tif test x$with_cpu_64 = x; then\n@@ -1407,7 +1407,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \t\t\t\t;;\n \t\t\t*)\n \t\t\t\techo \"Unsupported CPU used in --with-cpu=$with_cpu, supported values:\" 1>&2\n-\t\t\t\techo \"generic atom slm core2 corei7 corei7-avx nocona x86-64 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n+\t\t\t\techo \"generic atom slm core2 corei7 corei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n \t\t\t\texit 1\n \t\t\t\t;;\n \t\t\tesac\n@@ -1519,7 +1519,7 @@ i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \t\ttmake_file=\"$tmake_file i386/t-sol2-64\"\n \t\tneed_64bit_isa=yes\n \t\tcase X\"${with_cpu}\" in\n-\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n+\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n \t\t\t;;\n \t\tX)\n \t\t\tif test x$with_cpu_64 = x; then\n@@ -1528,7 +1528,7 @@ i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n \t\t\t;;\n \t\t*)\n \t\t\techo \"Unsupported CPU used in --with-cpu=$with_cpu, supported values:\" 1>&2\n-\t\t\techo \"generic atom slm core2 corei7 corei7-avx nocona x86-64 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n+\t\t\techo \"generic atom slm core2 corei7 corei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n \t\t\texit 1\n \t\t\t;;\n \t\tesac\n@@ -1604,7 +1604,7 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t\t\tif test x$enable_targets = xall; then\n \t\t\t\ttm_defines=\"${tm_defines} TARGET_BI_ARCH=1\"\n \t\t\t\tcase X\"${with_cpu}\" in\n-\t\t\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n+\t\t\t\tXgeneric|Xatom|Xslm|Xcore2|Xcorei7|Xcorei7-avx|Xnocona|Xx86-64|Xbdver4|Xbdver3|Xbdver2|Xbdver1|Xbtver2|Xbtver1|Xamdfam10|Xbarcelona|Xk8|Xopteron|Xathlon64|Xathlon-fx|Xathlon64-sse3|Xk8-sse3|Xopteron-sse3)\n \t\t\t\t\t;;\n \t\t\t\tX)\n \t\t\t\t\tif test x$with_cpu_64 = x; then\n@@ -1613,7 +1613,7 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t\t\t\t\t;;\n \t\t\t\t*)\n \t\t\t\t\techo \"Unsupported CPU used in --with-cpu=$with_cpu, supported values:\" 1>&2\n-\t\t\t\t\techo \"generic atom slm core2 corei7 Xcorei7-avx nocona x86-64 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n+\t\t\t\t\techo \"generic atom slm core2 corei7 Xcorei7-avx nocona x86-64 bdver4 bdver3 bdver2 bdver1 btver2 btver1 amdfam10 barcelona k8 opteron athlon64 athlon-fx athlon64-sse3 k8-sse3 opteron-sse3\" 1>&2\n \t\t\t\t\texit 1\n \t\t\t\t\t;;\n \t\t\t\tesac\n@@ -2911,6 +2911,10 @@ case ${target} in\n     ;;\n   i686-*-* | i786-*-*)\n     case ${target_noncanonical} in\n+      bdver4-*)\n+        arch=bdver4\n+        cpu=bdver4\n+        ;;\n       bdver3-*)\n         arch=bdver3\n         cpu=bdver3\n@@ -3020,6 +3024,10 @@ case ${target} in\n     ;;\n   x86_64-*-*)\n     case ${target_noncanonical} in\n+      bdver4-*)\n+        arch=bdver4\n+        cpu=bdver4\n+        ;;\n       bdver3-*)\n         arch=bdver3\n         cpu=bdver3\n@@ -3658,9 +3666,10 @@ case \"${target}\" in\n \t\t\t\t;;\n \t\t\t\"\" | x86-64 | generic | native \\\n \t\t\t| k8 | k8-sse3 | athlon64 | athlon64-sse3 | opteron \\\n-\t\t\t| opteron-sse3 | athlon-fx | bdver3 | bdver2 | bdver1 | btver2 \\\n-\t\t\t| btver1 | amdfam10 | barcelona | nocona | core2 | corei7 \\\n-\t\t\t| corei7-avx | core-avx-i | core-avx2 | atom | slm)\n+\t\t\t| opteron-sse3 | athlon-fx | bdver4 | bdver3 | bdver2 \\\n+\t\t\t| bdver1 | btver2 |  btver1 | amdfam10 | barcelona \\\n+\t\t\t| nocona | core2 | corei7 | corei7-avx | core-avx-i \\\n+\t\t\t| core-avx2 | atom | slm)\n \t\t\t\t# OK\n \t\t\t\t;;\n \t\t\t*)"}, {"sha": "019e9291b1b54a6f259ffeaf3bcbe63f6fee08e4", "filename": "gcc/config/i386/bdver3.md", "status": "modified", "additions": 112, "deletions": 112, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fbdver3.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fbdver3.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbdver3.md?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -16,19 +16,19 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n ;;\n-;; AMD bdver3 Scheduling\n+;; AMD bdver3 and bdver4 Scheduling\n ;;\n-;; The bdver3 contains three pipelined FP units and two integer units.\n-;; Fetching and decoding logic is different from previous fam15 processors.\n-;; Fetching is done every two cycles rather than every cycle and\n-;; two decode units are available. The decode units therefore decode\n+;; The bdver3 and bdver4 contains three pipelined FP units and two integer\n+;; units. ;; Fetching and decoding logic is different from previous fam15 \n+;; processors. Fetching is done every two cycles rather than every cycle \n+;; and two decode units are available. The decode units therefore decode\n ;; four instructions in two cycles.\n ;;\n ;; The load/store queue unit is not attached to the schedulers but\n ;; communicates with all the execution units separately instead.\n ;;\n-;; bdver3 belong to fam15 processors. We use the same insn attribute\n-;; that was used for bdver1 decoding scheme.\n+;; bdver3 and bdver4 belong to fam15 processors. We use the same insn \n+;; attribute that was used for bdver1 decoding scheme.\n \n (define_automaton \"bdver3,bdver3_ieu,bdver3_load,bdver3_fp,bdver3_agu\")\n \n@@ -102,370 +102,370 @@\n \n ;; Jump instructions are executed in the branch unit completely transparent to us.\n (define_insn_reservation \"bdver3_call\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"call,callv\"))\n \t\t\t \"bdver3-double,(bdver3-agu | bdver3-ieu),nothing\")\n ;; PUSH mem is double path.\n (define_insn_reservation \"bdver3_push\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"push\"))\n \t\t\t \"bdver3-direct,bdver3-ieu,bdver3-store\")\n ;; POP r16/mem are double path.\n (define_insn_reservation \"bdver3_pop\" 1\n-                         (and (eq_attr \"cpu\" \"bdver3\")\n+                         (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n                               (eq_attr \"type\" \"pop\"))\n                          \"bdver3-direct,bdver3-ivector\")\n ;; LEAVE no latency info so far, assume same with amdfam10.\n (define_insn_reservation \"bdver3_leave\" 3\n-                         (and (eq_attr \"cpu\" \"bdver3\")\n+                         (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n                               (eq_attr \"type\" \"leave\"))\n                          \"bdver3-vector,bdver3-ivector\")\n ;; LEA executes in AGU unit with 1 cycle latency on BDVER3.\n (define_insn_reservation \"bdver3_lea\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"lea\"))\n \t\t\t \"bdver3-direct,bdver3-ieu\")\n ;; MUL executes in special multiplier unit attached to IEU1.\n (define_insn_reservation \"bdver3_imul_DI\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n \t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n \t\t\t \"bdver3-direct,bdver3-ieu1\")\n (define_insn_reservation \"bdver3_imul\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n \t\t\t \"bdver3-direct,bdver3-ieu1\")\n (define_insn_reservation \"bdver3_imul_mem_DI\" 10\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n \t\t\t\t\t(eq_attr \"memory\" \"load,both\"))))\n \t\t\t \"bdver3-direct,bdver3-load,bdver3-ieu1\")\n (define_insn_reservation \"bdver3_imul_mem\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (eq_attr \"memory\" \"load,both\")))\n \t\t\t \"bdver3-direct,bdver3-load,bdver3-ieu1\")\n \n (define_insn_reservation \"bdver3_str\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"str\")\n \t\t\t\t   (eq_attr \"memory\" \"load,both,store\")))\n \t\t\t \"bdver3-vector,bdver3-load,bdver3-ivector\")\n \n ;; Integer instructions.\n (define_insn_reservation \"bdver3_idirect\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"bdver1_decode\" \"direct\")\n \t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n \t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n \t\t\t \"bdver3-direct,(bdver3-ieu|bdver3-agu)\")\n (define_insn_reservation \"bdver3_ivector\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"bdver1_decode\" \"vector\")\n \t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n \t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n \t\t\t \"bdver3-vector,bdver3-ivector\")\n (define_insn_reservation \"bdver3_idirect_loadmov\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"imov\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-load\")\n (define_insn_reservation \"bdver3_idirect_load\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"bdver1_decode\" \"direct\")\n \t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-direct,bdver3-load,bdver3-ieu\")\n (define_insn_reservation \"bdver3_idirect_movstore\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"imov\")\n \t\t\t\t   (eq_attr \"memory\" \"store\")))\n \t\t\t \"bdver3-direct,bdver3-ieu,bdver3-store\")\n (define_insn_reservation \"bdver3_idirect_both\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"bdver1_decode\" \"direct\")\n \t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n \t\t\t\t\t(eq_attr \"memory\" \"both\"))))\n \t\t\t \"bdver3-direct,bdver3-load,\n \t\t\t  bdver3-ieu,bdver3-store,\n \t\t\t  bdver3-store\")\n (define_insn_reservation \"bdver3_idirect_store\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"bdver1_decode\" \"direct\")\n \t\t\t\t   (and (eq_attr \"unit\" \"integer,unknown\")\n \t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n \t\t\t \"bdver3-direct,(bdver3-ieu+bdver3-agu),\n \t\t\t  bdver3-store\")\n ;; BDVER3 floating point units.\n (define_insn_reservation \"bdver3_fldxf\" 13\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fmov\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n \t\t\t\t\t(eq_attr \"mode\" \"XF\"))))\n \t\t\t \"bdver3-vector,bdver3-fpload2,bdver3-fvector*9\")\n (define_insn_reservation \"bdver3_fld\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fmov\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fstxf\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fmov\")\n \t\t\t\t   (and (eq_attr \"memory\" \"store,both\")\n \t\t\t\t\t(eq_attr \"mode\" \"XF\"))))\n \t\t\t \"bdver3-vector,(bdver3-fpsched+bdver3-agu),(bdver3-store2+(bdver3-fvector*6))\")\n (define_insn_reservation \"bdver3_fst\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fmov\")\n \t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n \t\t\t \"bdver3-double,(bdver3-fpsched),(bdver3-fsto+bdver3-store)\")\n (define_insn_reservation \"bdver3_fist\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fistp,fisttp\"))\n \t\t\t \"bdver3-double,(bdver3-fpsched),(bdver3-fsto+bdver3-store)\")\n (define_insn_reservation \"bdver3_fmov_bdver3\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fmov\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fadd_load\" 10\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fop\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fadd\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fop\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fmul_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fmul\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-double,bdver3-fpload,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fmul\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fmul\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fsgn\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fsgn\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fdiv_load\" 42\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fdiv\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fdiv\" 42\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fdiv\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fpspc_load\" 143\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fpspc\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-vector,bdver3-fpload,bdver3-fvector\")\n (define_insn_reservation \"bdver3_fcmov_load\" 17\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fcmov\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-vector,bdver3-fpload,bdver3-fvector\")\n (define_insn_reservation \"bdver3_fcmov\" 15\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fcmov\"))\n \t\t\t \"bdver3-vector,bdver3-fpsched,bdver3-fvector\")\n (define_insn_reservation \"bdver3_fcomi_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fcmp\")\n \t\t\t\t   (and (eq_attr \"bdver1_decode\" \"double\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-ffma | bdver3-fsto)\")\n (define_insn_reservation \"bdver3_fcomi\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"bdver1_decode\" \"double\")\n \t\t\t\t   (eq_attr \"type\" \"fcmp\")))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-ffma | bdver3-fsto)\")\n (define_insn_reservation \"bdver3_fcom_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"fcmp\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fcom\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fcmp\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_fxch\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"fxch\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n \n ;; SSE loads.\n (define_insn_reservation \"bdver3_ssevector_avx128_unaligned_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"prefix\" \"vex\")\n \t\t\t\t\t(and (eq_attr \"movu\" \"1\")\n \t\t\t\t\t     (and (eq_attr \"mode\" \"V4SF,V2DF\")\n \t\t\t\t\t\t  (eq_attr \"memory\" \"load\"))))))\n \t\t\t \"bdver3-direct,bdver3-fpload\")\n (define_insn_reservation \"bdver3_ssevector_avx256_unaligned_load\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"movu\" \"1\")\n \t\t\t\t        (and (eq_attr \"mode\" \"V8SF,V4DF\")\n \t\t\t\t             (eq_attr \"memory\" \"load\")))))\n \t\t\t \"bdver3-double,bdver3-fpload\")\n (define_insn_reservation \"bdver3_ssevector_sse128_unaligned_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"movu\" \"1\")\n \t\t\t\t        (and (eq_attr \"mode\" \"V4SF,V2DF\")\n \t\t\t\t             (eq_attr \"memory\" \"load\")))))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fmal\")\n (define_insn_reservation \"bdver3_ssevector_avx128_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"prefix\" \"vex\")\n \t\t\t\t        (and (eq_attr \"mode\" \"V4SF,V2DF,TI\")\n \t\t\t\t             (eq_attr \"memory\" \"load\")))))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fmal\")\n (define_insn_reservation \"bdver3_ssevector_avx256_load\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF,OI\")\n \t\t\t\t        (eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-double,bdver3-fpload,bdver3-fmal\")\n (define_insn_reservation \"bdver3_ssevector_sse128_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF,V2DF,TI\")\n \t\t\t\t        (eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-direct,bdver3-fpload\")\n (define_insn_reservation \"bdver3_ssescalar_movq_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n \t\t\t\t        (eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fmal\")\n (define_insn_reservation \"bdver3_ssescalar_vmovss_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"prefix\" \"vex\")\n \t\t\t\t        (and (eq_attr \"mode\" \"SF\")\n \t\t\t\t             (eq_attr \"memory\" \"load\")))))\n \t\t\t \"bdver3-direct,bdver3-fpload\")\n (define_insn_reservation \"bdver3_ssescalar_sse128_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n \t\t\t\t        (eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-direct,bdver3-fpload, bdver3-ffma\")\n (define_insn_reservation \"bdver3_mmxsse_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload, bdver3-fmal\")\n \n ;; SSE stores.\n (define_insn_reservation \"bdver3_sse_store_avx256\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF,OI\")\n \t\t\t\t\t(eq_attr \"memory\" \"store,both\"))))\n \t\t\t \"bdver3-double,bdver3-fpsched,((bdver3-fsto+bdver3-store)*2)\")\n (define_insn_reservation \"bdver3_sse_store\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4SF,V2DF,TI\")\n \t\t\t\t\t(eq_attr \"memory\" \"store,both\"))))\n \t\t\t \"bdver3-direct,bdver3-fpsched,((bdver3-fsto+bdver3-store)*2)\")\n (define_insn_reservation \"bdver3_mmxsse_store_short\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n \t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n \t\t\t \"bdver3-direct,bdver3-fpsched,(bdver3-fsto+bdver3-store)\")\n \n ;; Register moves.\n (define_insn_reservation \"bdver3_ssevector_avx256\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF,OI\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-double,bdver3-fpsched,bdver3-fmal\")\n (define_insn_reservation \"bdver3_movss_movsd\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n                                         (eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_mmxssemov\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"mmxmov,ssemov\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-fmal\")\n ;; SSE logs.\n (define_insn_reservation \"bdver3_sselog_load_256\" 7\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sselog,sselog1\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V8SF\")\n \t\t\t\t   (eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-double,bdver3-fpload,bdver3-fmal\")\n (define_insn_reservation \"bdver3_sselog_256\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sselog,sselog1\")\n                                    (eq_attr \"mode\" \"V8SF\")))\n \t\t\t \"bdver3-double,bdver3-fpsched,bdver3-fmal\")\n (define_insn_reservation \"bdver3_sselog_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sselog,sselog1\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fxbar\")\n (define_insn_reservation \"bdver3_sselog\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"sselog,sselog1\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-fxbar\")\n \n ;; SSE Shuffles\n (define_insn_reservation \"bdver3_sseshuf_load_256\" 7\n-                         (and (eq_attr \"cpu\" \"bdver3\")\n+                         (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n                               (and (eq_attr \"type\" \"sseshuf,sseshuf1\")\n                                    (and (eq_attr \"mode\" \"V8SF\")\n                                    (eq_attr \"memory\" \"load\"))))\n                          \"bdver3-double,bdver3-fpload,bdver3-fpshuf\")\n (define_insn_reservation \"bdver3_sseshuf_load\" 6\n-                         (and (eq_attr \"cpu\" \"bdver3\")\n+                         (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n                               (and (eq_attr \"type\" \"sseshuf,sseshuf1\")\n                                    (eq_attr \"memory\" \"load\")))\n                          \"bdver3-direct,bdver3-fpload,bdver3-fpshuf\")\n \n (define_insn_reservation \"bdver3_sseshuf_256\" 3\n-                         (and (eq_attr \"cpu\" \"bdver3\")\n+                         (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n                               (and (eq_attr \"type\" \"sseshuf\")\n                                    (eq_attr \"mode\" \"V8SF\")))\n                          \"bdver3-double,bdver3-fpsched,bdver3-fpshuf\")\n (define_insn_reservation \"bdver3_sseshuf\" 2\n-                         (and (eq_attr \"cpu\" \"bdver3\")\n+                         (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n                               (eq_attr \"type\" \"sseshuf,sseshuf1\"))\n                          \"bdver3-direct,bdver3-fpsched,bdver3-fpshuf\")\n \n ;; PCMP actually executes in FMAL.\n (define_insn_reservation \"bdver3_ssecmp_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-ffma\")\n (define_insn_reservation \"bdver3_ssecmp\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"ssecmp\"))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_ssecomi_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecomi\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-ffma | bdver3-fsto)\")\n (define_insn_reservation \"bdver3_ssecomi\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (eq_attr \"type\" \"ssecomi\"))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-ffma | bdver3-fsto)\")\n \n@@ -474,7 +474,7 @@\n \n ;; 256 bit conversion.\n (define_insn_reservation \"bdver3_vcvtX2Y_avx256_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n \t\t\t\t\t(ior (ior (match_operand:V4DF 0 \"register_operand\")\n@@ -485,7 +485,7 @@\n \t\t\t\t\t\t       (match_operand:V8SI 1 \"nonimmediate_operand\")))))))\n \t\t\t \"bdver3-vector,bdver3-fpload,bdver3-fvector\")\n (define_insn_reservation \"bdver3_vcvtX2Y_avx256\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"none\")\n \t\t\t\t\t(ior (ior (match_operand:V4DF 0 \"register_operand\")\n@@ -497,56 +497,56 @@\n \t\t\t \"bdver3-vector,bdver3-fpsched,bdver3-fvector\")\n ;; CVTSS2SD, CVTSD2SS.\n (define_insn_reservation \"bdver3_ssecvt_cvtss2sd_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fcvt\")\n (define_insn_reservation \"bdver3_ssecvt_cvtss2sd\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-fcvt\")\n ;; CVTSI2SD, CVTSI2SS, CVTSI2SDQ, CVTSI2SSQ.\n (define_insn_reservation \"bdver3_sseicvt_cvtsi2sd_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sseicvt\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fcvt\")\n (define_insn_reservation \"bdver3_sseicvt_cvtsi2sd\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sseicvt\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF,DF\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-double,bdver3-fpsched,(nothing | bdver3-fcvt)\")\n ;; CVTPD2PS.\n (define_insn_reservation \"bdver3_ssecvt_cvtpd2ps_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n                                         (and (match_operand:V4SF 0 \"register_operand\")\n \t\t\t\t\t     (match_operand:V2DF 1 \"nonimmediate_operand\")))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-fxbar | bdver3-fcvt)\")\n (define_insn_reservation \"bdver3_ssecvt_cvtpd2ps\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"none\")\n                                         (and (match_operand:V4SF 0 \"register_operand\")\n \t\t\t\t\t     (match_operand:V2DF 1 \"nonimmediate_operand\")))))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-fxbar | bdver3-fcvt)\")\n ;; CVTPI2PS, CVTDQ2PS.\n (define_insn_reservation \"bdver3_ssecvt_cvtdq2ps_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n                                         (and (match_operand:V4SF 0 \"register_operand\")\n \t\t\t\t\t     (ior (match_operand:V2SI 1 \"nonimmediate_operand\")\n \t\t\t\t\t          (match_operand:V4SI 1 \"nonimmediate_operand\"))))))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fcvt\")\n (define_insn_reservation \"bdver3_ssecvt_cvtdq2ps\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"none\")\n                                         (and (match_operand:V4SF 0 \"register_operand\")\n@@ -555,30 +555,30 @@\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-fcvt\")\n ;; CVTDQ2PD.\n (define_insn_reservation \"bdver3_ssecvt_cvtdq2pd_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n                                         (and (match_operand:V2DF 0 \"register_operand\")\n \t\t\t\t\t     (match_operand:V4SI 1 \"nonimmediate_operand\")))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-fxbar | bdver3-fcvt)\")\n (define_insn_reservation \"bdver3_ssecvt_cvtdq2pd\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"none\")\n                                         (and (match_operand:V2DF 0 \"register_operand\")\n \t\t\t\t\t     (match_operand:V4SI 1 \"nonimmediate_operand\")))))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-fxbar | bdver3-fcvt)\")\n ;; CVTPS2PD, CVTPI2PD.\n (define_insn_reservation \"bdver3_ssecvt_cvtps2pd_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n                                         (and (match_operand:V2DF 0 \"register_operand\")\n \t\t\t\t\t     (ior (match_operand:V2SI 1 \"nonimmediate_operand\")\n \t\t\t\t\t          (match_operand:V4SF 1 \"nonimmediate_operand\"))))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-fxbar | bdver3-fcvt)\")\n (define_insn_reservation \"bdver3_ssecvt_cvtps2pd\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n                                         (and (match_operand:V2DF 0 \"register_operand\")\n@@ -587,58 +587,58 @@\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-fxbar | bdver3-fcvt)\")\n ;; CVTSD2SI, CVTSD2SIQ, CVTSS2SI, CVTSS2SIQ, CVTTSD2SI, CVTTSD2SIQ, CVTTSS2SI, CVTTSS2SIQ.\n (define_insn_reservation \"bdver3_ssecvt_cvtsX2si_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sseicvt\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SI,DI\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-fcvt | bdver3-fsto)\")\n (define_insn_reservation \"bdver3_ssecvt_cvtsX2si\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sseicvt\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SI,DI\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-fcvt | bdver3-fsto)\")\n ;; CVTPD2PI, CVTTPD2PI.\n (define_insn_reservation \"bdver3_ssecvt_cvtpd2pi_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n \t\t\t\t        (and (match_operand:V2DF 1 \"nonimmediate_operand\")\n \t\t\t\t\t     (match_operand:V2SI 0 \"register_operand\")))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-fcvt | bdver3-fxbar)\")\n (define_insn_reservation \"bdver3_ssecvt_cvtpd2pi\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"none\")\n \t\t\t\t        (and (match_operand:V2DF 1 \"nonimmediate_operand\")\n \t\t\t\t\t     (match_operand:V2SI 0 \"register_operand\")))))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-fcvt | bdver3-fxbar)\")\n ;; CVTPD2DQ, CVTTPD2DQ.\n (define_insn_reservation \"bdver3_ssecvt_cvtpd2dq_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"load\")\n \t\t\t\t        (and (match_operand:V2DF 1 \"nonimmediate_operand\")\n \t\t\t\t\t     (match_operand:V4SI 0 \"register_operand\")))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-fcvt | bdver3-fxbar)\")\n (define_insn_reservation \"bdver3_ssecvt_cvtpd2dq\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"none\")\n \t\t\t\t        (and (match_operand:V2DF 1 \"nonimmediate_operand\")\n \t\t\t\t\t     (match_operand:V4SI 0 \"register_operand\")))))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-fcvt | bdver3-fxbar)\")\n ;; CVTPS2PI, CVTTPS2PI, CVTPS2DQ, CVTTPS2DQ.\n (define_insn_reservation \"bdver3_ssecvt_cvtps2pi_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n                                    (and (eq_attr \"memory\" \"load\")\n \t\t\t\t        (and (match_operand:V4SF 1 \"nonimmediate_operand\")\n \t\t\t\t             (ior (match_operand: V2SI 0 \"register_operand\")\n \t\t\t\t\t\t  (match_operand: V4SI 0 \"register_operand\"))))))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fcvt\")\n (define_insn_reservation \"bdver3_ssecvt_cvtps2pi\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (and (eq_attr \"memory\" \"none\")\n \t\t\t\t        (and (match_operand:V4SF 1 \"nonimmediate_operand\")\n@@ -648,100 +648,100 @@\n \n ;; SSE MUL, ADD, and MULADD.\n (define_insn_reservation \"bdver3_ssemuladd_load_256\" 11\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemul,sseadd,sseadd1,ssemuladd\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-double,bdver3-fpload,bdver3-ffma\")\n (define_insn_reservation \"bdver3_ssemuladd_256\" 7\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemul,sseadd,sseadd1,ssemuladd\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V8SF,V4DF\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-double,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_ssemuladd_load\" 10\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemul,sseadd,sseadd1,ssemuladd\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-ffma\")\n (define_insn_reservation \"bdver3_ssemuladd\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssemul,sseadd,sseadd1,ssemuladd\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-ffma\")\n (define_insn_reservation \"bdver3_sseimul_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sseimul\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fmma\")\n (define_insn_reservation \"bdver3_sseimul\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sseimul\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-fmma\")\n (define_insn_reservation \"bdver3_sseiadd_load\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sseiadd\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"bdver3-direct,bdver3-fpload,bdver3-fmal\")\n (define_insn_reservation \"bdver3_sseiadd\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"sseiadd\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"bdver3-direct,bdver3-fpsched,bdver3-fmal\")\n \n ;; SSE DIV: no throughput information (assume same as amdfam10).\n (define_insn_reservation \"bdver3_ssediv_double_load_256\" 27\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4DF\")\n \t\t\t\t        (eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-ffma0*17 | bdver3-ffma1*17)\")\n (define_insn_reservation \"bdver3_ssediv_double_256\" 27\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V4DF\")\n \t\t\t\t        (eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-ffma0*17 | bdver3-ffma1*17)\")\n (define_insn_reservation \"bdver3_ssediv_single_load_256\" 27\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V8SF\")\n \t\t\t\t        (eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-double,bdver3-fpload,(bdver3-ffma0*17 | bdver3-ffma1*17)\")\n (define_insn_reservation \"bdver3_ssediv_single_256\" 24\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (and (eq_attr \"mode\" \"V8SF\")\n \t\t\t\t        (eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-double,bdver3-fpsched,(bdver3-ffma0*17 | bdver3-ffma1*17)\")\n (define_insn_reservation \"bdver3_ssediv_double_load\" 27\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DF,V2DF\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-direct,bdver3-fpload,(bdver3-ffma0*17 | bdver3-ffma1*17)\")\n (define_insn_reservation \"bdver3_ssediv_double\" 27\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (and (eq_attr \"mode\" \"DF,V2DF\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-direct,bdver3-fpsched,(bdver3-ffma0*17 | bdver3-ffma1*17)\")\n (define_insn_reservation \"bdver3_ssediv_single_load\" 27 \n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF,V4SF\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"bdver3-direct,bdver3-fpload,(bdver3-ffma0*17 | bdver3-ffma1*17)\")\n (define_insn_reservation \"bdver3_ssediv_single\" 24\n-\t\t\t (and (eq_attr \"cpu\" \"bdver3\")\n+\t\t\t (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (and (eq_attr \"mode\" \"SF,V4SF\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"bdver3-direct,bdver3-fpsched,(bdver3-ffma0*17 | bdver3-ffma1*17)\")\n \n (define_insn_reservation \"bdver3_sseins\" 3\n-                         (and (eq_attr \"cpu\" \"bdver3\")\n+                         (and (eq_attr \"cpu\" \"bdver3,bdver4\")\n                               (and (eq_attr \"type\" \"sseins\")\n                                    (eq_attr \"mode\" \"TI\")))\n                          \"bdver3-direct,bdver3-fpsched,bdver3-fxbar\")"}, {"sha": "a4a1f40548a28866a796e4bff037ae33dcb78cea", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -550,6 +550,8 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \tprocessor = PROCESSOR_GEODE;\n       else if (has_movbe)\n \tprocessor = PROCESSOR_BTVER2;\n+      else if (has_avx2)\n+        processor = PROCESSOR_BDVER4;\n       else if (has_xsaveopt)\n         processor = PROCESSOR_BDVER3;\n       else if (has_bmi)\n@@ -772,6 +774,9 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n     case PROCESSOR_BDVER3:\n       cpu = \"bdver3\";\n       break;\n+    case PROCESSOR_BDVER4:\n+      cpu = \"bdver4\";\n+      break;\n     case PROCESSOR_BTVER1:\n       cpu = \"btver1\";\n       break;"}, {"sha": "18c2929d10f005c8b85d4fd1c17321fcbdaddd78", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -117,6 +117,10 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       def_or_undef (parse_in, \"__bdver3\");\n       def_or_undef (parse_in, \"__bdver3__\");\n       break;\n+    case PROCESSOR_BDVER4:\n+      def_or_undef (parse_in, \"__bdver4\");\n+      def_or_undef (parse_in, \"__bdver4__\");\n+      break;\n     case PROCESSOR_BTVER1:\n       def_or_undef (parse_in, \"__btver1\");\n       def_or_undef (parse_in, \"__btver1__\");\n@@ -224,6 +228,9 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_BDVER3:\n       def_or_undef (parse_in, \"__tune_bdver3__\");\n       break;\n+    case PROCESSOR_BDVER4:\n+      def_or_undef (parse_in, \"__tune_bdver4__\");\n+      break;\n     case PROCESSOR_BTVER1:\n       def_or_undef (parse_in, \"__tune_btver1__\");\n       break;"}, {"sha": "bb6d15a2b2acf9231defc58b8623331c9340274b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 104, "deletions": 3, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -1161,6 +1161,92 @@ struct processor_costs bdver3_cost = {\n   1,\t\t\t\t\t/* cond_not_taken_branch_cost.  */\n };\n \n+/*  BDVER4 has optimized REP instruction for medium sized blocks, but for\n+    very small blocks it is better to use loop. For large blocks, libcall\n+    can do nontemporary accesses and beat inline considerably.  */\n+static stringop_algs bdver4_memcpy[2] = {\n+  {libcall, {{6, loop, false}, {14, unrolled_loop, false},\n+             {-1, rep_prefix_4_byte, false}}},\n+  {libcall, {{16, loop, false}, {8192, rep_prefix_8_byte, false},\n+             {-1, libcall, false}}}};\n+static stringop_algs bdver4_memset[2] = {\n+  {libcall, {{8, loop, false}, {24, unrolled_loop, false},\n+             {2048, rep_prefix_4_byte, false}, {-1, libcall, false}}},\n+  {libcall, {{48, unrolled_loop, false}, {8192, rep_prefix_8_byte, false},\n+             {-1, libcall, false}}}};\n+struct processor_costs bdver4_cost = {\n+  COSTS_N_INSNS (1),\t\t\t/* cost of an add instruction */\n+  COSTS_N_INSNS (1),\t\t\t/* cost of a lea instruction */\n+  COSTS_N_INSNS (1),\t\t\t/* variable shift costs */\n+  COSTS_N_INSNS (1),\t\t\t/* constant shift costs */\n+  {COSTS_N_INSNS (4),\t\t\t/* cost of starting multiply for QI */\n+   COSTS_N_INSNS (4),\t\t\t/*\t\t\t\t HI */\n+   COSTS_N_INSNS (4),\t\t\t/*\t\t\t\t SI */\n+   COSTS_N_INSNS (6),\t\t\t/*\t\t\t\t DI */\n+   COSTS_N_INSNS (6)},\t\t\t/*\t\t\t      other */\n+  0,\t\t\t\t\t/* cost of multiply per each bit set */\n+  {COSTS_N_INSNS (19),\t\t\t/* cost of a divide/mod for QI */\n+   COSTS_N_INSNS (35),\t\t\t/*\t\t\t    HI */\n+   COSTS_N_INSNS (51),\t\t\t/*\t\t\t    SI */\n+   COSTS_N_INSNS (83),\t\t\t/*\t\t\t    DI */\n+   COSTS_N_INSNS (83)},\t\t\t/*\t\t\t    other */\n+  COSTS_N_INSNS (1),\t\t\t/* cost of movsx */\n+  COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n+  8,\t\t\t\t\t/* \"large\" insn */\n+  9,\t\t\t\t\t/* MOVE_RATIO */\n+  4,\t\t\t\t     /* cost for loading QImode using movzbl */\n+  {5, 5, 4},\t\t\t\t/* cost of loading integer registers\n+\t\t\t\t\t   in QImode, HImode and SImode.\n+\t\t\t\t\t   Relative to reg-reg move (2).  */\n+  {4, 4, 4},\t\t\t\t/* cost of storing integer registers */\n+  2,\t\t\t\t\t/* cost of reg,reg fld/fst */\n+  {5, 5, 12},\t\t\t\t/* cost of loading fp registers\n+\t\t   \t\t\t   in SFmode, DFmode and XFmode */\n+  {4, 4, 8},\t\t\t\t/* cost of storing fp registers\n+ \t\t   \t\t\t   in SFmode, DFmode and XFmode */\n+  2,\t\t\t\t\t/* cost of moving MMX register */\n+  {4, 4},\t\t\t\t/* cost of loading MMX registers\n+\t\t\t\t\t   in SImode and DImode */\n+  {4, 4},\t\t\t\t/* cost of storing MMX registers\n+\t\t\t\t\t   in SImode and DImode */\n+  2,\t\t\t\t\t/* cost of moving SSE register */\n+  {4, 4, 4},\t\t\t\t/* cost of loading SSE registers\n+\t\t\t\t\t   in SImode, DImode and TImode */\n+  {4, 4, 4},\t\t\t\t/* cost of storing SSE registers\n+\t\t\t\t\t   in SImode, DImode and TImode */\n+  2,\t\t\t\t\t/* MMX or SSE register to integer */\n+  16,\t\t\t\t\t/* size of l1 cache.  */\n+  2048,\t\t\t\t\t/* size of l2 cache.  */\n+  64,\t\t\t\t\t/* size of prefetch block */\n+  /* New AMD processors never drop prefetches; if they cannot be performed\n+     immediately, they are queued.  We set number of simultaneous prefetches\n+     to a large constant to reflect this (it probably is not a good idea not\n+     to limit number of prefetches at all, as their execution also takes some\n+     time).  */\n+  100,\t\t\t\t\t/* number of parallel prefetches */\n+  2,\t\t\t\t\t/* Branch cost */\n+  COSTS_N_INSNS (6),\t\t\t/* cost of FADD and FSUB insns.  */\n+  COSTS_N_INSNS (6),\t\t\t/* cost of FMUL instruction.  */\n+  COSTS_N_INSNS (42),\t\t\t/* cost of FDIV instruction.  */\n+  COSTS_N_INSNS (2),\t\t\t/* cost of FABS instruction.  */\n+  COSTS_N_INSNS (2),\t\t\t/* cost of FCHS instruction.  */\n+  COSTS_N_INSNS (52),\t\t\t/* cost of FSQRT instruction.  */\n+\n+  bdver4_memcpy,\n+  bdver4_memset,\n+  6,\t\t\t\t\t/* scalar_stmt_cost.  */\n+  4,\t\t\t\t\t/* scalar load_cost.  */\n+  4,\t\t\t\t\t/* scalar_store_cost.  */\n+  6,\t\t\t\t\t/* vec_stmt_cost.  */\n+  0,\t\t\t\t\t/* vec_to_scalar_cost.  */\n+  2,\t\t\t\t\t/* scalar_to_vec_cost.  */\n+  4,\t\t\t\t\t/* vec_align_load_cost.  */\n+  4,\t\t\t\t\t/* vec_unalign_load_cost.  */\n+  4,\t\t\t\t\t/* vec_store_cost.  */\n+  2,\t\t\t\t\t/* cond_taken_branch_cost.  */\n+  1,\t\t\t\t\t/* cond_not_taken_branch_cost.  */\n+};\n+\n   /* BTVER1 has optimized REP instruction for medium sized blocks, but for\n      very small blocks it is better to use loop. For large blocks, libcall can\n      do nontemporary accesses and beat inline considerably.  */\n@@ -1850,9 +1936,10 @@ const struct processor_costs *ix86_cost = &pentium_cost;\n #define m_BDVER1 (1<<PROCESSOR_BDVER1)\n #define m_BDVER2 (1<<PROCESSOR_BDVER2)\n #define m_BDVER3 (1<<PROCESSOR_BDVER3)\n+#define m_BDVER4 (1<<PROCESSOR_BDVER4)\n #define m_BTVER1 (1<<PROCESSOR_BTVER1)\n #define m_BTVER2 (1<<PROCESSOR_BTVER2)\n-#define m_BDVER\t(m_BDVER1 | m_BDVER2 | m_BDVER3)\n+#define m_BDVER\t(m_BDVER1 | m_BDVER2 | m_BDVER3 | m_BDVER4)\n #define m_BTVER (m_BTVER1 | m_BTVER2)\n #define m_AMD_MULTIPLE (m_ATHLON_K8 | m_AMDFAM10 | m_BDVER | m_BTVER)\n \n@@ -2310,6 +2397,7 @@ static const struct ptt processor_target_table[PROCESSOR_max] =\n   {&bdver1_cost, 16, 10, 16, 7, 11},\n   {&bdver2_cost, 16, 10, 16, 7, 11},\n   {&bdver3_cost, 16, 10, 16, 7, 11},\n+  {&bdver4_cost, 16, 10, 16, 7, 11},\n   {&btver1_cost, 16, 10, 16, 7, 11},\n   {&btver2_cost, 16, 10, 16, 7, 11},\n   {&atom_cost, 16, 15, 16, 7, 16},\n@@ -2347,6 +2435,7 @@ static const char *const cpu_names[TARGET_CPU_DEFAULT_max] =\n   \"bdver1\",\n   \"bdver2\",\n   \"bdver3\",\n+  \"bdver4\",\n   \"btver1\",\n   \"btver2\"\n };\n@@ -3107,6 +3196,13 @@ ix86_option_override_internal (bool main_args_p,\n \t| PTA_XOP | PTA_LWP | PTA_BMI | PTA_TBM | PTA_F16C\n \t| PTA_FMA | PTA_PRFCHW | PTA_FXSR | PTA_XSAVE \n \t| PTA_XSAVEOPT | PTA_FSGSBASE},\n+     {\"bdver4\", PROCESSOR_BDVER4, CPU_BDVER4,\n+        PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n+        | PTA_SSE4A | PTA_CX16 | PTA_ABM | PTA_SSSE3 | PTA_SSE4_1\n+        | PTA_SSE4_2 | PTA_AES | PTA_PCLMUL | PTA_AVX | PTA_AVX2 \n+\t| PTA_FMA4 | PTA_XOP | PTA_LWP | PTA_BMI | PTA_BMI2 \n+\t| PTA_TBM | PTA_F16C | PTA_FMA | PTA_PRFCHW | PTA_FXSR \n+\t| PTA_XSAVE | PTA_XSAVEOPT | PTA_FSGSBASE},\n       {\"btver1\", PROCESSOR_BTVER1, CPU_GENERIC,\n \tPTA_64BIT | PTA_MMX |  PTA_SSE  | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSSE3 | PTA_SSE4A |PTA_ABM | PTA_CX16 | PTA_PRFCHW\n@@ -24841,6 +24937,7 @@ ix86_issue_rate (void)\n     case PROCESSOR_BDVER1:\n     case PROCESSOR_BDVER2:\n     case PROCESSOR_BDVER3:\n+    case PROCESSOR_BDVER4:\n     case PROCESSOR_CORE2:\n     case PROCESSOR_COREI7:\n     case PROCESSOR_COREI7_AVX:\n@@ -25101,6 +25198,7 @@ ix86_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n     case PROCESSOR_BDVER1:\n     case PROCESSOR_BDVER2:\n     case PROCESSOR_BDVER3:\n+    case PROCESSOR_BDVER4:\n     case PROCESSOR_BTVER1:\n     case PROCESSOR_BTVER2:\n     case PROCESSOR_GENERIC:\n@@ -25220,6 +25318,7 @@ ia32_multipass_dfa_lookahead (void)\n     case PROCESSOR_BDVER1:\n     case PROCESSOR_BDVER2:\n     case PROCESSOR_BDVER3:\n+    case PROCESSOR_BDVER4:\n       /* We use lookahead value 4 for BD both before and after reload\n \t schedules. Plan is to have value 8 included for O3. */\n         return 4;\n@@ -30755,7 +30854,8 @@ fold_builtin_cpu (tree fndecl, tree *args)\n     M_AMDFAM10H_ISTANBUL,\n     M_AMDFAM15H_BDVER1,\n     M_AMDFAM15H_BDVER2,\n-    M_AMDFAM15H_BDVER3\n+    M_AMDFAM15H_BDVER3,\n+    M_AMDFAM15H_BDVER4\n   };\n \n   static struct _arch_names_table\n@@ -30782,6 +30882,7 @@ fold_builtin_cpu (tree fndecl, tree *args)\n       {\"bdver1\", M_AMDFAM15H_BDVER1},\n       {\"bdver2\", M_AMDFAM15H_BDVER2},\n       {\"bdver3\", M_AMDFAM15H_BDVER3},\n+      {\"bdver4\", M_AMDFAM15H_BDVER4},\n     };\n \n   static struct _isa_names_table\n@@ -43363,7 +43464,7 @@ do_dispatch (rtx insn, int mode)\n static bool\n has_dispatch (rtx insn, int action)\n {\n-  if ((TARGET_BDVER1 || TARGET_BDVER2 || TARGET_BDVER3)\n+  if ((TARGET_BDVER1 || TARGET_BDVER2 || TARGET_BDVER3 || TARGET_BDVER4)\n       && flag_dispatch_scheduler)\n     switch (action)\n       {"}, {"sha": "2fd5fddbdc6eba69dd3e583e10c95f0d7b50a0a3", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -311,6 +311,7 @@ extern const struct processor_costs ix86_size_cost;\n #define TARGET_BDVER1 (ix86_tune == PROCESSOR_BDVER1)\n #define TARGET_BDVER2 (ix86_tune == PROCESSOR_BDVER2)\n #define TARGET_BDVER3 (ix86_tune == PROCESSOR_BDVER3)\n+#define TARGET_BDVER4 (ix86_tune == PROCESSOR_BDVER4)\n #define TARGET_BTVER1 (ix86_tune == PROCESSOR_BTVER1)\n #define TARGET_BTVER2 (ix86_tune == PROCESSOR_BTVER2)\n #define TARGET_ATOM (ix86_tune == PROCESSOR_ATOM)\n@@ -639,6 +640,7 @@ enum target_cpu_default\n   TARGET_CPU_DEFAULT_bdver1,\n   TARGET_CPU_DEFAULT_bdver2,\n   TARGET_CPU_DEFAULT_bdver3,\n+  TARGET_CPU_DEFAULT_bdver4,\n   TARGET_CPU_DEFAULT_btver1,\n   TARGET_CPU_DEFAULT_btver2,\n \n@@ -2247,6 +2249,7 @@ enum processor_type\n   PROCESSOR_BDVER1,\n   PROCESSOR_BDVER2,\n   PROCESSOR_BDVER3,\n+  PROCESSOR_BDVER4,\n   PROCESSOR_BTVER1,\n   PROCESSOR_BTVER2,\n   PROCESSOR_ATOM,"}, {"sha": "045d4ae8eb7cece8eb278f888e0421a6b59cc0b4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -368,7 +368,8 @@\n \f\n ;; Processor type.\n (define_attr \"cpu\" \"none,pentium,pentiumpro,geode,k6,athlon,k8,core2,corei7,\n-\t\t    atom,slm,generic,amdfam10,bdver1,bdver2,bdver3,btver1,btver2\"\n+\t\t    atom,slm,generic,amdfam10,bdver1,bdver2,bdver3,bdver4,\n+\t\t    btver1,btver2\"\n   (const (symbol_ref \"ix86_schedule\")))\n \n ;; A basic instruction type.  Refinements due to arguments to be"}, {"sha": "c4f9c8cb28eb3893136b59a4229e94e5b3976feb", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -444,7 +444,7 @@ the function.\n \n mdispatch-scheduler\n Target RejectNegative Var(flag_dispatch_scheduler)\n-Do dispatch scheduling if processor is bdver1 or bdver2 or bdver3 and Haifa scheduling\n+Do dispatch scheduling if processor is bdver1 or bdver2 or bdver3 or bdver4 and Haifa scheduling\n is selected.\n \n mprefer-avx128"}, {"sha": "88eba808dee2b683c18f6c831809d302ef8c9da1", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -10587,6 +10587,9 @@ AMD Family 15h Bulldozer version 2.\n @item bdver3\n AMD Family 15h Bulldozer version 3.\n \n+@item bdver4\n+AMD Family 15h Bulldozer version 4.\n+\n @item btver2\n AMD Family 16h CPU.\n @end table"}, {"sha": "a3fdbb5510d7b4a11487da7922eb2cfed20ab09f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97ad4709f095da78aa0a4f5653b9509984d579/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ed97ad4709f095da78aa0a4f5653b9509984d579", "patch": "@@ -14529,14 +14529,19 @@ supersets FMA4, AVX, XOP, LWP, AES, PCL_MUL, CX16, MMX, SSE, SSE2, SSE3, SSE4A,\n SSSE3, SSE4.1, SSE4.2, ABM and 64-bit instruction set extensions.)\n @item bdver2\n AMD Family 15h core based CPUs with x86-64 instruction set support.  (This\n-supersets BMI, TBM, F16C, FMA, AVX, XOP, LWP, AES, PCL_MUL, CX16, MMX, SSE,\n-SSE2, SSE3, SSE4A, SSSE3, SSE4.1, SSE4.2, ABM and 64-bit instruction set \n+supersets BMI, TBM, F16C, FMA, FMA4, AVX, XOP, LWP, AES, PCL_MUL, CX16, MMX,\n+SSE, SSE2, SSE3, SSE4A, SSSE3, SSE4.1, SSE4.2, ABM and 64-bit instruction set \n extensions.)\n @item bdver3\n AMD Family 15h core based CPUs with x86-64 instruction set support.  (This\n-supersets BMI, TBM, F16C, FMA, AVX, XOP, LWP, AES, PCL_MUL, CX16, MMX, SSE,\n-SSE2, SSE3, SSE4A, SSSE3, SSE4.1, SSE4.2, ABM and 64-bit instruction set \n-extensions.\n+supersets BMI, TBM, F16C, FMA, FMA4, FSGSBASE, AVX, XOP, LWP, AES, \n+PCL_MUL, CX16, MMX, SSE, SSE2, SSE3, SSE4A, SSSE3, SSE4.1, SSE4.2, ABM and \n+64-bit instruction set extensions.\n+@item bdver4\n+AMD Family 15h core based CPUs with x86-64 instruction set support.  (This\n+supersets BMI, BMI2, TBM, F16C, FMA, FMA4, FSGSBASE, AVX, AVX2, XOP, LWP, \n+AES, PCL_MUL, CX16, MOVBE, MMX, SSE, SSE2, SSE3, SSE4A, SSSE3, SSE4.1, \n+SSE4.2, ABM and 64-bit instruction set extensions.\n \n @item btver1\n CPUs based on AMD Family 14h cores with x86-64 instruction set support.  (This"}]}