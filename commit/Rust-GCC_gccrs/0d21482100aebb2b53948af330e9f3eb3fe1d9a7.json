{"sha": "0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQyMTQ4MjEwMGFlYmIyYjUzOTQ4YWYzMzBlOWYzZWIzZmUxZDlhNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-07-19T16:58:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-07-19T16:58:06Z"}, "message": "revert: [multiple changes]\n\n2018-07-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tRevert fix for c++/59480 (and testsuite followup)\n\n\t/testsuite\n\t2018-07-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.old-deja/g++.mike/p784.C: Add -fpermissive.\n\n\t/cp\n\t2019-07-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59480, DR 136\n\t* decl.c (check_no_redeclaration_friend_default_args): New.\n\t(duplicate_decls): Use the latter; also check that a friend\n\tdeclaration specifying default arguments is a definition.\n\n\t/testsuite\n\t2019-07-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59480, DR 136\n\t* g++.dg/other/friend8.C: New.\n\t* g++.dg/other/friend9.C: Likewise.\n\t* g++.dg/other/friend10.C: Likewise.\n\t* g++.dg/other/friend11.C: Likewise.\n\t* g++.dg/other/friend12.C: Likewise.\n\t* g++.dg/parse/defarg4.C: Compile with -fpermissive -w.\n\t* g++.dg/parse/defarg8.C: Likewise.\n\nFrom-SVN: r262883", "tree": {"sha": "23aca1331a0ed78ea26e4ede2c6e4f927e709045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23aca1331a0ed78ea26e4ede2c6e4f927e709045"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/comments", "author": null, "committer": null, "parents": [{"sha": "5170e47ebd80005787c610e6c08a23526906e985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5170e47ebd80005787c610e6c08a23526906e985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5170e47ebd80005787c610e6c08a23526906e985"}], "stats": {"total": 146, "additions": 35, "deletions": 111}, "files": [{"sha": "125f169c16723f5b721392d24feb9257d5b416b0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "patch": "@@ -1,3 +1,14 @@\n+2018-07-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tRevert fix for c++/59480 (and testsuite followup)\n+\n+\t2019-07-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/59480, DR 136\n+\t* decl.c (check_no_redeclaration_friend_default_args): New.\n+\t(duplicate_decls): Use the latter; also check that a friend\n+\tdeclaration specifying default arguments is a definition.\n+\n 2018-07-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/86550"}, {"sha": "3c1e2ef36984129e2fa2d561908bbe3113f7d6e5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 64, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "patch": "@@ -1280,39 +1280,6 @@ check_redeclaration_no_default_args (tree decl)\n       }\n }\n \n-/* NEWDECL is a redeclaration of a function or function template OLDDECL.\n-   If either the declaration or the redeclaration is a friend declaration\n-   and specifies default arguments issue a diagnostic.   Note: this is to\n-   enforce C++17 11.3.6/4: \"If a friend declaration specifies a default\n-   argument expression, that declaration... shall be the only declaration\n-   of the function or function template in the translation unit.\"  */\n-\n-static void\n-check_no_redeclaration_friend_default_args (tree olddecl, tree newdecl)\n-{\n-  bool olddecl_friend_p = DECL_FRIEND_P (STRIP_TEMPLATE (olddecl));\n-  bool newdecl_friend_p = DECL_FRIEND_P (STRIP_TEMPLATE (newdecl));\n-\n-  if (!olddecl_friend_p && !newdecl_friend_p)\n-    return;\n-\n-  tree t1 = FUNCTION_FIRST_USER_PARMTYPE (olddecl);\n-  tree t2 = FUNCTION_FIRST_USER_PARMTYPE (newdecl);\n-\n-  for (; t1 && t1 != void_list_node;\n-       t1 = TREE_CHAIN (t1), t2 = TREE_CHAIN (t2))\n-    if ((olddecl_friend_p && TREE_PURPOSE (t1))\n-\t|| (newdecl_friend_p && TREE_PURPOSE (t2)))\n-      {\n-\tif (permerror (DECL_SOURCE_LOCATION (newdecl),\n-\t\t       \"friend declaration of %q#D specifies default \"\n-\t\t       \"arguments and isn't the only declaration\", newdecl))\n-\t  inform (DECL_SOURCE_LOCATION (olddecl),\n-\t\t  \"previous declaration of %q#D\", olddecl);\n-\treturn;\n-      }\n-}\n-\n /* Merge tree bits that correspond to attributes noreturn, nothrow,\n    const,  malloc, and pure from NEWDECL with those of OLDDECL.  */\n \n@@ -1909,12 +1876,6 @@ next_arg:;\n \t\t\t\tolddecl);\n \t\t      }\n \t\t  }\n-\n-\t      /* C++17 11.3.6/4: \"If a friend declaration specifies a default\n-\t\t argument expression, that declaration... shall be the only\n-\t\t declaration of the function or function template in the\n-\t\t translation unit.\"  */\n-\t      check_no_redeclaration_friend_default_args (olddecl, newdecl);\n \t    }\n \t}\n     }\n@@ -2047,18 +2008,11 @@ next_arg:;\n \n       if (DECL_FUNCTION_TEMPLATE_P (newdecl))\n \t{\n+\t  /* Per C++11 8.3.6/4, default arguments cannot be added in later\n+\t     declarations of a function template.  */\n \t  if (DECL_SOURCE_LOCATION (newdecl)\n \t      != DECL_SOURCE_LOCATION (olddecl))\n-\t    {\n-\t      /* Per C++11 8.3.6/4, default arguments cannot be added in\n-\t\t later declarations of a function template.  */\n-\t      check_redeclaration_no_default_args (newdecl);\n-\t      /* C++17 11.3.6/4: \"If a friend declaration specifies a default\n-\t\t argument expression, that declaration... shall be the only\n-\t\t declaration of the function or function template in the\n-\t\t translation unit.\"  */\n-\t      check_no_redeclaration_friend_default_args (olddecl, newdecl);\n-\t    }\n+\t    check_redeclaration_no_default_args (newdecl);\n \n \t  check_default_args (newdecl);\n \n@@ -8809,21 +8763,6 @@ grokfndecl (tree ctype,\n \t}\n     }\n \n-  /* C++17 11.3.6/4: \"If a friend declaration specifies a default argument\n-     expression, that declaration shall be a definition...\"  */\n-  if (friendp && !funcdef_flag)\n-    {\n-      for (tree t = FUNCTION_FIRST_USER_PARMTYPE (decl);\n-\t   t && t != void_list_node; t = TREE_CHAIN (t))\n-\tif (TREE_PURPOSE (t))\n-\t  {\n-\t    permerror (DECL_SOURCE_LOCATION (decl),\n-\t\t       \"friend declaration of %qD specifies default \"\n-\t\t       \"arguments and isn't a definition\", decl);\n-\t    break;\n-\t  }\n-    }\n-\n   /* If this decl has namespace scope, set that up.  */\n   if (in_namespace)\n     set_decl_namespace (decl, in_namespace, friendp);"}, {"sha": "f55ecc3454eebdff46a9f4c15e2d2da75eb6a481", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "patch": "@@ -1,3 +1,22 @@\n+2018-07-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tRevert fix for c++/59480 (and testsuite followup)\n+\n+\t2018-07-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.old-deja/g++.mike/p784.C: Add -fpermissive.\n+\n+\t2019-07-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/59480, DR 136\n+\t* g++.dg/other/friend8.C: New.\n+\t* g++.dg/other/friend9.C: Likewise.\n+\t* g++.dg/other/friend10.C: Likewise.\n+\t* g++.dg/other/friend11.C: Likewise.\n+\t* g++.dg/other/friend12.C: Likewise.\n+\t* g++.dg/parse/defarg4.C: Compile with -fpermissive -w.\n+\t* g++.dg/parse/defarg8.C: Likewise.\n+\n 2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* gcc.target/aarch64/profile.c: New test."}, {"sha": "c162395210b8f192f65a60d53b972e7bde4dbfde", "filename": "gcc/testsuite/g++.dg/other/friend10.C", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend10.C?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -1,9 +0,0 @@\n-// PR c++/59480\n-\n-class test {\n-  friend int foo(bool = true) { return 1; }  // { dg-message \"14:previous\" }\n-  template<typename> friend int bar(bool = true) { return 1; }  // { dg-message \"33:previous\" }\n-};\n-\n-int foo(bool);  // { dg-error \"5:friend declaration\" }\n-template<typename> int bar(bool);  // { dg-error \"24:friend declaration\" }"}, {"sha": "b82b39ddbe371f2b17dceac09da031878dedbf58", "filename": "gcc/testsuite/g++.dg/other/friend11.C", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend11.C?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -1,8 +0,0 @@\n-// PR c++/59480\n-\n-class test {\n-  friend int foo(bool = true) { return 1; }  // { dg-message \"14:previous\" }\n-  friend int foo(bool);  // { dg-error \"14:friend declaration\" }\n-  template<typename> friend int bar(bool = true) { return 1; }  // { dg-message \"33:previous\" }\n-  template<typename> friend int bar(bool);  // { dg-error \"33:friend declaration\" }\n-};"}, {"sha": "b78ce4b078c4e87e8b40cbda93c463dea208cbc4", "filename": "gcc/testsuite/g++.dg/other/friend12.C", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend12.C?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -1,11 +0,0 @@\n-// PR c++/59480\n-\n-template<typename>\n-class test {\n-  friend int foo(bool = true) { return 1; }  // { dg-message \"14:previous\" }\n-  friend int foo(bool);  // { dg-error \"14:friend declaration\" }\n-  template<typename> friend int bar(bool = true) { return 1; }  // { dg-message \"33:previous\" }\n-  template<typename> friend int bar(bool);  // { dg-error \"33:friend declaration\" }\n-};\n-\n-template class test<bool>;"}, {"sha": "6b5df88d6a48c673a72370b4231c7331b0e3e4c8", "filename": "gcc/testsuite/g++.dg/other/friend8.C", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend8.C?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -1,6 +0,0 @@\n-// PR c++/59480\n-\n-class test {\n-  friend int foo(bool = true);  // { dg-error \"14:friend declaration\" }\n-  template<typename> friend int bar(bool = true);  // { dg-error \"33:friend declaration\" }\n-};"}, {"sha": "16b4f57335d3aad28621935e5ccc99e94d13841e", "filename": "gcc/testsuite/g++.dg/other/friend9.C", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5170e47ebd80005787c610e6c08a23526906e985/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffriend9.C?ref=5170e47ebd80005787c610e6c08a23526906e985", "patch": "@@ -1,9 +0,0 @@\n-// PR c++/59480\n-\n-template<typename>\n-class test {\n-  friend int foo(bool = true);  // { dg-error \"14:friend declaration\" }\n-  template<typename> friend int bar(bool = true);  // { dg-error \"33:friend declaration\" }\n-};\n-\n-template class test<bool>;"}, {"sha": "151f6c5f668b071d5981d497335782ff89088df5", "filename": "gcc/testsuite/g++.dg/parse/defarg4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg4.C?ref=0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-fpermissive -w\" }\n+// { dg-do compile }\n \n // Copyright (C) 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 3 Jul 2003 <nathan@codesourcery.com>"}, {"sha": "1f1f078aa16dbe05286dfda7c13b802b504d5c14", "filename": "gcc/testsuite/g++.dg/parse/defarg8.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg8.C?ref=0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "patch": "@@ -1,5 +1,3 @@\n-// { dg-options \"-fpermissive -w\" }\n-\n struct A {\n   static void g(int);\n };"}, {"sha": "04a70c2eee471df2c72b71b32fd5d153bbdfc4a7", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p784.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp784.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d21482100aebb2b53948af330e9f3eb3fe1d9a7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp784.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp784.C?ref=0d21482100aebb2b53948af330e9f3eb3fe1d9a7", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n // { dg-require-effective-target ilp32 } */\n-// { dg-options \"-w -fpermissive\" }\n+// { dg-options \"-w\" }\n // prms-id: 784\n \n //# 1 \"GctSymbol.GctSymbol.CHMap.cc\""}]}