{"sha": "89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliODBjNDI5YTRlMDlmYThmM2NjYzFkZmMyYzJlYzE3ZjY2M2Q4OA==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2016-10-17T08:48:43Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2016-10-17T08:48:43Z"}, "message": "re PR tree-optimization/71636 (Missed optimization in variable alignment test)\n\n2016-10-17  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\tPR tree-optimization/71636\n\t* match.pd (x & ((1 << b) - 1) -> x & ~(~0 << b)): New pattern.\n\ntestsuite/\n\t* gcc.dg/pr71636-1.c: New test-case.\n\t* gcc.dg/pr71636-2.c: Likewise.\n\nFrom-SVN: r241229", "tree": {"sha": "2f792ea3c5eed724349f041f4fc4bb764d9f5cdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f792ea3c5eed724349f041f4fc4bb764d9f5cdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/comments", "author": null, "committer": null, "parents": [{"sha": "d6b1fea25cf97d8f766dbebc092f4d7b388fc313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b1fea25cf97d8f766dbebc092f4d7b388fc313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b1fea25cf97d8f766dbebc092f4d7b388fc313"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "9f4ff42fc298369bb033319fc84941d341ed414d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "patch": "@@ -1,3 +1,8 @@\n+2016-10-17  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR tree-optimization/71636\n+\t* match.pd (x & ((1 << b) - 1) -> x & ~(~0 << b)): New pattern.\n+\n 2016-10-17  Richard Biener  <rguenther@suse.de>\n \n \t* gimplify.c (gimplify_function_tree): Do not move the outer"}, {"sha": "b782a1ed2f4d5297f17037bd973644567e5c72c6", "filename": "gcc/match.pd", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "patch": "@@ -513,6 +513,12 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (bit_and:c (convert? @0) (convert? (bit_not @0)))\n   { build_zero_cst (type); })\n \n+/* PR71636: Transform x & ((1U << b) - 1) -> x & ~(~0U << b);  */\n+(simplify\n+  (bit_and:c @0 (plus:s (lshift:s integer_onep @1) integer_minus_onep))\n+  (if (TYPE_UNSIGNED (type))\n+    (bit_and @0 (bit_not (lshift { build_all_ones_cst (type); } @1)))))\n+\n /* Fold (A & ~B) - (A & B) into (A ^ B) - B.  */\n (simplify\n  (minus (bit_and:cs @0 (bit_not @1)) (bit_and:cs @0 @1))"}, {"sha": "b99ce7b6326d5cb36a1824650bda3c63885dc704", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "patch": "@@ -1,3 +1,8 @@\n+2016-10-17  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\t* gcc.dg/pr71636-1.c: New test-case.\n+\t* gcc.dg/pr71636-2.c: Likewise.\n+\n 2016-10-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/trampoline3.adb: New test."}, {"sha": "2df5f96f4673d8369cf192e82be4caafbe1f9a43", "filename": "gcc/testsuite/gcc.dg/pr71636-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71636-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71636-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71636-1.c?ref=89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-gimple\" } */\n+\n+unsigned f(unsigned x, unsigned b)\n+{\n+  return x & ((1U << b) - 1);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"1 <<\" \"gimple\" } } */"}, {"sha": "9e9297d4a7c904801d909f79b8aaabf03baaabf6", "filename": "gcc/testsuite/gcc.dg/pr71636-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71636-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71636-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71636-2.c?ref=89b80c429a4e09fa8f3ccc1dfc2c2ec17f663d88", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-forwprop-details\" } */\n+\n+unsigned f(unsigned x, unsigned b)\n+{\n+  unsigned t1 = 1U << b;\n+  unsigned t2 = t1 - 1;\n+  unsigned t3 = x & t2;\n+  return t3;\n+}\n+\n+/* { dg-final { scan-tree-dump \"_\\[0-9\\] = ~_\\[0-9\\]\" \"forwprop1\" } } */"}]}