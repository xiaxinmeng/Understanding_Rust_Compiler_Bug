{"sha": "24dbe738d34175ca5192f4ff95cec3b81c99262a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRkYmU3MzhkMzQxNzVjYTUxOTJmNGZmOTVjZWMzYjgxYzk5MjYyYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-11-02T20:00:25Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-11-02T20:00:25Z"}, "message": "arc.c (write_ext_corereg_1): Delete.\n\ngcc/\n\t* config/arc/arc.c (write_ext_corereg_1): Delete.\n\t(arc_write_ext_corereg): Use FOR_EACH_SUBRTX.\n\nFrom-SVN: r217019", "tree": {"sha": "b3f103c42806b398e186c2a9c24af1c27a84d6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3f103c42806b398e186c2a9c24af1c27a84d6aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24dbe738d34175ca5192f4ff95cec3b81c99262a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24dbe738d34175ca5192f4ff95cec3b81c99262a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24dbe738d34175ca5192f4ff95cec3b81c99262a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24dbe738d34175ca5192f4ff95cec3b81c99262a/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36cc625486bfd698ecb35f68c241a50b7ab999c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36cc625486bfd698ecb35f68c241a50b7ab999c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36cc625486bfd698ecb35f68c241a50b7ab999c7"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "9aa585ed1ab181ad098cfd2862c95107424fde4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24dbe738d34175ca5192f4ff95cec3b81c99262a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24dbe738d34175ca5192f4ff95cec3b81c99262a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24dbe738d34175ca5192f4ff95cec3b81c99262a", "patch": "@@ -1,3 +1,8 @@\n+2014-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/arc/arc.c (write_ext_corereg_1): Delete.\n+\t(arc_write_ext_corereg): Use FOR_EACH_SUBRTX.\n+\n 2014-11-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/arc/arc.c (arc600_corereg_hazard_1): Delete."}, {"sha": "0f3825e10e5014c0aef16847a288cce433bb9978", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 18, "deletions": 22, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24dbe738d34175ca5192f4ff95cec3b81c99262a/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24dbe738d34175ca5192f4ff95cec3b81c99262a/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=24dbe738d34175ca5192f4ff95cec3b81c99262a", "patch": "@@ -8441,34 +8441,30 @@ arc_predicate_delay_insns (void)\n   be hoisted out into a delay slot, a basic block can also be emptied this\n   way, and branch and/or fall through targets be redirected.  Hence we don't\n   want such writes in a delay slot.  */\n-/* Called by arc_write_ext_corereg via for_each_rtx.  */\n-\n-static int\n-write_ext_corereg_1 (rtx *xp, void *data ATTRIBUTE_UNUSED)\n-{\n-  rtx x = *xp;\n-  rtx dest;\n-\n-  switch (GET_CODE (x))\n-    {\n-    case SET: case POST_INC: case POST_DEC: case PRE_INC: case PRE_DEC:\n-      break;\n-    default:\n-    /* This is also fine for PRE/POST_MODIFY, because they contain a SET.  */\n-      return 0;\n-    }\n-  dest = XEXP (x, 0);\n-  if (REG_P (dest) && REGNO (dest) >= 32 && REGNO (dest) < 61)\n-    return 1;\n-  return 0;\n-}\n \n /* Return nonzreo iff INSN writes to an extension core register.  */\n \n int\n arc_write_ext_corereg (rtx insn)\n {\n-  return for_each_rtx (&PATTERN (insn), write_ext_corereg_1, 0);\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n+    {\n+      const_rtx x = *iter;\n+      switch (GET_CODE (x))\n+\t{\n+\tcase SET: case POST_INC: case POST_DEC: case PRE_INC: case PRE_DEC:\n+\t  break;\n+\tdefault:\n+\t  /* This is also fine for PRE/POST_MODIFY, because they\n+\t     contain a SET.  */\n+\t  continue;\n+\t}\n+      const_rtx dest = XEXP (x, 0);\n+      if (REG_P (dest) && REGNO (dest) >= 32 && REGNO (dest) < 61)\n+\treturn 1;\n+    }\n+  return 0;\n }\n \n /* This is like the hook, but returns NULL when it can't / won't generate"}]}