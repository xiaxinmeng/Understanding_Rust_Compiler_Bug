{"sha": "f552aa626fbfa268b819395d1c5d25ca3ca78428", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1MmFhNjI2ZmJmYTI2OGI4MTkzOTVkMWM1ZDI1Y2EzY2E3ODQyOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-05-28T08:13:37Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-05-28T08:13:37Z"}, "message": "trans.c (gnat_to_gnu): Remove superfluous tests on Backend_Overflow_Checks_On_Target and rework comments.\n\n\t* gcc-interface/trans.c (gnat_to_gnu): Remove superfluous tests on\n\tBackend_Overflow_Checks_On_Target and rework comments.\n\nFrom-SVN: r271689", "tree": {"sha": "f1237d27ef9ffe35c50038156699559cfa001699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1237d27ef9ffe35c50038156699559cfa001699"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f552aa626fbfa268b819395d1c5d25ca3ca78428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f552aa626fbfa268b819395d1c5d25ca3ca78428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f552aa626fbfa268b819395d1c5d25ca3ca78428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f552aa626fbfa268b819395d1c5d25ca3ca78428/comments", "author": null, "committer": null, "parents": [{"sha": "81edaf2fc6328f5eba841744da40c3f0dd4d174f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81edaf2fc6328f5eba841744da40c3f0dd4d174f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81edaf2fc6328f5eba841744da40c3f0dd4d174f"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "4db444ab4572245be4f544e657d01c6f6b80275c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f552aa626fbfa268b819395d1c5d25ca3ca78428/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f552aa626fbfa268b819395d1c5d25ca3ca78428/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f552aa626fbfa268b819395d1c5d25ca3ca78428", "patch": "@@ -1,3 +1,8 @@\n+2019-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (gnat_to_gnu): Remove superfluous tests on\n+\tBackend_Overflow_Checks_On_Target and rework comments.\n+\n 2019-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (walk_nesting_tree): New static function."}, {"sha": "f5cc31876a590e211c58488c68237e45e2e0e981", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f552aa626fbfa268b819395d1c5d25ca3ca78428/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f552aa626fbfa268b819395d1c5d25ca3ca78428/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=f552aa626fbfa268b819395d1c5d25ca3ca78428", "patch": "@@ -7587,16 +7587,15 @@ gnat_to_gnu (Node_Id gnat_node)\n \t    gnu_rhs = convert (gnu_type, gnu_rhs);\n \t  }\n \n-\t/* Instead of expanding overflow checks for addition, subtraction\n-\t   and multiplication itself, the front end will leave this to\n-\t   the back end when Backend_Overflow_Checks_On_Target is set.  */\n+\t/* For signed integer addition, subtraction and multiplication, do an\n+\t   overflow check if required.  */\n \tif (Do_Overflow_Check (gnat_node)\n-\t    && Backend_Overflow_Checks_On_Target\n \t    && (code == PLUS_EXPR || code == MINUS_EXPR || code == MULT_EXPR)\n \t    && !TYPE_UNSIGNED (gnu_type)\n \t    && !FLOAT_TYPE_P (gnu_type))\n-\t  gnu_result = build_binary_op_trapv (code, gnu_type,\n-\t\t\t\t\t      gnu_lhs, gnu_rhs, gnat_node);\n+\t  gnu_result\n+\t    = build_binary_op_trapv (code, gnu_type, gnu_lhs, gnu_rhs,\n+\t\t\t\t     gnat_node);\n \telse\n \t  {\n \t    /* Some operations, e.g. comparisons of arrays, generate complex\n@@ -7657,19 +7656,17 @@ gnat_to_gnu (Node_Id gnat_node)\n       gnu_expr = gnat_to_gnu (Right_Opnd (gnat_node));\n       gnu_result_type = get_unpadded_type (Etype (gnat_node));\n \n-      /* Instead of expanding overflow checks for negation and absolute\n-\t value itself, the front end will leave this to the back end\n-\t when Backend_Overflow_Checks_On_Target is set.  */\n+      /* For signed integer negation and absolute value, do an overflow check\n+\t if required.  */\n       if (Do_Overflow_Check (gnat_node)\n-\t  && Backend_Overflow_Checks_On_Target\n \t  && !TYPE_UNSIGNED (gnu_result_type)\n \t  && !FLOAT_TYPE_P (gnu_result_type))\n \tgnu_result\n-\t  = build_unary_op_trapv (gnu_codes[kind],\n-\t\t\t\t  gnu_result_type, gnu_expr, gnat_node);\n+\t  = build_unary_op_trapv (gnu_codes[kind], gnu_result_type, gnu_expr,\n+\t\t\t\t  gnat_node);\n       else\n-\tgnu_result = build_unary_op (gnu_codes[kind],\n-\t\t\t\t     gnu_result_type, gnu_expr);\n+\tgnu_result\n+\t  = build_unary_op (gnu_codes[kind], gnu_result_type, gnu_expr);\n       break;\n \n     case N_Allocator:"}]}