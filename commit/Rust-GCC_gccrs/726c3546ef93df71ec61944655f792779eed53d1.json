{"sha": "726c3546ef93df71ec61944655f792779eed53d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI2YzM1NDZlZjkzZGY3MWVjNjE5NDQ2NTVmNzkyNzc5ZWVkNTNkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-12-31T23:53:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-31T23:53:17Z"}, "message": "sse.md (*mov<mode>_internal): Guard EXT_REX_SSE_REGNO_P (REGNO ()) uses with REG_P.\n\n\t* config/i386/sse.md (*mov<mode>_internal): Guard\n\tEXT_REX_SSE_REGNO_P (REGNO ()) uses with REG_P.\n\nFrom-SVN: r206269", "tree": {"sha": "7e1e7720ca03a666cdc38c59b2e49f350f5aaffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e1e7720ca03a666cdc38c59b2e49f350f5aaffd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/726c3546ef93df71ec61944655f792779eed53d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/726c3546ef93df71ec61944655f792779eed53d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/726c3546ef93df71ec61944655f792779eed53d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/726c3546ef93df71ec61944655f792779eed53d1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dfebbdc61fc2aff2380313c5e8d7281b80d9b76c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfebbdc61fc2aff2380313c5e8d7281b80d9b76c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfebbdc61fc2aff2380313c5e8d7281b80d9b76c"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "0d081c9362a7cc4a509027391c9f13ebd0696a4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/726c3546ef93df71ec61944655f792779eed53d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/726c3546ef93df71ec61944655f792779eed53d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=726c3546ef93df71ec61944655f792779eed53d1", "patch": "@@ -1,5 +1,8 @@\n 2014-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (*mov<mode>_internal): Guard\n+\tEXT_REX_SSE_REGNO_P (REGNO ()) uses with REG_P.\n+\n \tPR rtl-optimization/59647\n \t* cse.c (cse_process_notes_1): Don't substitute negative VOIDmode\n \tnew_rtx into UNSIGNED_FLOAT rtxes."}, {"sha": "d8451d17468a3fb3f9cf803bf327d858f123946f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/726c3546ef93df71ec61944655f792779eed53d1/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/726c3546ef93df71ec61944655f792779eed53d1/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=726c3546ef93df71ec61944655f792779eed53d1", "patch": "@@ -670,8 +670,10 @@\n \t in avx512f, so we need to use workarounds, to access sse registers\n \t 16-31, which are evex-only.  */\n       if (TARGET_AVX512F && GET_MODE_SIZE (<MODE>mode) < 64\n-\t  && (EXT_REX_SSE_REGNO_P (REGNO (operands[0]))\n-\t      || EXT_REX_SSE_REGNO_P (REGNO (operands[1]))))\n+\t  && ((REG_P (operands[0])\n+\t       && EXT_REX_SSE_REGNO_P (REGNO (operands[0])))\n+\t      || (REG_P (operands[1])\n+\t\t  && EXT_REX_SSE_REGNO_P (REGNO (operands[1])))))\n \t{\n \t  if (memory_operand (operands[0], <MODE>mode))\n \t    {"}]}