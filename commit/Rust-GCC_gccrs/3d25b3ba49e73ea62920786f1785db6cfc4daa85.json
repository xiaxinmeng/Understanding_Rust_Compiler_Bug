{"sha": "3d25b3ba49e73ea62920786f1785db6cfc4daa85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QyNWIzYmE0OWU3M2VhNjI5MjA3ODZmMTc4NWRiNmNmYzRkYWE4NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-09-09T12:45:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-09T12:45:45Z"}, "message": "trans.c (Subprogram_Body_to_gnu): Disregard inlining limits for expression functions.\n\n\t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Disregard inlining\n\tlimits for expression functions.\n\t(gnat_to_gnu) <N_Object_Declaration>: Fix formatting.\n\nFrom-SVN: r251935", "tree": {"sha": "503da65fa6e4418bc843adb9ddb1eb79c5fc9fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/503da65fa6e4418bc843adb9ddb1eb79c5fc9fe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d25b3ba49e73ea62920786f1785db6cfc4daa85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d25b3ba49e73ea62920786f1785db6cfc4daa85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d25b3ba49e73ea62920786f1785db6cfc4daa85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d25b3ba49e73ea62920786f1785db6cfc4daa85/comments", "author": null, "committer": null, "parents": [{"sha": "87eddedc5f9ae385958edd24d9d42981f702ecb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87eddedc5f9ae385958edd24d9d42981f702ecb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87eddedc5f9ae385958edd24d9d42981f702ecb2"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "804a79e1c1bf06f62162bb6d1f55912f73ec2cd3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d25b3ba49e73ea62920786f1785db6cfc4daa85/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d25b3ba49e73ea62920786f1785db6cfc4daa85/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3d25b3ba49e73ea62920786f1785db6cfc4daa85", "patch": "@@ -1,3 +1,9 @@\n+2017-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Disregard inlining\n+\tlimits for expression functions.\n+\t(gnat_to_gnu) <N_Object_Declaration>: Fix formatting.\n+\n 2017-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: Copy the"}, {"sha": "4536a76e6acb76695fcc896e44d2a4309433cbe6", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d25b3ba49e73ea62920786f1785db6cfc4daa85/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d25b3ba49e73ea62920786f1785db6cfc4daa85/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=3d25b3ba49e73ea62920786f1785db6cfc4daa85", "patch": "@@ -3777,6 +3777,11 @@ Subprogram_Body_to_gnu (Node_Id gnat_node)\n   Sloc_to_locus (Sloc (gnat_node), &locus);\n   DECL_SOURCE_LOCATION (gnu_subprog_decl) = locus;\n \n+  /* If the body comes from an expression function, arrange it to be inlined\n+     in almost all cases.  */\n+  if (Was_Expression_Function (gnat_node))\n+    DECL_DISREGARD_INLINE_LIMITS (gnu_subprog_decl) = 1;\n+\n   /* Initialize the information structure for the function.  */\n   allocate_struct_function (gnu_subprog_decl, false);\n   gnu_subprog_language = ggc_cleared_alloc<language_function> ();\n@@ -6140,7 +6145,7 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  && (((Is_Array_Type (Etype (gnat_temp))\n \t\t|| Is_Record_Type (Etype (gnat_temp)))\n \t       && !Is_Constrained (Etype (gnat_temp)))\n-\t    || Is_Concurrent_Type (Etype (gnat_temp))))\n+\t      || Is_Concurrent_Type (Etype (gnat_temp))))\n \tbreak;\n \n       if (Present (Expression (gnat_node))"}]}