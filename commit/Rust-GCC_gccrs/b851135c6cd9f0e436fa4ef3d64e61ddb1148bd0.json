{"sha": "b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg1MTEzNWM2Y2Q5ZjBlNDM2ZmE0ZWYzZDY0ZTYxZGRiMTE0OGJkMA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2009-09-11T03:20:37Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2009-09-11T03:20:37Z"}, "message": "rs6000.h (DATA_ALIGNMENT): Check that we are dealing with actual SPE/paired vector modes before using...\n\n\t* config/rs6000/rs6000.h (DATA_ALIGNMENT): Check that we are dealing\n\twith actual SPE/paired vector modes before using 64-bit alignment.\n\tCheck that TYPE is a REAL_TYPE for TARGET_E500_DOUBLE.\n\nFrom-SVN: r151626", "tree": {"sha": "10c457566c137533b2bce20a218d78681abb255f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10c457566c137533b2bce20a218d78681abb255f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0/comments", "author": null, "committer": null, "parents": [{"sha": "5ba863d70d67fe53afb11ec0e71fc703ba843507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba863d70d67fe53afb11ec0e71fc703ba843507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ba863d70d67fe53afb11ec0e71fc703ba843507"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "10705159716b1f89e3374e6b0ab6e9168c05c109", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0", "patch": "@@ -1,3 +1,9 @@\n+2009-09-10  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.h (DATA_ALIGNMENT): Check that we are dealing\n+\twith actual SPE/paired vector modes before using 64-bit alignment.\n+\tCheck that TYPE is a REAL_TYPE for TARGET_E500_DOUBLE.\n+\n 2009-09-10  DJ Delorie  <dj@redhat.com>\n \n \t* config/mep/mep.md (eh_epilogue): Defer until after epilogue is"}, {"sha": "6152e3655ecc56416239993bb9c86f03d3cf4542", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=b851135c6cd9f0e436fa4ef3d64e61ddb1148bd0", "patch": "@@ -743,14 +743,18 @@ extern unsigned rs6000_pointer_size;\n /* Make arrays of chars word-aligned for the same reasons.\n    Align vectors to 128 bits.  Align SPE vectors and E500 v2 doubles to\n    64 bits.  */\n-#define DATA_ALIGNMENT(TYPE, ALIGN)\t\t\\\n-  (TREE_CODE (TYPE) == VECTOR_TYPE ? ((TARGET_SPE_ABI \\\n-   || TARGET_PAIRED_FLOAT) ? 64 : 128)\t\\\n-   : (TARGET_E500_DOUBLE\t\t\t\\\n-      && TYPE_MODE (TYPE) == DFmode) ? 64 \\\n-   : TREE_CODE (TYPE) == ARRAY_TYPE\t\t\\\n-   && TYPE_MODE (TREE_TYPE (TYPE)) == QImode\t\\\n-   && (ALIGN) < BITS_PER_WORD ? BITS_PER_WORD : (ALIGN))\n+#define DATA_ALIGNMENT(TYPE, ALIGN)\t\t\t\t\t\\\n+  (TREE_CODE (TYPE) == VECTOR_TYPE\t\t\t\t\t\\\n+   ? (((TARGET_SPE && SPE_VECTOR_MODE (TYPE_MODE (TYPE)))\t\t\\\n+       || (TARGET_PAIRED_FLOAT && PAIRED_VECTOR_MODE (TYPE_MODE (TYPE)))) \\\n+      ? 64 : 128)\t\t\t\t\t\t\t\\\n+   : ((TARGET_E500_DOUBLE\t\t\t\t\t\t\\\n+       && TREE_CODE (TYPE) == REAL_TYPE\t\t\t\t\t\\\n+       && TYPE_MODE (TYPE) == DFmode)\t\t\t\t\t\\\n+      ? 64\t\t\t\t\t\t\t\t\\\n+      : (TREE_CODE (TYPE) == ARRAY_TYPE\t\t\t\t\t\\\n+\t && TYPE_MODE (TREE_TYPE (TYPE)) == QImode\t\t\t\\\n+\t && (ALIGN) < BITS_PER_WORD) ? BITS_PER_WORD : (ALIGN)))\n \n /* Nonzero if move instructions will actually fail to work\n    when given unaligned data.  */"}]}