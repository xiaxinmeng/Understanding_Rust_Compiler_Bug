{"sha": "1a6213c3deb341d45d9ad004a485deea000ff476", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE2MjEzYzNkZWIzNDFkNDVkOWFkMDA0YTQ4NWRlZWEwMDBmZjQ3Ng==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-08-13T02:06:37Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-08-13T02:06:37Z"}, "message": "NXConstStr.h: Update copyright date...\n\n2004-08-12  Ziemowit Laski  <zlaski@apple.com>\n\n        * objc/NXConstStr.h: Update copyright date; bracket with\n        'extern \"C\"' for C++ use; make include syntax consistent\n        by using <...> instead of \"...\"; hoist <objc/...> includes\n        above the 'extern \"C\"' block.\n        * objc/Object.h: Likewise.\n        * objc/Protocol.h: Likewise.\n        * objc/encoding.h: Likewise.\n        * objc/hash.h: Likewise.\n        * objc/runtime.h: Likewise.\n        * objc/sarray.h: Likewise.\n        * objc/thr.h: Likewise.\n        * objc/typedstream.h: Likewise.\n        * objc/objc-api.h: Add 'extern \"C\"' block for C++ use.\n        (objc_static_instances): For C++ case, do away with\n        zero-sized array.\n        (objc_method): Hoist definition to file scope.\n        (_objc_load_callback, _objc_object_alloc, class_get_class_method,\n        class_get_instance_method, class_create_instance,\n        class_get_class_name, class_get_instance_size,\n        class_get_meta_class, class_get_super_class, class_get_version,\n        class_is_class, class_is_meta_class, class_set_version,\n        class_get_gc_object_type, class_ivar_set_gcinvisible,\n        get_imp): Rename 'class' parameter to '_class'.\n        * objc/objc-list.h: Add 'extern \"C\"' block for C++ use.\n        * objc/objc.h: Update copyright date.\n        (arglist_t): Provide a union tag.\n\nFrom-SVN: r85927", "tree": {"sha": "1aa9b1706d5c75818c3e0396c44b303b7b75baaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aa9b1706d5c75818c3e0396c44b303b7b75baaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a6213c3deb341d45d9ad004a485deea000ff476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6213c3deb341d45d9ad004a485deea000ff476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a6213c3deb341d45d9ad004a485deea000ff476", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6213c3deb341d45d9ad004a485deea000ff476/comments", "author": null, "committer": null, "parents": [{"sha": "ea3d83a77f78bb400f9406c0a5fcbd89307859fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3d83a77f78bb400f9406c0a5fcbd89307859fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3d83a77f78bb400f9406c0a5fcbd89307859fa"}], "stats": {"total": 258, "additions": 147, "deletions": 111}, "files": [{"sha": "9d83ac568c6f30a67d1d5a3cb4d8e7d971c965b7", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,3 +1,32 @@\n+2004-08-12  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc/NXConstStr.h: Update copyright date; bracket with\n+\t'extern \"C\"' for C++ use; make include syntax consistent\n+\tby using <...> instead of \"...\"; hoist <objc/...> includes\n+\tabove the 'extern \"C\"' block.\n+\t* objc/Object.h: Likewise.\n+\t* objc/Protocol.h: Likewise.\n+\t* objc/encoding.h: Likewise.\n+\t* objc/hash.h: Likewise.\n+\t* objc/runtime.h: Likewise.\n+\t* objc/sarray.h: Likewise.\n+\t* objc/thr.h: Likewise.\n+\t* objc/typedstream.h: Likewise.\n+\t* objc/objc-api.h: Add 'extern \"C\"' block for C++ use.\n+\t(objc_static_instances): For C++ case, do away with\n+\tzero-sized array.\n+\t(objc_method): Hoist definition to file scope.\n+\t(_objc_load_callback, _objc_object_alloc, class_get_class_method,\n+\tclass_get_instance_method, class_create_instance, \n+\tclass_get_class_name, class_get_instance_size,\n+\tclass_get_meta_class, class_get_super_class, class_get_version,\n+\tclass_is_class, class_is_meta_class, class_set_version,\n+\tclass_get_gc_object_type, class_ivar_set_gcinvisible,\n+\tget_imp): Rename 'class' parameter to '_class'.\n+\t* objc/objc-list.h: Add 'extern \"C\"' block for C++ use.\n+\t* objc/objc.h: Update copyright date.\n+\t(arglist_t): Provide a union tag.\n+\n 2004-07-22  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* thr.c (__objc_thread_detach_function): Do not mark as volatile"}, {"sha": "b89720ef5ebddd425e0dcb2e3b5830dc5c2d7b40", "filename": "libobjc/objc/NXConstStr.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2FNXConstStr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2FNXConstStr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2FNXConstStr.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,5 +1,5 @@\n /* Interface for the NXConstantString class for Objective-C.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2004 Free Software Foundation, Inc.\n    Contributed by Pieter J. Schoenmakers <tiggr@es.ele.tue.nl>\n \n This file is part of GCC.\n@@ -28,7 +28,11 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __nxconstantstring_INCLUDE_GNU\n #define __nxconstantstring_INCLUDE_GNU\n \n-#include \"objc/Object.h\"\n+#include <objc/Object.h>\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n @interface NXConstantString: Object\n {\n@@ -41,4 +45,8 @@ Boston, MA 02111-1307, USA.  */\n \n @end\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif"}, {"sha": "f4e56c5e7d5ae6543f4b54c557dfe9dcbe82cf92", "filename": "libobjc/objc/Object.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2FObject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2FObject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2FObject.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -27,6 +27,10 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __object_INCLUDE_GNU\n #define __object_INCLUDE_GNU\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n #include <objc/objc.h>\n #include <objc/typedstream.h>\n \n@@ -121,4 +125,8 @@ Boston, MA 02111-1307, USA.  */\n \n @end\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n #endif"}, {"sha": "56af9068298df63b42182e990d69f9be6e571804", "filename": "libobjc/objc/Protocol.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2FProtocol.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2FProtocol.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2FProtocol.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,5 +1,5 @@\n /* Declare the class Protocol for Objective C programs.\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 2004 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -27,7 +27,11 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __Protocol_INCLUDE_GNU\n #define __Protocol_INCLUDE_GNU\n \n-#include \"objc/Object.h\"\n+#include <objc/Object.h>\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n \n @interface Protocol : Object\n {\n@@ -52,7 +56,8 @@ Boston, MA 02111-1307, USA.  */\n \n @end\n \n-\n-\n+#ifdef __cplusplus\n+}\n+#endif\n \n #endif /* not __Protocol_INCLUDE_GNU */"}, {"sha": "42ebc1a2d3194563a97fdd211fd49721781c8722", "filename": "libobjc/objc/encoding.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fencoding.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fencoding.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fencoding.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,5 +1,5 @@\n /* Encoding of types for Objective C.\n-   Copyright (C) 1993, 1997, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1997, 2002, 2004 Free Software Foundation, Inc.\n \n Author: Kresten Krab Thorup\n \n@@ -29,13 +29,14 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __encoding_INCLUDE_GNU\n #define __encoding_INCLUDE_GNU\n \n-#include <ctype.h>\n-#include \"objc/objc-api.h\"\n+#include <objc/objc-api.h>\n \n #ifdef __cplusplus\n extern \"C\" {\n #endif /* __cplusplus */\n \n+#include <ctype.h>\n+\n #define _C_CONST\t'r'\n #define _C_IN\t\t'n'\n #define _C_INOUT\t'N'"}, {"sha": "91a5eba5781c5a4558d986b675bb7a9ff7b3d5a2", "filename": "libobjc/objc/hash.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fhash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fhash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fhash.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,5 +1,5 @@\n /* Hash tables for Objective C method dispatch.\n-   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 2004 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -28,14 +28,14 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __hash_INCLUDE_GNU\n #define __hash_INCLUDE_GNU\n \n-#include <stddef.h>\n-#include <string.h>\n #include <objc/objc.h>\n \n #ifdef __cplusplus\n extern \"C\" {\n #endif /* __cplusplus */\n \n+#include <stddef.h>\n+#include <string.h>\n \n /*\n  * This data structure is used to hold items"}, {"sha": "de10249f4d0472411e8f7bc9aad4aa877839f840", "filename": "libobjc/objc/objc-api.h", "status": "modified", "additions": 57, "deletions": 54, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-api.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -27,17 +27,17 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __objc_api_INCLUDE_GNU\n #define __objc_api_INCLUDE_GNU\n \n-#include \"objc/objc.h\"\n-#include \"objc/hash.h\"\n-#include \"objc/thr.h\"\n-#include \"objc/objc-decls.h\"\n-#include <stdio.h>\n-#include <stdarg.h>\n+#include <objc/objc.h>\n+#include <objc/hash.h>\n+#include <objc/thr.h>\n+#include <objc/objc-decls.h>\n \n #ifdef __cplusplus\n extern \"C\" {\n #endif /* __cplusplus */\n \n+#include <stdio.h>\n+#include <stdarg.h>\n \n /* For functions which return Method_t */\n #define METHOD_NULL\t(Method_t)0\n@@ -152,7 +152,11 @@ extern BOOL objc_trace;\n struct objc_static_instances\n {\n   char *class_name;\n+#ifdef __cplusplus\n+  id instances[1];\n+#else\n   id instances[0];\n+#endif\n };\n \n /*\n@@ -241,28 +245,28 @@ typedef struct objc_ivar_list {\n ** and categories can break them across modules. To handle this problem is a\n ** singly linked list of methods. \n */\n-typedef struct objc_method Method;\n-typedef Method* Method_t;\n+typedef struct objc_method {\n+  SEL         method_name;                  /* This variable is the method's \n+                                               name.  It is a char*. \n+                                               The unique integer passed to \n+                                               objc_msg_send is a char* too.  \n+                                               It is compared against \n+                                               method_name using strcmp. */\n+  const char* method_types;                 /* Description of the method's\n+                                               parameter list.  Useful for\n+                                               debuggers. */\n+  IMP         method_imp;                   /* Address of the method in the \n+                                               executable. */\n+} Method, *Method_t;\n+\n typedef struct objc_method_list {\n-  struct objc_method_list*  method_next;      /* This variable is used to link \n-                                                a method list to another.  It \n-                                                is a singly linked list. */\n-  int            method_count;               /* Number of methods defined in \n-                                                this structure. */\n-  struct objc_method {\n-    SEL         method_name;                  /* This variable is the method's \n-                                                name.  It is a char*. \n-                                                  The unique integer passed to \n-                                                objc_msg_send is a char* too.  \n-                                                It is compared against \n-                                                method_name using strcmp. */\n-    const char* method_types;                 /* Description of the method's\n-                                                parameter list.  Useful for\n-                                                debuggers. */\n-    IMP         method_imp;                   /* Address of the method in the \n-                                                executable. */\n-  } method_list[1];                           /* Variable length \n-                                                structure. */\n+  struct objc_method_list*  method_next;    /* This variable is used to link \n+                                               a method list to another.  It \n+                                               is a singly linked list. */\n+  int            method_count;              /* Number of methods defined in \n+                                               this structure. */\n+  Method method_list[1];                    /* Variable length \n+                                               structure. */\n } MethodList, *MethodList_t;\n \n struct objc_protocol_list {\n@@ -375,12 +379,12 @@ objc_EXPORT Class (*_objc_lookup_class)(const char *name);\n ** dynamic loader determine the classes that have been loaded when\n ** an object file is dynamically linked in.\n */\n-objc_EXPORT void (*_objc_load_callback)(Class class, Category* category);\n+objc_EXPORT void (*_objc_load_callback)(Class _class, Category* category);\n \n /*\n ** Hook functions for allocating, copying and disposing of instances\n */\n-objc_EXPORT id (*_objc_object_alloc)(Class class);\n+objc_EXPORT id (*_objc_object_alloc)(Class _class);\n objc_EXPORT id (*_objc_object_copy)(id object);\n objc_EXPORT id (*_objc_object_dispose)(id object);\n \n@@ -432,9 +436,9 @@ objc_EXPORT void (*_objc_free)(void *);\n */\n objc_EXPORT IMP (*__objc_msg_forward)(SEL);\n \n-Method_t class_get_class_method(MetaClass class, SEL aSel);\n+Method_t class_get_class_method(MetaClass _class, SEL aSel);\n \n-Method_t class_get_instance_method(Class class, SEL aSel);\n+Method_t class_get_instance_method(Class _class, SEL aSel);\n \n Class class_pose_as(Class impostor, Class superclass);\n \n@@ -463,66 +467,66 @@ SEL sel_register_typed_name(const char *name, const char*type);\n \n BOOL sel_is_mapped (SEL aSel);\n \n-extern id class_create_instance(Class class);\n+extern id class_create_instance(Class _class);\n \n static inline const char *\n-class_get_class_name(Class class)\n+class_get_class_name(Class _class)\n {\n-  return CLS_ISCLASS(class)?class->name:((class==Nil)?\"Nil\":0);\n+  return CLS_ISCLASS(_class)?_class->name:((_class==Nil)?\"Nil\":0);\n }\n \n static inline long\n-class_get_instance_size(Class class)\n+class_get_instance_size(Class _class)\n {\n-  return CLS_ISCLASS(class)?class->instance_size:0;\n+  return CLS_ISCLASS(_class)?_class->instance_size:0;\n }\n \n static inline MetaClass\n-class_get_meta_class(Class class)\n+class_get_meta_class(Class _class)\n {\n-  return CLS_ISCLASS(class)?class->class_pointer:Nil;\n+  return CLS_ISCLASS(_class)?_class->class_pointer:Nil;\n }\n \n static inline Class\n-class_get_super_class(Class class)\n+class_get_super_class(Class _class)\n {\n-  return CLS_ISCLASS(class)?class->super_class:Nil;\n+  return CLS_ISCLASS(_class)?_class->super_class:Nil;\n }\n \n static inline int\n-class_get_version(Class class)\n+class_get_version(Class _class)\n {\n-  return CLS_ISCLASS(class)?class->version:-1;\n+  return CLS_ISCLASS(_class)?_class->version:-1;\n }\n \n static inline BOOL\n-class_is_class(Class class)\n+class_is_class(Class _class)\n {\n-  return CLS_ISCLASS(class);\n+  return CLS_ISCLASS(_class);\n }\n \n static inline BOOL\n-class_is_meta_class(Class class)\n+class_is_meta_class(Class _class)\n {\n-  return CLS_ISMETA(class);\n+  return CLS_ISMETA(_class);\n }\n \n \n static inline void\n-class_set_version(Class class, long version)\n+class_set_version(Class _class, long version)\n {\n-  if (CLS_ISCLASS(class))\n-    class->version = version;\n+  if (CLS_ISCLASS(_class))\n+    _class->version = version;\n }\n \n static inline void *\n-class_get_gc_object_type (Class class)\n+class_get_gc_object_type (Class _class)\n {\n-  return CLS_ISCLASS(class) ? class->gc_object_type : NULL;\n+  return CLS_ISCLASS(_class) ? _class->gc_object_type : NULL;\n }\n \n /* Mark the instance variable as innaccessible to the garbage collector */\n-extern void class_ivar_set_gcinvisible (Class class,\n+extern void class_ivar_set_gcinvisible (Class _class,\n \t\t\t\t\tconst char* ivarname,\n \t\t\t\t\tBOOL gcInvisible);\n \n@@ -532,7 +536,7 @@ method_get_imp(Method_t method)\n   return (method!=METHOD_NULL)?method->method_imp:(IMP)0;\n }\n \n-IMP get_imp (Class class, SEL sel);\n+IMP get_imp (Class _class, SEL sel);\n \n /* Redefine on NeXTSTEP so as not to conflict with system function */\n #ifdef __NeXT__\n@@ -615,7 +619,6 @@ objc_get_uninstalled_dtable(void);\n }\n #endif /* __cplusplus */\n \n-\n #endif /* not __objc_api_INCLUDE_GNU */\n \n "}, {"sha": "19f0b85a767f8c21cde84f051884efda59573074", "filename": "libobjc/objc/objc-list.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fobjc-list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fobjc-list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-list.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -32,7 +32,6 @@ Boston, MA 02111-1307, USA.  */\n extern \"C\" {\n #endif /* __cplusplus */\n \n-\n struct objc_list {\n   void *head;\n   struct objc_list *tail;\n@@ -154,5 +153,4 @@ list_free(struct objc_list* list)\n }\n #endif /* __cplusplus */\n \n-\n #endif /* not __GNU_OBJC_LIST_H */"}, {"sha": "da20d84bf40f1b252a3a44104490c395ad3f23a6", "filename": "libobjc/objc/objc.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fobjc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fobjc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,5 +1,5 @@\n /* Basic data types for Objective C.\n-   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 2004 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -150,7 +150,7 @@ typedef struct objc_protocol {\n \n typedef void* retval_t;\t\t/* return value */\n typedef void(*apply_t)(void);\t/* function pointer */\n-typedef union {\n+typedef union arglist {\n   char *arg_ptr;\n   char arg_regs[sizeof (char*)];\n } *arglist_t;\t\t\t/* argument frame */"}, {"sha": "91e16a2c5e2bb37e7d27dcf945ff5e7a604e7805", "filename": "libobjc/objc/runtime.h", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fruntime.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -26,26 +26,25 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #ifndef __objc_runtime_INCLUDE_GNU\n #define __objc_runtime_INCLUDE_GNU\n \n-#include <stdarg.h>\t\t/* for varargs and va_list's */\n-\n-#include <stdio.h>\n-#include <ctype.h>\n+#include <objc/objc.h>\t\t/* core data types */\n+#include <objc/objc-api.h>\t/* runtime api functions */\n \n-#include <stddef.h>\t\t/* so noone else will get system versions */\n-#include \"assert.h\"\n-\n-#include \"objc/objc.h\"\t\t/* core data types */\n-#include \"objc/objc-api.h\"\t/* runtime api functions */\n+#include <objc/thr.h>\t\t/* thread and mutex support */\n \n-#include \"objc/thr.h\"\t\t/* thread and mutex support */\n-\n-#include \"objc/hash.h\"\t\t/* hash structures */\n-#include \"objc/objc-list.h\"\t/* linear lists */\n+#include <objc/hash.h>\t\t/* hash structures */\n+#include <objc/objc-list.h>\t/* linear lists */\n \n #ifdef __cplusplus\n extern \"C\" {\n #endif /* __cplusplus */\n \n+#include <stdarg.h>\t\t/* for varargs and va_list's */\n+\n+#include <stdio.h>\n+#include <ctype.h>\n+\n+#include <stddef.h>\t\t/* so noone else will get system versions */\n+#include <assert.h>\n \n extern void __objc_add_class_to_hash(Class);   /* (objc-class.c) */\n extern void __objc_init_selector_tables(void); /* (objc-sel.c) */\n@@ -94,7 +93,4 @@ extern void __objc_generate_gc_type_description (Class);\n }\n #endif /* __cplusplus */\n \n-\n #endif /* not __objc_runtime_INCLUDE_GNU */\n-\n-"}, {"sha": "59ab6ea1fa265761fab18e2248d819236dd88dbe", "filename": "libobjc/objc/sarray.h", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fsarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fsarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fsarray.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,5 +1,5 @@\n /* Sparse Arrays for Objective C dispatch tables\n-   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 2004 Free Software Foundation, Inc.\n    Contributed by Kresten Krab Thorup.\n \n This file is part of GCC.\n@@ -28,6 +28,12 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __sarray_INCLUDE_GNU\n #define __sarray_INCLUDE_GNU\n \n+#include <objc/thr.h>\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n #define OBJC_SPARSE2\t\t/* 2-level sparse array */\n /* #define OBJC_SPARSE3 */      /* 3-level sparse array */\n \n@@ -41,22 +47,11 @@ extern const char* __objc_sparse3_id;\n \n #include <stddef.h>\n \n-#include \"objc/thr.h\"\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif /* __cplusplus */\n-\n extern int nbuckets;\t\t/* for stats */\n extern int nindices;\n extern int narrays;\n extern int idxsize;\n \n-#ifdef __cplusplus\n-}\n-#endif /* __cplusplus */\n-\n-\n #include <assert.h>\n \n /* An unsigned integer of same size as a pointer */\n@@ -151,10 +146,6 @@ struct sarray {\n   size_t capacity;\n };\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif /* __cplusplus */\n-\n struct sarray* sarray_new(int, void* default_element);\n void sarray_free(struct sarray*);\n struct sarray* sarray_lazy_copy(struct sarray*);\n@@ -251,5 +242,4 @@ static inline void* sarray_get_safe(struct sarray* array, sidx indx)\n }\n #endif /* __cplusplus */\n \n-\n #endif /* __sarray_INCLUDE_GNU */"}, {"sha": "0b77527e1ef1b241bb5fa56c410febe07e454d63", "filename": "libobjc/objc/thr.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Fthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fthr.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,5 +1,5 @@\n /* Thread and mutex controls for Objective C.\n-   Copyright (C) 1996, 1997, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2002, 2004 Free Software Foundation, Inc.\n    Contributed by Galen C. Hunt (gchunt@cs.rochester.edu)\n \n This file is part of GCC.\n@@ -38,7 +38,7 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __thread_INCLUDE_GNU\n #define __thread_INCLUDE_GNU\n \n-#include \"objc/objc.h\"\n+#include <objc/objc.h>\n \n #ifdef __cplusplus\n extern \"C\" {\n@@ -150,5 +150,4 @@ void * __objc_thread_get_data (void);\n }\n #endif /* __cplusplus */\n \n-\n #endif /* not __thread_INCLUDE_GNU */"}, {"sha": "826ebe547174b84ee3ec53b46f24bc3863d3eaa9", "filename": "libobjc/objc/typedstream.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Ftypedstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6213c3deb341d45d9ad004a485deea000ff476/libobjc%2Fobjc%2Ftypedstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Ftypedstream.h?ref=1a6213c3deb341d45d9ad004a485deea000ff476", "patch": "@@ -1,5 +1,5 @@\n /* GNU Objective-C Typed Streams interface.\n-   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 2004 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -27,14 +27,14 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __typedstream_INCLUDE_GNU\n #define __typedstream_INCLUDE_GNU\n \n-#include \"objc/objc.h\"\n-#include \"objc/hash.h\"\n-#include <stdio.h>\n+#include <objc/objc.h>\n+#include <objc/hash.h>\n \n #ifdef __cplusplus\n extern \"C\" {\n #endif /* __cplusplus */\n \n+#include <stdio.h>\n \n typedef int (*objc_typed_read_func)(void*, char*, int);\n typedef int (*objc_typed_write_func)(void*, const char*, int);\n@@ -138,5 +138,4 @@ void objc_flush_typed_stream (TypedStream* stream);\n }\n #endif /* __cplusplus */\n \n-\n #endif /* not __typedstream_INCLUDE_GNU */"}]}