{"sha": "6be4c4ece59c3ee69e38acf065d2b760587f6eb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJlNGM0ZWNlNTljM2VlNjllMzhhY2YwNjVkMmI3NjA1ODdmNmViMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-11-10T14:31:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-11-10T14:31:31Z"}, "message": "re PR tree-optimization/63800 (ICE on valid code at -O3 on x86_64-linux-gnu)\n\n2014-11-10  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/63800\n\t* tree-ssa-pre.c (eliminate_push_avail): Push in a way so\n\twe can restore the previous availability in after_dom_children.\n\t(eliminate_dom_walker::after_dom_children): Restore\n\tprevious availability.\n\n\t* gcc.dg/torture/pr63800.c: New testcase.\n\nFrom-SVN: r217288", "tree": {"sha": "20f32df32a4f47a07217a74ff76fa1b250698b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20f32df32a4f47a07217a74ff76fa1b250698b0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6be4c4ece59c3ee69e38acf065d2b760587f6eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be4c4ece59c3ee69e38acf065d2b760587f6eb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be4c4ece59c3ee69e38acf065d2b760587f6eb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3090fa556b469453c5dcddf6617443d26365d9d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3090fa556b469453c5dcddf6617443d26365d9d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3090fa556b469453c5dcddf6617443d26365d9d0"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "663ba2c9748c576f909c0fa9cf402137995ac628", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6be4c4ece59c3ee69e38acf065d2b760587f6eb0", "patch": "@@ -1,3 +1,11 @@\n+2014-11-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/63800\n+\t* tree-ssa-pre.c (eliminate_push_avail): Push in a way so\n+\twe can restore the previous availability in after_dom_children.\n+\t(eliminate_dom_walker::after_dom_children): Restore\n+\tprevious availability.\n+\n 2014-11-10  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/63798"}, {"sha": "a3ef6295428f37623db4928ce4e1d8ad7e054c84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6be4c4ece59c3ee69e38acf065d2b760587f6eb0", "patch": "@@ -1,3 +1,8 @@\n+2014-11-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/63800\n+\t* gcc.dg/torture/pr63800.c: New testcase.\n+\n 2014-11-10  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/ubsan/align-7.c: Skip for -flto -fno-fat-lto-objects."}, {"sha": "19546c25f0c53eed2919cfb34c8f9f0c7aa38404", "filename": "gcc/testsuite/gcc.dg/torture/pr63800.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63800.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63800.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63800.c?ref=6be4c4ece59c3ee69e38acf065d2b760587f6eb0", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d[2];\n+\n+int\n+fn1 ()\n+{\n+  int f = 0;\n+  d[1] = b = 1; \n+  for (; b; b--)\n+    {\n+      for (c = 0; c < 2; c++)\n+\t{\n+\t  d[b] & 1 & b;\n+\t  if (d[0])\n+\t    f = d[b] * a;\n+\t  if (f)\n+\t    return 0;\n+\t}\n+      d[b] && (d[0] = 0);\n+    }\n+  return 0;\n+}"}, {"sha": "ea991989267d887007d51cba69ed14a41e78c78a", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be4c4ece59c3ee69e38acf065d2b760587f6eb0/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=6be4c4ece59c3ee69e38acf065d2b760587f6eb0", "patch": "@@ -3906,8 +3906,11 @@ eliminate_push_avail (tree op)\n     {\n       if (el_avail.length () <= SSA_NAME_VERSION (valnum))\n \tel_avail.safe_grow_cleared (SSA_NAME_VERSION (valnum) + 1);\n+      tree pushop = op;\n+      if (el_avail[SSA_NAME_VERSION (valnum)])\n+\tpushop = el_avail[SSA_NAME_VERSION (valnum)];\n+      el_avail_stack.safe_push (pushop);\n       el_avail[SSA_NAME_VERSION (valnum)] = op;\n-      el_avail_stack.safe_push (op);\n     }\n }\n \n@@ -4451,7 +4454,14 @@ eliminate_dom_walker::after_dom_children (basic_block)\n {\n   tree entry;\n   while ((entry = el_avail_stack.pop ()) != NULL_TREE)\n-    el_avail[SSA_NAME_VERSION (VN_INFO (entry)->valnum)] = NULL_TREE;\n+    {\n+      tree valnum = VN_INFO (entry)->valnum;\n+      tree old = el_avail[SSA_NAME_VERSION (valnum)];\n+      if (old == entry)\n+\tel_avail[SSA_NAME_VERSION (valnum)] = NULL_TREE;\n+      else\n+\tel_avail[SSA_NAME_VERSION (valnum)] = entry;\n+    }\n }\n \n /* Eliminate fully redundant computations.  */"}]}