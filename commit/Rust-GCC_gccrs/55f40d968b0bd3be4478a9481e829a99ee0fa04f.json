{"sha": "55f40d968b0bd3be4478a9481e829a99ee0fa04f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVmNDBkOTY4YjBiZDNiZTQ0NzhhOTQ4MWU4MjlhOTllZTBmYTA0Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-06T02:50:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-06T04:12:57Z"}, "message": "c++: mangling of lambdas in default args [PR91241]\n\nIn this testcase, the parms remembered in LAMBDA_EXPR_EXTRA_SCOPE are no\nlonger the parms of the FUNCTION_DECL they have as their DECL_CONTEXT, so we\nwere mangling both lambdas as parm #0.  But since the parms are numbered\nfrom right to left we don't need to need to find them in the FUNCTION_DECL,\nwe can measure their own DECL_CHAIN.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/91241\n\t* mangle.c (write_compact_number): Add sanity check.\n\t(write_local_name): Use list_length for parm number.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/91241\n\t* g++.dg/abi/lambda-defarg1.C: New test.", "tree": {"sha": "659592b42ad51c77fbb9ac7f710f20e5f47be509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/659592b42ad51c77fbb9ac7f710f20e5f47be509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55f40d968b0bd3be4478a9481e829a99ee0fa04f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f40d968b0bd3be4478a9481e829a99ee0fa04f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55f40d968b0bd3be4478a9481e829a99ee0fa04f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f40d968b0bd3be4478a9481e829a99ee0fa04f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66de517b1c1dd22df7914f8e9a083cd5a73adbe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66de517b1c1dd22df7914f8e9a083cd5a73adbe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66de517b1c1dd22df7914f8e9a083cd5a73adbe2"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "4399165ee2352095887857ebbd85dec88b136c2c", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55f40d968b0bd3be4478a9481e829a99ee0fa04f/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55f40d968b0bd3be4478a9481e829a99ee0fa04f/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=55f40d968b0bd3be4478a9481e829a99ee0fa04f", "patch": "@@ -1628,6 +1628,7 @@ write_literal_operator_name (tree identifier)\n static void\n write_compact_number (int num)\n {\n+  gcc_checking_assert (num >= 0);\n   if (num > 0)\n     write_unsigned_number (num - 1);\n   write_char ('_');\n@@ -2027,15 +2028,7 @@ write_local_name (tree function, const tree local_entity,\n   /* For this purpose, parameters are numbered from right-to-left.  */\n   if (parm)\n     {\n-      tree t;\n-      int i = 0;\n-      for (t = DECL_ARGUMENTS (function); t; t = DECL_CHAIN (t))\n-\t{\n-\t  if (t == parm)\n-\t    i = 1;\n-\t  else if (i)\n-\t    ++i;\n-\t}\n+      int i = list_length (parm);\n       write_char ('d');\n       write_compact_number (i - 1);\n     }"}, {"sha": "8c53858124069645d5b054315f5c47391ef27326", "filename": "gcc/testsuite/g++.dg/abi/lambda-defarg1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55f40d968b0bd3be4478a9481e829a99ee0fa04f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flambda-defarg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55f40d968b0bd3be4478a9481e829a99ee0fa04f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flambda-defarg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flambda-defarg1.C?ref=55f40d968b0bd3be4478a9481e829a99ee0fa04f", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/91241\n+// { dg-do compile { target c++11 } }\n+\n+struct A {\n+  int *b(const int & = []() -> int { return 0; }(),\n+\t const int & = []() -> int { return 0; }());\n+};\n+int *A::b(const int &, const int &) { b(); return 0; }\n+// { dg-final { scan-assembler \"_ZN1A1bERKiS1_\" } }\n+// { dg-final { scan-assembler \"_ZZN1A1bERKiS1_Ed_NKUlvE_clEv\" } }\n+// { dg-final { scan-assembler \"_ZZN1A1bERKiS1_Ed0_NKUlvE_clEv\" } }"}]}