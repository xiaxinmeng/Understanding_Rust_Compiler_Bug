{"sha": "5bf6c48a4adc50024bbed8584a9eec1aa86ce984", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJmNmM0OGE0YWRjNTAwMjRiYmVkODU4NGE5ZWVjMWFhODZjZTk4NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-18T21:48:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-18T21:48:10Z"}, "message": "(alpha_swapped_comparison_operator): New function.\n\nFrom-SVN: r12742", "tree": {"sha": "bf3f9a0528aa4486375ef27097b460f0903f02a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf3f9a0528aa4486375ef27097b460f0903f02a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bf6c48a4adc50024bbed8584a9eec1aa86ce984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf6c48a4adc50024bbed8584a9eec1aa86ce984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bf6c48a4adc50024bbed8584a9eec1aa86ce984", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf6c48a4adc50024bbed8584a9eec1aa86ce984/comments", "author": null, "committer": null, "parents": [{"sha": "86ff8230320d59988f7bb1fb8269bf067610c2f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ff8230320d59988f7bb1fb8269bf067610c2f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ff8230320d59988f7bb1fb8269bf067610c2f5"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "b8e581b3992537d227d161b30bcc75dadc0385b8", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf6c48a4adc50024bbed8584a9eec1aa86ce984/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf6c48a4adc50024bbed8584a9eec1aa86ce984/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=5bf6c48a4adc50024bbed8584a9eec1aa86ce984", "patch": "@@ -504,6 +504,23 @@ alpha_comparison_operator (op, mode)\n \t  || (mode == DImode && (code == LEU || code == LTU)));\n }\n \n+/* Return 1 if OP is a valid Alpha swapped comparison operator.  */\n+\n+int\n+alpha_swapped_comparison_operator (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  enum rtx_code code = GET_CODE (op);\n+\n+  if (mode != GET_MODE (op) || GET_RTX_CLASS (code) != '<')\n+    return 0;\n+\n+  code = swap_condition (code);\n+  return (code == EQ || code == LE || code == LT\n+\t  || (mode == DImode && (code == LEU || code == LTU)));\n+}\n+\n /* Return 1 if OP is a signed comparison operation.  */\n \n int"}]}