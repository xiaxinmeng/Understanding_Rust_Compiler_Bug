{"sha": "944e5f7770b38d605bedabd5091376dea893684e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0ZTVmNzc3MGIzOGQ2MDViZWRhYmQ1MDkxMzc2ZGVhODkzNjg0ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-29T04:29:24Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-29T04:29:24Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1332", "tree": {"sha": "7e9121f71492c500899050be9149a912b9760587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e9121f71492c500899050be9149a912b9760587"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/944e5f7770b38d605bedabd5091376dea893684e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944e5f7770b38d605bedabd5091376dea893684e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944e5f7770b38d605bedabd5091376dea893684e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944e5f7770b38d605bedabd5091376dea893684e/comments", "author": null, "committer": null, "parents": [{"sha": "a4219ac7406c41efb439fa8690b634291f7a9d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4219ac7406c41efb439fa8690b634291f7a9d53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4219ac7406c41efb439fa8690b634291f7a9d53"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "023af323337b8c8e8e7d6fef78825b5da2d654b3", "filename": "gcc/flow.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944e5f7770b38d605bedabd5091376dea893684e/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944e5f7770b38d605bedabd5091376dea893684e/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=944e5f7770b38d605bedabd5091376dea893684e", "patch": "@@ -1628,13 +1628,14 @@ libcall_dead_p (x, needed, note, insn)\n }\n \n /* Return 1 if register REGNO was used before it was set.\n-   In other words, if it is live at function entry.  */\n+   In other words, if it is live at function entry.\n+   Don't count global regster variables, though.  */\n \n int\n regno_uninitialized (regno)\n      int regno;\n {\n-  if (n_basic_blocks == 0)\n+  if (n_basic_blocks == 0 || global_regs[regno])\n     return 0;\n \n   return (basic_block_live_at_start[0][regno / REGSET_ELT_BITS]"}]}