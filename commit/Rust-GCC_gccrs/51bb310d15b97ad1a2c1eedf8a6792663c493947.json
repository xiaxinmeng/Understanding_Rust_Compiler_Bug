{"sha": "51bb310d15b97ad1a2c1eedf8a6792663c493947", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFiYjMxMGQxNWI5N2FkMWEyYzFlZWRmOGE2NzkyNjYzYzQ5Mzk0Nw==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2013-10-17T16:31:47Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2013-10-17T16:31:47Z"}, "message": "[AArch64] Fix preferred_reload_class for regclass STACK_REG.\n\nFrom-SVN: r203778", "tree": {"sha": "e586501a9f265d8156532217107cc8fab6e843fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e586501a9f265d8156532217107cc8fab6e843fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51bb310d15b97ad1a2c1eedf8a6792663c493947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51bb310d15b97ad1a2c1eedf8a6792663c493947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51bb310d15b97ad1a2c1eedf8a6792663c493947", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51bb310d15b97ad1a2c1eedf8a6792663c493947/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a115cf9c95beafb08410196345ff4f8ea6a27c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a115cf9c95beafb08410196345ff4f8ea6a27c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a115cf9c95beafb08410196345ff4f8ea6a27c2c"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "5630a191d4f84f333d74786d1fdb82627fa386bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51bb310d15b97ad1a2c1eedf8a6792663c493947/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51bb310d15b97ad1a2c1eedf8a6792663c493947/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51bb310d15b97ad1a2c1eedf8a6792663c493947", "patch": "@@ -1,3 +1,8 @@\n+2013-10-17  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_preferred_reload_class): Adjust\n+\thandling of STACK_REG.\n+\n 2013-10-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/58143"}, {"sha": "7fce7a0506520a857450ab71e398a17f41b87a50", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51bb310d15b97ad1a2c1eedf8a6792663c493947/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51bb310d15b97ad1a2c1eedf8a6792663c493947/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=51bb310d15b97ad1a2c1eedf8a6792663c493947", "patch": "@@ -4219,9 +4219,18 @@ aarch64_class_max_nregs (reg_class_t regclass, enum machine_mode mode)\n static reg_class_t\n aarch64_preferred_reload_class (rtx x, reg_class_t regclass)\n {\n-  if (regclass == POINTER_REGS || regclass == STACK_REG)\n+  if (regclass == POINTER_REGS)\n     return GENERAL_REGS;\n \n+  if (regclass == STACK_REG)\n+    {\n+      if (REG_P(x)\n+\t  && reg_class_subset_p (REGNO_REG_CLASS (REGNO (x)), POINTER_REGS))\n+\t  return regclass;\n+\n+      return NO_REGS;\n+    }\n+\n   /* If it's an integer immediate that MOVI can't handle, then\n      FP_REGS is not an option, so we return NO_REGS instead.  */\n   if (CONST_INT_P (x) && reg_class_subset_p (regclass, FP_REGS)"}]}