{"sha": "4f31c7ec654d1b4523288f8cc6d4e21f43afd845", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYzMWM3ZWM2NTRkMWI0NTIzMjg4ZjhjYzZkNGUyMWY0M2FmZDg0NQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-05-31T17:44:56Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-05-31T17:44:56Z"}, "message": "builtins.c (fold_builtin_cabs): Delete prototype.\n\n\n\t* builtins.c (fold_builtin_cabs): Delete prototype.  Require an\n\tadditional FNDECL argument.  Optimize cabs(-z) and cabs(~z) as\n\tcabs(z).\n\t(fold_builtin_decl) <BUILT_IN_CABS>: Update fold_builtin_cabs call.\n\n\t* gcc.dg/builtins-54.c: New test case.\n\nFrom-SVN: r114276", "tree": {"sha": "70e91d9c7abb8a6796d8f13001637bfc7ae2ffbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70e91d9c7abb8a6796d8f13001637bfc7ae2ffbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f31c7ec654d1b4523288f8cc6d4e21f43afd845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f31c7ec654d1b4523288f8cc6d4e21f43afd845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f31c7ec654d1b4523288f8cc6d4e21f43afd845", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/comments", "author": null, "committer": null, "parents": [{"sha": "da7fda0a9e5a88a5ad7000eda25ad552f2851392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7fda0a9e5a88a5ad7000eda25ad552f2851392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7fda0a9e5a88a5ad7000eda25ad552f2851392"}], "stats": {"total": 73, "additions": 68, "deletions": 5}, "files": [{"sha": "4dcbbf12802c034bb54aa8d0c56fec37d744ee80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f31c7ec654d1b4523288f8cc6d4e21f43afd845", "patch": "@@ -1,3 +1,10 @@\n+2006-05-31  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* builtins.c (fold_builtin_cabs): Delete prototype.  Require an\n+\tadditional FNDECL argument.  Optimize cabs(-z) and cabs(~z) as\n+\tcabs(z).\n+\t(fold_builtin_decl) <BUILT_IN_CABS>: Update fold_builtin_cabs call.\n+\n 2006-05-31  Jie Zhang  <jie.zhang@analog.com>\n \n \t* config/bfin/bfin-protos.h (bfin_hardware_loop): Declare."}, {"sha": "7113681ad35262a5f3ddb0ef46e2c473410f2fed", "filename": "gcc/builtins.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=4f31c7ec654d1b4523288f8cc6d4e21f43afd845", "patch": "@@ -146,7 +146,6 @@ static tree fold_trunc_transparent_mathfn (tree, tree);\n static bool readonly_data_expr (tree);\n static rtx expand_builtin_fabs (tree, rtx, rtx);\n static rtx expand_builtin_signbit (tree, rtx);\n-static tree fold_builtin_cabs (tree, tree);\n static tree fold_builtin_sqrt (tree, tree);\n static tree fold_builtin_cbrt (tree, tree);\n static tree fold_builtin_pow (tree, tree, tree);\n@@ -6772,11 +6771,12 @@ fold_fixed_mathfn (tree fndecl, tree arglist)\n }\n \n /* Fold function call to builtin cabs, cabsf or cabsl.  ARGLIST\n-   is the argument list and TYPE is the return type.  Return\n-   NULL_TREE if no if no simplification can be made.  */\n+   is the argument list, TYPE is the return type and FNDECL is the\n+   original function DECL.  Return NULL_TREE if no if no simplification\n+   can be made.  */\n \n static tree\n-fold_builtin_cabs (tree arglist, tree type)\n+fold_builtin_cabs (tree arglist, tree type, tree fndecl)\n {\n   tree arg;\n \n@@ -6817,6 +6817,14 @@ fold_builtin_cabs (tree arglist, tree type)\n       && real_zerop (TREE_OPERAND (arg, 1)))\n     return fold_build1 (ABS_EXPR, type, TREE_OPERAND (arg, 0));\n \n+  /* Optimize cabs(-z) and cabs(conj(z)) as cabs(z).  */\n+  if (TREE_CODE (arg) == NEGATE_EXPR\n+      || TREE_CODE (arg) == CONJ_EXPR)\n+    {\n+      tree arglist = build_tree_list (NULL_TREE, TREE_OPERAND (arg, 0));\n+      return build_function_call_expr (fndecl, arglist);\n+    }\n+\n   /* Don't do this when optimizing for size.  */\n   if (flag_unsafe_math_optimizations\n       && optimize && !optimize_size)\n@@ -8648,7 +8656,7 @@ fold_builtin_1 (tree fndecl, tree arglist, bool ignore)\n       break;\n \n     CASE_FLT_FN (BUILT_IN_CABS):\n-      return fold_builtin_cabs (arglist, type);\n+      return fold_builtin_cabs (arglist, type, fndecl);\n \n     CASE_FLT_FN (BUILT_IN_SQRT):\n       return fold_builtin_sqrt (arglist, type);"}, {"sha": "c0b7c04597d6f827999297d21144405d9c377ef9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f31c7ec654d1b4523288f8cc6d4e21f43afd845", "patch": "@@ -1,3 +1,7 @@\n+2006-05-31  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.dg/builtins-54.c: New test case.\n+\n 2006-05-30  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/26433"}, {"sha": "29cdf20663def652fe3dbfc3a573057f6740bfc0", "filename": "gcc/testsuite/gcc.dg/builtins-54.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-54.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f31c7ec654d1b4523288f8cc6d4e21f43afd845/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-54.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-54.c?ref=4f31c7ec654d1b4523288f8cc6d4e21f43afd845", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do link } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+\n+double cabs(__complex__ double);\n+float cabsf(__complex__ float);\n+long double cabsl(__complex__ long double);\n+\n+void link_error (void);\n+\n+void test(__complex__ double x)\n+{\n+  if (cabs(x) != cabs(-x))\n+    link_error();\n+\n+  if (cabs(x) != cabs(~x))\n+    link_error();\n+}\n+\n+void testf(__complex__ float x)\n+{\n+  if (cabsf(x) != cabsf(-x))\n+    link_error();\n+\n+  if (cabsf(x) != cabsf(~x))\n+    link_error();\n+}\n+\n+void testl(__complex__ long double x)\n+{\n+  if (cabsl(x) != cabsl(-x))\n+    link_error();\n+\n+  if (cabsl(x) != cabsl(~x))\n+    link_error();\n+}\n+\n+int main()\n+{\n+  test(0.0);\n+  testf(0.0);\n+  testl(0.0);\n+  return 0;\n+}\n+"}]}