{"sha": "25fc05eb629e6befabbe5ed43510d91acf47562a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVmYzA1ZWI2MjllNmJlZmFiYmU1ZWQ0MzUxMGQ5MWFjZjQ3NTYyYQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-11-05T08:34:07Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-11-05T08:34:07Z"}, "message": "intrinsic.c (add_functions): Add function version of TTYNAM.\n\n\t* intrinsic.c (add_functions): Add function version of TTYNAM.\n\t* intrinsic.h: Add prototypes for gfc_check_ttynam and\n\tgfc_resolve_ttynam.\n\t* gfortran.h: Add case for GFC_ISYM_TTYNAM.\n\t* iresolve.c (gfc_resolve_ttynam): New function.\n\t* trans-decl.c (gfc_build_intrinsic_function_decls): Add a tree\n\tfor function call to library ttynam.\n\t* check.c (gfc_check_ttynam): New function.\n\t* trans-intrinsic.c (gfc_conv_intrinsic_ttynam): New function.\n\t(): Call gfc_conv_intrinsic_ttynam.\n\t* trans.h: Add prototype for gfor_fndecl_ttynam.\n\n\t* intrinsics/tty.c (ttynam): New function.\n\nFrom-SVN: r106522", "tree": {"sha": "24d8f3b9b29d15f5a5b0db76b7d7bc01e309ac71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24d8f3b9b29d15f5a5b0db76b7d7bc01e309ac71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25fc05eb629e6befabbe5ed43510d91acf47562a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25fc05eb629e6befabbe5ed43510d91acf47562a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25fc05eb629e6befabbe5ed43510d91acf47562a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25fc05eb629e6befabbe5ed43510d91acf47562a/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a522c1580b321aaf4e366d4c2495ded0b50a84a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a522c1580b321aaf4e366d4c2495ded0b50a84a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a522c1580b321aaf4e366d4c2495ded0b50a84a"}], "stats": {"total": 141, "additions": 141, "deletions": 0}, "files": [{"sha": "8adf0bc9797a71bbfa3b5a77587ecedb9bdec95e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -1,3 +1,17 @@\n+2005-11-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsic.c (add_functions): Add function version of TTYNAM.\n+\t* intrinsic.h: Add prototypes for gfc_check_ttynam and\n+\tgfc_resolve_ttynam.\n+\t* gfortran.h: Add case for GFC_ISYM_TTYNAM.\n+\t* iresolve.c (gfc_resolve_ttynam): New function.\n+\t* trans-decl.c (gfc_build_intrinsic_function_decls): Add a tree\n+\tfor function call to library ttynam.\n+\t* check.c (gfc_check_ttynam): New function.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_ttynam): New function.\n+\t(): Call gfc_conv_intrinsic_ttynam.\n+\t* trans.h: Add prototype for gfor_fndecl_ttynam.\n+\n 2005-11-04  Steven G. Kargl <kargls@comcast.net>\n \n \tPR fortran/24636"}, {"sha": "ec7f6b81828cac8aad381e99f327ae93c7fdbaea", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -2182,6 +2182,19 @@ gfc_check_trim (gfc_expr * x)\n }\n \n \n+try\n+gfc_check_ttynam (gfc_expr * unit)\n+{\n+  if (scalar_check (unit, 0) == FAILURE)\n+    return FAILURE;\n+\n+  if (type_check (unit, 0, BT_INTEGER) == FAILURE)\n+    return FAILURE;\n+\n+  return SUCCESS;\n+}\n+\n+\n /* Common check function for the half a dozen intrinsics that have a\n    single real argument.  */\n "}, {"sha": "daea7ce30f28d4d688b367bfdde7adb25f14adc2", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -413,6 +413,7 @@ enum gfc_generic_isym_id\n   GFC_ISYM_TRANSFER,\n   GFC_ISYM_TRANSPOSE,\n   GFC_ISYM_TRIM,\n+  GFC_ISYM_TTYNAM,\n   GFC_ISYM_UBOUND,\n   GFC_ISYM_UMASK,\n   GFC_ISYM_UNLINK,"}, {"sha": "96ba02b2545f52fbd630d3369dedc4bab1c51139", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -2084,6 +2084,12 @@ add_functions (void)\n \n   make_generic (\"trim\", GFC_ISYM_TRIM, GFC_STD_F95);\n \n+  add_sym_1 (\"ttynam\", 0, 1, BT_CHARACTER, 0, GFC_STD_GNU,\n+              gfc_check_ttynam, NULL, gfc_resolve_ttynam,\n+\t      ut, BT_INTEGER, di, REQUIRED);\n+\n+  make_generic (\"ttynam\", GFC_ISYM_TTYNAM, GFC_STD_GNU);\n+\n   add_sym_2 (\"ubound\", 0, 1, BT_INTEGER, di, GFC_STD_F95,\n \t     gfc_check_ubound, gfc_simplify_ubound, gfc_resolve_ubound,\n \t     ar, BT_REAL, dr, REQUIRED, dm, BT_INTEGER, ii, OPTIONAL);"}, {"sha": "ab378bf7d8b65c9a34b9024e3ad303181536006a", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -120,6 +120,7 @@ try gfc_check_symlnk (gfc_expr *, gfc_expr *);\n try gfc_check_transfer (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_transpose (gfc_expr *);\n try gfc_check_trim (gfc_expr *);\n+try gfc_check_ttynam (gfc_expr *);\n try gfc_check_ubound (gfc_expr *, gfc_expr *);\n try gfc_check_umask (gfc_expr *);\n try gfc_check_unlink (gfc_expr *);\n@@ -386,6 +387,7 @@ void gfc_resolve_time8 (gfc_expr *);\n void gfc_resolve_transfer (gfc_expr *, gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_transpose (gfc_expr *, gfc_expr *);\n void gfc_resolve_trim (gfc_expr *, gfc_expr *);\n+void gfc_resolve_ttynam (gfc_expr *, gfc_expr *);\n void gfc_resolve_ubound (gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_umask (gfc_expr *, gfc_expr *);\n void gfc_resolve_unlink (gfc_expr *, gfc_expr *);"}, {"sha": "4973eb43e0da26c4818277cd8ac267e6a55da3e0", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -1722,6 +1722,28 @@ gfc_resolve_unlink (gfc_expr * f, gfc_expr * n ATTRIBUTE_UNUSED)\n   f->value.function.name = gfc_get_string (PREFIX(\"unlink\"));\n }\n \n+\n+void\n+gfc_resolve_ttynam (gfc_expr * f, gfc_expr * unit)\n+{\n+  gfc_typespec ts;\n+  \n+  f->ts.type = BT_CHARACTER;\n+  f->ts.kind = gfc_default_character_kind;\n+\n+  if (unit->ts.kind != gfc_c_int_kind)\n+    {\n+      ts.type = BT_INTEGER;\n+      ts.kind = gfc_c_int_kind;\n+      ts.derived = NULL;\n+      ts.cl = NULL;\n+      gfc_convert_type (unit, &ts, 2);\n+    }\n+\n+  f->value.function.name = gfc_get_string (PREFIX(\"ttynam\"));\n+}\n+\n+\n void\n gfc_resolve_unpack (gfc_expr * f, gfc_expr * vector, gfc_expr * mask,\n \t\t    gfc_expr * field ATTRIBUTE_UNUSED)"}, {"sha": "6b349a854a6d8970f314e7897f40ca69f6e8b8e8", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -87,6 +87,7 @@ tree gfor_fndecl_select_string;\n tree gfor_fndecl_runtime_error;\n tree gfor_fndecl_set_fpe;\n tree gfor_fndecl_set_std;\n+tree gfor_fndecl_ttynam;\n tree gfor_fndecl_in_pack;\n tree gfor_fndecl_in_unpack;\n tree gfor_fndecl_associated;\n@@ -1780,6 +1781,7 @@ gfc_build_intrinsic_function_decls (void)\n   tree gfc_complex8_type_node = gfc_get_complex_type (8);\n   tree gfc_complex10_type_node = gfc_get_complex_type (10);\n   tree gfc_complex16_type_node = gfc_get_complex_type (16);\n+  tree gfc_c_int_type_node = gfc_get_int_type (gfc_c_int_kind);\n \n   /* String functions.  */\n   gfor_fndecl_copy_string =\n@@ -1849,6 +1851,14 @@ gfc_build_intrinsic_function_decls (void)\n                                      pchar_type_node,\n                                      gfc_int4_type_node);\n \n+  gfor_fndecl_ttynam =\n+    gfc_build_library_function_decl (get_identifier (PREFIX(\"ttynam\")),\n+                                     void_type_node,\n+                                     3,\n+                                     pchar_type_node,\n+                                     gfc_charlen_type_node,\n+                                     gfc_c_int_type_node);\n+\n   gfor_fndecl_adjustl =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"adjustl\")),\n \t\t\t\t     void_type_node,"}, {"sha": "8a1fa0c4729c24a5ae8f5e8a4c5012b2909ad3dc", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -1037,6 +1037,44 @@ gfc_conv_intrinsic_char (gfc_se * se, gfc_expr * expr)\n }\n \n \n+/* Return a character string containing the tty name.  */\n+\n+static void\n+gfc_conv_intrinsic_ttynam (gfc_se * se, gfc_expr * expr)\n+{\n+  tree var;\n+  tree len;\n+  tree tmp;\n+  tree arglist;\n+  tree type;\n+  tree cond;\n+  tree gfc_int4_type_node = gfc_get_int_type (4);\n+\n+  type = build_pointer_type (gfc_character1_type_node);\n+  var = gfc_create_var (type, \"pstr\");\n+  len = gfc_create_var (gfc_int4_type_node, \"len\");\n+\n+  tmp = gfc_conv_intrinsic_function_args (se, expr);\n+  arglist = gfc_chainon_list (NULL_TREE, gfc_build_addr_expr (NULL, var));\n+  arglist = gfc_chainon_list (arglist, gfc_build_addr_expr (NULL, len));\n+  arglist = chainon (arglist, tmp);\n+\n+  tmp = gfc_build_function_call (gfor_fndecl_ttynam, arglist);\n+  gfc_add_expr_to_block (&se->pre, tmp);\n+\n+  /* Free the temporary afterwards, if necessary.  */\n+  cond = build2 (GT_EXPR, boolean_type_node, len,\n+\t\t build_int_cst (TREE_TYPE (len), 0));\n+  arglist = gfc_chainon_list (NULL_TREE, var);\n+  tmp = gfc_build_function_call (gfor_fndecl_internal_free, arglist);\n+  tmp = build3_v (COND_EXPR, cond, tmp, build_empty_stmt ());\n+  gfc_add_expr_to_block (&se->post, tmp);\n+\n+  se->expr = var;\n+  se->string_length = len;\n+}\n+\n+\n /* Get the minimum/maximum value of all the parameters.\n     minmax (a1, a2, a3, ...)\n     {\n@@ -3073,6 +3111,10 @@ gfc_conv_intrinsic_function (gfc_se * se, gfc_expr * expr)\n       gfc_conv_intrinsic_transfer (se, expr);\n       break;\n \n+    case GFC_ISYM_TTYNAM:\n+      gfc_conv_intrinsic_ttynam (se, expr);\n+      break;\n+\n     case GFC_ISYM_UBOUND:\n       gfc_conv_intrinsic_bound (se, expr, 1);\n       break;"}, {"sha": "30731a63714b4021fee90c3788a1806940ff130f", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -457,6 +457,7 @@ extern GTY(()) tree gfor_fndecl_select_string;\n extern GTY(()) tree gfor_fndecl_runtime_error;\n extern GTY(()) tree gfor_fndecl_set_fpe;\n extern GTY(()) tree gfor_fndecl_set_std;\n+extern GTY(()) tree gfor_fndecl_ttynam;\n extern GTY(()) tree gfor_fndecl_in_pack;\n extern GTY(()) tree gfor_fndecl_in_unpack;\n extern GTY(()) tree gfor_fndecl_associated;"}, {"sha": "0459b6ba9e6fd0f7383ebdd9e714f7766db3247a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -1,3 +1,7 @@\n+2005-11-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/tty.c (ttynam): New function.\n+\n 2005-11-04  Steven G. Kargl <kargls@comcast.net>\n \n \tPR fortran/24636"}, {"sha": "f4bfecd935317c9e7e7cbb372ada0bfc816cc7cc", "filename": "libgfortran/intrinsics/tty.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25fc05eb629e6befabbe5ed43510d91acf47562a/libgfortran%2Fintrinsics%2Ftty.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25fc05eb629e6befabbe5ed43510d91acf47562a/libgfortran%2Fintrinsics%2Ftty.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ftty.c?ref=25fc05eb629e6befabbe5ed43510d91acf47562a", "patch": "@@ -31,6 +31,7 @@ Boston, MA 02110-1301, USA.  */\n #include \"config.h\"\n #include \"libgfortran.h\"\n #include \"../io/io.h\"\n+\n #include <string.h>\n \n /* LOGICAL FUNCTION ISATTY(UNIT)\n@@ -95,3 +96,28 @@ ttynam_sub (int *unit, char * name, gfc_charlen_type name_len)\n \t}\n     }\n }\n+\n+\n+extern void ttynam (char **, gfc_charlen_type *, int);\n+export_proto(ttynam);\n+\n+void\n+ttynam (char ** name, gfc_charlen_type * name_len, int unit)\n+{\n+  gfc_unit *u;\n+\n+  u = find_unit (unit);\n+  if (u != NULL)\n+    {\n+      *name = stream_ttyname (u->s);\n+      if (*name != NULL)\n+\t{\n+\t  *name_len = strlen (*name);\n+\t  *name = strdup (*name);\n+\t  return;\n+\t}\n+    }\n+\n+  *name_len = 0;\n+  *name = NULL;\n+}"}]}