{"sha": "e1a4071f3ad63741e3e8616e8e0507de15b47b62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFhNDA3MWYzYWQ2Mzc0MWUzZTg2MTZlOGUwNTA3ZGUxNWI0N2I2Mg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1994-11-29T05:45:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1994-11-29T05:45:16Z"}, "message": "explow.c (hard_function_value): Change a register in BLKmode to a register in a sufficiently wide integer mode.\n\n\t* explow.c (hard_function_value): Change a register in BLKmode\n\tto a register in a sufficiently wide integer mode.\n\nFrom-SVN: r8578", "tree": {"sha": "695a4e5841a1cc4fecfbc358f12339081d066bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/695a4e5841a1cc4fecfbc358f12339081d066bf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1a4071f3ad63741e3e8616e8e0507de15b47b62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a4071f3ad63741e3e8616e8e0507de15b47b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a4071f3ad63741e3e8616e8e0507de15b47b62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a4071f3ad63741e3e8616e8e0507de15b47b62/comments", "author": null, "committer": null, "parents": [{"sha": "4c485b6355ddd88298476ab826e10fa92de20874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c485b6355ddd88298476ab826e10fa92de20874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c485b6355ddd88298476ab826e10fa92de20874"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "78e379716dea1447f1f06fee96d609c270e2a2a7", "filename": "gcc/explow.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1a4071f3ad63741e3e8616e8e0507de15b47b62/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1a4071f3ad63741e3e8616e8e0507de15b47b62/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=e1a4071f3ad63741e3e8616e8e0507de15b47b62", "patch": "@@ -1100,7 +1100,28 @@ hard_function_value (valtype, func)\n      tree valtype;\n      tree func;\n {\n-  return FUNCTION_VALUE (valtype, func);\n+  rtx val = FUNCTION_VALUE (valtype, func);\n+  if (GET_CODE (val) == REG\n+      && GET_MODE (val) == BLKmode)\n+    {\n+      int bytes = int_size_in_bytes (valtype);\n+      enum machine_mode tmpmode;\n+      for (tmpmode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n+           tmpmode != MAX_MACHINE_MODE;\n+           tmpmode = GET_MODE_WIDER_MODE (tmpmode))\n+        {\n+          /* Have we found a large enough mode?  */\n+          if (GET_MODE_SIZE (tmpmode) >= bytes)\n+            break;\n+        }\n+\n+      /* No suitable mode found.  */\n+      if (tmpmode == MAX_MACHINE_MODE)\n+        abort ();\n+\n+      PUT_MODE (val, tmpmode);\n+    }      \n+  return val;\n }\n \n /* Return an rtx representing the register or memory location"}]}