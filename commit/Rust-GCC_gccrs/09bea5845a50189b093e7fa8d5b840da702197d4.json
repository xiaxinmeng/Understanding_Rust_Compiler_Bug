{"sha": "09bea5845a50189b093e7fa8d5b840da702197d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDliZWE1ODQ1YTUwMTg5YjA5M2U3ZmE4ZDViODQwZGE3MDIxOTdkNA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-22T18:08:26Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-31T22:24:42Z"}, "message": "analyzer: fix ICE handling void-type (PR 93373)\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/93373\n\t* region-model.cc (ASSERT_COMPAT_TYPES): Convert to...\n\t(assert_compat_types): ...this, and bail when either type is NULL,\n\tor when VOID_TYPE_P (dst_type).\n\t(region_model::get_lvalue): Update for above conversion.\n\t(region_model::get_rvalue): Likewise.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/93373\n\t* gcc.dg/analyzer/torture/pr93373.c: New test.", "tree": {"sha": "5e817797f3851e12dda366f127f2884d57473964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e817797f3851e12dda366f127f2884d57473964"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09bea5845a50189b093e7fa8d5b840da702197d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09bea5845a50189b093e7fa8d5b840da702197d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09bea5845a50189b093e7fa8d5b840da702197d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09bea5845a50189b093e7fa8d5b840da702197d4/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a07345c4f8dabc286fc470e76c53473e5bc3eb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a07345c4f8dabc286fc470e76c53473e5bc3eb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a07345c4f8dabc286fc470e76c53473e5bc3eb7"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "416fc9201d33ab6bbdb5b7f5ca259ea5a0ee5dec", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09bea5845a50189b093e7fa8d5b840da702197d4/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09bea5845a50189b093e7fa8d5b840da702197d4/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=09bea5845a50189b093e7fa8d5b840da702197d4", "patch": "@@ -1,3 +1,12 @@\n+2020-01-31  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93373\n+\t* region-model.cc (ASSERT_COMPAT_TYPES): Convert to...\n+\t(assert_compat_types): ...this, and bail when either type is NULL,\n+\tor when VOID_TYPE_P (dst_type).\n+\t(region_model::get_lvalue): Update for above conversion.\n+\t(region_model::get_rvalue): Likewise.\n+\n 2020-01-31  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93379"}, {"sha": "eb6d8f3cf3a31def603646374b4c70e8c72828ce", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09bea5845a50189b093e7fa8d5b840da702197d4/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09bea5845a50189b093e7fa8d5b840da702197d4/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=09bea5845a50189b093e7fa8d5b840da702197d4", "patch": "@@ -4701,8 +4701,12 @@ region_model::get_lvalue_1 (path_var pv, region_model_context *ctxt)\n \n /* Assert that SRC_TYPE can be converted to DST_TYPE as a no-op.  */\n \n-#define ASSERT_COMPAT_TYPES(SRC_TYPE, DST_TYPE) \\\n-  gcc_checking_assert (useless_type_conversion_p ((SRC_TYPE), (DST_TYPE)))\n+static void\n+assert_compat_types (tree src_type, tree dst_type)\n+{\n+  if (src_type && dst_type && !VOID_TYPE_P (dst_type))\n+    gcc_checking_assert (useless_type_conversion_p (src_type, dst_type));\n+}\n \n /* Get the id of the region for PV within this region_model,\n    emitting any diagnostics to CTXT.  */\n@@ -4714,7 +4718,7 @@ region_model::get_lvalue (path_var pv, region_model_context *ctxt)\n     return region_id::null ();\n \n   region_id result_rid = get_lvalue_1 (pv, ctxt);\n-  ASSERT_COMPAT_TYPES (get_region (result_rid)->get_type (),\n+  assert_compat_types (get_region (result_rid)->get_type (),\n \t\t       TREE_TYPE (pv.m_tree));\n   return result_rid;\n }\n@@ -4795,7 +4799,7 @@ region_model::get_rvalue (path_var pv, region_model_context *ctxt)\n     return svalue_id::null ();\n   svalue_id result_sid = get_rvalue_1 (pv, ctxt);\n \n-  ASSERT_COMPAT_TYPES (get_svalue (result_sid)->get_type (),\n+  assert_compat_types (get_svalue (result_sid)->get_type (),\n \t\t       TREE_TYPE (pv.m_tree));\n \n   return result_sid;"}, {"sha": "d13768a16f2796cb15f1b083fc60a167ad746e7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09bea5845a50189b093e7fa8d5b840da702197d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09bea5845a50189b093e7fa8d5b840da702197d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09bea5845a50189b093e7fa8d5b840da702197d4", "patch": "@@ -1,3 +1,8 @@\n+2020-01-31  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93373\n+\t* gcc.dg/analyzer/torture/pr93373.c: New test.\n+\n 2020-01-31  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/91333"}, {"sha": "c205ee13465b302e75614ac899e5c8b082450019", "filename": "gcc/testsuite/gcc.dg/analyzer/torture/pr93373.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09bea5845a50189b093e7fa8d5b840da702197d4/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fpr93373.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09bea5845a50189b093e7fa8d5b840da702197d4/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fpr93373.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftorture%2Fpr93373.c?ref=09bea5845a50189b093e7fa8d5b840da702197d4", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile }\n+   { dg-require-effective-target alloca } */\n+#include \"../../Warray-bounds-41.c\""}]}