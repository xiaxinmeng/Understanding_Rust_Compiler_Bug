{"sha": "fce22de5d29dc5fb01375560db3d4d1bfc11f889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNlMjJkZTVkMjlkYzVmYjAxMzc1NTYwZGIzZDRkMWJmYzExZjg4OQ==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2004-10-16T16:58:59Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2004-10-16T16:58:59Z"}, "message": "re PR tree-optimization/17766 (cc1 hangs in with -O3, works with -O2)\n\n\tPR tree-optimization/17766\n\t* basic-block.h (enum dom_state): DOM_CONS_OK removed.\n\t(dom_info_available_p): Declare.\n\t* cfghooks.c (split_block, make_forwarder_block): Use\n\tdom_info_available_p.\n\t* dominance.c (compute_dom_fast_query, calculate_dominance_info,\n\tfree_dominance_info, verify_dominators): Ditto.\n\t(dom_info_available_p): New function.\n\t* tree-cfg.c (cleanup_control_expr_graph): Free dominance information.\n\t(thread_jumps): Use dom_info_available_p.\n\t* tree-complex.c (expand_complex_div_wide): Ditto.\n\t* tree-mudflap.c (mf_build_check_statement_for): Ditto.\n\nFrom-SVN: r89147", "tree": {"sha": "0af8e2a4f49682307883dde1cf867f72847cd300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0af8e2a4f49682307883dde1cf867f72847cd300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fce22de5d29dc5fb01375560db3d4d1bfc11f889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fce22de5d29dc5fb01375560db3d4d1bfc11f889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fce22de5d29dc5fb01375560db3d4d1bfc11f889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fce22de5d29dc5fb01375560db3d4d1bfc11f889/comments", "author": null, "committer": null, "parents": [{"sha": "80cad5faeb98e96f52597f2e8817c742a1ddacd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80cad5faeb98e96f52597f2e8817c742a1ddacd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80cad5faeb98e96f52597f2e8817c742a1ddacd0"}], "stats": {"total": 53, "additions": 35, "deletions": 18}, "files": [{"sha": "ae3a92a3788e3bfe534bf480abd01cb5c0758f45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fce22de5d29dc5fb01375560db3d4d1bfc11f889", "patch": "@@ -1,3 +1,18 @@\n+2004-10-16  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/17766\n+\t* basic-block.h (enum dom_state): DOM_CONS_OK removed.\n+\t(dom_info_available_p): Declare.\n+\t* cfghooks.c (split_block, make_forwarder_block): Use\n+\tdom_info_available_p.\n+\t* dominance.c (compute_dom_fast_query, calculate_dominance_info,\n+\tfree_dominance_info, verify_dominators): Ditto.\n+\t(dom_info_available_p): New function.\n+\t* tree-cfg.c (cleanup_control_expr_graph): Free dominance information.\n+\t(thread_jumps): Use dom_info_available_p.\n+\t* tree-complex.c (expand_complex_div_wide): Ditto.\n+\t* tree-mudflap.c (mf_build_check_statement_for): Ditto.\n+\n 2004-10-16  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-ssa-loop-ivopts.c (struct ivopts_data): New field important_candidates."}, {"sha": "534fd10364e75f0b9909125baad8bec69206a19a", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=fce22de5d29dc5fb01375560db3d4d1bfc11f889", "patch": "@@ -848,14 +848,13 @@ enum cdi_direction\n enum dom_state\n {\n   DOM_NONE,\t\t/* Not computed at all.  */\n-  DOM_CONS_OK,\t\t/* The data is conservatively OK, i.e. if it says you that A dominates B,\n-\t\t\t   it indeed does.  */\n   DOM_NO_FAST_QUERY,\t/* The data is OK, but the fast query data are not usable.  */\n   DOM_OK\t\t/* Everything is ok.  */\n };\n \n extern enum dom_state dom_computed[2];\n \n+extern bool dom_info_available_p (enum cdi_direction);\n extern void calculate_dominance_info (enum cdi_direction);\n extern void free_dominance_info (enum cdi_direction);\n extern basic_block nearest_common_dominator (enum cdi_direction,"}, {"sha": "46e0f8c67eab138547cb5f72f1628a00c768c7dc", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=fce22de5d29dc5fb01375560db3d4d1bfc11f889", "patch": "@@ -318,7 +318,7 @@ split_block (basic_block bb, void *i)\n   new_bb->frequency = bb->frequency;\n   new_bb->loop_depth = bb->loop_depth;\n \n-  if (dom_computed[CDI_DOMINATORS] >= DOM_CONS_OK)\n+  if (dom_info_available_p (CDI_DOMINATORS))\n     {\n       redirect_immediate_dominators (CDI_DOMINATORS, bb, new_bb);\n       set_immediate_dominator (CDI_DOMINATORS, new_bb, bb);\n@@ -592,7 +592,7 @@ make_forwarder_block (basic_block bb, bool (*redirect_edge_p) (edge),\n \tnew_bb_cbk (jump);\n     }\n \n-  if (dom_computed[CDI_DOMINATORS] >= DOM_CONS_OK)\n+  if (dom_info_available_p (CDI_DOMINATORS))\n     {\n       basic_block doms_to_fix[2];\n "}, {"sha": "47cb4057e65a48148b1c22be025e580a6078cb62", "filename": "gcc/dominance.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Fdominance.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Fdominance.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdominance.c?ref=fce22de5d29dc5fb01375560db3d4d1bfc11f889", "patch": "@@ -592,7 +592,7 @@ compute_dom_fast_query (enum cdi_direction dir)\n   int num = 0;\n   basic_block bb;\n \n-  gcc_assert (dom_computed[dir] >= DOM_NO_FAST_QUERY);\n+  gcc_assert (dom_info_available_p (dir));\n \n   if (dom_computed[dir] == DOM_OK)\n     return;\n@@ -618,11 +618,8 @@ calculate_dominance_info (enum cdi_direction dir)\n   if (dom_computed[dir] == DOM_OK)\n     return;\n \n-  if (dom_computed[dir] != DOM_NO_FAST_QUERY)\n+  if (!dom_info_available_p (dir))\n     {\n-      if (dom_computed[dir] != DOM_NONE)\n-\tfree_dominance_info (dir);\n-\n       gcc_assert (!n_bbs_in_dom_tree[dir]);\n \n       FOR_ALL_BB (b)\n@@ -656,7 +653,7 @@ free_dominance_info (enum cdi_direction dir)\n {\n   basic_block bb;\n \n-  if (!dom_computed[dir])\n+  if (!dom_info_available_p (dir))\n     return;\n \n   FOR_ALL_BB (bb)\n@@ -821,7 +818,7 @@ verify_dominators (enum cdi_direction dir)\n   int err = 0;\n   basic_block bb;\n \n-  gcc_assert (dom_computed[dir]);\n+  gcc_assert (dom_info_available_p (dir));\n \n   FOR_EACH_BB (bb)\n     {\n@@ -841,8 +838,7 @@ verify_dominators (enum cdi_direction dir)\n \t}\n     }\n \n-  if (dir == CDI_DOMINATORS\n-      && dom_computed[dir] >= DOM_NO_FAST_QUERY)\n+  if (dir == CDI_DOMINATORS)\n     {\n       FOR_EACH_BB (bb)\n \t{\n@@ -977,6 +973,14 @@ next_dom_son (enum cdi_direction dir, basic_block bb)\n   return next->father->son == next ? NULL : next->data;\n }\n \n+/* Returns true if dominance information for direction DIR is available.  */\n+\n+bool\n+dom_info_available_p (enum cdi_direction dir)\n+{\n+  return dom_computed[dir] != DOM_NONE;\n+}\n+\n void\n debug_dominance_info (enum cdi_direction dir)\n {"}, {"sha": "7874000a1d5fb1ee50ce4d2cc1282076179f48cb", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=fce22de5d29dc5fb01375560db3d4d1bfc11f889", "patch": "@@ -1927,8 +1927,7 @@ cleanup_control_expr_graph (basic_block bb, block_stmt_iterator bsi)\n   taken_edge->flags = EDGE_FALLTHRU;\n \n   /* We removed some paths from the cfg.  */\n-  if (dom_computed[CDI_DOMINATORS] >= DOM_CONS_OK)\n-    dom_computed[CDI_DOMINATORS] = DOM_CONS_OK;\n+  free_dominance_info (CDI_DOMINATORS);\n \n   return retval;\n }\n@@ -3908,7 +3907,7 @@ thread_jumps (void)\n \t    }\n \n \t  /* Update the dominators.  */\n-\t  if (dom_computed[CDI_DOMINATORS] >= DOM_CONS_OK)\n+\t  if (dom_info_available_p (CDI_DOMINATORS))\n \t    {\n \t      /* If the dominator of the destination was in the path, set its\n \t\t dominator to the start of the redirected edge.  */"}, {"sha": "1b49601d0946e72d437bee2ade8bf06f1de85384", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=fce22de5d29dc5fb01375560db3d4d1bfc11f889", "patch": "@@ -216,7 +216,7 @@ expand_complex_div_wide (block_stmt_iterator *bsi, tree inner_type,\n \n       /* Update dominance info.  Note that bb_join's data was\n          updated by split_block.  */\n-      if (dom_computed[CDI_DOMINATORS] >= DOM_CONS_OK)\n+      if (dom_info_available_p (CDI_DOMINATORS))\n         {\n           set_immediate_dominator (CDI_DOMINATORS, bb_true, bb_cond);\n           set_immediate_dominator (CDI_DOMINATORS, bb_false, bb_cond);"}, {"sha": "a65d393649b506c42749292c0ca6d65cf46d4982", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fce22de5d29dc5fb01375560db3d4d1bfc11f889/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=fce22de5d29dc5fb01375560db3d4d1bfc11f889", "patch": "@@ -551,7 +551,7 @@ mf_build_check_statement_for (tree base, tree addr, tree limit,\n \n   /* Update dominance info.  Note that bb_join's data was\n      updated by split_block.  */\n-  if (dom_computed[CDI_DOMINATORS] >= DOM_CONS_OK)\n+  if (dom_info_available_p (CDI_DOMINATORS))\n     {\n       set_immediate_dominator (CDI_DOMINATORS, then_bb, cond_bb);\n       set_immediate_dominator (CDI_DOMINATORS, join_bb, cond_bb);"}]}