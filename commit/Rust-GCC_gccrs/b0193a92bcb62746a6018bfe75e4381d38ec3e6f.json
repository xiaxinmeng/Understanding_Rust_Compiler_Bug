{"sha": "b0193a92bcb62746a6018bfe75e4381d38ec3e6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAxOTNhOTJiY2I2Mjc0NmE2MDE4YmZlNzVlNDM4MWQzOGVjM2U2Zg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-11-12T22:36:35Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-11-12T22:36:35Z"}, "message": "Split mov{df,sf}_internal into 2 insns, one for soft float, one for hard.\n\nFrom-SVN: r2748", "tree": {"sha": "94bc0a7edd0d396edc38345ee48deefa2d29e4bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94bc0a7edd0d396edc38345ee48deefa2d29e4bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0193a92bcb62746a6018bfe75e4381d38ec3e6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0193a92bcb62746a6018bfe75e4381d38ec3e6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0193a92bcb62746a6018bfe75e4381d38ec3e6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0193a92bcb62746a6018bfe75e4381d38ec3e6f/comments", "author": null, "committer": null, "parents": [{"sha": "e1f998ad669d4b1244255742eab338eaf06508d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f998ad669d4b1244255742eab338eaf06508d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1f998ad669d4b1244255742eab338eaf06508d5"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "d4a26f21f073e77f08129f2078ed6ffb16253be8", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 39, "deletions": 10, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0193a92bcb62746a6018bfe75e4381d38ec3e6f/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0193a92bcb62746a6018bfe75e4381d38ec3e6f/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=b0193a92bcb62746a6018bfe75e4381d38ec3e6f", "patch": "@@ -2013,19 +2013,34 @@ move\\\\t%0,%z4\\\\n\\\\\n     }\n }\")\n \n-(define_insn \"movsf_internal\"\n+(define_insn \"movsf_internal1\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,f,f,R,m,*f,*d,*d,*d,*d,*R,*m\")\n \t(match_operand:SF 1 \"general_operand\" \"f,G,R,Em,fG,fG,*d,*f,*G*d,*R,*E*m,*d,*d\"))]\n-  \"register_operand (operands[0], SFmode)\n-   || register_operand (operands[1], SFmode)\n-   || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n-   || operands[1] == CONST0_RTX (SFmode)\"\n+  \"TARGET_HARD_FLOAT\n+   && (register_operand (operands[0], SFmode)\n+       || register_operand (operands[1], SFmode)\n+       || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n+       || operands[1] == CONST0_RTX (SFmode))\"\n   \"* return mips_move_1word (operands, insn, FALSE);\"\n   [(set_attr \"type\"\t\"move,xfer,load,load,store,store,xfer,xfer,move,load,load,store,store\")\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"1,1,1,2,1,2,1,1,1,1,2,1,2\")])\n \n \n+(define_insn \"movsf_internal2\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=d,d,d,R,m\")\n+\t(match_operand:SF 1 \"general_operand\" \"      Gd,R,Em,d,d\"))]\n+  \"TARGET_SOFT_FLOAT\n+   && (register_operand (operands[0], SFmode)\n+       || register_operand (operands[1], SFmode)\n+       || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n+       || operands[1] == CONST0_RTX (SFmode))\"\n+  \"* return mips_move_1word (operands, insn, FALSE);\"\n+  [(set_attr \"type\"\t\"move,load,load,store,store\")\n+   (set_attr \"mode\"\t\"SF\")\n+   (set_attr \"length\"\t\"1,1,2,1,2\")])\n+\n+\n ;; 64-bit floating point moves\n \n (define_expand \"movdf\"\n@@ -2046,18 +2061,32 @@ move\\\\t%0,%z4\\\\n\\\\\n     }\n }\")\n \n-(define_insn \"movdf_internal\"\n+(define_insn \"movdf_internal1\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,f,R,o,f,*f,*d,*d,*d,*d,*R,*o\")\n \t(match_operand:DF 1 \"general_operand\" \"f,R,o,fG,fG,E,*d,*f,*d*G,*R,*o*E,*d,*d\"))]\n-  \"register_operand (operands[0], DFmode)\n-   || register_operand (operands[1], DFmode)\n-   || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n-   || operands[1] == CONST0_RTX (DFmode)\"\n+  \"TARGET_HARD_FLOAT\n+   && (register_operand (operands[0], DFmode)\n+       || register_operand (operands[1], DFmode)\n+       || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n+       || operands[1] == CONST0_RTX (DFmode))\"\n   \"* return mips_move_2words (operands, insn); \"\n   [(set_attr \"type\"\t\"move,load,load,store,store,load,xfer,xfer,move,load,load,store,store\")\n    (set_attr \"mode\"\t\"DF\")\n    (set_attr \"length\"\t\"1,2,4,2,4,4,2,2,2,2,4,2,4\")])\n \n+(define_insn \"movdf_internal2\"\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=d,d,d,R,o\")\n+\t(match_operand:DF 1 \"general_operand\" \"dG,R,oE,d,d\"))]\n+  \"TARGET_SOFT_FLOAT\n+   && (register_operand (operands[0], DFmode)\n+       || register_operand (operands[1], DFmode)\n+       || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n+       || operands[1] == CONST0_RTX (DFmode))\"\n+  \"* return mips_move_2words (operands, insn); \"\n+  [(set_attr \"type\"\t\"move,load,load,store,store\")\n+   (set_attr \"mode\"\t\"DF\")\n+   (set_attr \"length\"\t\"2,2,4,2,4\")])\n+\n (define_split\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(match_operand:DF 1 \"register_operand\" \"\"))]"}]}