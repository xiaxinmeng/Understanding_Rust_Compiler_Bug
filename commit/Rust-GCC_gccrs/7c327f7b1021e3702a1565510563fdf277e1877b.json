{"sha": "7c327f7b1021e3702a1565510563fdf277e1877b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzMjdmN2IxMDIxZTM3MDJhMTU2NTUxMDU2M2ZkZjI3N2UxODc3Yg==", "commit": {"author": {"name": "Cary Coutant", "email": "ccoutant@google.com", "date": "2013-10-04T16:25:23Z"}, "committer": {"name": "Cary Coutant", "email": "ccoutant@gcc.gnu.org", "date": "2013-10-04T16:25:23Z"}, "message": "dwarf2out.c (dw_sra_loc_expr): Release addr_table entries when discarding a location list expression (or a...\n\ngcc/\n\t* dwarf2out.c (dw_sra_loc_expr): Release addr_table entries when\n        discarding a location list expression (or a piece of one).\n\nFrom-SVN: r203206", "tree": {"sha": "00d883efeec6e1c3fe5f7040c899fec025669041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00d883efeec6e1c3fe5f7040c899fec025669041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c327f7b1021e3702a1565510563fdf277e1877b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c327f7b1021e3702a1565510563fdf277e1877b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c327f7b1021e3702a1565510563fdf277e1877b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c327f7b1021e3702a1565510563fdf277e1877b/comments", "author": null, "committer": null, "parents": [{"sha": "3700bce33c7d1492d3970d45edb33581e2a18d63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3700bce33c7d1492d3970d45edb33581e2a18d63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3700bce33c7d1492d3970d45edb33581e2a18d63"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "065ebf19ebf12b7dd22851dba0aa8730564c53dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c327f7b1021e3702a1565510563fdf277e1877b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c327f7b1021e3702a1565510563fdf277e1877b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c327f7b1021e3702a1565510563fdf277e1877b", "patch": "@@ -1,3 +1,8 @@\n+2013-10-04  Cary Coutant  <ccoutant@google.com>\n+\n+\t* dwarf2out.c (dw_sra_loc_expr): Release addr_table entries when\n+        discarding a location list expression (or a piece of one).\n+\n 2013-10-03  Jan Hubicka  <jh@suse.cz>\n \n \t* config/i386/i386.c (ix86_issue_rate): Pentium4, Nocona has issue"}, {"sha": "3f4e314e1d43c772bc79a00651c397ef08cf1818", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c327f7b1021e3702a1565510563fdf277e1877b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c327f7b1021e3702a1565510563fdf277e1877b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7c327f7b1021e3702a1565510563fdf277e1877b", "patch": "@@ -13492,6 +13492,9 @@ dw_sra_loc_expr (tree decl, rtx loc)\n       if (last != NULL && opsize != bitsize)\n \t{\n \t  padsize += bitsize;\n+\t  /* Discard the current piece of the descriptor and release any\n+\t     addr_table entries it uses.  */\n+\t  remove_loc_list_addr_table_entries (cur_descr);\n \t  continue;\n \t}\n \n@@ -13500,18 +13503,24 @@ dw_sra_loc_expr (tree decl, rtx loc)\n       if (padsize)\n \t{\n \t  if (padsize > decl_size)\n-\t    return NULL;\n+\t    {\n+\t      remove_loc_list_addr_table_entries (cur_descr);\n+\t      goto discard_descr;\n+\t    }\n \t  decl_size -= padsize;\n \t  *descr_tail = new_loc_descr_op_bit_piece (padsize, 0);\n \t  if (*descr_tail == NULL)\n-\t    return NULL;\n+\t    {\n+\t      remove_loc_list_addr_table_entries (cur_descr);\n+\t      goto discard_descr;\n+\t    }\n \t  descr_tail = &(*descr_tail)->dw_loc_next;\n \t  padsize = 0;\n \t}\n       *descr_tail = cur_descr;\n       descr_tail = tail;\n       if (bitsize > decl_size)\n-\treturn NULL;\n+\tgoto discard_descr;\n       decl_size -= bitsize;\n       if (last == NULL)\n \t{\n@@ -13547,17 +13556,17 @@ dw_sra_loc_expr (tree decl, rtx loc)\n \t\t{\n \t\t  if (BYTES_BIG_ENDIAN != WORDS_BIG_ENDIAN\n \t\t      && (memsize > BITS_PER_WORD || bitsize > BITS_PER_WORD))\n-\t\t    return NULL;\n+\t\t    goto discard_descr;\n \t\t  if (memsize < bitsize)\n-\t\t    return NULL;\n+\t\t    goto discard_descr;\n \t\t  if (BITS_BIG_ENDIAN)\n \t\t    offset = memsize - bitsize;\n \t\t}\n \t    }\n \n \t  *descr_tail = new_loc_descr_op_bit_piece (bitsize, offset);\n \t  if (*descr_tail == NULL)\n-\t    return NULL;\n+\t    goto discard_descr;\n \t  descr_tail = &(*descr_tail)->dw_loc_next;\n \t}\n     }\n@@ -13568,9 +13577,14 @@ dw_sra_loc_expr (tree decl, rtx loc)\n     {\n       *descr_tail = new_loc_descr_op_bit_piece (decl_size, 0);\n       if (*descr_tail == NULL)\n-\treturn NULL;\n+\tgoto discard_descr;\n     }\n   return descr;\n+\n+discard_descr:\n+  /* Discard the descriptor and release any addr_table entries it uses.  */\n+  remove_loc_list_addr_table_entries (descr);\n+  return NULL;\n }\n \n /* Return the dwarf representation of the location list LOC_LIST of"}]}