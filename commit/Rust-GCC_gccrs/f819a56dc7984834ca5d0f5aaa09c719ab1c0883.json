{"sha": "f819a56dc7984834ca5d0f5aaa09c719ab1c0883", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgxOWE1NmRjNzk4NDgzNGNhNWQwZjVhYWEwOWM3MTlhYjFjMDg4Mw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-11-13T09:45:20Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-11-13T09:45:20Z"}, "message": "arm.c: Include aarch-cost-tables.h.\n\n\n\t* config/arm/arm.c: Include aarch-cost-tables.h.\n\t(generic_extra_costs): Move from here...\n\t* config/arm/aarch-cost-tables.h: ... To here.  New file.\n\nFrom-SVN: r204735", "tree": {"sha": "094ada75546e213f78605a4ff675dc12ea32d68b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/094ada75546e213f78605a4ff675dc12ea32d68b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f819a56dc7984834ca5d0f5aaa09c719ab1c0883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f819a56dc7984834ca5d0f5aaa09c719ab1c0883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f819a56dc7984834ca5d0f5aaa09c719ab1c0883", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f819a56dc7984834ca5d0f5aaa09c719ab1c0883/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47490470c6cfde4258f471641b65fb29fd30023a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47490470c6cfde4258f471641b65fb29fd30023a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47490470c6cfde4258f471641b65fb29fd30023a"}], "stats": {"total": 233, "additions": 134, "deletions": 99}, "files": [{"sha": "28e44407330d9d6a4aaf130ba8e7b6aa8bf326c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f819a56dc7984834ca5d0f5aaa09c719ab1c0883/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f819a56dc7984834ca5d0f5aaa09c719ab1c0883/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f819a56dc7984834ca5d0f5aaa09c719ab1c0883", "patch": "@@ -1,3 +1,9 @@\n+2013-11-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c: Include aarch-cost-tables.h.\n+\t(generic_extra_costs): Move from here...\n+\t* config/arm/aarch-cost-tables.h: ... To here.  New file.\n+\n 2013-11-13  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Sergey Lega  <sergey.s.lega@intel.com>"}, {"sha": "4b36abe0da418f6f4e51409ad1d65cd1c1d8f01c", "filename": "gcc/config/arm/aarch-cost-tables.h", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f819a56dc7984834ca5d0f5aaa09c719ab1c0883/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f819a56dc7984834ca5d0f5aaa09c719ab1c0883/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h?ref=f819a56dc7984834ca5d0f5aaa09c719ab1c0883", "patch": "@@ -0,0 +1,126 @@\n+/* RTX cost tables shared between arm and aarch64.\n+\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+   Contributed by ARM Ltd.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_AARCH_COST_TABLES_H\n+#define GCC_AARCH_COST_TABLES_H\n+\n+const struct cpu_cost_table generic_extra_costs =\n+{\n+  /* ALU */\n+  {\n+    0,\t\t\t/* Arith.  */\n+    0,\t\t\t/* Logical.  */\n+    0,\t\t\t/* Shift.  */\n+    COSTS_N_INSNS (1),\t/* Shift_reg.  */\n+    0,\t\t\t/* Arith_shift.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift_reg.  */\n+    0,\t\t\t/* Log_shift.  */\n+    COSTS_N_INSNS (1),\t/* Log_shift_reg.  */\n+    0,\t\t\t/* Extend.  */\n+    COSTS_N_INSNS (1),\t/* Extend_arith.  */\n+    0,\t\t\t/* Bfi.  */\n+    0,\t\t\t/* Bfx.  */\n+    0,\t\t\t/* Clz.  */\n+    COSTS_N_INSNS (1),\t/* non_exec.  */\n+    false\t\t/* non_exec_costs_exec.  */\n+  },\n+  {\n+    /* MULT SImode */\n+    {\n+      COSTS_N_INSNS (2),\t/* Simple.  */\n+      COSTS_N_INSNS (1),\t/* Flag_setting.  */\n+      COSTS_N_INSNS (2),\t/* Extend.  */\n+      COSTS_N_INSNS (3),\t/* Add.  */\n+      COSTS_N_INSNS (3),\t/* Extend_add.  */\n+      COSTS_N_INSNS (8)\t\t/* Idiv.  */\n+    },\n+    /* MULT DImode */\n+    {\n+      0,\t\t\t/* Simple (N/A).  */\n+      0,\t\t\t/* Flag_setting (N/A).  */\n+      COSTS_N_INSNS (2),\t/* Extend.  */\n+      0,\t\t\t/* Add (N/A).  */\n+      COSTS_N_INSNS (3),\t/* Extend_add.  */\n+      0\t\t\t\t/* Idiv (N/A).  */\n+    }\n+  },\n+  /* LD/ST */\n+  {\n+    COSTS_N_INSNS (2),\t/* Load.  */\n+    COSTS_N_INSNS (2),\t/* Load_sign_extend.  */\n+    COSTS_N_INSNS (3),\t/* Ldrd.  */\n+    COSTS_N_INSNS (2),\t/* Ldm_1st.  */\n+    1,\t\t\t/* Ldm_regs_per_insn_1st.  */\n+    1,\t\t\t/* Ldm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (2),\t/* Loadf.  */\n+    COSTS_N_INSNS (3),\t/* Loadd.  */\n+    COSTS_N_INSNS (1),  /* Load_unaligned.  */\n+    COSTS_N_INSNS (2),\t/* Store.  */\n+    COSTS_N_INSNS (3),\t/* Strd.  */\n+    COSTS_N_INSNS (2),\t/* Stm_1st.  */\n+    1,\t\t\t/* Stm_regs_per_insn_1st.  */\n+    1,\t\t\t/* Stm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (2),\t/* Storef.  */\n+    COSTS_N_INSNS (3),\t/* Stored.  */\n+    COSTS_N_INSNS (1)  /* Store_unaligned.  */\n+  },\n+  {\n+    /* FP SFmode */\n+    {\n+      COSTS_N_INSNS (7),\t/* Div.  */\n+      COSTS_N_INSNS (2),\t/* Mult.  */\n+      COSTS_N_INSNS (3),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (3),\t/* Fma.  */\n+      COSTS_N_INSNS (1),\t/* Addsub.  */\n+      0,\t\t\t/* Fpconst.  */\n+      0,\t\t\t/* Neg.  */\n+      0,\t\t\t/* Compare.  */\n+      0,\t\t\t/* Widen.  */\n+      0,\t\t\t/* Narrow.  */\n+      0,\t\t\t/* Toint.  */\n+      0,\t\t\t/* Fromint.  */\n+      0\t\t\t\t/* Roundint.  */\n+    },\n+    /* FP DFmode */\n+    {\n+      COSTS_N_INSNS (15),\t/* Div.  */\n+      COSTS_N_INSNS (5),\t/* Mult.  */\n+      COSTS_N_INSNS (7),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (7),\t/* Fma.  */\n+      COSTS_N_INSNS (3),\t/* Addsub.  */\n+      0,\t\t\t/* Fpconst.  */\n+      0,\t\t\t/* Neg.  */\n+      0,\t\t\t/* Compare.  */\n+      0,\t\t\t/* Widen.  */\n+      0,\t\t\t/* Narrow.  */\n+      0,\t\t\t/* Toint.  */\n+      0,\t\t\t/* Fromint.  */\n+      0\t\t\t\t/* Roundint.  */\n+    }\n+  },\n+  /* Vector */\n+  {\n+    COSTS_N_INSNS (1)\t/* Alu.  */\n+  }\n+};\n+\n+#endif /* GCC_AARCH_COST_TABLES_H */\n+"}, {"sha": "d3734c33f0b560677f75abc406ad271d8baa88f3", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 99, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f819a56dc7984834ca5d0f5aaa09c719ab1c0883/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f819a56dc7984834ca5d0f5aaa09c719ab1c0883/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f819a56dc7984834ca5d0f5aaa09c719ab1c0883", "patch": "@@ -949,106 +949,9 @@ struct cpu_vec_costs arm_default_vec_cost = {\n   1,\t\t\t\t\t/* cond_not_taken_branch_cost.  */\n };\n \n+/* Cost tables for AArch32 + AArch64 cores should go in aarch-cost-tables.h  */\n+#include \"aarch-cost-tables.h\"\n \n-const struct cpu_cost_table generic_extra_costs =\n-{\n-  /* ALU */\n-  {\n-    0,\t\t\t/* Arith.  */\n-    0,\t\t\t/* Logical.  */\n-    0,\t\t\t/* Shift.  */\n-    COSTS_N_INSNS (1),\t/* Shift_reg.  */\n-    0,\t\t\t/* Arith_shift.  */\n-    COSTS_N_INSNS (1),\t/* Arith_shift_reg.  */\n-    0,\t\t\t/* Log_shift.  */\n-    COSTS_N_INSNS (1),\t/* Log_shift_reg.  */\n-    0,\t\t\t/* Extend.  */\n-    COSTS_N_INSNS (1),\t/* Extend_arith.  */\n-    0,\t\t\t/* Bfi.  */\n-    0,\t\t\t/* Bfx.  */\n-    0,\t\t\t/* Clz.  */\n-    COSTS_N_INSNS (1),\t/* non_exec.  */\n-    false\t\t/* non_exec_costs_exec.  */\n-  },\n-  /* MULT SImode */\n-  {\n-    {\n-      COSTS_N_INSNS (2),\t/* Simple.  */\n-      COSTS_N_INSNS (1),\t/* Flag_setting.  */\n-      COSTS_N_INSNS (2),\t/* Extend.  */\n-      COSTS_N_INSNS (3),\t/* Add.  */\n-      COSTS_N_INSNS (3),\t/* Extend_add.  */\n-      COSTS_N_INSNS (8)\t\t/* Idiv.  */\n-    },\n-    /* MULT DImode */\n-    {\n-      0,\t\t\t/* Simple (N/A).  */\n-      0,\t\t\t/* Flag_setting (N/A).  */\n-      COSTS_N_INSNS (2),\t/* Extend.  */\n-      0,\t\t\t/* Add (N/A).  */\n-      COSTS_N_INSNS (3),\t/* Extend_add.  */\n-      0\t\t\t\t/* Idiv (N/A).  */\n-    }\n-  },\n-  /* LD/ST */\n-  {\n-    COSTS_N_INSNS (2),\t/* Load.  */\n-    COSTS_N_INSNS (2),\t/* Load_sign_extend.  */\n-    COSTS_N_INSNS (3),\t/* Ldrd.  */\n-    COSTS_N_INSNS (2),\t/* Ldm_1st.  */\n-    1,\t\t\t/* Ldm_regs_per_insn_1st.  */\n-    1,\t\t\t/* Ldm_regs_per_insn_subsequent.  */\n-    COSTS_N_INSNS (2),\t/* Loadf.  */\n-    COSTS_N_INSNS (3),\t/* Loadd.  */\n-    COSTS_N_INSNS (1),  /* Load_unaligned.  */\n-    COSTS_N_INSNS (2),\t/* Store.  */\n-    COSTS_N_INSNS (3),\t/* Strd.  */\n-    COSTS_N_INSNS (2),\t/* Stm_1st.  */\n-    1,\t\t\t/* Stm_regs_per_insn_1st.  */\n-    1,\t\t\t/* Stm_regs_per_insn_subsequent.  */\n-    COSTS_N_INSNS (2),\t/* Storef.  */\n-    COSTS_N_INSNS (3),\t/* Stored.  */\n-    COSTS_N_INSNS (1)  /* Store_unaligned.  */\n-  },\n-  {\n-    /* FP SFmode */\n-    {\n-      COSTS_N_INSNS (7),\t/* Div.  */\n-      COSTS_N_INSNS (2),\t/* Mult.  */\n-      COSTS_N_INSNS (3),\t/* Mult_addsub.  */\n-      COSTS_N_INSNS (3),\t/* Fma.  */\n-      COSTS_N_INSNS (1),\t/* Addsub.  */\n-      0,\t\t\t/* Fpconst.  */\n-      0,\t\t\t/* Neg.  */\n-      0,\t\t\t/* Compare.  */\n-      0,\t\t\t/* Widen.  */\n-      0,\t\t\t/* Narrow.  */\n-      0,\t\t\t/* Toint.  */\n-      0,\t\t\t/* Fromint.  */\n-      0\t\t\t\t/* Roundint.  */\n-    },\n-    /* FP DFmode */\n-    {\n-      COSTS_N_INSNS (15),\t/* Div.  */\n-      COSTS_N_INSNS (5),\t/* Mult.  */\n-      COSTS_N_INSNS (7),\t/* Mult_addsub.  */\n-      COSTS_N_INSNS (7),\t/* Fma.  */\n-      COSTS_N_INSNS (3),\t/* Addsub.  */\n-      0,\t\t\t/* Fpconst.  */\n-      0,\t\t\t/* Neg.  */\n-      0,\t\t\t/* Compare.  */\n-      0,\t\t\t/* Widen.  */\n-      0,\t\t\t/* Narrow.  */\n-      0,\t\t\t/* Toint.  */\n-      0,\t\t\t/* Fromint.  */\n-      0\t\t\t\t/* Roundint.  */\n-    }\n-  },\n-  /* Vector */\n-  {\n-    COSTS_N_INSNS (1)\t/* Alu.  */\n-  }\n-};\n \n \n const struct cpu_cost_table cortexa9_extra_costs ="}]}