{"sha": "dae1dd2e3c6e3500678daa9a458b5a15565c7ab7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFlMWRkMmUzYzZlMzUwMDY3OGRhYTlhNDU4YjVhMTU1NjVjN2FiNw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-07-09T20:58:00Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-07-09T20:58:00Z"}, "message": "* vec.c, vec.h (vec_assert_fail): Use unsigned int for LINE argument.\n\nFrom-SVN: r84398", "tree": {"sha": "75293325abcfbbe922b2980f9b14af9d8beb8163", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75293325abcfbbe922b2980f9b14af9d8beb8163"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7/comments", "author": null, "committer": null, "parents": [{"sha": "a578b091975a733fc42f0fd3a7281ee895839a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a578b091975a733fc42f0fd3a7281ee895839a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a578b091975a733fc42f0fd3a7281ee895839a9c"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "d3fcba646f62eb79f85e10c5a41c8b8e3e014b79", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dae1dd2e3c6e3500678daa9a458b5a15565c7ab7", "patch": "@@ -1,3 +1,7 @@\n+2004-07-09  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* vec.c, vec.h (vec_assert_fail): Use unsigned int for LINE argument.\n+\n 2004-07-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR target/16459\n@@ -61,7 +65,7 @@\n 2004-07-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/12133\n-\t* arm.c (arm_legitimate_index_p) Allow DFmode for soft-float \n+\t* arm.c (arm_legitimate_index_p) Allow DFmode for soft-float\n \tand DImode to use +/-4k offset.\n \n 2004-07-09  Richard Henderson  <rth@redhat.com>"}, {"sha": "45acc84803b35409319a10b30dcfa0ec1cf92666", "filename": "gcc/vec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7/gcc%2Fvec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7/gcc%2Fvec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.c?ref=dae1dd2e3c6e3500678daa9a458b5a15565c7ab7", "patch": "@@ -82,7 +82,7 @@ vec_o_reserve (void *vec, int reserve, size_t vec_offset, size_t elt_size\n \n void\n vec_assert_fail (const char *op, const char *struct_name,\n-\t\t const char *file, size_t line, const char *function)\n+\t\t const char *file, unsigned int line, const char *function)\n {\n   internal_error (\"vector %s %s domain error, in %s at %s:%u\",\n \t\t  struct_name, op, function, trim_filename (file), line);"}, {"sha": "9e4de0ecf57c0dd19a93cdf188f446a4d18f9185", "filename": "gcc/vec.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dae1dd2e3c6e3500678daa9a458b5a15565c7ab7/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=dae1dd2e3c6e3500678daa9a458b5a15565c7ab7", "patch": "@@ -251,7 +251,7 @@ extern void *vec_o_reserve (void *, int, size_t, size_t MEM_STAT_DECL);\n \n #if ENABLE_CHECKING\n extern void vec_assert_fail (const char *, const char *,\n-\t\t\t    const char *, size_t, const char *)\n+\t\t\t    const char *, unsigned int, const char *)\n      ATTRIBUTE_NORETURN;\n #define VEC_ASSERT_FAIL(OP,VEC) \\\n   vec_assert_fail (OP,#VEC,__FILE__,__LINE__,__FUNCTION__)"}]}