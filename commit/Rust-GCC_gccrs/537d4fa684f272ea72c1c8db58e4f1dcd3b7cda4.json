{"sha": "537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3ZDRmYTY4NGYyNzJlYTcyYzFjOGRiNThlNGYxZGNkM2I3Y2RhNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-05-07T07:19:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-07T07:19:01Z"}, "message": "i386.c (ix86_expand_copysign): Force non-zero constant TFmode op0 to register.\n\n\t* config/i386/i386.c (ix86_expand_copysign): Force non-zero constant\n\tTFmode op0 to register.\n\nFrom-SVN: r135025", "tree": {"sha": "0dbc116c57bcca6a9082037186f90b93776fd8f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dbc116c57bcca6a9082037186f90b93776fd8f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73f1509d26662d0d979da029271d662b114f38c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f1509d26662d0d979da029271d662b114f38c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f1509d26662d0d979da029271d662b114f38c3"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "f35a21b5eeeebe0fe9344fd080807d689099451e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4", "patch": "@@ -1,3 +1,8 @@\n+2008-05-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_expand_copysign): Force non-zero constant\n+\tTFmode op0 to register.\n+\n 2008-05-07  Alan Modra  <amodra@bigpond.net.au>\n \n \t* c-decl.c (grokdeclarator): Comment typo."}, {"sha": "b123fa09e532c4108ddba945a720bd0d54f5fb37", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=537d4fa684f272ea72c1c8db58e4f1dcd3b7cda4", "patch": "@@ -11245,15 +11245,14 @@ ix86_expand_fp_absneg_operator (enum rtx_code code, enum machine_mode mode,\n void\n ix86_expand_copysign (rtx operands[])\n {\n-  enum machine_mode mode, vmode;\n+  enum machine_mode mode;\n   rtx dest, op0, op1, mask, nmask;\n \n   dest = operands[0];\n   op0 = operands[1];\n   op1 = operands[2];\n \n   mode = GET_MODE (dest);\n-  vmode = mode == SFmode ? V4SFmode : V2DFmode;\n \n   if (GET_CODE (op0) == CONST_DOUBLE)\n     {\n@@ -11264,6 +11263,10 @@ ix86_expand_copysign (rtx operands[])\n \n       if (mode == SFmode || mode == DFmode)\n \t{\n+\t  enum machine_mode vmode;\n+\n+\t  vmode = mode == SFmode ? V4SFmode : V2DFmode;\n+\n \t  if (op0 == CONST0_RTX (mode))\n \t    op0 = CONST0_RTX (vmode);\n \t  else\n@@ -11275,9 +11278,12 @@ ix86_expand_copysign (rtx operands[])\n \t\t\t       CONST0_RTX (SFmode), CONST0_RTX (SFmode));\n \t      else\n \t\tv = gen_rtvec (2, op0, CONST0_RTX (DFmode));\n+\n \t      op0 = force_reg (vmode, gen_rtx_CONST_VECTOR (vmode, v));\n \t    }\n \t}\n+      else if (op0 != CONST0_RTX (mode))\n+\top0 = force_reg (mode, op0);\n \n       mask = ix86_build_signbit_mask (mode, 0, 0);\n "}]}