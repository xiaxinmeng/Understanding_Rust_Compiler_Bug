{"sha": "bbf27208564cdf8fb583f958ec5d910c3a7d9718", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJmMjcyMDg1NjRjZGY4ZmI1ODNmOTU4ZWM1ZDkxMGMzYTdkOTcxOA==", "commit": {"author": {"name": "Dominique d'Humieres", "email": "dominiq@gcc.gnu.org", "date": "2016-02-20T14:10:55Z"}, "committer": {"name": "Dominique d'Humieres", "email": "dominiq@gcc.gnu.org", "date": "2016-02-20T14:10:55Z"}, "message": "[multiple changes]\n\n2016-02-20  Dominique d'Humieres  <dominiq@lps.ens.fr>\n\n\tPR fortran/57365\n\tgfortran.dg/allocate_with_source_18.f03: New test.\n\n2016-02-20  Harald Anlauf  <anlauf@gmx.de>\n\n\tPR fortran/52531\n\tgfortran.dg/gomp/pr52531.f90: New test.\n\nFrom-SVN: r233588", "tree": {"sha": "735e0bf163c0b7e5a14149ec84f235a985a9bee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/735e0bf163c0b7e5a14149ec84f235a985a9bee7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbf27208564cdf8fb583f958ec5d910c3a7d9718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf27208564cdf8fb583f958ec5d910c3a7d9718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf27208564cdf8fb583f958ec5d910c3a7d9718", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf27208564cdf8fb583f958ec5d910c3a7d9718/comments", "author": null, "committer": null, "parents": [{"sha": "34b1816913859863ab43139e5fae287e1a91b8ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b1816913859863ab43139e5fae287e1a91b8ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34b1816913859863ab43139e5fae287e1a91b8ee"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "77a4c01dec64853d3163642986a2a8e5fcda48d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf27208564cdf8fb583f958ec5d910c3a7d9718/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf27208564cdf8fb583f958ec5d910c3a7d9718/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bbf27208564cdf8fb583f958ec5d910c3a7d9718", "patch": "@@ -1,3 +1,13 @@\n+2016-02-20  Dominique d'Humieres  <dominiq@lps.ens.fr>\n+\n+\tPR fortran/57365\n+\tgfortran.dg/allocate_with_source_18.f03: New test.\n+\n+2016-02-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/52531\n+\tgfortran.dg/gomp/pr52531.f90: New test.\n+\n 2016-02-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c++/69865"}, {"sha": "746bd0ddd66d2554222e4dc1a9fb517cb3c5cd84", "filename": "gcc/testsuite/gfortran.dg/allocate_with_source_18.f03", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf27208564cdf8fb583f958ec5d910c3a7d9718/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_18.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf27208564cdf8fb583f958ec5d910c3a7d9718/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_18.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_18.f03?ref=bbf27208564cdf8fb583f958ec5d910c3a7d9718", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+!\n+! PR fortran/57365\n+! [OOP] Sourced allocation fails with unlimited polymorphism\n+! Contributed by <rxs@hotmail.de>\n+!\n+program bug\n+\n+    implicit none\n+    character(len=:), allocatable :: test\n+\n+    test = \"A test case\"\n+    call allocate_test(test)\n+    deallocate(test)\n+\n+contains\n+\n+    subroutine allocate_test(var)\n+        class(*) :: var\n+        class(*), pointer :: copyofvar\n+        allocate(copyofvar, source=var)\n+        select type (copyofvar)\n+            type is (character(len=*))\n+!                print*, len(copyofvar), copyofvar\n+                if (len(copyofvar) /= 11) call abort ()\n+                if (copyofvar /= \"A test case\") call abort ()\n+        end select\n+        deallocate(copyofvar)\n+    end subroutine\n+\n+end program bug"}, {"sha": "e39d35905f3d229ef6f865d1262ea6a326067044", "filename": "gcc/testsuite/gfortran.dg/gomp/pr52531.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf27208564cdf8fb583f958ec5d910c3a7d9718/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr52531.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf27208564cdf8fb583f958ec5d910c3a7d9718/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr52531.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr52531.f90?ref=bbf27208564cdf8fb583f958ec5d910c3a7d9718", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do compile }\n+! PR fortran/52531\n+module test_mod\n+  type, public :: test_type\n+  end type\n+contains\n+  subroutine foo(bar)\n+    type(test_type) :: bar\n+!$omp parallel default(none) shared(bar) ! Compiles if one removes default(none)\n+    call question(bar)\n+!$omp end parallel\n+  end subroutine\n+  subroutine question(var)\n+    class(test_type), intent(in) :: var ! Compiles if one replaces class by type\n+  end subroutine\n+end module"}]}