{"sha": "6bcfb753855b957ad7cc8cf04fd767a1b013979d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJjZmI3NTM4NTViOTU3YWQ3Y2M4Y2YwNGZkNzY3YTFiMDEzOTc5ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-29T12:47:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-29T12:47:51Z"}, "message": "tree-flow.h (struct pre_expr_d): Remove forward declaration.\n\n2012-03-29  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-flow.h (struct pre_expr_d): Remove forward declaration.\n\t(add_to_value): Remove.\n\t(print_value_expressions): Likewise.\n\t* tree-ssa-pre.c (add_to_value): Make static.\n\t(print_value_expressions): Likewise.\n\t* gimple.h (gimple_adjust_this_by_delta): Remove.\n\t* gimple-fold.c (gimple_adjust_this_by_delta): Likewise.\n\nFrom-SVN: r185956", "tree": {"sha": "284a880ca378ae26a5aaff22e72db72e62f99120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/284a880ca378ae26a5aaff22e72db72e62f99120"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bcfb753855b957ad7cc8cf04fd767a1b013979d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcfb753855b957ad7cc8cf04fd767a1b013979d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bcfb753855b957ad7cc8cf04fd767a1b013979d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcfb753855b957ad7cc8cf04fd767a1b013979d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6adb7308669b8f8927093ec4145ed47e9a832bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6adb7308669b8f8927093ec4145ed47e9a832bb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6adb7308669b8f8927093ec4145ed47e9a832bb0"}], "stats": {"total": 41, "additions": 12, "deletions": 29}, "files": [{"sha": "0d75540b2924d4ea1efc3c22601c6eab7bd6c555", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bcfb753855b957ad7cc8cf04fd767a1b013979d", "patch": "@@ -1,3 +1,13 @@\n+2012-03-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-flow.h (struct pre_expr_d): Remove forward declaration.\n+\t(add_to_value): Remove.\n+\t(print_value_expressions): Likewise.\n+\t* tree-ssa-pre.c (add_to_value): Make static.\n+\t(print_value_expressions): Likewise.\n+\t* gimple.h (gimple_adjust_this_by_delta): Remove.\n+\t* gimple-fold.c (gimple_adjust_this_by_delta): Likewise.\n+\n 2012-03-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/50708"}, {"sha": "6ad81ddad4e0da36ecc1487b1055550f1b585c98", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=6bcfb753855b957ad7cc8cf04fd767a1b013979d", "patch": "@@ -978,29 +978,6 @@ gimple_fold_builtin (gimple stmt)\n   return result;\n }\n \n-/* Generate code adjusting the first parameter of a call statement determined\n-   by GSI by DELTA.  */\n-\n-void\n-gimple_adjust_this_by_delta (gimple_stmt_iterator *gsi, tree delta)\n-{\n-  gimple call_stmt = gsi_stmt (*gsi);\n-  tree parm, tmp;\n-  gimple new_stmt;\n-\n-  delta = convert_to_ptrofftype (delta);\n-  gcc_assert (gimple_call_num_args (call_stmt) >= 1);\n-  parm = gimple_call_arg (call_stmt, 0);\n-  gcc_assert (POINTER_TYPE_P (TREE_TYPE (parm)));\n-  tmp = create_tmp_var (TREE_TYPE (parm), NULL);\n-  add_referenced_var (tmp);\n-\n-  tmp = make_ssa_name (tmp, NULL);\n-  new_stmt = gimple_build_assign_with_ops (POINTER_PLUS_EXPR, tmp, parm, delta);\n-  SSA_NAME_DEF_STMT (tmp) = new_stmt;\n-  gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n-  gimple_call_set_arg (call_stmt, 0, tmp);\n-}\n \n /* Return a binfo to be used for devirtualization of calls based on an object\n    represented by a declaration (i.e. a global or automatically allocated one)"}, {"sha": "167bc738a40d04753327bc344a9250669b63a9ea", "filename": "gcc/gimple.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=6bcfb753855b957ad7cc8cf04fd767a1b013979d", "patch": "@@ -960,7 +960,6 @@ unsigned get_gimple_rhs_num_ops (enum tree_code);\n gimple gimple_alloc_stat (enum gimple_code, unsigned MEM_STAT_DECL);\n const char *gimple_decl_printable_name (tree, int);\n tree gimple_get_virt_method_for_binfo (HOST_WIDE_INT, tree);\n-void gimple_adjust_this_by_delta (gimple_stmt_iterator *, tree);\n tree gimple_extract_devirt_binfo_from_cst (tree);\n /* Returns true iff T is a valid GIMPLE statement.  */\n extern bool is_gimple_stmt (tree);"}, {"sha": "3dd6a7d019d8c7b1d0fa5f7c2878c43fd73c14d5", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=6bcfb753855b957ad7cc8cf04fd767a1b013979d", "patch": "@@ -794,10 +794,7 @@ extern bool verify_eh_dispatch_edge (gimple);\n extern void maybe_remove_unreachable_handlers (void);\n \n /* In tree-ssa-pre.c  */\n-struct pre_expr_d;\n-void add_to_value (unsigned int, struct pre_expr_d *);\n void debug_value_expressions (unsigned int);\n-void print_value_expressions (FILE *, unsigned int);\n \n /* In tree-ssa-sink.c  */\n bool is_hidden_global_store (gimple);"}, {"sha": "6a2ce643d7407c46f3d6dc1578777e80f5b8a02c", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bcfb753855b957ad7cc8cf04fd767a1b013979d/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=6bcfb753855b957ad7cc8cf04fd767a1b013979d", "patch": "@@ -587,7 +587,7 @@ phi_trans_add (pre_expr e, pre_expr v, basic_block pred)\n \n /* Add expression E to the expression set of value id V.  */\n \n-void\n+static void\n add_to_value (unsigned int v, pre_expr e)\n {\n   bitmap_set_t set;\n@@ -1031,7 +1031,7 @@ debug_bitmap_set (bitmap_set_t set)\n \n /* Print out the expressions that have VAL to OUTFILE.  */\n \n-void\n+static void\n print_value_expressions (FILE *outfile, unsigned int val)\n {\n   bitmap_set_t set = VEC_index (bitmap_set_t, value_expressions, val);"}]}