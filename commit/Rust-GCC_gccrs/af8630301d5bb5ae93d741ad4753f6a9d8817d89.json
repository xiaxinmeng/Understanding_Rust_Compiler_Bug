{"sha": "af8630301d5bb5ae93d741ad4753f6a9d8817d89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY4NjMwMzAxZDViYjVhZTkzZDc0MWFkNDc1M2Y2YTlkODgxN2Q4OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-10-20T20:51:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-10-20T20:51:50Z"}, "message": "* x86-tune-costs.h (intel_cost, generic_cost): Fix move costs.\n\nFrom-SVN: r253958", "tree": {"sha": "4c27493af3bdedeb5271182036e92f4b4af7f75e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c27493af3bdedeb5271182036e92f4b4af7f75e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af8630301d5bb5ae93d741ad4753f6a9d8817d89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8630301d5bb5ae93d741ad4753f6a9d8817d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af8630301d5bb5ae93d741ad4753f6a9d8817d89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8630301d5bb5ae93d741ad4753f6a9d8817d89/comments", "author": null, "committer": null, "parents": [{"sha": "001cbba0efcd44aa1c955c5e6fbbb118aec55440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001cbba0efcd44aa1c955c5e6fbbb118aec55440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/001cbba0efcd44aa1c955c5e6fbbb118aec55440"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "91c9cfcf1bb5e42966e169f2be9bdc513e564887", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8630301d5bb5ae93d741ad4753f6a9d8817d89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8630301d5bb5ae93d741ad4753f6a9d8817d89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af8630301d5bb5ae93d741ad4753f6a9d8817d89", "patch": "@@ -1,3 +1,7 @@\n+2017-10-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* x86-tune-costs.h (intel_cost, generic_cost): Fix move costs.\n+\n 2017-10-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.md (isa): Remove fma_avx512f."}, {"sha": "761d421312e0db6d78d72be7a1c24557177e4e22", "filename": "gcc/config/i386/x86-tune-costs.h", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8630301d5bb5ae93d741ad4753f6a9d8817d89/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8630301d5bb5ae93d741ad4753f6a9d8817d89/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h?ref=af8630301d5bb5ae93d741ad4753f6a9d8817d89", "patch": "@@ -2121,27 +2121,27 @@ struct processor_costs intel_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n-  4,\t\t\t\t\t/* cost for loading QImode using movzbl */\n+  6,\t\t\t\t     /* cost for loading QImode using movzbl */\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n-  {4, 4, 4},\t\t\t\t/* cost of storing integer registers */\n-  4,\t\t\t\t\t/* cost of reg,reg fld/fst */\n-  {12, 12, 12},\t\t\t\t/* cost of loading fp registers\n+  {6, 6, 6},\t\t\t\t/* cost of storing integer registers */\n+  2,\t\t\t\t\t/* cost of reg,reg fld/fst */\n+  {6, 6, 8},\t\t\t\t/* cost of loading fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n-  {6, 6, 8},\t\t\t\t/* cost of storing fp registers\n+  {6, 6, 10},\t\t\t\t/* cost of storing fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n   2,\t\t\t\t\t/* cost of moving MMX register */\n-  {8, 8},\t\t\t\t/* cost of loading MMX registers\n+  {6, 6},\t\t\t\t/* cost of loading MMX registers\n \t\t\t\t\t   in SImode and DImode */\n-  {8, 8},\t\t\t\t/* cost of storing MMX registers\n+  {6, 6},\t\t\t\t/* cost of storing MMX registers\n \t\t\t\t\t   in SImode and DImode */\n   2,\t\t\t\t\t/* cost of moving SSE register */\n-  {8, 8, 8},\t\t\t\t/* cost of loading SSE registers\n+  {6, 6, 6},\t\t\t\t/* cost of loading SSE registers\n \t\t\t\t\t   in SImode, DImode and TImode */\n-  {8, 8, 8},\t\t\t\t/* cost of storing SSE registers\n+  {6, 6, 6},\t\t\t\t/* cost of storing SSE registers\n \t\t\t\t\t   in SImode, DImode and TImode */\n-  5,\t\t\t\t\t/* MMX or SSE register to integer */\n+  2,\t\t\t\t\t/* MMX or SSE register to integer */\n   32,\t\t\t\t\t/* size of l1 cache.  */\n   256,\t\t\t\t\t/* size of l2 cache.  */\n   64,\t\t\t\t\t/* size of prefetch block */\n@@ -2221,23 +2221,23 @@ struct processor_costs generic_cost = {\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n-  {4, 4, 4},\t\t\t\t/* cost of storing integer registers */\n+  {6, 6, 6},\t\t\t\t/* cost of storing integer registers */\n   4,\t\t\t\t\t/* cost of reg,reg fld/fst */\n-  {12, 12, 12},\t\t\t\t/* cost of loading fp registers\n+  {6, 6, 12},\t\t\t\t/* cost of loading fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n-  {6, 6, 8},\t\t\t\t/* cost of storing fp registers\n+  {6, 6, 12},\t\t\t\t/* cost of storing fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n   2,\t\t\t\t\t/* cost of moving MMX register */\n-  {8, 8},\t\t\t\t/* cost of loading MMX registers\n+  {6, 6},\t\t\t\t/* cost of loading MMX registers\n \t\t\t\t\t   in SImode and DImode */\n-  {8, 8},\t\t\t\t/* cost of storing MMX registers\n+  {6, 6},\t\t\t\t/* cost of storing MMX registers\n \t\t\t\t\t   in SImode and DImode */\n   2,\t\t\t\t\t/* cost of moving SSE register */\n-  {8, 8, 8},\t\t\t\t/* cost of loading SSE registers\n+  {6, 6, 6},\t\t\t\t/* cost of loading SSE registers\n \t\t\t\t\t   in SImode, DImode and TImode */\n-  {8, 8, 8},\t\t\t\t/* cost of storing SSE registers\n+  {6, 6, 6},\t\t\t\t/* cost of storing SSE registers\n \t\t\t\t\t   in SImode, DImode and TImode */\n-  5,\t\t\t\t\t/* MMX or SSE register to integer */\n+  6,\t\t\t\t\t/* MMX or SSE register to integer */\n   32,\t\t\t\t\t/* size of l1 cache.  */\n   512,\t\t\t\t\t/* size of l2 cache.  */\n   64,\t\t\t\t\t/* size of prefetch block */\n@@ -2326,7 +2326,7 @@ struct processor_costs core_cost = {\n   2,\t\t\t\t\t/* cost of reg,reg fld/fst */\n   {6, 6, 8},\t\t\t\t/* cost of loading fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n-  {8, 6, 10},\t\t\t\t/* cost of storing fp registers\n+  {6, 6, 10},\t\t\t\t/* cost of storing fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n   2,\t\t\t\t\t/* cost of moving MMX register */\n   {6, 6},\t\t\t\t/* cost of loading MMX registers"}]}