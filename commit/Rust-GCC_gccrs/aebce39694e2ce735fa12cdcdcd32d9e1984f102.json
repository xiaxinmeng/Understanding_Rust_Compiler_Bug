{"sha": "aebce39694e2ce735fa12cdcdcd32d9e1984f102", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWViY2UzOTY5NGUyY2U3MzVmYTEyY2RjZGNkMzJkOWUxOTg0ZjEwMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-06-12T10:45:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-06-12T10:45:52Z"}, "message": "re PR tree-optimization/81003 (ICE: tree check: expected ssa_name, have integer_cst in optimize_range_tests_to_bit_test, at tree-ssa-reassoc.c:2782)\n\n\tPR tree-optimization/81003\n\t* tree-ssa-reassoc.c (force_into_ssa_name): New function.\n\t(update_range_test): Use it instead of force_gimple_operand_gsi.\n\n\t* gcc.c-torture/compile/pr81003.c: New test.\n\nFrom-SVN: r249114", "tree": {"sha": "f6857905aa43f43542fdb74df198f8d9031a82f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6857905aa43f43542fdb74df198f8d9031a82f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aebce39694e2ce735fa12cdcdcd32d9e1984f102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aebce39694e2ce735fa12cdcdcd32d9e1984f102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aebce39694e2ce735fa12cdcdcd32d9e1984f102", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aebce39694e2ce735fa12cdcdcd32d9e1984f102/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "9dbcf02abf0f4a90954e633e300ee66800b17efb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aebce39694e2ce735fa12cdcdcd32d9e1984f102/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aebce39694e2ce735fa12cdcdcd32d9e1984f102/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aebce39694e2ce735fa12cdcdcd32d9e1984f102", "patch": "@@ -1,3 +1,9 @@\n+2017-06-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/81003\n+\t* tree-ssa-reassoc.c (force_into_ssa_name): New function.\n+\t(update_range_test): Use it instead of force_gimple_operand_gsi.\n+\n 2017-06-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81053"}, {"sha": "84670eebf0f1a5992d68911060a1e32e21ca2a9f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aebce39694e2ce735fa12cdcdcd32d9e1984f102/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aebce39694e2ce735fa12cdcdcd32d9e1984f102/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aebce39694e2ce735fa12cdcdcd32d9e1984f102", "patch": "@@ -1,3 +1,8 @@\n+2017-06-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/81003\n+\t* gcc.c-torture/compile/pr81003.c: New test.\n+\n 2017-06-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81053"}, {"sha": "26117b638c435abc8cd37931225ffb40190bebbe", "filename": "gcc/testsuite/gcc.c-torture/compile/pr81003.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aebce39694e2ce735fa12cdcdcd32d9e1984f102/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr81003.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aebce39694e2ce735fa12cdcdcd32d9e1984f102/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr81003.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr81003.c?ref=aebce39694e2ce735fa12cdcdcd32d9e1984f102", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/81003 */\n+\n+unsigned int a, b;\n+\n+void\n+foo (void)\n+{\n+  for (b = 0; b < 13; b += 2)\n+    a &= !!b;\n+}"}, {"sha": "35eb72ce31051ac79dfb1e2fd81d95e6626a599f", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aebce39694e2ce735fa12cdcdcd32d9e1984f102/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aebce39694e2ce735fa12cdcdcd32d9e1984f102/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=aebce39694e2ce735fa12cdcdcd32d9e1984f102", "patch": "@@ -2282,6 +2282,26 @@ range_entry_cmp (const void *a, const void *b)\n     }\n }\n \n+/* Helper function for update_range_test.  Force EXPR into an SSA_NAME,\n+   insert needed statements BEFORE or after GSI.  */\n+\n+static tree\n+force_into_ssa_name (gimple_stmt_iterator *gsi, tree expr, bool before)\n+{\n+  enum gsi_iterator_update m = before ? GSI_SAME_STMT : GSI_CONTINUE_LINKING;\n+  tree ret = force_gimple_operand_gsi (gsi, expr, true, NULL_TREE, before, m);\n+  if (TREE_CODE (ret) != SSA_NAME)\n+    {\n+      gimple *g = gimple_build_assign (make_ssa_name (TREE_TYPE (ret)), ret);\n+      if (before)\n+\tgsi_insert_before (gsi, g, GSI_SAME_STMT);\n+      else\n+\tgsi_insert_after (gsi, g, GSI_CONTINUE_LINKING);\n+      ret = gimple_assign_lhs (g);\n+    }\n+  return ret;\n+}\n+\n /* Helper routine of optimize_range_test.\n    [EXP, IN_P, LOW, HIGH, STRICT_OVERFLOW_P] is a merged range for\n    RANGE and OTHERRANGE through OTHERRANGE + COUNT - 1 ranges,\n@@ -2393,15 +2413,13 @@ update_range_test (struct range_entry *range, struct range_entry *otherrange,\n   else if (op != range->exp)\n     {\n       gsi_insert_seq_before (&gsi, seq, GSI_SAME_STMT);\n-      tem = force_gimple_operand_gsi (&gsi, tem, true, NULL_TREE, true,\n-\t\t\t\t      GSI_SAME_STMT);\n+      tem = force_into_ssa_name (&gsi, tem, true);\n       gsi_prev (&gsi);\n     }\n   else if (gimple_code (stmt) != GIMPLE_PHI)\n     {\n       gsi_insert_seq_after (&gsi, seq, GSI_CONTINUE_LINKING);\n-      tem = force_gimple_operand_gsi (&gsi, tem, true, NULL_TREE, false,\n-\t\t\t\t      GSI_CONTINUE_LINKING);\n+      tem = force_into_ssa_name (&gsi, tem, false);\n     }\n   else\n     {\n@@ -2419,8 +2437,7 @@ update_range_test (struct range_entry *range, struct range_entry *otherrange,\n \t    }\n \t}\n       gsi_insert_seq_before (&gsi, seq, GSI_SAME_STMT);\n-      tem = force_gimple_operand_gsi (&gsi, tem, true, NULL_TREE, true,\n-\t\t\t\t      GSI_SAME_STMT);\n+      tem = force_into_ssa_name (&gsi, tem, true);\n       if (gsi_end_p (gsi))\n \tgsi = gsi_last_bb (gimple_bb (stmt));\n       else"}]}