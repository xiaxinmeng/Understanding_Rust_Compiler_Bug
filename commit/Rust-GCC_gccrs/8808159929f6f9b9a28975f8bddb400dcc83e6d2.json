{"sha": "8808159929f6f9b9a28975f8bddb400dcc83e6d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgwODE1OTkyOWY2ZjliOWEyODk3NWY4YmRkYjQwMGRjYzgzZTZkMg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-01-05T19:54:35Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-01-05T19:54:35Z"}, "message": "re PR c++/13451 (Wrong error message with qualified names for member declarations)\n\n\tPR c++/13451\n\t* parser.c (cp_parser_class_head): Reorder logic to check for\n\tinvalid qualification.\n\n\tPR c++/13451\n\t* g++.dg/template/class2.C: New test.\n\nFrom-SVN: r75440", "tree": {"sha": "eacfffffa6f5d9da8edcccf8bb60843d72bde99c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eacfffffa6f5d9da8edcccf8bb60843d72bde99c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8808159929f6f9b9a28975f8bddb400dcc83e6d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8808159929f6f9b9a28975f8bddb400dcc83e6d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8808159929f6f9b9a28975f8bddb400dcc83e6d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8808159929f6f9b9a28975f8bddb400dcc83e6d2/comments", "author": null, "committer": null, "parents": [{"sha": "02fef8539ebbe2e8d71f1c8fcb699942e4e0cfdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02fef8539ebbe2e8d71f1c8fcb699942e4e0cfdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02fef8539ebbe2e8d71f1c8fcb699942e4e0cfdb"}], "stats": {"total": 73, "additions": 47, "deletions": 26}, "files": [{"sha": "79af88e2e9826fba9a724d5fe64525f064951ae0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8808159929f6f9b9a28975f8bddb400dcc83e6d2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8808159929f6f9b9a28975f8bddb400dcc83e6d2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8808159929f6f9b9a28975f8bddb400dcc83e6d2", "patch": "@@ -1,3 +1,9 @@\n+2004-01-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/13451\n+\t* parser.c (cp_parser_class_head): Reorder logic to check for\n+\tinvalid qualification.\n+\n 2004-01-04  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13157"}, {"sha": "9a16f826d34668639e5d13931bc0a9261a685733", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8808159929f6f9b9a28975f8bddb400dcc83e6d2/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8808159929f6f9b9a28975f8bddb400dcc83e6d2/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8808159929f6f9b9a28975f8bddb400dcc83e6d2", "patch": "@@ -11837,6 +11837,35 @@ cp_parser_class_head (cp_parser* parser,\n   else if (invalid_nested_name_p)\n     cp_parser_error (parser,\n \t\t     \"qualified name does not name a class\");\n+  else if (nested_name_specifier)\n+    {\n+      tree scope;\n+      /* Figure out in what scope the declaration is being placed.  */\n+      scope = current_scope ();\n+      if (!scope)\n+\tscope = current_namespace;\n+      /* If that scope does not contain the scope in which the\n+\t class was originally declared, the program is invalid.  */\n+      if (scope && !is_ancestor (scope, nested_name_specifier))\n+\t{\n+\t  error (\"declaration of `%D' in `%D' which does not \"\n+\t\t \"enclose `%D'\", type, scope, nested_name_specifier);\n+\t  type = NULL_TREE;\n+\t  goto done;\n+\t}\n+      /* [dcl.meaning]\n+\n+         A declarator-id shall not be qualified exception of the\n+\t definition of a ... nested class outside of its class\n+\t ... [or] a the definition or explicit instantiation of a\n+\t class member of a namespace outside of its namespace.  */\n+      if (scope == nested_name_specifier)\n+\t{\n+\t  pedwarn (\"extra qualification ignored\");\n+\t  nested_name_specifier = NULL_TREE;\n+\t  num_templates = 0;\n+\t}\n+    }\n   /* An explicit-specialization must be preceded by \"template <>\".  If\n      it is not, try to recover gracefully.  */\n   if (at_namespace_scope_p () \n@@ -11880,7 +11909,6 @@ cp_parser_class_head (cp_parser* parser,\n   else\n     {\n       tree class_type;\n-      tree scope;\n \n       /* Given:\n \n@@ -11903,31 +11931,6 @@ cp_parser_class_head (cp_parser* parser,\n \t    }\n \t}\n \n-      /* Figure out in what scope the declaration is being placed.  */\n-      scope = current_scope ();\n-      if (!scope)\n-\tscope = current_namespace;\n-      /* If that scope does not contain the scope in which the\n-\t class was originally declared, the program is invalid.  */\n-      if (scope && !is_ancestor (scope, CP_DECL_CONTEXT (type)))\n-\t{\n-\t  error (\"declaration of `%D' in `%D' which does not \"\n-\t\t \"enclose `%D'\", type, scope, nested_name_specifier);\n-\t  type = NULL_TREE;\n-\t  goto done;\n-\t}\n-      /* [dcl.meaning]\n-\n-         A declarator-id shall not be qualified exception of the\n-\t definition of a ... nested class outside of its class\n-\t ... [or] a the definition or explicit instantiation of a\n-\t class member of a namespace outside of its namespace.  */\n-      if (scope == CP_DECL_CONTEXT (type))\n-\t{\n-\t  pedwarn (\"extra qualification ignored\");\n-\t  nested_name_specifier = NULL_TREE;\n-\t}\n-\n       maybe_process_partial_specialization (TREE_TYPE (type));\n       class_type = current_class_type;\n       /* Enter the scope indicated by the nested-name-specifier.  */"}, {"sha": "fc4e462beb357b1837ec32debe25555d52b6c6f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8808159929f6f9b9a28975f8bddb400dcc83e6d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8808159929f6f9b9a28975f8bddb400dcc83e6d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8808159929f6f9b9a28975f8bddb400dcc83e6d2", "patch": "@@ -1,3 +1,8 @@\n+2004-01-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/13451\n+\t* g++.dg/template/class2.C: New test.\n+\n 2004-01-05  Nathan Sidwell  <nathan@codesourcery.com>\n \tRichard Sandiford <rsandifo@redhat.com>\n "}, {"sha": "4144997fe160d2502f032fd22231516a756ccf31", "filename": "gcc/testsuite/g++.dg/template/class2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8808159929f6f9b9a28975f8bddb400dcc83e6d2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fclass2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8808159929f6f9b9a28975f8bddb400dcc83e6d2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fclass2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fclass2.C?ref=8808159929f6f9b9a28975f8bddb400dcc83e6d2", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/13451\n+\n+template <class T>\n+struct A {\n+  struct B;\n+  struct A::B { }; // { dg-error \"\" }\n+};"}]}