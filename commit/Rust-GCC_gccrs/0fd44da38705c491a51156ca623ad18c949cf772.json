{"sha": "0fd44da38705c491a51156ca623ad18c949cf772", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZkNDRkYTM4NzA1YzQ5MWE1MTE1NmNhNjIzYWQxOGM5NDljZjc3Mg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-02-21T16:08:51Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-02-21T16:08:51Z"}, "message": "re PR tree-optimization/56310 (ICE: in decide_about_value, at ipa-cp.c:3310 with -fipa-cp -fno-early-inlining -fipa-cp-clone --param=ipa-cp-eval-threshold=1)\n\n2013-02-21  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/56310\n\t* ipa-cp.c (agg_replacements_to_vector): New parameter index, copy\n\tonly matching indices and non-negative final offsets.\n\t(intersect_aggregates_with_edge): Pass src_idx to\n\tagg_replacements_to_vector.  Pass src_idx insstead of index to\n\tintersect_with_agg_replacements.\n\ntestsuite/\n\t* g++.dg/ipa/pr56310.C: New test.\n\nFrom-SVN: r196207", "tree": {"sha": "6b3cf574a28b6b5fe93dee0bb9118cfee4eb65bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b3cf574a28b6b5fe93dee0bb9118cfee4eb65bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fd44da38705c491a51156ca623ad18c949cf772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd44da38705c491a51156ca623ad18c949cf772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fd44da38705c491a51156ca623ad18c949cf772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd44da38705c491a51156ca623ad18c949cf772/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a92038b78ce817067aeaa5ed0a8b83c3da97834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a92038b78ce817067aeaa5ed0a8b83c3da97834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a92038b78ce817067aeaa5ed0a8b83c3da97834"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "27e8428898fa7a7536125b76984fc59e1ccd21fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fd44da38705c491a51156ca623ad18c949cf772/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fd44da38705c491a51156ca623ad18c949cf772/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fd44da38705c491a51156ca623ad18c949cf772", "patch": "@@ -1,3 +1,12 @@\n+2013-02-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/56310\n+\t* ipa-cp.c (agg_replacements_to_vector): New parameter index, copy\n+\tonly matching indices and non-negative final offsets.\n+\t(intersect_aggregates_with_edge): Pass src_idx to\n+\tagg_replacements_to_vector.  Pass src_idx insstead of index to\n+\tintersect_with_agg_replacements.\n+\n 2013-02-21  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (good_cloning_opportunity_p): Dump the real threshold"}, {"sha": "9a67f3c0be3f0f638eb5cb85dbf6a5da2b6e1e68", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fd44da38705c491a51156ca623ad18c949cf772/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fd44da38705c491a51156ca623ad18c949cf772/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=0fd44da38705c491a51156ca623ad18c949cf772", "patch": "@@ -2807,12 +2807,15 @@ intersect_with_plats (struct ipcp_param_lattices *plats,\n    vector result while subtracting OFFSET from the individual value offsets.  */\n \n static vec<ipa_agg_jf_item_t>\n-agg_replacements_to_vector (struct cgraph_node *node, HOST_WIDE_INT offset)\n+agg_replacements_to_vector (struct cgraph_node *node, int index,\n+\t\t\t    HOST_WIDE_INT offset)\n {\n   struct ipa_agg_replacement_value *av;\n   vec<ipa_agg_jf_item_t> res = vNULL;\n \n   for (av = ipa_get_agg_replacements_for_node (node); av; av = av->next)\n+    if (av->index == index\n+\t&& (av->offset - offset) >= 0)\n     {\n       struct ipa_agg_jf_item item;\n       gcc_checking_assert (av->value);\n@@ -2892,7 +2895,7 @@ intersect_aggregates_with_edge (struct cgraph_edge *cs, int index,\n \t  if (agg_pass_through_permissible_p (orig_plats, jfunc))\n \t    {\n \t      if (!inter.exists ())\n-\t\tinter = agg_replacements_to_vector (cs->caller, 0);\n+\t\tinter = agg_replacements_to_vector (cs->caller, src_idx, 0);\n \t      else\n \t\tintersect_with_agg_replacements (cs->caller, src_idx,\n \t\t\t\t\t\t &inter, 0);\n@@ -2925,9 +2928,9 @@ intersect_aggregates_with_edge (struct cgraph_edge *cs, int index,\n       if (caller_info->ipcp_orig_node)\n \t{\n \t  if (!inter.exists ())\n-\t    inter = agg_replacements_to_vector (cs->caller, delta);\n+\t    inter = agg_replacements_to_vector (cs->caller, src_idx, delta);\n \t  else\n-\t    intersect_with_agg_replacements (cs->caller, index, &inter,\n+\t    intersect_with_agg_replacements (cs->caller, src_idx, &inter,\n \t\t\t\t\t     delta);\n \t}\n       else"}, {"sha": "8f0ec270e80052c31a0ab033fcae8919c178476c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fd44da38705c491a51156ca623ad18c949cf772/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fd44da38705c491a51156ca623ad18c949cf772/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fd44da38705c491a51156ca623ad18c949cf772", "patch": "@@ -1,3 +1,8 @@\n+2013-02-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/56310\n+\t* g++.dg/ipa/pr56310.C: New test.\n+\n 2013-02-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/56385"}, {"sha": "af6979c8fd3c66428ce78295dd86e07fbbb7763b", "filename": "gcc/testsuite/g++.dg/ipa/pr56310.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fd44da38705c491a51156ca623ad18c949cf772/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr56310.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fd44da38705c491a51156ca623ad18c949cf772/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr56310.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr56310.C?ref=0fd44da38705c491a51156ca623ad18c949cf772", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fipa-cp -std=gnu++0x -fno-early-inlining -fipa-cp-clone --param=ipa-cp-eval-threshold=1\" } */\n+\n+void bar (void *, void *);\n+\n+struct C\n+{\n+  constexpr C ():p (0)\n+  {\n+  }\n+  void *get ()\n+  {\n+    return p;\n+  }\n+  void *p;\n+};\n+\n+struct B:C\n+{\n+};\n+\n+struct A\n+{\n+  void f (B * x, B * y)\n+  {\n+    bar (x->get (), y->get ());\n+  }\n+};\n+\n+void\n+foo ()\n+{\n+  A a;\n+  B b;\n+  a.f (&b, &b);\n+}"}]}