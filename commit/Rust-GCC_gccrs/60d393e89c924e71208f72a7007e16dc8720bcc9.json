{"sha": "60d393e89c924e71208f72a7007e16dc8720bcc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBkMzkzZTg5YzkyNGU3MTIwOGY3MmE3MDA3ZTE2ZGM4NzIwYmNjOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-04-20T07:20:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-04-20T07:20:16Z"}, "message": "re PR tree-optimization/70726 (Internal compiler error (ICE) on valid code)\n\n2016-04-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/70726\n\t* tree-vect-stmts.c (vectorizable_shift): Do not use scalar\n\tshift amounts from a pattern stmt operand.\n\n\t* g++.dg/vect/pr70726.cc: New testcase.\n\nFrom-SVN: r235236", "tree": {"sha": "675e34a118d4a53b661615e673aea77f0a5a8312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/675e34a118d4a53b661615e673aea77f0a5a8312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60d393e89c924e71208f72a7007e16dc8720bcc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d393e89c924e71208f72a7007e16dc8720bcc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60d393e89c924e71208f72a7007e16dc8720bcc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d393e89c924e71208f72a7007e16dc8720bcc9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82c6f58aaf17c769c7b1cb389ca15026c64ffb32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c6f58aaf17c769c7b1cb389ca15026c64ffb32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c6f58aaf17c769c7b1cb389ca15026c64ffb32"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "6e92dde027e973c77f83efc43cb94f77bc42f3b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d393e89c924e71208f72a7007e16dc8720bcc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d393e89c924e71208f72a7007e16dc8720bcc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60d393e89c924e71208f72a7007e16dc8720bcc9", "patch": "@@ -1,3 +1,9 @@\n+2016-04-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70726\n+\t* tree-vect-stmts.c (vectorizable_shift): Do not use scalar\n+\tshift amounts from a pattern stmt operand.\n+\n 2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \tPR target/70674"}, {"sha": "db98dd3f9d51117d68f769abc7976d0b72ee2f46", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d393e89c924e71208f72a7007e16dc8720bcc9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d393e89c924e71208f72a7007e16dc8720bcc9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60d393e89c924e71208f72a7007e16dc8720bcc9", "patch": "@@ -1,3 +1,8 @@\n+2016-04-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70726\n+\t* g++.dg/vect/pr70726.cc: New testcase.\n+\n 2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \tPR target/70674"}, {"sha": "d5d2def4f3bd4388ae5826e2c99d826f1b986c71", "filename": "gcc/testsuite/g++.dg/vect/pr70726.cc", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d393e89c924e71208f72a7007e16dc8720bcc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70726.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d393e89c924e71208f72a7007e16dc8720bcc9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70726.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70726.cc?ref=60d393e89c924e71208f72a7007e16dc8720bcc9", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+// { dg-additional-options \"-Ofast\" }\n+// { dg-additional-options \"-mavx2\" { target x86_64-*-* i?86-*-* } }\n+\n+extern long a;\n+extern int b[100];\n+extern unsigned c[5][5][2][4][2][2][3];\n+void fn1() {\n+  for (int d = 0; d < 2; d = d + 1)\n+    for (int e = 0; e < 5; e = e + 1)\n+      for (int f = 0; f < 3; f = f + 1)\n+        for (int g = 0; g < 3; g = g + 1)\n+          for (int h = 0; h < 2; h = h + 1)\n+            for (int i = 0; i < 4; i = i + 1)\n+              for (int j = 0; j < 2; j = j + 1)\n+                for (int k = 0; k < 2; k = k + 1)\n+                  for (int l = 0; l < 3; l = l + 1)\n+                    c[d][e][h][i][j][k][l] = a << b[f * 5 + g] + 4;\n+}"}, {"sha": "9ab4af4f97eb9a651a6335c64a3574a058dad5f0", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d393e89c924e71208f72a7007e16dc8720bcc9/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d393e89c924e71208f72a7007e16dc8720bcc9/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=60d393e89c924e71208f72a7007e16dc8720bcc9", "patch": "@@ -4532,6 +4532,16 @@ vectorizable_shift (gimple *stmt, gimple_stmt_iterator *gsi,\n \t    if (!operand_equal_p (gimple_assign_rhs2 (slpstmt), op1, 0))\n \t      scalar_shift_arg = false;\n \t}\n+\n+      /* If the shift amount is computed by a pattern stmt we cannot\n+         use the scalar amount directly thus give up and use a vector\n+\t shift.  */\n+      if (dt[1] == vect_internal_def)\n+\t{\n+\t  gimple *def = SSA_NAME_DEF_STMT (op1);\n+\t  if (is_pattern_stmt_p (vinfo_for_stmt (def)))\n+\t    scalar_shift_arg = false;\n+\t}\n     }\n   else\n     {"}]}