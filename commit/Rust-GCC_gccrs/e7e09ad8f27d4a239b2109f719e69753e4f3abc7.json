{"sha": "e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdlMDlhZDhmMjdkNGEyMzliMjEwOWY3MTllNjk3NTNlNGYzYWJjNw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2003-06-10T16:32:58Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2003-06-10T16:32:58Z"}, "message": "stormy16.c (xstormy16_extra_constraint_p): Add Z, which matches (const_int 0) for addhi3.\n\n* config/stormy16/stormy16.c (xstormy16_extra_constraint_p): Add Z,\nwhich matches (const_int 0) for addhi3.\n* config/stormy16/stormy16.md: Document known constraints.\n(addhi3): Handle adding zero.\n\nFrom-SVN: r67712", "tree": {"sha": "55b638bf0480d68d3e8b1f43d33dd1bb6a8a31e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55b638bf0480d68d3e8b1f43d33dd1bb6a8a31e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e09ad8f27d4a239b2109f719e69753e4f3abc7/comments", "author": null, "committer": null, "parents": [{"sha": "a398a8222049b39ca16bd3d38f9d955214eecb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a398a8222049b39ca16bd3d38f9d955214eecb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a398a8222049b39ca16bd3d38f9d955214eecb48"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "ab74761c900624a59b0594368c28787f7dd1e170", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e09ad8f27d4a239b2109f719e69753e4f3abc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e09ad8f27d4a239b2109f719e69753e4f3abc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "patch": "@@ -1,3 +1,10 @@\n+2003-06-10  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/stormy16/stormy16.c (xstormy16_extra_constraint_p): Add Z,\n+\twhich matches (const_int 0) for addhi3.\n+\t* config/stormy16/stormy16.md: Document known constraints.\n+\t(addhi3): Handle adding zero.\n+\n 2003-06-10  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>\n \n \t* config/m32r/m32r.h (HARD_REGNO_RENAME_OK): New."}, {"sha": "fff02a70240d1b7064296e3fddc26fa736589e61", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e09ad8f27d4a239b2109f719e69753e4f3abc7/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e09ad8f27d4a239b2109f719e69753e4f3abc7/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "patch": "@@ -1,5 +1,5 @@\n /* Xstormy16 target functions.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n    Contributed by Red Hat, Inc.\n \n@@ -697,6 +697,12 @@ xstormy16_extra_constraint_p (x, c)\n       return (GET_CODE (x) == CONST_INT\n \t      && (INTVAL (x) < 2 || INTVAL (x) > 15));\n \n+      /* 'Z' is for CONST_INT value zero.  This is for adding zero to\n+\t a register in addhi3, which would otherwise require a carry.  */\n+    case 'Z':\n+      return (GET_CODE (x) == CONST_INT\n+\t      && (INTVAL (x) == 0));\n+\n     default:\n       return 0;\n     }"}, {"sha": "7625246f0bddecc26f7f09ae59ffad0aae5ed27b", "filename": "gcc/config/stormy16/stormy16.md", "status": "modified", "additions": 34, "deletions": 6, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e09ad8f27d4a239b2109f719e69753e4f3abc7/gcc%2Fconfig%2Fstormy16%2Fstormy16.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e09ad8f27d4a239b2109f719e69753e4f3abc7/gcc%2Fconfig%2Fstormy16%2Fstormy16.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.md?ref=e7e09ad8f27d4a239b2109f719e69753e4f3abc7", "patch": "@@ -1,5 +1,5 @@\n ;; XSTORMY16 Machine description template\n-;; Copyright (C) 1997, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+;; Copyright (C) 1997, 1998, 1999, 2001, 2002, 2003 Free Software Foundation, Inc.\n ;; Contributed by Red Hat, Inc.\n \n ;; This file is part of GCC.\n@@ -21,6 +21,30 @@\n \n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \n+;; Constraints\n+;; a  $0\n+;; b  $1\n+;; c  $2\n+;; d  $8\n+;; e  $0..$7\n+;; t  $0..$1\n+;; y  Carry\n+;; z  $8..$9\n+;; I  0..3\n+;; J  2**N mask\n+;; K  2**N antimask\n+;; L  0..255\n+;; M  -255..0\n+;; N  -3..0\n+;; O  1..4\n+;; P  -4..-1\n+;; Q  post-inc mem (push)\n+;; R  pre-dec mem (pop)\n+;; S  immediate mem\n+;; T  Rx\n+;; U  -inf..1 or 16..inf\n+;; Z  0\n+\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -276,21 +300,25 @@\n ; carry register as an input, and some output reloads or input\n ; reloads might need to use it.  In fact, without the '&' reload\n ; will fail in some cases.\n+; Note that the 'Z' constraint matches \"add $reg,0\", which reload\n+; will occasionally emit.  We avoid the \"add $reg,imm\" match because\n+; it clobbers the carry.\n (define_insn \"addhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,T,T,r,r,r\")\n-\t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0,0,0,0\")\n-\t\t (match_operand:HI 2 \"xs_hi_nonmemory_operand\" \"O,P,L,M,Ir,N,i\")))\n-   (clobber (match_scratch:BI 3 \"=X,X,&y,&y,&y,&y,&y\"))]\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,T,T,r,r,r\")\n+\t(plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,0,0,0,0,0\")\n+\t\t (match_operand:HI 2 \"xs_hi_nonmemory_operand\" \"O,P,Z,L,M,Ir,N,i\")))\n+   (clobber (match_scratch:BI 3 \"=X,X,X,&y,&y,&y,&y,&y\"))]\n   \"\"\n   \"@\n    inc %0,%o2\n    dec %0,%O2\n+   ;\n    add Rx,%2\n    sub Rx,#%n2\n    add %0,%2\n    sub %0,#%n2\n    add %0,%2\"\n-  [(set_attr \"length\" \"2,2,2,2,2,2,4\")])\n+  [(set_attr \"length\" \"2,2,0,2,2,2,2,4\")])\n \n ; Reload can generate addition operations.  The SECONDARY_RELOAD_CLASS\n ; macro causes it to allocate the carry register; this pattern"}]}