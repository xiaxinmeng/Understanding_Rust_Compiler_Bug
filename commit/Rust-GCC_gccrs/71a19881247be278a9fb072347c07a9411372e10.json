{"sha": "71a19881247be278a9fb072347c07a9411372e10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFhMTk4ODEyNDdiZTI3OGE5ZmIwNzIzNDdjMDdhOTQxMTM3MmUxMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-05-31T06:53:04Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-05-31T06:53:04Z"}, "message": "call.c (add_template_candidate_real): Handle member template constructors for classes with virtual bases.\n\n\t* call.c (add_template_candidate_real): Handle member template\n\tconstructors for classes with virtual bases.\n\t(build_user_type_conversion_1): Use in_charge_arg_for_name.\n\t(build_new_method_call): Use DECL_NONSTATIC_MEMBER_FUNCTION_P.\n\n\t* ir.texi: Update thunk documentation.\n\nFrom-SVN: r34284", "tree": {"sha": "46d79e4b598f15e2e38e848b21b755e2a3b56d92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46d79e4b598f15e2e38e848b21b755e2a3b56d92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71a19881247be278a9fb072347c07a9411372e10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a19881247be278a9fb072347c07a9411372e10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71a19881247be278a9fb072347c07a9411372e10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a19881247be278a9fb072347c07a9411372e10/comments", "author": null, "committer": null, "parents": [{"sha": "885e80cc8ae2a30d87c713db84003ab4a8dbf7eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885e80cc8ae2a30d87c713db84003ab4a8dbf7eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/885e80cc8ae2a30d87c713db84003ab4a8dbf7eb"}], "stats": {"total": 67, "additions": 62, "deletions": 5}, "files": [{"sha": "e707054b6c41a96b21934d7fd035fe45e37ea532", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a19881247be278a9fb072347c07a9411372e10/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a19881247be278a9fb072347c07a9411372e10/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=71a19881247be278a9fb072347c07a9411372e10", "patch": "@@ -1,5 +1,12 @@\n 2000-05-30  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* call.c (add_template_candidate_real): Handle member template\n+\tconstructors for classes with virtual bases.\n+\t(build_user_type_conversion_1): Use in_charge_arg_for_name.\n+\t(build_new_method_call): Use DECL_NONSTATIC_MEMBER_FUNCTION_P.\n+\n+\t* ir.texi: Update thunk documentation.\n+\t\n \t* call.c (joust): Fix handling of overloaded builtin operators.\n \n 2000-05-30  Zack Weinberg  <zack@wolery.cumb.org>"}, {"sha": "eea70a6ef2303bd5c1b4983e856a1c788dfb2275", "filename": "gcc/cp/call.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a19881247be278a9fb072347c07a9411372e10/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a19881247be278a9fb072347c07a9411372e10/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=71a19881247be278a9fb072347c07a9411372e10", "patch": "@@ -2141,11 +2141,25 @@ add_template_candidate_real (candidates, tmpl, ctype, explicit_targs,\n {\n   int ntparms = DECL_NTPARMS (tmpl);\n   tree targs = make_tree_vec (ntparms);\n+  tree args_without_in_chrg;\n   struct z_candidate *cand;\n   int i;\n   tree fn;\n \n-  i = fn_type_unification (tmpl, explicit_targs, targs, arglist,\n+  /* TEMPLATE_DECLs do not have the in-charge parameter, nor the VTT\n+     parameter.  So, skip it here before attempting to perform\n+     argument deduction.  */\n+  if ((DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P (tmpl)\n+       || DECL_BASE_CONSTRUCTOR_P (tmpl))\n+      && TYPE_USES_VIRTUAL_BASECLASSES (DECL_CONTEXT (tmpl)))\n+    args_without_in_chrg = tree_cons (NULL_TREE, \n+\t\t\t\t      TREE_VALUE (arglist),\n+\t\t\t\t      TREE_CHAIN (TREE_CHAIN (arglist)));\n+  else\n+    args_without_in_chrg = arglist;\n+\n+  i = fn_type_unification (tmpl, explicit_targs, targs,\n+\t\t\t   args_without_in_chrg,\n \t\t\t   return_type, strict);\n \n   if (i != 0)\n@@ -2320,7 +2334,9 @@ build_user_type_conversion_1 (totype, expr, flags)\n       TREE_TYPE (t) = build_pointer_type (totype);\n       args = build_tree_list (NULL_TREE, expr);\n       if (DECL_HAS_IN_CHARGE_PARM_P (OVL_CURRENT (ctors)))\n-\targs = tree_cons (NULL_TREE, integer_one_node, args);\n+\targs = tree_cons (NULL_TREE, \n+\t\t\t  in_charge_arg_for_name (complete_ctor_identifier), \n+\t\t\t  args);\n       args = tree_cons (NULL_TREE, t, args);\n     }\n   for (; ctors; ctors = OVL_NEXT (ctors))\n@@ -4229,7 +4245,7 @@ build_new_method_call (instance, name, args, basetype_path, flags)\n   tree explicit_targs = NULL_TREE;\n   tree basetype, mem_args = NULL_TREE, fns, instance_ptr;\n   tree pretty_name;\n-  tree user_args = args;\n+  tree user_args;\n   tree templates = NULL_TREE;\n   int template_only = 0;\n \n@@ -4374,7 +4390,8 @@ build_new_method_call (instance, name, args, basetype_path, flags)\n \t  if ((flags & LOOKUP_ONLYCONVERTING)\n \t      && DECL_NONCONVERTING_P (t))\n \t    continue;\n-\t  if (TREE_CODE (TREE_TYPE (t)) == METHOD_TYPE)\n+\n+\t  if (DECL_NONSTATIC_MEMBER_FUNCTION_P (t))\n \t    this_arglist = mem_args;\n \t  else\n \t    this_arglist = args;"}, {"sha": "61165b7fa80bb25872eff795073176a0749ea5b5", "filename": "gcc/cp/ir.texi", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a19881247be278a9fb072347c07a9411372e10/gcc%2Fcp%2Fir.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a19881247be278a9fb072347c07a9411372e10/gcc%2Fcp%2Fir.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fir.texi?ref=71a19881247be278a9fb072347c07a9411372e10", "patch": "@@ -1038,7 +1038,19 @@ returns, control is transferred directly to the caller, without\n returning to the thunk.  The first parameter to the thunk is always the\n @code{this} pointer; the thunk should add @code{THUNK_DELTA} to this\n value.  (The @code{THUNK_DELTA} is an @code{int}, not an\n-@code{INTEGER_CST}.)  Then, the thunk should jump to the location given\n+@code{INTEGER_CST}.)  \n+\n+Then, if @code{THUNK_VCALL_OFFSET} (also an @code{int}) is non-zero the\n+adjusted @code{this} pointer must be adjusted again.  The complete\n+calculation is given by the following pseudo-code:\n+\n+@example\n+this += THUNK_DELTA\n+if (THUNK_VCALL_OFFSET)\n+  this += (*((ptrdiff_t **) this))[THUNK_VCALL_OFFSET]\n+@end example\n+\n+Finally, the thunk should jump to the location given\n by @code{DECL_INITIAL}; this will always be an expression for the\n address of a function.\n "}, {"sha": "6d611186c4f6eb8e6a5b79c6c824115617cecbc3", "filename": "gcc/testsuite/g++.old-deja/g++.other/vbase3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71a19881247be278a9fb072347c07a9411372e10/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvbase3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71a19881247be278a9fb072347c07a9411372e10/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvbase3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvbase3.C?ref=71a19881247be278a9fb072347c07a9411372e10", "patch": "@@ -0,0 +1,21 @@\n+// Build don't link:\n+// Origin: scott snyder <snyder@fnal.gov>\n+\n+class d0_Collection_Base {};\n+\n+template <class T>\n+class d0_List\n+  : virtual public d0_Collection_Base\n+{\n+public:\n+  d0_List ();\n+\n+  template <class Input_Iterator>\n+  d0_List (Input_Iterator first, Input_Iterator last)\n+    ;\n+};\n+\n+void tlist ()\n+{\n+  const d0_List<int> l4 (1, 2);\n+}"}]}