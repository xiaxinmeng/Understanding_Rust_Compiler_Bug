{"sha": "fff14bb32f496a5f6fbbd49a8343e84e14407f49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZmMTRiYjMyZjQ5NmE1ZjZmYmJkNDlhODM0M2U4NGUxNDQwN2Y0OQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-07-28T01:57:07Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-07-28T01:57:07Z"}, "message": "* Makefile.in (bootstrap): Move -BstageN/ back to the beginning.\n\nFrom-SVN: r35305", "tree": {"sha": "03b246b445d2c1aa5863eaaf13285d1391ea8526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03b246b445d2c1aa5863eaaf13285d1391ea8526"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fff14bb32f496a5f6fbbd49a8343e84e14407f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff14bb32f496a5f6fbbd49a8343e84e14407f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff14bb32f496a5f6fbbd49a8343e84e14407f49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff14bb32f496a5f6fbbd49a8343e84e14407f49/comments", "author": null, "committer": null, "parents": [{"sha": "922a4beb4de01de52df7c20bd778c0a85bb04aa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922a4beb4de01de52df7c20bd778c0a85bb04aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922a4beb4de01de52df7c20bd778c0a85bb04aa1"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "c811552b2f1456a5370d7117a74dc974e392617e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fff14bb32f496a5f6fbbd49a8343e84e14407f49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fff14bb32f496a5f6fbbd49a8343e84e14407f49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fff14bb32f496a5f6fbbd49a8343e84e14407f49", "patch": "@@ -1,3 +1,7 @@\n+2000-07-27  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* Makefile.in (bootstrap): Move -BstageN/ back to the beginning.\n+\n 2000-07-27  Andrew Cagney  <cagney@b1.cygnus.com>\n \n \t* gcc.c (struct prefix_list): Add member priority."}, {"sha": "9a773f4f904372c65b7cdf0b7a471ac9d5c50c00", "filename": "gcc/Makefile.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fff14bb32f496a5f6fbbd49a8343e84e14407f49/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fff14bb32f496a5f6fbbd49a8343e84e14407f49/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=fff14bb32f496a5f6fbbd49a8343e84e14407f49", "patch": "@@ -165,7 +165,7 @@ INSTALL_ASSERT_H = install-assert-h\n # The GCC to use for compiling libgcc.a, enquire, and libgcc1-test.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n-GCC_FOR_TARGET = ./xgcc -B$(build_tooldir)/bin/ -B./ -isystem $(build_tooldir)/include\n+GCC_FOR_TARGET = ./xgcc -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include\n \n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n@@ -2763,22 +2763,22 @@ bootstrap bootstrap-lean: force\n # To prevent `make install' from compiling alloca.o and then relinking cc1\n # because alloca.o is newer, we permit these recursive makes to compile\n # alloca.o.  Then cc1 is newer, so it won't have to be relinked.\n-\t$(MAKE) CC=\"stage1/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage1/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n \t$(MAKE) stage2\n \t-if test $@ = bootstrap-lean; then rm -rf stage1; cd stage2 ; rm -f $(VOL_FILES); else true; fi\n-\t$(MAKE) CC=\"stage2/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage2/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap2 bootstrap2-lean: force\n-\t$(MAKE) CC=\"stage1/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage1/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage1/xgcc$(exeext) -Bstage1/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n \t$(MAKE) stage2\n \t-if test $@ = bootstrap2-lean; then rm -rf stage1; cd stage2 ; rm -f $(VOL_FILES); else true; fi\n-\t$(MAKE) CC=\"stage2/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage2/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap3 bootstrap3-lean: force\n-\t$(MAKE) CC=\"stage2/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage2/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage2/xgcc$(exeext) -Bstage2/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap4 bootstrap4-lean: force\n-\t$(MAKE) CC=\"stage3/xgcc$(exeext) -B$(build_tooldir)/bin/ -Bstage3/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage3/ LANGUAGES=\"$(LANGUAGES)\"\n+\t$(MAKE) CC=\"stage3/xgcc$(exeext) -Bstage3/ -B$(build_tooldir)/bin/\" CFLAGS=\"$(WARN_CFLAGS) $(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage3/ LANGUAGES=\"$(LANGUAGES)\"\n \n # Compare the object files in the current directory with those in the\n # stage2 directory."}]}