{"sha": "8d3f856e31650d9c61a53af7b243d9d96702fbbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQzZjg1NmUzMTY1MGQ5YzYxYTUzYWY3YjI0M2Q5ZDk2NzAyZmJiZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-04-11T19:01:29Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-04-11T19:01:29Z"}, "message": "3.cc: Split.\n\n\n2003-04-11  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/22_locale/locale/cons/3.cc: Split.\n\t* testsuite/22_locale/locale/cons/7222-c.cc: New.\n\t* testsuite/22_locale/locale/cons/7222-env.cc: New.\n\tCheck before trying to create a locale from the environment.\n\t* testsuite/27_io/ios_base/state/1.cc (test02): Use \"C\" locale.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:\n\tAdjust includes.\n\nFrom-SVN: r65475", "tree": {"sha": "836abdeae470d0ad4eb3e08f5da556d73cc074a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/836abdeae470d0ad4eb3e08f5da556d73cc074a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d3f856e31650d9c61a53af7b243d9d96702fbbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3f856e31650d9c61a53af7b243d9d96702fbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d3f856e31650d9c61a53af7b243d9d96702fbbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3f856e31650d9c61a53af7b243d9d96702fbbd/comments", "author": null, "committer": null, "parents": [{"sha": "11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42"}], "stats": {"total": 65, "additions": 55, "deletions": 10}, "files": [{"sha": "ff6af696d3df7b3e2dcce98628b1ca4511f4e59c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8d3f856e31650d9c61a53af7b243d9d96702fbbd", "patch": "@@ -1,3 +1,13 @@\n+2003-04-11  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/22_locale/locale/cons/3.cc: Split.\n+\t* testsuite/22_locale/locale/cons/7222-c.cc: New.\n+\t* testsuite/22_locale/locale/cons/7222-env.cc: New.\t\n+\tCheck before trying to create a locale from the environment.\n+\t* testsuite/27_io/ios_base/state/1.cc (test02): Use \"C\" locale.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:\n+\tAdjust includes.\n+\t\n 2003-04-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/ctype/is/char/3.cc (test03): Use the classic"}, {"sha": "7a93dee1541f4b25d99db00f7986ceee627704be", "filename": "libstdc++-v3/testsuite/22_locale/locale/cons/7222-c.cc", "status": "renamed", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7222-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7222-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7222-c.cc?ref=8d3f856e31650d9c61a53af7b243d9d96702fbbd", "patch": "@@ -29,14 +29,10 @@\n void test02()\n {\n   bool test = true;\n+\n   std::locale loc_c1(\"C\");\n   std::locale loc_c2 (\"C\");\n-  \n-  std::locale loc_1(\"\");\n-  std::locale loc_2(\"\");\n-\n   VERIFY( loc_c1 == loc_c2 );\n-  VERIFY( loc_1 == loc_2 );\n }\n  \n int main()", "previous_filename": "libstdc++-v3/testsuite/22_locale/locale/cons/3.cc"}, {"sha": "1309a318386ebded06c8947e286e8af5b60e4164", "filename": "libstdc++-v3/testsuite/22_locale/locale/cons/7222-env.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7222-env.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7222-env.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F7222-env.cc?ref=8d3f856e31650d9c61a53af7b243d9d96702fbbd", "patch": "@@ -0,0 +1,42 @@\n+// 2000-09-13 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.1.1.2 locale constructors and destructors [lib.locale.cons]\n+\n+#include <cwchar> // for mbstate_t\n+#include <locale>\n+#include <stdexcept>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/7222\n+void test02()\n+{\n+  bool test = true;\n+\n+  std::locale loc_1(\"\");\n+  std::locale loc_2(\"\");\n+  VERIFY( loc_1 == loc_2 );\n+}\n+ \n+int main()\n+{\n+  __gnu_cxx_test::run_test_wrapped_generic_locale_exception_catcher(test02);\n+  return 0;\n+}"}, {"sha": "4d7a7fe68256edb7d7433ba2fe66dbd7846f6059", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F12.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F12.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F12.cc?ref=8d3f856e31650d9c61a53af7b243d9d96702fbbd", "patch": "@@ -25,11 +25,8 @@\n // XXX http://gcc.gnu.org/ml/gcc/2002-12/msg01422.html\n // { dg-do run { xfail sparc*-*-solaris2* } }\n \n-#include <cstdio> // for printf\n #include <istream>\n-#include <ostream>\n #include <sstream>\n-#include <locale>\n #include <testsuite_hooks.h>\n \n std::string str_01;"}, {"sha": "bc6a356edd30a58de7d52b60df76f87c97906157", "filename": "libstdc++-v3/testsuite/27_io/ios_base/state/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstate%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3f856e31650d9c61a53af7b243d9d96702fbbd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstate%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstate%2F1.cc?ref=8d3f856e31650d9c61a53af7b243d9d96702fbbd", "patch": "@@ -39,9 +39,9 @@ test02()\n   std::string str01;\n   std::string str02;\n \n-  std::locale loc(\"\");\n+  std::locale loc_c = std::locale::classic();\n   std::ostringstream ostr01;\n-  ostr01.imbue(loc);\n+  ostr01.imbue(loc_c);\n   std::ios_base::fmtflags ff = ostr01.flags(std::ios_base::boolalpha);\n \n   ostr01 << true;"}]}