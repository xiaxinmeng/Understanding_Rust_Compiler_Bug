{"sha": "b33aa7209ed570864189dba4c070565ea4a1554b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMzYWE3MjA5ZWQ1NzA4NjQxODlkYmE0YzA3MDU2NWVhNGExNTU0Yg==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2018-06-29T13:14:46Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2018-06-29T13:14:46Z"}, "message": "contrib: introduce Vim addon directory, add match.pd syntax plugin\n\n\t* vim-gcc-dev/README: New file.\n\t* vim-gcc-dev/ftdetect/gcc-dev.vim: New file.\n\t* vim-gcc-dev/syntax/gcc-match.vim: New file.\n\t* gimple.vim: Move under vim-gcc-dev/syntax/.\n\t* gcc-rtl.vim: Likewise.\n\nFrom-SVN: r262249", "tree": {"sha": "052a406156c840221fbe3195518162676c678667", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/052a406156c840221fbe3195518162676c678667"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b33aa7209ed570864189dba4c070565ea4a1554b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b33aa7209ed570864189dba4c070565ea4a1554b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b33aa7209ed570864189dba4c070565ea4a1554b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b33aa7209ed570864189dba4c070565ea4a1554b/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8864590b7cad2b491407069d94068b65359e78c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8864590b7cad2b491407069d94068b65359e78c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8864590b7cad2b491407069d94068b65359e78c0"}], "stats": {"total": 126, "additions": 112, "deletions": 14}, "files": [{"sha": "17e9fb2b59f24ec9b01f8e7cc337ac151a88a42e", "filename": "contrib/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=b33aa7209ed570864189dba4c070565ea4a1554b", "patch": "@@ -1,3 +1,11 @@\n+2018-06-19  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* vim-gcc-dev/README: New file.\n+\t* vim-gcc-dev/ftdetect/gcc-dev.vim: New file.\n+\t* vim-gcc-dev/syntax/gcc-match.vim: New file.\n+\t* gimple.vim: Move under vim-gcc-dev/syntax/.\n+\t* gcc-rtl.vim: Likewise.\n+\n 2018-06-19  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-rtl.vim: New file."}, {"sha": "29bbf48492fe943eb9d600580c2accbd806a334c", "filename": "contrib/vim-gcc-dev/README", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2FREADME?ref=b33aa7209ed570864189dba4c070565ea4a1554b", "patch": "@@ -0,0 +1,13 @@\n+This directory serves as a simple Vim addon for GCC development.  It can be\n+symlinked or copied into Vim plugin directory as any other plugin.  For\n+example, if using vim-pathogen plugin manager:\n+\n+    ln -s /path/to/gcc/contrib/vim-gcc-dev ~/.vim/bundle/\n+\n+This adds syntax highlighting rules for the match.pd file and GIMPLE/RTL dumps.\n+\n+You can also use RTL syntax rules for GCC machine desciption files by adding\n+\n+    autocmd BufRead *.md  setf gcc-rtl\n+\n+to your ~/.vimrc file."}, {"sha": "ed6989aeacb6410ac8466c39677acaa0cc767a10", "filename": "contrib/vim-gcc-dev/ftdetect/gcc-dev.vim", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2Fftdetect%2Fgcc-dev.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2Fftdetect%2Fgcc-dev.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2Fftdetect%2Fgcc-dev.vim?ref=b33aa7209ed570864189dba4c070565ea4a1554b", "patch": "@@ -0,0 +1,20 @@\n+\" Vim file type detection rules for GCC development\n+\"\n+\" Copyright (C) 2018 Free Software Foundation, Inc.\n+\"\n+\" This script is free software; you can redistribute it and/or modify\n+\" it under the terms of the GNU General Public License as published by\n+\" the Free Software Foundation; either version 3, or (at your option)\n+\" any later version\n+\n+augroup filetypedetect\n+\n+  au BufRead match.pd                setf gcc-match\n+\n+  \" Match RTL dump file names such as test.c.234r.pass-name\n+  au BufRead *.[1-3][0-9][0-9]r.*    setf gcc-rtl\n+\n+  \" Match GIMPLE and IPA dump file names\n+  au BufRead *.[0-2][0-9][0-9][ti].* setf gimple\n+\n+augroup END"}, {"sha": "356b07a15b248ae7ff707e993417a4ff047fe196", "filename": "contrib/vim-gcc-dev/syntax/gcc-match.vim", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-match.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-match.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-match.vim?ref=b33aa7209ed570864189dba4c070565ea4a1554b", "patch": "@@ -0,0 +1,71 @@\n+\" Vim syntax highlighting rules for GCC match-and-simplify language.\n+\"\n+\" Copyright (C) 2018 Free Software Foundation, Inc.\n+\"\n+\" This script is free software; you can redistribute it and/or modify\n+\" it under the terms of the GNU General Public License as published by\n+\" the Free Software Foundation; either version 3, or (at your option)\n+\" any later version\n+\n+if exists(\"b:current_syntax\")\n+    finish\n+endif\n+\n+\" Some keywords have a question mark, e.g. 'convert?'\n+setl isk=@,48-57,_,?\n+\n+syn keyword pdTodo contained TODO FIXME XXX\n+\n+syn keyword pdCtrl match simplify\n+syn keyword pdCtrl define_predicates define_operator_list\n+syn keyword pdCtrl if switch for with\n+\n+syn keyword pdType type\n+\n+syn keyword pdOp view_convert view_convert?\n+               \\ convert convert? convert1 convert2 convert1? convert2?\n+               \\ realpart imagpart\n+               \\ cond vec_cond vec_perm\n+               \\ pointer_plus pointer_diff\n+               \\ plus minus mult mult_highpart\n+               \\ trunc_div ceil_div floor_div round_div\n+               \\ trunc_mod ceil_mod floor_mod round_mod\n+               \\ rdiv exact_div\n+               \\ fix_trunc float negate min max abs absu\n+               \\ lshift rshift lrotate rrotate\n+               \\ bit_ior bit_xor bit_and bit_not\n+               \\ truth_andif truth_orif truth_and\n+               \\ truth_or truth_xor truth_not\n+               \\ lt le gt ge eq ne unordered ordered\n+               \\ unlt unle ungt unge uneq ltgt\n+               \\ addr_space_convert fixed_convert\n+               \\ bit_insert complex conj\n+               \\ reduc_max reduc_min reduc_plus\n+               \\ dot_prod widen_sum sad fma\n+               \\ widen_mult widen_mult_plus widen_mult_minus widen_lshift\n+               \\ vec_widen_mult_hi vec_widen_mult_lo\n+               \\ vec_widen_mult_even vec_widen_mult_odd\n+               \\ vec_unpack_hi vec_unpack_lo\n+               \\ vec_unpack_float_hi vec_unpack_float_lo\n+               \\ vec_pack_trunc vec_pack_sat vec_pack_fix_trunc\n+               \\ vec_widen_lshift_hi vec_widen_lshift_lo\n+\n+\" Match commutative/single-use specifiers: :C, :c, :s, :cs, etc.\n+syn match pdOpSpec  \":[CcSs]\\+\\>\"\n+\n+syn match pdCapture \"@@\\?[a-zA-Z0-9_]\\+\"\n+\n+syn region pdComment start=\"/\\*\" end=\"\\*/\" contains=pdTodo\n+\n+syn region pdPreProc start=\"^\\s*#\" skip=\"\\\\$\" end=\"$\" keepend\n+\n+hi def link pdCtrl    Statement\n+hi def link pdType    Identifier\n+hi def link pdOp      Constant\n+hi def link pdOpSpec  Operator\n+hi def link pdCapture Special\n+hi def link pdComment Comment\n+hi def link pdTodo    Todo\n+hi def link pdPreProc PreProc\n+\n+let b:current_syntax = \"gcc-match\""}, {"sha": "6b674e0285b5d5f873c76b2fda2019a14caaea7a", "filename": "contrib/vim-gcc-dev/syntax/gcc-rtl.vim", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-rtl.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-rtl.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgcc-rtl.vim?ref=b33aa7209ed570864189dba4c070565ea4a1554b", "patch": "@@ -6,8 +6,6 @@\n \" it under the terms of the GNU General Public License as published by\n \" the Free Software Foundation; either version 3, or (at your option)\n \" any later version\n-\"\n-\" For more instructions please see gimple.vim file in the same folder.\n \n \n \" Do not continue, if syntax is already enabled in current buffer.", "previous_filename": "contrib/gcc-rtl.vim"}, {"sha": "6a0150d6f4ea94a4559c21f1273d3ebcfaeec6bb", "filename": "contrib/vim-gcc-dev/syntax/gimple.vim", "status": "renamed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgimple.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b33aa7209ed570864189dba4c070565ea4a1554b/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgimple.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvim-gcc-dev%2Fsyntax%2Fgimple.vim?ref=b33aa7209ed570864189dba4c070565ea4a1554b", "patch": "@@ -11,17 +11,6 @@\n \" intermediate representation.  Such dumps are produced by GCC when\n \" it is invoked with -fdump-tree-* and/or -fdump-ipa-* switches.  Tested\n \" in Vim 7.4 (but should also work with earlier versions).\n-\"\n-\" INSTALLATION:\n-\" 1. Copy the script into $HOME/.vim/syntax directory\n-\" 2. Create a file gimple.vim in $HOME/.vim/ftdetect directory with the\n-\"    following command in it:\n-\"\n-\" au BufRead,BufNewFile *.[0-2][0-9][0-9][ti].* set filetype=gimple\n-\"\n-\" The pattern in this autocommand corresponds to default file names\n-\" of debug dumps, e.g.:\n-\" filename.cc.123t.pass-name\n \n \n \" Do not continue, if syntax is already enabled in current buffer.\n@@ -155,4 +144,3 @@ hi def link gimpleFrequency     Debug\n hi def link gimpleBBCount       Debug\n \n let b:current_syntax = \"gimple\"\n-", "previous_filename": "contrib/gimple.vim"}]}