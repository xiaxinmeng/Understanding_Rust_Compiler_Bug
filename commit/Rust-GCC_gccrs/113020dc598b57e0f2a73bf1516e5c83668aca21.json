{"sha": "113020dc598b57e0f2a73bf1516e5c83668aca21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEzMDIwZGM1OThiNTdlMGYyYTczYmYxNTE2ZTVjODM2NjhhY2EyMQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-10-02T19:43:41Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-10-02T19:43:41Z"}, "message": "nvptx offloading linking\n\n\tgcc/\n\t* config/nvptx/mkoffload.c (Kind, Vis): Remove enums.\n\t(Token, Stmt): Remove structs.\n\t(decls, vars, fns): Remove variables.\n\t(alloc_comment, append_stmt, is_keyword): Remove macros.\n\t(tokenize, write_token, write_tokens, alloc_stmt, rev_stmts)\n\t(write_stmt, write_stmts, parse_insn, parse_list_nosemi)\n\t(parse_init, parse_file): Remove functions.\n\t(read_file): Accept a pointer to a length and store into it.\n\t(process): Don't try to parse the input file, just write it out as\n\ta string, but looking for maps.  Also write out the length.\n\t(main): Don't use \"-S\" to compile PTX code.\n\n\tlibgomp/\n\t* oacc-ptx.h: Remove file, moving its content into...\n\t* config/nvptx/fortran.c: ... here...\n\t* config/nvptx/oacc-init.c: ..., here...\n\t* config/nvptx/oacc-parallel.c: ..., and here.\n\t* config/nvptx/openacc.f90: New file.\n\t* plugin/plugin-nvptx.c: Don't include \"oacc-ptx.h\".\n\t(link_ptx): Don't link in predefined bits of PTX code.\n\nCo-Authored-By: Bernd Schmidt <bernds@codesourcery.com>\n\nFrom-SVN: r228418", "tree": {"sha": "aa9ed3c30c222e71bcb81aabff26db2e11ffd802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa9ed3c30c222e71bcb81aabff26db2e11ffd802"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/113020dc598b57e0f2a73bf1516e5c83668aca21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/113020dc598b57e0f2a73bf1516e5c83668aca21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/113020dc598b57e0f2a73bf1516e5c83668aca21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/113020dc598b57e0f2a73bf1516e5c83668aca21/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1"}], "stats": {"total": 1706, "additions": 617, "deletions": 1089}, "files": [{"sha": "d1235bd6718b47e33579ce758b8335c77f4331c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -1,3 +1,18 @@\n+2015-10-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\t    Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* config/nvptx/mkoffload.c (Kind, Vis): Remove enums.\n+\t(Token, Stmt): Remove structs.\n+\t(decls, vars, fns): Remove variables.\n+\t(alloc_comment, append_stmt, is_keyword): Remove macros.\n+\t(tokenize, write_token, write_tokens, alloc_stmt, rev_stmts)\n+\t(write_stmt, write_stmts, parse_insn, parse_list_nosemi)\n+\t(parse_init, parse_file): Remove functions.\n+\t(read_file): Accept a pointer to a length and store into it.\n+\t(process): Don't try to parse the input file, just write it out as\n+\ta string, but looking for maps.  Also write out the length.\n+\t(main): Don't use \"-S\" to compile PTX code.\n+\n 2015-10-02  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (optimize_stmt): Note when loop structures need"}, {"sha": "ff538e2d5722b697089cb108ae826a33c06933c0", "filename": "gcc/config/nvptx/mkoffload.c", "status": "modified", "additions": 45, "deletions": 632, "changes": 677, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fmkoffload.c?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -41,84 +41,12 @@ const char tool_name[] = \"nvptx mkoffload\";\n \n #define COMMENT_PREFIX \"#\"\n \n-typedef enum Kind\n-{\n-  /* 0-ff used for single char tokens */\n-  K_symbol = 0x100, /* a symbol */\n-  K_label,  /* a label defn (i.e. symbol:) */\n-  K_ident,  /* other ident */\n-  K_dotted, /* dotted identifier */\n-  K_number,\n-  K_string,\n-  K_comment\n-} Kind;\n-\n-typedef struct Token\n-{\n-  unsigned short kind : 12;\n-  unsigned short space : 1; /* preceded by space */\n-  unsigned short end : 1;   /* succeeded by end of line */\n-  /* Length of token */\n-  unsigned short len;\n-\n-  /* Token itself */\n-  char const *ptr;\n-} Token;\n-\n-/* statement info */\n-typedef enum Vis\n-{\n-  V_dot = 0,  /* random pseudo */\n-  V_var = 1,  /* var decl/defn */\n-  V_func = 2, /* func decl/defn */\n-  V_insn = 3, /* random insn */\n-  V_label = 4, /* label defn */\n-  V_comment = 5,\n-  V_pred = 6,  /* predicate */\n-  V_mask = 0x7,\n-  V_global = 0x08, /* globalize */\n-  V_weak = 0x10,   /* weakly globalize */\n-  V_no_eol = 0x20, /* no end of line */\n-  V_prefix_comment = 0x40 /* prefixed comment */\n-} Vis;\n-\n-typedef struct Stmt\n-{\n-  struct Stmt *next;\n-  Token *tokens;\n-  unsigned char vis;\n-  unsigned len : 12;\n-  unsigned sym : 12;\n-} Stmt;\n-\n struct id_map\n {\n   id_map *next;\n   char *ptx_name;\n };\n \n-static const char *read_file (FILE *);\n-static Token *tokenize (const char *);\n-\n-static void write_token (FILE *, const Token *);\n-static void write_tokens (FILE *, const Token *, unsigned, int);\n-\n-static Stmt *alloc_stmt (unsigned, Token *, Token *, const Token *);\n-#define alloc_comment(S,E) alloc_stmt (V_comment, S, E, 0)\n-#define append_stmt(V, S) ((S)->next = *(V), *(V) = (S))\n-static Stmt *rev_stmts (Stmt *);\n-static void write_stmt (FILE *, const Stmt *);\n-static void write_stmts (FILE *, const Stmt *);\n-\n-static Token *parse_insn (Token *);\n-static Token *parse_list_nosemi (Token *);\n-static Token *parse_init (Token *);\n-static Token *parse_file (Token *);\n-\n-static Stmt *decls;\n-static Stmt *vars;\n-static Stmt *fns;\n-\n static id_map *func_ids, **funcs_tail = &func_ids;\n static id_map *var_ids, **vars_tail = &var_ids;\n \n@@ -183,7 +111,7 @@ record_id (const char *p1, id_map ***where)\n    remember, there could be a NUL in the file itself.  */\n \n static const char *\n-read_file (FILE *stream)\n+read_file (FILE *stream, size_t *plen)\n {\n   size_t alloc = 16384;\n   size_t base = 0;\n@@ -213,557 +141,10 @@ read_file (FILE *stream)\n \t}\n     }\n   buffer[base] = 0;\n+  *plen = base;\n   return buffer;\n }\n \n-/* Read a token, advancing ptr.\n-   If we read a comment, append it to the comments block. */\n-\n-static Token *\n-tokenize (const char *ptr)\n-{\n-  unsigned alloc = 1000;\n-  unsigned num = 0;\n-  Token *toks = XNEWVEC (Token, alloc);\n-  int in_comment = 0;\n-  int not_comment = 0;\n-\n-  for (;; num++)\n-    {\n-      const char *base;\n-      unsigned kind;\n-      int ws = 0;\n-      int eol = 0;\n-\n-    again:\n-      base = ptr;\n-      if (in_comment)\n-\tgoto block_comment;\n-      switch (kind = *ptr++)\n-\t{\n-\tdefault:\n-\t  break;\n-\n-\tcase '\\n':\n-\t  eol = 1;\n-\t  /* Fall through */\n-\tcase ' ':\n-\tcase '\\t':\n-\tcase '\\r':\n-\tcase '\\v':\n-\t  /* White space */\n-\t  ws = not_comment;\n-\t  goto again;\n-\n-\tcase '/':\n-\t  {\n-\t    if (*ptr == '/')\n-\t      {\n-\t\t/* line comment.  Do not include trailing \\n */\n-\t\tbase += 2;\n-\t\tfor (; *ptr; ptr++)\n-\t\t  if (*ptr == '\\n')\n-\t\t    break;\n-\t\tkind = K_comment;\n-\t      }\n-\t    else if (*ptr == '*')\n-\t      {\n-\t\t/* block comment */\n-\t\tbase += 2;\n-\t\tptr++;\n-\n-\t      block_comment:\n-\t\teol = in_comment;\n-\t\tin_comment = 1;\n-\t\tfor (; *ptr; ptr++)\n-\t\t  {\n-\t\t    if (*ptr == '\\n')\n-\t\t      {\n-\t\t\tptr++;\n-\t\t\tbreak;\n-\t\t      }\n-\t\t    if (ptr[0] == '*' && ptr[1] == '/')\n-\t\t      {\n-\t\t\tin_comment = 2;\n-\t\t\tptr += 2;\n-\t\t\tbreak;\n-\t\t      }\n-\t\t  }\n-\t\tkind = K_comment;\n-\t      }\n-\t    else\n-\t      break;\n-\t  }\n-\t  break;\n-\n-\tcase '\"':\n-\t  /* quoted string */\n-\t  kind = K_string;\n-\t  while (*ptr)\n-\t    if (*ptr == '\"')\n-\t      {\n-\t\tptr++;\n-\t\tbreak;\n-\t      }\n-\t    else if (*ptr++ == '\\\\')\n-\t      ptr++;\n-\t  break;\n-\n-\tcase '.':\n-\t  if (*ptr < '0' || *ptr > '9')\n-\t    {\n-\t      kind = K_dotted;\n-\t      ws = not_comment;\n-\t      goto ident;\n-\t    }\n-\t  /* FALLTHROUGH */\n-\tcase '0'...'9':\n-\t  kind = K_number;\n-\t  goto ident;\n-\t  break;\n-\n-\tcase '$':  /* local labels.  */\n-\tcase '%':  /* register names, pseudoes etc */\n-\t  kind = K_ident;\n-\t  goto ident;\n-\n-\tcase 'a'...'z':\n-\tcase 'A'...'Z':\n-\tcase '_':\n-\t  kind = K_symbol; /* possible symbol name */\n-\tident:\n-\t  for (; *ptr; ptr++)\n-\t    {\n-\t      if (*ptr >= 'A' && *ptr <= 'Z')\n-\t\tcontinue;\n-\t      if (*ptr >= 'a' && *ptr <= 'z')\n-\t\tcontinue;\n-\t      if (*ptr >= '0' && *ptr <= '9')\n-\t\tcontinue;\n-\t      if (*ptr == '_' || *ptr == '$')\n-\t\tcontinue;\n-\t      if (*ptr == '.' && kind != K_dotted)\n-\t\t/* Idents starting with a dot, cannot have internal dots. */\n-\t\tcontinue;\n-\t      if ((*ptr == '+' || *ptr == '-')\n-\t\t  && kind == K_number\n-\t\t  && (ptr[-1] == 'e' || ptr[-1] == 'E'\n-\t\t      || ptr[-1] == 'p' || ptr[-1] == 'P'))\n-\t\t/* exponent */\n-\t\tcontinue;\n-\t      break;\n-\t    }\n-\t  if (*ptr == ':')\n-\t    {\n-\t      ptr++;\n-\t      kind = K_label;\n-\t    }\n-\t  break;\n-\t}\n-\n-      if (alloc == num)\n-\t{\n-\t  alloc *= 2;\n-\t  toks = XRESIZEVEC (Token, toks, alloc);\n-\t}\n-      Token *tok = toks + num;\n-\n-      tok->kind = kind;\n-      tok->space = ws;\n-      tok->end = 0;\n-      tok->ptr = base;\n-      tok->len = ptr - base - in_comment;\n-      in_comment &= 1;\n-      not_comment = kind != K_comment;\n-      if (eol && num)\n-\ttok[-1].end = 1;\n-      if (!kind)\n-\tbreak;\n-    }\n-\n-  return toks;\n-}\n-\n-/* Write an encoded token. */\n-\n-static void\n-write_token (FILE *out, Token const *tok)\n-{\n-  if (tok->space)\n-    fputc (' ', out);\n-\n-  switch (tok->kind)\n-    {\n-    case K_string:\n-      {\n-\tconst char *c = tok->ptr + 1;\n-\tsize_t len = tok->len - 2;\n-\n-\tfputs (\"\\\\\\\"\", out);\n-\twhile (len)\n-\t  {\n-\t    const char *bs = (const char *)memchr (c, '\\\\', len);\n-\t    size_t l = bs ? bs - c : len;\n-\n-\t    fprintf (out, \"%.*s\", (int)l, c);\n-\t    len -= l;\n-\t    c += l;\n-\t    if (bs)\n-\t      {\n-\t\tfputs (\"\\\\\\\\\", out);\n-\t\tlen--, c++;\n-\t      }\n-\t  }\n-\tfputs (\"\\\\\\\"\", out);\n-      }\n-      break;\n-\n-    default:\n-      /* All other tokens shouldn't have anything magic in them */\n-      fprintf (out, \"%.*s\", tok->len, tok->ptr);\n-      break;\n-    }\n-  if (tok->end)\n-    fputs (\"\\\\n\", out);\n-}\n-\n-static void\n-write_tokens (FILE *out, Token const *toks, unsigned len, int spc)\n-{\n-  fputs (\"\\t\\\"\", out);\n-  for (; len--; toks++)\n-    write_token (out, toks);\n-  if (spc)\n-    fputs (\" \", out);\n-  fputs (\"\\\"\", out);\n-}\n-\n-static Stmt *\n-alloc_stmt (unsigned vis, Token *tokens, Token *end, Token const *sym)\n-{\n-  static unsigned alloc = 0;\n-  static Stmt *heap = 0;\n-\n-  if (!alloc)\n-    {\n-      alloc = 1000;\n-      heap = XNEWVEC (Stmt, alloc);\n-    }\n-\n-  Stmt *stmt = heap++;\n-  alloc--;\n-\n-  tokens->space = 0;\n-  stmt->next = 0;\n-  stmt->vis = vis;\n-  stmt->tokens = tokens;\n-  stmt->len = end - tokens;\n-  stmt->sym = sym ? sym - tokens : ~0;\n-\n-  return stmt;\n-}\n-\n-static Stmt *\n-rev_stmts (Stmt *stmt)\n-{\n-  Stmt *prev = 0;\n-  Stmt *next;\n-\n-  while (stmt)\n-    {\n-      next = stmt->next;\n-      stmt->next = prev;\n-      prev = stmt;\n-      stmt = next;\n-    }\n-\n-  return prev;\n-}\n-\n-static void\n-write_stmt (FILE *out, const Stmt *stmt)\n-{\n-  if ((stmt->vis & V_mask) != V_comment)\n-    {\n-      write_tokens (out, stmt->tokens, stmt->len,\n-\t\t    (stmt->vis & V_mask) == V_pred);\n-      fputs (stmt->vis & V_no_eol ? \"\\t\" : \"\\n\", out);\n-    }\n-}\n-\n-static void\n-write_stmts (FILE *out, const Stmt *stmts)\n-{\n-  for (; stmts; stmts = stmts->next)\n-    write_stmt (out, stmts);\n-}\n-\n-static Token *\n-parse_insn (Token *tok)\n-{\n-  unsigned depth = 0;\n-\n-  do\n-    {\n-      Stmt *stmt;\n-      Token *sym = 0;\n-      unsigned s = V_insn;\n-      Token *start = tok;\n-\n-      switch (tok++->kind)\n-\t{\n-\tcase K_comment:\n-\t  while (tok->kind == K_comment)\n-\t    tok++;\n-\t  stmt = alloc_comment (start, tok);\n-\t  append_stmt (&fns, stmt);\n-\t  continue;\n-\n-\tcase '{':\n-\t  depth++;\n-\t  break;\n-\n-\tcase '}':\n-\t  depth--;\n-\t  break;\n-\n-\tcase K_label:\n-\t  if (tok[-1].ptr[0] != '$')\n-\t    sym = tok - 1;\n-\t  tok[-1].end = 1;\n-\t  s = V_label;\n-\t  break;\n-\n-\tcase '@':\n-\t  tok->space = 0;\n-\t  if (tok->kind == '!')\n-\t    tok++;\n-\t  if (tok->kind == K_symbol)\n-\t    sym = tok;\n-\t  tok++;\n-\t  s = V_pred;\n-\t  break;\n-\n-\tdefault:\n-\t  for (; tok->kind != ';'; tok++)\n-\t    {\n-\t      if (tok->kind == ',')\n-\t\ttok[1].space = 0;\n-\t      else if (tok->kind == K_symbol)\n-\t\tsym = tok;\n-\t    }\n-\t  tok++->end = 1;\n-\t  break;\n-\t}\n-\n-      stmt = alloc_stmt (s, start, tok, sym);\n-      append_stmt (&fns, stmt);\n-\n-      if (!tok[-1].end && tok[0].kind == K_comment)\n-\t{\n-\t  stmt->vis |= V_no_eol;\n-\t  stmt = alloc_comment (tok, tok + 1);\n-\t  append_stmt (&fns, stmt);\n-\t  tok++;\n-\t}\n-    }\n-  while (depth);\n-\n-  return tok;\n-}\n-\n-/* comma separated list of tokens */\n-\n-static Token *\n-parse_list_nosemi (Token *tok)\n-{\n-  Token *start = tok;\n-\n-  do\n-    if (!(++tok)->kind)\n-      break;\n-  while ((++tok)->kind == ',');\n-\n-  tok[-1].end = 1;\n-  Stmt *stmt = alloc_stmt (V_dot, start, tok, 0);\n-  append_stmt (&decls, stmt);\n-\n-  return tok;\n-}\n-\n-#define is_keyword(T,S) \\\n-  (sizeof (S) == (T)->len && !memcmp ((T)->ptr + 1, (S), (T)->len - 1))\n-\n-static Token *\n-parse_init (Token *tok)\n-{\n-  for (;;)\n-    {\n-      Token *start = tok;\n-      Token const *sym = 0;\n-      Stmt *stmt;\n-\n-      if (tok->kind == K_comment)\n-\t{\n-\t  while (tok->kind == K_comment)\n-\t    tok++;\n-\t  stmt = alloc_comment (start, tok);\n-\t  append_stmt (&vars, stmt);\n-\t  start = tok;\n-\t}\n-\n-      if (tok->kind == '{')\n-\ttok[1].space = 0;\n-      for (; tok->kind != ',' && tok->kind != ';'; tok++)\n-\tif (tok->kind == K_symbol)\n-\t  sym = tok;\n-      tok[1].space = 0;\n-      int end = tok++->kind == ';';\n-      stmt = alloc_stmt (V_insn, start, tok, sym);\n-      append_stmt (&vars, stmt);\n-      if (!tok[-1].end && tok->kind == K_comment)\n-\t{\n-\t  stmt->vis |= V_no_eol;\n-\t  stmt = alloc_comment (tok, tok + 1);\n-\t  append_stmt (&vars, stmt);\n-\t  tok++;\n-\t}\n-      if (end)\n-\tbreak;\n-    }\n-  return tok;\n-}\n-\n-static Token *\n-parse_file (Token *tok)\n-{\n-  Stmt *comment = 0;\n-\n-  if (tok->kind == K_comment)\n-    {\n-      Token *start = tok;\n-\n-      while (tok->kind == K_comment)\n-\t{\n-\t  if (strncmp (tok->ptr, \":VAR_MAP \", 9) == 0)\n-\t    record_id (tok->ptr + 9, &vars_tail);\n-\t  if (strncmp (tok->ptr, \":FUNC_MAP \", 10) == 0)\n-\t    record_id (tok->ptr + 10, &funcs_tail);\n-\t  tok++;\n-\t}\n-      comment = alloc_comment (start, tok);\n-      comment->vis |= V_prefix_comment;\n-    }\n-\n-  if (tok->kind == K_dotted)\n-    {\n-      if (is_keyword (tok, \"version\")\n-\t  || is_keyword (tok, \"target\")\n-\t  || is_keyword (tok, \"address_size\"))\n-\t{\n-\t  if (comment)\n-\t    append_stmt (&decls, comment);\n-\t  tok = parse_list_nosemi (tok);\n-\t}\n-      else\n-\t{\n-\t  unsigned vis = 0;\n-\t  const Token *def = 0;\n-\t  unsigned is_decl = 0;\n-\t  Token *start;\n-\n-\t  for (start = tok;\n-\t       tok->kind && tok->kind != '=' && tok->kind != K_comment\n-\t\t && tok->kind != '{' && tok->kind != ';'; tok++)\n-\t    {\n-\t      if (is_keyword (tok, \"global\")\n-\t\t  || is_keyword (tok, \"const\"))\n-\t\tvis |= V_var;\n-\t      else if (is_keyword (tok, \"func\")\n-\t\t       || is_keyword (tok, \"entry\"))\n-\t\tvis |= V_func;\n-\t      else if (is_keyword (tok, \"visible\"))\n-\t\tvis |= V_global;\n-\t      else if (is_keyword (tok, \"extern\"))\n-\t\tis_decl = 1;\n-\t      else if (is_keyword (tok, \"weak\"))\n-\t\tvis |= V_weak;\n-\t      if (tok->kind == '(')\n-\t\t{\n-\t\t  tok[1].space = 0;\n-\t\t  tok[0].space = 1;\n-\t\t}\n-\t      else if (tok->kind == ')' && tok[1].kind != ';')\n-\t\ttok[1].space = 1;\n-\n-\t      if (tok->kind == K_symbol)\n-\t\tdef = tok;\n-\t    }\n-\n-\t  if (!tok->kind)\n-\t    {\n-\t      /* end of file */\n-\t      if (comment)\n-\t\tappend_stmt (&fns, comment);\n-\t    }\n-\t  else if (tok->kind == '{'\n-\t\t   || tok->kind == K_comment)\n-\t    {\n-\t      /* function defn */\n-\t      Stmt *stmt = alloc_stmt (vis, start, tok, def);\n-\t      if (comment)\n-\t\t{\n-\t\t  append_stmt (&fns, comment);\n-\t\t  stmt->vis |= V_prefix_comment;\n-\t\t}\n-\t      append_stmt (&fns, stmt);\n-\t      tok = parse_insn (tok);\n-\t    }\n-\t  else\n-\t    {\n-\t      int assign = tok->kind == '=';\n-\n-\t      tok++->end = 1;\n-\t      if ((vis & V_mask) == V_var && !is_decl)\n-\t\t{\n-\t\t  /* variable */\n-\t\t  Stmt *stmt = alloc_stmt (vis, start, tok, def);\n-\t\t  if (comment)\n-\t\t    {\n-\t\t      append_stmt (&vars, comment);\n-\t\t      stmt->vis |= V_prefix_comment;\n-\t\t    }\n-\t\t  append_stmt (&vars, stmt);\n-\t\t  if (assign)\n-\t\t    tok = parse_init (tok);\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  /* declaration */\n-\t\t  Stmt *stmt = alloc_stmt (vis, start, tok, 0);\n-\t\t  if (comment)\n-\t\t    {\n-\t\t      append_stmt (&decls, comment);\n-\t\t      stmt->vis |= V_prefix_comment;\n-\t\t    }\n-\t\t  append_stmt (&decls, stmt);\n-\t\t}\n-\t    }\n-\t}\n-    }\n-  else\n-    {\n-      /* Something strange.  Ignore it.  */\n-      if (comment)\n-\tappend_stmt (&fns, comment);\n-\n-      do\n-\ttok++;\n-      while (tok->kind && !tok->end);\n-    }\n-  return tok;\n-}\n-\n /* Parse STR, saving found tokens into PVALUES and return their number.\n    Tokens are assumed to be delimited by ':'.  */\n static unsigned\n@@ -839,22 +220,55 @@ access_check (const char *name, int mode)\n static void\n process (FILE *in, FILE *out)\n {\n-  const char *input = read_file (in);\n-  Token *tok = tokenize (input);\n+  size_t len = 0;\n+  const char *input = read_file (in, &len);\n   const char *comma;\n   id_map const *id;\n   unsigned obj_count = 0;\n   unsigned ix;\n \n-  do\n-    tok = parse_file (tok);\n-  while (tok->kind);\n+  /* Dump out char arrays for each PTX object file.  These are\n+     terminated by a NUL.  */\n+  for (size_t i = 0; i != len;)\n+    {\n+      char c;\n \n-  fprintf (out, \"static const char ptx_code_%u[] = \\n\", obj_count++);\n-  write_stmts (out, rev_stmts (decls));\n-  write_stmts (out, rev_stmts (vars));\n-  write_stmts (out, rev_stmts (fns));\n-  fprintf (out, \";\\n\\n\");\n+      fprintf (out, \"static const char ptx_code_%u[] =\\n\\t\\\"\", obj_count++);\n+      while ((c = input[i++]))\n+\t{\n+\t  switch (c)\n+\t    {\n+\t    case '\\r':\n+\t      continue;\n+\t    case '\\n':\n+\t      fprintf (out, \"\\\\n\\\"\\n\\t\\\"\");\n+\t      /* Look for mappings on subsequent lines.  */\n+\t      while (strncmp (input + i, \"//:\", 3) == 0)\n+\t\t{\n+\t\t  i += 3;\n+\n+\t\t  if (strncmp (input + i, \"VAR_MAP \", 8) == 0)\n+\t\t    record_id (input + i + 8, &vars_tail);\n+\t\t  else if (strncmp (input + i, \"FUNC_MAP \", 9) == 0)\n+\t\t    record_id (input + i + 9, &funcs_tail);\n+\t\t  else\n+\t\t    abort ();\n+\t\t  /* Skip to next line. */\n+\t\t  while (input[i++] != '\\n')\n+\t\t    continue;\n+\t\t}\n+\t      continue;\n+\t    case '\"':\n+\t    case '\\\\':\n+\t      putc ('\\\\', out);\n+\t      break;\n+\t    default:\n+\t      break;\n+\t    }\n+\t  putc (c, out);\n+\t}\n+      fprintf (out, \"\\\";\\n\\n\");\n+    }\n \n   /* Dump out array of pointers to ptx object strings.  */\n   fprintf (out, \"static const struct ptx_obj {\\n\"\n@@ -1068,7 +482,6 @@ main (int argc, char **argv)\n     default:\n       gcc_unreachable ();\n     }\n-  obstack_ptr_grow (&argv_obstack, \"-S\");\n \n   for (int ix = 1; ix != argc; ix++)\n     {"}, {"sha": "191f21fd4e025a049b8d96e4ef42bdfd22c94ab6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -1,3 +1,13 @@\n+2015-10-02  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* oacc-ptx.h: Remove file, moving its content into...\n+\t* config/nvptx/fortran.c: ... here...\n+\t* config/nvptx/oacc-init.c: ..., here...\n+\t* config/nvptx/oacc-parallel.c: ..., and here.\n+\t* config/nvptx/openacc.f90: New file.\n+\t* plugin/plugin-nvptx.c: Don't include \"oacc-ptx.h\".\n+\t(link_ptx): Don't link in predefined bits of PTX code.\n+\n 2015-09-30  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Bernd Schmidt <bernds@codesourcery.com>\n "}, {"sha": "58ca7905a76452a4a268ec1f0401a7d7b4bd6d4a", "filename": "libgomp/config/nvptx/fortran.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fconfig%2Fnvptx%2Ffortran.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fconfig%2Fnvptx%2Ffortran.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fnvptx%2Ffortran.c?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -0,0 +1,40 @@\n+/* OpenACC Runtime Fortran wrapper routines\n+\n+   Copyright (C) 2014-2015 Free Software Foundation, Inc.\n+\n+   Contributed by Mentor Embedded.\n+\n+   This file is part of the GNU Offloading and Multi Processing Library\n+   (libgomp).\n+\n+   Libgomp is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* Temporary hack; this will be provided by libgfortran.  */\n+\n+extern void _gfortran_abort (void);\n+\n+__asm__ (\"// BEGIN GLOBAL FUNCTION DECL: _gfortran_abort\\n\"\n+\t \".visible .func _gfortran_abort;\\n\"\n+\t \"// BEGIN GLOBAL FUNCTION DEF: _gfortran_abort\\n\"\n+\t \".visible .func _gfortran_abort\\n\"\n+\t \"{\\n\"\n+\t \"trap;\\n\"\n+\t \"ret;\\n\"\n+\t \"}\\n\");"}, {"sha": "c57a3f3104d01114ac7c0c2af24989610dffb9f7", "filename": "libgomp/config/nvptx/oacc-init.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fconfig%2Fnvptx%2Foacc-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fconfig%2Fnvptx%2Foacc-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fnvptx%2Foacc-init.c?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -0,0 +1,42 @@\n+/* OpenACC Runtime initialization routines\n+\n+   Copyright (C) 2014-2015 Free Software Foundation, Inc.\n+\n+   Contributed by Mentor Embedded.\n+\n+   This file is part of the GNU Offloading and Multi Processing Library\n+   (libgomp).\n+\n+   Libgomp is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"openacc.h\"\n+\n+/* For -O and higher, the compiler always attempts to expand acc_on_device, but\n+   if the user disables the builtin, or calls it via a pointer, we'll need this\n+   version.\n+\n+   Compile this with optimization, so that the compiler expands\n+   this, rather than generating infinitely recursive code.  */\n+\n+int __attribute__ ((__optimize__ (\"O2\")))\n+acc_on_device (acc_device_t dev)\n+{\n+  return __builtin_acc_on_device (dev);\n+}"}, {"sha": "b9712562e61b989b15c5e2b1886456dac3a6f0a2", "filename": "libgomp/config/nvptx/oacc-parallel.c", "status": "modified", "additions": 358, "deletions": 0, "changes": 358, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fconfig%2Fnvptx%2Foacc-parallel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fconfig%2Fnvptx%2Foacc-parallel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fnvptx%2Foacc-parallel.c?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -0,0 +1,358 @@\n+/* OpenACC constructs\n+\n+   Copyright (C) 2014-2015 Free Software Foundation, Inc.\n+\n+   Contributed by Mentor Embedded.\n+\n+   This file is part of the GNU Offloading and Multi Processing Library\n+   (libgomp).\n+\n+   Libgomp is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"libgomp_g.h\"\n+\n+__asm__ (\".visible .func (.param .u32 %out_retval) GOACC_tid (.param .u32 %in_ar1);\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_ntid (.param .u32 %in_ar1);\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_ctaid (.param .u32 %in_ar1);\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_nctaid (.param .u32 %in_ar1);\\n\"\n+\t \"// BEGIN GLOBAL FUNCTION DECL: GOACC_get_num_threads\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_get_num_threads;\\n\"\n+\t \"// BEGIN GLOBAL FUNCTION DECL: GOACC_get_thread_num\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_get_thread_num;\\n\"\n+\t \"// BEGIN GLOBAL FUNCTION DECL: abort\\n\"\n+\t \".extern .func abort;\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_tid (.param .u32 %in_ar1)\\n\"\n+\t \"{\\n\"\n+\t \".reg .u32 %ar1;\\n\"\n+\t \".reg .u32 %retval;\\n\"\n+\t \".reg .u64 %hr10;\\n\"\n+\t \".reg .u32 %r22;\\n\"\n+\t \".reg .u32 %r23;\\n\"\n+\t \".reg .u32 %r24;\\n\"\n+\t \".reg .u32 %r25;\\n\"\n+\t \".reg .u32 %r26;\\n\"\n+\t \".reg .u32 %r27;\\n\"\n+\t \".reg .u32 %r28;\\n\"\n+\t \".reg .u32 %r29;\\n\"\n+\t \".reg .pred %r30;\\n\"\n+\t \".reg .u32 %r31;\\n\"\n+\t \".reg .pred %r32;\\n\"\n+\t \".reg .u32 %r33;\\n\"\n+\t \".reg .pred %r34;\\n\"\n+\t \".local .align 8 .b8 %frame[4];\\n\"\n+\t \"ld.param.u32 %ar1,[%in_ar1];\\n\"\n+\t \"mov.u32 %r27,%ar1;\\n\"\n+\t \"st.local.u32 [%frame],%r27;\\n\"\n+\t \"ld.local.u32 %r28,[%frame];\\n\"\n+\t \"mov.u32 %r29,1;\\n\"\n+\t \"setp.eq.u32 %r30,%r28,%r29;\\n\"\n+\t \"@%r30 bra $L4;\\n\"\n+\t \"mov.u32 %r31,2;\\n\"\n+\t \"setp.eq.u32 %r32,%r28,%r31;\\n\"\n+\t \"@%r32 bra $L5;\\n\"\n+\t \"mov.u32 %r33,0;\\n\"\n+\t \"setp.eq.u32 %r34,%r28,%r33;\\n\"\n+\t \"@!%r34 bra $L8;\\n\"\n+\t \"mov.u32 %r23,%tid.x;\\n\"\n+\t \"mov.u32 %r22,%r23;\\n\"\n+\t \"bra $L7;\\n\"\n+\t \"$L4:\\n\"\n+\t \"mov.u32 %r24,%tid.y;\\n\"\n+\t \"mov.u32 %r22,%r24;\\n\"\n+\t \"bra $L7;\\n\"\n+\t \"$L5:\\n\"\n+\t \"mov.u32 %r25,%tid.z;\\n\"\n+\t \"mov.u32 %r22,%r25;\\n\"\n+\t \"bra $L7;\\n\"\n+\t \"$L8:\\n\"\n+\t \"{\\n\"\n+\t \"{\\n\"\n+\t \"call abort;\\n\"\n+\t \"}\\n\"\n+\t \"}\\n\"\n+\t \"$L7:\\n\"\n+\t \"mov.u32 %r26,%r22;\\n\"\n+\t \"mov.u32 %retval,%r26;\\n\"\n+\t \"st.param.u32 [%out_retval],%retval;\\n\"\n+\t \"ret;\\n\"\n+\t \"}\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_ntid (.param .u32 %in_ar1)\\n\"\n+\t \"{\\n\"\n+\t \".reg .u32 %ar1;\\n\"\n+\t \".reg .u32 %retval;\\n\"\n+\t \".reg .u64 %hr10;\\n\"\n+\t \".reg .u32 %r22;\\n\"\n+\t \".reg .u32 %r23;\\n\"\n+\t \".reg .u32 %r24;\\n\"\n+\t \".reg .u32 %r25;\\n\"\n+\t \".reg .u32 %r26;\\n\"\n+\t \".reg .u32 %r27;\\n\"\n+\t \".reg .u32 %r28;\\n\"\n+\t \".reg .u32 %r29;\\n\"\n+\t \".reg .pred %r30;\\n\"\n+\t \".reg .u32 %r31;\\n\"\n+\t \".reg .pred %r32;\\n\"\n+\t \".reg .u32 %r33;\\n\"\n+\t \".reg .pred %r34;\\n\"\n+\t \".local .align 8 .b8 %frame[4];\\n\"\n+\t \"ld.param.u32 %ar1,[%in_ar1];\\n\"\n+\t \"mov.u32 %r27,%ar1;\\n\"\n+\t \"st.local.u32 [%frame],%r27;\\n\"\n+\t \"ld.local.u32 %r28,[%frame];\\n\"\n+\t \"mov.u32 %r29,1;\\n\"\n+\t \"setp.eq.u32 %r30,%r28,%r29;\\n\"\n+\t \"@%r30 bra $L11;\\n\"\n+\t \"mov.u32 %r31,2;\\n\"\n+\t \"setp.eq.u32 %r32,%r28,%r31;\\n\"\n+\t \"@%r32 bra $L12;\\n\"\n+\t \"mov.u32 %r33,0;\\n\"\n+\t \"setp.eq.u32 %r34,%r28,%r33;\\n\"\n+\t \"@!%r34 bra $L15;\\n\"\n+\t \"mov.u32 %r23,%ntid.x;\\n\"\n+\t \"mov.u32 %r22,%r23;\\n\"\n+\t \"bra $L14;\\n\"\n+\t \"$L11:\\n\"\n+\t \"mov.u32 %r24,%ntid.y;\\n\"\n+\t \"mov.u32 %r22,%r24;\\n\"\n+\t \"bra $L14;\\n\"\n+\t \"$L12:\\n\"\n+\t \"mov.u32 %r25,%ntid.z;\\n\"\n+\t \"mov.u32 %r22,%r25;\\n\"\n+\t \"bra $L14;\\n\"\n+\t \"$L15:\\n\"\n+\t \"{\\n\"\n+\t \"{\\n\"\n+\t \"call abort;\\n\"\n+\t \"}\\n\"\n+\t \"}\\n\"\n+\t \"$L14:\\n\"\n+\t \"mov.u32 %r26,%r22;\\n\"\n+\t \"mov.u32 %retval,%r26;\\n\"\n+\t \"st.param.u32 [%out_retval],%retval;\\n\"\n+\t \"ret;\\n\"\n+\t \"}\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_ctaid (.param .u32 %in_ar1)\\n\"\n+\t \"{\\n\"\n+\t \".reg .u32 %ar1;\\n\"\n+\t \".reg .u32 %retval;\\n\"\n+\t \".reg .u64 %hr10;\\n\"\n+\t \".reg .u32 %r22;\\n\"\n+\t \".reg .u32 %r23;\\n\"\n+\t \".reg .u32 %r24;\\n\"\n+\t \".reg .u32 %r25;\\n\"\n+\t \".reg .u32 %r26;\\n\"\n+\t \".reg .u32 %r27;\\n\"\n+\t \".reg .u32 %r28;\\n\"\n+\t \".reg .u32 %r29;\\n\"\n+\t \".reg .pred %r30;\\n\"\n+\t \".reg .u32 %r31;\\n\"\n+\t \".reg .pred %r32;\\n\"\n+\t \".reg .u32 %r33;\\n\"\n+\t \".reg .pred %r34;\\n\"\n+\t \".local .align 8 .b8 %frame[4];\\n\"\n+\t \"ld.param.u32 %ar1,[%in_ar1];\\n\"\n+\t \"mov.u32 %r27,%ar1;\\n\"\n+\t \"st.local.u32 [%frame],%r27;\\n\"\n+\t \"ld.local.u32 %r28,[%frame];\\n\"\n+\t \"mov.u32 %r29,1;\\n\"\n+\t \"setp.eq.u32 %r30,%r28,%r29;\\n\"\n+\t \"@%r30 bra $L18;\\n\"\n+\t \"mov.u32 %r31,2;\\n\"\n+\t \"setp.eq.u32 %r32,%r28,%r31;\\n\"\n+\t \"@%r32 bra $L19;\\n\"\n+\t \"mov.u32 %r33,0;\\n\"\n+\t \"setp.eq.u32 %r34,%r28,%r33;\\n\"\n+\t \"@!%r34 bra $L22;\\n\"\n+\t \"mov.u32 %r23,%ctaid.x;\\n\"\n+\t \"mov.u32 %r22,%r23;\\n\"\n+\t \"bra $L21;\\n\"\n+\t \"$L18:\\n\"\n+\t \"mov.u32 %r24,%ctaid.y;\\n\"\n+\t \"mov.u32 %r22,%r24;\\n\"\n+\t \"bra $L21;\\n\"\n+\t \"$L19:\\n\"\n+\t \"mov.u32 %r25,%ctaid.z;\\n\"\n+\t \"mov.u32 %r22,%r25;\\n\"\n+\t \"bra $L21;\\n\"\n+\t \"$L22:\\n\"\n+\t \"{\\n\"\n+\t \"{\\n\"\n+\t \"call abort;\\n\"\n+\t \"}\\n\"\n+\t \"}\\n\"\n+\t \"$L21:\\n\"\n+\t \"mov.u32 %r26,%r22;\\n\"\n+\t \"mov.u32 %retval,%r26;\\n\"\n+\t \"st.param.u32 [%out_retval],%retval;\\n\"\n+\t \"ret;\\n\"\n+\t \"}\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_nctaid (.param .u32 %in_ar1)\\n\"\n+\t \"{\\n\"\n+\t \".reg .u32 %ar1;\\n\"\n+\t \".reg .u32 %retval;\\n\"\n+\t \".reg .u64 %hr10;\\n\"\n+\t \".reg .u32 %r22;\\n\"\n+\t \".reg .u32 %r23;\\n\"\n+\t \".reg .u32 %r24;\\n\"\n+\t \".reg .u32 %r25;\\n\"\n+\t \".reg .u32 %r26;\\n\"\n+\t \".reg .u32 %r27;\\n\"\n+\t \".reg .u32 %r28;\\n\"\n+\t \".reg .u32 %r29;\\n\"\n+\t \".reg .pred %r30;\\n\"\n+\t \".reg .u32 %r31;\\n\"\n+\t \".reg .pred %r32;\\n\"\n+\t \".reg .u32 %r33;\\n\"\n+\t \".reg .pred %r34;\\n\"\n+\t \".local .align 8 .b8 %frame[4];\\n\"\n+\t \"ld.param.u32 %ar1,[%in_ar1];\\n\"\n+\t \"mov.u32 %r27,%ar1;\\n\"\n+\t \"st.local.u32 [%frame],%r27;\\n\"\n+\t \"ld.local.u32 %r28,[%frame];\\n\"\n+\t \"mov.u32 %r29,1;\\n\"\n+\t \"setp.eq.u32 %r30,%r28,%r29;\\n\"\n+\t \"@%r30 bra $L25;\\n\"\n+\t \"mov.u32 %r31,2;\\n\"\n+\t \"setp.eq.u32 %r32,%r28,%r31;\\n\"\n+\t \"@%r32 bra $L26;\\n\"\n+\t \"mov.u32 %r33,0;\\n\"\n+\t \"setp.eq.u32 %r34,%r28,%r33;\\n\"\n+\t \"@!%r34 bra $L29;\\n\"\n+\t \"mov.u32 %r23,%nctaid.x;\\n\"\n+\t \"mov.u32 %r22,%r23;\\n\"\n+\t \"bra $L28;\\n\"\n+\t \"$L25:\\n\"\n+\t \"mov.u32 %r24,%nctaid.y;\\n\"\n+\t \"mov.u32 %r22,%r24;\\n\"\n+\t \"bra $L28;\\n\"\n+\t \"$L26:\\n\"\n+\t \"mov.u32 %r25,%nctaid.z;\\n\"\n+\t \"mov.u32 %r22,%r25;\\n\"\n+\t \"bra $L28;\\n\"\n+\t \"$L29:\\n\"\n+\t \"{\\n\"\n+\t \"{\\n\"\n+\t \"call abort;\\n\"\n+\t \"}\\n\"\n+\t \"}\\n\"\n+\t \"$L28:\\n\"\n+\t \"mov.u32 %r26,%r22;\\n\"\n+\t \"mov.u32 %retval,%r26;\\n\"\n+\t \"st.param.u32 [%out_retval],%retval;\\n\"\n+\t \"ret;\\n\"\n+\t \"}\\n\"\n+\t \"// BEGIN GLOBAL FUNCTION DEF: GOACC_get_num_threads\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_get_num_threads\\n\"\n+\t \"{\\n\"\n+\t \".reg .u32 %retval;\\n\"\n+\t \".reg .u64 %hr10;\\n\"\n+\t \".reg .u32 %r22;\\n\"\n+\t \".reg .u32 %r23;\\n\"\n+\t \".reg .u32 %r24;\\n\"\n+\t \".reg .u32 %r25;\\n\"\n+\t \".reg .u32 %r26;\\n\"\n+\t \".reg .u32 %r27;\\n\"\n+\t \".reg .u32 %r28;\\n\"\n+\t \".reg .u32 %r29;\\n\"\n+\t \"mov.u32 %r26,0;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %retval_in;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %out_arg0;\\n\"\n+\t \"st.param.u32 [%out_arg0],%r26;\\n\"\n+\t \"call (%retval_in),GOACC_ntid,(%out_arg0);\\n\"\n+\t \"}\\n\"\n+\t \"ld.param.u32 %r27,[%retval_in];\\n\"\n+\t \"}\\n\"\n+\t \"mov.u32 %r22,%r27;\\n\"\n+\t \"mov.u32 %r28,0;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %retval_in;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %out_arg0;\\n\"\n+\t \"st.param.u32 [%out_arg0],%r28;\\n\"\n+\t \"call (%retval_in),GOACC_nctaid,(%out_arg0);\\n\"\n+\t \"}\\n\"\n+\t \"ld.param.u32 %r29,[%retval_in];\\n\"\n+\t \"}\\n\"\n+\t \"mov.u32 %r23,%r29;\\n\"\n+\t \"mul.lo.u32 %r24,%r22,%r23;\\n\"\n+\t \"mov.u32 %r25,%r24;\\n\"\n+\t \"mov.u32 %retval,%r25;\\n\"\n+\t \"st.param.u32 [%out_retval],%retval;\\n\"\n+\t \"ret;\\n\"\n+\t \"}\\n\"\n+\t \"// BEGIN GLOBAL FUNCTION DEF: GOACC_get_thread_num\\n\"\n+\t \".visible .func (.param .u32 %out_retval) GOACC_get_thread_num\\n\"\n+\t \"{\\n\"\n+\t \".reg .u32 %retval;\\n\"\n+\t \".reg .u64 %hr10;\\n\"\n+\t \".reg .u32 %r22;\\n\"\n+\t \".reg .u32 %r23;\\n\"\n+\t \".reg .u32 %r24;\\n\"\n+\t \".reg .u32 %r25;\\n\"\n+\t \".reg .u32 %r26;\\n\"\n+\t \".reg .u32 %r27;\\n\"\n+\t \".reg .u32 %r28;\\n\"\n+\t \".reg .u32 %r29;\\n\"\n+\t \".reg .u32 %r30;\\n\"\n+\t \".reg .u32 %r31;\\n\"\n+\t \".reg .u32 %r32;\\n\"\n+\t \".reg .u32 %r33;\\n\"\n+\t \"mov.u32 %r28,0;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %retval_in;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %out_arg0;\\n\"\n+\t \"st.param.u32 [%out_arg0],%r28;\\n\"\n+\t \"call (%retval_in),GOACC_ntid,(%out_arg0);\\n\"\n+\t \"}\\n\"\n+\t \"ld.param.u32 %r29,[%retval_in];\\n\"\n+\t \"}\\n\"\n+\t \"mov.u32 %r22,%r29;\\n\"\n+\t \"mov.u32 %r30,0;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %retval_in;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %out_arg0;\\n\"\n+\t \"st.param.u32 [%out_arg0],%r30;\\n\"\n+\t \"call (%retval_in),GOACC_ctaid,(%out_arg0);\\n\"\n+\t \"}\\n\"\n+\t \"ld.param.u32 %r31,[%retval_in];\\n\"\n+\t \"}\\n\"\n+\t \"mov.u32 %r23,%r31;\\n\"\n+\t \"mul.lo.u32 %r24,%r22,%r23;\\n\"\n+\t \"mov.u32 %r32,0;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %retval_in;\\n\"\n+\t \"{\\n\"\n+\t \".param .u32 %out_arg0;\\n\"\n+\t \"st.param.u32 [%out_arg0],%r32;\\n\"\n+\t \"call (%retval_in),GOACC_tid,(%out_arg0);\\n\"\n+\t \"}\\n\"\n+\t \"ld.param.u32 %r33,[%retval_in];\\n\"\n+\t \"}\\n\"\n+\t \"mov.u32 %r25,%r33;\\n\"\n+\t \"add.u32 %r26,%r24,%r25;\\n\"\n+\t \"mov.u32 %r27,%r26;\\n\"\n+\t \"mov.u32 %retval,%r27;\\n\"\n+\t \"st.param.u32 [%out_retval],%retval;\\n\"\n+\t \"ret;\\n\"\n+\t \"}\\n\");"}, {"sha": "d8b5c0610b2fdd291be71ba2fb9c311bb08d8214", "filename": "libgomp/config/nvptx/openacc.f90", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fconfig%2Fnvptx%2Fopenacc.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fconfig%2Fnvptx%2Fopenacc.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fnvptx%2Fopenacc.f90?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -0,0 +1,102 @@\n+!  OpenACC Runtime Library Definitions.\n+\n+!  Copyright (C) 2014-2015 Free Software Foundation, Inc.\n+\n+!  Contributed by Tobias Burnus <burnus@net-b.de>\n+!              and Mentor Embedded.\n+\n+!  This file is part of the GNU Offloading and Multi Processing Library\n+!  (libgomp).\n+\n+!  Libgomp is free software; you can redistribute it and/or modify it\n+!  under the terms of the GNU General Public License as published by\n+!  the Free Software Foundation; either version 3, or (at your option)\n+!  any later version.\n+\n+!  Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n+!  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+!  FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+!  more details.\n+\n+!  Under Section 7 of GPL version 3, you are granted additional\n+!  permissions described in the GCC Runtime Library Exception, version\n+!  3.1, as published by the Free Software Foundation.\n+\n+!  You should have received a copy of the GNU General Public License and\n+!  a copy of the GCC Runtime Library Exception along with this program;\n+!  see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+!  <http://www.gnu.org/licenses/>.\n+\n+! Wrapper functions will be built from openacc.f90.  We use a separate file\n+! here, because for using ../../openacc.f90, implementations are required for\n+! all the functions that it wraps, which we currently don't provide, so linking\n+! would fail.\n+\n+module openacc_kinds\n+  use iso_fortran_env, only: int32\n+  implicit none\n+\n+  private :: int32\n+  public :: acc_device_kind\n+\n+  integer, parameter :: acc_device_kind = int32\n+\n+  public :: acc_device_none, acc_device_default, acc_device_host\n+  public :: acc_device_not_host, acc_device_nvidia\n+\n+  ! Keep in sync with include/gomp-constants.h.\n+  integer (acc_device_kind), parameter :: acc_device_none = 0\n+  integer (acc_device_kind), parameter :: acc_device_default = 1\n+  integer (acc_device_kind), parameter :: acc_device_host = 2\n+  ! integer (acc_device_kind), parameter :: acc_device_host_nonshm = 3 removed.\n+  integer (acc_device_kind), parameter :: acc_device_not_host = 4\n+  integer (acc_device_kind), parameter :: acc_device_nvidia = 5\n+\n+end module\n+\n+module openacc_internal\n+  use openacc_kinds\n+  implicit none\n+\n+  interface\n+    function acc_on_device_h (d)\n+      import\n+      integer (acc_device_kind) d\n+      logical acc_on_device_h\n+    end function\n+  end interface\n+\n+  interface\n+    function acc_on_device_l (d) &\n+        bind (C, name = \"acc_on_device\")\n+      use iso_c_binding, only: c_int\n+      integer (c_int) :: acc_on_device_l\n+      integer (c_int), value :: d\n+    end function\n+  end interface\n+end module\n+\n+module openacc\n+  use openacc_kinds\n+  use openacc_internal\n+  implicit none\n+\n+  public :: acc_on_device\n+\n+  interface acc_on_device\n+    procedure :: acc_on_device_h\n+  end interface\n+\n+end module openacc\n+\n+function acc_on_device_h (d)\n+  use openacc_internal, only: acc_on_device_l\n+  use openacc_kinds\n+  integer (acc_device_kind) d\n+  logical acc_on_device_h\n+  if (acc_on_device_l (d) .eq. 1) then\n+    acc_on_device_h = .TRUE.\n+  else\n+    acc_on_device_h = .FALSE.\n+  end if\n+end function"}, {"sha": "a0e62a40cc4091ac8263ae57ab503c711e661123", "filename": "libgomp/oacc-init.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Foacc-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Foacc-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-init.c?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -620,7 +620,11 @@ acc_set_device_num (int ord, acc_device_t d)\n \n ialias (acc_set_device_num)\n \n-/* Compile on_device with optimization, so that the compiler expands\n+/* For -O and higher, the compiler always attempts to expand acc_on_device, but\n+   if the user disables the builtin, or calls it via a pointer, we'll need this\n+   version.\n+\n+   Compile this with optimization, so that the compiler expands\n    this, rather than generating infinitely recursive code.  */\n \n int __attribute__ ((__optimize__ (\"O2\")))"}, {"sha": "2419a460c72f3da619bea184378712694cb47c0b", "filename": "libgomp/oacc-ptx.h", "status": "removed", "additions": 0, "deletions": 426, "changes": 426, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libgomp%2Foacc-ptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libgomp%2Foacc-ptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-ptx.h?ref=7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "patch": "@@ -1,426 +0,0 @@\n-/* Copyright (C) 2014-2015 Free Software Foundation, Inc.\n-\n-   Contributed by Mentor Embedded.\n-\n-   This file is part of the GNU Offloading and Multi Processing Library\n-   (libgomp).\n-\n-   Libgomp is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3, or (at your option)\n-   any later version.\n-\n-   Libgomp is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n-   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n-   more details.\n-\n-   Under Section 7 of GPL version 3, you are granted additional\n-   permissions described in the GCC Runtime Library Exception, version\n-   3.1, as published by the Free Software Foundation.\n-\n-   You should have received a copy of the GNU General Public License and\n-   a copy of the GCC Runtime Library Exception along with this program;\n-   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-#define ABORT_PTX\t\t\t\t\\\n-  \".version 3.1\\n\"\t\t\t\t\\\n-  \".target sm_30\\n\"\t\t\t\t\\\n-  \".address_size 64\\n\"\t\t\t\t\\\n-  \".visible .func abort;\\n\"\t\t\t\\\n-  \".visible .func abort\\n\"\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\\\n-  \"trap;\\n\"\t\t\t\t\t\\\n-  \"ret;\\n\"\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\\\n-  \".visible .func _gfortran_abort;\\n\"\t\t\\\n-  \".visible .func _gfortran_abort\\n\"\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\\\n-  \"trap;\\n\"\t\t\t\t\t\\\n-  \"ret;\\n\"\t\t\t\t\t\\\n-  \"}\\n\" \\\n-\n-/* Generated with:\n-\n-   $ echo 'int acc_on_device(int d) { return __builtin_acc_on_device(d); } int acc_on_device_h_(int *d) { return acc_on_device(*d); }' | accel-gcc/xgcc -Baccel-gcc -x c - -o - -S -m64 -O3 -fno-builtin-acc_on_device -fno-inline\n-*/\n-#define ACC_ON_DEVICE_PTX\t\t\t\t\t\t\\\n-  \"        .version        3.1\\n\"\t\t\t\t\t\\\n-  \"        .target sm_30\\n\"\t\t\t\t\t\t\\\n-  \"        .address_size 64\\n\"\t\t\t\t\t\t\\\n-  \".visible .func (.param.u32 %out_retval)acc_on_device(.param.u32 %in_ar1);\\n\" \\\n-  \".visible .func (.param.u32 %out_retval)acc_on_device(.param.u32 %in_ar1)\\n\" \\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"        .reg.u32 %ar1;\\n\"\t\t\t\t\t\t\\\n-  \".reg.u32 %retval;\\n\"\t\t\t\t\t\t\t\\\n-  \"        .reg.u64 %hr10;\\n\"\t\t\t\t\t\t\\\n-  \"        .reg.u32 %r24;\\n\"\t\t\t\t\t\t\\\n-  \"        .reg.u32 %r25;\\n\"\t\t\t\t\t\t\\\n-  \"        .reg.pred %r27;\\n\"\t\t\t\t\t\t\\\n-  \"        .reg.u32 %r30;\\n\"\t\t\t\t\t\t\\\n-  \"        ld.param.u32 %ar1, [%in_ar1];\\n\"\t\t\t\t\\\n-  \"                mov.u32 %r24, %ar1;\\n\"\t\t\t\t\\\n-  \"                setp.ne.u32 %r27,%r24,4;\\n\"\t\t\t\t\\\n-  \"                set.u32.eq.u32 %r30,%r24,5;\\n\"\t\t\t\\\n-  \"                neg.s32 %r25, %r30;\\n\"\t\t\t\t\\\n-  \"        @%r27   bra     $L3;\\n\"\t\t\t\t\t\\\n-  \"                mov.u32 %r25, 1;\\n\"\t\t\t\t\t\\\n-  \"$L3:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"                mov.u32 %retval, %r25;\\n\"\t\t\t\t\\\n-  \"        st.param.u32    [%out_retval], %retval;\\n\"\t\t\t\\\n-  \"        ret;\\n\"\t\t\t\t\t\t\t\\\n-  \"        }\\n\"\t\t\t\t\t\t\t\t\\\n-  \".visible .func (.param.u32 %out_retval)acc_on_device_h_(.param.u64 %in_ar1);\\n\" \\\n-  \".visible .func (.param.u32 %out_retval)acc_on_device_h_(.param.u64 %in_ar1)\\n\" \\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"        .reg.u64 %ar1;\\n\"\t\t\t\t\t\t\\\n-  \".reg.u32 %retval;\\n\"\t\t\t\t\t\t\t\\\n-  \"        .reg.u64 %hr10;\\n\"\t\t\t\t\t\t\\\n-  \"        .reg.u64 %r25;\\n\"\t\t\t\t\t\t\\\n-  \"        .reg.u32 %r26;\\n\"\t\t\t\t\t\t\\\n-  \"        .reg.u32 %r27;\\n\"\t\t\t\t\t\t\\\n-  \"        ld.param.u64 %ar1, [%in_ar1];\\n\"\t\t\t\t\\\n-  \"                mov.u64 %r25, %ar1;\\n\"\t\t\t\t\\\n-  \"                ld.u32  %r26, [%r25];\\n\"\t\t\t\t\\\n-  \"        {\\n\"\t\t\t\t\t\t\t\t\\\n-  \"                .param.u32 %retval_in;\\n\"\t\t\t\t\\\n-  \"        {\\n\"\t\t\t\t\t\t\t\t\\\n-  \"                .param.u32 %out_arg0;\\n\"\t\t\t\t\\\n-  \"                st.param.u32 [%out_arg0], %r26;\\n\"\t\t\t\\\n-  \"                call (%retval_in), acc_on_device, (%out_arg0);\\n\"\t\\\n-  \"        }\\n\"\t\t\t\t\t\t\t\t\\\n-  \"                ld.param.u32    %r27, [%retval_in];\\n\"\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"                mov.u32 %retval, %r27;\\n\"\t\t\t\t\\\n-  \"        st.param.u32    [%out_retval], %retval;\\n\"\t\t\t\\\n-  \"        ret;\\n\"\t\t\t\t\t\t\t\\\n-  \"        }\"\n-\n- #define GOACC_INTERNAL_PTX\t\t\t\t\t\t\\\n-  \".version 3.1\\n\" \\\n-  \".target sm_30\\n\" \\\n-  \".address_size 64\\n\" \\\n-  \".visible .func (.param .u32 %out_retval) GOACC_tid (.param .u32 %in_ar1);\\n\" \\\n-  \".visible .func (.param .u32 %out_retval) GOACC_ntid (.param .u32 %in_ar1);\\n\" \\\n-  \".visible .func (.param .u32 %out_retval) GOACC_ctaid (.param .u32 %in_ar1);\\n\" \\\n-  \".visible .func (.param .u32 %out_retval) GOACC_nctaid (.param .u32 %in_ar1);\\n\" \\\n-  \".visible .func (.param .u32 %out_retval) GOACC_get_num_threads;\\n\" \\\n-  \".visible .func (.param .u32 %out_retval) GOACC_get_thread_num;\\n\" \\\n-  \".extern .func abort;\\n\" \\\n-  \".visible .func (.param .u32 %out_retval) GOACC_tid (.param .u32 %in_ar1)\\n\" \\\n-  \"{\\n\" \\\n-  \".reg .u32 %ar1;\\n\" \\\n-  \".reg .u32 %retval;\\n\" \\\n-  \".reg .u64 %hr10;\\n\" \\\n-  \".reg .u32 %r22;\\n\" \\\n-  \".reg .u32 %r23;\\n\" \\\n-  \".reg .u32 %r24;\\n\" \\\n-  \".reg .u32 %r25;\\n\" \\\n-  \".reg .u32 %r26;\\n\" \\\n-  \".reg .u32 %r27;\\n\" \\\n-  \".reg .u32 %r28;\\n\" \\\n-  \".reg .u32 %r29;\\n\" \\\n-  \".reg .pred %r30;\\n\" \\\n-  \".reg .u32 %r31;\\n\" \\\n-  \".reg .pred %r32;\\n\" \\\n-  \".reg .u32 %r33;\\n\" \\\n-  \".reg .pred %r34;\\n\" \\\n-  \".local .align 8 .b8 %frame[4];\\n\" \\\n-  \"ld.param.u32 %ar1,[%in_ar1];\\n\" \\\n-  \"mov.u32 %r27,%ar1;\\n\" \\\n-  \"st.local.u32 [%frame],%r27;\\n\" \\\n-  \"ld.local.u32 %r28,[%frame];\\n\" \\\n-  \"mov.u32 %r29,1;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r30,%r28,%r29;\\n\"\t\t\t\t\t\\\n-  \"@%r30 bra $L4;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r31,2;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r32,%r28,%r31;\\n\"\t\t\t\t\t\\\n-  \"@%r32 bra $L5;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r33,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r34,%r28,%r33;\\n\"\t\t\t\t\t\\\n-  \"@!%r34 bra $L8;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r23,%tid.x;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r23;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L7;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L4:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r24,%tid.y;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r24;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L7;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L5:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r25,%tid.z;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r25;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L7;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L8:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"call abort;\\n\"\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"$L7:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r26,%r22;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %retval,%r26;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_retval],%retval;\\n\"\t\t\t\t\\\n-  \"ret;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".visible .func (.param .u32 %out_retval) GOACC_ntid (.param .u32 %in_ar1)\\n\" \\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".reg .u32 %ar1;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %retval;\\n\"\t\t\t\t\t\t\\\n-  \".reg .u64 %hr10;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r22;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r23;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r24;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r25;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r26;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r27;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r28;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r29;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r30;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r31;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r32;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r33;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r34;\\n\"\t\t\t\t\t\t\t\\\n-  \".local .align 8 .b8 %frame[4];\\n\"\t\t\t\t\t\\\n-  \"ld.param.u32 %ar1,[%in_ar1];\\n\"\t\t\t\t\t\\\n-  \"mov.u32 %r27,%ar1;\\n\"\t\t\t\t\t\t\\\n-  \"st.local.u32 [%frame],%r27;\\n\"\t\t\t\t\t\\\n-  \"ld.local.u32 %r28,[%frame];\\n\"\t\t\t\t\t\\\n-  \"mov.u32 %r29,1;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r30,%r28,%r29;\\n\"\t\t\t\t\t\\\n-  \"@%r30 bra $L11;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r31,2;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r32,%r28,%r31;\\n\"\t\t\t\t\t\\\n-  \"@%r32 bra $L12;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r33,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r34,%r28,%r33;\\n\"\t\t\t\t\t\\\n-  \"@!%r34 bra $L15;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r23,%ntid.x;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r23;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L14;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L11:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r24,%ntid.y;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r24;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L14;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L12:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r25,%ntid.z;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r25;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L14;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L15:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"call abort;\\n\"\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"$L14:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r26,%r22;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %retval,%r26;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_retval],%retval;\\n\"\t\t\t\t\\\n-  \"ret;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".visible .func (.param .u32 %out_retval) GOACC_ctaid (.param .u32 %in_ar1)\\n\" \\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".reg .u32 %ar1;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %retval;\\n\"\t\t\t\t\t\t\\\n-  \".reg .u64 %hr10;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r22;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r23;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r24;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r25;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r26;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r27;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r28;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r29;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r30;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r31;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r32;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r33;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r34;\\n\"\t\t\t\t\t\t\t\\\n-  \".local .align 8 .b8 %frame[4];\\n\"\t\t\t\t\t\\\n-  \"ld.param.u32 %ar1,[%in_ar1];\\n\"\t\t\t\t\t\\\n-  \"mov.u32 %r27,%ar1;\\n\"\t\t\t\t\t\t\\\n-  \"st.local.u32 [%frame],%r27;\\n\"\t\t\t\t\t\\\n-  \"ld.local.u32 %r28,[%frame];\\n\"\t\t\t\t\t\\\n-  \"mov.u32 %r29,1;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r30,%r28,%r29;\\n\"\t\t\t\t\t\\\n-  \"@%r30 bra $L18;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r31,2;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r32,%r28,%r31;\\n\"\t\t\t\t\t\\\n-  \"@%r32 bra $L19;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r33,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r34,%r28,%r33;\\n\"\t\t\t\t\t\\\n-  \"@!%r34 bra $L22;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r23,%ctaid.x;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r23;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L21;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L18:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r24,%ctaid.y;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r24;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L21;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L19:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r25,%ctaid.z;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r25;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L21;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L22:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"call abort;\\n\"\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"$L21:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r26,%r22;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %retval,%r26;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_retval],%retval;\\n\"\t\t\t\t\\\n-  \"ret;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".visible .func (.param .u32 %out_retval) GOACC_nctaid (.param .u32 %in_ar1)\\n\" \\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".reg .u32 %ar1;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %retval;\\n\"\t\t\t\t\t\t\\\n-  \".reg .u64 %hr10;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r22;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r23;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r24;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r25;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r26;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r27;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r28;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r29;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r30;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r31;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r32;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r33;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .pred %r34;\\n\"\t\t\t\t\t\t\t\\\n-  \".local .align 8 .b8 %frame[4];\\n\"\t\t\t\t\t\\\n-  \"ld.param.u32 %ar1,[%in_ar1];\\n\"\t\t\t\t\t\\\n-  \"mov.u32 %r27,%ar1;\\n\"\t\t\t\t\t\t\\\n-  \"st.local.u32 [%frame],%r27;\\n\"\t\t\t\t\t\\\n-  \"ld.local.u32 %r28,[%frame];\\n\"\t\t\t\t\t\\\n-  \"mov.u32 %r29,1;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r30,%r28,%r29;\\n\"\t\t\t\t\t\\\n-  \"@%r30 bra $L25;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r31,2;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r32,%r28,%r31;\\n\"\t\t\t\t\t\\\n-  \"@%r32 bra $L26;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r33,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"setp.eq.u32 %r34,%r28,%r33;\\n\"\t\t\t\t\t\\\n-  \"@!%r34 bra $L29;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r23,%nctaid.x;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r23;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L28;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L25:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r24,%nctaid.y;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r24;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L28;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L26:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r25,%nctaid.z;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r25;\\n\"\t\t\t\t\t\t\\\n-  \"bra $L28;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"$L29:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"call abort;\\n\"\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"$L28:\\n\"\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r26,%r22;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %retval,%r26;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_retval],%retval;\\n\"\t\t\t\t\\\n-  \"ret;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".visible .func (.param .u32 %out_retval) GOACC_get_num_threads\\n\"\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".reg .u32 %retval;\\n\"\t\t\t\t\t\t\\\n-  \".reg .u64 %hr10;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r22;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r23;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r24;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r25;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r26;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r27;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r28;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r29;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r26,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %retval_in;\\n\"\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %out_arg0;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_arg0],%r26;\\n\"\t\t\t\t\t\\\n-  \"call (%retval_in),GOACC_ntid,(%out_arg0);\\n\"\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"ld.param.u32 %r27,[%retval_in];\\n\"\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r27;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r28,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %retval_in;\\n\"\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %out_arg0;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_arg0],%r28;\\n\"\t\t\t\t\t\\\n-  \"call (%retval_in),GOACC_nctaid,(%out_arg0);\\n\"\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"ld.param.u32 %r29,[%retval_in];\\n\"\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r23,%r29;\\n\"\t\t\t\t\t\t\\\n-  \"mul.lo.u32 %r24,%r22,%r23;\\n\"\t\t\t\t\t\\\n-  \"mov.u32 %r25,%r24;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %retval,%r25;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_retval],%retval;\\n\"\t\t\t\t\\\n-  \"ret;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".visible .func (.param .u32 %out_retval) GOACC_get_thread_num\\n\"\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".reg .u32 %retval;\\n\"\t\t\t\t\t\t\\\n-  \".reg .u64 %hr10;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r22;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r23;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r24;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r25;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r26;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r27;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r28;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r29;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r30;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r31;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r32;\\n\"\t\t\t\t\t\t\t\\\n-  \".reg .u32 %r33;\\n\"\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r28,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %retval_in;\\n\"\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %out_arg0;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_arg0],%r28;\\n\"\t\t\t\t\t\\\n-  \"call (%retval_in),GOACC_ntid,(%out_arg0);\\n\"\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"ld.param.u32 %r29,[%retval_in];\\n\"\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r22,%r29;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r30,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %retval_in;\\n\"\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %out_arg0;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_arg0],%r30;\\n\"\t\t\t\t\t\\\n-  \"call (%retval_in),GOACC_ctaid,(%out_arg0);\\n\"\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"ld.param.u32 %r31,[%retval_in];\\n\"\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r23,%r31;\\n\"\t\t\t\t\t\t\\\n-  \"mul.lo.u32 %r24,%r22,%r23;\\n\"\t\t\t\t\t\\\n-  \"mov.u32 %r32,0;\\n\"\t\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %retval_in;\\n\"\t\t\t\t\t\t\\\n-  \"{\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \".param .u32 %out_arg0;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_arg0],%r32;\\n\"\t\t\t\t\t\\\n-  \"call (%retval_in),GOACC_tid,(%out_arg0);\\n\"\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"ld.param.u32 %r33,[%retval_in];\\n\"\t\t\t\t\t\\\n-  \"}\\n\"\t\t\t\t\t\t\t\t\t\\\n-  \"mov.u32 %r25,%r33;\\n\"\t\t\t\t\t\t\\\n-  \"add.u32 %r26,%r24,%r25;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %r27,%r26;\\n\"\t\t\t\t\t\t\\\n-  \"mov.u32 %retval,%r27;\\n\"\t\t\t\t\t\t\\\n-  \"st.param.u32 [%out_retval],%retval;\\n\"\t\t\t\t\\\n-  \"ret;\\n\"\t\t\t\t\t\t\t\t\\\n-  \"}\\n\""}, {"sha": "9b846378a11d0a5aeb44f4a3139e23fa3da3955d", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113020dc598b57e0f2a73bf1516e5c83668aca21/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=113020dc598b57e0f2a73bf1516e5c83668aca21", "patch": "@@ -34,7 +34,6 @@\n #include \"openacc.h\"\n #include \"config.h\"\n #include \"libgomp-plugin.h\"\n-#include \"oacc-ptx.h\"\n #include \"oacc-plugin.h\"\n #include \"gomp-constants.h\"\n \n@@ -750,35 +749,6 @@ link_ptx (CUmodule *module, const struct targ_ptx_obj *ptx_objs,\n   if (r != CUDA_SUCCESS)\n     GOMP_PLUGIN_fatal (\"cuLinkCreate error: %s\", cuda_error (r));\n \n-  char *abort_ptx = ABORT_PTX;\n-  r = cuLinkAddData (linkstate, CU_JIT_INPUT_PTX, abort_ptx,\n-\t\t     strlen (abort_ptx) + 1, 0, 0, 0, 0);\n-  if (r != CUDA_SUCCESS)\n-    {\n-      GOMP_PLUGIN_error (\"Link error log %s\\n\", &elog[0]);\n-      GOMP_PLUGIN_fatal (\"cuLinkAddData (abort) error: %s\", cuda_error (r));\n-    }\n-\n-  char *acc_on_device_ptx = ACC_ON_DEVICE_PTX;\n-  r = cuLinkAddData (linkstate, CU_JIT_INPUT_PTX, acc_on_device_ptx,\n-\t\t     strlen (acc_on_device_ptx) + 1, 0, 0, 0, 0);\n-  if (r != CUDA_SUCCESS)\n-    {\n-      GOMP_PLUGIN_error (\"Link error log %s\\n\", &elog[0]);\n-      GOMP_PLUGIN_fatal (\"cuLinkAddData (acc_on_device) error: %s\",\n-\t\t\t cuda_error (r));\n-    }\n-\n-  char *goacc_internal_ptx = GOACC_INTERNAL_PTX;\n-  r = cuLinkAddData (linkstate, CU_JIT_INPUT_PTX, goacc_internal_ptx,\n-\t\t     strlen (goacc_internal_ptx) + 1, 0, 0, 0, 0);\n-  if (r != CUDA_SUCCESS)\n-    {\n-      GOMP_PLUGIN_error (\"Link error log %s\\n\", &elog[0]);\n-      GOMP_PLUGIN_fatal (\"cuLinkAddData (goacc_internal_ptx) error: %s\",\n-\t\t\t cuda_error (r));\n-    }\n-\n   for (; num_objs--; ptx_objs++)\n     {\n       /* cuLinkAddData's 'data' argument erroneously omits the const"}]}