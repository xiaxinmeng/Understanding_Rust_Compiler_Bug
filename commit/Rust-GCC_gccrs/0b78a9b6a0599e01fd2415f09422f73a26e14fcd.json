{"sha": "0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI3OGE5YjZhMDU5OWUwMWZkMjQxNWYwOTQyMmY3M2EyNmUxNGZjZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-15T20:57:12Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-15T20:57:12Z"}, "message": "varasm.c (output_constant_def): Do not consult CONSTANT_AFTER_FUNCTION_P.\n\n\t* varasm.c (output_constant_def): Do not consult\n\tCONSTANT_AFTER_FUNCTION_P.  Remove all code predicated on it.\n\t(after_function_constants, output_after_function_constants): Delete.\n\t* doc/tm.texi: Delete documentation of CONSTANT_AFTER_FUNCTION_P.\n\t* config/mips/mips-protos.h, config/mips/mips.c\n\t(mips16_constant_after_function_p): Delete.\n\t* config/mips/mips.h: Delete #if-0-ed definition of\n\tCONSTANT_AFTER_FUNCTION_P.\n\t* config/d30v/d30v.h, config/stormy16/stormy16.h: Remove\n\tmention of CONSTANT_AFTER_FUNCTION_P in comment.\n\nFrom-SVN: r65663", "tree": {"sha": "bd2a79bdc1c517e4ecf2b798b297b98c64dbb46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd2a79bdc1c517e4ecf2b798b297b98c64dbb46a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/comments", "author": null, "committer": null, "parents": [{"sha": "03907fbd21a5ba2aba1f92b53f2fb9a1d0293133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03907fbd21a5ba2aba1f92b53f2fb9a1d0293133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03907fbd21a5ba2aba1f92b53f2fb9a1d0293133"}], "stats": {"total": 144, "additions": 26, "deletions": 118}, "files": [{"sha": "f444a970d2503c4332f2c14caeca9032331f0d2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "patch": "@@ -1,3 +1,16 @@\n+2003-04-15  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* varasm.c (output_constant_def): Do not consult\n+\tCONSTANT_AFTER_FUNCTION_P.  Remove all code predicated on it.\n+\t(after_function_constants, output_after_function_constants): Delete.\n+\t* doc/tm.texi: Delete documentation of CONSTANT_AFTER_FUNCTION_P.\n+\t* config/mips/mips-protos.h, config/mips/mips.c\n+\t(mips16_constant_after_function_p): Delete.\n+\t* config/mips/mips.h: Delete #if-0-ed definition of\n+\tCONSTANT_AFTER_FUNCTION_P.\n+\t* config/d30v/d30v.h, config/stormy16/stormy16.h: Remove\n+\tmention of CONSTANT_AFTER_FUNCTION_P in comment.\n+\n 2003-04-15  Geoffrey Keating  <geoffk@apple.com>\n \n \t* tree.c (next_decl_uid): Mark with GTY.\n@@ -28,7 +41,7 @@\n 2003-04-14  Jason Merrill  <jason@redhat.com>\n \n \tPR middle-end/10336, c++/10401\n-\t* jump.c (never_reached_warning): Also stop looking if we reach the \n+\t* jump.c (never_reached_warning): Also stop looking if we reach the\n \tbeginning of the function.\n \n 2003-04-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n@@ -106,8 +119,8 @@\n \t(dbxout_type): Replace extracted code by call to\n \tprint_int_cst_bounds_in_octal_p.\n \n-        * dwarf2out.c (gen_compile_unit_die): Emit DW_LANG_Ada95 instead\n-        of DW_LANG_Ada83 for Ada units.\n+\t* dwarf2out.c (gen_compile_unit_die): Emit DW_LANG_Ada95 instead\n+\tof DW_LANG_Ada83 for Ada units.\n \n 2003-04-14  Olivier Hainque <hainque@act-europe.fr>\n \n@@ -125,12 +138,12 @@\n \thard regs to pseudos live across abnormal edges, as later passes are\n \tnot ready to handle them.\n \n-        * fold-const.c (fold): Reorder tests for conditional expressions.\n+\t* fold-const.c (fold): Reorder tests for conditional expressions.\n+\n+\t* expr.c (highest_pow2_factor): Return unsigned.\n+\t* expr.h (offset_address): Likewise.\n+\t* emit-rtl.c (offset_address): POW2 argument now unsigned.\n \n-        * expr.c (highest_pow2_factor): Return unsigned.\n-        * expr.h (offset_address): Likewise.\n-        * emit-rtl.c (offset_address): POW2 argument now unsigned.\n-        \n 2003-04-14  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtins.c (expand_builtin_strlen):  Evaluate the lengths of\n@@ -225,7 +238,7 @@ Mon Apr 14 16:18:37 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \tconfig/rs6000/rs64.md, config/rs6000/rtems.h, config/rs6000/spe.h,\n \tconfig/rs6000/spe.md, config/rs6000/sysv4.h,\n \tconfig/rs6000/sysv4le.h, config/rs6000/vxworks.h,\n-\tconfig/rs6000/windiss.h, config/rs6000/xcoff.h: Likewise.\t\n+\tconfig/rs6000/windiss.h, config/rs6000/xcoff.h: Likewise.\n \n 2003-04-13  Nick Clifton  <nickc@redhat.com>\n "}, {"sha": "d6a0b42278638c776db57115948df51a9eb694b9", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "patch": "@@ -2738,12 +2738,6 @@ extern const char *d30v_branch_cost_string;\n    You need not define this macro if it would do nothing.  */\n /* #define ASM_OUTPUT_SPECIAL_POOL_ENTRY(FILE, X, MODE, ALIGN, LABELNO, JUMPTO) */\n \n-/* Define this macro as a C expression which is nonzero if the constant EXP, of\n-   type `tree', should be output after the code for a function.  The compiler\n-   will normally output all constants before the function; you need not define\n-   this macro if this is OK.  */\n-/* #define CONSTANT_AFTER_FUNCTION_P(EXP) */\n-\n /* A C statement to output assembler commands to at the end of the constant\n    pool for a function.  FUNNAME is a string giving the name of the function.\n    Should the return type of the function be required, you can obtain it via"}, {"sha": "bec42ffb5888760ba2d56b706d1366015247ee09", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "patch": "@@ -74,7 +74,6 @@ extern int\t\tmips_setup_incoming_varargs\n extern int\t\tfunction_arg_pass_by_reference\n \t\t\t\tPARAMS ((const CUMULATIVE_ARGS *,\n \t\t\t\t\t enum machine_mode, tree, int));\n-extern int\t\tmips16_constant_after_function_p PARAMS ((tree));\n extern int\t\tmips_output_external PARAMS ((FILE *, tree,\n \t\t\t\t\t\t      const char *));\n extern tree\t\tmips_build_va_list PARAMS ((void));"}, {"sha": "5ef92f03651d194c8de2012dc33cc9041a307828", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "patch": "@@ -9128,46 +9128,6 @@ mips16_output_gp_offset (file, x)\n   output_addr_const (file, x);\n }\n \n-/* Return nonzero if a constant should not be output until after the\n-   function.  This is true of most string constants, so that we can\n-   use a more efficient PC relative reference.  However, a static\n-   inline function may never call assemble_function_end to write out\n-   the constant pool, so don't try to postpone the constant in that\n-   case.\n-\n-   ??? It's really a bug that a static inline function can put stuff\n-   in the constant pool even if the function itself is not output.\n-\n-   We record which string constants we've seen, so that we know which\n-   ones might use the more efficient reference.  */\n-\n-int\n-mips16_constant_after_function_p (x)\n-     tree x;\n-{\n-  if (TREE_CODE (x) == STRING_CST\n-      && ! flag_writable_strings\n-      && current_function_decl != 0\n-      && ! DECL_DEFER_OUTPUT (current_function_decl)\n-      && ! (DECL_INLINE (current_function_decl)\n-\t    && ((! TREE_PUBLIC (current_function_decl)\n-\t\t && ! TREE_ADDRESSABLE (current_function_decl)\n-\t\t && ! flag_keep_inline_functions)\n-\t\t|| DECL_EXTERNAL (current_function_decl))))\n-    {\n-      struct string_constant *n;\n-\n-      n = (struct string_constant *) xmalloc (sizeof *n);\n-      n->label = XSTR (XEXP (TREE_CST_RTL (x), 0), 0);\n-      n->next = string_constants;\n-      string_constants = n;\n-\n-      return 1;\n-    }\n-\n-  return 0;\n-}\n-\n /* Validate a constant for the mips16.  This rejects general symbolic\n    addresses, which must be loaded from memory.  If ADDR is nonzero,\n    this should reject anything which is not a legal address.  If"}, {"sha": "a52e7b67bcf4b7ab97fdfe4b4d91fa5ad90eb7fd", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "patch": "@@ -3312,11 +3312,6 @@ typedef struct mips_args {\n #define ASM_OUTPUT_POOL_EPILOGUE(FILE, FNNAME, FNDECL, SIZE)\t\\\n   mips_string_length = 0;\n \n-#if 0\n-/* In mips16 mode, put most string constants after the function.  */\n-#define CONSTANT_AFTER_FUNCTION_P(tree)\t\t\t\t\\\n-  (TARGET_MIPS16 && mips16_constant_after_function_p (tree))\n-#endif\n \f\n /* Specify the machine mode that this machine uses\n    for the index in the tablejump instruction."}, {"sha": "55da1749ab07eb567f2273d6524f3a00a3300568", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "patch": "@@ -2538,12 +2538,6 @@ do {\t\t\t\t\t\t\t\\\n    You need not define this macro if it would do nothing.  */\n /* #define ASM_OUTPUT_SPECIAL_POOL_ENTRY(FILE, X, MODE, ALIGN, LABELNO, JUMPTO) */\n \n-/* Define this macro as a C expression which is nonzero if the constant EXP, of\n-   type `tree', should be output after the code for a function.  The compiler\n-   will normally output all constants before the function; you need not define\n-   this macro if this is OK.  */\n-/* #define CONSTANT_AFTER_FUNCTION_P(EXP) */\n-\n /* A C statement to output assembler commands to at the end of the constant\n    pool for a function.  FUNNAME is a string giving the name of the function.\n    Should the return type of the function be required, you can obtain it via"}, {"sha": "e17d5a167d36be332c2e0a8a2254eb2bbceba23a", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "patch": "@@ -6386,13 +6386,6 @@ entry from being output a second time in the usual manner.\n \n You need not define this macro if it would do nothing.\n \n-@findex CONSTANT_AFTER_FUNCTION_P\n-@item CONSTANT_AFTER_FUNCTION_P (@var{exp})\n-Define this macro as a C expression which is nonzero if the constant\n-@var{exp}, of type @code{tree}, should be output after the code for a\n-function.  The compiler will normally output all constants before the\n-function; you need not define this macro if this is OK@.\n-\n @findex ASM_OUTPUT_POOL_EPILOGUE\n @item ASM_OUTPUT_POOL_EPILOGUE (@var{file} @var{funname} @var{fundecl} @var{size})\n A C statement to output assembler commands to at the end of the constant"}, {"sha": "684a824c844d2d51bad6c5197e9bc7785ab41b3a", "filename": "gcc/varasm.c", "status": "modified", "additions": 4, "deletions": 44, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b78a9b6a0599e01fd2415f09422f73a26e14fcd/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "patch": "@@ -155,7 +155,6 @@ static void mark_constant_pool\t\tPARAMS ((void));\n static void mark_constants\t\tPARAMS ((rtx));\n static int mark_constant\t\tPARAMS ((rtx *current_rtx, void *data));\n static int output_addressed_constants\tPARAMS ((tree));\n-static void output_after_function_constants PARAMS ((void));\n static unsigned HOST_WIDE_INT array_size_for_constructor PARAMS ((tree));\n static unsigned min_align\t\tPARAMS ((unsigned, unsigned));\n static void output_constructor\t\tPARAMS ((tree, HOST_WIDE_INT,\n@@ -1199,9 +1198,6 @@ assemble_end_function (decl, fnname)\n       output_constant_pool (fnname, decl);\n       function_section (decl);\t/* need to switch back */\n     }\n-\n-  /* Output any constants which should appear after the function.  */\n-  output_after_function_constants ();\n }\n \f\n /* Assemble code to leave SIZE bytes of zeros.  */\n@@ -2482,10 +2478,6 @@ struct deferred_constant\n \n static struct deferred_constant *deferred_constants;\n \n-/* Another list of constants which should be output after the\n-   function.  */\n-static struct deferred_constant *after_function_constants;\n-\n /* Nonzero means defer output of addressed subconstants\n    (i.e., those for which output_constant_def is called.)  */\n static int defer_addressed_constants_flag;\n@@ -2521,23 +2513,6 @@ output_deferred_addressed_constants ()\n   deferred_constants = 0;\n }\n \n-/* Output any constants which should appear after a function.  */\n-\n-static void\n-output_after_function_constants ()\n-{\n-  struct deferred_constant *p, *next;\n-\n-  for (p = after_function_constants; p; p = next)\n-    {\n-      output_constant_def_contents (p->exp, p->reloc, p->labelno);\n-      next = p->next;\n-      free (p);\n-    }\n-\n-  after_function_constants = 0;\n-}\n-\n /* Make a copy of the whole tree structure for a constant.  This\n    handles the same types of nodes that compare_constant handles.  */\n \n@@ -2631,7 +2606,6 @@ output_constant_def (exp, defer)\n   char label[256];\n   int reloc;\n   int found = 1;\n-  int after_function = 0;\n   int labelno = -1;\n   rtx rtl;\n \n@@ -2709,15 +2683,9 @@ output_constant_def (exp, defer)\n       desc->label = XSTR (XEXP (desc->rtl, 0), 0);\n     }\n \n-#ifdef CONSTANT_AFTER_FUNCTION_P\n-  if (current_function_decl != 0\n-      && CONSTANT_AFTER_FUNCTION_P (exp))\n-    after_function = 1;\n-#endif\n-\n   if (found\n       && STRING_POOL_ADDRESS_P (XEXP (rtl, 0))\n-      && (!defer || defer_addressed_constants_flag || after_function))\n+      && (!defer || defer_addressed_constants_flag))\n     {\n       defstr = (struct deferred_string **)\n \thtab_find_slot_with_hash (const_str_htab, desc->label,\n@@ -2737,7 +2705,7 @@ output_constant_def (exp, defer)\n      output it (or defer its output for later).  */\n   if (! found)\n     {\n-      if (defer_addressed_constants_flag || after_function)\n+      if (defer_addressed_constants_flag)\n \t{\n \t  struct deferred_constant *p\n \t    = (struct deferred_constant *)\n@@ -2746,16 +2714,8 @@ output_constant_def (exp, defer)\n \t  p->exp = desc->value;\n \t  p->reloc = reloc;\n \t  p->labelno = labelno;\n-\t  if (after_function)\n-\t    {\n-\t      p->next = after_function_constants;\n-\t      after_function_constants = p;\n-\t    }\n-\t  else\n-\t    {\n-\t      p->next = deferred_constants;\n-\t      deferred_constants = p;\n-\t    }\n+\t  p->next = deferred_constants;\n+\t  deferred_constants = p;\n \t}\n       else\n \t{"}]}