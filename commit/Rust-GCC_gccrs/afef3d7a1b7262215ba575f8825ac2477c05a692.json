{"sha": "afef3d7a1b7262215ba575f8825ac2477c05a692", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZlZjNkN2ExYjcyNjIyMTViYTU3NWY4ODI1YWMyNDc3YzA1YTY5Mg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1999-05-05T07:46:43Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1999-05-05T07:46:43Z"}, "message": "Remove assembler dialect dependencies.\n\nFrom-SVN: r26776", "tree": {"sha": "a0740688654c5451e4dc20aa0786526d142b9dc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0740688654c5451e4dc20aa0786526d142b9dc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afef3d7a1b7262215ba575f8825ac2477c05a692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afef3d7a1b7262215ba575f8825ac2477c05a692", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afef3d7a1b7262215ba575f8825ac2477c05a692", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afef3d7a1b7262215ba575f8825ac2477c05a692/comments", "author": null, "committer": null, "parents": [{"sha": "9ba051d33eda5c331f6189ed57f814d46666c064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba051d33eda5c331f6189ed57f814d46666c064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ba051d33eda5c331f6189ed57f814d46666c064"}], "stats": {"total": 68, "additions": 55, "deletions": 13}, "files": [{"sha": "fb98a3340cb55dc98393e88d0c8f4cdfd4b6dcd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afef3d7a1b7262215ba575f8825ac2477c05a692/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afef3d7a1b7262215ba575f8825ac2477c05a692/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afef3d7a1b7262215ba575f8825ac2477c05a692", "patch": "@@ -1,3 +1,13 @@\n+Wed May  5 07:40:02 1999  Nick Clifton  <nickc@cygnus.com>\n+\n+\tPatch from: Nick Burrett  <nick.burrett@btinternet.com>\n+\t* config/arm/arm.h (ARM_MCOUNT_NAME): Define.\n+\t(FUNCTION_PROFILER): Remove assembler dialect dependency and use\n+\tARM_MCOUNT_NAME.\n+\t(TRAMPOLINE_TEMPLATE): Remove assembler dialect dependency.\n+\t\n+\t* config/arm/aof.h (ARM_MCOUNT_NAME): Define.\n+\n 1999-05-05 09:58 -0400  Zack Weinberg  <zack@rabi.columbia.edu>\n \n \t* gcc.c (default_compilers): Fix brace nesting bug."}, {"sha": "ce41a7040e99ffeff4aff56441ae1a13ec6277a9", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afef3d7a1b7262215ba575f8825ac2477c05a692/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afef3d7a1b7262215ba575f8825ac2477c05a692/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=afef3d7a1b7262215ba575f8825ac2477c05a692", "patch": "@@ -420,6 +420,9 @@ do {\t\t\t\t\t\t\\\n #define USER_LABEL_PREFIX \"\"\n #define LOCAL_LABEL_PREFIX \"\"\n \n+/* AOF does not prefix user function names with an underscore.  */\n+#define ARM_MCOUNT_NAME \"_mcount\"\n+\n /* Output of Dispatch Tables */\n \n #define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM,BODY,VALUE,REL)\t\t\\"}, {"sha": "52b433229f3fe997abe4405a6723d45dbbf33e60", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 42, "deletions": 13, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afef3d7a1b7262215ba575f8825ac2477c05a692/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afef3d7a1b7262215ba575f8825ac2477c05a692/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=afef3d7a1b7262215ba575f8825ac2477c05a692", "patch": "@@ -1133,15 +1133,42 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define FUNCTION_PROLOGUE(STREAM, SIZE)  \\\n   output_func_prologue ((STREAM), (SIZE))\n \n-/* Call the function profiler with a given profile label.  The Acorn compiler\n-   puts this BEFORE the prolog but gcc puts it afterwards.  The ``mov ip,lr''\n-   seems like a good idea to stick with cc convention.  ``prof'' doesn't seem\n-   to mind about this!  */\n+/* If your target environment doesn't prefix user functions with an\n+   underscore, you may wish to re-define this to prevent any conflicts.\n+   e.g. AOF may prefix mcount with an underscore.  */\n+#ifndef ARM_MCOUNT_NAME\n+#define ARM_MCOUNT_NAME \"*mcount\"\n+#endif\n+\n+/* Call the function profiler with a given profile label.  The Acorn\n+   compiler puts this BEFORE the prolog but gcc puts it afterwards.\n+   On the ARM the full profile code will look like:\n+\t.data\n+\tLP1\n+\t\t.word\t0\n+\t.text\n+\t\tmov\tip, lr\n+\t\tbl\tmcount\n+\t\t.word\tLP1\n+\n+   profile_function() in final.c outputs the .data section, FUNCTION_PROFILER\n+   will output the .text section.\n+\n+   The ``mov ip,lr'' seems like a good idea to stick with cc convention.\n+   ``prof'' doesn't seem to mind about this!  */\n #define FUNCTION_PROFILER(STREAM,LABELNO)  \t\t\t\t    \\\n {\t\t\t\t\t\t\t\t\t    \\\n-    fprintf(STREAM, \"\\tmov\\t%sip, %slr\\n\", REGISTER_PREFIX, REGISTER_PREFIX); \\\n-    fprintf(STREAM, \"\\tbl\\tmcount\\n\");\t\t\t\t\t    \\\n-    fprintf(STREAM, \"\\t.word\\tLP%d\\n\", (LABELNO));\t\t\t    \\\n+  char temp[20];\t\t\t\t\t\t\t    \\\n+  rtx sym;\t\t\t\t\t\t\t\t    \\\n+\t\t\t\t\t\t\t\t\t    \\\n+  fprintf ((STREAM), \"\\tmov\\t%s%s, %s%s\\n\\tbl\\t\",\t\t\t    \\\n+\t   REGISTER_PREFIX, reg_names[12] /* ip */,\t\t\t    \\\n+\t   REGISTER_PREFIX, reg_names[14] /* lr */);\t\t\t    \\\n+  assemble_name ((STREAM), ARM_MCOUNT_NAME);\t\t\t\t    \\\n+  fputc ('\\n', (STREAM));\t\t\t\t\t\t    \\\n+  ASM_GENERATE_INTERNAL_LABEL (temp, \"LP\", (LABELNO));\t\t\t    \\\n+  sym = gen_rtx (SYMBOL_REF, Pmode, temp);\t\t\t\t    \\\n+  ASM_OUTPUT_INT ((STREAM), sym);\t\t\t\t\t    \\\n }\n \n /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,\n@@ -1243,12 +1270,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n    ??? FIXME: When the trampoline returns, r8 will be clobbered.  */\n #define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\tldr\\t%sr8, [%spc, #0]\\n\",\t\t\t\\\n-\t   REGISTER_PREFIX, REGISTER_PREFIX);\t\t\t\\\n-  fprintf ((FILE), \"\\tldr\\t%spc, [%spc, #0]\\n\",\t\t\t\\\n-\t   REGISTER_PREFIX, REGISTER_PREFIX);\t\t\t\\\n-  fprintf ((FILE), \"\\t.word\\t0\\n\");\t\t\t\t\\\n-  fprintf ((FILE), \"\\t.word\\t0\\n\");\t\t\t\t\\\n+  fprintf ((FILE), \"\\tldr\\t%s%s, [%s%s, #0]\\n\",\t\t\t\\\n+\t   REGISTER_PREFIX, reg_names[STATIC_CHAIN_REGNUM],\t\\\n+\t   REGISTER_PREFIX, reg_names[PC_REGNUM]);\t\t\\\n+  fprintf ((FILE), \"\\tldr\\t%s%s, [%s%s, #0]\\n\",\t\t\t\\\n+\t   REGISTER_PREFIX, reg_names[PC_REGNUM],\t\t\\\n+\t   REGISTER_PREFIX, reg_names[PC_REGNUM]);\t\t\\\n+  ASM_OUTPUT_INT ((FILE), const0_rtx);\t\t\t\t\\\n+  ASM_OUTPUT_INT ((FILE), const0_rtx);\t\t\t\t\\\n }\n \n /* Length in units of the trampoline for entering a nested function.  */"}]}