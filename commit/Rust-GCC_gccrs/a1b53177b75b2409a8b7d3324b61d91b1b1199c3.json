{"sha": "a1b53177b75b2409a8b7d3324b61d91b1b1199c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFiNTMxNzdiNzViMjQwOWE4YjdkMzMyNGI2MWQ5MWIxYjExOTljMw==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb.gcc@gmail.com", "date": "2006-05-13T23:14:47Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-05-13T23:14:47Z"}, "message": "df-core.c (df_bb_regno_last_use_find): Do not look for dataflow information attached to non-INSNs such as NOTEs.\n\n\t* df-core.c (df_bb_regno_last_use_find): Do not look for dataflow\n\tinformation attached to non-INSNs such as NOTEs.\n\t(df_bb_regno_first_def_find, df_bb_regno_last_def_find): Likewise.\n\nFrom-SVN: r113748", "tree": {"sha": "2d0ccc4c2549df330dcaea8bb71b9a1b06128b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d0ccc4c2549df330dcaea8bb71b9a1b06128b22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1b53177b75b2409a8b7d3324b61d91b1b1199c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b53177b75b2409a8b7d3324b61d91b1b1199c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1b53177b75b2409a8b7d3324b61d91b1b1199c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b53177b75b2409a8b7d3324b61d91b1b1199c3/comments", "author": null, "committer": null, "parents": [{"sha": "628cacef2409f1aae7d75090cbd851f5dd14a80f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/628cacef2409f1aae7d75090cbd851f5dd14a80f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/628cacef2409f1aae7d75090cbd851f5dd14a80f"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "e5c70501d1b7c01815ed7e61b07748eb2bb13cc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b53177b75b2409a8b7d3324b61d91b1b1199c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b53177b75b2409a8b7d3324b61d91b1b1199c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1b53177b75b2409a8b7d3324b61d91b1b1199c3", "patch": "@@ -1,3 +1,9 @@\n+2006-05-13  Steven Bosscher  <stevenb.gcc@gmail.com>\n+\n+\t* df-core.c (df_bb_regno_last_use_find): Do not look for dataflow\n+\tinformation attached to non-INSNs such as NOTEs.\n+\t(df_bb_regno_first_def_find, df_bb_regno_last_def_find): Likewise.\n+\n 2006-05-12  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.c (s390_const_ok_for_constraint_p): Disallow -4G for"}, {"sha": "0619c200bdc3829b5371d63f8d87affb433b672b", "filename": "gcc/df-core.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b53177b75b2409a8b7d3324b61d91b1b1199c3/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b53177b75b2409a8b7d3324b61d91b1b1199c3/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=a1b53177b75b2409a8b7d3324b61d91b1b1199c3", "patch": "@@ -915,10 +915,14 @@ df_bb_regno_last_use_find (struct df *df, basic_block bb, unsigned int regno)\n {\n   rtx insn;\n   struct df_ref *use;\n+  unsigned int uid;\n \n   FOR_BB_INSNS_REVERSE (bb, insn)\n     {\n-      unsigned int uid = INSN_UID (insn);\n+      if (!INSN_P (insn))\n+\tcontinue;\n+\n+      uid = INSN_UID (insn);\n       for (use = DF_INSN_UID_GET (df, uid)->uses; use; use = use->next_ref)\n \tif (DF_REF_REGNO (use) == regno)\n \t  return use;\n@@ -934,10 +938,14 @@ df_bb_regno_first_def_find (struct df *df, basic_block bb, unsigned int regno)\n {\n   rtx insn;\n   struct df_ref *def;\n+  unsigned int uid;\n \n   FOR_BB_INSNS (bb, insn)\n     {\n-      unsigned int uid = INSN_UID (insn);\n+      if (!INSN_P (insn))\n+\tcontinue;\n+\n+      uid = INSN_UID (insn);\n       for (def = DF_INSN_UID_GET (df, uid)->defs; def; def = def->next_ref)\n \tif (DF_REF_REGNO (def) == regno)\n \t  return def;\n@@ -953,11 +961,14 @@ df_bb_regno_last_def_find (struct df *df, basic_block bb, unsigned int regno)\n {\n   rtx insn;\n   struct df_ref *def;\n+  unsigned int uid;\n \n   FOR_BB_INSNS_REVERSE (bb, insn)\n     {\n-      unsigned int uid = INSN_UID (insn);\n+      if (!INSN_P (insn))\n+\tcontinue;\n \n+      uid = INSN_UID (insn);\n       for (def = DF_INSN_UID_GET (df, uid)->defs; def; def = def->next_ref)\n \tif (DF_REF_REGNO (def) == regno)\n \t  return def;"}]}