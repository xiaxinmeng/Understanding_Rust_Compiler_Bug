{"sha": "254e88b3d7e8abcc236be3451609834371cf4d5d", "node_id": "C_kwDOANBUbNoAKDI1NGU4OGIzZDdlOGFiY2MyMzZiZTM0NTE2MDk4MzQzNzFjZjRkNWQ", "commit": {"author": {"name": "Mark Mentovai", "email": "mark@mentovai.com", "date": "2022-06-13T15:40:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-06-13T19:25:49Z"}, "message": "libstdc++: Rename __null_terminated to avoid collision with Apple SDK\n\nThe macOS 13 SDK (and equivalent-version iOS and other Apple OS SDKs)\ncontain this definition in <sys/cdefs.h>:\n\n863  #define __null_terminated\n\nThis collides with the use of __null_terminated in libstdc++'s\nexperimental fs_path.h.\n\nAs libstdc++'s use of this token is entirely internal to fs_path.h, the\nsimplest workaround, renaming it, is most appropriate. Here, it's\nrenamed to __nul_terminated, referencing the NUL ('\\0') value that is\nused to terminate the strings in the context in which this tag structure\nis used.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/bits/fs_path.h (__detail::__null_terminated):\n\tRename to __nul_terminated to avoid colliding with a macro in\n\tApple's SDK.\n\nSigned-off-by: Mark Mentovai <mark@mentovai.com>", "tree": {"sha": "a3c2a1bb7ebe557f2679d7071566a92aeeec5244", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3c2a1bb7ebe557f2679d7071566a92aeeec5244"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/254e88b3d7e8abcc236be3451609834371cf4d5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254e88b3d7e8abcc236be3451609834371cf4d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254e88b3d7e8abcc236be3451609834371cf4d5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254e88b3d7e8abcc236be3451609834371cf4d5d/comments", "author": {"login": "markmentovai", "id": 933273, "node_id": "MDQ6VXNlcjkzMzI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/933273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markmentovai", "html_url": "https://github.com/markmentovai", "followers_url": "https://api.github.com/users/markmentovai/followers", "following_url": "https://api.github.com/users/markmentovai/following{/other_user}", "gists_url": "https://api.github.com/users/markmentovai/gists{/gist_id}", "starred_url": "https://api.github.com/users/markmentovai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markmentovai/subscriptions", "organizations_url": "https://api.github.com/users/markmentovai/orgs", "repos_url": "https://api.github.com/users/markmentovai/repos", "events_url": "https://api.github.com/users/markmentovai/events{/privacy}", "received_events_url": "https://api.github.com/users/markmentovai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30cc1b65e4efa1a2c57fec5574fcae7a446b822f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30cc1b65e4efa1a2c57fec5574fcae7a446b822f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30cc1b65e4efa1a2c57fec5574fcae7a446b822f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "19d246100cb5a45f95072c591185b09af911abe8", "filename": "libstdc++-v3/include/experimental/bits/fs_path.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254e88b3d7e8abcc236be3451609834371cf4d5d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254e88b3d7e8abcc236be3451609834371cf4d5d/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h?ref=254e88b3d7e8abcc236be3451609834371cf4d5d", "patch": "@@ -140,10 +140,10 @@ namespace __detail\n     inline _Source\n     _S_range_begin(_Source __begin) { return __begin; }\n \n-  struct __null_terminated { };\n+  struct __nul_terminated { };\n \n   template<typename _Source>\n-    inline __null_terminated\n+    inline __nul_terminated\n     _S_range_end(_Source) { return {}; }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>\n@@ -459,11 +459,11 @@ namespace __detail\n       struct _Cvt;\n \n     static string_type\n-    _S_convert(value_type* __src, __detail::__null_terminated)\n+    _S_convert(value_type* __src, __detail::__nul_terminated)\n     { return string_type(__src); }\n \n     static string_type\n-    _S_convert(const value_type* __src, __detail::__null_terminated)\n+    _S_convert(const value_type* __src, __detail::__nul_terminated)\n     { return string_type(__src); }\n \n     template<typename _Iter>\n@@ -477,7 +477,7 @@ namespace __detail\n \n     template<typename _InputIterator>\n       static string_type\n-      _S_convert(_InputIterator __src, __detail::__null_terminated)\n+      _S_convert(_InputIterator __src, __detail::__nul_terminated)\n       {\n \tauto __s = _S_string_from_iter(__src);\n \treturn _S_convert(__s.c_str(), __s.c_str() + __s.size());\n@@ -504,7 +504,7 @@ namespace __detail\n \n     template<typename _InputIterator>\n       static string_type\n-      _S_convert_loc(_InputIterator __src, __detail::__null_terminated,\n+      _S_convert_loc(_InputIterator __src, __detail::__nul_terminated,\n \t\t     const std::locale& __loc)\n       {\n \tconst std::string __s = _S_string_from_iter(__src);"}]}