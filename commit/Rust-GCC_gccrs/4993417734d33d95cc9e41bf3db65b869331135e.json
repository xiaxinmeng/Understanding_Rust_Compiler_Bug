{"sha": "4993417734d33d95cc9e41bf3db65b869331135e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5MzQxNzczNGQzM2Q5NWNjOWU0MWJmM2RiNjViODY5MzMxMTM1ZQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2007-08-14T08:48:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T08:48:36Z"}, "message": "layout.adb (Layout_Type): In the case of access-to-subprogram types...\n\n2007-08-14  Gary Dismukes  <dismukes@adacore.com>\n\n\t* layout.adb (Layout_Type): In the case of access-to-subprogram types,\n\tif AAMP_On_Target is True, then the size of the type encompasses two\n\taddresses (a static link and a subprogram address), except in the case\n\tof library-level access types.\n\nFrom-SVN: r127455", "tree": {"sha": "4ff1df77a957d6fa0797933f264656e3ee411144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ff1df77a957d6fa0797933f264656e3ee411144"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4993417734d33d95cc9e41bf3db65b869331135e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4993417734d33d95cc9e41bf3db65b869331135e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4993417734d33d95cc9e41bf3db65b869331135e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4993417734d33d95cc9e41bf3db65b869331135e/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6812b99bfefb741cadac6c5eba5a7446af820b62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6812b99bfefb741cadac6c5eba5a7446af820b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6812b99bfefb741cadac6c5eba5a7446af820b62"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "baafca0ca52b4559742971aea32ccc9448d2523f", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4993417734d33d95cc9e41bf3db65b869331135e/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4993417734d33d95cc9e41bf3db65b869331135e/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=4993417734d33d95cc9e41bf3db65b869331135e", "patch": "@@ -2373,6 +2373,19 @@ package body Layout is\n                         \"correspond to C pointer\", E);\n                   end if;\n \n+               --  When the target is AAMP, access-to-subprogram types are fat\n+               --  pointers consisting of the subprogram address and a static\n+               --  link (with the exception of library-level access types,\n+               --  where a simple subprogram address is used).\n+\n+               elsif AAMP_On_Target\n+                 and then\n+                   (Ekind (E) = E_Anonymous_Access_Subprogram_Type\n+                     or else (Ekind (E) = E_Access_Subprogram_Type\n+                               and then Present (Enclosing_Subprogram (E))))\n+               then\n+                  Init_Size (E, 2 * System_Address_Size);\n+\n                else\n                   Init_Size (E, System_Address_Size);\n                end if;\n@@ -3084,7 +3097,7 @@ package body Layout is\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  Statements => New_List (\n-                   Make_Return_Statement (Loc,\n+                   Make_Simple_Return_Statement (Loc,\n                      Expression => Expr))));\n \n       --  The caller requests that the expression be encapsulated in\n@@ -3106,7 +3119,7 @@ package body Layout is\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n                  Statements => New_List (\n-                   Make_Return_Statement (Loc, Expression => Expr))));\n+                   Make_Simple_Return_Statement (Loc, Expression => Expr))));\n \n       --  No reference to V and function not requested, so create a constant\n "}]}