{"sha": "b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ1NTBiZjdhZDYwZDAyMzNhNGQ5ZjM2ZGNiYmNlMzJlNzVhMzE5OQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2010-12-14T12:43:47Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2010-12-14T12:43:47Z"}, "message": "re PR rtl-optimization/46875 (ICE: verify_flow_info failed: too many outgoing branch edges from bb 3 with -Os -fselective-scheduling2)\n\n\tPR rtl-optimization/46875\n\t* sched-vis.c (print_pattern): Dump \"sequence\" for ADDR_VECs.\n\t* sel-sched-ir.c (bb_has_removable_jump_to_p): Forbid table jumps.\n\ntestsuite:\n\t* gcc.dg/pr46875.c: New.\n\nFrom-SVN: r167794", "tree": {"sha": "145b7f1d26b61ece3202121a1d96f6cc35bd5f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/145b7f1d26b61ece3202121a1d96f6cc35bd5f8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/comments", "author": null, "committer": null, "parents": [{"sha": "02826ae9973394ca98dfaae496c287920aa2e886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02826ae9973394ca98dfaae496c287920aa2e886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02826ae9973394ca98dfaae496c287920aa2e886"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "78ca0480a21a4c02a65174960f333a5ad2adefc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "patch": "@@ -1,3 +1,9 @@\n+2010-12-14  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR rtl-optimization/46875\n+\t* sched-vis.c (print_pattern): Dump \"sequence\" for ADDR_VECs.\n+\t* sel-sched-ir.c (bb_has_removable_jump_to_p): Forbid table jumps.\n+\n 2010-12-14  Kaushik Phatak <kaushik.phatak@kpitcummins.com>\n \n \t* config/h8300/h8300.md (define_split) : Add condition for"}, {"sha": "d4a5644f6c7ef12f65e4dc80e4062b3207bb2b22", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "patch": "@@ -604,7 +604,7 @@ print_pattern (char *buf, const_rtx x, int verbose)\n       sprintf (buf, \"asm {%s}\", XSTR (x, 0));\n       break;\n     case ADDR_VEC:\n-      break;\n+      /* Fall through.  */\n     case ADDR_DIFF_VEC:\n       print_value (buf, XEXP (x, 0), verbose);\n       break;"}, {"sha": "468dfd7a3e6d6b3f0ba528cb2936a261176eb675", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "patch": "@@ -6148,7 +6148,8 @@ sel_is_loop_preheader_p (basic_block bb)\n static bool\n bb_has_removable_jump_to_p (basic_block jump_bb, basic_block dest_bb)\n {\n-  if (!onlyjump_p (BB_END (jump_bb)))\n+  if (!onlyjump_p (BB_END (jump_bb))\n+      || tablejump_p (BB_END (jump_bb), NULL, NULL))\n     return false;\n \n   /* Several outgoing edges, abnormal edge or destination of jump is"}, {"sha": "33be340e9bbb5f4fd6dd5f4fcf9bc7ba75dfe8b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "patch": "@@ -1,4 +1,9 @@\n-2010-12-04  Jan Hubicka  <jh@suse.cz>\n+2010-12-14  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR rtl-optimization/46875\n+\t* gcc.dg/pr46875.c: New.\n+\n+2010-12-14  Jan Hubicka  <jh@suse.cz>\n \n \t* g++.dg/other/first-global.C: Update regexp to match new\n \tnames of ctors."}, {"sha": "c601708dc11785b8d293cc20fd4d33d32d43c986", "filename": "gcc/testsuite/gcc.dg/pr46875.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46875.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4550bf7ad60d0233a4d9f36dcbbce32e75a3199/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46875.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46875.c?ref=b4550bf7ad60d0233a4d9f36dcbbce32e75a3199", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-options \"-Os -fselective-scheduling2\" } */\n+\n+long\n+foo (int x, long *y)\n+{\n+  long a = 0;\n+  switch (x)\n+    {\n+    case 0:\n+      a = *y;\n+      break;\n+    case 1:\n+      a = *y;\n+      break;\n+    case 2:\n+      a = *y;\n+      break;\n+    case 3:\n+      a = *y;\n+      break;\n+    case 4:\n+      a = *y;\n+      break;\n+    }\n+  return a;\n+}"}]}