{"sha": "ca5b80f372eaa171a61ed011d94a1ebf05493e90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E1YjgwZjM3MmVhYTE3MWE2MWVkMDExZDk0YTFlYmYwNTQ5M2U5MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-11-01T21:40:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-11-01T21:40:42Z"}, "message": "fix typo\n\nFrom-SVN: r89960", "tree": {"sha": "8eaae8905596e8b11ae126cf2561f976deafb65a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8eaae8905596e8b11ae126cf2561f976deafb65a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca5b80f372eaa171a61ed011d94a1ebf05493e90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5b80f372eaa171a61ed011d94a1ebf05493e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5b80f372eaa171a61ed011d94a1ebf05493e90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5b80f372eaa171a61ed011d94a1ebf05493e90/comments", "author": null, "committer": null, "parents": [{"sha": "124e22d446fa5b008bfa1d66a110413e0c286a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/124e22d446fa5b008bfa1d66a110413e0c286a1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/124e22d446fa5b008bfa1d66a110413e0c286a1c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "34b57e8ff380bbc5901cd43c2f5f7066633f9792", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca5b80f372eaa171a61ed011d94a1ebf05493e90/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca5b80f372eaa171a61ed011d94a1ebf05493e90/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ca5b80f372eaa171a61ed011d94a1ebf05493e90", "patch": "@@ -566,7 +566,7 @@ finish_expr_stmt (tree expr)\n \tconvert_to_void (build_non_dependent_expr (expr), \"statement\");\n \n       /* Simplification of inner statement expressions, compound exprs,\n-\t etc can result in the us already having an EXPR_STMT.  */\n+\t etc can result in us already having an EXPR_STMT.  */\n       if (TREE_CODE (expr) != CLEANUP_POINT_EXPR)\n \t{\n \t  if (TREE_CODE (expr) != EXPR_STMT)"}]}