{"sha": "9f1621753772745306133818df81270a1d758a88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYxNjIxNzUzNzcyNzQ1MzA2MTMzODE4ZGY4MTI3MGExZDc1OGE4OA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@gnat.com", "date": "2004-10-27T12:29:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T12:29:44Z"}, "message": "clean.adb (Delete): Do not output warnings when in quiet output and not in verbose mode.\n\n2004-10-26  Vincent Celier  <celier@gnat.com>\n\n\t* clean.adb (Delete): Do not output warnings when in quiet output and\n\tnot in verbose mode.\n\t(Force_Deletions): New Boolean flag, defaulted to False\n\t(Delete): Only delete a file if it is writable, and when\n\tForce_Deletions is True.\n\t(Parse_Cmd_Line): New switch -f: set Force_Deletions to True\n\t(Usage): Line for new switch -f\n\t(Clean_Directory): Use GNAT.OS_Lib.Set_Writable instead of rolling our\n\town.\n\nFrom-SVN: r89646", "tree": {"sha": "953be9d71c1531b1ebb6586597e93766228368c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/953be9d71c1531b1ebb6586597e93766228368c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f1621753772745306133818df81270a1d758a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1621753772745306133818df81270a1d758a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f1621753772745306133818df81270a1d758a88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1621753772745306133818df81270a1d758a88/comments", "author": null, "committer": null, "parents": [{"sha": "28e4d64e1b77c4cab1c85bf1fb21cc665ed24b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e4d64e1b77c4cab1c85bf1fb21cc665ed24b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e4d64e1b77c4cab1c85bf1fb21cc665ed24b6e"}], "stats": {"total": 59, "additions": 35, "deletions": 24}, "files": [{"sha": "1abfc801647b46e66bacbbbf011fdc6061b24518", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 35, "deletions": 24, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f1621753772745306133818df81270a1d758a88/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f1621753772745306133818df81270a1d758a88/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=9f1621753772745306133818df81270a1d758a88", "patch": "@@ -43,7 +43,6 @@ with Prj.Ext;\n with Prj.Pars;\n with Prj.Util; use Prj.Util;\n with Snames;\n-with System;\n with Table;\n with Types;    use Types;\n \n@@ -66,7 +65,7 @@ package body Clean is\n    Debug_Suffix    : String          := \".dg\";\n    --  Changed to \"_dg\" for VMS in the body of the package\n \n-   Repinfo_Suffix  : String          := \".rep\";\n+   Repinfo_Suffix  : String := \".rep\";\n    --  Changed to \"_rep\" for VMS in the body of the package\n \n    B_Start : String := \"b~\";\n@@ -76,6 +75,10 @@ package body Clean is\n    Object_Directory_Path : String_Access := null;\n    --  The path name of the object directory, set with switch -D\n \n+   Force_Deletions : Boolean := False;\n+   --  Set to True by switch -f. When True, attempts to delete non writable\n+   --  files will be done.\n+\n    Do_Nothing : Boolean := False;\n    --  Set to True when switch -n is specified.\n    --  When True, no file is deleted. gnatclean only lists the files that\n@@ -93,7 +96,7 @@ package body Clean is\n \n    All_Projects : Boolean := False;\n \n-   --  Packages of project files where unknown attributes are errors.\n+   --  Packages of project files where unknown attributes are errors\n \n    Naming_String   : aliased String := \"naming\";\n    Builder_String  : aliased String := \"builder\";\n@@ -142,10 +145,10 @@ package body Clean is\n    --  If Lib_File is not marked, inserts it at the end of Q and mark it\n \n    function Empty_Q return Boolean;\n-   --  Returns True if Q is empty.\n+   --  Returns True if Q is empty\n \n    procedure Extract_From_Q (Lib_File : out File_Name_Type);\n-   --  Extracts the first element from the Q.\n+   --  Extracts the first element from the Q\n \n    Q_Front : Natural;\n    --  Points to the first valid element in the Q.\n@@ -364,9 +367,6 @@ package body Clean is\n       Name : String (1 .. 200);\n       Last : Natural;\n \n-      procedure Set_Writable (Name : System.Address);\n-      pragma Import (C, Set_Writable, \"__gnat_set_writable\");\n-\n    begin\n       Change_Dir (Directory);\n       Open (Direc, \".\");\n@@ -380,8 +380,7 @@ package body Clean is\n \n          if Is_Regular_File (Name (1 .. Last)) then\n             if not Do_Nothing then\n-               Name (Last + 1) := ASCII.NUL;\n-               Set_Writable (Name (1)'Address);\n+               Set_Writable (Name (1 .. Last));\n             end if;\n \n             Delete (Directory, Name (1 .. Last));\n@@ -799,7 +798,7 @@ package body Clean is\n       --  interface copy dir and, for a Stand-Alone Library, the binder\n       --  generated files of the library.\n \n-      --  The directories are cleaned only if switch -c is not specified.\n+      --  The directories are cleaned only if switch -c is not specified\n \n       if Data.Library then\n          if not Compile_Only then\n@@ -867,10 +866,10 @@ package body Clean is\n          end;\n       end if;\n \n-         --  For the main project, delete the executables and the\n-         --  binder generated files.\n+         --  For the main project, delete the executables and the binder\n+         --  generated files.\n \n-         --  The executables are deleted only if switch -c is not specified.\n+         --  The executables are deleted only if switch -c is not specified\n \n       if Project = Main_Project and then Data.Exec_Directory /= No_Name then\n          declare\n@@ -950,20 +949,28 @@ package body Clean is\n       if Do_Nothing then\n          Put_Line (Full_Name (1 .. Last));\n \n-      --  Otherwise, delete the file\n+      --  Otherwise, delete the file if it is writable\n \n       else\n-         Delete_File (Full_Name (1 .. Last), Success);\n+         if Force_Deletions\n+           or else Is_Writable_File (Full_Name (1 .. Last))\n+         then\n+            Delete_File (Full_Name (1 .. Last), Success);\n+         else\n+            Success := False;\n+         end if;\n \n-         if not Success then\n-            Put (\"Warning: \"\"\");\n-            Put (Full_Name (1 .. Last));\n-            Put_Line (\"\"\" could not be deleted\");\n+         if Verbose_Mode or else not Quiet_Output then\n+            if not Success then\n+               Put (\"Warning: \"\"\");\n+               Put (Full_Name (1 .. Last));\n+               Put_Line (\"\"\" could not be deleted\");\n \n-         elsif Verbose_Mode or else not Quiet_Output then\n-            Put (\"\"\"\");\n-            Put (Full_Name (1 .. Last));\n-            Put_Line (\"\"\" has been deleted\");\n+            else\n+               Put (\"\"\"\");\n+               Put (Full_Name (1 .. Last));\n+               Put_Line (\"\"\" has been deleted\");\n+            end if;\n          end if;\n       end if;\n    end Delete;\n@@ -1383,6 +1390,9 @@ package body Clean is\n                            end;\n                         end if;\n \n+                     when 'f' =>\n+                        Force_Deletions := True;\n+\n                      when 'F' =>\n                         Full_Path_Name_For_Brief_Errors := True;\n \n@@ -1591,6 +1601,7 @@ package body Clean is\n \n          Put_Line (\"  -c       Only delete compiler generated files\");\n          Put_Line (\"  -D dir   Specify dir as the object library\");\n+         Put_Line (\"  -f       Force deletions of unwritable files\");\n          Put_Line (\"  -F       Full project path name \" &\n                    \"in brief error messages\");\n          Put_Line (\"  -h       Display this message\");"}]}