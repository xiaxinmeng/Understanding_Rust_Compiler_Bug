{"sha": "19d5775a094c1b1955413a8017dc7164da55425a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlkNTc3NWEwOTRjMWIxOTU1NDEzYTgwMTdkYzcxNjRkYTU1NDI1YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-08T11:15:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-08T11:15:02Z"}, "message": "(movsi matcher): Merge TARGET_POWER and !TARGET_POWER cases.\n\nRationalize mnemonics.\n(movhi and movqi matchers): Likewise.\n(movsf matcher): Correct length attribute for stfs which no longer\nincludes frsp.\n\nFrom-SVN: r8038", "tree": {"sha": "64540651bab34c245ef88b7a77e20f8a7f7fd22e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64540651bab34c245ef88b7a77e20f8a7f7fd22e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19d5775a094c1b1955413a8017dc7164da55425a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19d5775a094c1b1955413a8017dc7164da55425a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19d5775a094c1b1955413a8017dc7164da55425a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19d5775a094c1b1955413a8017dc7164da55425a/comments", "author": null, "committer": null, "parents": [{"sha": "a4b970a05f5524edf6127d07d016b1fb169c4c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b970a05f5524edf6127d07d016b1fb169c4c2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b970a05f5524edf6127d07d016b1fb169c4c2e"}], "stats": {"total": 70, "additions": 11, "deletions": 59}, "files": [{"sha": "c8148776d3150d12a6a0edc4d4f903bf75bf5444", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 11, "deletions": 59, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19d5775a094c1b1955413a8017dc7164da55425a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19d5775a094c1b1955413a8017dc7164da55425a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=19d5775a094c1b1955413a8017dc7164da55425a", "patch": "@@ -1289,7 +1289,6 @@\n \t\t   (zero_extend:DI (match_dup 1)) (const_int 32))\n \t\t  (zero_extend:DI (match_dup 4)))\n \t (match_dup 3)))]\n-  \n   \"TARGET_POWER\"\n   \"div %0,%1,%3\"\n   [(set_attr \"type\" \"idiv\")])\n@@ -3559,36 +3558,20 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,*q,*c*l,*h\")\n \t(match_operand:SI 1 \"input_operand\" \"r,m,r,I,J,*h,r,r,0\"))]\n-  \"TARGET_POWER && (gpc_reg_operand (operands[0], SImode)\n-   || gpc_reg_operand (operands[1], SImode))\"\n+  \"gpc_reg_operand (operands[0], SImode)\n+   || gpc_reg_operand (operands[1], SImode)\"\n   \"@\n    mr %0,%1\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%X0|stw%U0%X0} %1,%0\n-   {cal %0,%1(0)|li %0,%1}\n-   {cau %0,0,%u1|lis %0,%u1}\n+   {lil|li} %0,%1\n+   {liu|lis} %0,%u1\n    mf%1 %0\n    mt%0 %1\n    mt%0 %1\n    cror 0,0,0\"\n   [(set_attr \"type\" \"*,load,*,*,*,*,*,mtjmpr,*\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,*h,*h\")\n-\t(match_operand:SI 1 \"input_operand\" \"r,m,r,I,J,*h,r,0\"))]\n-  \"! TARGET_POWER && (gpc_reg_operand (operands[0], SImode)\n-   || gpc_reg_operand (operands[1], SImode))\"\n-  \"@\n-   mr %0,%1\n-   lwz%U1%X1 %0,%1\n-   stw%U0%X0 %1,%0\n-   li %0,%1\n-   lis %0,%u1\n-   mf%1 %0\n-   mt%0 %1\n-   cror 0,0,0\"\n-  [(set_attr \"type\" \"*,load,*,*,*,*,mtjmpr,*\")])\n-\n ;; Split a load of a large constant into the appropriate two-insn\n ;; sequence.\n \n@@ -3640,34 +3623,19 @@\n (define_insn \"\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*q,*c*l,*h\")\n \t(match_operand:HI 1 \"input_operand\" \"r,m,r,i,*h,r,r,0\"))]\n-  \"TARGET_POWER && (gpc_reg_operand (operands[0], HImode)\n-   || gpc_reg_operand (operands[1], HImode))\"\n+  \"gpc_reg_operand (operands[0], HImode)\n+   || gpc_reg_operand (operands[1], HImode)\"\n   \"@\n    mr %0,%1\n    lhz%U1%X1 %0,%1\n    sth%U0%X0 %1,%0\n-   {cal %0,%w1(0)|li %0,%w1}\n+   {lil|li} %0,%w1\n    mf%1 %0\n    mt%0 %1\n    mt%0 %1\n    cror 0,0,0\"\n   [(set_attr \"type\" \"*,load,*,*,*,*,mtjmpr,*\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*h,*h\")\n-\t(match_operand:HI 1 \"input_operand\" \"r,m,r,i,*h,r,0\"))]\n-  \"! TARGET_POWER && (gpc_reg_operand (operands[0], HImode)\n-   || gpc_reg_operand (operands[1], HImode))\"\n-  \"@\n-   mr %0,%1\n-   lhz%U1%X1 %0,%1\n-   sth%U0%X0 %1,%0\n-   li %0,%w1\n-   mf%1 %0\n-   mt%0 %1\n-   cror 0,0,0\"\n-  [(set_attr \"type\" \"*,load,*,*,*,mtjmpr,*\")])\n-\n (define_expand \"movqi\"\n   [(set (match_operand:QI 0 \"general_operand\" \"\")\n \t(match_operand:QI 1 \"any_operand\" \"\"))]\n@@ -3690,33 +3658,18 @@\n (define_insn \"\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*q,*c*l,*h\")\n \t(match_operand:QI 1 \"input_operand\" \"r,m,r,i,*h,r,r,0\"))]\n-  \"TARGET_POWER && (gpc_reg_operand (operands[0], QImode)\n-   || gpc_reg_operand (operands[1], QImode))\"\n+  \"gpc_reg_operand (operands[0], QImode)\n+   || gpc_reg_operand (operands[1], QImode)\"\n   \"@\n    mr %0,%1\n    lbz%U1%X1 %0,%1\n    stb%U0%X0 %1,%0\n-   {cal %0,%1(0)|li %0,%1}\n+   {lil|li} %0,%1\n    mf%1 %0\n    mt%0 %1\n    mt%0 %1\n    cror 0,0,0\"\n   [(set_attr \"type\" \"*,load,*,*,*,*,mtjmpr,*\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,m,r,r,*h,*h\")\n-\t(match_operand:QI 1 \"input_operand\" \"r,m,r,i,*h,r,0\"))]\n-  \"! TARGET_POWER && (gpc_reg_operand (operands[0], QImode)\n-   || gpc_reg_operand (operands[1], QImode))\"\n-  \"@\n-   mr %0,%1\n-   lbz%U1%X1 %0,%1\n-   stb%U0%X0 %1,%0\n-   li %0,%1\n-   mf%1 %0\n-   mt%0 %1\n-   cror 0,0,0\"\n-  [(set_attr \"type\" \"*,load,*,*,*,mtjmpr,*\")])\n \f\n ;; Here is how to move condition codes around.  When we store CC data in\n ;; an integer register or memory, we store just the high-order 4 bits.\n@@ -3861,8 +3814,7 @@\n    fmr %0,%1\n    lfs%U1%X1 %0,%1\n    stfs%U0%X0 %1,%0\"\n-  [(set_attr \"type\" \"fp,fpload,*\")\n-   (set_attr \"length\" \"*,*,8\")])\n+  [(set_attr \"type\" \"fp,fpload,*\")])\n \f\n (define_expand \"movdf\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")"}]}