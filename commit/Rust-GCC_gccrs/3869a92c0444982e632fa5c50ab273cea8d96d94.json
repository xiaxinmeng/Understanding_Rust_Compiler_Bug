{"sha": "3869a92c0444982e632fa5c50ab273cea8d96d94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg2OWE5MmMwNDQ0OTgyZTYzMmZhNWM1MGFiMjczY2VhOGQ5NmQ5NA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2004-09-15T12:59:22Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-09-15T12:59:22Z"}, "message": "env.c (getenv, [...]): Remove trailing white space.\n\n2004-09-15  Steven G. Kargl  <kargls@comcast.net>\n\tPaul Brook  <paul@codesourcery.com>\n\n\t* intrinsics/env.c (getenv, get_environmental_variable): Remove\n\ttrailing white space.  Uase alloca.  Honour trim_name.\n\nCo-Authored-By: Paul Brook <paul@codesourcery.com>\n\nFrom-SVN: r87547", "tree": {"sha": "2c658a42f84abc016d1b86fdc5a18900f704319a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c658a42f84abc016d1b86fdc5a18900f704319a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3869a92c0444982e632fa5c50ab273cea8d96d94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3869a92c0444982e632fa5c50ab273cea8d96d94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3869a92c0444982e632fa5c50ab273cea8d96d94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3869a92c0444982e632fa5c50ab273cea8d96d94/comments", "author": null, "committer": null, "parents": [{"sha": "c36992ffc805eb5ca8c32cb83dd9dc9b1e1a2142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36992ffc805eb5ca8c32cb83dd9dc9b1e1a2142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c36992ffc805eb5ca8c32cb83dd9dc9b1e1a2142"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "3dc56bce90e207541990858d5041e63e72ed9df5", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3869a92c0444982e632fa5c50ab273cea8d96d94/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3869a92c0444982e632fa5c50ab273cea8d96d94/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=3869a92c0444982e632fa5c50ab273cea8d96d94", "patch": "@@ -1,3 +1,9 @@\n+2004-09-15  Steven G. Kargl  <kargls@comcast.net>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* intrinsics/env.c (getenv, get_environmental_variable): Remove\n+\ttrailing white space.  Uase alloca.  Honour trim_name.\n+\n 2004-09-13  Bud Davis  <bdavis9659@comcast.net>\n \n \tPR fortran/17090"}, {"sha": "b50c1f056dc077fbee813d425c4564d8f782838d", "filename": "libgfortran/intrinsics/env.c", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3869a92c0444982e632fa5c50ab273cea8d96d94/libgfortran%2Fintrinsics%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3869a92c0444982e632fa5c50ab273cea8d96d94/libgfortran%2Fintrinsics%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fenv.c?ref=3869a92c0444982e632fa5c50ab273cea8d96d94", "patch": "@@ -24,6 +24,7 @@ Boston, MA 02111-1307, USA.  */\n #include <sys/types.h>\n #include <stdlib.h>\n #include <string.h>\n+#include <alloca.h>\n #include \"libgfortran.h\"\n \n \n@@ -37,13 +38,7 @@ prefix(getenv) (char * name,\n \t\tgfc_charlen_type name_len, \n \t\tgfc_charlen_type value_len)\n {\n-\n-  /* Make a null-terminated copy of the name string so that c library\n-     functions work correctly.  This is a C99 VLA, which ought to be\n-     faster than malloc and free.  */\n-\n-  char name_nt[name_len+1];\n-\n+  char *name_nt;\n   char *res = NULL;\n   int res_len;\n \n@@ -55,8 +50,14 @@ prefix(getenv) (char * name,\n   else\n     memset (value, ' ', value_len); /* Blank the string.  */\n \n+  /* Trim trailing spaces from name.  */\n+  while (name_len > 0 && name[name_len - 1] == ' ')\n+    name_len--;\n+\n+  /* Make a null terminated copy of the string.  */\n+  name_nt = alloca (name_len + 1);\n   memcpy (name_nt, name, name_len);\n-  memset (&name_nt[name_len], '\\0', 1); \n+  name_nt[name_len] = '\\0'; \n \n   res = getenv(name_nt);\n \n@@ -74,9 +75,7 @@ prefix(getenv) (char * name,\n \n \n /* GET_ENVIRONMENT_VARIABLE (name, [value, length, status, trim_name])\n-   is a F2003 intrinsic for getting an environment variable.  Note that as\n-   Un*x doesn't consider trailing blanks in environment variables to be\n-   significant, the trim_name argument has no meaning.  */\n+   is a F2003 intrinsic for getting an environment variable.  */\n \n /* Status codes specifyed by the standard. */\n #define GFC_SUCCESS 0\n@@ -103,7 +102,8 @@ prefix(get_environment_variable_i4)\n    gfc_charlen_type value_len)\n {\n   int stat = GFC_SUCCESS, res_len = 0;\n-  char name_nt[name_len+1], *res;\n+  char *name_nt;\n+  char *res;\n \n   if (name == NULL)\n     runtime_error (\"Name is required for get_environment_variable.\");\n@@ -124,8 +124,16 @@ prefix(get_environment_variable_i4)\n \tmemset (value, ' ', value_len); /* Blank the string.  */\n     }\n \n+  if ((!trim_name) || *trim_name)\n+    {\n+      /* Trim trailing spaces from name.  */\n+      while (name_len > 0 && name[name_len - 1] == ' ')\n+\tname_len--;\n+    }\n+  /* Make a null terminated copy of the name.  */\n+  name_nt = alloca (name_len + 1);\n   memcpy (name_nt, name, name_len);\n-  memset (&name_nt[name_len], '\\0', 1); \n+  name_nt[name_len] = '\\0'; \n   \n   res = getenv(name_nt);\n \n@@ -170,6 +178,9 @@ prefix(get_environment_variable_i8)\n   GFC_INTEGER_4 length4, status4;\n   GFC_LOGICAL_4 trim_name4;\n \n+  if (trim_name)\n+    trim_name4 = *trim_name;\n+\n   prefix (get_environment_variable_i4) (name, value, &length4, &status4, \n \t\t\t\t\t&trim_name4, name_len, value_len);\n "}]}