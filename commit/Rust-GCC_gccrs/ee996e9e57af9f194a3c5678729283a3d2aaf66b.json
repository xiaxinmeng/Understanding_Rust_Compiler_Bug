{"sha": "ee996e9e57af9f194a3c5678729283a3d2aaf66b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU5OTZlOWU1N2FmOWYxOTRhM2M1Njc4NzI5MjgzYTNkMmFhZjY2Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-12-06T01:33:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-12-06T01:33:10Z"}, "message": "decl2.c (coerce_new_type): Use same_type_p.\n\n\t* decl2.c (coerce_new_type): Use same_type_p.\n\t(coerce_delete_type): Likewise.\n\t* call.c (check_dtor_name): Return 1, not error_mark_node.\n\nFrom-SVN: r24122", "tree": {"sha": "a7a2348a5c52c1ad0e3dc39dcfbe28b9fdd4ad7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7a2348a5c52c1ad0e3dc39dcfbe28b9fdd4ad7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee996e9e57af9f194a3c5678729283a3d2aaf66b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee996e9e57af9f194a3c5678729283a3d2aaf66b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee996e9e57af9f194a3c5678729283a3d2aaf66b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee996e9e57af9f194a3c5678729283a3d2aaf66b/comments", "author": null, "committer": null, "parents": [{"sha": "02e3377d92148cb2d53d58aec19ce080107db49b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e3377d92148cb2d53d58aec19ce080107db49b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02e3377d92148cb2d53d58aec19ce080107db49b"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "fa87972bfe76b058a15944fbb7a426094bfbe6aa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee996e9e57af9f194a3c5678729283a3d2aaf66b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee996e9e57af9f194a3c5678729283a3d2aaf66b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ee996e9e57af9f194a3c5678729283a3d2aaf66b", "patch": "@@ -1,3 +1,10 @@\n+1998-12-05  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl2.c (coerce_new_type): Use same_type_p.\n+\t(coerce_delete_type): Likewise.\n+\n+\t* call.c (check_dtor_name): Return 1, not error_mark_node.\n+\n 1998-12-04  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* lex.c (handle_cp_pragma): Disable #pragma interface/implementation"}, {"sha": "ea8874532ce97cef1068a4b0ae56afa31c47ed84", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee996e9e57af9f194a3c5678729283a3d2aaf66b/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee996e9e57af9f194a3c5678729283a3d2aaf66b/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=ee996e9e57af9f194a3c5678729283a3d2aaf66b", "patch": "@@ -347,8 +347,9 @@ check_dtor_name (basetype, name)\n {\n   name = TREE_OPERAND (name, 0);\n \n+  /* Just accept something we've already complained about.  */\n   if (name == error_mark_node)\n-    return error_mark_node;\n+    return 1;\n \n   if (TREE_CODE (name) == TYPE_DECL)\n     name = TREE_TYPE (name);"}, {"sha": "f2ba726efabfc6d319dbd13b2097033585c08789", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee996e9e57af9f194a3c5678729283a3d2aaf66b/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee996e9e57af9f194a3c5678729283a3d2aaf66b/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=ee996e9e57af9f194a3c5678729283a3d2aaf66b", "patch": "@@ -2285,15 +2285,14 @@ coerce_new_type (type)\n \n   if (TREE_CODE (type) == METHOD_TYPE)\n     type = build_function_type (TREE_TYPE (type), TREE_CHAIN (TYPE_ARG_TYPES (type)));\n-  if (TREE_TYPE (type) != ptr_type_node)\n+  if (! same_type_p (TREE_TYPE (type), ptr_type_node))\n     e1 = 1, error (\"`operator new' must return type `void *'\");\n \n   /* Technically the type must be `size_t', but we may not know\n      what that is.  */\n   if (TYPE_ARG_TYPES (type) == NULL_TREE)\n     e1 = 1, error (\"`operator new' takes type `size_t' parameter\");\n-  else if (TREE_CODE (TREE_VALUE (TYPE_ARG_TYPES (type))) != INTEGER_TYPE\n-\t   || TYPE_PRECISION (TREE_VALUE (TYPE_ARG_TYPES (type))) != TYPE_PRECISION (sizetype))\n+  else if (! same_type_p (TREE_VALUE (TYPE_ARG_TYPES (type)), sizetype))\n     e2 = 1, error (\"`operator new' takes type `size_t' as first parameter\");\n   if (e2)\n     type = build_function_type (ptr_type_node, tree_cons (NULL_TREE, sizetype, TREE_CHAIN (TYPE_ARG_TYPES (type))));\n@@ -2322,7 +2321,7 @@ coerce_delete_type (type)\n     e1 = 1, error (\"`operator delete' must return type `void'\");\n \n   if (arg_types == NULL_TREE\n-      || TREE_VALUE (arg_types) != ptr_type_node)\n+      || ! same_type_p (TREE_VALUE (arg_types), ptr_type_node))\n     e2 = 1, error (\"`operator delete' takes type `void *' as first parameter\");\n \n #if 0\n@@ -2333,8 +2332,7 @@ coerce_delete_type (type)\n       /* Again, technically this argument must be `size_t', but again\n \t we may not know what that is.  */\n       tree t2 = TREE_VALUE (TREE_CHAIN (arg_types));\n-      if (TREE_CODE (t2) != INTEGER_TYPE\n-\t  || TYPE_PRECISION (t2) != TYPE_PRECISION (sizetype))\n+      if (! same_type_p (t2, sizetype))\n \te3 = 1, error (\"second argument to `operator delete' must be of type `size_t'\");\n       else if (TREE_CHAIN (TREE_CHAIN (arg_types)) != void_list_node)\n \t{"}]}