{"sha": "ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UwOWY4YjNmMjQwOTk0ZDRmOWVjYzJlOTVlOGUwYmJkNzhlYjNmNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-26T12:45:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-26T12:45:45Z"}, "message": "[multiple changes]\n\n2010-10-26  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.ads (Treat_Categorization_Errors_As_Warnings): New flag\n\t* sem_cat.adb (Check_Categorization_Dependencies):\n\tUse Check_Categorization_Dependencies\n\t* switch-c.adb: GNAT Mode sets Treat_Categorization_Errors_As_Warnings\n\t-gnateP sets Treat_Categorization_Errors_As_Warnings\n\t* usage.adb: Add line for -gnateP switch\n\n2010-10-26  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.adb (Add_Internal_Interface_Entities): Handle primitives\n\tinherited from the parent that cover interface primitives.\n\t(Derive_Progenitor_Subprograms): Handle primitives inherited from\n\tthe parent that cover interface primitives.\n\t* sem_disp.adb (Find_Primitive_Covering_Interface): When searching in\n\tthe list of primitives of the type extend the test to include inherited\n\tprivate primitives.\n\t* sem_ch6.ads (Is_Interface_Conformant): Add missing documentation.\n\t* sem_ch7.adb (Declare_Inherited_Private_Subprograms): Add missing\n\tbarrier to the loop searching for explicit overriding primitives.\n\t* sem_ch4.adb (Analyze_Indexed_Component_Form): Add missing barrier\n\tbefore accessing attribute Entity.\n\n2010-10-26  Bob Duff  <duff@adacore.com>\n\n\t* make.adb: Call Namet.Finalize, so we can get statistics.\n\nFrom-SVN: r165952", "tree": {"sha": "d18805d6b80e73483f9434539b8fb989680f11bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d18805d6b80e73483f9434539b8fb989680f11bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/comments", "author": null, "committer": null, "parents": [{"sha": "f9673bb07a907dc644420d95858531e3699394e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9673bb07a907dc644420d95858531e3699394e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9673bb07a907dc644420d95858531e3699394e2"}], "stats": {"total": 122, "additions": 113, "deletions": 9}, "files": [{"sha": "07d35a44385935a3dcbb9699be0e5d5488a27a34", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -1,3 +1,31 @@\n+2010-10-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.ads (Treat_Categorization_Errors_As_Warnings): New flag\n+\t* sem_cat.adb (Check_Categorization_Dependencies):\n+\tUse Check_Categorization_Dependencies\n+\t* switch-c.adb: GNAT Mode sets Treat_Categorization_Errors_As_Warnings\n+\t-gnateP sets Treat_Categorization_Errors_As_Warnings\n+\t* usage.adb: Add line for -gnateP switch\n+\n+2010-10-26  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Add_Internal_Interface_Entities): Handle primitives\n+\tinherited from the parent that cover interface primitives.\n+\t(Derive_Progenitor_Subprograms): Handle primitives inherited from\n+\tthe parent that cover interface primitives.\n+\t* sem_disp.adb (Find_Primitive_Covering_Interface): When searching in\n+\tthe list of primitives of the type extend the test to include inherited\n+\tprivate primitives.\n+\t* sem_ch6.ads (Is_Interface_Conformant): Add missing documentation.\n+\t* sem_ch7.adb (Declare_Inherited_Private_Subprograms): Add missing\n+\tbarrier to the loop searching for explicit overriding primitives.\n+\t* sem_ch4.adb (Analyze_Indexed_Component_Form): Add missing barrier\n+\tbefore accessing attribute Entity.\n+\n+2010-10-26  Bob Duff  <duff@adacore.com>\n+\n+\t* make.adb: Call Namet.Finalize, so we can get statistics.\n+\n 2010-10-26  Geert Bosch  <bosch@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Use the subprogram_body"}, {"sha": "639a5afc035b06d6ef2d87fc4b88659c62bd38df", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -6511,6 +6511,10 @@ package body Make is\n \n       Delete_All_Temp_Files;\n \n+      --  Output Namet statistics\n+\n+      Namet.Finalize;\n+\n    exception\n       when X : others =>\n          Set_Standard_Error;"}, {"sha": "45e44fb40aa0b7459f231bdd5607b4a867c4b821", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -41,10 +41,10 @@\n with Hostparm; use Hostparm;\n with Types;    use Types;\n \n-with System.WCh_Con; use System.WCh_Con;\n-\n pragma Warnings (Off);\n+--  This package is used also by gnatcoll\n with System.Strings; use System.Strings;\n+with System.WCh_Con; use System.WCh_Con;\n pragma Warnings (On);\n \n package Opt is\n@@ -1230,6 +1230,11 @@ package Opt is\n    --  Tolerate time stamp and other consistency errors. If this flag is set to\n    --  True (-t), then inconsistencies result in warnings rather than errors.\n \n+   Treat_Categorization_Errors_As_Warnings : Boolean := False;\n+   --  Normally categorization errors are true illegalities. If this switch\n+   --  is set, then such errors result in warning messages rather than error\n+   --  messages. Set True by -gnatg or -gnateP (P for Pure/Preelaborate).\n+\n    Treat_Restrictions_As_Warnings : Boolean := False;\n    --  GNAT\n    --  Set True to treat pragma Restrictions as Restriction_Warnings. Set by"}, {"sha": "a4edd3e52a0b2222b6082f34ca8f30115cb5dff3", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -226,10 +226,10 @@ package body Sem_Cat is\n \n       if Err then\n \n-         --  These messages are warnings in GNAT mode, to allow it to be\n-         --  judiciously turned off. Otherwise it is a real error.\n+         --  These messages are warnings in GNAT mode or if the -gnateC switch\n+         --  was set. Otherwise these are real errors for real illegalities.\n \n-         Error_Msg_Warn := GNAT_Mode;\n+         Error_Msg_Warn := Treat_Categorization_Errors_As_Warnings;\n \n          --  Don't give error if main unit is not an internal unit, and the\n          --  unit generating the message is an internal unit. This is the"}, {"sha": "33a5044a83b31db979d15d05754c0fa751b7d4b0", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -1572,6 +1572,26 @@ package body Sem_Ch3 is\n \n                pragma Assert (Present (Prim));\n \n+               --  Ada 2012 (AI05-0197): If the name of the covering primitive\n+               --  differs from the name of the interface primitive then it is\n+               --  a private primitive inherited from a parent type. In such\n+               --  case, given that Tagged_Type covers the interface, the\n+               --  inherited private primitive becomes visible. For such\n+               --  purpose we add a new entity that renames the inherited\n+               --  private primitive.\n+\n+               if Chars (Prim) /= Chars (Iface_Prim) then\n+                  pragma Assert (Has_Suffix (Prim, 'P'));\n+                  Derive_Subprogram\n+                    (New_Subp     => New_Subp,\n+                     Parent_Subp  => Iface_Prim,\n+                     Derived_Type => Tagged_Type,\n+                     Parent_Type  => Iface);\n+                  Set_Alias (New_Subp, Prim);\n+                  Set_Is_Abstract_Subprogram (New_Subp,\n+                    Is_Abstract_Subprogram (Prim));\n+               end if;\n+\n                Derive_Subprogram\n                  (New_Subp     => New_Subp,\n                   Parent_Subp  => Iface_Prim,\n@@ -12416,6 +12436,22 @@ package body Sem_Ch3 is\n                      Derive_Subprogram\n                        (New_Subp, Iface_Subp, Tagged_Type, Iface);\n \n+                  --  Ada 2012 (AI05-0197): If the covering primitive's name\n+                  --  differs from the name of the interface primitive then it\n+                  --  is a private primitive inherited from a parent type. In\n+                  --  such case, given that Tagged_Type covers the interface,\n+                  --  the inherited private primitive becomes visible. For such\n+                  --  purpose we add a new entity that renames the inherited\n+                  --  private primitive.\n+\n+                  elsif Chars (E) /= Chars (Iface_Subp) then\n+                     pragma Assert (Has_Suffix (E, 'P'));\n+                     Derive_Subprogram\n+                       (New_Subp, Iface_Subp, Tagged_Type, Iface);\n+                     Set_Alias (New_Subp, E);\n+                     Set_Is_Abstract_Subprogram (New_Subp,\n+                       Is_Abstract_Subprogram (E));\n+\n                   --  Propagate to the full view interface entities associated\n                   --  with the partial view\n "}, {"sha": "1cb54c468aa1b60c17369a86a398801b1f0c417d", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -2155,7 +2155,9 @@ package body Sem_Ch4 is\n \n       P_T := Base_Type (Etype (P));\n \n-      if Is_Entity_Name (P) then\n+      if Is_Entity_Name (P)\n+        and then Present (Entity (P))\n+      then\n          U_N := Entity (P);\n \n          if Is_Type (U_N) then"}, {"sha": "39dc1147a91782b1e276d04d8b53322a10af85fa", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -186,9 +186,10 @@ package Sem_Ch6 is\n      (Tagged_Type : Entity_Id;\n       Iface_Prim  : Entity_Id;\n       Prim        : Entity_Id) return Boolean;\n-   --  Returns true if both primitives have a matching name, they are type\n-   --  conformant, and Prim is defined in the scope of Tagged_Type. Special\n-   --  management is done for functions returning interfaces.\n+   --  Returns true if both primitives have a matching name (including support\n+   --  for names of inherited private primitives --which have suffix 'P'), they\n+   --  are type conformant, and Prim is defined in the scope of Tagged_Type.\n+   --  Special management is done for functions returning interfaces.\n \n    procedure List_Inherited_Pre_Post_Aspects (E : Entity_Id);\n    --  E is the entity for a subprogram or generic subprogram spec. This call"}, {"sha": "e9f9facaf447a858f0a7e582fac1d1c33d200b72", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -1527,8 +1527,15 @@ package body Sem_Ch7 is\n \n                      Op_Elmt_2 := Next_Elmt (Op_Elmt);\n                      while Present (Op_Elmt_2) loop\n+\n+                        --  Skip entities with attribute Interface_Alias since\n+                        --  they are not overriding primitives (these entities\n+                        --  link an interface primitive with their covering\n+                        --  primitive)\n+\n                         if Chars (Node (Op_Elmt_2)) = Chars (Parent_Subp)\n                           and then Type_Conformant (Prim_Op, Node (Op_Elmt_2))\n+                          and then No (Interface_Alias (Node (Op_Elmt_2)))\n                         then\n                            --  The private inherited operation has been\n                            --  overridden by an explicit subprogram: replace"}, {"sha": "55330b99d095b4e57b8084e9a056180ebaa28fd7", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -1817,6 +1817,13 @@ package body Sem_Disp is\n                end if;\n             end if;\n \n+            --  Check if E covers the interface primitive (includes case in\n+            --  which E is an inherited private primitive)\n+\n+            if Is_Interface_Conformant (Tagged_Type, Iface_Prim, E) then\n+               return E;\n+            end if;\n+\n          --  Use the internal entity that links the interface primitive with\n          --  the covering primitive to locate the entity\n "}, {"sha": "4e63e3177bb20f0370952b759ffc4b99eb4b622b", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -495,6 +495,11 @@ package body Switch.C is\n \n                      Ptr := Max + 1;\n \n+                  --  -gnateP (Treat pragma Pure/Preelaborate errs as warnings)\n+\n+                  when 'P' =>\n+                     Treat_Categorization_Errors_As_Warnings := True;\n+\n                   --  -gnatez (final delimiter of explicit switches)\n \n                   --  All switches that come after -gnatez have been added by\n@@ -562,6 +567,10 @@ package body Switch.C is\n                Set_GNAT_Mode_Warnings;\n                Set_GNAT_Style_Check_Options;\n \n+               --  Other special modes set by -gnatg\n+\n+               Treat_Categorization_Errors_As_Warnings := True;\n+\n             --  Processing for G switch\n \n             when 'G' =>"}, {"sha": "4d395b4dc607bed8e92317d27f9968d9545da853", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=ce09f8b3f240994d4f9ecc2e95e8e0bbd78eb3f5", "patch": "@@ -207,6 +207,11 @@ begin\n    Write_Switch_Char (\"ep=?\");\n    Write_Line (\"Specify preprocessing data file, e.g. -gnatep=prep.data\");\n \n+   --  Line for -gnateP switch\n+\n+   Write_Switch_Char (\"eP\");\n+   Write_Line (\"Pure/Prelaborate errors generate warnings rather than errors\");\n+\n    --  Line for -gnateS switch\n \n    Write_Switch_Char (\"eS\");"}]}