{"sha": "08f424143c105ec8e610e01a4ee09d96d1eaa823", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhmNDI0MTQzYzEwNWVjOGU2MTBlMDFhNGVlMDlkOTZkMWVhYTgyMw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2017-06-23T12:44:07Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2017-06-23T12:44:07Z"}, "message": "ira.c (update_equiv_regs): Revert to using may_trap_or_fault_p again.\n\n2017-06-23  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        rtl-optimizatoin/79286\n        * ira.c (update_equiv_regs): Revert to using may_trap_or_fault_p again.\n        * rtlanal.c (rtx_addr_can_trap_p_1): SYMBOL_REF_FUNCTION_P can never\n        trap.  PIC register plus a const unspec without offset can never trap.\n\nFrom-SVN: r249588", "tree": {"sha": "892f77d0c25f7c9466a953d82453e67a199eb7b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/892f77d0c25f7c9466a953d82453e67a199eb7b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08f424143c105ec8e610e01a4ee09d96d1eaa823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f424143c105ec8e610e01a4ee09d96d1eaa823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08f424143c105ec8e610e01a4ee09d96d1eaa823", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f424143c105ec8e610e01a4ee09d96d1eaa823/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2db9b7cd422b63fe0a87218128cc0939b439859e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db9b7cd422b63fe0a87218128cc0939b439859e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db9b7cd422b63fe0a87218128cc0939b439859e"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "b3a9adda731b1e485616c2a8347eef5fd18712bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f424143c105ec8e610e01a4ee09d96d1eaa823/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f424143c105ec8e610e01a4ee09d96d1eaa823/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08f424143c105ec8e610e01a4ee09d96d1eaa823", "patch": "@@ -1,3 +1,10 @@\n+2017-06-23  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\trtl-optimizatoin/79286\n+\t* ira.c (update_equiv_regs): Revert to using may_trap_or_fault_p again.\n+\t* rtlanal.c (rtx_addr_can_trap_p_1): SYMBOL_REF_FUNCTION_P can never\n+\ttrap.  PIC register plus a const unspec without offset can never trap.\n+\n 2017-06-23  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* tree.h (builtin_structptr_type): New type."}, {"sha": "08a1cc550b24ff31375fa9ecaf6bb3dd7d9065ba", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f424143c105ec8e610e01a4ee09d96d1eaa823/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f424143c105ec8e610e01a4ee09d96d1eaa823/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=08f424143c105ec8e610e01a4ee09d96d1eaa823", "patch": "@@ -3551,7 +3551,8 @@ update_equiv_regs (void)\n \t  if (DF_REG_DEF_COUNT (regno) == 1\n \t      && note\n \t      && !rtx_varies_p (XEXP (note, 0), 0)\n-\t      && def_dominates_uses (regno))\n+\t      && (!may_trap_or_fault_p (XEXP (note, 0))\n+\t\t  || def_dominates_uses (regno)))\n \t    {\n \t      rtx note_value = XEXP (note, 0);\n \t      remove_note (insn, note);"}, {"sha": "bf4183e793dcb07ecdc511b8fdff3560141cf8e8", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f424143c105ec8e610e01a4ee09d96d1eaa823/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f424143c105ec8e610e01a4ee09d96d1eaa823/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=08f424143c105ec8e610e01a4ee09d96d1eaa823", "patch": "@@ -485,7 +485,7 @@ rtx_addr_can_trap_p_1 (const_rtx x, HOST_WIDE_INT offset, HOST_WIDE_INT size,\n     case SYMBOL_REF:\n       if (SYMBOL_REF_WEAK (x))\n \treturn 1;\n-      if (!CONSTANT_POOL_ADDRESS_P (x))\n+      if (!CONSTANT_POOL_ADDRESS_P (x) && !SYMBOL_REF_FUNCTION_P (x))\n \t{\n \t  tree decl;\n \t  HOST_WIDE_INT decl_size;\n@@ -644,8 +644,11 @@ rtx_addr_can_trap_p_1 (const_rtx x, HOST_WIDE_INT offset, HOST_WIDE_INT size,\n \n     case PLUS:\n       /* An address is assumed not to trap if:\n-         - it is the pic register plus a constant.  */\n-      if (XEXP (x, 0) == pic_offset_table_rtx && CONSTANT_P (XEXP (x, 1)))\n+\t - it is the pic register plus a const unspec without offset.  */\n+      if (XEXP (x, 0) == pic_offset_table_rtx\n+\t  && GET_CODE (XEXP (x, 1)) == CONST\n+\t  && GET_CODE (XEXP (XEXP (x, 1), 0)) == UNSPEC\n+\t  && offset == 0)\n \treturn 0;\n \n       /* - or it is an address that can't trap plus a constant integer.  */"}]}