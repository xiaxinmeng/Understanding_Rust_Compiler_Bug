{"sha": "0c61f5414d8f8df2d10e7d7898b715796fad5684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2MWY1NDE0ZDhmOGRmMmQxMGU3ZDc4OThiNzE1Nzk2ZmFkNTY4NA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1999-08-15T20:08:12Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1999-08-15T20:08:12Z"}, "message": "Fix misuses of MAX_MACHINE_MODE that can result in an infinite loop.\n\n\t* explow.c (hard_function_value): Use VOIDmode instead of\n\tMAX_MACHINE_MODE.\n\t* stmt.c (expand_return): Likewise.\n\t* stor-layout.c (get_best_mode): Likewise.\n\nFrom-SVN: r28717", "tree": {"sha": "628dc0d63ba7285efc78eb5dc42dd3491930fe05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/628dc0d63ba7285efc78eb5dc42dd3491930fe05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c61f5414d8f8df2d10e7d7898b715796fad5684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c61f5414d8f8df2d10e7d7898b715796fad5684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c61f5414d8f8df2d10e7d7898b715796fad5684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c61f5414d8f8df2d10e7d7898b715796fad5684/comments", "author": null, "committer": null, "parents": [{"sha": "d3ca5cdd6c49d1d8e1d384db19f82c35c73db194", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ca5cdd6c49d1d8e1d384db19f82c35c73db194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ca5cdd6c49d1d8e1d384db19f82c35c73db194"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "1f5106db9fa81fe123cad1d56ea45e24fb30dca5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c61f5414d8f8df2d10e7d7898b715796fad5684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c61f5414d8f8df2d10e7d7898b715796fad5684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c61f5414d8f8df2d10e7d7898b715796fad5684", "patch": "@@ -1,5 +1,10 @@\n Sun Aug 15 12:41:21 1999  Jim Wilson  <wilson@cygnus.com>\n \n+\t* explow.c (hard_function_value): Use VOIDmode instead of\n+\tMAX_MACHINE_MODE.\n+\t* stmt.c (expand_return): Likewise.\n+\t* stor-layout.c (get_best_mode): Likewise.\n+\t\n \t* genemit.c (gen_expand): If next is MATCH_PAR_DUP, then output\n \temit call instead of emit_insn call.\n "}, {"sha": "2e0de41a70af2f16df27e8988692be12e63f2722", "filename": "gcc/explow.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c61f5414d8f8df2d10e7d7898b715796fad5684/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c61f5414d8f8df2d10e7d7898b715796fad5684/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=0c61f5414d8f8df2d10e7d7898b715796fad5684", "patch": "@@ -1529,7 +1529,7 @@ hard_function_value (valtype, func)\n       int bytes = int_size_in_bytes (valtype);\n       enum machine_mode tmpmode;\n       for (tmpmode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n-           tmpmode != MAX_MACHINE_MODE;\n+           tmpmode != VOIDmode;\n            tmpmode = GET_MODE_WIDER_MODE (tmpmode))\n         {\n           /* Have we found a large enough mode?  */\n@@ -1538,7 +1538,7 @@ hard_function_value (valtype, func)\n         }\n \n       /* No suitable mode found.  */\n-      if (tmpmode == MAX_MACHINE_MODE)\n+      if (tmpmode == VOIDmode)\n         abort ();\n \n       PUT_MODE (val, tmpmode);"}, {"sha": "9cfc70067a4cc45c4022cdc83ec159527e5356d9", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c61f5414d8f8df2d10e7d7898b715796fad5684/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c61f5414d8f8df2d10e7d7898b715796fad5684/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=0c61f5414d8f8df2d10e7d7898b715796fad5684", "patch": "@@ -2817,7 +2817,7 @@ expand_return (retval)\n \t on the USE insn for the return register.   */\n       bytes = int_size_in_bytes (TREE_TYPE (retval_rhs));\n       for (tmpmode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n-\t   tmpmode != MAX_MACHINE_MODE;\n+\t   tmpmode != VOIDmode;\n \t   tmpmode = GET_MODE_WIDER_MODE (tmpmode))\n \t{\n \t  /* Have we found a large enough mode?  */\n@@ -2826,7 +2826,7 @@ expand_return (retval)\n \t}\n \n       /* No suitable mode found.  */\n-      if (tmpmode == MAX_MACHINE_MODE)\n+      if (tmpmode == VOIDmode)\n \tabort ();\n \n       PUT_MODE (DECL_RTL (DECL_RESULT (current_function_decl)), tmpmode);"}, {"sha": "408846ae9896c2a1c4f9d328b53148f69a0d9e46", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c61f5414d8f8df2d10e7d7898b715796fad5684/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c61f5414d8f8df2d10e7d7898b715796fad5684/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=0c61f5414d8f8df2d10e7d7898b715796fad5684", "patch": "@@ -1352,7 +1352,7 @@ get_best_mode (bitsize, bitpos, align, largest_mode, volatilep)\n \tbreak;\n     }\n \n-  if (mode == MAX_MACHINE_MODE\n+  if (mode == VOIDmode\n       /* It is tempting to omit the following line\n \t if STRICT_ALIGNMENT is true.\n \t But that is incorrect, since if the bitfield uses part of 3 bytes"}]}