{"sha": "69349ea551c84f1a40c8cb51342ea8075eece875", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzNDllYTU1MWM4NGYxYTQwYzhjYjUxMzQyZWE4MDc1ZWVjZTg3NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-02-04T20:09:30Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-02-04T20:09:30Z"}, "message": "AVX Programming Reference (January, 2009)\n\ngcc/\n\n2009-02-04  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tAVX Programming Reference (January, 2009)\n\t* config/i386/sse.md (*vpclmulqdq): New.\n\ngcc/testsuite/\n\n2009-02-04  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tAVX Programming Reference (January, 2009)\n\t* gcc.target/i386/avx-vpclmulqdq.c: New.\n\t* gcc.target/i386/pclmul-avx-check.h: Likewise.\n\n\t* gcc.target/i386/i386.exp (check_effective_target_vpclmul): New.\n\n\t* gcc.target/i386/pclmulqdq.c (CHECK_H): New.\n\t(TEST): Likewise.\n\tInclude CHECK_H instead of \"pclmul-check.h\".\n\t(pclmul_test): Renamed to ...\n\t(TEST): This.\n\nFrom-SVN: r143938", "tree": {"sha": "8009e2c3dbd830c2f7c99de61c55394dd716ba36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8009e2c3dbd830c2f7c99de61c55394dd716ba36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69349ea551c84f1a40c8cb51342ea8075eece875", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69349ea551c84f1a40c8cb51342ea8075eece875", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69349ea551c84f1a40c8cb51342ea8075eece875", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69349ea551c84f1a40c8cb51342ea8075eece875/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b545e4117b7464cc051e0f62c00bd390fda2c066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b545e4117b7464cc051e0f62c00bd390fda2c066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b545e4117b7464cc051e0f62c00bd390fda2c066"}], "stats": {"total": 99, "additions": 96, "deletions": 3}, "files": [{"sha": "763db97661346b0e770967921d86c3b716e20287", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69349ea551c84f1a40c8cb51342ea8075eece875", "patch": "@@ -1,3 +1,8 @@\n+2009-02-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tAVX Programming Reference (January, 2009)\n+\t* config/i386/sse.md (*vpclmulqdq): New.\n+\n 2009-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/38977"}, {"sha": "a54133378b592cbfda4a82278fe51872c0b1a4f8", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=69349ea551c84f1a40c8cb51342ea8075eece875", "patch": "@@ -11509,6 +11509,18 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*vpclmulqdq\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")\n+\t\t      (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+\t\t     UNSPEC_PCLMUL))]\n+  \"TARGET_PCLMUL && TARGET_AVX\"\n+  \"vpclmulqdq\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"pclmulqdq\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"0\")"}, {"sha": "e4f877dc47ae460cee6fc1e48bdbf788decfbb5b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69349ea551c84f1a40c8cb51342ea8075eece875", "patch": "@@ -1,3 +1,17 @@\n+2009-02-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tAVX Programming Reference (January, 2009)\n+\t* gcc.target/i386/avx-vpclmulqdq.c: New.\n+\t* gcc.target/i386/pclmul-avx-check.h: Likewise.\n+\n+\t* gcc.target/i386/i386.exp (check_effective_target_vpclmul): New.\n+\n+\t* gcc.target/i386/pclmulqdq.c (CHECK_H): New.\n+\t(TEST): Likewise.\n+\tInclude CHECK_H instead of \"pclmul-check.h\".\n+\t(pclmul_test): Renamed to ...\n+\t(TEST): This.\n+\n 2009-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/39095"}, {"sha": "9b015abcd487e62932550ce7e21d93c487649b08", "filename": "gcc/testsuite/gcc.target/i386/avx-vpclmulqdq.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpclmulqdq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpclmulqdq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpclmulqdq.c?ref=69349ea551c84f1a40c8cb51342ea8075eece875", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target vpclmul } */\n+/* { dg-options \"-O2 -mpclmul -mavx\" } */\n+\n+#define CHECK_H \"pclmul-avx-check.h\"\n+#define TEST pclmul_avx_test\n+\n+#include \"pclmulqdq.c\""}, {"sha": "fa470e11a66f13eac66f7565f94de4bdc4acb6fc", "filename": "gcc/testsuite/gcc.target/i386/i386.exp", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp?ref=69349ea551c84f1a40c8cb51342ea8075eece875", "patch": "@@ -92,6 +92,21 @@ proc check_effective_target_pclmul { } {\n     } \"-O2 -mpclmul\" ]\n }\n \n+# Return 1 if vpclmul instructions can be compiled.\n+proc check_effective_target_vpclmul { } {\n+    return [check_no_compiler_messages vpclmul object {\n+\ttypedef long long __m128i __attribute__ ((__vector_size__ (16)));\n+\ttypedef long long __v2di __attribute__ ((__vector_size__ (16)));\n+\n+\t__m128i pclmulqdq_test (__m128i __X, __m128i __Y)\n+\t{\n+\t    return (__m128i) __builtin_ia32_pclmulqdq128 ((__v2di)__X,\n+\t\t\t\t\t\t\t  (__v2di)__Y,\n+\t\t\t\t\t\t\t  1);\n+\t}\n+    } \"-O2 -mpclmul -mavx\" ]\n+}\n+\n # Return 1 if sse4a instructions can be compiled.\n proc check_effective_target_sse4a { } {\n     return [check_no_compiler_messages sse4a object {"}, {"sha": "de633336157173760db8b2f1364228850dadf415", "filename": "gcc/testsuite/gcc.target/i386/pclmul-avx-check.h", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpclmul-avx-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpclmul-avx-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpclmul-avx-check.h?ref=69349ea551c84f1a40c8cb51342ea8075eece875", "patch": "@@ -0,0 +1,31 @@\n+#ifdef DEBUG\n+#include <stdio.h>\n+#endif\n+#include <stdlib.h>\n+#include \"cpuid.h\"\n+\n+static void pclmul_avx_test (void);\n+\n+int\n+main ()\n+{\n+  unsigned int eax, ebx, ecx, edx;\n+ \n+  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n+    return 0;\n+\n+  /* Run PCLMUL + AVX test only if host has PCLMUL + AVX support.  */\n+  if ((ecx & (bit_AVX | bit_PCLMUL)) == (bit_AVX | bit_PCLMUL))\n+    {\n+      pclmul_avx_test ();\n+#ifdef DEBUG\n+      printf (\"PASSED\\n\");\n+#endif\n+    }\n+#ifdef DEBUG\n+  else\n+    printf (\"SKIPPED\\n\");\n+#endif\n+\n+  return 0;\n+}"}, {"sha": "1c1d2aabeb617f5e17996a9e7e0c8acf22ed7ac2", "filename": "gcc/testsuite/gcc.target/i386/pclmulqdq.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpclmulqdq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69349ea551c84f1a40c8cb51342ea8075eece875/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpclmulqdq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpclmulqdq.c?ref=69349ea551c84f1a40c8cb51342ea8075eece875", "patch": "@@ -2,11 +2,19 @@\n /* { dg-require-effective-target pclmul } */\n /* { dg-options \"-O2 -mpclmul\" } */\n \n+#ifndef CHECK_H\n+#define CHECK_H \"pclmul-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST pclmul_test\n+#endif\n+\n+#include CHECK_H\n+\n #include <wmmintrin.h>\n #include <string.h>\n \n-#include \"pclmul-check.h\"\n-\n extern void abort (void);\n \n #define NUM 1024\n@@ -54,7 +62,7 @@ init_data (__m128i *ls1,   __m128i *ls2, __m128i *le_00, __m128i *le_01,\n }\n \n static void\n-pclmul_test (void)\n+TEST (void)\n {\n   int i;\n "}]}