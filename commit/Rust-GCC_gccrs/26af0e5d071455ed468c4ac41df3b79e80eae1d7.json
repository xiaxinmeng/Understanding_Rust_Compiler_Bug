{"sha": "26af0e5d071455ed468c4ac41df3b79e80eae1d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZhZjBlNWQwNzE0NTVlZDQ2OGM0YWM0MWRmM2I3OWU4MGVhZTFkNw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2003-04-13T03:56:20Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2003-04-13T03:56:20Z"}, "message": "* os/hpux/ctype_inline.h: Replace with gnu-linux version.\n\nFrom-SVN: r65542", "tree": {"sha": "2a172b9ea851842161f89e8eba00057194db4d3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a172b9ea851842161f89e8eba00057194db4d3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26af0e5d071455ed468c4ac41df3b79e80eae1d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26af0e5d071455ed468c4ac41df3b79e80eae1d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26af0e5d071455ed468c4ac41df3b79e80eae1d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26af0e5d071455ed468c4ac41df3b79e80eae1d7/comments", "author": null, "committer": null, "parents": [{"sha": "6d0c8bb1bc7a4f41ed1b6d57c9ff16f6a84fee69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0c8bb1bc7a4f41ed1b6d57c9ff16f6a84fee69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0c8bb1bc7a4f41ed1b6d57c9ff16f6a84fee69"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "afe8a1ca81fe852214f11940da49dcdaad47bb92", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26af0e5d071455ed468c4ac41df3b79e80eae1d7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26af0e5d071455ed468c4ac41df3b79e80eae1d7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=26af0e5d071455ed468c4ac41df3b79e80eae1d7", "patch": "@@ -1,3 +1,7 @@\n+2003-04-12  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* os/hpux/ctype_inline.h: Replace with gnu-linux version.\n+\n 2003-04-12  David Edelsohn  <edelsohn@gnu.org>\n \n \t* testsuite/27_io/basic_istream/sentry/char/3983-fstream.cc:"}, {"sha": "af409c87629b10a189841c98b76f46a3551b3d5b", "filename": "libstdc++-v3/config/os/hpux/ctype_inline.h", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26af0e5d071455ed468c4ac41df3b79e80eae1d7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26af0e5d071455ed468c4ac41df3b79e80eae1d7/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_inline.h?ref=26af0e5d071455ed468c4ac41df3b79e80eae1d7", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,30 +36,24 @@\n   \n   bool\n   ctype<char>::\n-  is(mask __m, char __c) const \n-  { return _M_table[(unsigned char)(__c)] & __m; }\n+  is(mask __m, char __c) const\n+  { return _M_table[static_cast<unsigned char>(__c)] & __m; }\n \n   const char*\n   ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const \n+  is(const char* __low, const char* __high, mask* __vec) const\n   {\n-    const int __bitmasksize = 11; // Highest bitmask in ctype_base == 10\n-    for (;__low < __high; ++__vec, ++__low)\n-      {\n-        mask __m = _M_table[*__low];\n-        int __i = 0; // Lowest bitmask in ctype_base == 0\n-        while (__i < __bitmasksize && !(__m & static_cast<mask>(1 << __i)))\n-          ++__i;\n-        *__vec = static_cast<mask>(1 << __i);\n-      }\n+    while (__low < __high)\n+      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];\n     return __high;\n   }\n \n   const char*\n   ctype<char>::\n   scan_is(mask __m, const char* __low, const char* __high) const\n   {\n-    while (__low < __high && !this->is(__m, *__low))\n+    while (__low < __high \n+\t   && !(_M_table[static_cast<unsigned char>(*__low)] & __m))\n       ++__low;\n     return __low;\n   }\n@@ -68,12 +62,8 @@\n   ctype<char>::\n   scan_not(mask __m, const char* __low, const char* __high) const\n   {\n-    while (__low < __high && this->is(__m, *__low) != 0)\n+    while (__low < __high \n+\t   && (_M_table[static_cast<unsigned char>(*__low)] & __m) != 0)\n       ++__low;\n     return __low;\n   }\n-\n-\n-\n-\n-"}]}