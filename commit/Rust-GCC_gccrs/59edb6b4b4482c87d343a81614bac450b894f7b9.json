{"sha": "59edb6b4b4482c87d343a81614bac450b894f7b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTllZGI2YjRiNDQ4MmM4N2QzNDNhODE2MTRiYWM0NTBiODk0ZjdiOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-10-22T12:40:31Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-10-22T12:40:31Z"}, "message": "* cpplib.pot: Regenerate.\n\nFrom-SVN: r117954", "tree": {"sha": "664ba1e56ad6c0b6c84035426ac8d4cbd1f89ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/664ba1e56ad6c0b6c84035426ac8d4cbd1f89ac8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59edb6b4b4482c87d343a81614bac450b894f7b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59edb6b4b4482c87d343a81614bac450b894f7b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59edb6b4b4482c87d343a81614bac450b894f7b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59edb6b4b4482c87d343a81614bac450b894f7b9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "803b1dc23b31afce95bd5c310ac716f29cf830af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/803b1dc23b31afce95bd5c310ac716f29cf830af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/803b1dc23b31afce95bd5c310ac716f29cf830af"}], "stats": {"total": 286, "additions": 159, "deletions": 127}, "files": [{"sha": "b84b46eac9ec88fec29ab08616249935f6229c5a", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59edb6b4b4482c87d343a81614bac450b894f7b9/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59edb6b4b4482c87d343a81614bac450b894f7b9/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=59edb6b4b4482c87d343a81614bac450b894f7b9", "patch": "@@ -1,3 +1,7 @@\n+2006-10-22  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2006-09-03  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* vi.po: Update."}, {"sha": "7ab0efbc0c626e25ac13e945b62caf51eddeb671", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 155, "deletions": 127, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59edb6b4b4482c87d343a81614bac450b894f7b9/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59edb6b4b4482c87d343a81614bac450b894f7b9/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=59edb6b4b4482c87d343a81614bac450b894f7b9", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2005-11-20 18:04+0000\\n\"\n+\"POT-Creation-Date: 2006-10-22 12:14+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -154,216 +154,230 @@ msgstr \"\"\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n \n-#: directives.c:219\n-#: directives.c:245\n+#: directives.c:214\n+#: directives.c:240\n #, c-format\n msgid \"extra tokens at end of #%s directive\"\n msgstr \"\"\n \n-#: directives.c:346\n+#: directives.c:343\n #, c-format\n msgid \"#%s is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:358\n+#: directives.c:355\n msgid \"suggest not using #elif in traditional C\"\n msgstr \"\"\n \n-#: directives.c:361\n+#: directives.c:358\n #, c-format\n msgid \"traditional C ignores #%s with the # indented\"\n msgstr \"\"\n \n-#: directives.c:365\n+#: directives.c:362\n #, c-format\n msgid \"suggest hiding #%s from traditional C with an indented #\"\n msgstr \"\"\n \n-#: directives.c:391\n+#: directives.c:388\n msgid \"embedding a directive within macro arguments is not portable\"\n msgstr \"\"\n \n-#: directives.c:411\n+#: directives.c:408\n msgid \"style of line directive is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:461\n+#: directives.c:458\n #, c-format\n msgid \"invalid preprocessing directive #%s\"\n msgstr \"\"\n \n-#: directives.c:532\n+#: directives.c:524\n msgid \"\\\"defined\\\" cannot be used as a macro name\"\n msgstr \"\"\n \n-#: directives.c:538\n+#: directives.c:530\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name as it is an operator in C++\"\n msgstr \"\"\n \n-#: directives.c:541\n+#: directives.c:533\n #, c-format\n msgid \"no macro name given in #%s directive\"\n msgstr \"\"\n \n-#: directives.c:544\n+#: directives.c:536\n msgid \"macro names must be identifiers\"\n msgstr \"\"\n \n-#: directives.c:585\n+#: directives.c:577\n #, c-format\n msgid \"undefining \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:640\n+#: directives.c:632\n msgid \"missing terminating > character\"\n msgstr \"\"\n \n-#: directives.c:695\n+#: directives.c:687\n #, c-format\n msgid \"#%s expects \\\"FILENAME\\\" or <FILENAME>\"\n msgstr \"\"\n \n-#: directives.c:735\n+#: directives.c:727\n #, c-format\n msgid \"empty filename in #%s\"\n msgstr \"\"\n \n-#: directives.c:745\n+#: directives.c:737\n msgid \"#include nested too deeply\"\n msgstr \"\"\n \n-#: directives.c:786\n+#: directives.c:778\n msgid \"#include_next in primary source file\"\n msgstr \"\"\n \n-#: directives.c:812\n+#: directives.c:804\n #, c-format\n msgid \"invalid flag \\\"%s\\\" in line directive\"\n msgstr \"\"\n \n-#: directives.c:864\n+#: directives.c:856\n #, c-format\n msgid \"\\\"%s\\\" after #line is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:870\n+#: directives.c:862\n msgid \"line number out of range\"\n msgstr \"\"\n \n-#: directives.c:883\n-#: directives.c:960\n+#: directives.c:875\n+#: directives.c:952\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.c:920\n+#: directives.c:912\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:1022\n+#: directives.c:1014\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1111\n+#: directives.c:1077\n+#, c-format\n+msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n+msgstr \"\"\n+\n+#: directives.c:1086\n+#, c-format\n+msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n+msgstr \"\"\n+\n+#: directives.c:1104\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1114\n+#: directives.c:1107\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1117\n+#: directives.c:1110\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1317\n+#: directives.c:1140\n+msgid \"registering pragma with NULL handler\"\n+msgstr \"\"\n+\n+#: directives.c:1350\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1340\n+#: directives.c:1373\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1349\n+#: directives.c:1382\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1370\n+#: directives.c:1403\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1394\n+#: directives.c:1427\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1398\n+#: directives.c:1431\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1512\n+#: directives.c:1599\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:1613\n+#: directives.c:1671\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:1618\n+#: directives.c:1676\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:1620\n-#: directives.c:1653\n+#: directives.c:1678\n+#: directives.c:1711\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:1646\n+#: directives.c:1704\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:1651\n+#: directives.c:1709\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:1681\n+#: directives.c:1739\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:1758\n+#: directives.c:1816\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:1773\n+#: directives.c:1831\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:1793\n+#: directives.c:1851\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:1820\n+#: directives.c:1878\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:1822\n+#: directives.c:1880\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:1908\n+#: directives.c:1966\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2132\n+#: directives.c:2190\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n@@ -389,164 +403,169 @@ msgstr \"\"\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: expr.c:192\n+#: expr.c:203\n msgid \"too many decimal points in number\"\n msgstr \"\"\n \n-#: expr.c:212\n+#: expr.c:223\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in octal constant\"\n msgstr \"\"\n \n-#: expr.c:218\n+#: expr.c:229\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:227\n+#: expr.c:238\n msgid \"exponent has no digits\"\n msgstr \"\"\n \n-#: expr.c:234\n+#: expr.c:245\n msgid \"hexadecimal floating constants require an exponent\"\n msgstr \"\"\n \n-#: expr.c:240\n+#: expr.c:251\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:250 expr.c:275\n+#: expr.c:261 expr.c:295\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:261\n+#: expr.c:268\n+#, c-format\n+msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n+msgstr \"\"\n+\n+#: expr.c:281\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:283\n+#: expr.c:303\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:290\n+#: expr.c:310\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:376\n+#: expr.c:396\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:388\n+#: expr.c:408\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:470\n+#: expr.c:490\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:477\n+#: expr.c:497\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:485\n+#: expr.c:505\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:495\n+#: expr.c:515\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:534\n+#: expr.c:554\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:540\n+#: expr.c:560\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:585\n+#: expr.c:605\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:716 expr.c:745\n+#: expr.c:733 expr.c:762\n #, c-format\n msgid \"missing binary operator before token \\\"%s\\\"\"\n msgstr \"\"\n \n-#: expr.c:736\n+#: expr.c:753\n #, c-format\n msgid \"token \\\"%s\\\" is not valid in preprocessor expressions\"\n msgstr \"\"\n \n-#: expr.c:753\n+#: expr.c:770\n msgid \"missing expression between '(' and ')'\"\n msgstr \"\"\n \n-#: expr.c:756\n+#: expr.c:773\n msgid \"#if with no expression\"\n msgstr \"\"\n \n-#: expr.c:759\n+#: expr.c:776\n #, c-format\n msgid \"operator '%s' has no right operand\"\n msgstr \"\"\n \n-#: expr.c:764\n+#: expr.c:781\n #, c-format\n msgid \"operator '%s' has no left operand\"\n msgstr \"\"\n \n-#: expr.c:790\n+#: expr.c:807\n msgid \" ':' without preceding '?'\"\n msgstr \"\"\n \n-#: expr.c:817\n+#: expr.c:834\n msgid \"unbalanced stack in #if\"\n msgstr \"\"\n \n-#: expr.c:836\n+#: expr.c:853\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:928\n+#: expr.c:943\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:949\n+#: expr.c:964\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:959\n+#: expr.c:974\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:964\n+#: expr.c:979\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:996\n+#: expr.c:1011\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1001\n+#: expr.c:1016\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1260\n+#: expr.c:1275\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1359\n+#: expr.c:1358\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:1491\n+#: expr.c:1490\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n@@ -586,38 +605,38 @@ msgstr \"\"\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:400\n+#: init.c:407\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:404\n+#: init.c:411\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires %\"\n \"lu bits\"\n msgstr \"\"\n \n-#: init.c:411\n+#: init.c:418\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:414\n+#: init.c:421\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:418\n+#: init.c:425\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:422\n+#: init.c:429\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:427\n+#: init.c:434\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:431\n+#: init.c:438\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n@@ -678,28 +697,33 @@ msgstr \"\"\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:838\n+#: lex.c:650\n+#, c-format\n+msgid \"missing terminating %c character\"\n+msgstr \"\"\n+\n+#: lex.c:842\n msgid \"no newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:990\n+#: lex.c:1002\n #: traditional.c:162\n msgid \"unterminated comment\"\n msgstr \"\"\n \n-#: lex.c:1001\n+#: lex.c:1013\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:1003\n+#: lex.c:1015\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:1008\n+#: lex.c:1020\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:1331\n+#: lex.c:1333\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n@@ -716,115 +740,119 @@ msgid \"\"\n \"                 from %s:%u\"\n msgstr \"\"\n \n-#: macro.c:85\n+#: macro.c:83\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n-#: macro.c:124 macro.c:287\n+#: macro.c:122 macro.c:312\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:221\n+#: macro.c:156\n+msgid \"could not determine file timestamp\"\n+msgstr \"\"\n+\n+#: macro.c:253\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:391\n+#: macro.c:416\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:474\n+#: macro.c:466\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:512\n+#: macro.c:538\n msgid \"ISO C99 requires rest arguments to be used\"\n msgstr \"\"\n \n-#: macro.c:517\n+#: macro.c:543\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:522\n+#: macro.c:548\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:633\n+#: macro.c:659\n #: traditional.c:675\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:736\n+#: macro.c:762\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1252\n+#: macro.c:1278\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1298\n+#: macro.c:1324\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1306\n+#: macro.c:1332\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:1323\n+#: macro.c:1349\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:1340\n+#: macro.c:1366\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:1345\n+#: macro.c:1371\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:1354\n+#: macro.c:1380\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1432\n+#: macro.c:1458\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1456\n+#: macro.c:1482\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1486\n+#: macro.c:1512\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:1505\n+#: macro.c:1531\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:1603\n+#: macro.c:1629\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:1608\n+#: macro.c:1634\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:1658\n+#: macro.c:1684\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1681\n+#: macro.c:1707\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\""}]}