{"sha": "2a888d4cd0492cb7f0e00bee497da7e9a01bf439", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE4ODhkNGNkMDQ5MmNiN2YwZTAwYmVlNDk3ZGE3ZTlhMDFiZjQzOQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-03-08T23:44:26Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-03-08T23:44:26Z"}, "message": "expr.c (expand_expr, [...]): Delay putting the cleanup on the cleanup chain until after the subexpression...\n\n\t* expr.c (expand_expr, case TARGET_EXPR): Delay putting the cleanup\n\ton the cleanup chain until after the subexpression has been expanded.\nFixes eh44.C and eh45.C\n\nFrom-SVN: r11504", "tree": {"sha": "623144524a5bed163162917af323d1c6247e5a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/623144524a5bed163162917af323d1c6247e5a06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a888d4cd0492cb7f0e00bee497da7e9a01bf439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a888d4cd0492cb7f0e00bee497da7e9a01bf439", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a888d4cd0492cb7f0e00bee497da7e9a01bf439", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a888d4cd0492cb7f0e00bee497da7e9a01bf439/comments", "author": null, "committer": null, "parents": [{"sha": "23ccec44cc5dbdcca16d1e50ea649facf7e466eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ccec44cc5dbdcca16d1e50ea649facf7e466eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ccec44cc5dbdcca16d1e50ea649facf7e466eb"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "1765d6906ee2f71c3af9a8f318ab7c4a51786788", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a888d4cd0492cb7f0e00bee497da7e9a01bf439/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a888d4cd0492cb7f0e00bee497da7e9a01bf439/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=2a888d4cd0492cb7f0e00bee497da7e9a01bf439", "patch": "@@ -6588,7 +6588,6 @@ expand_expr (exp, target, tmode, modifier)\n \n     case TARGET_EXPR:\n       {\n-\tint need_exception_region = 0;\n \t/* Something needs to be initialized, but we didn't know\n \t   where that thing was when building the tree.  For example,\n \t   it could be the return value of a function, or a parameter\n@@ -6599,6 +6598,7 @@ expand_expr (exp, target, tmode, modifier)\n \t   or copied into our original target.  */\n \n \ttree slot = TREE_OPERAND (exp, 0);\n+\ttree cleanups = NULL_TREE;\n \ttree exp1;\n \trtx temp;\n \n@@ -6634,13 +6634,7 @@ expand_expr (exp, target, tmode, modifier)\n \n \t\tif (TREE_OPERAND (exp, 2) == 0)\n \t\t  TREE_OPERAND (exp, 2) = maybe_build_cleanup (slot);\n-\t\tif (TREE_OPERAND (exp, 2))\n-\t\t  {\n-\t\t    cleanups_this_call = tree_cons (NULL_TREE,\n-\t\t\t\t\t\t    TREE_OPERAND (exp, 2),\n-\t\t\t\t\t\t    cleanups_this_call);\n-\t\t    need_exception_region = 1;\n-\t\t  }\n+\t\tcleanups = TREE_OPERAND (exp, 2);\n \t      }\n \t  }\n \telse\n@@ -6671,8 +6665,13 @@ expand_expr (exp, target, tmode, modifier)\n \n \tstore_expr (exp1, target, 0);\n \n-\tif (need_exception_region)\n-\t  (*interim_eh_hook) (NULL_TREE);\n+\tif (cleanups)\n+\t  {\n+\t    cleanups_this_call = tree_cons (NULL_TREE,\n+\t\t\t\t\t    cleanups,\n+\t\t\t\t\t    cleanups_this_call);\n+\t    (*interim_eh_hook) (NULL_TREE);\n+\t  }\n \t\n \treturn target;\n       }"}]}