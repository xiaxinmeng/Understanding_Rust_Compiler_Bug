{"sha": "aef6a97c0e1463da3fc914b6782c7064dd889a62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmNmE5N2MwZTE0NjNkYTNmYzkxNGI2NzgyYzcwNjRkZDg4OWE2Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-21T14:40:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-21T14:40:30Z"}, "message": "re PR sanitizer/77567 (ASAN: Bugus error \"alloc-dealloc-mismatch (malloc vs operator delete [])\" with C++17's over-aligned types)\n\n\tPR sanitizer/77567\n\t* asan/asan_new_delete.cc: Cherry-pick upstream r282019.\n\nFrom-SVN: r240316", "tree": {"sha": "1f311382275078e5eadb5eabc54e37db16276cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f311382275078e5eadb5eabc54e37db16276cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef6a97c0e1463da3fc914b6782c7064dd889a62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef6a97c0e1463da3fc914b6782c7064dd889a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef6a97c0e1463da3fc914b6782c7064dd889a62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef6a97c0e1463da3fc914b6782c7064dd889a62/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de4c144ab7aa96173cba94ec92c4d12ac4190fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de4c144ab7aa96173cba94ec92c4d12ac4190fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de4c144ab7aa96173cba94ec92c4d12ac4190fa9"}], "stats": {"total": 67, "additions": 57, "deletions": 10}, "files": [{"sha": "0a5282e3e9df6de38cc4836c96af698bdc7776dc", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef6a97c0e1463da3fc914b6782c7064dd889a62/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef6a97c0e1463da3fc914b6782c7064dd889a62/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=aef6a97c0e1463da3fc914b6782c7064dd889a62", "patch": "@@ -1,3 +1,8 @@\n+2016-09-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/77567\n+\t* asan/asan_new_delete.cc: Cherry-pick upstream r282019.\n+\n 2016-09-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/77396"}, {"sha": "bf7a34ac87b4d9011631d25e57821ec3b607eb42", "filename": "libsanitizer/asan/asan_new_delete.cc", "status": "modified", "additions": 52, "deletions": 10, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef6a97c0e1463da3fc914b6782c7064dd889a62/libsanitizer%2Fasan%2Fasan_new_delete.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef6a97c0e1463da3fc914b6782c7064dd889a62/libsanitizer%2Fasan%2Fasan_new_delete.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2Fasan_new_delete.cc?ref=aef6a97c0e1463da3fc914b6782c7064dd889a62", "patch": "@@ -27,17 +27,30 @@\n \n using namespace __asan;  // NOLINT\n \n+// FreeBSD prior v9.2 have wrong definition of 'size_t'.\n+// http://svnweb.freebsd.org/base?view=revision&revision=232261\n+#if SANITIZER_FREEBSD && SANITIZER_WORDSIZE == 32\n+#include <sys/param.h>\n+#if __FreeBSD_version <= 902001  // v9.2\n+#define size_t unsigned\n+#endif  // __FreeBSD_version\n+#endif  // SANITIZER_FREEBSD && SANITIZER_WORDSIZE == 32\n+\n // This code has issues on OSX.\n // See https://code.google.com/p/address-sanitizer/issues/detail?id=131.\n \n-// Fake std::nothrow_t to avoid including <new>.\n+// Fake std::nothrow_t and std::align_val_t to avoid including <new>.\n namespace std {\n struct nothrow_t {};\n+enum class align_val_t: size_t {};\n }  // namespace std\n \n #define OPERATOR_NEW_BODY(type) \\\n   GET_STACK_TRACE_MALLOC;\\\n   return asan_memalign(0, size, &stack, type);\n+#define OPERATOR_NEW_BODY_ALIGN(type) \\\n+  GET_STACK_TRACE_MALLOC;\\\n+  return asan_memalign((uptr)align, size, &stack, type);\n \n // On OS X it's not enough to just provide our own 'operator new' and\n // 'operator delete' implementations, because they're going to be in the\n@@ -47,15 +60,6 @@ struct nothrow_t {};\n // To make sure that C++ allocation/deallocation operators are overridden on\n // OS X we need to intercept them using their mangled names.\n #if !SANITIZER_MAC\n-// FreeBSD prior v9.2 have wrong definition of 'size_t'.\n-// http://svnweb.freebsd.org/base?view=revision&revision=232261\n-#if SANITIZER_FREEBSD && SANITIZER_WORDSIZE == 32\n-#include <sys/param.h>\n-#if __FreeBSD_version <= 902001  // v9.2\n-#define size_t unsigned\n-#endif  // __FreeBSD_version\n-#endif  // SANITIZER_FREEBSD && SANITIZER_WORDSIZE == 32\n-\n CXX_OPERATOR_ATTRIBUTE\n void *operator new(size_t size) { OPERATOR_NEW_BODY(FROM_NEW); }\n CXX_OPERATOR_ATTRIBUTE\n@@ -66,6 +70,18 @@ void *operator new(size_t size, std::nothrow_t const&)\n CXX_OPERATOR_ATTRIBUTE\n void *operator new[](size_t size, std::nothrow_t const&)\n { OPERATOR_NEW_BODY(FROM_NEW_BR); }\n+CXX_OPERATOR_ATTRIBUTE\n+void *operator new(size_t size, std::align_val_t align)\n+{ OPERATOR_NEW_BODY_ALIGN(FROM_NEW); }\n+CXX_OPERATOR_ATTRIBUTE\n+void *operator new[](size_t size, std::align_val_t align)\n+{ OPERATOR_NEW_BODY_ALIGN(FROM_NEW_BR); }\n+CXX_OPERATOR_ATTRIBUTE\n+void *operator new(size_t size, std::align_val_t align, std::nothrow_t const&)\n+{ OPERATOR_NEW_BODY_ALIGN(FROM_NEW); }\n+CXX_OPERATOR_ATTRIBUTE\n+void *operator new[](size_t size, std::align_val_t align, std::nothrow_t const&)\n+{ OPERATOR_NEW_BODY_ALIGN(FROM_NEW_BR); }\n \n #else  // SANITIZER_MAC\n INTERCEPTOR(void *, _Znwm, size_t size) {\n@@ -113,6 +129,32 @@ void operator delete[](void *ptr, size_t size) NOEXCEPT {\n   GET_STACK_TRACE_FREE;\n   asan_sized_free(ptr, size, &stack, FROM_NEW_BR);\n }\n+CXX_OPERATOR_ATTRIBUTE\n+void operator delete(void *ptr, std::align_val_t) NOEXCEPT {\n+  OPERATOR_DELETE_BODY(FROM_NEW);\n+}\n+CXX_OPERATOR_ATTRIBUTE\n+void operator delete[](void *ptr, std::align_val_t) NOEXCEPT {\n+  OPERATOR_DELETE_BODY(FROM_NEW_BR);\n+}\n+CXX_OPERATOR_ATTRIBUTE\n+void operator delete(void *ptr, std::align_val_t, std::nothrow_t const&) {\n+  OPERATOR_DELETE_BODY(FROM_NEW);\n+}\n+CXX_OPERATOR_ATTRIBUTE\n+void operator delete[](void *ptr, std::align_val_t, std::nothrow_t const&) {\n+  OPERATOR_DELETE_BODY(FROM_NEW_BR);\n+}\n+CXX_OPERATOR_ATTRIBUTE\n+void operator delete(void *ptr, size_t size, std::align_val_t) NOEXCEPT {\n+  GET_STACK_TRACE_FREE;\n+  asan_sized_free(ptr, size, &stack, FROM_NEW);\n+}\n+CXX_OPERATOR_ATTRIBUTE\n+void operator delete[](void *ptr, size_t size, std::align_val_t) NOEXCEPT {\n+  GET_STACK_TRACE_FREE;\n+  asan_sized_free(ptr, size, &stack, FROM_NEW_BR);\n+}\n \n #else  // SANITIZER_MAC\n INTERCEPTOR(void, _ZdlPv, void *ptr) {"}]}