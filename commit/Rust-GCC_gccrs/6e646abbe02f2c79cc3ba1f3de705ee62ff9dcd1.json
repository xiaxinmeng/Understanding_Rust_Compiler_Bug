{"sha": "6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU2NDZhYmJlMDJmMmM3OWNjM2JhMWYzZGU3MDVlZTYyZmY5ZGNkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-24T11:10:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-24T11:10:25Z"}, "message": "fold-const: Fix up ((1 << x) & y) != 0 folding for vectors [PR99225]\n\nThis optimization was written purely with scalar integers in mind,\ncan work fine even with vectors, but we can't use build_int_cst but\nneed to use build_one_cst instead.\n\n2021-02-24  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/99225\n\t* fold-const.c (fold_binary_loc) <case NE_EXPR>: In (x & (1 << y)) != 0\n\tto ((x >> y) & 1) != 0 simplifications use build_one_cst instead of\n\tbuild_int_cst (..., 1).  Formatting fixes.\n\n\t* gcc.c-torture/compile/pr99225.c: New test.", "tree": {"sha": "51ff5a521c3955aa0a26f0666d119010f1e93563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ff5a521c3955aa0a26f0666d119010f1e93563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5296bd57d0605d1fec900d85e3ab3875197e609a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5296bd57d0605d1fec900d85e3ab3875197e609a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5296bd57d0605d1fec900d85e3ab3875197e609a"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "e0bdb4b6ba61d30ebefef52161eda8024a3cd041", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1", "patch": "@@ -12044,23 +12044,23 @@ fold_binary_loc (location_t loc, enum tree_code code, tree type,\n \t      && integer_onep (TREE_OPERAND (arg00, 0)))\n \t    {\n \t      tree tem = fold_build2_loc (loc, RSHIFT_EXPR, TREE_TYPE (arg00),\n-\t\t\t\t      arg01, TREE_OPERAND (arg00, 1));\n+\t\t\t\t\t  arg01, TREE_OPERAND (arg00, 1));\n \t      tem = fold_build2_loc (loc, BIT_AND_EXPR, TREE_TYPE (arg0), tem,\n-\t\t\t\t build_int_cst (TREE_TYPE (arg0), 1));\n+\t\t\t\t     build_one_cst (TREE_TYPE (arg0)));\n \t      return fold_build2_loc (loc, code, type,\n-\t\t\t\t  fold_convert_loc (loc, TREE_TYPE (arg1), tem),\n-\t\t\t\t  arg1);\n+\t\t\t\t      fold_convert_loc (loc, TREE_TYPE (arg1),\n+\t\t\t\t\t\t\ttem), arg1);\n \t    }\n \t  else if (TREE_CODE (arg01) == LSHIFT_EXPR\n \t\t   && integer_onep (TREE_OPERAND (arg01, 0)))\n \t    {\n \t      tree tem = fold_build2_loc (loc, RSHIFT_EXPR, TREE_TYPE (arg01),\n-\t\t\t\t      arg00, TREE_OPERAND (arg01, 1));\n+\t\t\t\t\t  arg00, TREE_OPERAND (arg01, 1));\n \t      tem = fold_build2_loc (loc, BIT_AND_EXPR, TREE_TYPE (arg0), tem,\n-\t\t\t\t build_int_cst (TREE_TYPE (arg0), 1));\n+\t\t\t\t     build_one_cst (TREE_TYPE (arg0)));\n \t      return fold_build2_loc (loc, code, type,\n-\t\t\t\t  fold_convert_loc (loc, TREE_TYPE (arg1), tem),\n-\t\t\t\t  arg1);\n+\t\t\t\t      fold_convert_loc (loc, TREE_TYPE (arg1),\n+\t\t\t\t\t\t\ttem), arg1);\n \t    }\n \t}\n "}, {"sha": "0ef7602035e89cd014e0e49508ef9a4e6463b4fe", "filename": "gcc/testsuite/gcc.c-torture/compile/pr99225.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr99225.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr99225.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr99225.c?ref=6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1", "patch": "@@ -0,0 +1,31 @@\n+/* PR tree-optimization/99225 */\n+\n+typedef int V __attribute__((vector_size (4 * sizeof (int))));\n+\n+void\n+foo (V *x)\n+{\n+  x[2] = (x[0] & (1 << x[1])) != 0;\n+}\n+\n+void\n+bar (V *x)\n+{\n+  x[2] = ((1 << x[1]) & x[0]) != 0;\n+}\n+\n+void\n+baz (V *x)\n+{\n+  V a = 1 << x[1];\n+  V b = a & x[0];\n+  x[2] = b != 0;\n+}\n+\n+void\n+qux (V *x)\n+{\n+  V a = 1 << x[1];\n+  V b = x[0] & a;\n+  x[2] = b != 0;\n+}"}]}