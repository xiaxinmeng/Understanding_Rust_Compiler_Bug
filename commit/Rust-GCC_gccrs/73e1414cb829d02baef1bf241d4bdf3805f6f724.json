{"sha": "73e1414cb829d02baef1bf241d4bdf3805f6f724", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNlMTQxNGNiODI5ZDAyYmFlZjFiZjI0MWQ0YmRmMzgwNWY2ZjcyNA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-10-05T15:21:40Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-10-05T15:21:40Z"}, "message": "PR bootstrap/77819 - undefined reference to gnu_libc_printf_pointer_format with uClibc\n\ngcc/ChangeLog:\n\n\tPR bootstrap/77819\n\t* config/linux.h (TARGET_PRINTF_POINTER_FORMAT): Define macro.\n\t* config/linux.c (gnu_libc_printf_pointer_format): Remove.\n\t* targhooks.c [DEFAULT_LIBC == LIBC_UCLIBC) && SINGLE_LIBC]\n\t(default_printf_pointer_format): Define function.\n\t* targhooks.c (linux_printf_pointer_format): Define new function.\n\t* targhooks.h (linux_printf_pointer_format): Declare.\n\t(gnu_libc_printf_pointer_format): Remove declaration.\n\nFrom-SVN: r240793", "tree": {"sha": "5f4fbd30346870c8eac86f2d6908619cb5dc3b0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f4fbd30346870c8eac86f2d6908619cb5dc3b0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73e1414cb829d02baef1bf241d4bdf3805f6f724", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e1414cb829d02baef1bf241d4bdf3805f6f724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73e1414cb829d02baef1bf241d4bdf3805f6f724", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e1414cb829d02baef1bf241d4bdf3805f6f724/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9563bfcdb4f236f218be52f8ff05bcd6527cac28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9563bfcdb4f236f218be52f8ff05bcd6527cac28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9563bfcdb4f236f218be52f8ff05bcd6527cac28"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "2b568782c338618c957dae0e0f0710908872cc91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73e1414cb829d02baef1bf241d4bdf3805f6f724", "patch": "@@ -1,3 +1,14 @@\n+2016-10-05  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR bootstrap/77819\n+\t* config/linux.h (TARGET_PRINTF_POINTER_FORMAT): Define macro.\n+\t* config/linux.c (gnu_libc_printf_pointer_format): Remove.\n+\t* targhooks.c [DEFAULT_LIBC == LIBC_UCLIBC) && SINGLE_LIBC]\n+\t(default_printf_pointer_format): Define function.\n+\t* targhooks.c (linux_printf_pointer_format): Define new function.\n+\t* targhooks.h (linux_printf_pointer_format): Declare.\n+\t(gnu_libc_printf_pointer_format): Remove declaration.\n+\n 2016-10-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* fold-const.c (native_encode_real): Fix logic for selecting offset"}, {"sha": "a393d3b78bab8bf98c153e168e0b27ef7b2c4787", "filename": "gcc/config/linux.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2Fconfig%2Flinux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2Fconfig%2Flinux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.c?ref=73e1414cb829d02baef1bf241d4bdf3805f6f724", "patch": "@@ -24,9 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"linux-protos.h\"\n \n-#undef TARGET_PRINTF_POINTER_FORMAT\n-#define TARGET_PRINTF_POINTER_FORMAT gnu_libc_printf_pointer_format\n-\n bool\n linux_libc_has_function (enum function_class fn_class)\n {\n@@ -40,16 +37,3 @@ linux_libc_has_function (enum function_class fn_class)\n \n   return false;\n }\n-\n-/* Glibc formats pointers as if by \"%zx\" except for the null pointer\n-   which outputs \"(nil)\".  It ignores the pound ('#') format flag but\n-   interprets the space and plus flags the same as in the integer\n-   directive.  */\n-\n-const char*\n-gnu_libc_printf_pointer_format (tree arg, const char **flags)\n-{\n-  *flags = \" +\";\n-\n-  return arg && integer_zerop (arg) ? \"(nil)\" : \"%#zx\";\n-}"}, {"sha": "7211da2008978f75cca3c639dcd92e9dc9d3a481", "filename": "gcc/config/linux.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=73e1414cb829d02baef1bf241d4bdf3805f6f724", "patch": "@@ -209,6 +209,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #endif\n \n-/* The format string to which \"%p\" corresponds.  */\n+/* The format string to which \"%p\" corresponds (same in Glibc and\n+   uClibc.  */\n #undef TARGET_PRINTF_POINTER_FORMAT\n-#define TARGET_PRINTF_POINTER_FORMAT gnu_libc_printf_pointer_format\n+#define TARGET_PRINTF_POINTER_FORMAT linux_printf_pointer_format"}, {"sha": "c7977be57d47fc9ce30f5ed1f22e9de86d08d7b3", "filename": "gcc/targhooks.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=73e1414cb829d02baef1bf241d4bdf3805f6f724", "patch": "@@ -1523,6 +1523,22 @@ default_printf_pointer_format (tree, const char **flags)\n   return \"%zx\";\n }\n \n+/* For Glibc and uClibc targets also define the hook here because\n+   otherwise it would have to be duplicated in each target's .c file\n+   (such as in bfin/bfin.c and c6x/c6x.c, etc.)\n+   Glibc and uClibc format pointers as if by \"%zx\" except for the null\n+   pointer which outputs \"(nil)\".  It ignores the pound ('#') format\n+   flag but interprets the space and plus flags the same as in the integer\n+   directive.  */\n+\n+const char*\n+linux_printf_pointer_format (tree arg, const char **flags)\n+{\n+  *flags = \" +\";\n+\n+  return arg && integer_zerop (arg) ? \"(nil)\" : \"%#zx\";\n+}\n+\n tree\n default_builtin_tm_load_store (tree ARG_UNUSED (type))\n {"}, {"sha": "afb1c00caf491687e3645b192e6bba0a33cbc2ec", "filename": "gcc/targhooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73e1414cb829d02baef1bf241d4bdf3805f6f724/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=73e1414cb829d02baef1bf241d4bdf3805f6f724", "patch": "@@ -192,7 +192,7 @@ extern bool no_c99_libc_has_function (enum function_class);\n extern bool gnu_libc_has_function (enum function_class);\n \n extern const char* default_printf_pointer_format (tree, const char **);\n-extern const char* gnu_libc_printf_pointer_format (tree, const char **);\n+extern const char* linux_printf_pointer_format (tree, const char **);\n extern const char* solaris_printf_pointer_format (tree, const char **);\n \n extern tree default_builtin_tm_load_store (tree);"}]}