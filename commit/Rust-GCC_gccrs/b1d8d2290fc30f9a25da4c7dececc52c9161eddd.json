{"sha": "b1d8d2290fc30f9a25da4c7dececc52c9161eddd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFkOGQyMjkwZmMzMGY5YTI1ZGE0YzdkZWNlY2M1MmM5MTYxZWRkZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:27:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:27:18Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r235310", "tree": {"sha": "8f24cff4e183dbcf3d1df7b57f1ac02c3bf66e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f24cff4e183dbcf3d1df7b57f1ac02c3bf66e7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1d8d2290fc30f9a25da4c7dececc52c9161eddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d8d2290fc30f9a25da4c7dececc52c9161eddd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1d8d2290fc30f9a25da4c7dececc52c9161eddd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d8d2290fc30f9a25da4c7dececc52c9161eddd/comments", "author": null, "committer": null, "parents": [{"sha": "78bc7fe67eb33a3d1da7fff70f634a050479a5e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bc7fe67eb33a3d1da7fff70f634a050479a5e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78bc7fe67eb33a3d1da7fff70f634a050479a5e8"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "81f2e0001ba61e8c0273ef1639144d25e3087d7c", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d8d2290fc30f9a25da4c7dececc52c9161eddd/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d8d2290fc30f9a25da4c7dececc52c9161eddd/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=b1d8d2290fc30f9a25da4c7dececc52c9161eddd", "patch": "@@ -188,18 +188,17 @@ package Freeze is\n    --  actions in the enclosing list and reset the attribute.\n \n    function Freeze_Entity\n-     (E : Entity_Id;\n-      N : Node_Id;\n-      F_P : Boolean := True) return List_Id;\n+     (E                 : Entity_Id;\n+      N                 : Node_Id;\n+      Do_Freeze_Profile : Boolean := True) return List_Id;\n    --  Freeze an entity, and return Freeze nodes, to be inserted at the point\n    --  of call. N is a node whose source location corresponds to the freeze\n    --  point. This is used in placing warning messages in the situation where\n    --  it appears that a type has been frozen too early, e.g. when a primitive\n    --  operation is declared after the freezing point of its tagged type.\n-   --  Returns No_List if no freeze nodes needed.\n-   --  The defaulted parameter F_P is used when E is a subprogram, and\n-   --  determines whether the profile of the subprogram should be frozen as\n-   --  well.\n+   --  Returns No_List if no freeze nodes needed. Parameter Do_Freeze_Profile\n+   --  is used when E is a subprogram, and determines whether the profile of\n+   --  the subprogram should be frozen as well.\n \n    procedure Freeze_All (From : Entity_Id; After : in out Node_Id);\n    --  Before a non-instance body, or at the end of a declarative part,\n@@ -216,11 +215,11 @@ package Freeze is\n    --  frozen entities.\n \n    procedure Freeze_Before\n-     (N   : Node_Id;\n-      T   : Entity_Id;\n-      F_P : Boolean := True);\n-   --  Freeze T then Insert the generated Freeze nodes before the node N\n-   --  The flag F_P is used when T is an overloadable entity, and indicates\n+     (N                 : Node_Id;\n+      T                 : Entity_Id;\n+      Do_Freeze_Profile : Boolean := True);\n+   --  Freeze T then Insert the generated Freeze nodes before the node N. Flag\n+   --  Do_Freeze_Profile is used when T is an overloadable entity and indicates\n    --  whether its profile should be frozen at the same time.\n \n    procedure Freeze_Expression (N : Node_Id);"}, {"sha": "db02aa58cecba5d3d63fdd5266d945a83ff6350f", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d8d2290fc30f9a25da4c7dececc52c9161eddd/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d8d2290fc30f9a25da4c7dececc52c9161eddd/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=b1d8d2290fc30f9a25da4c7dececc52c9161eddd", "patch": "@@ -10165,7 +10165,7 @@ package body Sem_Attr is\n                   --  the subprogram is not frozen at this point.\n \n                   if not In_Spec_Expression then\n-                     Freeze_Before (N, Entity (P), False);\n+                     Freeze_Before (N, Entity (P), Do_Freeze_Profile => False);\n                   end if;\n \n                --  If it is a type, there is nothing to resolve.\n@@ -10174,7 +10174,7 @@ package body Sem_Attr is\n \n                elsif Is_Overloadable (Entity (P)) then\n                   if not In_Spec_Expression then\n-                     Freeze_Before (N, Entity (P), False);\n+                     Freeze_Before (N, Entity (P), Do_Freeze_Profile => False);\n                   end if;\n \n                --  Nothing to do if prefix is a type name"}]}