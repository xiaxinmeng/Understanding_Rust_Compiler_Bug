{"sha": "ccd1242eecec3939e165ee5876bd8e4961654dae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NkMTI0MmVlY2VjMzkzOWUxNjVlZTU4NzZiZDhlNDk2MTY1NGRhZQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2019-05-14T17:17:23Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-05-14T17:17:23Z"}, "message": "Remove obsolete Solaris 10 support\n\n\tlibstdc++-v3:\n\t* config/os/solaris/solaris2.10: Move to ...\n\t* config/os/solaris: ... this.\n\t* configure.host (os_include_dir): Adapt.\n\t(abi_baseline_pair): Remove Solaris 10 handling.\n\t* config/abi/post/i386-solaris2.10: Remove.\n\t* config/abi/post/sparc-solaris2.10: Remove.\n\t* config/abi/post/i386-solaris2.11: Rename to ...\n\t* config/abi/post/i386-solaris: ... this.\n\t* config/abi/post/sparc-solaris2.11: Rename to ...\n\t* config/abi/post/sparc-solaris: ... this.\n\n\t* libsupc++/new_opa.cc [_GLIBCXX_HAVE_MEMALIGN] [__sun]: Remove\n\tworkaround.\n\n\t* testsuite/ext/enc_filebuf/char/13598.cc: Remove *-*-solaris2.10\n\txfail.\n\n\tlibsanitizer:\n\t* configure.ac (have_dl_iterate_phdr): Remove *-*-solaris2.10*\n\thandling.\n\t* configure: Regenerate.\n\n\tlibgcc:\n\t* config.host: Simplify various *-*-solaris2.1[0-9]* to\n\t*-*-solaris2*.\n\t* configure.ac: Likewise.\n\t* configure: Regenerate.\n\n\t* config/i386/sol2-unwind.h (x86_fallback_frame_state): Remove\n\tSolaris 10 and Solaris 11 < snv_125 handling.\n\n\tlibbacktrace:\n\t* configure.ac (have_dl_iterate_phdr): Remove *-*-solaris2.10*\n\thandling.\n\t* configure: Regenerate.\n\n\tgcc/testsuite:\n\t* gcc.dg/atomic/c11-atomic-exec-4.c: Simplify triplet to\n\t*-*-solaris2*.\n\t* gcc.dg/atomic/c11-atomic-exec-5.c: Likewise.\n\t* gcc.dg/c99-math-double-1.c: Likewise.\n\t* gcc.dg/c99-math-float-1.c: Likewise.\n\t* gcc.dg/c99-math-long-double-1.c: Likewise.\n\t* gcc.misc-tests/linkage.exp: Simplify triplet to\n\tx86_64-*-solaris2*.\n\n\t* gcc.target/i386/mcount_pic.c: Remove *-*-solaris2.10* && !gld\n\txfail.\n\t* gcc.target/i386/pr63620.c: Likewise.\n\n\t* lib/target-supports.exp (check_sse_os_support_available): Remove\n\tSolaris 9/x86 workaround.\n\n\tgcc:\n\t* config.gcc: Move *-*-solaris2.10* from obsolete configurations\n\tto unsupported ones.\n\tSimplify x86_64-*-solaris2.1[0-9]* to x86_64-*-solaris2*.\n\t* config.host: Likewise.\n\t* config/i386/sol2.h (ASM_COMMENT_START): Remove.\n\t* config/sparc/driver-sparc.c (host_detect_local_cpu) [__sun__ &&\n\t__svr4__]: Remove \"brand\" fallback.\n\t[!KSTAT_DATA_STRING]: Remove.\n\t* configure.ac (gcc_cv_ld_hidden): Simplify *-*-solaris2.1[0-9]*\n\tto *-*-solaris2*.\n\t(comdat_group): Likewise.\n\t(set_have_as_tls): Likewise.\n\t(gcc_cv_target_dl_iterate_phdr): Likewise.\n\t(gcc_cv_as_shf_merge): Remove Solaris 10/x86 workaround.\n\t(gcc_cv_ld_aligned_shf_merge): Remove Solaris 10/SPARC workaround.\n\t* configure: Regenerate.\n\t* doc/install.texi: Simplify Solaris target triplets.\n\t(Specific, i?86-*-solaris2*): Remove Solaris 10 references.\n\t(Specific, *-*-solaris2*): Document Solaris 10 removal.\n\tRemove Solaris 10 references.\n\tRemove obsolete Solaris bug reference.\n\t(Specific, sparc-sun-solaris2.10): Remove.\n\nFrom-SVN: r271183", "tree": {"sha": "1edb8e74736355cc9e9f700bb0785e85976e3181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1edb8e74736355cc9e9f700bb0785e85976e3181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccd1242eecec3939e165ee5876bd8e4961654dae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd1242eecec3939e165ee5876bd8e4961654dae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccd1242eecec3939e165ee5876bd8e4961654dae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd1242eecec3939e165ee5876bd8e4961654dae/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "956a62aaa2c8ff99431f737164e5dfb5652f801c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956a62aaa2c8ff99431f737164e5dfb5652f801c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956a62aaa2c8ff99431f737164e5dfb5652f801c"}], "stats": {"total": 23473, "additions": 145, "deletions": 23328}, "files": [{"sha": "bb597fa519eae5da5db566e2bbd12947541c34c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,3 +1,28 @@\n+2019-05-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.gcc: Move *-*-solaris2.10* from obsolete configurations\n+\tto unsupported ones.\n+\tSimplify x86_64-*-solaris2.1[0-9]* to x86_64-*-solaris2*.\n+\t* config.host: Likewise.\n+\t* config/i386/sol2.h (ASM_COMMENT_START): Remove.\n+\t* config/sparc/driver-sparc.c (host_detect_local_cpu) [__sun__ &&\n+\t__svr4__]: Remove \"brand\" fallback.\n+\t[!KSTAT_DATA_STRING]: Remove.\n+\t* configure.ac (gcc_cv_ld_hidden): Simplify *-*-solaris2.1[0-9]*\n+\tto *-*-solaris2*.\n+\t(comdat_group): Likewise.\n+\t(set_have_as_tls): Likewise.\n+\t(gcc_cv_target_dl_iterate_phdr): Likewise.\n+\t(gcc_cv_as_shf_merge): Remove Solaris 10/x86 workaround.\n+\t(gcc_cv_ld_aligned_shf_merge): Remove Solaris 10/SPARC workaround.\n+\t* configure: Regenerate.\n+\t* doc/install.texi: Simplify Solaris target triplets.\n+\t(Specific, i?86-*-solaris2*): Remove Solaris 10 references.\n+\t(Specific, *-*-solaris2*): Document Solaris 10 removal.\n+\tRemove Solaris 10 references.\n+\tRemove obsolete Solaris bug reference.\n+\t(Specific, sparc-sun-solaris2.10): Remove.\n+\n 2019-05-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (any_div): New code iterator."}, {"sha": "76bb316942d93448e6354a89a8266118ee767601", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -247,8 +247,7 @@ md_file=\n \n # Obsolete configurations.\n case ${target} in\n-  *-*-solaris2.10*\t\t\t\\\n-  | spu*-*-*\t\t\t\t\\\n+  spu*-*-*\t\t\t\t\\\n   | tile*-*-*\t\t\t\t\\\n  )\n     if test \"x$enable_obsolete\" != xyes; then\n@@ -293,6 +292,7 @@ case ${target} in\n  | *-*-solaris2\t\t\t\t\\\n  | *-*-solaris2.[0-9]\t\t\t\\\n  | *-*-solaris2.[0-9].*\t\t\t\\\n+ | *-*-solaris2.10*\t\t\t\\\n  | *-*-sysv*\t\t\t\t\\\n  | vax-*-vms*\t\t\t\t\\\n  )\n@@ -1794,7 +1794,7 @@ i[34567]86-*-rtems*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h i386/rtemself.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"${tmake_file} i386/t-rtems\"\n \t;;\n-i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n+i[34567]86-*-solaris2* | x86_64-*-solaris2*)\n \t# Set default arch_32 to pentium4, tune_32 to generic like the other\n \t# i386 targets, although config.guess defaults to i386-pc-solaris2*.\n \twith_arch_32=${with_arch_32:-pentium4}\n@@ -4914,7 +4914,7 @@ case ${target} in\n \ti[34567]86-*-msdosdjgpp*)\n \t\ttmake_file=\"${tmake_file} i386/t-djgpp\"\n \t\t;;\n-\ti[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n+\ti[34567]86-*-solaris2* | x86_64-*-solaris2*)\n \t\t;;\n \ti[34567]86-*-cygwin* | x86_64-*-cygwin*)\n \t\t;;"}, {"sha": "2213404dd0ec56a6945927daea1dca2a67d437fa", "filename": "gcc/config.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -213,7 +213,7 @@ case ${host} in\n     out_host_hook_obj=host-hpux.o\n     host_xmake_file=\"${host_xmake_file} x-hpux\"\n     ;;\n-  i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n+  i[34567]86-*-solaris2* | x86_64-*-solaris2*)\n     out_host_hook_obj=host-solaris.o\n     host_xmake_file=\"${host_xmake_file} x-solaris\"\n     ;;"}, {"sha": "1583e7065490e522ed07ba0b75dabe83e21279fc", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -117,11 +117,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX \".\"\n \n-/* The Solaris 10 FCS as doesn't accept \"#\" comments, while later versions\n-   do.  */\n-#undef ASM_COMMENT_START\n-#define ASM_COMMENT_START \"/\"\n-\n /* The 32-bit Solaris assembler does not support .quad.  Do not use it.  */\n #ifndef HAVE_AS_IX86_QUAD\n #undef ASM_QUAD"}, {"sha": "77172c20c8078c6ef606df99b50ef72f6fd9709d", "filename": "gcc/config/sparc/driver-sparc.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfig%2Fsparc%2Fdriver-sparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfig%2Fsparc%2Fdriver-sparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fdriver-sparc.c?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -134,19 +134,8 @@ host_detect_local_cpu (int argc, const char **argv)\n \t  && ksp->ks_type == KSTAT_TYPE_NAMED)\n \tbrand = (kstat_named_t *)\n \t  kstat_data_lookup (ksp, CONST_CAST2 (char *, const char *, \"brand\"));\n-      /* \"brand\" was only introduced in Solaris 10.  */\n-      if (brand == NULL)\n-\t  brand = (kstat_named_t *)\n-\t    kstat_data_lookup (ksp, CONST_CAST2 (char *, const char *,\n-\t\t\t\t\t\t \"implementation\"));\n-      /* KSTAT_DATA_STRING was introduced in Solaris 9.  */\n-#ifdef KSTAT_DATA_STRING\n       if (brand != NULL && brand->data_type == KSTAT_DATA_STRING)\n \tbuf = KSTAT_NAMED_STR_PTR (brand);\n-#else\n-      if (brand != NULL && brand->data_type == KSTAT_DATA_CHAR)\n-\tbuf = brand->value.c;\n-#endif\n     }\n   kstat_close (kc);\n "}, {"sha": "4a3d5eefcb8829dd8aa669083829bd67c9b46a16", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -23140,7 +23140,7 @@ else\n       hppa64*-*-hpux* | ia64*-*-hpux*)\n \tgcc_cv_ld_hidden=yes\n \t;;\n-      *-*-solaris2.1[0-9]*)\n+      *-*-solaris2*)\n \t# Support for .hidden in Sun ld appeared in Solaris 9 FCS, but\n \t# .symbolic was only added in Solaris 9 12/02.\n         gcc_cv_ld_hidden=yes\n@@ -23931,14 +23931,6 @@ $as_echo \"$gcc_cv_as_shf_merge\" >&6; }\n \n \n fi\n-case \"$target\" in\n-  i?86-*-solaris2.10* | x86_64-*-solaris2.10*)\n-    # SHF_MERGE support in Solaris 10/x86 ld is broken.\n-    if test x\"$gnu_ld\" = xno; then\n-      gcc_cv_as_shf_merge=no\n-    fi\n-    ;;\n-esac\n \n cat >>confdefs.h <<_ACEOF\n #define HAVE_GAS_SHF_MERGE `if test $gcc_cv_as_shf_merge = yes; then echo 1; else echo 0; fi`\n@@ -23947,13 +23939,6 @@ _ACEOF\n \n gcc_cv_ld_aligned_shf_merge=yes\n case \"$target\" in\n-  # While Solaris 10/SPARC ld isn't affected, disable to avoid problems\n-  # relinking on Solaris 11 < 11.4.\n-  sparc*-*-solaris2.10*)\n-    if test x\"$gnu_ld\" = xno; then\n-      gcc_cv_ld_aligned_shf_merge=no\n-    fi\n-    ;;\n   # SHF_MERGE support is broken in Solaris ld up to Solaris 11.3/SPARC for\n   # alignment > 1.\n   sparc*-*-solaris2.11*)\n@@ -24084,7 +24069,7 @@ $as_echo \"$gcc_cv_as_comdat_group_percent\" >&6; }\n              foo:\n \t     '\n            ;;\n-         i?86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n+         i?86-*-solaris2* | x86_64-*-solaris2*)\n \t   conftest_s='\n                .group foo,.text%foo,#comdat\n                .section .text%foo, \"ax\", @progbits\n@@ -24394,7 +24379,7 @@ foo:\t.long\t25\n \t;;\n   i[34567]86-*-* | x86_64-*-*)\n     case \"$target\" in\n-      i[34567]86-*-solaris2.* | x86_64-*-solaris2.1[0-9]*)\n+      i[34567]86-*-solaris2.* | x86_64-*-solaris2.*)\n \ton_solaris=yes\n         ;;\n       *)\n@@ -29447,11 +29432,7 @@ fi\n $as_echo_n \"checking dl_iterate_phdr in target C library... \" >&6; }\n gcc_cv_target_dl_iterate_phdr=unknown\n case \"$target\" in\n-  # Restrict to Solaris 11+.  While most of the Solaris 11 linker changes\n-  # were backported to Solaris 10 Update 10, dl_iterate_phdr only lives in\n-  # libdl there, both complicating its use and breaking compatibility\n-  # between Solaris 10 updates.\n-  *-*-solaris2.1[1-9]*)\n+  *-*-solaris2*)\n     # <link.h> needs both a dl_iterate_phdr declaration and support for\n     # compilation with largefile support.\n     if grep dl_iterate_phdr $target_header_dir/link.h > /dev/null 2>&1 \\"}, {"sha": "35982fdc9ed54b6bd38cfcecaf28dd6ba29cb89a", "filename": "gcc/configure.ac", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -2751,7 +2751,7 @@ else\n       hppa64*-*-hpux* | ia64*-*-hpux*)\n \tgcc_cv_ld_hidden=yes\n \t;;\n-      *-*-solaris2.1[0-9]*)\n+      *-*-solaris2*)\n \t# Support for .hidden in Sun ld appeared in Solaris 9 FCS, but\n \t# .symbolic was only added in Solaris 9 12/02.\n         gcc_cv_ld_hidden=yes\n@@ -3075,27 +3075,12 @@ if test $gcc_cv_as_shf_merge = no; then\n     [elf,2,12,0], [--fatal-warnings],\n     [.section .rodata.str, \"aMS\", %progbits, 1])\n fi\n-case \"$target\" in\n-  i?86-*-solaris2.10* | x86_64-*-solaris2.10*)\n-    # SHF_MERGE support in Solaris 10/x86 ld is broken.\n-    if test x\"$gnu_ld\" = xno; then\n-      gcc_cv_as_shf_merge=no\n-    fi\n-    ;;\n-esac\n AC_DEFINE_UNQUOTED(HAVE_GAS_SHF_MERGE,\n   [`if test $gcc_cv_as_shf_merge = yes; then echo 1; else echo 0; fi`],\n [Define 0/1 if your assembler supports marking sections with SHF_MERGE flag.])\n \n gcc_cv_ld_aligned_shf_merge=yes\n case \"$target\" in\n-  # While Solaris 10/SPARC ld isn't affected, disable to avoid problems\n-  # relinking on Solaris 11 < 11.4.\n-  sparc*-*-solaris2.10*)\n-    if test x\"$gnu_ld\" = xno; then\n-      gcc_cv_ld_aligned_shf_merge=no\n-    fi\n-    ;;\n   # SHF_MERGE support is broken in Solaris ld up to Solaris 11.3/SPARC for\n   # alignment > 1.\n   sparc*-*-solaris2.11*)\n@@ -3141,7 +3126,7 @@ else\n              foo:\n \t     '\n            ;;\n-         i?86-*-solaris2* | x86_64-*-solaris2.1[[0-9]]*)\n+         i?86-*-solaris2* | x86_64-*-solaris2*)\n \t   conftest_s='\n                .group foo,.text%foo,#comdat\n                .section .text%foo, \"ax\", @progbits\n@@ -3364,7 +3349,7 @@ foo:\t.long\t25\n \t;;\n   i[34567]86-*-* | x86_64-*-*)\n     case \"$target\" in\n-      i[34567]86-*-solaris2.* | x86_64-*-solaris2.1[0-9]*)\n+      i[34567]86-*-solaris2.* | x86_64-*-solaris2.*)\n \ton_solaris=yes\n         ;;\n       *)\n@@ -6097,11 +6082,7 @@ fi\n AC_MSG_CHECKING(dl_iterate_phdr in target C library)\n gcc_cv_target_dl_iterate_phdr=unknown\n case \"$target\" in\n-  # Restrict to Solaris 11+.  While most of the Solaris 11 linker changes\n-  # were backported to Solaris 10 Update 10, dl_iterate_phdr only lives in\n-  # libdl there, both complicating its use and breaking compatibility\n-  # between Solaris 10 updates.\n-  *-*-solaris2.1[[1-9]]*)\n+  *-*-solaris2*)\n     # <link.h> needs both a dl_iterate_phdr declaration and support for\n     # compilation with largefile support.\n     if grep dl_iterate_phdr $target_header_dir/link.h > /dev/null 2>&1 \\"}, {"sha": "e5a7d83bfd29477a81df1b06199d4facc09132e0", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 30, "deletions": 78, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -3270,7 +3270,7 @@ information have to.\n @item\n @uref{#alpha-x-x,,alpha*-*-*}\n @item\n-@uref{#amd64-x-solaris210,,amd64-*-solaris2.10}\n+@uref{#amd64-x-solaris2,,amd64-*-solaris2*}\n @item\n @uref{#arm-x-eabi,,arm-*-eabi}\n @item\n@@ -3294,7 +3294,7 @@ information have to.\n @item\n @uref{#ix86-x-linux,,i?86-*-linux*}\n @item\n-@uref{#ix86-x-solaris210,,i?86-*-solaris2.10}\n+@uref{#ix86-x-solaris2,,i?86-*-solaris2*}\n @item\n @uref{#ia64-x-linux,,ia64-*-linux}\n @item\n@@ -3370,8 +3370,6 @@ information have to.\n @item\n @uref{#sparc-sun-solaris2,,sparc-sun-solaris2*}\n @item\n-@uref{#sparc-sun-solaris210,,sparc-sun-solaris2.10}\n-@item\n @uref{#sparc-x-linux,,sparc-*-linux*}\n @item\n @uref{#sparc64-x-solaris2,,sparc64-*-solaris2*}\n@@ -3392,7 +3390,7 @@ information have to.\n @item\n @uref{#x86-64-x-x,,x86_64-*-*, amd64-*-*}\n @item\n-@uref{#x86-64-x-solaris210,,x86_64-*-solaris2.1[0-9]*}\n+@uref{#x86-64-x-solaris2,,x86_64-*-solaris2*}\n @item\n @uref{#xtensa-x-elf,,xtensa*-*-elf}\n @item\n@@ -3474,9 +3472,9 @@ shared libraries.\n @html\n <hr />\n @end html\n-@anchor{amd64-x-solaris210}\n-@heading amd64-*-solaris2.1[0-9]*\n-This is a synonym for @samp{x86_64-*-solaris2.1[0-9]*}.\n+@anchor{amd64-x-solaris2}\n+@heading amd64-*-solaris2*\n+This is a synonym for @samp{x86_64-*-solaris2*}.\n \n @html\n <hr />\n@@ -3911,32 +3909,29 @@ found on @uref{http://www.bitwizard.nl/sig11/,,www.bitwizard.nl}.\n @html\n <hr />\n @end html\n-@anchor{ix86-x-solaris210}\n-@heading i?86-*-solaris2.10\n-Use this for Solaris 10 or later on x86 and x86-64 systems.  Starting\n-with GCC 4.7, there is also a 64-bit @samp{amd64-*-solaris2.1[0-9]*} or\n-@samp{x86_64-*-solaris2.1[0-9]*} configuration that corresponds to\n+@anchor{ix86-x-solaris2}\n+@heading i?86-*-solaris2*\n+Use this for Solaris 11 or later on x86 and x86-64 systems.  Starting\n+with GCC 4.7, there is also a 64-bit @samp{amd64-*-solaris2*} or\n+@samp{x86_64-*-solaris2*} configuration that corresponds to\n @samp{sparcv9-sun-solaris2*}.\n \n It is recommended that you configure GCC to use the GNU assembler.  The\n-versions included in Solaris 10, from GNU binutils 2.15 (in\n-@file{/usr/sfw/bin/gas}), and Solaris 11, from GNU binutils 2.19 or\n+versions included in Solaris 11, from GNU binutils 2.19 or\n newer (also available as @file{/usr/bin/gas} and\n @file{/usr/gnu/bin/as}), work fine.  The current version, from GNU\n-binutils 2.29, is known to work, but the version from GNU binutils 2.26\n+binutils 2.32, is known to work, but the version from GNU binutils 2.26\n must be avoided.  Recent versions of the Solaris assembler in\n @file{/usr/ccs/bin/as} work almost as well, though.\n @c FIXME: as patch requirements?\n \n For linking, the Solaris linker, is preferred.  If you want to use the GNU\n-linker instead, note that due to a packaging bug the version in Solaris\n-10, from GNU binutils 2.15 (in @file{/usr/sfw/bin/gld}), cannot be used,\n-while the version in Solaris 11, from GNU binutils 2.19 or newer (also\n-in @file{/usr/gnu/bin/ld} and @file{/usr/bin/gld}), works, as does the\n-latest version, from GNU binutils 2.29.\n+linker instead, the version in Solaris 11, from GNU binutils 2.19 or\n+newer (also in @file{/usr/gnu/bin/ld} and @file{/usr/bin/gld}), works,\n+as does the latest version, from GNU binutils 2.32.\n \n To use GNU @command{as}, configure with the options\n-@option{--with-gnu-as --with-as=@//usr/@/sfw/@/bin/@/gas}.  It may be necessary\n+@option{--with-gnu-as --with-as=@//usr/@/gnu/@/bin/@/as}.  It may be necessary\n to configure with @option{--without-gnu-ld --with-ld=@//usr/@/ccs/@/bin/@/ld} to\n guarantee use of Sun @command{ld}.\n @c FIXME: why --without-gnu-ld --with-ld?\n@@ -4512,16 +4507,11 @@ supported as cross-compilation target only.\n @c alone is too unspecific and must be avoided.\n @anchor{x-x-solaris2}\n @heading *-*-solaris2*\n-Support for Solaris 10 has been obsoleted in GCC 9, but can still be\n-enabled by configuring with @option{--enable-obsolete}.  Support will be\n-removed in GCC 10.  Support for Solaris 9 has been removed in GCC 5.\n-Support for Solaris 8 has been removed in GCC 4.8.  Support for Solaris\n-7 has been removed in GCC 4.6.\n-\n-Sun does not ship a C compiler with Solaris 2 before Solaris 10, though\n-you can download the Sun Studio compilers for free.  In Solaris 10 and\n-11, GCC 3.4.3 is available as @command{/usr/sfw/bin/gcc}.  Solaris 11\n-also provides GCC 4.5.2, 4.7.3, and 4.8.2 as\n+Support for Solaris 10 has been removed in GCC 10.  Support for Solaris\n+9 has been removed in GCC 5.  Support for Solaris 8 has been removed in\n+GCC 4.8.  Support for Solaris 7 has been removed in GCC 4.6.\n+\n+Solaris 11 provides GCC 4.5.2, 4.7.3, and 4.8.2 as\n @command{/usr/gcc/4.5/bin/gcc} or similar.  Alternatively,\n you can install a pre-built GCC to bootstrap and install GCC.  See the\n @uref{binaries.html,,binaries page} for details.\n@@ -4540,21 +4530,8 @@ and proceed as described in @uref{configure.html,,the configure instructions}.\n In addition we strongly recommend specifying an absolute path to invoke\n @command{@var{srcdir}/configure}.\n \n-Solaris 10 comes with a number of optional OS packages.  Some of these\n-are needed to use GCC fully, namely @code{SUNWarc},\n-@code{SUNWbtool}, @code{SUNWesu}, @code{SUNWhea}, @code{SUNWlibm},\n-@code{SUNWsprot}, and @code{SUNWtoo}.  If you did not install all\n-optional packages when installing Solaris 10, you will need to verify that\n-the packages that GCC needs are installed.\n-To check whether an optional package is installed, use\n-the @command{pkginfo} command.  To add an optional package, use the\n-@command{pkgadd} command.  For further details, see the Solaris 10\n-documentation.\n-\n-Starting with Solaris 11, the package management has changed, so you\n-need to check for @code{system/header}, @code{system/linker}, and\n-@code{developer/assembler} packages.  Checking for and installing\n-packages is done with the @command{pkg} command now.\n+In Solaris 11, you need to check for @code{system/header},\n+@code{system/linker}, and @code{developer/assembler} packages.\n \n Trying to use the linker and other tools in\n @file{/usr/ucb} to install GCC has been observed to cause trouble.\n@@ -4567,20 +4544,18 @@ have @file{/usr/xpg4/bin} in your @env{PATH}, we recommend that you place\n \n We recommend the use of the Solaris assembler or the GNU assembler, in\n conjunction with the Solaris linker.  The GNU @command{as}\n-versions included in Solaris 10, from GNU binutils 2.15 (in\n-@file{/usr/sfw/bin/gas}), and Solaris 11,\n+versions included in Solaris 11,\n from GNU binutils 2.19 or newer (also in @file{/usr/bin/gas} and\n @file{/usr/gnu/bin/as}), are known to work.\n-The current version, from GNU binutils 2.29,\n+The current version, from GNU binutils 2.32,\n is known to work as well.  Note that your mileage may vary\n if you use a combination of the GNU tools and the Solaris tools: while the\n combination GNU @command{as} + Sun @command{ld} should reasonably work,\n the reverse combination Sun @command{as} + GNU @command{ld} may fail to\n build or cause memory corruption at runtime in some cases for C++ programs.\n @c FIXME: still?\n-GNU @command{ld} usually works as well, although the version included in\n-Solaris 10 cannot be used due to several bugs.  Again, the current\n-version (2.29) is known to work, but generally lacks platform specific\n+GNU @command{ld} usually works as well.  Again, the current\n+version (2.32) is known to work, but generally lacks platform specific\n features, so better stay with Solaris @command{ld}.  To use the LTO linker\n plugin (@option{-fuse-linker-plugin}) with GNU @command{ld}, GNU\n binutils @emph{must} be configured with @option{--enable-largefile}.\n@@ -4591,13 +4566,6 @@ GNU binutils.  @samp{libstdc++} symbol versioning will be disabled if no\n appropriate version is found.  Solaris @command{c++filt} from the Solaris\n Studio compilers does @emph{not} work.\n \n-Sun bug 4927647 sometimes causes random spurious testsuite failures\n-related to missing diagnostic output.  This bug doesn't affect GCC\n-itself, rather it is a kernel bug triggered by the @command{expect}\n-program which is used only by the GCC testsuite driver.  When the bug\n-causes the @command{expect} program to miss anticipated output, extra\n-testsuite failures appear.\n-\n @html\n <hr />\n @end html\n@@ -4641,22 +4609,6 @@ not that of GMP or MPFR or MPC).  For example on a Solaris 9 system:\n % ./configure --build=sparc-sun-solaris2.9 --prefix=xxx\n @end smallexample\n \n-@html\n-<hr />\n-@end html\n-@anchor{sparc-sun-solaris210}\n-@heading sparc-sun-solaris2.10\n-There is a bug in older versions of the Sun assembler which breaks\n-thread-local storage (TLS).  A typical error message is\n-\n-@smallexample\n-ld: fatal: relocation error: R_SPARC_TLS_LE_HIX22: file /var/tmp//ccamPA1v.o:\n-  symbol <unknown>: bad symbol type SECT: symbol type must be TLS\n-@end smallexample\n-\n-@noindent\n-This bug is fixed in Sun patch 118683-03 or later.\n-\n @html\n <hr />\n @end html\n@@ -4772,8 +4724,8 @@ both 64-bit x86-64 and 32-bit x86 code (via the @option{-m32} switch).\n @html\n <hr />\n @end html\n-@anchor{x86-64-x-solaris210}\n-@heading x86_64-*-solaris2.1[0-9]*\n+@anchor{x86-64-x-solaris2}\n+@heading x86_64-*-solaris2*\n GCC also supports the x86-64 architecture implemented by the AMD64\n processor (@samp{amd64-*-*} is an alias for @samp{x86_64-*-*}) on\n Solaris 10 or later.  Unlike other systems, without special options a"}, {"sha": "15c9e5495af5eaeea5962e3734e108ec73abecf6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,3 +1,21 @@\n+2019-05-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc.dg/atomic/c11-atomic-exec-4.c: Simplify triplet to\n+\t*-*-solaris2*.\n+\t* gcc.dg/atomic/c11-atomic-exec-5.c: Likewise.\n+\t* gcc.dg/c99-math-double-1.c: Likewise.\n+\t* gcc.dg/c99-math-float-1.c: Likewise.\n+\t* gcc.dg/c99-math-long-double-1.c: Likewise.\n+\t* gcc.misc-tests/linkage.exp: Simplify triplet to\n+\tx86_64-*-solaris2*.\n+\n+\t* gcc.target/i386/mcount_pic.c: Remove *-*-solaris2.10* && !gld\n+\txfail.\n+\t* gcc.target/i386/pr63620.c: Likewise.\n+\n+\t* lib/target-supports.exp (check_sse_os_support_available): Remove\n+\tSolaris 9/x86 workaround.\n+\n 2019-05-14  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/gimplefe-40.c: New testcase."}, {"sha": "d6bb629f59ffa9d0152aec275959181f2678ce7e", "filename": "gcc/testsuite/gcc.dg/atomic/c11-atomic-exec-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fc11-atomic-exec-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fc11-atomic-exec-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fc11-atomic-exec-4.c?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -3,7 +3,7 @@\n    out in two threads.  */\n /* { dg-do run } */\n /* { dg-options \"-std=c11 -pedantic-errors -pthread -U_POSIX_C_SOURCE -D_POSIX_C_SOURCE=200809L\" } */\n-/* { dg-additional-options \"-D_XOPEN_SOURCE=600\" { target *-*-solaris2.1[0-9]* } } */\n+/* { dg-additional-options \"-D_XOPEN_SOURCE=600\" { target *-*-solaris2* } } */\n /* { dg-require-effective-target pthread } */\n \n #include <stdint.h>"}, {"sha": "692c64ad2073781060df4748fcb996f7f2fbb935", "filename": "gcc/testsuite/gcc.dg/atomic/c11-atomic-exec-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fc11-atomic-exec-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fc11-atomic-exec-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic%2Fc11-atomic-exec-5.c?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -6,7 +6,7 @@\n /* { dg-options \"-std=c11 -pedantic-errors -pthread -U_POSIX_C_SOURCE -D_POSIX_C_SOURCE=200809L\" } */\n /* { dg-add-options ieee } */\n /* { dg-additional-options \"-mfp-trap-mode=sui\" { target alpha*-*-* } } */\n-/* { dg-additional-options \"-D_XOPEN_SOURCE=600\" { target *-*-solaris2.1[0-9]* } } */\n+/* { dg-additional-options \"-D_XOPEN_SOURCE=600\" { target *-*-solaris2* } } */\n /* { dg-require-effective-target fenv_exceptions } */\n /* { dg-require-effective-target pthread } */\n /* { dg-timeout-factor 2 } */"}, {"sha": "0db4297845e79ed1ddc3b872c802d8c16131da34", "filename": "gcc/testsuite/gcc.dg/c99-math-double-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-double-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-double-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-double-1.c?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target *-*-solaris2.1[0-9]* } } */\n+/* { dg-do run { target *-*-solaris2* } } */\n /* { dg-options \"-std=c99 -O\" } */\n \n #include <math.h>"}, {"sha": "8654e767210ee12f326f13caab1973cb75113ca4", "filename": "gcc/testsuite/gcc.dg/c99-math-float-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-float-1.c?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target *-*-solaris2.1[0-9]* } } */\n+/* { dg-do run { target *-*-solaris2* } } */\n /* { dg-options \"-std=c99 -O\" } */\n \n #include <math.h>"}, {"sha": "97948f4cc31350b7221807be04f16cbad724cae8", "filename": "gcc/testsuite/gcc.dg/c99-math-long-double-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-long-double-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-long-double-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-math-long-double-1.c?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target *-*-solaris2.1[0-9]* } } */\n+/* { dg-do run { target *-*-solaris2* } } */\n /* { dg-options \"-std=c99 -O\" } */\n \n #include <math.h>"}, {"sha": "c2c0ea03fe91759145a13aabafb60ff09a148300", "filename": "gcc/testsuite/gcc.misc-tests/linkage.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Flinkage.exp?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -44,7 +44,7 @@ if { [isnative] && ![is_remote host] } then {\n \t\tset native_cflags \"-xarch=v9\"\n \t    }\n \t}\n-\tif  {[istarget \"i?86*-*-solaris2*\"] || [istarget \"x86_64-*-solaris2.1\\[0-9\\]*\"]} {\n+\tif  {[istarget \"i?86*-*-solaris2*\"] || [istarget \"x86_64-*-solaris2*\"]} {\n \t    set file_string [exec file \"linkage-x.o\"]\n \t    if [ string match \"*64*\" $file_string ] {\n \t\tset native_cflags \"-xarch=amd64\""}, {"sha": "5546933d1946db6353ea3cfd32d8c373f7726b64", "filename": "gcc/testsuite/gcc.target/i386/mcount_pic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmcount_pic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmcount_pic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmcount_pic.c?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -11,5 +11,5 @@ int main ()\n }\n \n /* { dg-final { scan-assembler \"mcount\" } } */\n-/* { dg-final { scan-assembler \"get_pc_thunk\" { xfail { *-*-solaris2.10* && { ! gld } } } } } */\n+/* { dg-final { scan-assembler \"get_pc_thunk\" } } */\n /* { dg-final { cleanup-profile-file } } */"}, {"sha": "bf3843550acaa0c709e1a2b4540708434a020d3c", "filename": "gcc/testsuite/gcc.target/i386/pr63620.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63620.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63620.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63620.c?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -17,4 +17,4 @@ test (__float128 x, int p, func f)\n   return x;\n }\n \n-/* { dg-final { scan-assembler \"get_pc_thunk\" { xfail { *-*-solaris2.10* && { ! gld } } } } } */\n+/* { dg-final { scan-assembler \"get_pc_thunk\" } } */"}, {"sha": "da132369a4b58437d1db16c6aabd1eea17028b3a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1590,16 +1590,6 @@ proc check_sse_os_support_available { } {\n \t# If this is not the right target then we can skip the test.\n \tif { !([istarget i?86-*-*] || [istarget x86_64-*-*]) } {\n \t    expr 0\n-\t} elseif { [istarget i?86-*-solaris2*] } {\n-\t    # The Solaris 2 kernel doesn't save and restore SSE registers\n-\t    # before Solaris 9 4/04.  Before that, executables die with SIGILL.\n-\t    check_runtime_nocache sse_os_support_available {\n-\t\tint main ()\n-\t\t{\n-\t\t  asm volatile (\"movaps %xmm0,%xmm0\");\n-\t\t  return 0;\n-\t\t}\n-\t    } \"-msse\"\n \t} else {\n \t    expr 1\n \t}"}, {"sha": "7e3fa2e5f2412b674e5b042ed7bf35a9987d4f69", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,3 +1,9 @@\n+2019-05-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (have_dl_iterate_phdr): Remove *-*-solaris2.10*\n+\thandling.\n+\t* configure: Regenerate.\n+\n 2019-03-11  Ian Lance Taylor  <iant@golang.org>\n \n \tPR libbacktrace/89669"}, {"sha": "c06d25859030a9e8c2ab2066b8cd83b8fce5962d", "filename": "libbacktrace/configure", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -13048,12 +13048,6 @@ else\n fi\n rm -f conftest*\n \n-    case \"${host}\" in\n-    *-*-solaris2.10*)\n-        # Avoid dl_iterate_phdr on Solaris 10, where it is in the\n-    \t# header file but is only in -ldl.\n-\thave_dl_iterate_phdr=no ;;\n-    esac\n   else\n     ac_fn_c_check_func \"$LINENO\" \"dl_iterate_phdr\" \"ac_cv_func_dl_iterate_phdr\"\n if test \"x$ac_cv_func_dl_iterate_phdr\" = xyes; then :"}, {"sha": "6b7c05e4e07c632ee8717a53bea6c79efe30cbd9", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -333,12 +333,6 @@ else\n     # When built as a GCC target library, we can't do a link test.\n     AC_EGREP_HEADER([dl_iterate_phdr], [link.h], [have_dl_iterate_phdr=yes],\n \t\t    [have_dl_iterate_phdr=no])\n-    case \"${host}\" in\n-    *-*-solaris2.10*)\n-        # Avoid dl_iterate_phdr on Solaris 10, where it is in the\n-    \t# header file but is only in -ldl.\n-\thave_dl_iterate_phdr=no ;;\n-    esac\n   else\n     AC_CHECK_FUNC([dl_iterate_phdr], [have_dl_iterate_phdr=yes],\n \t\t  [have_dl_iterate_phdr=no])"}, {"sha": "5b465e63e06eedaa97f005523a168a851ab8874c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,3 +1,13 @@\n+2019-05-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.host: Simplify various *-*-solaris2.1[0-9]* to\n+\t*-*-solaris2*.\n+\t* configure.ac: Likewise.\n+\t* configure: Regenerate.\n+\n+\t* config/i386/sol2-unwind.h (x86_fallback_frame_state): Remove\n+\tSolaris 10 and Solaris 11 < snv_125 handling.\n+\n 2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/rs6000/darwin-vecsave.S: Set .machine appropriately."}, {"sha": "91fed5fa473079513b820783c7f34bf0dc49f0e7", "filename": "libgcc/config.host", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -294,11 +294,11 @@ case ${host} in\n     extra_parts=\"$extra_parts crtbeginS.o crtendS.o\"\n   else\n     case ${host} in\n-      i?86-*-solaris2.1[0-9]* | x86_64-*-solaris2.1[0-9]*)\n+      i?86-*-solaris2* | x86_64-*-solaris2*)\n         # Solaris 10+/x86 provides crt1.o, crti.o, crtn.o, and gcrt1.o as\n         # part of the base system.\n         ;;\n-      sparc*-*-solaris2.1[0-9]*)\n+      sparc*-*-solaris2*)\n         # Solaris 10+/SPARC lacks crt1.o and gcrt1.o.\n         extra_parts=\"$extra_parts crt1.o gcrt1.o\"\n         ;;\n@@ -703,7 +703,7 @@ i[34567]86-*-rtems*)\n \ttmake_file=\"$tmake_file i386/t-crtstuff t-softfp-sfdftf i386/32/t-softfp i386/t-softfp t-softfp\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n-i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n+i[34567]86-*-solaris2* | x86_64-*-solaris2*)\n \ttmake_file=\"$tmake_file i386/t-crtpc t-crtfm i386/t-msabi\"\n \textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n \ttm_file=\"${tm_file} i386/elf-lib.h\""}, {"sha": "4880b380e708d784c42df03182c6b2279501708d", "filename": "libgcc/config/i386/sol2-unwind.h", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -144,41 +144,7 @@ x86_fallback_frame_state (struct _Unwind_Context *context,\n   mcontext_t *mctx;\n   long new_cfa;\n \n-  if (/* Solaris 10\n-\t-----------\n-\t   <__sighndlr+0>:      push   %ebp\n-\t   <__sighndlr+1>:      mov    %esp,%ebp\n-\t   <__sighndlr+3>:      pushl  0x10(%ebp)\n-\t   <__sighndlr+6>:      pushl  0xc(%ebp)\n-\t   <__sighndlr+9>:      pushl  0x8(%ebp)\n-\t   <__sighndlr+12>:     call   *0x14(%ebp)\n-\t   <__sighndlr+15>:     add    $0xc,%esp     <--- PC\n-\t   <__sighndlr+18>:     leave\n-\t   <__sighndlr+19>:     ret  */\n-\t (*(unsigned long *)(pc - 15) == 0xffec8b55\n-\t  && *(unsigned long *)(pc - 11) == 0x75ff1075\n-\t  && *(unsigned long *)(pc - 7)  == 0x0875ff0c\n-\t  && *(unsigned long *)(pc - 3)  == 0x831455ff\n-\t  && *(unsigned long *)(pc + 1)  == 0xc3c90cc4)\n-\n-      || /* Solaris 11 before snv_125\n-\t   --------------------------\n-\t  <__sighndlr+0>       \tpush   %ebp\n-\t  <__sighndlr+1>       \tmov    %esp,%ebp\n-\t  <__sighndlr+4>      \tpushl  0x10(%ebp)\n-\t  <__sighndlr+6>      \tpushl  0xc(%ebp)\n-\t  <__sighndlr+9>      \tpushl  0x8(%ebp)\n-\t  <__sighndlr+12>      \tcall   *0x14(%ebp)\n-\t  <__sighndlr+15>\tadd    $0xc,%esp\n-\t  <__sighndlr+18>      \tleave                <--- PC\n-\t  <__sighndlr+19>      \tret  */\n-\t (*(unsigned long *)(pc - 18) == 0xffec8b55\n-\t  && *(unsigned long *)(pc - 14) == 0x7fff107f\n-\t  && *(unsigned long *)(pc - 10)  == 0x0875ff0c\n-\t  && *(unsigned long *)(pc - 6)  == 0x83145fff\n-\t  && *(unsigned long *)(pc - 1)  == 0xc3c90cc4)\n-\n-      || /* Solaris 11 since snv_125\n+  if (/* Solaris 11 since snv_125\n \t   -------------------------\n \t  <__sighndlr+0>       \tpush   %ebp\n \t  <__sighndlr+1>       \tmov    %esp,%ebp"}, {"sha": "b2914de0629437a3d68b0e6a863912f536791be4", "filename": "libgcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -5225,7 +5225,7 @@ fi\n # Link with -nostartfiles -nodefaultlibs since neither are present while\n # building libgcc.\n case ${host} in\n-i?86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n+i?86-*-solaris2* | x86_64-*-solaris2*)\n   cat > conftest.s <<EOF\n \t.section\t.eh_frame,\"a\",@unwind\n \t.zero\t4"}, {"sha": "5f11455dba5f2a5879bbb3554ccae4326b92608b", "filename": "libgcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -447,7 +447,7 @@ fi\n # Link with -nostartfiles -nodefaultlibs since neither are present while\n # building libgcc.\n case ${host} in\n-i?86-*-solaris2* | x86_64-*-solaris2.1[[0-9]]*)\n+i?86-*-solaris2* | x86_64-*-solaris2*)\n   cat > conftest.s <<EOF\n \t.section\t.eh_frame,\"a\",@unwind\n \t.zero\t4"}, {"sha": "e7ebc7d9b74aad19af51ec0ddcac0a649a45d692", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,3 +1,9 @@\n+2019-05-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (have_dl_iterate_phdr): Remove *-*-solaris2.10*\n+\thandling.\n+\t* configure: Regenerate.\n+\n 2019-04-08  Martin Liska  <mliska@suse.cz>\n \n \t* LOCAL_PATCHES: Add revision."}, {"sha": "2d25147adbaaa3578388cf75763e6178302aa3dc", "filename": "libsanitizer/configure", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -16659,12 +16659,6 @@ else\n fi\n rm -f conftest*\n \n-  case \"${host}\" in\n-  *-*-solaris2.10*)\n-    # Avoid dl_iterate_phdr on Solaris 10, where it is in the\n-    # header file but is only in -ldl.\n-    have_dl_iterate_phdr=no ;;\n-  esac\n fi\n if test \"$have_dl_iterate_phdr\" = \"yes\"; then\n "}, {"sha": "8aac33cb5c980db77e31e8d799ab5a12f3e3a404", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -280,12 +280,6 @@ else\n   # When built as a GCC target library, we can't do a link test.\n   AC_EGREP_HEADER([dl_iterate_phdr], [link.h], [have_dl_iterate_phdr=yes],\n \t\t  [have_dl_iterate_phdr=no])\n-  case \"${host}\" in\n-  *-*-solaris2.10*)\n-    # Avoid dl_iterate_phdr on Solaris 10, where it is in the\n-    # header file but is only in -ldl.\n-    have_dl_iterate_phdr=no ;;\n-  esac\n fi\n if test \"$have_dl_iterate_phdr\" = \"yes\"; then\n   AC_DEFINE(HAVE_DL_ITERATE_PHDR, 1, [Define if dl_iterate_phdr is available.])"}, {"sha": "52cd3adfc8b091b89d71929358ce0ff62b741db1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,3 +1,22 @@\n+2019-05-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/os/solaris/solaris2.10: Move to ...\n+\t* config/os/solaris: ... this.\n+\t* configure.host (os_include_dir): Adapt.\n+\t(abi_baseline_pair): Remove Solaris 10 handling.\n+\t* config/abi/post/i386-solaris2.10: Remove.\n+\t* config/abi/post/sparc-solaris2.10: Remove.\n+\t* config/abi/post/i386-solaris2.11: Rename to ...\n+\t* config/abi/post/i386-solaris: ... this.\n+\t* config/abi/post/sparc-solaris2.11: Rename to ...\n+\t* config/abi/post/sparc-solaris: ... this.\n+\n+\t* libsupc++/new_opa.cc [_GLIBCXX_HAVE_MEMALIGN] [__sun]: Remove\n+\tworkaround.\n+\n+\t* testsuite/ext/enc_filebuf/char/13598.cc: Remove *-*-solaris2.10\n+\txfail.\n+\n 2019-05-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/variant (__visit_with_index): Remove typedef."}, {"sha": "d865017cba62936331e5cb2682b7f6c9c0f21d50", "filename": "libstdc++-v3/config/abi/post/i386-solaris/amd64/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris%2Famd64%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris%2Famd64%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris%2Famd64%2Fbaseline_symbols.txt?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "previous_filename": "libstdc++-v3/config/abi/post/i386-solaris2.11/amd64/baseline_symbols.txt"}, {"sha": "d6080893ea268265d6397d3c0bda81a1a8d267f0", "filename": "libstdc++-v3/config/abi/post/i386-solaris/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris%2Fbaseline_symbols.txt?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "previous_filename": "libstdc++-v3/config/abi/post/i386-solaris2.11/baseline_symbols.txt"}, {"sha": "7edc33950085bab152477c3b14988d52127b1e16", "filename": "libstdc++-v3/config/abi/post/i386-solaris2.10/amd64/baseline_symbols.txt", "status": "removed", "additions": 0, "deletions": 5800, "changes": 5800, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956a62aaa2c8ff99431f737164e5dfb5652f801c/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris2.10%2Famd64%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956a62aaa2c8ff99431f737164e5dfb5652f801c/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris2.10%2Famd64%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris2.10%2Famd64%2Fbaseline_symbols.txt?ref=956a62aaa2c8ff99431f737164e5dfb5652f801c"}, {"sha": "963b2d4abf1c4a6200f61f4c0e76a35f54d8f593", "filename": "libstdc++-v3/config/abi/post/i386-solaris2.10/baseline_symbols.txt", "status": "removed", "additions": 0, "deletions": 5742, "changes": 5742, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956a62aaa2c8ff99431f737164e5dfb5652f801c/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris2.10%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956a62aaa2c8ff99431f737164e5dfb5652f801c/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris2.10%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fi386-solaris2.10%2Fbaseline_symbols.txt?ref=956a62aaa2c8ff99431f737164e5dfb5652f801c"}, {"sha": "da16a61f472edaa971478da861d9cc32c8cd758a", "filename": "libstdc++-v3/config/abi/post/sparc-solaris/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris%2Fbaseline_symbols.txt?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "previous_filename": "libstdc++-v3/config/abi/post/sparc-solaris2.11/baseline_symbols.txt"}, {"sha": "1dacb5ae9aad8597acefb6945681b36eea3437e5", "filename": "libstdc++-v3/config/abi/post/sparc-solaris/sparcv9/baseline_symbols.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris%2Fsparcv9%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris%2Fsparcv9%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris%2Fsparcv9%2Fbaseline_symbols.txt?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "previous_filename": "libstdc++-v3/config/abi/post/sparc-solaris2.11/sparcv9/baseline_symbols.txt"}, {"sha": "0a49a0b0e911f66da9a269ae92bed994a745909f", "filename": "libstdc++-v3/config/abi/post/sparc-solaris2.10/baseline_symbols.txt", "status": "removed", "additions": 0, "deletions": 5735, "changes": 5735, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956a62aaa2c8ff99431f737164e5dfb5652f801c/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris2.10%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956a62aaa2c8ff99431f737164e5dfb5652f801c/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris2.10%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris2.10%2Fbaseline_symbols.txt?ref=956a62aaa2c8ff99431f737164e5dfb5652f801c"}, {"sha": "6df91465a9d4e111c7620674adce4160e263e66b", "filename": "libstdc++-v3/config/abi/post/sparc-solaris2.10/sparcv9/baseline_symbols.txt", "status": "removed", "additions": 0, "deletions": 5793, "changes": 5793, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956a62aaa2c8ff99431f737164e5dfb5652f801c/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris2.10%2Fsparcv9%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956a62aaa2c8ff99431f737164e5dfb5652f801c/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris2.10%2Fsparcv9%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fsparc-solaris2.10%2Fsparcv9%2Fbaseline_symbols.txt?ref=956a62aaa2c8ff99431f737164e5dfb5652f801c"}, {"sha": "35a0a5e4b2b8ae860da04a7e310e0fd4ee2809d3", "filename": "libstdc++-v3/config/os/solaris/ctype_base.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_base.h?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "previous_filename": "libstdc++-v3/config/os/solaris/solaris2.10/ctype_base.h"}, {"sha": "27f18e9424c0b2003caf56cda5522178029a177d", "filename": "libstdc++-v3/config/os/solaris/ctype_configure_char.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_configure_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_configure_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_configure_char.cc?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "previous_filename": "libstdc++-v3/config/os/solaris/solaris2.10/ctype_configure_char.cc"}, {"sha": "aa92dcc40266b7b1c426f95db73b21d8dbf39831", "filename": "libstdc++-v3/config/os/solaris/ctype_inline.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fctype_inline.h?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "previous_filename": "libstdc++-v3/config/os/solaris/solaris2.10/ctype_inline.h"}, {"sha": "3a039d0b1273889792f0ce7cda109602e109ee53", "filename": "libstdc++-v3/config/os/solaris/os_defines.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fos_defines.h?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "previous_filename": "libstdc++-v3/config/os/solaris/solaris2.10/os_defines.h"}, {"sha": "57e1c502b09ade7b8444518e04ab3934acbbe789", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -303,14 +303,8 @@ case \"${host_os}\" in\n     # Use libatomic if necessary and avoid libstdc++ specific atomicity support\n     atomicity_dir=\"cpu/generic/atomicity_builtins\"\n     ;;\n-  solaris2)\n-    # This too-vague configuration does not provide enough information\n-    # to select a ctype include, and thus os_include_dir is a crap shoot.\n-    echo \"Please specify the full version of Solaris, ie. solaris2.10 \" 1>&2\n-    exit 1\n-    ;;\n-  solaris2.1[0-9])\n-    os_include_dir=\"os/solaris/solaris2.10\"\n+  solaris2*)\n+    os_include_dir=\"os/solaris\"\n     ;;\n   tpf)\n     os_include_dir=\"os/tpf\"\n@@ -372,19 +366,8 @@ case \"${host}\" in\n   powerpc*-*-darwin*)\n     port_specific_symbol_files=\"\\$(srcdir)/../config/os/bsd/darwin/ppc-extra.ver\"\n     ;;\n-  *-*-solaris2.1[0-9])\n-    # On Solaris 10 with Solaris ld, there's no COMDAT support.  GNU ld always\n-    # provides it, as does Solaris ld since Solaris 11, leading to different\n-    # baselines.\n-    case \"${host_os}:${with_gnu_ld}\" in\n-      # with_gnu_ld may either be unset (default) or no (with --without-gnu-ld).\n-      solaris2.10: | solaris2.10:no)\n-        abi_baseline_pair=solaris2.10\n-\t;;\n-      *)\n-        abi_baseline_pair=solaris2.11\n-\t;;\n-    esac\n+  *-*-solaris2*)\n+    abi_baseline_pair=solaris\n     case \"${host_cpu}\" in\n \ti?86 | x86_64)\n \t    abi_baseline_pair=i386-${abi_baseline_pair}"}, {"sha": "aa5d2e144559639173e228bfd3390495375f364d", "filename": "libstdc++-v3/libsupc++/new_opa.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew_opa.cc?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -68,12 +68,6 @@ aligned_alloc (std::size_t al, std::size_t sz)\n static inline void*\n aligned_alloc (std::size_t al, std::size_t sz)\n {\n-#ifdef __sun\n-  // Solaris 10 memalign requires that alignment is greater than or equal to\n-  // the size of a word.\n-  if (al < sizeof(int))\n-    al = sizeof(int);\n-#endif\n   return memalign (al, sz);\n }\n #else // !HAVE__ALIGNED_MALLOC && !HAVE_POSIX_MEMALIGN && !HAVE_MEMALIGN"}, {"sha": "cc08039deb42e5194a9581b9716a1951e0498728", "filename": "libstdc++-v3/testsuite/ext/enc_filebuf/char/13598.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd1242eecec3939e165ee5876bd8e4961654dae/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc?ref=ccd1242eecec3939e165ee5876bd8e4961654dae", "patch": "@@ -1,7 +1,3 @@\n-// Before Solaris 11, iconv -f ISO-8859-1 -t ISO-8859-1 fails with\n-// Not supported ISO-8859-1 to ISO-8859-1\n-//\n-// { dg-do run { xfail *-*-solaris2.10 } }\n // { dg-require-iconv \"ISO-8859-1\" }\n \n // Copyright (C) 2004-2019 Free Software Foundation, Inc."}]}