{"sha": "2046f23f52d5ed4299f12e5f98a88491e4936c44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA0NmYyM2Y1MmQ1ZWQ0Mjk5ZjEyZTVmOThhODg0OTFlNDkzNmM0NA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-12-13T14:05:57Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-12-13T14:05:57Z"}, "message": "combine: Fix PR83393\n\nIn move_deaths we move a REG_DEAD note if the instruction combination\nhas extended the lifetime of a register so that the existing note is\nno longer valid.  We find that note using reg_stat, but what that finds\ncan refer to a later insn.  If so, we cannot use the cached value.  This\npatch implements that.\n\n\n\tPR rtl-optimization/83393\n\t* combine.c (move_deaths): If reg_stat points to a too new insn in\n\tlast_death, do not use it: find the proper insn instead.\n\ngcc/testsuite/\n\tPR rtl-optimization/83393\n\t* gcc.dg/pr83393.c: New testcase.\n\nFrom-SVN: r255606", "tree": {"sha": "fdd3d7a0babdfbf3b3c64e2de65288c9cc43e89b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdd3d7a0babdfbf3b3c64e2de65288c9cc43e89b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2046f23f52d5ed4299f12e5f98a88491e4936c44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2046f23f52d5ed4299f12e5f98a88491e4936c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2046f23f52d5ed4299f12e5f98a88491e4936c44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2046f23f52d5ed4299f12e5f98a88491e4936c44/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b031ef48e365e256495a3e6d226a59f2290444f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b031ef48e365e256495a3e6d226a59f2290444f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b031ef48e365e256495a3e6d226a59f2290444f"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "5d992af707717846db57593daef91e81337342aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2046f23f52d5ed4299f12e5f98a88491e4936c44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2046f23f52d5ed4299f12e5f98a88491e4936c44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2046f23f52d5ed4299f12e5f98a88491e4936c44", "patch": "@@ -1,3 +1,9 @@\n+2017-12-13  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/83393\n+\t* combine.c (move_deaths): If reg_stat points to a too new insn in\n+\tlast_death, do not use it: find the proper insn instead.\n+\n 2017-12-12  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/83298"}, {"sha": "eb737f64002cd53abb5b734dab38d2adeb5e87f8", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2046f23f52d5ed4299f12e5f98a88491e4936c44/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2046f23f52d5ed4299f12e5f98a88491e4936c44/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2046f23f52d5ed4299f12e5f98a88491e4936c44", "patch": "@@ -13880,7 +13880,7 @@ move_deaths (rtx x, rtx maybe_kill_insn, int from_luid, rtx_insn *to_insn,\n \n       /* If we do not know where the register died, it may still die between\n \t FROM_LUID and TO_INSN.  If so, find it.  This is PR83304.  */\n-      if (!where_dead)\n+      if (!where_dead || DF_INSN_LUID (where_dead) >= DF_INSN_LUID (to_insn))\n \t{\n \t  rtx_insn *insn = prev_real_insn (to_insn);\n \t  while (insn"}, {"sha": "c5f1d44d2e938e63496e49f37a17d339ee290e97", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2046f23f52d5ed4299f12e5f98a88491e4936c44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2046f23f52d5ed4299f12e5f98a88491e4936c44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2046f23f52d5ed4299f12e5f98a88491e4936c44", "patch": "@@ -1,3 +1,8 @@\n+2017-12-13  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/83393\n+\t* gcc.dg/pr83393.c: New testcase.\n+\n 2017-12-13  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/15272"}, {"sha": "a9a6b338e0bddb0d4f1827d9d967d634f6897fe8", "filename": "gcc/testsuite/gcc.dg/pr83393.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2046f23f52d5ed4299f12e5f98a88491e4936c44/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83393.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2046f23f52d5ed4299f12e5f98a88491e4936c44/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83393.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83393.c?ref=2046f23f52d5ed4299f12e5f98a88491e4936c44", "patch": "@@ -0,0 +1,38 @@\n+/* PR rtl-optimization/83393 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-forward-propagate -fno-tree-bit-ccp\" } */\n+\n+typedef unsigned char u8;\n+typedef unsigned short u16;\n+typedef unsigned int u32;\n+typedef unsigned long long u64;\n+\n+u32 a, d;\n+u64 b;\n+u8 c;\n+\n+static u64 __attribute__ ((noinline, noclone))\n+foo (u16 f, u64 g)\n+{\n+  f <<= 15;\n+  f *= d;\n+  f -= g %= 44;\n+  f <<= f <= g;\n+  c = 255;\n+  c >>= (u8) f == 0;\n+  f *= g;\n+  c -= ~c;\n+  return f + a + b + f;\n+}\n+\n+int\n+main (void)\n+{\n+#if (__SIZEOF_LONG_LONG__ == 8 && __SIZEOF_INT__ == 4 \\\n+     && __SIZEOF_SHORT__ == 2 && __CHAR_BIT__ == 8)\n+  u64 x = foo (3, 0xE6C0011BBA6DBD7LL);\n+  if (x != 0x1f66e)\n+    __builtin_abort ();\n+#endif\n+  return 0;\n+}"}]}