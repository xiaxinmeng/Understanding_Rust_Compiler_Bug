{"sha": "01d685ccfd05a34b1eff959bceae99418b7cc95d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFkNjg1Y2NmZDA1YTM0YjFlZmY5NTliY2VhZTk5NDE4YjdjYzk1ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-11-19T21:35:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-11-19T21:35:27Z"}, "message": "re PR c++/36410 (ICE with transparent union)\n\n        PR c++/36410\n        * decl2.c (grokfield): Pass ATTR_FLAG_TYPE_IN_PLACE for a typedef\n        that names a class for linkage purposes.\n\nFrom-SVN: r142019", "tree": {"sha": "c87ee198abb514c93fda547a341ee8945119eb01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c87ee198abb514c93fda547a341ee8945119eb01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01d685ccfd05a34b1eff959bceae99418b7cc95d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d685ccfd05a34b1eff959bceae99418b7cc95d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01d685ccfd05a34b1eff959bceae99418b7cc95d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d685ccfd05a34b1eff959bceae99418b7cc95d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea1c67e6e3fe69c1926b8bbba75998d147dd5565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1c67e6e3fe69c1926b8bbba75998d147dd5565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1c67e6e3fe69c1926b8bbba75998d147dd5565"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "5e47e58b7acf815a67a08fe391918c9894d3757b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01d685ccfd05a34b1eff959bceae99418b7cc95d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01d685ccfd05a34b1eff959bceae99418b7cc95d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=01d685ccfd05a34b1eff959bceae99418b7cc95d", "patch": "@@ -1,5 +1,9 @@\n 2008-11-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/36410\n+\t* decl2.c (grokfield): Pass ATTR_FLAG_TYPE_IN_PLACE for a typedef\n+\tthat names a class for linkage purposes.\n+\n \tPR c++/37563\n \t* parser.c (cp_parser_pseudo_destructor_name): A pseudo-destructor\n \tname is not a declaration."}, {"sha": "a0ae6e4f7be2d4c91d441b5b5db447c4dde51095", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01d685ccfd05a34b1eff959bceae99418b7cc95d/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01d685ccfd05a34b1eff959bceae99418b7cc95d/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=01d685ccfd05a34b1eff959bceae99418b7cc95d", "patch": "@@ -803,7 +803,17 @@ grokfield (const cp_declarator *declarator,\n \tvalue = push_template_decl (value);\n \n       if (attrlist)\n-\tcplus_decl_attributes (&value, attrlist, 0);\n+\t{\n+\t  int attrflags = 0;\n+\n+\t  /* If this is a typedef that names the class for linkage purposes\n+\t     (7.1.3p8), apply any attributes directly to the type.  */\n+\t  if (TAGGED_TYPE_P (TREE_TYPE (value))\n+\t      && value == TYPE_NAME (TYPE_MAIN_VARIANT (TREE_TYPE (value))))\n+\t    attrflags = ATTR_FLAG_TYPE_IN_PLACE;\n+\n+\t  cplus_decl_attributes (&value, attrlist, attrflags);\n+\t}\n \n       return value;\n     }"}, {"sha": "305a9920ddc23003bcc1d764dfe5e4f58323fc8f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01d685ccfd05a34b1eff959bceae99418b7cc95d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01d685ccfd05a34b1eff959bceae99418b7cc95d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01d685ccfd05a34b1eff959bceae99418b7cc95d", "patch": "@@ -1,5 +1,8 @@\n 2008-11-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/36410\n+\t* g++.dg/ext/attrib32.C: Add member typedef case.\n+\n \tPR c++/37563\n \t* g++.dg/template/pseudodtor5.C: New test.\n "}, {"sha": "77f71ded89d16794f92b9ed9083b995d0818c03e", "filename": "gcc/testsuite/g++.dg/ext/attrib32.C", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01d685ccfd05a34b1eff959bceae99418b7cc95d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01d685ccfd05a34b1eff959bceae99418b7cc95d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib32.C?ref=01d685ccfd05a34b1eff959bceae99418b7cc95d", "patch": "@@ -20,3 +20,17 @@ void bar2(U1 u1, U2 u2)\n   foo2(u1);\n   foo2(u2);\n }\n+\n+// PR c++/36410\n+struct A\n+{\n+  typedef union\n+  {\n+    int i;\n+  } B __attribute__((transparent_union));\n+};\n+\n+void foo(A::B b)\n+{\n+  b.i;\n+}"}]}