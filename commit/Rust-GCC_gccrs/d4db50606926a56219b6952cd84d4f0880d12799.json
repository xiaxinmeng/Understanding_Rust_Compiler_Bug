{"sha": "d4db50606926a56219b6952cd84d4f0880d12799", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRkYjUwNjA2OTI2YTU2MjE5YjY5NTJjZDg0ZDRmMDg4MGQxMjc5OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-10-23T00:51:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-10-23T00:51:07Z"}, "message": "call.c (add_conv_candidate): Remove first_arg parm.\n\n\t* call.c (add_conv_candidate): Remove first_arg parm.\n\t(add_template_conv_candidate): Likewise.\n\t(add_template_candidate_real): Don't pass it.\n\t(build_op_call_1): Likewise.\n\nFrom-SVN: r229209", "tree": {"sha": "a52991bd095f3838032739b7d10af5d725fb3e9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a52991bd095f3838032739b7d10af5d725fb3e9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4db50606926a56219b6952cd84d4f0880d12799", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4db50606926a56219b6952cd84d4f0880d12799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4db50606926a56219b6952cd84d4f0880d12799", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4db50606926a56219b6952cd84d4f0880d12799/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfed192433db6e7b3d60a010759fd1a6e135600a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfed192433db6e7b3d60a010759fd1a6e135600a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfed192433db6e7b3d60a010759fd1a6e135600a"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "05ffbdc4d5a5b8fff56a88d180383104d2999695", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4db50606926a56219b6952cd84d4f0880d12799/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4db50606926a56219b6952cd84d4f0880d12799/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4db50606926a56219b6952cd84d4f0880d12799", "patch": "@@ -1,3 +1,10 @@\n+2015-10-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (add_conv_candidate): Remove first_arg parm.\n+\t(add_template_conv_candidate): Likewise.\n+\t(add_template_candidate_real): Don't pass it.\n+\t(build_op_call_1): Likewise.\n+\n 2015-10-22  Richard Biener  <rguenther@suse.de>\n \n \t* semantics.c (cp_finish_omp_clause_depend_sink): Properly convert"}, {"sha": "9304aac5f3fdfe570af20361825f2d44bdb70560", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4db50606926a56219b6952cd84d4f0880d12799/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4db50606926a56219b6952cd84d4f0880d12799/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d4db50606926a56219b6952cd84d4f0880d12799", "patch": "@@ -178,9 +178,6 @@ static struct z_candidate *add_template_candidate\n static struct z_candidate *add_template_candidate_real\n \t(struct z_candidate **, tree, tree, tree, tree, const vec<tree, va_gc> *,\n \t tree, tree, tree, int, tree, unification_kind_t, tsubst_flags_t);\n-static struct z_candidate *add_template_conv_candidate\n-\t(struct z_candidate **, tree, tree, tree, const vec<tree, va_gc> *,\n-\t tree, tree, tree, tsubst_flags_t);\n static void add_builtin_candidates\n \t(struct z_candidate **, enum tree_code, enum tree_code,\n \t tree, tree *, int, tsubst_flags_t);\n@@ -192,7 +189,7 @@ static void build_builtin_candidate\n \t(struct z_candidate **, tree, tree, tree, tree *, tree *,\n \t int, tsubst_flags_t);\n static struct z_candidate *add_conv_candidate\n-\t(struct z_candidate **, tree, tree, tree, const vec<tree, va_gc> *, tree,\n+\t(struct z_candidate **, tree, tree, const vec<tree, va_gc> *, tree,\n \t tree, tsubst_flags_t);\n static struct z_candidate *add_function_candidate\n \t(struct z_candidate **, tree, tree, tree, const vec<tree, va_gc> *, tree,\n@@ -2176,7 +2173,7 @@ add_function_candidate (struct z_candidate **candidates,\n \n static struct z_candidate *\n add_conv_candidate (struct z_candidate **candidates, tree fn, tree obj,\n-\t\t    tree first_arg, const vec<tree, va_gc> *arglist,\n+\t\t    const vec<tree, va_gc> *arglist,\n \t\t    tree access_path, tree conversion_path,\n \t\t    tsubst_flags_t complain)\n {\n@@ -2190,7 +2187,7 @@ add_conv_candidate (struct z_candidate **candidates, tree fn, tree obj,\n     parmlist = TREE_TYPE (parmlist);\n   parmlist = TYPE_ARG_TYPES (parmlist);\n \n-  len = vec_safe_length (arglist) + (first_arg != NULL_TREE ? 1 : 0) + 1;\n+  len = vec_safe_length (arglist) + 1;\n   convs = alloc_conversions (len);\n   parmnode = parmlist;\n   viable = 1;\n@@ -2208,10 +2205,8 @@ add_conv_candidate (struct z_candidate **candidates, tree fn, tree obj,\n \n       if (i == 0)\n \targ = obj;\n-      else if (i == 1 && first_arg != NULL_TREE)\n-\targ = first_arg;\n       else\n-\targ = (*arglist)[i - (first_arg != NULL_TREE ? 1 : 0) - 1];\n+\targ = (*arglist)[i - 1];\n       argtype = lvalue_type (arg);\n \n       if (i == 0)\n@@ -2260,7 +2255,7 @@ add_conv_candidate (struct z_candidate **candidates, tree fn, tree obj,\n       reason = arity_rejection (NULL_TREE, i + remaining, len);\n     }\n \n-  return add_candidate (candidates, totype, first_arg, arglist, len, convs,\n+  return add_candidate (candidates, totype, obj, arglist, len, convs,\n \t\t\taccess_path, conversion_path, viable, reason, flags);\n }\n \n@@ -3122,7 +3117,7 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n \n   if (obj != NULL_TREE)\n     /* Aha, this is a conversion function.  */\n-    cand = add_conv_candidate (candidates, fn, obj, first_arg, arglist,\n+    cand = add_conv_candidate (candidates, fn, obj, arglist,\n \t\t\t       access_path, conversion_path, complain);\n   else\n     cand = add_function_candidate (candidates, fn, ctype,\n@@ -3175,14 +3170,14 @@ add_template_candidate (struct z_candidate **candidates, tree tmpl, tree ctype,\n \n static struct z_candidate *\n add_template_conv_candidate (struct z_candidate **candidates, tree tmpl,\n-\t\t\t     tree obj, tree first_arg,\n+\t\t\t     tree obj,\n \t\t\t     const vec<tree, va_gc> *arglist,\n \t\t\t     tree return_type, tree access_path,\n \t\t\t     tree conversion_path, tsubst_flags_t complain)\n {\n   return\n     add_template_candidate_real (candidates, tmpl, NULL_TREE, NULL_TREE,\n-\t\t\t\t first_arg, arglist, return_type, access_path,\n+\t\t\t\t NULL_TREE, arglist, return_type, access_path,\n \t\t\t\t conversion_path, 0, obj, DEDUCE_CONV,\n \t\t\t\t complain);\n }\n@@ -4335,11 +4330,11 @@ build_op_call_1 (tree obj, vec<tree, va_gc> **args, tsubst_flags_t complain)\n \n \t    if (TREE_CODE (fn) == TEMPLATE_DECL)\n \t      add_template_conv_candidate\n-\t\t(&candidates, fn, obj, NULL_TREE, *args, totype,\n+\t\t(&candidates, fn, obj, *args, totype,\n \t\t /*access_path=*/NULL_TREE,\n \t\t /*conversion_path=*/NULL_TREE, complain);\n \t    else\n-\t      add_conv_candidate (&candidates, fn, obj, NULL_TREE,\n+\t      add_conv_candidate (&candidates, fn, obj,\n \t\t\t\t  *args, /*conversion_path=*/NULL_TREE,\n \t\t\t\t  /*access_path=*/NULL_TREE, complain);\n \t  }"}]}