{"sha": "b2d623e53b698df2e559bde5c6fc88718b389138", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJkNjIzZTUzYjY5OGRmMmU1NTliZGU1YzZmYzg4NzE4YjM4OTEzOA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-23T07:21:32Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-23T07:21:32Z"}, "message": "AVX-512. Add vshufpd insn patterns.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_expand \"avx_shufpd256<mask_expand4_name>\"): Add masking.\n\t(define_insn \"avx_shufpd256_1<mask_name>\"): Ditto.\n\t(define_expand \"sse2_shufpd<mask_expand4_name>\"): Ditto.\n\t(define_insn \"sse2_shufpd_v2df_mask\"): New.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215496", "tree": {"sha": "54a3bf97fe7eee07ff808b892b973ee128b63e6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54a3bf97fe7eee07ff808b892b973ee128b63e6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2d623e53b698df2e559bde5c6fc88718b389138", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2d623e53b698df2e559bde5c6fc88718b389138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2d623e53b698df2e559bde5c6fc88718b389138", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2d623e53b698df2e559bde5c6fc88718b389138/comments", "author": null, "committer": null, "parents": [{"sha": "fc01a1ac21b39936f32331151a75694d12c5bc25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc01a1ac21b39936f32331151a75694d12c5bc25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc01a1ac21b39936f32331151a75694d12c5bc25"}], "stats": {"total": 76, "additions": 60, "deletions": 16}, "files": [{"sha": "ca76b1750443011b4a6101268d3a88cdbaee9857", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2d623e53b698df2e559bde5c6fc88718b389138/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2d623e53b698df2e559bde5c6fc88718b389138/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2d623e53b698df2e559bde5c6fc88718b389138", "patch": "@@ -1,3 +1,18 @@\n+2014-09-23  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_expand \"avx_shufpd256<mask_expand4_name>\"): Add masking.\n+\t(define_insn \"avx_shufpd256_1<mask_name>\"): Ditto.\n+\t(define_expand \"sse2_shufpd<mask_expand4_name>\"): Ditto.\n+\t(define_insn \"sse2_shufpd_v2df_mask\"): New.\n+\n 2014-09-23  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "9e0c0e82b433aa0da0fc376b6d1e5f02c9079a31", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 45, "deletions": 16, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2d623e53b698df2e559bde5c6fc88718b389138/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2d623e53b698df2e559bde5c6fc88718b389138/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b2d623e53b698df2e559bde5c6fc88718b389138", "patch": "@@ -7790,33 +7790,36 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V8DF\")])\n \n-(define_expand \"avx_shufpd256\"\n+(define_expand \"avx_shufpd256<mask_expand4_name>\"\n   [(match_operand:V4DF 0 \"register_operand\")\n    (match_operand:V4DF 1 \"register_operand\")\n    (match_operand:V4DF 2 \"nonimmediate_operand\")\n    (match_operand:SI 3 \"const_int_operand\")]\n   \"TARGET_AVX\"\n {\n   int mask = INTVAL (operands[3]);\n-  emit_insn (gen_avx_shufpd256_1 (operands[0], operands[1], operands[2],\n-\t\t\t\t   GEN_INT (mask & 1),\n-\t\t\t\t   GEN_INT (mask & 2 ? 5 : 4),\n-\t\t\t\t   GEN_INT (mask & 4 ? 3 : 2),\n-\t\t\t\t   GEN_INT (mask & 8 ? 7 : 6)));\n+  emit_insn (gen_avx_shufpd256_1<mask_expand4_name> (operands[0],\n+\t\t\t\t\t\t     operands[1],\n+\t\t\t\t\t\t     operands[2],\n+\t\t\t\t\t\t     GEN_INT (mask & 1),\n+\t\t\t\t\t\t     GEN_INT (mask & 2 ? 5 : 4),\n+\t\t\t\t\t\t     GEN_INT (mask & 4 ? 3 : 2),\n+\t\t\t\t\t\t     GEN_INT (mask & 8 ? 7 : 6)\n+\t\t\t\t\t\t     <mask_expand4_args>));\n   DONE;\n })\n \n-(define_insn \"avx_shufpd256_1\"\n-  [(set (match_operand:V4DF 0 \"register_operand\" \"=x\")\n+(define_insn \"avx_shufpd256_1<mask_name>\"\n+  [(set (match_operand:V4DF 0 \"register_operand\" \"=v\")\n \t(vec_select:V4DF\n \t  (vec_concat:V8DF\n-\t    (match_operand:V4DF 1 \"register_operand\" \"x\")\n-\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V4DF 1 \"register_operand\" \"v\")\n+\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \"vm\"))\n \t  (parallel [(match_operand 3 \"const_0_to_1_operand\")\n \t\t     (match_operand 4 \"const_4_to_5_operand\")\n \t\t     (match_operand 5 \"const_2_to_3_operand\")\n \t\t     (match_operand 6 \"const_6_to_7_operand\")])))]\n-  \"TARGET_AVX\"\n+  \"TARGET_AVX && <mask_avx512vl_condition>\"\n {\n   int mask;\n   mask = INTVAL (operands[3]);\n@@ -7825,27 +7828,53 @@\n   mask |= (INTVAL (operands[6]) - 6) << 3;\n   operands[3] = GEN_INT (mask);\n \n-  return \"vshufpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n+  return \"vshufpd\\t{%3, %2, %1, %0<mask_operand7>|%0<mask_operand7>, %1, %2, %3}\";\n }\n   [(set_attr \"type\" \"sseshuf\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"V4DF\")])\n \n-(define_expand \"sse2_shufpd\"\n+(define_expand \"sse2_shufpd<mask_expand4_name>\"\n   [(match_operand:V2DF 0 \"register_operand\")\n    (match_operand:V2DF 1 \"register_operand\")\n    (match_operand:V2DF 2 \"nonimmediate_operand\")\n    (match_operand:SI 3 \"const_int_operand\")]\n   \"TARGET_SSE2\"\n {\n   int mask = INTVAL (operands[3]);\n-  emit_insn (gen_sse2_shufpd_v2df (operands[0], operands[1], operands[2],\n-\t\t\t\tGEN_INT (mask & 1),\n-\t\t\t\tGEN_INT (mask & 2 ? 3 : 2)));\n+  emit_insn (gen_sse2_shufpd_v2df<mask_expand4_name> (operands[0], operands[1],\n+\t\t\t\t\t\t      operands[2], GEN_INT (mask & 1),\n+\t\t\t\t\t\t      GEN_INT (mask & 2 ? 3 : 2)\n+\t\t\t\t\t\t      <mask_expand4_args>));\n   DONE;\n })\n \n+(define_insn \"sse2_shufpd_v2df_mask\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=v\")\n+    (vec_merge:V2DF\n+\t  (vec_select:V2DF\n+\t    (vec_concat:V4DF\n+\t      (match_operand:V2DF 1 \"register_operand\" \"v\")\n+\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"vm\"))\n+\t    (parallel [(match_operand 3 \"const_0_to_1_operand\")\n+\t\t           (match_operand 4 \"const_2_to_3_operand\")]))\n+      (match_operand:V2DF 5 \"vector_move_operand\" \"0C\")\n+      (match_operand:QI 6 \"register_operand\" \"Yk\")))]\n+  \"TARGET_AVX512VL\"\n+{\n+  int mask;\n+  mask = INTVAL (operands[3]);\n+  mask |= (INTVAL (operands[4]) - 2) << 1;\n+  operands[3] = GEN_INT (mask);\n+\n+  return \"vshufpd\\t{%3, %2, %1, %0%{%6%}%N5|%0%{6%}%N5, %1, %2, %3}\";\n+}\n+  [(set_attr \"type\" \"sseshuf\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"V2DF\")])\n+\n ;; punpcklqdq and punpckhqdq are shorter than shufpd.\n (define_insn \"avx2_interleave_highv4di<mask_name>\"\n   [(set (match_operand:V4DI 0 \"register_operand\" \"=v\")"}]}