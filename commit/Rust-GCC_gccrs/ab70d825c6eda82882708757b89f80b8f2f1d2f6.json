{"sha": "ab70d825c6eda82882708757b89f80b8f2f1d2f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI3MGQ4MjVjNmVkYTgyODgyNzA4NzU3Yjg5ZjgwYjhmMmYxZDJmNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-07-01T06:56:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-07-01T06:56:18Z"}, "message": "re PR middle-end/49603 (177.mesa in SPEC CPU 2000 failed to build)\n\n2011-07-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49603\n\t* tree-vect-stmts.c (vectorizable_load): Remove unnecessary\n\tassert.\n\n\t* gcc.dg/torture/pr49603.c: New testcase.\n\nFrom-SVN: r175746", "tree": {"sha": "a869fea6b0c9c455ef294799ca412c88df3bfb34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a869fea6b0c9c455ef294799ca412c88df3bfb34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab70d825c6eda82882708757b89f80b8f2f1d2f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab70d825c6eda82882708757b89f80b8f2f1d2f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab70d825c6eda82882708757b89f80b8f2f1d2f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab70d825c6eda82882708757b89f80b8f2f1d2f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "59198f271e3e631f90a201e87d9e1c6bafe34536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59198f271e3e631f90a201e87d9e1c6bafe34536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59198f271e3e631f90a201e87d9e1c6bafe34536"}], "stats": {"total": 49, "additions": 37, "deletions": 12}, "files": [{"sha": "6c4a488b9f99aca394b6dbc862425c91ad0d3854", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab70d825c6eda82882708757b89f80b8f2f1d2f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab70d825c6eda82882708757b89f80b8f2f1d2f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab70d825c6eda82882708757b89f80b8f2f1d2f6", "patch": "@@ -1,3 +1,9 @@\n+2011-07-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49603\n+\t* tree-vect-stmts.c (vectorizable_load): Remove unnecessary\n+\tassert.\n+\n 2011-06-30  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-sra.c (struct access): Rename total_scalarization to"}, {"sha": "17046d6391b6654a5c40737a8d43d1e4e28c97c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab70d825c6eda82882708757b89f80b8f2f1d2f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab70d825c6eda82882708757b89f80b8f2f1d2f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab70d825c6eda82882708757b89f80b8f2f1d2f6", "patch": "@@ -1,3 +1,8 @@\n+2011-07-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49603\n+\t* gcc.dg/torture/pr49603.c: New testcase.\n+\n 2011-06-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/49387"}, {"sha": "90f51e5059cd1b1b8dc296179139203336e44c70", "filename": "gcc/testsuite/gcc.dg/torture/pr49603.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab70d825c6eda82882708757b89f80b8f2f1d2f6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49603.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab70d825c6eda82882708757b89f80b8f2f1d2f6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49603.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49603.c?ref=ab70d825c6eda82882708757b89f80b8f2f1d2f6", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+\n+struct gl_visual {\n+    float AlphaScale;\n+};\n+struct gl_context {\n+    struct gl_visual *Visual;\n+};\n+void quickdraw_rgb( struct gl_context * ctx,\n+\t\t    int width, int height)\n+{\n+  int i, j;\n+  unsigned char alpha[1600];\n+  for (j=0; j<width; j++)\n+    alpha[j] = (int) ctx->Visual->AlphaScale; \n+  for (i=0; i<height; i++)\n+    foo( alpha);\n+}\n+"}, {"sha": "9a384c5cfa3f8d8ef4afbb8a11ddfc7bd3a288de", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab70d825c6eda82882708757b89f80b8f2f1d2f6/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab70d825c6eda82882708757b89f80b8f2f1d2f6/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=ab70d825c6eda82882708757b89f80b8f2f1d2f6", "patch": "@@ -4574,19 +4574,14 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t      /* 4. Handle invariant-load.  */\n \t      if (inv_p && !bb_vinfo)\n \t\t{\n+\t\t  tree vec_inv;\n+\t\t  gimple_stmt_iterator gsi2 = *gsi;\n \t\t  gcc_assert (!strided_load);\n-\t\t  if (j == 0)\n-\t\t    {\n-\t\t      tree vec_inv;\n-\t\t      gimple_stmt_iterator gsi2 = *gsi;\n-\t\t      gsi_next (&gsi2);\n-\t\t      vec_inv = build_vector_from_val (vectype, scalar_dest);\n-\t\t      new_temp = vect_init_vector (stmt, vec_inv,\n-\t\t\t\t\t\t   vectype, &gsi2);\n-\t\t      new_stmt = SSA_NAME_DEF_STMT (new_temp);\n-\t\t    }\n-\t\t  else\n-\t\t    gcc_unreachable (); /* FORNOW. */\n+\t\t  gsi_next (&gsi2);\n+\t\t  vec_inv = build_vector_from_val (vectype, scalar_dest);\n+\t\t  new_temp = vect_init_vector (stmt, vec_inv,\n+\t\t\t\t\t       vectype, &gsi2);\n+\t\t  new_stmt = SSA_NAME_DEF_STMT (new_temp);\n \t\t}\n \n \t      if (negative)"}]}