{"sha": "a0998ca3add191e76f151e541fc18a6d9dd5a1f0", "node_id": "C_kwDOANBUbNoAKGEwOTk4Y2EzYWRkMTkxZTc2ZjE1MWU1NDFmYzE4YTZkOWRkNWExZjA", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-07-19T21:06:30Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-05T07:21:03Z"}, "message": "[Ada] Enable Error_Msg_GNAT_Extension for mixed decl/stmts\n\nEnable mixing of declarative items and statements under\nthe -gnatX switch. The previous version used the -gnat2022\nswitch.\n\nIn addition, change the error message so that it advertises\nthe new feature when it is disabled. Instead of:\n\ndeclarations must come before \"begin\"\n\nwe now say (without -gnatX):\n\ndeclarations mixed with statements is a GNAT-specific extension\nunit must be compiled with -gnatX or use pragma Extensions_Allowed (On)\n\ngcc/ada/\n\n\t* par-ch5.adb\n\t(P_Sequence_Of_Statements): Call Error_Msg_GNAT_Extension to give\n\tthe error message.", "tree": {"sha": "990cf306958f63118a95e7465579cb4d2fe62ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/990cf306958f63118a95e7465579cb4d2fe62ff3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0998ca3add191e76f151e541fc18a6d9dd5a1f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0998ca3add191e76f151e541fc18a6d9dd5a1f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0998ca3add191e76f151e541fc18a6d9dd5a1f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0998ca3add191e76f151e541fc18a6d9dd5a1f0/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44bd2755a8bfd4c8849d97f058141c3d5a17647b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44bd2755a8bfd4c8849d97f058141c3d5a17647b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44bd2755a8bfd4c8849d97f058141c3d5a17647b"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "1be3ef80812d709e92561502b5dfb07791aedfee", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0998ca3add191e76f151e541fc18a6d9dd5a1f0/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0998ca3add191e76f151e541fc18a6d9dd5a1f0/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=a0998ca3add191e76f151e541fc18a6d9dd5a1f0", "patch": "@@ -242,8 +242,8 @@ package body Ch5 is\n \n       --  In Ada 2022, we allow declarative items to be mixed with\n       --  statements. The loop below alternates between calling\n-      --  P_Declarative_Items to parse zero or more declarative items, and\n-      --  parsing a statement.\n+      --  P_Declarative_Items to parse zero or more declarative items,\n+      --  and parsing a statement.\n \n       loop\n          Ignore (Tok_Semicolon);\n@@ -255,26 +255,17 @@ package body Ch5 is\n               (Statement_List, Declare_Expression => False,\n                In_Spec => False, In_Statements => True);\n \n-            --  Use the length of the list to determine whether we parsed any\n-            --  declarative items. If so, it's an error pre-2022. ???We should\n-            --  be calling Error_Msg_Ada_2022_Feature below, to advertise the\n-            --  new feature, but that causes a lot of test diffs, so for now,\n-            --  we mimic the old \"...before begin\" message.\n+            --  Use the length of the list to determine whether we parsed\n+            --  any declarative items. If so, it's an error unless language\n+            --  extensions are enabled.\n \n             if List_Length (Statement_List) > Num_Statements then\n                if All_Errors_Mode or else No (Decl_Loc) then\n                   Decl_Loc := Sloc (Pick (Statement_List, Num_Statements + 1));\n \n-                  if False then\n-                     Error_Msg_Ada_2022_Feature\n-                       (\"declarations mixed with statements\",\n-                        Sloc (Pick (Statement_List, Num_Statements + 1)));\n-                  else\n-                     if Ada_Version < Ada_2022 then\n-                        Error_Msg\n-                          (\"declarations must come before BEGIN\", Decl_Loc);\n-                     end if;\n-                  end if;\n+                  Error_Msg_GNAT_Extension\n+                    (\"declarations mixed with statements\",\n+                     Sloc (Pick (Statement_List, Num_Statements + 1)));\n                end if;\n             end if;\n          end;"}]}