{"sha": "6b8e738ef0d43329a642f2e17fe4112a6af8701d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI4ZTczOGVmMGQ0MzMyOWE2NDJmMmUxN2ZlNDExMmE2YWY4NzAxZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-07-18T12:05:12Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-07-18T12:05:12Z"}, "message": "class.c (classtype_has_move_assign_or_move_ctor): Declare.\n\n\t* class.c (classtype_has_move_assign_or_move_ctor): Declare.\n\t(add_implicitly_declared_members): Use it.\n\t(type_has_move_constructor, type_has_move_assign): Merge into ...\n\t(classtype_has_move_assign_or_move_ctor): ... this new function.\n\t* cp-tree.h (type_has_move_constructor, type_has_move_assign): Delete.\n\nFrom-SVN: r250305", "tree": {"sha": "5f5fe24ac3dfcf1aebf0949a7218e706487ba410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f5fe24ac3dfcf1aebf0949a7218e706487ba410"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b8e738ef0d43329a642f2e17fe4112a6af8701d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8e738ef0d43329a642f2e17fe4112a6af8701d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b8e738ef0d43329a642f2e17fe4112a6af8701d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8e738ef0d43329a642f2e17fe4112a6af8701d/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694dd0e408581c9e3fc0fab4864d9de054c7cc0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694dd0e408581c9e3fc0fab4864d9de054c7cc0c"}], "stats": {"total": 46, "additions": 17, "deletions": 29}, "files": [{"sha": "9ecdf469d28594b639dd7d135dbcf1df5533b179", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8e738ef0d43329a642f2e17fe4112a6af8701d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8e738ef0d43329a642f2e17fe4112a6af8701d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6b8e738ef0d43329a642f2e17fe4112a6af8701d", "patch": "@@ -1,3 +1,11 @@\n+2017-07-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* class.c (classtype_has_move_assign_or_move_ctor): Declare.\n+\t(add_implicitly_declared_members): Use it.\n+\t(type_has_move_constructor, type_has_move_assign): Merge into ...\n+\t(classtype_has_move_assign_or_move_ctor): ... this new function.\n+\t* cp-tree.h (type_has_move_constructor, type_has_move_assign): Delete.\n+\n 2017-07-17  Volker Reichelt  <v.reichelt@netcologne.de>\n \n \t* parser.c (cp_parser_decl_specifier_seq): Add fix-it hints for"}, {"sha": "885322c9b429b5ad717b7ff1bb43f86d7c91f7d0", "filename": "gcc/cp/class.c", "status": "modified", "additions": 9, "deletions": 27, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8e738ef0d43329a642f2e17fe4112a6af8701d/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8e738ef0d43329a642f2e17fe4112a6af8701d/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=6b8e738ef0d43329a642f2e17fe4112a6af8701d", "patch": "@@ -150,6 +150,7 @@ static void build_base_fields (record_layout_info, splay_tree, tree *);\n static void check_methods (tree);\n static void remove_zero_width_bit_fields (tree);\n static bool accessible_nvdtor_p (tree);\n+static bool classtype_has_move_assign_or_move_ctor (tree);\n \n /* Used by find_flexarrays and related functions.  */\n struct flexmems_t;\n@@ -3384,7 +3385,7 @@ add_implicitly_declared_members (tree t, tree* access_decls,\n   bool move_ok = false;\n   if (cxx_dialect >= cxx11 && CLASSTYPE_LAZY_DESTRUCTOR (t)\n       && !TYPE_HAS_COPY_CTOR (t) && !TYPE_HAS_COPY_ASSIGN (t)\n-      && !type_has_move_constructor (t) && !type_has_move_assign (t))\n+      && !classtype_has_move_assign_or_move_ctor (t))\n     move_ok = true;\n \n   /* [class.ctor]\n@@ -5456,38 +5457,19 @@ type_has_virtual_destructor (tree type)\n   return (dtor && DECL_VIRTUAL_P (dtor));\n }\n \n-/* Returns true iff class T has a move constructor.  */\n+/* Returns true iff class T has move assignment or move constructor.  */\n \n-bool\n-type_has_move_constructor (tree t)\n+static bool\n+classtype_has_move_assign_or_move_ctor (tree t)\n {\n-  if (CLASSTYPE_LAZY_MOVE_CTOR (t))\n-    {\n-      gcc_assert (COMPLETE_TYPE_P (t));\n-      lazily_declare_fn (sfk_move_constructor, t);\n-    }\n+  gcc_assert (!CLASSTYPE_LAZY_MOVE_CTOR (t)\n+\t      && !CLASSTYPE_LAZY_MOVE_ASSIGN (t));\n \n-  if (!CLASSTYPE_METHOD_VEC (t))\n-    return false;\n-\n-  for (ovl_iterator iter (CLASSTYPE_CONSTRUCTORS (t)); iter; ++iter)\n+  for (ovl_iterator iter (lookup_fnfields_slot_nolazy\n+\t\t\t  (t, ctor_identifier)); iter; ++iter)\n     if (move_fn_p (*iter))\n       return true;\n \n-  return false;\n-}\n-\n-/* Returns true iff class T has a move assignment operator.  */\n-\n-bool\n-type_has_move_assign (tree t)\n-{\n-  if (CLASSTYPE_LAZY_MOVE_ASSIGN (t))\n-    {\n-      gcc_assert (COMPLETE_TYPE_P (t));\n-      lazily_declare_fn (sfk_move_assignment, t);\n-    }\n-\n   for (ovl_iterator iter (lookup_fnfields_slot_nolazy\n \t\t\t  (t, cp_assignment_operator_id (NOP_EXPR)));\n        iter; ++iter)"}, {"sha": "abc9b65b01800309b434b9063b4fd671bc183ad8", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8e738ef0d43329a642f2e17fe4112a6af8701d/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8e738ef0d43329a642f2e17fe4112a6af8701d/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=6b8e738ef0d43329a642f2e17fe4112a6af8701d", "patch": "@@ -6023,8 +6023,6 @@ extern tree default_init_uninitialized_part (tree);\n extern bool trivial_default_constructor_is_constexpr (tree);\n extern bool type_has_constexpr_default_constructor (tree);\n extern bool type_has_virtual_destructor\t\t(tree);\n-extern bool type_has_move_constructor\t\t(tree);\n-extern bool type_has_move_assign\t\t(tree);\n extern bool classtype_has_user_move_assign_or_move_ctor_p (tree);\n extern bool type_build_ctor_call\t\t(tree);\n extern bool type_build_dtor_call\t\t(tree);"}]}