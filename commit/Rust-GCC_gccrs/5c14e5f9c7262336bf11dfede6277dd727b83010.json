{"sha": "5c14e5f9c7262336bf11dfede6277dd727b83010", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMxNGU1ZjljNzI2MjMzNmJmMTFkZmVkZTYyNzdkZDcyN2I4MzAxMA==", "commit": {"author": {"name": "YizhePKU", "email": "42838469+YizhePKU@users.noreply.github.com", "date": "2021-04-09T02:37:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-09T02:37:53Z"}, "message": "Merge branch 'master' into fix-zero-length-array-2", "tree": {"sha": "f4d40a9c91e92aaaa3450166cf6ee7cdb38e055a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4d40a9c91e92aaaa3450166cf6ee7cdb38e055a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c14e5f9c7262336bf11dfede6277dd727b83010", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgb74BCRBK7hj4Ov3rIwAAdHIIAExPiIZ9UgXb4nvRwtOENH6U\nTFPNrV+q8rNBplU6KJM60w2+IOSuGi1ugNgMbes9AtC75NDTrnTcqYZsloeXk/H2\nauNSTdp469aBQ5lS4Ofh6DxQB6P4iAWZNl/zmWZfgIhytX+jtirvWVFKfZ79P6xg\nuAq4TLpM1KzPtsWpJ4+V5AG4mDjWtUe6joTfF7nzDrTfG9tN3xMMPtsWJr/uVkxf\n7rUfck3fokXvhBMcTOUTohE3ry59FurRcZ5XngX2FH5YjIDh9kxZWE9Q1eZO1sc9\nZ9sgbLGuL5+1Ox23Gqn4AZgwLrv6wEMP0eVJ4NfotYNeCw00l/kx6vlL5Mr2ZBA=\n=/nFa\n-----END PGP SIGNATURE-----\n", "payload": "tree f4d40a9c91e92aaaa3450166cf6ee7cdb38e055a\nparent 5da07eb33b5453c932ab1248629d9feebf0da6b1\nparent 4937562f7ca354dc80369cc2e049c391838537f1\nauthor YizhePKU <42838469+YizhePKU@users.noreply.github.com> 1617935873 +0800\ncommitter GitHub <noreply@github.com> 1617935873 +0800\n\nMerge branch 'master' into fix-zero-length-array-2"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c14e5f9c7262336bf11dfede6277dd727b83010", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c14e5f9c7262336bf11dfede6277dd727b83010", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c14e5f9c7262336bf11dfede6277dd727b83010/comments", "author": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5da07eb33b5453c932ab1248629d9feebf0da6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da07eb33b5453c932ab1248629d9feebf0da6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da07eb33b5453c932ab1248629d9feebf0da6b1"}, {"sha": "4937562f7ca354dc80369cc2e049c391838537f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4937562f7ca354dc80369cc2e049c391838537f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4937562f7ca354dc80369cc2e049c391838537f1"}], "stats": {"total": 1410117, "additions": 921435, "deletions": 488682}, "files": [{"sha": "44a0db682417a040e18131abc3d7e1d4bcd5f709", "filename": ".dir-locals.el", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/.dir-locals.el", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/.dir-locals.el", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.dir-locals.el?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -14,11 +14,10 @@\n ;; You should have received a copy of the GNU General Public License\n ;; along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-(\n- (tcl-mode . ((tcl-indent-level . 4)\n+((tcl-mode . ((tcl-indent-level . 4)\n \t      (tcl-continued-indent-level . 4)\n \t      (indent-tabs-mode . t)))\n  (nil . ((bug-reference-url-format . \"http://gcc.gnu.org/PR%s\")))\n  (c-mode . ((c-file-style . \"GNU\")\n-\t    (indent-tabs-mode . t)))\n-)\n+\t    (indent-tabs-mode . t)\n+\t    (fill-column . 80))))"}, {"sha": "9e3e74023e7417afc5c48d64a199c346d1e0ed5e", "filename": ".github/bors.toml", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/.github%2Fbors.toml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/.github%2Fbors.toml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fbors.toml?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,6 @@\n+status = [\n+  \"build-and-check\", \"clang-format\"\n+]\n+# Uncomment this to use a two hour timeout.\n+# The default is one hour.\n+#timeout_sec = 7200"}, {"sha": "c7b76a385c9710124896f7dfb5eb0cdc08051c5b", "filename": ".github/workflows/bootstrap.yml", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/.github%2Fworkflows%2Fbootstrap.yml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/.github%2Fworkflows%2Fbootstrap.yml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fworkflows%2Fbootstrap.yml?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,59 @@\n+name: GCC Bootstrap Build\n+\n+on:\n+  push:\n+    branches: [ master ]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+\n+    - name: Install Deps\n+      run: |\n+          sudo apt-get update;\n+          sudo apt-get install -y \\\n+                  automake \\\n+                  autoconf \\\n+                  libtool \\\n+                  autogen \\\n+                  bison \\\n+                  flex \\\n+                  libgmp3-dev \\\n+                  libmpfr-dev \\\n+                  libmpc-dev \\\n+                  build-essential \\\n+                  gcc-multilib \\\n+                  g++-multilib \\\n+                  dejagnu\n+\n+    - name: Configure\n+      run: |\n+           mkdir -p gccrs-build;\n+           cd gccrs-build;\n+           ../configure \\\n+               --enable-languages=rust \\\n+               --enable-multilib\n+\n+    - name: Build\n+      run: |\n+           cd gccrs-build; \\\n+           make -j $(nproc)\n+\n+    - name: Run Tests\n+      run: |\n+           cd gccrs-build; \\\n+           make check-rust\n+    - name: Check regressions\n+      run: |\n+           cd gccrs-build; \\\n+           if grep \"# of unexpected\" gcc/testsuite/rust/rust.sum;\\\n+           then \\\n+              echo \"some tests are not correct\"; \\\n+              exit 1; \\\n+            else \\\n+              exit 0; \\\n+            fi"}, {"sha": "46d32ccb1d79d066387c0f510c22fdef1c01b6e0", "filename": ".github/workflows/ccpp.yml", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/.github%2Fworkflows%2Fccpp.yml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/.github%2Fworkflows%2Fccpp.yml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fworkflows%2Fccpp.yml?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -2,12 +2,14 @@ name: C/C++ CI\n \n on:\n   push:\n-    branches: [ master ]\n+    branches:\n+      - trying\n+      - staging\n   pull_request:\n     branches: [ master ]\n \n jobs:\n-  build:\n+  build-and-check:\n \n     runs-on: ubuntu-latest\n \n@@ -46,8 +48,17 @@ jobs:\n            cd gccrs-build; \\\n            make -j $(nproc)\n \n-    - name: Test\n+    - name: Run Tests\n+      run: |\n+           cd gccrs-build; \\\n+           make check-rust\n+    - name: Check regressions\n       run: |\n            cd gccrs-build; \\\n-           make check-rust | tee results.log; \\\n-           if [ `grep \"# of unexpected failures\" results.log | wc -l` != \"0\" ]; then exit 1; fi\n+           if grep \"# of unexpected\" gcc/testsuite/rust/rust.sum;\\\n+           then \\\n+              echo \"some tests are not correct\"; \\\n+              exit 1; \\\n+            else \\\n+              exit 0; \\\n+            fi"}, {"sha": "d37247cd962610b190c71d0ca6e58b0bbb7b61d7", "filename": ".github/workflows/clang-format.yml", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/.github%2Fworkflows%2Fclang-format.yml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/.github%2Fworkflows%2Fclang-format.yml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fworkflows%2Fclang-format.yml?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -2,12 +2,14 @@ name: Clang Format Lint\n \n on:\n   push:\n-    branches: [ master ]\n+    branches:\n+      - trying\n+      - staging\n   pull_request:\n     branches: [ master ]\n \n jobs:\n-  build:\n+  clang-format:\n     runs-on: ubuntu-latest\n \n     steps:"}, {"sha": "53a18fd8d88cfe804e5604908e955bf20f5b3e71", "filename": ".gitignore", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/.gitignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/.gitignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.gitignore?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -15,6 +15,7 @@\n *.o\n *.pyc\n *.tmp\n+*.a\n \n .deps\n .libs\n@@ -44,6 +45,9 @@ compile_commands.json\n .gdbinit\n .gdb_history\n \n+perf.data\n+perf.data.old\n+\n # ignore core files, but not java/net/protocol/core/\n core\n !core/\n@@ -54,6 +58,9 @@ lost+found\n LAST_UPDATED\n REVISION\n \n+stamp-*\n+*.stamp\n+\n # ignore in-tree prerequisites\n /mpfr*\n /mpc*"}, {"sha": "ba411e22ce52d1b4cc1a0cc2396cc88af76750c8", "filename": "ChangeLog", "status": "modified", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,3 +1,126 @@\n+2021-03-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* MAINTAINERS: Add myself as static analyzer maintainer.\n+\n+2021-03-18  Jeff Law  <jlaw@tachyum.com>\n+\n+\t* MAINTAINERS: Update primary entry.\n+\n+2021-03-13  Eugene Rozenfeld  <erozen@microsoft.com>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself.\n+\n+2021-03-13  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.def: Remove all-sim dependency on configure-gdb.\n+\t* Makefile.in: Regenerated.\n+\n+2021-03-11  Jeff Law  <law@redhat.com>\n+\n+\t* MAINTAINERS: Update entries for a few ex-ImgTec employees\n+\n+2021-03-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.tpl: The change was done Makefile.in which\n+\tis generated file.\n+\n+2021-03-08  Jeff Law  <law@redhat.com>\n+\n+\t* MAINTAINERS: Update my email address\n+\n+2021-02-23  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config.guess: Import latest upstream.\n+\t* config.sub: Import latest upstream.\n+\n+2021-01-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/98739\n+\t* Makefile.in: Enable -fprofile-reproducible=parallel-runs\n+\tfor profiledbootstrap.\n+\n+2021-01-22  Jonathan Wright  <jonathan.wright@arm.com>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself.\n+\n+2021-01-22  Maciej W. Rozycki  <macro@orcam.me.uk>\n+\n+\t* MAINTAINERS (Write After Approval): Update my e-mail address.\n+\n+2021-01-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* MAINTAINERS: Fix spacing.\n+\n+2021-01-12  Qian Jianhua  <qianjh@cn.fujitsu.com>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself\n+\n+2021-01-06  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.def: Sync with binutils-gdb:\n+\t(dependencies): all-ld depends on all-libctf.\n+\t(host_modules): libctf is no longer no_install.\n+\tNo longer no_check.  Checking depends on all-ld.\n+\t* Makefile.in: Regenerated.\n+\n+2021-01-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* libtool.m4: Match gnu* along other GNU systems.\n+\t* libgo/config/libtool.m4: Match gnu* along other GNU systems.\n+\t* libgo/configure: Re-generate.\n+\n+2021-01-04  Philipp Tomsich  <philipp.tomsich@vrull.eu>\n+\n+\t* MAINTAINERS: Update my email address.\n+\n+2020-12-17  Marius Hillenbrand  <mhillen@linux.ibm.com>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself.\n+\n+2020-12-15  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.def\n+\t* Makefile.in\n+\t* Makefile.tpl\n+\t* configure\n+\t* configure.ac\n+\n+2020-12-15  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.def: Add libcody.\n+\t* configure.ac: Add libcody.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\n+2020-12-14  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\t* .dir-locals.el (c-mode): Set 'fill-column' to 80 columns.\n+\n+2020-12-05  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR target/97865\n+\t* libtool.m4: Update handling of Darwin platform link flags\n+\tfor Darwin20.\n+\n+2020-12-02  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* .gitignore: Sync with binutils-gdb\n+\n+2020-12-02  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* MAINTAINERS: Add myself as arc port maintainer.\n+\n+2020-11-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/87788\n+\t* configure.ac: Don't disable D for *-*-darwin*.\n+\t* configure: Regenerate.\n+\n+2020-11-29  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* libtool.m4 (archive_cmds): Add +nodefaultrpath ld option on\n+\thppa64-*-hpux11*.\n+\n 2020-11-25  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* configure: Regenerate."}, {"sha": "1722f0aa8fce0ecd0cb58cdce2703420287e4d88", "filename": "MAINTAINERS", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -24,7 +24,7 @@ Richard Earnshaw\t\t\t\t<richard.earnshaw@arm.com>\n Richard Biener\t\t\t\t\t<rguenther@suse.de>\n Jakub Jelinek\t\t\t\t\t<jakub@redhat.com>\n Richard Kenner\t\t\t\t\t<kenner@nyu.edu>\n-Jeff Law\t\t\t\t\t<law@redhat.com>\n+Jeff Law\t\t\t\t\t<jlaw@tachyum.com>\n Michael Meissner\t\t\t\t<gnu@the-meissners.org>\n Jason Merrill\t\t\t\t\t<jason@redhat.com>\n David S. Miller\t\t\t\t\t<davem@redhat.com>\n@@ -51,6 +51,7 @@ alpha port\t\tRichard Henderson\t<rth@twiddle.net>\n amdgcn port\t\tJulian Brown\t\t<julian@codesourcery.com>\n amdgcn port\t\tAndrew Stubbs\t\t<ams@codesourcery.com>\n arc port\t\tJoern Rennecke\t\t<gnu@amylaar.uk>\n+arc port\t\tClaudiu Zissulescu\t<claziss@synopsys.com>\n arm port\t\tNick Clifton\t\t<nickc@redhat.com>\n arm port\t\tRichard Earnshaw\t<richard.earnshaw@arm.com>\n arm port\t\tRamana Radhakrishnan\t<ramana.radhakrishnan@arm.com>\n@@ -67,23 +68,23 @@ fr30 port\t\tNick Clifton\t\t<nickc@redhat.com>\n frv port\t\tNick Clifton\t\t<nickc@redhat.com>\n frv port\t\tAlexandre Oliva\t\t<aoliva@gcc.gnu.org>\n ft32 port\t\tJames Bowman\t\t<james.bowman@ftdichip.com>\n-h8 port\t\t\tJeff Law\t\t<law@redhat.com>\n-hppa port\t\tJeff Law\t\t<law@redhat.com>\n+h8 port\t\t\tJeff Law\t\t<jeffreyalaw@gmail.com>\n+hppa port\t\tJeff Law\t\t<jeffreyalaw@gmail.com>\n hppa port\t\tJohn David Anglin\t<dave.anglin@bell.net>\n i386 port\t\tJan Hubicka\t\t<hubicka@ucw.cz>\n i386 port\t\tUros Bizjak\t\t<ubizjak@gmail.com>\n i386 vector ISA extns\tKirill Yukhin\t\t<kirill.yukhin@gmail.com>\n iq2000 port\t\tNick Clifton\t\t<nickc@redhat.com>\n lm32 port\t\tSebastien Bourdeauducq\t<sebastien@milkymist.org>\n m32r port\t\tNick Clifton\t\t<nickc@redhat.com>\n-m68k port (?)\t\tJeff Law\t\t<law@redhat.com>\n+m68k port (?)\t\tJeff Law\t\t<jeffreyalaw@gmail.com>\n m68k port\t\tAndreas Schwab\t\t<schwab@linux-m68k.org>\n m68k-motorola-sysv port\tPhilippe De Muyter\t<phdm@macqel.be>\n mcore port\t\tNick Clifton\t\t<nickc@redhat.com>\n microblaze\t\tMichael Eager\t\t<eager@eagercon.com>\n mips port\t\tMatthew Fortune\t\t<mfortune@gmail.com>\n mmix port\t\tHans-Peter Nilsson\t<hp@bitrange.com>\n-mn10300 port\t\tJeff Law\t\t<law@redhat.com>\n+mn10300 port\t\tJeff Law\t\t<jeffreyalaw@gmail.com>\n mn10300 port\t\tAlexandre Oliva\t\t<aoliva@gcc.gnu.org>\n moxie port\t\tAnthony Green\t\t<green@moxielogic.com>\n msp430 port\t\tNick Clifton\t\t<nickc@redhat.com>\n@@ -182,11 +183,11 @@ line map\t\tDodji Seketeli\t\t<dodji@redhat.com>\n soft-fp\t\t\tJoseph Myers\t\t<joseph@codesourcery.com>\n scheduler (+ haifa)\tJim Wilson\t\t<wilson@tuliptree.org>\n scheduler (+ haifa)\tMichael Meissner\t<gnu@the-meissners.org>\n-scheduler (+ haifa)\tJeff Law\t\t<law@redhat.com>\n+scheduler (+ haifa)\tJeff Law\t\t<jeffreyalaw@gmail.com>\n scheduler (+ haifa)\tVladimir Makarov\t<vmakarov@redhat.com>\n modulo-scheduler\tRoman Zhuykov\t\t<zhroma@ispras.ru>\n-reorg\t\t\tJeff Law\t\t<law@redhat.com>\n-caller-save.c\t\tJeff Law\t\t<law@redhat.com>\n+reorg\t\t\tJeff Law\t\t<jeffreyalaw@gmail.com>\n+caller-save.c\t\tJeff Law\t\t<jeffreyalaw@gmail.com>\n callgraph\t\tJan Hubicka\t\t<hubicka@ucw.cz>\n debugging code\t\tJim Wilson\t\t<wilson@tuliptree.org>\n dwarf debugging code\tJason Merrill\t\t<jason@redhat.com>\n@@ -200,8 +201,8 @@ fixincludes\t\tBruce Korb\t\t<bkorb@gnu.org>\n *gimpl*\t\t\tJakub Jelinek\t\t<jakub@redhat.com>\n *gimpl*\t\t\tAldy Hernandez\t\t<aldyh@redhat.com>\n *gimpl*\t\t\tJason Merrill\t\t<jason@redhat.com>\n-gcse.c\t\t\tJeff Law\t\t<law@redhat.com>\n-global opt framework\tJeff Law\t\t<law@redhat.com>\n+gcse.c\t\t\tJeff Law\t\t<jeffreyalaw@gmail.com>\n+global opt framework\tJeff Law\t\t<jeffreyalaw@gmail.com>\n hsa\t\t\tMartin Jambor\t\t<mjambor@suse.cz>\n jump.c\t\t\tDavid S. Miller\t\t<davem@redhat.com>\n web pages\t\tGerald Pfeifer\t\t<gerald@pfeifer.com>\n@@ -224,7 +225,7 @@ gcov\t\t\tJan Hubicka\t\t<hubicka@ucw.cz>\n gcov\t\t\tMartin Liska\t\t<mliska@suse.cz>\n gcov\t\t\tNathan Sidwell\t\t<nathan@acm.org>\n option handling\t\tJoseph Myers\t\t<joseph@codesourcery.com>\n-middle-end\t\tJeff Law\t\t<law@redhat.com>\n+middle-end\t\tJeff Law\t\t<jeffreyalaw@gmail.com>\n middle-end\t\tIan Lance Taylor\t<ian@airs.com>\n middle-end\t\tRichard Biener\t\t<rguenther@suse.de>\n tree-ssa\t\tAndrew MacLeod\t\t<amacleod@redhat.com>\n@@ -249,6 +250,7 @@ gdbhooks.py\t\tDavid Malcolm\t\t<dmalcolm@redhat.com>\n SLSR\t\t\tBill Schmidt\t\t<wschmidt@linux.ibm.com>\n jit\t\t\tDavid Malcolm\t\t<dmalcolm@redhat.com>\n gen* on machine desc\tRichard Sandiford\t<rdsandiford@googlemail.com>\n+static analyzer\t\tDavid Malcolm\t\t<dmalcolm@redhat.com>\n \n Note that individuals who maintain parts of the compiler need approval to\n check in changes outside of the parts of the compiler they maintain.\n@@ -364,7 +366,7 @@ Lawrence Crowl\t\t\t\t\t<crowl@google.com>\n Ian Dall\t\t\t\t\t<ian@beware.dropbear.id.au>\n David Daney\t\t\t\t\t<david.daney@caviumnetworks.com>\n Robin Dapp\t\t\t\t\t<rdapp@linux.ibm.com>\n-Simon Dardis\t\t\t\t\t<simon.dardis@imgtec.com>\n+Simon Dardis\t\t\t\t\t<simon.dardis@gmail.com>\n Sudakshina Das\t\t\t\t\t<sudi.das@arm.com>\n Bud Davis\t\t\t\t\t<jmdavis@link.com>\n Chris Demetriou\t\t\t\t\t<cgd@google.com>\n@@ -414,7 +416,7 @@ Jiufu Guo\t\t\t\t\t<guojiufu@linux.ibm.com>\n Xuepeng Guo\t\t\t\t\t<terry.xpguo@gmail.com>\n Wei Guozhi\t\t\t\t\t<carrot@google.com>\n Mostafa Hagog\t\t\t\t\t<hagog@gcc.gnu.org>\n-Andrew Haley\t\t                        <aph@redhat.com>\n+Andrew Haley\t\t\t\t\t<aph@redhat.com>\n Frederik Harwath\t\t\t\t<frederik@codesourcery.com>\n Stuart Hastings\t\t\t\t\t<stuart@apple.com>\n Michael Haubenwallner\t\t\t\t<michael.haubenwallner@ssi-schaefer.com>\n@@ -427,6 +429,7 @@ George Helffrich\t\t\t\t<george@gcc.gnu.org>\n Daniel Hellstrom\t\t\t\t<daniel@gaisler.com>\n Fergus Henderson\t\t\t\t<fjh@cs.mu.oz.au>\n Stuart Henderson\t\t\t\t<shenders@gcc.gnu.org>\n+Marius Hillenbrand\t\t\t\t<mhillen@linux.ibm.com>\n Matthew Hiller\t\t\t\t\t<hiller@redhat.com>\n Kazu Hirata\t\t\t\t\t<kazu@codesourcery.com>\n Manfred Hollstein\t\t\t\t<mh@suse.com>\n@@ -449,6 +452,7 @@ Daniel Jacobowitz\t\t\t\t<drow@false.org>\n Andreas Jaeger\t\t\t\t\t<aj@suse.de>\n Harsha Jagasia\t\t\t\t\t<harsha.jagasia@amd.com>\n Fariborz Jahanian\t\t\t\t<fjahanian@apple.com>\n+Qian Jianhua\t\t\t\t\t<qianjh@cn.fujitsu.com>\n Janis Johnson\t\t\t\t\t<janis.marie.johnson@gmail.com>\n Teresa Johnson\t\t\t\t\t<tejohnson@google.com>\n Kean Johnston\t\t\t\t\t<jkj@sco.com>\n@@ -462,7 +466,7 @@ Andi Kleen\t\t\t\t\t<andi@firstfloor.org>\n Jeff Knaggs\t\t\t\t\t<jknaggs@redhat.com>\n Michael Koch\t\t\t\t\t<konqueror@gmx.de>\n Nicolas Koenig\t\t\t\t\t<koenigni@student.ethz.ch>\n-Boris Kolpackov                                 <boris@codesynthesis.com>\n+Boris Kolpackov\t\t\t\t\t<boris@codesynthesis.com>\n Dave Korn\t\t\t\t\t<dave.korn.cygwin@gmail.com>\n Julia Koval\t\t\t\t\t<julia.koval@intel.com>\n Hongtao Liu\t\t\t\t\t<hongtao.liu@intel.com>\n@@ -477,7 +481,7 @@ Razya Ladelsky\t\t\t\t\t<razya@gcc.gnu.org>\n Thierry Lafage\t\t\t\t\t<thierry.lafage@inria.fr>\n Aaron W. LaFramboise\t\t\t\t<aaronavay62@aaronwl.com>\n Rask Ingemann Lambertsen\t\t\t<ccc94453@vip.cybercity.dk>\n-Jerome Lambourg                                 <lambourg@adacore.com>\n+Jerome Lambourg\t\t\t\t\t<lambourg@adacore.com>\n Asher Langton\t\t\t\t\t<langton2@llnl.gov>\n Chris Lattner\t\t\t\t\t<sabre@nondot.org>\n Terry Laurenzo\t\t\t\t\t<tlaurenzo@gmail.com>\n@@ -578,7 +582,8 @@ Craig Rodrigues\t\t\t\t\t<rodrigc@gcc.gnu.org>\n Erven Rohou\t\t\t\t\t<erven.rohou@inria.fr>\n Ira Rosen\t\t\t\t\t<irar@il.ibm.com>\n Yvan Roux\t\t\t\t\t<yvan.roux@linaro.org>\n-Maciej W. Rozycki\t\t\t\t<macro@linux-mips.org>\n+Eugene Rozenfeld\t\t\t\t<erozen@microsoft.com>\n+Maciej W. Rozycki\t\t\t\t<macro@orcam.me.uk>\n Silvius Rus\t\t\t\t\t<rus@google.com>\n Matthew Sachs\t\t\t\t\t<msachs@apple.com>\n Hariharan Sandanagobalane\t\t\t<hariharan.gcc@gmail.com>\n@@ -611,10 +616,10 @@ Basile Starynkevitch\t\t\t\t<basile@starynkevitch.net>\n Jakub Staszak\t\t\t\t\t<kuba@et.pl>\n Graham Stott\t\t\t\t\t<graham.stott@btinternet.com>\n Jeff Sturm\t\t\t\t\t<jsturm@gcc.gnu.org>\n-Robert Suchanek\t\t\t\t\t<robert.suchanek@imgtec.com>\n+Robert Suchanek\t\t\t\t\t<rsuchy84@gmail.com>\n Andrew Sutton\t\t\t\t\t<andrew.n.sutton@gmail.com>\n Gabriele Svelto\t\t\t\t\t<gabriele.svelto@st.com>\n-Toma Tabacu\t\t\t\t\t<toma.tabacu@imgtec.com>\n+Toma Tabacu\t\t\t\t\t<toma.tabacu@gmail.com>\n Omar Tahir\t\t\t\t\t<omar.tahir@arm.com>\n Sriraman Tallam\t\t\t\t\t<tmsriram@google.com>\n Samuel Tardieu\t\t\t\t\t<sam@rfc1149.net>\n@@ -623,7 +628,7 @@ Dinar Temirbulatov\t\t\t\t<dtemirbulatov@gmail.com>\n Kresten Krab Thorup\t\t\t\t<krab@gcc.gnu.org>\n Kai Tietz\t\t\t\t\t<ktietz70@googlemail.com>\n Ilya Tocar\t\t\t\t\t<tocarip@gmail.com>\n-Philipp Tomsich\t\t\t\t\t<philipp.tomsich@theobroma-systems.com>\n+Philipp Tomsich\t\t\t\t\t<philipp.tomsich@vrull.eu>\n Daniel Towner\t\t\t\t\t<dant@picochip.com>\n Konrad Trifunovic\t\t\t\t<konrad.trifunovic@inria.fr>\n Markus Trippelsdorf\t\t\t\t<markus@trippelsdorf.de>\n@@ -655,6 +660,7 @@ Kevin Williams\t\t\t\t\t<kevin.williams@inria.fr>\n Przemyslaw Wirkus\t\t\t\t<przemyslaw.wirkus@arm.com>\n Carlo Wood\t\t\t\t\t<carlo@alinoe.com>\n Jackson Woodruff\t\t\t\t<jackson.woodruff@arm.com>\n+Jonathan Wright\t\t\t\t\t<jonathan.wright@arm.com>\n Mingjie Xing\t\t\t\t\t<mingjie.xing@gmail.com>\n Chenghua Xu\t\t\t\t\t<paul.hua.gm@gmail.com>\n Canqun Yang\t\t\t\t\t<canqun@nudt.edu.cn>"}, {"sha": "154bba92ba9a6a8e0ec83f85beca2d2b68cfb70e", "filename": "Makefile.def", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -81,6 +81,15 @@ host_modules= { module= itcl; };\n host_modules= { module= ld; bootstrap=true; };\n host_modules= { module= libbacktrace; bootstrap=true; };\n host_modules= { module= libcpp; bootstrap=true; };\n+// As with libiconv, don't install any of libcody\n+host_modules= { module= libcody; bootstrap=true;\n+\t\tno_install= true;\n+\t\tmissing= pdf;\n+\t\tmissing= html;\n+\t\tmissing= info;\n+\t\tmissing= install-pdf;\n+\t\tmissing= install-html;\n+\t\tmissing= install-info; };\n host_modules= { module= libdecnumber; bootstrap=true; };\n host_modules= { module= libgui; };\n host_modules= { module= libiberty; bootstrap=true;\n@@ -125,14 +134,14 @@ host_modules= { module= libtermcap; no_check=true;\n                 missing=distclean;\n                 missing=maintainer-clean; };\n host_modules= { module= utils; no_check=true; };\n+host_modules= { module= c++tools; };\n host_modules= { module= gnattools; };\n host_modules= { module= lto-plugin; bootstrap=true;\n \t\textra_configure_flags='--enable-shared @extra_linker_plugin_flags@ @extra_linker_plugin_configure_flags@';\n \t\textra_make_flags='@extra_linker_plugin_flags@'; };\n host_modules= { module= libcc1; extra_configure_flags=--enable-shared; };\n host_modules= { module= gotools; };\n-host_modules= { module= libctf; no_install=true; no_check=true;\n-\t\tbootstrap=true; };\n+host_modules= { module= libctf; bootstrap=true; };\n \n target_modules = { module= libstdc++-v3;\n \t\t   bootstrap=true;\n@@ -347,6 +356,7 @@ dependencies = { module=all-gcc; on=all-build-libcpp; };\n dependencies = { module=all-gcc; on=all-zlib; };\n dependencies = { module=all-gcc; on=all-libbacktrace; hard=true; };\n dependencies = { module=all-gcc; on=all-libcpp; hard=true; };\n+dependencies = { module=all-gcc; on=all-libcody; hard=true; };\n dependencies = { module=all-gcc; on=all-libdecnumber; hard=true; };\n dependencies = { module=all-gcc; on=all-libiberty; };\n dependencies = { module=all-gcc; on=all-fixincludes; };\n@@ -381,6 +391,8 @@ dependencies = { module=all-lto-plugin; on=all-libiberty-linker-plugin; };\n dependencies = { module=configure-libcc1; on=configure-gcc; };\n dependencies = { module=all-libcc1; on=all-gcc; };\n \n+// we want version.o from gcc, and implicitly depend on libcody\n+dependencies = { module=all-c++tools; on=all-gcc; };\n dependencies = { module=all-gotools; on=all-target-libgo; };\n \n dependencies = { module=all-utils; on=all-libiberty; };\n@@ -450,6 +462,7 @@ dependencies = { module=all-binutils; on=all-build-bison; };\n dependencies = { module=all-binutils; on=all-intl; };\n dependencies = { module=all-binutils; on=all-gas; };\n dependencies = { module=all-binutils; on=all-libctf; };\n+dependencies = { module=all-ld; on=all-libctf; };\n \n // We put install-opcodes before install-binutils because the installed\n // binutils might be on PATH, and they might need the shared opcodes\n@@ -534,7 +547,6 @@ dependencies = { module=all-sim; on=all-libiberty; };\n dependencies = { module=all-sim; on=all-bfd; };\n dependencies = { module=all-sim; on=all-opcodes; };\n dependencies = { module=all-sim; on=all-readline; };\n-dependencies = { module=all-sim; on=configure-gdb; };\n \n // Other host modules.\n dependencies = { module=all-fastjar; on=all-zlib; };\n@@ -548,6 +560,7 @@ dependencies = { module=configure-libctf; on=all-bfd; };\n dependencies = { module=configure-libctf; on=all-intl; };\n dependencies = { module=configure-libctf; on=all-zlib; };\n dependencies = { module=configure-libctf; on=all-libiconv; };\n+dependencies = { module=check-libctf; on=all-ld; };\n \n // Warning, these are not well tested.\n dependencies = { module=all-bison; on=all-intl; };"}, {"sha": "a588342b0fef348e3d0ce6028c09367cfe28a6cb", "filename": "Makefile.in", "status": "modified", "additions": 1651, "deletions": 6, "changes": 1657, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -565,7 +565,7 @@ STAGEprofile_TFLAGS = $(STAGE2_TFLAGS)\n STAGEtrain_CFLAGS = $(filter-out -fchecking=1,$(STAGE3_CFLAGS))\n STAGEtrain_TFLAGS = $(filter-out -fchecking=1,$(STAGE3_TFLAGS))\n \n-STAGEfeedback_CFLAGS = $(STAGE4_CFLAGS) -fprofile-use\n+STAGEfeedback_CFLAGS = $(STAGE4_CFLAGS) -fprofile-use -fprofile-reproducible=parallel-runs\n STAGEfeedback_TFLAGS = $(STAGE4_TFLAGS)\n \n STAGEautoprofile_CFLAGS = $(STAGE2_CFLAGS) -g\n@@ -1017,6 +1017,7 @@ configure-host:  \\\n     maybe-configure-ld \\\n     maybe-configure-libbacktrace \\\n     maybe-configure-libcpp \\\n+    maybe-configure-libcody \\\n     maybe-configure-libdecnumber \\\n     maybe-configure-libgui \\\n     maybe-configure-libiberty \\\n@@ -1037,6 +1038,7 @@ configure-host:  \\\n     maybe-configure-tk \\\n     maybe-configure-libtermcap \\\n     maybe-configure-utils \\\n+    maybe-configure-c++tools \\\n     maybe-configure-gnattools \\\n     maybe-configure-lto-plugin \\\n     maybe-configure-libcc1 \\\n@@ -1163,6 +1165,9 @@ all-host: maybe-all-libbacktrace\n @if libcpp-no-bootstrap\n all-host: maybe-all-libcpp\n @endif libcpp-no-bootstrap\n+@if libcody-no-bootstrap\n+all-host: maybe-all-libcody\n+@endif libcody-no-bootstrap\n @if libdecnumber-no-bootstrap\n all-host: maybe-all-libdecnumber\n @endif libdecnumber-no-bootstrap\n@@ -1193,6 +1198,7 @@ all-host: maybe-all-guile\n all-host: maybe-all-tk\n all-host: maybe-all-libtermcap\n all-host: maybe-all-utils\n+all-host: maybe-all-c++tools\n all-host: maybe-all-gnattools\n @if lto-plugin-no-bootstrap\n all-host: maybe-all-lto-plugin\n@@ -1281,6 +1287,7 @@ info-host: maybe-info-itcl\n info-host: maybe-info-ld\n info-host: maybe-info-libbacktrace\n info-host: maybe-info-libcpp\n+info-host: maybe-info-libcody\n info-host: maybe-info-libdecnumber\n info-host: maybe-info-libgui\n info-host: maybe-info-libiberty\n@@ -1301,6 +1308,7 @@ info-host: maybe-info-guile\n info-host: maybe-info-tk\n info-host: maybe-info-libtermcap\n info-host: maybe-info-utils\n+info-host: maybe-info-c++tools\n info-host: maybe-info-gnattools\n info-host: maybe-info-lto-plugin\n info-host: maybe-info-libcc1\n@@ -1370,6 +1378,7 @@ dvi-host: maybe-dvi-itcl\n dvi-host: maybe-dvi-ld\n dvi-host: maybe-dvi-libbacktrace\n dvi-host: maybe-dvi-libcpp\n+dvi-host: maybe-dvi-libcody\n dvi-host: maybe-dvi-libdecnumber\n dvi-host: maybe-dvi-libgui\n dvi-host: maybe-dvi-libiberty\n@@ -1390,6 +1399,7 @@ dvi-host: maybe-dvi-guile\n dvi-host: maybe-dvi-tk\n dvi-host: maybe-dvi-libtermcap\n dvi-host: maybe-dvi-utils\n+dvi-host: maybe-dvi-c++tools\n dvi-host: maybe-dvi-gnattools\n dvi-host: maybe-dvi-lto-plugin\n dvi-host: maybe-dvi-libcc1\n@@ -1459,6 +1469,7 @@ pdf-host: maybe-pdf-itcl\n pdf-host: maybe-pdf-ld\n pdf-host: maybe-pdf-libbacktrace\n pdf-host: maybe-pdf-libcpp\n+pdf-host: maybe-pdf-libcody\n pdf-host: maybe-pdf-libdecnumber\n pdf-host: maybe-pdf-libgui\n pdf-host: maybe-pdf-libiberty\n@@ -1479,6 +1490,7 @@ pdf-host: maybe-pdf-guile\n pdf-host: maybe-pdf-tk\n pdf-host: maybe-pdf-libtermcap\n pdf-host: maybe-pdf-utils\n+pdf-host: maybe-pdf-c++tools\n pdf-host: maybe-pdf-gnattools\n pdf-host: maybe-pdf-lto-plugin\n pdf-host: maybe-pdf-libcc1\n@@ -1548,6 +1560,7 @@ html-host: maybe-html-itcl\n html-host: maybe-html-ld\n html-host: maybe-html-libbacktrace\n html-host: maybe-html-libcpp\n+html-host: maybe-html-libcody\n html-host: maybe-html-libdecnumber\n html-host: maybe-html-libgui\n html-host: maybe-html-libiberty\n@@ -1568,6 +1581,7 @@ html-host: maybe-html-guile\n html-host: maybe-html-tk\n html-host: maybe-html-libtermcap\n html-host: maybe-html-utils\n+html-host: maybe-html-c++tools\n html-host: maybe-html-gnattools\n html-host: maybe-html-lto-plugin\n html-host: maybe-html-libcc1\n@@ -1637,6 +1651,7 @@ TAGS-host: maybe-TAGS-itcl\n TAGS-host: maybe-TAGS-ld\n TAGS-host: maybe-TAGS-libbacktrace\n TAGS-host: maybe-TAGS-libcpp\n+TAGS-host: maybe-TAGS-libcody\n TAGS-host: maybe-TAGS-libdecnumber\n TAGS-host: maybe-TAGS-libgui\n TAGS-host: maybe-TAGS-libiberty\n@@ -1657,6 +1672,7 @@ TAGS-host: maybe-TAGS-guile\n TAGS-host: maybe-TAGS-tk\n TAGS-host: maybe-TAGS-libtermcap\n TAGS-host: maybe-TAGS-utils\n+TAGS-host: maybe-TAGS-c++tools\n TAGS-host: maybe-TAGS-gnattools\n TAGS-host: maybe-TAGS-lto-plugin\n TAGS-host: maybe-TAGS-libcc1\n@@ -1726,6 +1742,7 @@ install-info-host: maybe-install-info-itcl\n install-info-host: maybe-install-info-ld\n install-info-host: maybe-install-info-libbacktrace\n install-info-host: maybe-install-info-libcpp\n+install-info-host: maybe-install-info-libcody\n install-info-host: maybe-install-info-libdecnumber\n install-info-host: maybe-install-info-libgui\n install-info-host: maybe-install-info-libiberty\n@@ -1746,6 +1763,7 @@ install-info-host: maybe-install-info-guile\n install-info-host: maybe-install-info-tk\n install-info-host: maybe-install-info-libtermcap\n install-info-host: maybe-install-info-utils\n+install-info-host: maybe-install-info-c++tools\n install-info-host: maybe-install-info-gnattools\n install-info-host: maybe-install-info-lto-plugin\n install-info-host: maybe-install-info-libcc1\n@@ -1815,6 +1833,7 @@ install-pdf-host: maybe-install-pdf-itcl\n install-pdf-host: maybe-install-pdf-ld\n install-pdf-host: maybe-install-pdf-libbacktrace\n install-pdf-host: maybe-install-pdf-libcpp\n+install-pdf-host: maybe-install-pdf-libcody\n install-pdf-host: maybe-install-pdf-libdecnumber\n install-pdf-host: maybe-install-pdf-libgui\n install-pdf-host: maybe-install-pdf-libiberty\n@@ -1835,6 +1854,7 @@ install-pdf-host: maybe-install-pdf-guile\n install-pdf-host: maybe-install-pdf-tk\n install-pdf-host: maybe-install-pdf-libtermcap\n install-pdf-host: maybe-install-pdf-utils\n+install-pdf-host: maybe-install-pdf-c++tools\n install-pdf-host: maybe-install-pdf-gnattools\n install-pdf-host: maybe-install-pdf-lto-plugin\n install-pdf-host: maybe-install-pdf-libcc1\n@@ -1904,6 +1924,7 @@ install-html-host: maybe-install-html-itcl\n install-html-host: maybe-install-html-ld\n install-html-host: maybe-install-html-libbacktrace\n install-html-host: maybe-install-html-libcpp\n+install-html-host: maybe-install-html-libcody\n install-html-host: maybe-install-html-libdecnumber\n install-html-host: maybe-install-html-libgui\n install-html-host: maybe-install-html-libiberty\n@@ -1924,6 +1945,7 @@ install-html-host: maybe-install-html-guile\n install-html-host: maybe-install-html-tk\n install-html-host: maybe-install-html-libtermcap\n install-html-host: maybe-install-html-utils\n+install-html-host: maybe-install-html-c++tools\n install-html-host: maybe-install-html-gnattools\n install-html-host: maybe-install-html-lto-plugin\n install-html-host: maybe-install-html-libcc1\n@@ -1993,6 +2015,7 @@ installcheck-host: maybe-installcheck-itcl\n installcheck-host: maybe-installcheck-ld\n installcheck-host: maybe-installcheck-libbacktrace\n installcheck-host: maybe-installcheck-libcpp\n+installcheck-host: maybe-installcheck-libcody\n installcheck-host: maybe-installcheck-libdecnumber\n installcheck-host: maybe-installcheck-libgui\n installcheck-host: maybe-installcheck-libiberty\n@@ -2013,6 +2036,7 @@ installcheck-host: maybe-installcheck-guile\n installcheck-host: maybe-installcheck-tk\n installcheck-host: maybe-installcheck-libtermcap\n installcheck-host: maybe-installcheck-utils\n+installcheck-host: maybe-installcheck-c++tools\n installcheck-host: maybe-installcheck-gnattools\n installcheck-host: maybe-installcheck-lto-plugin\n installcheck-host: maybe-installcheck-libcc1\n@@ -2082,6 +2106,7 @@ mostlyclean-host: maybe-mostlyclean-itcl\n mostlyclean-host: maybe-mostlyclean-ld\n mostlyclean-host: maybe-mostlyclean-libbacktrace\n mostlyclean-host: maybe-mostlyclean-libcpp\n+mostlyclean-host: maybe-mostlyclean-libcody\n mostlyclean-host: maybe-mostlyclean-libdecnumber\n mostlyclean-host: maybe-mostlyclean-libgui\n mostlyclean-host: maybe-mostlyclean-libiberty\n@@ -2102,6 +2127,7 @@ mostlyclean-host: maybe-mostlyclean-guile\n mostlyclean-host: maybe-mostlyclean-tk\n mostlyclean-host: maybe-mostlyclean-libtermcap\n mostlyclean-host: maybe-mostlyclean-utils\n+mostlyclean-host: maybe-mostlyclean-c++tools\n mostlyclean-host: maybe-mostlyclean-gnattools\n mostlyclean-host: maybe-mostlyclean-lto-plugin\n mostlyclean-host: maybe-mostlyclean-libcc1\n@@ -2171,6 +2197,7 @@ clean-host: maybe-clean-itcl\n clean-host: maybe-clean-ld\n clean-host: maybe-clean-libbacktrace\n clean-host: maybe-clean-libcpp\n+clean-host: maybe-clean-libcody\n clean-host: maybe-clean-libdecnumber\n clean-host: maybe-clean-libgui\n clean-host: maybe-clean-libiberty\n@@ -2191,6 +2218,7 @@ clean-host: maybe-clean-guile\n clean-host: maybe-clean-tk\n clean-host: maybe-clean-libtermcap\n clean-host: maybe-clean-utils\n+clean-host: maybe-clean-c++tools\n clean-host: maybe-clean-gnattools\n clean-host: maybe-clean-lto-plugin\n clean-host: maybe-clean-libcc1\n@@ -2260,6 +2288,7 @@ distclean-host: maybe-distclean-itcl\n distclean-host: maybe-distclean-ld\n distclean-host: maybe-distclean-libbacktrace\n distclean-host: maybe-distclean-libcpp\n+distclean-host: maybe-distclean-libcody\n distclean-host: maybe-distclean-libdecnumber\n distclean-host: maybe-distclean-libgui\n distclean-host: maybe-distclean-libiberty\n@@ -2280,6 +2309,7 @@ distclean-host: maybe-distclean-guile\n distclean-host: maybe-distclean-tk\n distclean-host: maybe-distclean-libtermcap\n distclean-host: maybe-distclean-utils\n+distclean-host: maybe-distclean-c++tools\n distclean-host: maybe-distclean-gnattools\n distclean-host: maybe-distclean-lto-plugin\n distclean-host: maybe-distclean-libcc1\n@@ -2349,6 +2379,7 @@ maintainer-clean-host: maybe-maintainer-clean-itcl\n maintainer-clean-host: maybe-maintainer-clean-ld\n maintainer-clean-host: maybe-maintainer-clean-libbacktrace\n maintainer-clean-host: maybe-maintainer-clean-libcpp\n+maintainer-clean-host: maybe-maintainer-clean-libcody\n maintainer-clean-host: maybe-maintainer-clean-libdecnumber\n maintainer-clean-host: maybe-maintainer-clean-libgui\n maintainer-clean-host: maybe-maintainer-clean-libiberty\n@@ -2369,6 +2400,7 @@ maintainer-clean-host: maybe-maintainer-clean-guile\n maintainer-clean-host: maybe-maintainer-clean-tk\n maintainer-clean-host: maybe-maintainer-clean-libtermcap\n maintainer-clean-host: maybe-maintainer-clean-utils\n+maintainer-clean-host: maybe-maintainer-clean-c++tools\n maintainer-clean-host: maybe-maintainer-clean-gnattools\n maintainer-clean-host: maybe-maintainer-clean-lto-plugin\n maintainer-clean-host: maybe-maintainer-clean-libcc1\n@@ -2446,8 +2478,8 @@ local-distclean:\n \t-rm -f texinfo/doc/Makefile texinfo/po/POTFILES\n \t-rmdir texinfo/doc texinfo/info texinfo/intl texinfo/lib 2>/dev/null\n \t-rmdir texinfo/makeinfo texinfo/po texinfo/util 2>/dev/null\n-\t-rmdir fastjar gcc gnattools gotools libcc1 libiberty 2>/dev/null\n-\t-rmdir texinfo zlib 2>/dev/null\n+\t-rmdir c++tools fastjar gcc gnattools gotools 2>/dev/null\n+\t-rmdir libcc1 libiberty texinfo zlib 2>/dev/null\n \t-find . -name config.cache -exec rm -f {} \\; \\; 2>/dev/null\n \n local-maintainer-clean:\n@@ -2494,6 +2526,7 @@ check-host:  \\\n     maybe-check-ld \\\n     maybe-check-libbacktrace \\\n     maybe-check-libcpp \\\n+    maybe-check-libcody \\\n     maybe-check-libdecnumber \\\n     maybe-check-libgui \\\n     maybe-check-libiberty \\\n@@ -2514,6 +2547,7 @@ check-host:  \\\n     maybe-check-tk \\\n     maybe-check-libtermcap \\\n     maybe-check-utils \\\n+    maybe-check-c++tools \\\n     maybe-check-gnattools \\\n     maybe-check-lto-plugin \\\n     maybe-check-libcc1 \\\n@@ -2630,6 +2664,7 @@ install-host-nogcc:  \\\n     maybe-install-ld \\\n     maybe-install-libbacktrace \\\n     maybe-install-libcpp \\\n+    maybe-install-libcody \\\n     maybe-install-libdecnumber \\\n     maybe-install-libgui \\\n     maybe-install-libiberty \\\n@@ -2650,6 +2685,7 @@ install-host-nogcc:  \\\n     maybe-install-tk \\\n     maybe-install-libtermcap \\\n     maybe-install-utils \\\n+    maybe-install-c++tools \\\n     maybe-install-gnattools \\\n     maybe-install-lto-plugin \\\n     maybe-install-libcc1 \\\n@@ -2683,6 +2719,7 @@ install-host:  \\\n     maybe-install-ld \\\n     maybe-install-libbacktrace \\\n     maybe-install-libcpp \\\n+    maybe-install-libcody \\\n     maybe-install-libdecnumber \\\n     maybe-install-libgui \\\n     maybe-install-libiberty \\\n@@ -2703,6 +2740,7 @@ install-host:  \\\n     maybe-install-tk \\\n     maybe-install-libtermcap \\\n     maybe-install-utils \\\n+    maybe-install-c++tools \\\n     maybe-install-gnattools \\\n     maybe-install-lto-plugin \\\n     maybe-install-libcc1 \\\n@@ -2792,6 +2830,7 @@ install-strip-host:  \\\n     maybe-install-strip-ld \\\n     maybe-install-strip-libbacktrace \\\n     maybe-install-strip-libcpp \\\n+    maybe-install-strip-libcody \\\n     maybe-install-strip-libdecnumber \\\n     maybe-install-strip-libgui \\\n     maybe-install-strip-libiberty \\\n@@ -2812,6 +2851,7 @@ install-strip-host:  \\\n     maybe-install-strip-tk \\\n     maybe-install-strip-libtermcap \\\n     maybe-install-strip-utils \\\n+    maybe-install-strip-c++tools \\\n     maybe-install-strip-gnattools \\\n     maybe-install-strip-lto-plugin \\\n     maybe-install-strip-libcc1 \\\n@@ -25050,6 +25090,1015 @@ maintainer-clean-libcpp:\n \n \n \n+.PHONY: configure-libcody maybe-configure-libcody\n+maybe-configure-libcody:\n+@if gcc-bootstrap\n+configure-libcody: stage_current\n+@endif gcc-bootstrap\n+@if libcody\n+maybe-configure-libcody: configure-libcody\n+configure-libcody: \n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\t$(HOST_EXPORTS)  \\\n+\techo Configuring in $(HOST_SUBDIR)/libcody; \\\n+\tcd \"$(HOST_SUBDIR)/libcody\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias}  \\\n+\t  || exit 1\n+@endif libcody\n+\n+\n+\n+.PHONY: configure-stage1-libcody maybe-configure-stage1-libcody\n+maybe-configure-stage1-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stage1-libcody: configure-stage1-libcody\n+configure-stage1-libcody:\n+\t@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE1_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE1_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE1_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(LIBCFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 1 in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   \\\n+\t  $(STAGE1_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stage2-libcody maybe-configure-stage2-libcody\n+maybe-configure-stage2-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stage2-libcody: configure-stage2-libcody\n+configure-stage2-libcody:\n+\t@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE2_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE2_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE2_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE2_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 2 in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE2_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stage3-libcody maybe-configure-stage3-libcody\n+maybe-configure-stage3-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stage3-libcody: configure-stage3-libcody\n+configure-stage3-libcody:\n+\t@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE3_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE3_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE3_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE3_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 3 in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE3_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stage4-libcody maybe-configure-stage4-libcody\n+maybe-configure-stage4-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stage4-libcody: configure-stage4-libcody\n+configure-stage4-libcody:\n+\t@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE4_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE4_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE4_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE4_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 4 in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE4_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stageprofile-libcody maybe-configure-stageprofile-libcody\n+maybe-configure-stageprofile-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stageprofile-libcody: configure-stageprofile-libcody\n+configure-stageprofile-libcody:\n+\t@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEprofile_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEprofile_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEprofile_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage profile in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEprofile_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stagetrain-libcody maybe-configure-stagetrain-libcody\n+maybe-configure-stagetrain-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stagetrain-libcody: configure-stagetrain-libcody\n+configure-stagetrain-libcody:\n+\t@[ $(current_stage) = stagetrain ] || $(MAKE) stagetrain-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEtrain_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEtrain_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEtrain_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage train in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEtrain_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stagefeedback-libcody maybe-configure-stagefeedback-libcody\n+maybe-configure-stagefeedback-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stagefeedback-libcody: configure-stagefeedback-libcody\n+configure-stagefeedback-libcody:\n+\t@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEfeedback_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEfeedback_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEfeedback_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage feedback in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEfeedback_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stageautoprofile-libcody maybe-configure-stageautoprofile-libcody\n+maybe-configure-stageautoprofile-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stageautoprofile-libcody: configure-stageautoprofile-libcody\n+configure-stageautoprofile-libcody:\n+\t@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEautoprofile_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEautoprofile_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEautoprofile_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage autoprofile in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEautoprofile_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+.PHONY: configure-stageautofeedback-libcody maybe-configure-stageautofeedback-libcody\n+maybe-configure-stageautofeedback-libcody:\n+@if libcody-bootstrap\n+maybe-configure-stageautofeedback-libcody: configure-stageautofeedback-libcody\n+configure-stageautofeedback-libcody:\n+\t@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libcody/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEautofeedback_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEautofeedback_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEautofeedback_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage autofeedback in $(HOST_SUBDIR)/libcody; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libcody; \\\n+\tcd $(HOST_SUBDIR)/libcody || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libcody/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcody; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEautofeedback_CONFIGURE_FLAGS)\n+@endif libcody-bootstrap\n+\n+\n+\n+\n+\n+.PHONY: all-libcody maybe-all-libcody\n+maybe-all-libcody:\n+@if gcc-bootstrap\n+all-libcody: stage_current\n+@endif gcc-bootstrap\n+@if libcody\n+TARGET-libcody=all\n+maybe-all-libcody: all-libcody\n+all-libcody: configure-libcody\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS)  \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(TARGET-libcody))\n+@endif libcody\n+\n+\n+\n+.PHONY: all-stage1-libcody maybe-all-stage1-libcody\n+.PHONY: clean-stage1-libcody maybe-clean-stage1-libcody\n+maybe-all-stage1-libcody:\n+maybe-clean-stage1-libcody:\n+@if libcody-bootstrap\n+maybe-all-stage1-libcody: all-stage1-libcody\n+all-stage1: all-stage1-libcody\n+TARGET-stage1-libcody = $(TARGET-libcody)\n+all-stage1-libcody: configure-stage1-libcody\n+\t@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE1_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE1_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE1_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(LIBCFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n+\t\t$(TARGET-stage1-libcody)\n+\n+maybe-clean-stage1-libcody: clean-stage1-libcody\n+clean-stage1: clean-stage1-libcody\n+clean-stage1-libcody:\n+\t@if [ $(current_stage) = stage1 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage1-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage1-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stage2-libcody maybe-all-stage2-libcody\n+.PHONY: clean-stage2-libcody maybe-clean-stage2-libcody\n+maybe-all-stage2-libcody:\n+maybe-clean-stage2-libcody:\n+@if libcody-bootstrap\n+maybe-all-stage2-libcody: all-stage2-libcody\n+all-stage2: all-stage2-libcody\n+TARGET-stage2-libcody = $(TARGET-libcody)\n+all-stage2-libcody: configure-stage2-libcody\n+\t@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE2_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE2_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE2_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE2_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE2_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n+\t\t$(TARGET-stage2-libcody)\n+\n+maybe-clean-stage2-libcody: clean-stage2-libcody\n+clean-stage2: clean-stage2-libcody\n+clean-stage2-libcody:\n+\t@if [ $(current_stage) = stage2 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage2-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage2-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stage3-libcody maybe-all-stage3-libcody\n+.PHONY: clean-stage3-libcody maybe-clean-stage3-libcody\n+maybe-all-stage3-libcody:\n+maybe-clean-stage3-libcody:\n+@if libcody-bootstrap\n+maybe-all-stage3-libcody: all-stage3-libcody\n+all-stage3: all-stage3-libcody\n+TARGET-stage3-libcody = $(TARGET-libcody)\n+all-stage3-libcody: configure-stage3-libcody\n+\t@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE3_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE3_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE3_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE3_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE3_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n+\t\t$(TARGET-stage3-libcody)\n+\n+maybe-clean-stage3-libcody: clean-stage3-libcody\n+clean-stage3: clean-stage3-libcody\n+clean-stage3-libcody:\n+\t@if [ $(current_stage) = stage3 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage3-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage3-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stage4-libcody maybe-all-stage4-libcody\n+.PHONY: clean-stage4-libcody maybe-clean-stage4-libcody\n+maybe-all-stage4-libcody:\n+maybe-clean-stage4-libcody:\n+@if libcody-bootstrap\n+maybe-all-stage4-libcody: all-stage4-libcody\n+all-stage4: all-stage4-libcody\n+TARGET-stage4-libcody = $(TARGET-libcody)\n+all-stage4-libcody: configure-stage4-libcody\n+\t@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE4_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE4_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE4_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE4_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE4_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n+\t\t$(TARGET-stage4-libcody)\n+\n+maybe-clean-stage4-libcody: clean-stage4-libcody\n+clean-stage4: clean-stage4-libcody\n+clean-stage4-libcody:\n+\t@if [ $(current_stage) = stage4 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage4-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage4-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stageprofile-libcody maybe-all-stageprofile-libcody\n+.PHONY: clean-stageprofile-libcody maybe-clean-stageprofile-libcody\n+maybe-all-stageprofile-libcody:\n+maybe-clean-stageprofile-libcody:\n+@if libcody-bootstrap\n+maybe-all-stageprofile-libcody: all-stageprofile-libcody\n+all-stageprofile: all-stageprofile-libcody\n+TARGET-stageprofile-libcody = $(TARGET-libcody)\n+all-stageprofile-libcody: configure-stageprofile-libcody\n+\t@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEprofile_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEprofile_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEprofile_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEprofile_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n+\t\t$(TARGET-stageprofile-libcody)\n+\n+maybe-clean-stageprofile-libcody: clean-stageprofile-libcody\n+clean-stageprofile: clean-stageprofile-libcody\n+clean-stageprofile-libcody:\n+\t@if [ $(current_stage) = stageprofile ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageprofile-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageprofile-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stagetrain-libcody maybe-all-stagetrain-libcody\n+.PHONY: clean-stagetrain-libcody maybe-clean-stagetrain-libcody\n+maybe-all-stagetrain-libcody:\n+maybe-clean-stagetrain-libcody:\n+@if libcody-bootstrap\n+maybe-all-stagetrain-libcody: all-stagetrain-libcody\n+all-stagetrain: all-stagetrain-libcody\n+TARGET-stagetrain-libcody = $(TARGET-libcody)\n+all-stagetrain-libcody: configure-stagetrain-libcody\n+\t@[ $(current_stage) = stagetrain ] || $(MAKE) stagetrain-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEtrain_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEtrain_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEtrain_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEtrain_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n+\t\t$(TARGET-stagetrain-libcody)\n+\n+maybe-clean-stagetrain-libcody: clean-stagetrain-libcody\n+clean-stagetrain: clean-stagetrain-libcody\n+clean-stagetrain-libcody:\n+\t@if [ $(current_stage) = stagetrain ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stagetrain-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stagetrain-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stagefeedback-libcody maybe-all-stagefeedback-libcody\n+.PHONY: clean-stagefeedback-libcody maybe-clean-stagefeedback-libcody\n+maybe-all-stagefeedback-libcody:\n+maybe-clean-stagefeedback-libcody:\n+@if libcody-bootstrap\n+maybe-all-stagefeedback-libcody: all-stagefeedback-libcody\n+all-stagefeedback: all-stagefeedback-libcody\n+TARGET-stagefeedback-libcody = $(TARGET-libcody)\n+all-stagefeedback-libcody: configure-stagefeedback-libcody\n+\t@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEfeedback_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEfeedback_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEfeedback_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEfeedback_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n+\t\t$(TARGET-stagefeedback-libcody)\n+\n+maybe-clean-stagefeedback-libcody: clean-stagefeedback-libcody\n+clean-stagefeedback: clean-stagefeedback-libcody\n+clean-stagefeedback-libcody:\n+\t@if [ $(current_stage) = stagefeedback ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stagefeedback-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stagefeedback-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stageautoprofile-libcody maybe-all-stageautoprofile-libcody\n+.PHONY: clean-stageautoprofile-libcody maybe-clean-stageautoprofile-libcody\n+maybe-all-stageautoprofile-libcody:\n+maybe-clean-stageautoprofile-libcody:\n+@if libcody-bootstrap\n+maybe-all-stageautoprofile-libcody: all-stageautoprofile-libcody\n+all-stageautoprofile: all-stageautoprofile-libcody\n+TARGET-stageautoprofile-libcody = $(TARGET-libcody)\n+all-stageautoprofile-libcody: configure-stageautoprofile-libcody\n+\t@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$$s/gcc/config/i386/$(AUTO_PROFILE) \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEautoprofile_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEautoprofile_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEautoprofile_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEautoprofile_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n+\t\t$(TARGET-stageautoprofile-libcody)\n+\n+maybe-clean-stageautoprofile-libcody: clean-stageautoprofile-libcody\n+clean-stageautoprofile: clean-stageautoprofile-libcody\n+clean-stageautoprofile-libcody:\n+\t@if [ $(current_stage) = stageautoprofile ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageautoprofile-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageautoprofile-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+.PHONY: all-stageautofeedback-libcody maybe-all-stageautofeedback-libcody\n+.PHONY: clean-stageautofeedback-libcody maybe-clean-stageautofeedback-libcody\n+maybe-all-stageautofeedback-libcody:\n+maybe-clean-stageautofeedback-libcody:\n+@if libcody-bootstrap\n+maybe-all-stageautofeedback-libcody: all-stageautofeedback-libcody\n+all-stageautofeedback: all-stageautofeedback-libcody\n+TARGET-stageautofeedback-libcody = $(TARGET-libcody)\n+all-stageautofeedback-libcody: configure-stageautofeedback-libcody\n+\t@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEautofeedback_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEautofeedback_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEautofeedback_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEautofeedback_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n+\t\t$(TARGET-stageautofeedback-libcody)\n+\n+maybe-clean-stageautofeedback-libcody: clean-stageautofeedback-libcody\n+clean-stageautofeedback: clean-stageautofeedback-libcody\n+clean-stageautofeedback-libcody:\n+\t@if [ $(current_stage) = stageautofeedback ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libcody/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageautofeedback-libcody/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageautofeedback-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libcody && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libcody-bootstrap\n+\n+\n+\n+\n+\n+.PHONY: check-libcody maybe-check-libcody\n+maybe-check-libcody:\n+@if libcody\n+maybe-check-libcody: check-libcody\n+\n+check-libcody:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\n+@endif libcody\n+\n+.PHONY: install-libcody maybe-install-libcody\n+maybe-install-libcody:\n+@if libcody\n+maybe-install-libcody: install-libcody\n+\n+install-libcody:\n+\n+@endif libcody\n+\n+.PHONY: install-strip-libcody maybe-install-strip-libcody\n+maybe-install-strip-libcody:\n+@if libcody\n+maybe-install-strip-libcody: install-strip-libcody\n+\n+install-strip-libcody:\n+\n+@endif libcody\n+\n+# Other targets (info, dvi, pdf, etc.)\n+\n+.PHONY: maybe-info-libcody info-libcody\n+maybe-info-libcody:\n+@if libcody\n+maybe-info-libcody: info-libcody\n+\n+# libcody doesn't support info.\n+info-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-dvi-libcody dvi-libcody\n+maybe-dvi-libcody:\n+@if libcody\n+maybe-dvi-libcody: dvi-libcody\n+\n+dvi-libcody: \\\n+    configure-libcody \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing dvi in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          dvi) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-pdf-libcody pdf-libcody\n+maybe-pdf-libcody:\n+@if libcody\n+maybe-pdf-libcody: pdf-libcody\n+\n+# libcody doesn't support pdf.\n+pdf-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-html-libcody html-libcody\n+maybe-html-libcody:\n+@if libcody\n+maybe-html-libcody: html-libcody\n+\n+# libcody doesn't support html.\n+html-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-TAGS-libcody TAGS-libcody\n+maybe-TAGS-libcody:\n+@if libcody\n+maybe-TAGS-libcody: TAGS-libcody\n+\n+TAGS-libcody: \\\n+    configure-libcody \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing TAGS in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          TAGS) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-install-info-libcody install-info-libcody\n+maybe-install-info-libcody:\n+@if libcody\n+maybe-install-info-libcody: install-info-libcody\n+\n+# libcody doesn't support install-info.\n+install-info-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-install-pdf-libcody install-pdf-libcody\n+maybe-install-pdf-libcody:\n+@if libcody\n+maybe-install-pdf-libcody: install-pdf-libcody\n+\n+# libcody doesn't support install-pdf.\n+install-pdf-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-install-html-libcody install-html-libcody\n+maybe-install-html-libcody:\n+@if libcody\n+maybe-install-html-libcody: install-html-libcody\n+\n+# libcody doesn't support install-html.\n+install-html-libcody:\n+\n+@endif libcody\n+\n+.PHONY: maybe-installcheck-libcody installcheck-libcody\n+maybe-installcheck-libcody:\n+@if libcody\n+maybe-installcheck-libcody: installcheck-libcody\n+\n+installcheck-libcody: \\\n+    configure-libcody \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing installcheck in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          installcheck) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-mostlyclean-libcody mostlyclean-libcody\n+maybe-mostlyclean-libcody:\n+@if libcody\n+maybe-mostlyclean-libcody: mostlyclean-libcody\n+\n+mostlyclean-libcody: \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing mostlyclean in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          mostlyclean) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-clean-libcody clean-libcody\n+maybe-clean-libcody:\n+@if libcody\n+maybe-clean-libcody: clean-libcody\n+\n+clean-libcody: \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing clean in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          clean) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-distclean-libcody distclean-libcody\n+maybe-distclean-libcody:\n+@if libcody\n+maybe-distclean-libcody: distclean-libcody\n+\n+distclean-libcody: \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing distclean in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          distclean) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+.PHONY: maybe-maintainer-clean-libcody maintainer-clean-libcody\n+maybe-maintainer-clean-libcody:\n+@if libcody\n+maybe-maintainer-clean-libcody: maintainer-clean-libcody\n+\n+maintainer-clean-libcody: \n+\t@[ -f ./libcody/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing maintainer-clean in libcody\"; \\\n+\t(cd $(HOST_SUBDIR)/libcody && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          maintainer-clean) \\\n+\t  || exit 1\n+\n+@endif libcody\n+\n+\n+\n .PHONY: configure-libdecnumber maybe-configure-libdecnumber\n maybe-configure-libdecnumber:\n @if gcc-bootstrap\n@@ -37064,6 +38113,447 @@ maintainer-clean-utils:\n \n \n \n+.PHONY: configure-c++tools maybe-configure-c++tools\n+maybe-configure-c++tools:\n+@if gcc-bootstrap\n+configure-c++tools: stage_current\n+@endif gcc-bootstrap\n+@if c++tools\n+maybe-configure-c++tools: configure-c++tools\n+configure-c++tools: \n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\ttest ! -f $(HOST_SUBDIR)/c++tools/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/c++tools; \\\n+\t$(HOST_EXPORTS)  \\\n+\techo Configuring in $(HOST_SUBDIR)/c++tools; \\\n+\tcd \"$(HOST_SUBDIR)/c++tools\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/c++tools/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=c++tools; \\\n+\t$(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias}  \\\n+\t  || exit 1\n+@endif c++tools\n+\n+\n+\n+\n+\n+.PHONY: all-c++tools maybe-all-c++tools\n+maybe-all-c++tools:\n+@if gcc-bootstrap\n+all-c++tools: stage_current\n+@endif gcc-bootstrap\n+@if c++tools\n+TARGET-c++tools=all\n+maybe-all-c++tools: all-c++tools\n+all-c++tools: configure-c++tools\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS)  \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(TARGET-c++tools))\n+@endif c++tools\n+\n+\n+\n+\n+.PHONY: check-c++tools maybe-check-c++tools\n+maybe-check-c++tools:\n+@if c++tools\n+maybe-check-c++tools: check-c++tools\n+\n+check-c++tools:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS)  \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  check)\n+\n+@endif c++tools\n+\n+.PHONY: install-c++tools maybe-install-c++tools\n+maybe-install-c++tools:\n+@if c++tools\n+maybe-install-c++tools: install-c++tools\n+\n+install-c++tools: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  install)\n+\n+@endif c++tools\n+\n+.PHONY: install-strip-c++tools maybe-install-strip-c++tools\n+maybe-install-strip-c++tools:\n+@if c++tools\n+maybe-install-strip-c++tools: install-strip-c++tools\n+\n+install-strip-c++tools: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  install-strip)\n+\n+@endif c++tools\n+\n+# Other targets (info, dvi, pdf, etc.)\n+\n+.PHONY: maybe-info-c++tools info-c++tools\n+maybe-info-c++tools:\n+@if c++tools\n+maybe-info-c++tools: info-c++tools\n+\n+info-c++tools: \\\n+    configure-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing info in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          info) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-dvi-c++tools dvi-c++tools\n+maybe-dvi-c++tools:\n+@if c++tools\n+maybe-dvi-c++tools: dvi-c++tools\n+\n+dvi-c++tools: \\\n+    configure-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing dvi in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          dvi) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-pdf-c++tools pdf-c++tools\n+maybe-pdf-c++tools:\n+@if c++tools\n+maybe-pdf-c++tools: pdf-c++tools\n+\n+pdf-c++tools: \\\n+    configure-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing pdf in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          pdf) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-html-c++tools html-c++tools\n+maybe-html-c++tools:\n+@if c++tools\n+maybe-html-c++tools: html-c++tools\n+\n+html-c++tools: \\\n+    configure-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing html in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          html) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-TAGS-c++tools TAGS-c++tools\n+maybe-TAGS-c++tools:\n+@if c++tools\n+maybe-TAGS-c++tools: TAGS-c++tools\n+\n+TAGS-c++tools: \\\n+    configure-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing TAGS in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          TAGS) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-install-info-c++tools install-info-c++tools\n+maybe-install-info-c++tools:\n+@if c++tools\n+maybe-install-info-c++tools: install-info-c++tools\n+\n+install-info-c++tools: \\\n+    configure-c++tools \\\n+    info-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-info in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-info) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-install-pdf-c++tools install-pdf-c++tools\n+maybe-install-pdf-c++tools:\n+@if c++tools\n+maybe-install-pdf-c++tools: install-pdf-c++tools\n+\n+install-pdf-c++tools: \\\n+    configure-c++tools \\\n+    pdf-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-pdf in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-pdf) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-install-html-c++tools install-html-c++tools\n+maybe-install-html-c++tools:\n+@if c++tools\n+maybe-install-html-c++tools: install-html-c++tools\n+\n+install-html-c++tools: \\\n+    configure-c++tools \\\n+    html-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-html in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-html) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-installcheck-c++tools installcheck-c++tools\n+maybe-installcheck-c++tools:\n+@if c++tools\n+maybe-installcheck-c++tools: installcheck-c++tools\n+\n+installcheck-c++tools: \\\n+    configure-c++tools \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing installcheck in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          installcheck) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-mostlyclean-c++tools mostlyclean-c++tools\n+maybe-mostlyclean-c++tools:\n+@if c++tools\n+maybe-mostlyclean-c++tools: mostlyclean-c++tools\n+\n+mostlyclean-c++tools: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing mostlyclean in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          mostlyclean) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-clean-c++tools clean-c++tools\n+maybe-clean-c++tools:\n+@if c++tools\n+maybe-clean-c++tools: clean-c++tools\n+\n+clean-c++tools: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing clean in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          clean) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-distclean-c++tools distclean-c++tools\n+maybe-distclean-c++tools:\n+@if c++tools\n+maybe-distclean-c++tools: distclean-c++tools\n+\n+distclean-c++tools: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing distclean in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          distclean) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+.PHONY: maybe-maintainer-clean-c++tools maintainer-clean-c++tools\n+maybe-maintainer-clean-c++tools:\n+@if c++tools\n+maybe-maintainer-clean-c++tools: maintainer-clean-c++tools\n+\n+maintainer-clean-c++tools: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f ./c++tools/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing maintainer-clean in c++tools\"; \\\n+\t(cd $(HOST_SUBDIR)/c++tools && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          maintainer-clean) \\\n+\t  || exit 1\n+\n+@endif c++tools\n+\n+\n+\n .PHONY: configure-gnattools maybe-configure-gnattools\n maybe-configure-gnattools:\n @if gcc-bootstrap\n@@ -40257,6 +41747,12 @@ maybe-check-libctf:\n maybe-check-libctf: check-libctf\n \n check-libctf:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libctf && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif libctf\n \n@@ -40265,7 +41761,13 @@ maybe-install-libctf:\n @if libctf\n maybe-install-libctf: install-libctf\n \n-install-libctf:\n+install-libctf: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libctf && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  install)\n \n @endif libctf\n \n@@ -40274,7 +41776,13 @@ maybe-install-strip-libctf:\n @if libctf\n maybe-install-strip-libctf: install-strip-libctf\n \n-install-strip-libctf:\n+install-strip-libctf: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libctf && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  install-strip)\n \n @endif libctf\n \n@@ -55713,6 +57221,11 @@ stage1-start::\n \t  mkdir stage1-libcpp; \\\n \tmv stage1-libcpp libcpp\n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stage1-libcody ] || \\\n+\t  mkdir stage1-libcody; \\\n+\tmv stage1-libcody libcody\n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stage1-libdecnumber ] || \\\n \t  mkdir stage1-libdecnumber; \\\n@@ -55833,6 +57346,11 @@ stage1-end::\n \t  cd $(HOST_SUBDIR); mv libcpp stage1-libcpp; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stage1-libcody; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stage1-libdecnumber; \\\n@@ -56012,6 +57530,12 @@ stage2-start::\n \tmv stage2-libcpp libcpp; \\\n \tmv stage1-libcpp prev-libcpp || test -f stage1-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stage2-libcody ] || \\\n+\t  mkdir stage2-libcody; \\\n+\tmv stage2-libcody libcody; \\\n+\tmv stage1-libcody prev-libcody || test -f stage1-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stage2-libdecnumber ] || \\\n \t  mkdir stage2-libdecnumber; \\\n@@ -56156,6 +57680,12 @@ stage2-end::\n \t  mv prev-libcpp stage1-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stage2-libcody; \\\n+\t  mv prev-libcody stage1-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stage2-libdecnumber; \\\n@@ -56366,6 +57896,12 @@ stage3-start::\n \tmv stage3-libcpp libcpp; \\\n \tmv stage2-libcpp prev-libcpp || test -f stage2-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stage3-libcody ] || \\\n+\t  mkdir stage3-libcody; \\\n+\tmv stage3-libcody libcody; \\\n+\tmv stage2-libcody prev-libcody || test -f stage2-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stage3-libdecnumber ] || \\\n \t  mkdir stage3-libdecnumber; \\\n@@ -56510,6 +58046,12 @@ stage3-end::\n \t  mv prev-libcpp stage2-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stage3-libcody; \\\n+\t  mv prev-libcody stage2-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stage3-libdecnumber; \\\n@@ -56776,6 +58318,12 @@ stage4-start::\n \tmv stage4-libcpp libcpp; \\\n \tmv stage3-libcpp prev-libcpp || test -f stage3-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stage4-libcody ] || \\\n+\t  mkdir stage4-libcody; \\\n+\tmv stage4-libcody libcody; \\\n+\tmv stage3-libcody prev-libcody || test -f stage3-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stage4-libdecnumber ] || \\\n \t  mkdir stage4-libdecnumber; \\\n@@ -56920,6 +58468,12 @@ stage4-end::\n \t  mv prev-libcpp stage3-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stage4-libcody; \\\n+\t  mv prev-libcody stage3-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stage4-libdecnumber; \\\n@@ -57174,6 +58728,12 @@ stageprofile-start::\n \tmv stageprofile-libcpp libcpp; \\\n \tmv stage1-libcpp prev-libcpp || test -f stage1-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stageprofile-libcody ] || \\\n+\t  mkdir stageprofile-libcody; \\\n+\tmv stageprofile-libcody libcody; \\\n+\tmv stage1-libcody prev-libcody || test -f stage1-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stageprofile-libdecnumber ] || \\\n \t  mkdir stageprofile-libdecnumber; \\\n@@ -57318,6 +58878,12 @@ stageprofile-end::\n \t  mv prev-libcpp stage1-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stageprofile-libcody; \\\n+\t  mv prev-libcody stage1-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stageprofile-libdecnumber; \\\n@@ -57505,6 +59071,12 @@ stagetrain-start::\n \tmv stagetrain-libcpp libcpp; \\\n \tmv stageprofile-libcpp prev-libcpp || test -f stageprofile-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stagetrain-libcody ] || \\\n+\t  mkdir stagetrain-libcody; \\\n+\tmv stagetrain-libcody libcody; \\\n+\tmv stageprofile-libcody prev-libcody || test -f stageprofile-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stagetrain-libdecnumber ] || \\\n \t  mkdir stagetrain-libdecnumber; \\\n@@ -57649,6 +59221,12 @@ stagetrain-end::\n \t  mv prev-libcpp stageprofile-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stagetrain-libcody; \\\n+\t  mv prev-libcody stageprofile-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stagetrain-libdecnumber; \\\n@@ -57836,6 +59414,12 @@ stagefeedback-start::\n \tmv stagefeedback-libcpp libcpp; \\\n \tmv stagetrain-libcpp prev-libcpp || test -f stagetrain-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stagefeedback-libcody ] || \\\n+\t  mkdir stagefeedback-libcody; \\\n+\tmv stagefeedback-libcody libcody; \\\n+\tmv stagetrain-libcody prev-libcody || test -f stagetrain-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stagefeedback-libdecnumber ] || \\\n \t  mkdir stagefeedback-libdecnumber; \\\n@@ -57980,6 +59564,12 @@ stagefeedback-end::\n \t  mv prev-libcpp stagetrain-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stagefeedback-libcody; \\\n+\t  mv prev-libcody stagetrain-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stagefeedback-libdecnumber; \\\n@@ -58190,6 +59780,12 @@ stageautoprofile-start::\n \tmv stageautoprofile-libcpp libcpp; \\\n \tmv stage1-libcpp prev-libcpp || test -f stage1-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stageautoprofile-libcody ] || \\\n+\t  mkdir stageautoprofile-libcody; \\\n+\tmv stageautoprofile-libcody libcody; \\\n+\tmv stage1-libcody prev-libcody || test -f stage1-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stageautoprofile-libdecnumber ] || \\\n \t  mkdir stageautoprofile-libdecnumber; \\\n@@ -58334,6 +59930,12 @@ stageautoprofile-end::\n \t  mv prev-libcpp stage1-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stageautoprofile-libcody; \\\n+\t  mv prev-libcody stage1-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stageautoprofile-libdecnumber; \\\n@@ -58521,6 +60123,12 @@ stageautofeedback-start::\n \tmv stageautofeedback-libcpp libcpp; \\\n \tmv stageautoprofile-libcpp prev-libcpp || test -f stageautoprofile-lean \n @endif libcpp\n+@if libcody\n+\t@cd $(HOST_SUBDIR); [ -d stageautofeedback-libcody ] || \\\n+\t  mkdir stageautofeedback-libcody; \\\n+\tmv stageautofeedback-libcody libcody; \\\n+\tmv stageautoprofile-libcody prev-libcody || test -f stageautoprofile-lean \n+@endif libcody\n @if libdecnumber\n \t@cd $(HOST_SUBDIR); [ -d stageautofeedback-libdecnumber ] || \\\n \t  mkdir stageautofeedback-libdecnumber; \\\n@@ -58665,6 +60273,12 @@ stageautofeedback-end::\n \t  mv prev-libcpp stageautoprofile-libcpp; : ; \\\n \tfi\n @endif libcpp\n+@if libcody\n+\t@if test -d $(HOST_SUBDIR)/libcody; then \\\n+\t  cd $(HOST_SUBDIR); mv libcody stageautofeedback-libcody; \\\n+\t  mv prev-libcody stageautoprofile-libcody; : ; \\\n+\tfi\n+@endif libcody\n @if libdecnumber\n \t@if test -d $(HOST_SUBDIR)/libdecnumber; then \\\n \t  cd $(HOST_SUBDIR); mv libdecnumber stageautofeedback-libdecnumber; \\\n@@ -59193,6 +60807,16 @@ all-stagetrain-gcc: all-stagetrain-libcpp\n all-stagefeedback-gcc: all-stagefeedback-libcpp\n all-stageautoprofile-gcc: all-stageautoprofile-libcpp\n all-stageautofeedback-gcc: all-stageautofeedback-libcpp\n+all-gcc: all-libcody\n+all-stage1-gcc: all-stage1-libcody\n+all-stage2-gcc: all-stage2-libcody\n+all-stage3-gcc: all-stage3-libcody\n+all-stage4-gcc: all-stage4-libcody\n+all-stageprofile-gcc: all-stageprofile-libcody\n+all-stagetrain-gcc: all-stagetrain-libcody\n+all-stagefeedback-gcc: all-stagefeedback-libcody\n+all-stageautoprofile-gcc: all-stageautoprofile-libcody\n+all-stageautofeedback-gcc: all-stageautofeedback-libcody\n all-gcc: all-libdecnumber\n all-stage1-gcc: all-stage1-libdecnumber\n all-stage2-gcc: all-stage2-libdecnumber\n@@ -59608,6 +61232,16 @@ all-stagetrain-binutils: maybe-all-stagetrain-libctf\n all-stagefeedback-binutils: maybe-all-stagefeedback-libctf\n all-stageautoprofile-binutils: maybe-all-stageautoprofile-libctf\n all-stageautofeedback-binutils: maybe-all-stageautofeedback-libctf\n+all-ld: maybe-all-libctf\n+all-stage1-ld: maybe-all-stage1-libctf\n+all-stage2-ld: maybe-all-stage2-libctf\n+all-stage3-ld: maybe-all-stage3-libctf\n+all-stage4-ld: maybe-all-stage4-libctf\n+all-stageprofile-ld: maybe-all-stageprofile-libctf\n+all-stagetrain-ld: maybe-all-stagetrain-libctf\n+all-stagefeedback-ld: maybe-all-stagefeedback-libctf\n+all-stageautoprofile-ld: maybe-all-stageautoprofile-libctf\n+all-stageautofeedback-ld: maybe-all-stageautofeedback-libctf\n install-binutils: maybe-install-opcodes\n install-strip-binutils: maybe-install-strip-opcodes\n install-opcodes: maybe-install-bfd\n@@ -59896,7 +61530,6 @@ install-strip-sid: maybe-install-strip-tcl\n install-sid: maybe-install-tk\n install-strip-sid: maybe-install-strip-tk\n all-sim: maybe-all-readline\n-all-sim: maybe-configure-gdb\n all-fastjar: maybe-all-build-texinfo\n all-libctf: all-libiberty\n all-stage1-libctf: all-stage1-libiberty\n@@ -59968,6 +61601,16 @@ configure-stagetrain-libctf: maybe-all-stagetrain-libiconv\n configure-stagefeedback-libctf: maybe-all-stagefeedback-libiconv\n configure-stageautoprofile-libctf: maybe-all-stageautoprofile-libiconv\n configure-stageautofeedback-libctf: maybe-all-stageautofeedback-libiconv\n+check-libctf: maybe-all-ld\n+check-stage1-libctf: maybe-all-stage1-ld\n+check-stage2-libctf: maybe-all-stage2-ld\n+check-stage3-libctf: maybe-all-stage3-ld\n+check-stage4-libctf: maybe-all-stage4-ld\n+check-stageprofile-libctf: maybe-all-stageprofile-ld\n+check-stagetrain-libctf: maybe-all-stagetrain-ld\n+check-stagefeedback-libctf: maybe-all-stagefeedback-ld\n+check-stageautoprofile-libctf: maybe-all-stageautoprofile-ld\n+check-stageautofeedback-libctf: maybe-all-stageautofeedback-ld\n all-bison: maybe-all-build-texinfo\n all-flex: maybe-all-build-bison\n all-flex: maybe-all-m4\n@@ -60046,6 +61689,7 @@ configure-target-libgfortran: maybe-all-target-libbacktrace\n @if gcc-bootstrap\n configure-gnattools: stage_last\n configure-libcc1: stage_last\n+configure-c++tools: stage_last\n configure-utils: stage_last\n configure-gdb: stage_last\n configure-gdbserver: stage_last\n@@ -60063,6 +61707,7 @@ configure-m4: stage_last\n all-gnattools: maybe-all-target-libstdc++-v3\n configure-libcc1: maybe-configure-gcc\n all-libcc1: maybe-all-gcc\n+all-c++tools: maybe-all-gcc\n all-utils: maybe-all-libiberty\n configure-gdb: maybe-all-intl\n configure-gdb: maybe-all-bfd"}, {"sha": "6e0337fb48fdbc61f518d13aadd7d028998cc800", "filename": "Makefile.tpl", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -488,7 +488,7 @@ STAGEprofile_TFLAGS = $(STAGE2_TFLAGS)\n STAGEtrain_CFLAGS = $(filter-out -fchecking=1,$(STAGE3_CFLAGS))\n STAGEtrain_TFLAGS = $(filter-out -fchecking=1,$(STAGE3_TFLAGS))\n \n-STAGEfeedback_CFLAGS = $(STAGE4_CFLAGS) -fprofile-use\n+STAGEfeedback_CFLAGS = $(STAGE4_CFLAGS) -fprofile-use -fprofile-reproducible=parallel-runs\n STAGEfeedback_TFLAGS = $(STAGE4_TFLAGS)\n \n STAGEautoprofile_CFLAGS = $(STAGE2_CFLAGS) -g\n@@ -864,8 +864,8 @@ local-distclean:\n \t-rm -f texinfo/doc/Makefile texinfo/po/POTFILES\n \t-rmdir texinfo/doc texinfo/info texinfo/intl texinfo/lib 2>/dev/null\n \t-rmdir texinfo/makeinfo texinfo/po texinfo/util 2>/dev/null\n-\t-rmdir fastjar gcc gnattools gotools libcc1 libiberty 2>/dev/null\n-\t-rmdir texinfo zlib 2>/dev/null\n+\t-rmdir c++tools fastjar gcc gnattools gotools 2>/dev/null\n+\t-rmdir libcc1 libiberty texinfo zlib 2>/dev/null\n \t-find . -name config.cache -exec rm -f {} \\; \\; 2>/dev/null\n \n local-maintainer-clean:"}, {"sha": "52a15cf7fccabbab4e2e446822366126dd71059f", "filename": "README.md", "status": "modified", "additions": 61, "deletions": 8, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,4 +1,5 @@\n ![C/C++ CI](https://github.com/Rust-GCC/gccrs/workflows/C/C++%20CI/badge.svg)\n+[![GCC Bootstrap Build](https://github.com/Rust-GCC/gccrs/actions/workflows/bootstrap.yml/badge.svg)](https://github.com/Rust-GCC/gccrs/actions/workflows/bootstrap.yml)\n ![Docker Build](https://img.shields.io/docker/cloud/build/philberty/gccrs)\n ![Docker Pulls](https://img.shields.io/docker/pulls/philberty/gccrs)\n [![project chat](https://img.shields.io/badge/zulip-join_chat-brightgreen.svg)](https://gcc-rust.zulipchat.com/)\n@@ -22,6 +23,8 @@ Please find the answers to frequently asked questions over on: https://github.co\n \n ## Development Environment\n \n+### Building\n+\n Fetch dependencies for Ubuntu:\n \n ```bash\n@@ -34,7 +37,7 @@ Clone the repository\n $ git clone git@github.com:Rust-GCC/gccrs.git\n ```\n \n-Compilation script. It is important to remember that GNU toolchain projects are designed to be built outside of their source directory\n+It is important to remember that GNU toolchain projects are designed to be built outside of their source directory\n which is why a build directory is created.\n \n ```bash\n@@ -47,7 +50,7 @@ $ make\n Running the compiler itself without make install we can simply invoke the compiler proper:\n \n ```bash\n-$ gdb --args ./gcc/rust1 test.rs -frust-dump-parse -Warray-bounds -dumpbase test.rs -mtune=generic -march=x86-64 -O0 -version -fdump-tree-gimple -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64\n+$ ./gcc/rust1 test.rs -frust-dump-parse -Warray-bounds -dumpbase test.rs -mtune=generic -march=x86-64 -O0 -version -fdump-tree-gimple -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64\n ```\n \n To invoke the compiler driver (gccrs) we need to:\n@@ -56,28 +59,78 @@ To invoke the compiler driver (gccrs) we need to:\n $ make install\n ```\n \n-Then invoke the compiler as expected:\n+Then invoke the compiler from the installation directory:\n \n ```bash\n-$ gccrs -g -O2 -c test.rs -o test.o\n-$ gccrs -o test test.o\n+$ $HOME/gccrs-install/gccrs -g -O2 -c test.rs -o test.o\n+$ $HOME/gccrs-install/gccrs -o test test.o\n ```\n-If the driver of gccrs is not found , try run this export :\n+\n+You can also setup your shell to automatically find the installed compiler. For example for `bash`, add the following in your `$HOME/.bashrc`:\n+\n ```bash\n-$ export PATH=$HOME/gccrs-install/bin:$PATH\n+export PATH=$HOME/gccrs-install/bin:$PATH\n+\n ```\n \n ## Testsuite\n \n-Invoke the test suite via:\n+Invoke the full testsuite from the build directory (`gcc/gccrs-build` in the previous commands):\n \n ```bash\n $ make check-rust\n ```\n \n+Invoke a subset of the testsuite. For example, to only execute the tests that are expected to fail:\n+\n+```bash\n+$ make check-rust  RUNTESTFLAGS=\"xfail_compile.exp\"\n+```\n+The project currently has 3 sets of tests:\n+- `execute.exp` : execution tests\n+- `compile.exp` : compilation only tests, using combination of options\n+- `xfail_compile.exp` : compilation only tests expected to fail\n+\n+Invoke only a specific test :\n+\n+```bash\n+$ make check-rust  RUNTESTFLAGS=\"xfail_compile.exp=continue1.rs\"\n+```\n+\n+Logs (with corresponding commands) can be found in : `gccrs-build/gcc/testsuite/rust/rust.log`.\n+\n+See [GCC Testing documentation](https://gcc.gnu.org/install/test.html) for more details.\n+\n Test cases are located within [gcc/testsuite/rust.test](gcc/testsuite/rust.test) please feel free to contribute your specific\n test cases referencing any issues on Github.\n \n+## Debugging\n+\n+### Enabling internal checks\n+\n+GCC has several internal checks that can be enabled during configuration. In the case of `gccrs`, you can enable the following:\n+```bash\n+$ ../gccrs/configure --prefix=$HOME/gccrs-install --disable-bootstrap --enable-multilib --enable-languages=rust --enable-checking=gimple,tree,types\n+```\n+\n+### GDB\n+You can directly invoke `gdb` on the `rust1` compiler process (you can find the\n+exact command adding `--verbose` to your `gccrs` invocation):\n+```bash\n+$ gccrs test.rs -O0 -S -o arithmetic_expressions1.s --verbose\n+...\n+ /some/path/../../rust1 test.rs -quiet -dumpbase arithmetic_expressions1.rs -dumpbase-ext .rs\n+ -mtune=generic -march=x86-64 -O0 -w -version -fdiagnostics-color=never -fno-diagnostics-show-caret -fno-diagnostics-show-line-numbers -fdiagnostics-urls=never -fdiagnostics-path-format=separate-events -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu\n+...\n+$ gdb --args  /some/path/../../rust1 test.rs -quiet -dumpbase arithmetic_expressions1.rs -dumpbase-ext .rs\n+ -mtune=generic -march=x86-64 -O0 -w -version -fdiagnostics-color=never -fno-diagnostics-show-caret -fno-diagnostics-show-line-numbers -fdiagnostics-urls=never -fdiagnostics-path-format=separate-events -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu\n+```\n+\n+Or simply add the `-wrapper gdb,--args` option. This will call each subcommand in `gdb` and you simply have to break/debug in `rust1`:\n+```bash\n+$ gccrs test.rs -O0 -S -o arithmetic_expressions1.s -wrapper gdb,--args\n+```\n+\n ## Docker image\n \n There is a docker image hosted over on: "}, {"sha": "375358f9ccd3c8f813a345e49e8ab012bd959ae8", "filename": "c++tools/ChangeLog", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,83 @@\n+2021-02-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* server.cc: Use #if NETWORKING not #ifdef, to be consistent\n+\twith elsewhere.\n+\n+2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR c++/98316\n+\t* configure.ac: Include ../config/ax_lib_socket_nsl.m4.\n+\t(NETLIBS): Determine using AX_LIB_SOCKET_NSL.\n+\t* configure: Regenerate.\n+\t* Makefile.in (NETLIBS): Define.\n+\t(g++-mapper-server$(exeext)): Add $(NETLIBS).\n+\n+2021-01-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* resolver.cc (module_resolver::cmi_response): Remove\n+\tstd::move of temporary.\n+\n+2020-12-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98324\n+\t* Makefile.in: Add FLAGPIE.\n+\t* configure.ac: Add --enable-default-pie support.\n+\t* configure: Rebuilt.\n+\n+2020-12-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR other/98409\n+\t* Makefile.in: Fix exeext variable case.\n+\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* server.cc (crash_signal): Don't use strsignal.\n+\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98300\n+\t* configure.ac: Check for sys/mman.h.\n+\t* resolver.cc: Don't assume mmap, O_CLOEXEC are available.  Use\n+\txmalloc.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\n+2020-12-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac: Add GCC_BASE_VER.\n+\t* Makefile.in (version): Remove variable.\n+\t(gcc_version): New variable.\n+\t(libexecsubdir): Use $(gcc_version) instead of $(version).\n+\t* configure: Regenerated.\n+\n+2020-12-16  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in (INSTALL): Replace with ...\n+\t(INSTALL_PROGRAM): ... this.\n+\t(INSTALL_STRIP_PROGRAM): New.\n+\t(install-strip): New target.\n+\t(install): Use INSTALL_PROGRAM.\n+\t* configure.ac: Add INSTALL_PROGRAM.\n+\t* configure: Regenerated.\n+\n+2020-12-16  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in (install): Do not use -p, use mkinstalldirs.\n+\t(clean): Fix typo.\n+\n+2020-12-15  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in: New.\n+\t* config.h.in: New.\n+\t* configure: New.\n+\t* configure.ac: New.\n+\t* resolver.cc: New.\n+\t* resolver.h: New.\n+\t* server.cc: New.\n+\n+\f\n+Copyright (C) 2020-2021 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "9700706206d5601a713485d6507fd121bf7e5476", "filename": "c++tools/Makefile.in", "status": "added", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FMakefile.in?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,136 @@\n+# Makefile for c++tools\n+#   Copyright 2020 Free Software Foundation, Inc.\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+srcdir := @srcdir@\n+prefix := @prefix@\n+bindir := @bindir@\n+libexecdir := @libexecdir@\n+target_noncanonical := @target_noncanonical@\n+gcc_version := $(shell @get_gcc_base_ver@ $(srcdir)/../gcc/BASE-VER)\n+libexecsubdir := $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n+INSTALL_PROGRAM := @INSTALL_PROGRAM@\n+INSTALL_STRIP_PROGRAM := $(srcdir)/../install-sh -c -s\n+AUTOCONF := @AUTOCONF@\n+AUTOHEADER := @AUTOHEADER@\n+CXX := @CXX@\n+CXXFLAGS := @CXXFLAGS@\n+PIEFLAG := @PIEFLAG@\n+CXXOPTS := $(CXXFLAGS) $(PIEFLAG) -fno-exceptions -fno-rtti\n+LDFLAGS := @LDFLAGS@\n+exeext := @EXEEXT@\n+LIBIBERTY := ../libiberty/libiberty.a\n+NETLIBS := @NETLIBS@\n+VERSION.O := ../gcc/version.o\n+\n+all::\n+\n+mostlyclean::\n+\trm -f $(MAPPER.O)\n+\n+clean::\n+\trm -f g++-mapper-server$(exeext)\n+\n+distclean::\n+\trm -f config.log config.status config.h\n+\n+maintainer-clean::\n+\n+install::\n+\n+check::\n+installcheck::\n+dvi::\n+pdf::\n+html::\n+info::\n+install-info::\n+install-pdf::\n+install-man::\n+install-html::\n+\n+install-strip: override INSTALL_PROGRAM = $(INSTALL_STRIP_PROGRAM)\n+ifneq ($(STRIP),)\n+install-strip: STRIPPROG = $(STRIP)\n+export STRIPPROG\n+endif\n+install-strip: install\n+\n+vpath %.cc $(srcdir)\n+vpath %.in $(srcdir)\n+.SUFFIXES:\n+.SUFFIXES: .cc .o\n+\n+# Per-source & per-directory compile flags (warning: recursive)\n+SRC_CXXFLAGS = $(CXXFLAGS$(patsubst $(srcdir)%,%,$1)) \\\n+\t$(if $(filter-out $(srcdir)/,$1),\\\n+\t  $(call $0,$(dir $(patsubst %/,%,$1))))\n+\n+%.o: %.cc\n+\t$(CXX) $(strip $(CXXOPTS) $(call SRC_CXXFLAGS,$<) $(CXXINC)) \\\n+\t  -MMD -MP -MF ${@:.o=.d} -c -o $@ $<\n+\n+ifeq (@CXX_AUX_TOOLS@,yes)\n+\n+all::g++-mapper-server$(exeext)\n+\n+MAPPER.O := server.o resolver.o\n+CODYLIB = ../libcody/libcody.a\n+CXXINC += -I$(srcdir)/../libcody -I$(srcdir)/../include -I$(srcdir)/../gcc -I.\n+g++-mapper-server$(exeext): $(MAPPER.O) $(CODYLIB)\n+\t+$(CXX) $(LDFLAGS) $(PIEFLAG) -o $@ $^ $(VERSION.O) $(LIBIBERTY) $(NETLIBS)\n+\n+# copy to gcc dir so tests there can run\n+all::../gcc/g++-mapper-server$(exeext)\n+\n+../gcc/g++-mapper-server$(exeext): g++-mapper-server$(exeext)\n+\t$(INSTALL) $< $@\n+\n+install::\n+\t$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(libexecsubdir)\n+\t$(INSTALL_PROGRAM) g++-mapper-server$(exeext) $(DESTDIR)$(libexecsubdir)\n+endif\n+\n+ifneq ($(MAINTAINER),)\n+override MAINTAINER += $1\n+endif\n+ifeq (@MAINTAINER@,yes)\n+MAINTAINER = $2\n+else\n+MAINTAINER = \\# --enable-maintainer-mode to rebuild $1, or make MAINTAINER=touch\n+endif\n+\n+all:: Makefile\n+\n+Makefile: $(srcdir)/Makefile.in config.status\n+\t$(SHELL) ./config.status Makefile\n+\n+$(srcdir)/configure: $(srcdir)/configure.ac\n+\t$(call MAINTAINER,$@,cd $(@D) && $(AUTOCONF) -W all,error)\n+\n+$(srcdir)/config.h.in: $(srcdir)/configure.ac\n+\t$(call MAINTAINER,$@,cd $(@D) && $(AUTOHEADER) -f -W all,error)\n+\n+config.h: config.status config.h.in\n+\t./$< --header=$@\n+\ttouch $@\n+\n+config.status: $(srcdir)/configure $(srcdir)/config.h.in\n+\tif test -x $@; then ./$@ -recheck; else $< @configure_args@; fi\n+\n+.PHONY: all check clean distclean maintainer-clean\n+\n+-include $(MAPPER.O:.o=.d)"}, {"sha": "bfb4958235702b0a17623fe3776abac7415ec9fe", "filename": "c++tools/config.h.in", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfig.h.in?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,76 @@\n+/* config.h.in.  Generated from configure.ac by autoheader.  */\n+\n+/* Define if accept4 provided. */\n+#undef HAVE_ACCEPT4\n+\n+/* Define if AF_INET6 supported. */\n+#undef HAVE_AF_INET6\n+\n+/* Define if AF_UNIX supported. */\n+#undef HAVE_AF_UNIX\n+\n+/* Define if epoll_create, epoll_ctl, epoll_pwait provided. */\n+#undef HAVE_EPOLL\n+\n+/* Define if inet_ntop provided. */\n+#undef HAVE_INET_NTOP\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define if pselect provided. */\n+#undef HAVE_PSELECT\n+\n+/* Define if select provided. */\n+#undef HAVE_SELECT\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n+\n+/* Define to 1 if you have the <sys/mman.h> header file. */\n+#undef HAVE_SYS_MMAN_H\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n+\n+/* Define if O_CLOEXEC supported by fcntl. */\n+#undef HOST_HAS_O_CLOEXEC\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the home page for this package. */\n+#undef PACKAGE_URL\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS"}, {"sha": "3f511b2dbee0485103bc36efbf77431b6f3a3869", "filename": "c++tools/configure", "status": "added", "additions": 5738, "deletions": 0, "changes": 5738, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "5771f2ace687fe22655b9a1d9bd0803cf351f2a3", "filename": "c++tools/configure.ac", "status": "added", "additions": 234, "deletions": 0, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure.ac?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,234 @@\n+# Configure script for c++tools\n+#   Copyright (C) 2020 Free Software Foundation, Inc.\n+#   Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n+#\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# C++ has grown a C++20 mapper server.  This may be used to provide\n+# and/or learn and/or build required modules.  This sample server\n+# shows how the protocol introduced by wg21.link/p1184 may be used.\n+# By default g++ uses an in-process mapper.\n+\n+sinclude(../config/acx.m4)\n+sinclude(../config/ax_lib_socket_nsl.m4)\n+\n+AC_INIT(c++tools)\n+\n+AC_CONFIG_SRCDIR([server.cc])\n+\n+# Determine the noncanonical names used for directories.\n+ACX_NONCANONICAL_TARGET\n+\n+AC_CANONICAL_SYSTEM\n+AC_PROG_INSTALL\n+test -z \"$INSTALL_PROGRAM\" && INSTALL_PROGRAM='${INSTALL}'\n+AC_SUBST(INSTALL_PROGRAM)\n+\n+AC_PROG_CXX\n+MISSING=`cd $ac_aux_dir && ${PWDCMD-pwd}`/missing\n+AC_CHECK_PROGS([AUTOCONF], [autoconf], [$MISSING autoconf])\n+AC_CHECK_PROGS([AUTOHEADER], [autoheader], [$MISSING autoheader])\n+\n+dnl Enabled by default\n+AC_MSG_CHECKING([whether to build C++ tools])\n+  AC_ARG_ENABLE(c++-tools, \n+    [AS_HELP_STRING([--enable-c++-tools],\n+\t\t    [build auxiliary c++ tools])],\n+      cxx_aux_tools=$enableval,\n+      cxx_aux_tools=yes)\n+\n+AC_MSG_RESULT($cxx_aux_tools)\n+CXX_AUX_TOOLS=\"$cxx_aux_tools\"\n+AC_SUBST(CXX_AUX_TOOLS)\n+\n+AC_ARG_ENABLE([maintainer-mode],\n+AS_HELP_STRING([--enable-maintainer-mode],\n+[enable maintainer mode.  Add rules to rebuild configurey bits]),,\n+[enable_maintainer_mode=no])\n+case \"$enable_maintainer_mode\" in\n+  (\"yes\") maintainer_mode=yes ;;\n+  (\"no\") maintainer=no ;;\n+  (*) AC_MSG_ERROR([unknown maintainer mode $enable_maintainer_mode]) ;;\n+esac\n+AC_MSG_CHECKING([maintainer-mode])\n+AC_MSG_RESULT([$maintainer_mode])\n+test \"$maintainer_mode\" = yes && MAINTAINER=yes\n+AC_SUBST(MAINTAINER)\n+\n+# Check whether --enable-default-pie was given.\n+AC_ARG_ENABLE(default-pie,\n+[AS_HELP_STRING([--enable-default-pie],\n+\t\t  [enable Position Independent Executable as default])],\n+[PIEFLAG=-fPIE], [PIEFLAG=])\n+AC_SUBST([PIEFLAG])\n+\n+# Check if O_CLOEXEC is defined by fcntl\n+AC_CACHE_CHECK(for O_CLOEXEC, ac_cv_o_cloexec, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <fcntl.h>]], [[\n+return open (\"/dev/null\", O_RDONLY | O_CLOEXEC);]])],\n+[ac_cv_o_cloexec=yes],[ac_cv_o_cloexec=no])])\n+if test $ac_cv_o_cloexec = yes; then\n+  AC_DEFINE(HOST_HAS_O_CLOEXEC, 1,\n+  [Define if O_CLOEXEC supported by fcntl.])\n+fi\n+\n+AC_CHECK_HEADERS(sys/mman.h)\n+\n+# C++ Modules would like some networking features to provide the mapping\n+# server.  You can still use modules without them though.\n+# The following network-related checks could probably do with some\n+# Windows and other non-linux defenses and checking.\n+\n+# Local socket connectivity wants AF_UNIX networking\n+# Check for AF_UNIX networking\n+AC_CACHE_CHECK(for AF_UNIX, ac_cv_af_unix, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <sys/types.h>\n+#include <sys/socket.h>\n+#include <sys/un.h>\n+#include <netinet/in.h>]],[[\n+sockaddr_un un;\n+un.sun_family = AF_UNSPEC;\n+int fd = socket (AF_UNIX, SOCK_STREAM, 0);\n+connect (fd, (sockaddr *)&un, sizeof (un));]])],\n+[ac_cv_af_unix=yes],\n+[ac_cv_af_unix=no])])\n+if test $ac_cv_af_unix = yes; then\n+  AC_DEFINE(HAVE_AF_UNIX, 1,\n+  [Define if AF_UNIX supported.])\n+fi\n+\n+# Remote socket connectivity wants AF_INET6 networking\n+# Check for AF_INET6 networking\n+AC_CACHE_CHECK(for AF_INET6, ac_cv_af_inet6, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <sys/types.h>\n+#include <sys/socket.h>\n+#include <netinet/in.h>\n+#include <netdb.h>]],[[\n+sockaddr_in6 in6;\n+in6.sin6_family = AF_UNSPEC;\n+struct addrinfo *addrs = 0;\n+struct addrinfo hints;\n+hints.ai_flags = 0;\n+hints.ai_family = AF_INET6;\n+hints.ai_socktype = SOCK_STREAM;\n+hints.ai_protocol = 0;\n+hints.ai_canonname = 0;\n+hints.ai_addr = 0;\n+hints.ai_next = 0;\n+int e = getaddrinfo (\"localhost\", 0, &hints, &addrs);\n+const char *str = gai_strerror (e);\n+freeaddrinfo (addrs);\n+int fd = socket (AF_INET6, SOCK_STREAM, 0);\n+connect (fd, (sockaddr *)&in6, sizeof (in6));]])],\n+[ac_cv_af_inet6=yes],\n+[ac_cv_af_inet6=no])])\n+if test $ac_cv_af_inet6 = yes; then\n+  AC_DEFINE(HAVE_AF_INET6, 1,\n+  [Define if AF_INET6 supported.])\n+fi\n+\n+# Efficient server response wants epoll\n+# Check for epoll_create, epoll_ctl, epoll_pwait\n+AC_CACHE_CHECK(for epoll, ac_cv_epoll, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <sys/epoll.h>]],[[\n+int fd = epoll_create (1);\n+epoll_event ev;\n+ev.events = EPOLLIN;\n+ev.data.fd = 0;\n+epoll_ctl (fd, EPOLL_CTL_ADD, 0, &ev);\n+epoll_pwait (fd, 0, 0, -1, 0);]])],\n+[ac_cv_epoll=yes],\n+[ac_cv_epoll=no])])\n+if test $ac_cv_epoll = yes; then\n+  AC_DEFINE(HAVE_EPOLL, 1,\n+  [Define if epoll_create, epoll_ctl, epoll_pwait provided.])\n+fi\n+\n+# If we can't use epoll, try pselect.\n+# Check for pselect\n+AC_CACHE_CHECK(for pselect, ac_cv_pselect, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <sys/select.h>]],[[\n+pselect (0, 0, 0, 0, 0, 0);]])],\n+[ac_cv_pselect=yes],\n+[ac_cv_pselect=no])])\n+if test $ac_cv_pselect = yes; then\n+  AC_DEFINE(HAVE_PSELECT, 1,\n+  [Define if pselect provided.])\n+fi\n+\n+# And failing that, use good old select.\n+# If we can't even use this, the server is serialized.\n+# Check for select\n+AC_CACHE_CHECK(for select, ac_cv_select, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <sys/select.h>]],[[\n+select (0, 0, 0, 0, 0);]])],\n+[ac_cv_select=yes],\n+[ac_cv_select=no])])\n+if test $ac_cv_select = yes; then\n+  AC_DEFINE(HAVE_SELECT, 1,\n+  [Define if select provided.])\n+fi\n+\n+# Avoid some fnctl calls by using accept4, when available.\n+# Check for accept4\n+AC_CACHE_CHECK(for accept4, ac_cv_accept4, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <sys/socket.h>]],[[\n+int err = accept4 (1, 0, 0, SOCK_NONBLOCK);]])],\n+[ac_cv_accept4=yes],\n+[ac_cv_accept4=no])])\n+if test $ac_cv_accept4 = yes; then\n+  AC_DEFINE(HAVE_ACCEPT4, 1,\n+  [Define if accept4 provided.])\n+fi\n+\n+# For better server messages, look for a way to stringize network addresses\n+# Check for inet_ntop\n+AC_CACHE_CHECK(for inet_ntop, ac_cv_inet_ntop, [\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <arpa/inet.h>\n+#include <netinet/in.h>]],[[\n+sockaddr_in6 in6;\n+char buf[INET6_ADDRSTRLEN];\n+const char *str = inet_ntop (AF_INET6, &in6, buf, sizeof (buf));]])],\n+[ac_cv_inet_ntop=yes],\n+[ac_cv_inet_ntop=no])])\n+if test $ac_cv_inet_ntop = yes; then\n+  AC_DEFINE(HAVE_INET_NTOP, 1,\n+  [Define if inet_ntop provided.])\n+fi\n+\n+# Determine what GCC version number to use in filesystem paths.\n+GCC_BASE_VER\n+\n+# Solaris needs libsocket and libnsl for socket functions before 11.4.\n+# libcody uses those.\n+save_LIBS=\"$LIBS\"\n+LIBS=\n+AX_LIB_SOCKET_NSL\n+NETLIBS=\"$LIBS\"\n+LIBS=\"$save_LIBS\"\n+AC_SUBST(NETLIBS)\n+\n+AC_CONFIG_HEADERS([config.h])\n+AC_CONFIG_FILES([Makefile])\n+\n+AC_OUTPUT"}, {"sha": "ef08de530721aeffc1fc605b51ed2b69e6202e95", "filename": "c++tools/resolver.cc", "status": "added", "additions": 309, "deletions": 0, "changes": 309, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fresolver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fresolver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fresolver.cc?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,309 @@\n+/* C++ modules.  Experimental!\t-*- c++ -*-\n+   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n+   Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+\n+#include \"resolver.h\"\n+// C++\n+#include <algorithm>\n+// C\n+#include <cstring>\n+// OS\n+#include <fcntl.h>\n+#include <unistd.h>\n+#if 0 // 1 for testing no mmap\n+#define MAPPED_READING 0\n+#else\n+#ifdef IN_GCC\n+#if HAVE_MMAP_FILE && _POSIX_MAPPED_FILES > 0\n+#define MAPPED_READING 1\n+#else\n+#define MAPPED_READING 0\n+#endif\n+#else\n+#ifdef HAVE_SYS_MMAN_H\n+#include <sys/mman.h>\n+#define MAPPED_READING 1\n+#else\n+#define MAPPED_READING 0\n+#endif\n+#endif\n+#endif\n+\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+\n+#if !defined (IN_GCC) && !MAPPED_READING\n+#define xmalloc(X) malloc(X)\n+#endif\n+\n+#if !HOST_HAS_O_CLOEXEC\n+#define O_CLOEXEC 0\n+#endif\n+\n+#ifndef DIR_SEPARATOR\n+#define DIR_SEPARATOR '/'\n+#endif\n+\n+module_resolver::module_resolver (bool map, bool xlate)\n+  : default_map (map), default_translate (xlate)\n+{\n+}\n+\n+module_resolver::~module_resolver ()\n+{\n+  if (fd_repo >= 0)\n+    close (fd_repo);\n+}\n+\n+bool\n+module_resolver::set_repo (std::string &&r, bool force)\n+{\n+  if (force || repo.empty ())\n+    {\n+      repo = std::move (r);\n+      force = true;\n+    }\n+  return force;\n+}\n+\n+bool\n+module_resolver::add_mapping (std::string &&module, std::string &&file,\n+\t\t\t      bool force)\n+{\n+  auto res = map.emplace (std::move (module), std::move (file));\n+  if (res.second)\n+    force = true;\n+  else if (force)\n+    res.first->second = std::move (file);\n+\n+  return force;\n+}\n+\n+int\n+module_resolver::read_tuple_file (int fd, char const *prefix, bool force)\n+{\n+  struct stat stat;\n+  if (fstat (fd, &stat) < 0)\n+    return -errno;\n+\n+  if (!stat.st_size)\n+    return 0;\n+\n+  void *buffer = nullptr;\n+#if MAPPED_READING\n+  // Just map the file, we're gonna read all of it, so no need for\n+  // line buffering\n+  buffer = mmap (nullptr, stat.st_size, PROT_READ, MAP_PRIVATE, fd, 0);\n+  if (buffer == MAP_FAILED)\n+    return -errno;\n+#else\n+  buffer = xmalloc (stat.st_size);\n+  if (!buffer)\n+    return -errno;\n+  if (read (fd, buffer, stat.st_size) != stat.st_size)\n+    return -errno;\n+#endif\n+\n+  size_t prefix_len = prefix ? strlen (prefix) : 0;\n+  unsigned lineno = 0;\n+\n+  for (char const *begin = reinterpret_cast <char const *> (buffer),\n+\t *end = begin + stat.st_size, *eol;\n+       begin != end; begin = eol + 1)\n+    {\n+      lineno++;\n+      eol = std::find (begin, end, '\\n');\n+      if (eol == end)\n+\t// last line has no \\n, ignore the line, you lose\n+\tbreak;\n+\n+      auto *pos = begin;\n+      bool pfx_search = prefix_len != 0;\n+\n+    pfx_search:\n+      while (*pos == ' ' || *pos == '\\t')\n+\tpos++;\n+\n+      auto *space = pos;\n+      while (*space != '\\n' && *space != ' ' && *space != '\\t')\n+\tspace++;\n+\n+      if (pos == space)\n+\t// at end of line, nothing here\t\n+\tcontinue;\n+\n+      if (pfx_search)\n+\t{\n+\t  if (size_t (space - pos) == prefix_len\n+\t      && std::equal (pos, space, prefix))\n+\t    pfx_search = false;\n+\t  pos = space;\n+\t  goto pfx_search;\n+\t}\n+\n+      std::string module (pos, space);\n+      while (*space == ' ' || *space == '\\t')\n+\tspace++;\n+      std::string file (space, eol);\n+\n+      if (module[0] == '$')\n+\t{\n+\t  if (module == \"$root\")\n+\t    set_repo (std::move (file));\n+\t  else\n+\t    return lineno;\n+\t}\n+      else\n+\t{\n+\t  if (file.empty ())\n+\t    file = GetCMIName (module);\n+\t  add_mapping (std::move (module), std::move (file), force);\n+\t}\n+    }\n+\n+#if MAPPED_READING\n+  munmap (buffer, stat.st_size);\n+#else\n+  free (buffer);\n+#endif\n+\n+  return 0;\n+}\n+\n+char const *\n+module_resolver::GetCMISuffix ()\n+{\n+  return \"gcm\";\n+}\n+\n+module_resolver *\n+module_resolver::ConnectRequest (Cody::Server *s, unsigned version,\n+\t\t\t\t std::string &a, std::string &i)\n+{\n+  if (!version || version > Cody::Version)\n+    s->ErrorResponse (\"version mismatch\");\n+  else if (a != \"GCC\")\n+    // Refuse anything but GCC\n+    ErrorResponse (s, std::string (\"only GCC supported\"));\n+  else if (!ident.empty () && ident != i)\n+    // Failed ident check\n+    ErrorResponse (s, std::string (\"bad ident\"));\n+  else\n+    // Success!\n+    s->ConnectResponse (\"gcc\");\n+\n+  return this;\n+}\n+\n+int\n+module_resolver::ModuleRepoRequest (Cody::Server *s)\n+{\n+  s->PathnameResponse (repo);\n+  return 0;\n+}\n+\n+int\n+module_resolver::cmi_response (Cody::Server *s, std::string &module)\n+{\n+  auto iter = map.find (module);\n+  if (iter == map.end ())\n+    {\n+      std::string file = default_map ? GetCMIName (module) : std::string ();\n+      auto res = map.emplace (module, file);\n+      iter = res.first;\n+    }\n+\n+  if (iter->second.empty ())\n+    s->ErrorResponse (\"no such module\");\n+  else\n+    s->PathnameResponse (iter->second);\n+\n+  return 0;\n+}\n+\n+int\n+module_resolver::ModuleExportRequest (Cody::Server *s, Cody::Flags,\n+\t\t\t\t      std::string &module)\n+{\n+  return cmi_response (s, module);\n+}\n+\n+int\n+module_resolver::ModuleImportRequest (Cody::Server *s, Cody::Flags,\n+\t\t\t\t      std::string &module)\n+{\n+  return cmi_response (s, module);\n+}\n+\n+int\n+module_resolver::IncludeTranslateRequest (Cody::Server *s, Cody::Flags,\n+\t\t\t\t\t  std::string &include)\n+{\n+  auto iter = map.find (include);\n+  if (iter == map.end () && default_translate)\n+    {\n+      // Not found, look for it\n+      auto file = GetCMIName (include);\n+      struct stat statbuf;\n+      bool ok = true;\n+\n+#if HAVE_FSTATAT\n+      int fd_dir = AT_FDCWD;\n+      if (!repo.empty ())\n+\t{\n+\t  if (fd_repo == -1)\n+\t    {\n+\t      fd_repo = open (repo.c_str (),\n+\t\t\t      O_RDONLY | O_CLOEXEC | O_DIRECTORY);\n+\t      if (fd_repo < 0)\n+\t\tfd_repo = -2;\n+\t    }\n+\t  fd_dir = fd_repo;\n+\t}\n+\n+      if (!repo.empty () && fd_repo < 0)\n+\tok = false;\n+      else if (fstatat (fd_dir, file.c_str (), &statbuf, 0) < 0\n+\t       || !S_ISREG (statbuf.st_mode))\n+\tok = false;\n+#else\n+      auto append = repo;\n+      append.push_back (DIR_SEPARATOR);\n+      append.append (file);\n+      if (stat (append.c_str (), &statbuf) < 0\n+\t  || !S_ISREG (statbuf.st_mode))\n+\tok = false;\n+#endif\n+      if (!ok)\n+\t// Mark as not present\n+\tfile.clear ();\n+      auto res = map.emplace (include, file);\n+      iter = res.first;\n+    }\n+\n+  if (iter == map.end () || iter->second.empty ())\n+    s->BoolResponse (false);\n+  else\n+    s->PathnameResponse (iter->second);\n+\n+  return 0;\n+}\n+"}, {"sha": "19339125b261c8b2ddf9a7b87817c8a6a04c58cb", "filename": "c++tools/resolver.h", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fresolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fresolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fresolver.h?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,105 @@\n+/* C++ modules.  Experimental!\t-*- c++ -*-\n+   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n+   Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GXX_RESOLVER_H\n+#define GXX_RESOLVER_H 1\n+\n+// Mapper interface for client and server bits\n+#include \"cody.hh\"\n+// C++\n+#include <string>\n+#include <map>\n+\n+// This is a GCC class, so GCC coding conventions on new bits.  \n+class module_resolver : public Cody::Resolver\n+{\n+public:\n+  using parent = Cody::Resolver;\n+  using module_map = std::map<std::string, std::string>;\n+\n+private:\n+  std::string repo;\n+  std::string ident;\n+  module_map map;\n+  int fd_repo = -1;\n+  bool default_map = true;\n+  bool default_translate = true;\n+\n+public:\n+  module_resolver (bool map = true, bool xlate = false);\n+  virtual ~module_resolver () override;\n+\n+public:\n+  void set_default_map (bool d)\n+  {\n+    default_map = d;\n+  }\n+  void set_default_translate (bool d)\n+  {\n+    default_translate = d;\n+  }\n+  void set_ident (char const *i)\n+  {\n+    ident = i;\n+  }\n+  bool set_repo (std::string &&repo, bool force = false);\n+  bool add_mapping (std::string &&module, std::string &&file,\n+\t\t    bool force = false);\n+\n+  // Return +ve line number of error, or -ve errno\n+  int read_tuple_file (int fd, char const *prefix, bool force = false);\n+  int read_tuple_file (int fd, std::string const &prefix,\n+\t\t\t    bool force = false)\n+  {\n+    return read_tuple_file (fd, prefix.empty () ? nullptr : prefix.c_str (),\n+\t\t\t    force);\n+  }\n+\n+public:\n+  // Virtual overriders, names are controlled by Cody::Resolver\n+  using parent::ConnectRequest;\n+  virtual module_resolver *ConnectRequest (Cody::Server *, unsigned version,\n+\t\t\t\t\t   std::string &agent,\n+\t\t\t\t\t   std::string &ident)\n+    override;\n+  using parent::ModuleRepoRequest;\n+  virtual int ModuleRepoRequest (Cody::Server *) override;\n+  using parent::ModuleExportRequest;\n+  virtual int ModuleExportRequest (Cody::Server *s, Cody::Flags,\n+\t\t\t\t   std::string &module)\n+    override;\n+  using parent::ModuleImportRequest;\n+  virtual int ModuleImportRequest (Cody::Server *s, Cody::Flags,\n+\t\t\t\t   std::string &module)\n+    override;\n+  using parent::IncludeTranslateRequest;\n+  virtual int IncludeTranslateRequest (Cody::Server *s, Cody::Flags,\n+\t\t\t\t       std::string &include)\n+    override;\n+\n+private:\n+  using parent::GetCMISuffix;\n+  virtual char const *GetCMISuffix () override;\n+\n+private:\n+  int cmi_response (Cody::Server *s, std::string &module);\n+};\n+\n+#endif"}, {"sha": "21c7d468aa0294e0c4b5c1f47de84cfd6328e60e", "filename": "c++tools/server.cc", "status": "added", "additions": 977, "deletions": 0, "changes": 977, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fserver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/c%2B%2Btools%2Fserver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fserver.cc?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,977 @@\n+/* C++ modules.  Experimental!\n+   Copyright (C) 2018-2020 Free Software Foundation, Inc.\n+   Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"resolver.h\"\n+\n+// C++\n+#include <set>\n+#include <vector>\n+#include <map>\n+// C\n+#include <csignal>\n+#include <cstring>\n+#include <cstdarg>\n+// OS\n+#include <unistd.h>\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+#include <fcntl.h>\n+\n+// Network\n+/* Include network stuff first.  Excitingly OSX10.14 uses bcmp here, which\n+   we poison later!  */\n+#if defined (HAVE_AF_UNIX) || defined (HAVE_AF_INET6)\n+/* socket, bind, listen, accept{4}  */\n+# define NETWORKING 1\n+# include <sys/socket.h>\n+# ifdef HAVE_AF_UNIX\n+/* sockaddr_un  */\n+#  include <sys/un.h>\n+# endif\n+# include <netinet/in.h>\n+# ifdef HAVE_AF_INET6\n+/* sockaddr_in6, getaddrinfo, freeaddrinfo, gai_sterror, ntohs, htons.  */\n+#  include <netdb.h>\n+# endif\n+#ifdef HAVE_INET_NTOP\n+/* inet_ntop.  */\n+#include <arpa/inet.h>\n+#endif\n+#endif\n+#ifndef HAVE_AF_INET6\n+# define gai_strerror(X) \"\"\n+#endif\n+\n+#include <getopt.h>\n+\n+// Select or epoll\n+#if NETWORKING\n+#ifdef HAVE_EPOLL\n+/* epoll_create, epoll_ctl, epoll_pwait  */\n+#include <sys/epoll.h>\n+#endif\n+#if defined (HAVE_PSELECT) || defined (HAVE_SELECT)\n+/* pselect or select  */\n+#include <sys/select.h>\n+#endif\n+#endif\n+\n+// GCC\n+#include \"version.h\"\n+#include \"ansidecl.h\"\n+#define HAVE_DECL_BASENAME 1 /* See comment in gcc/configure.ac.  */\n+#include \"libiberty.h\"\n+\n+#if !HOST_HAS_O_CLOEXEC\n+#define O_CLOEXEC 0\n+#endif\n+\n+#ifndef IS_DIR_SEPARATOR\n+#define IS_DIR_SEPARATOR(C) ((C) == '/')\n+#endif\n+#ifndef DIR_SEPARATOR\n+#define DIR_SEPARATOR '/'\n+#endif\n+\n+#if NETWORKING\n+struct netmask {\n+  in6_addr addr;\n+  unsigned bits;\n+\n+  netmask (const in6_addr &a, unsigned b)\n+  {\n+    if (b > sizeof (in6_addr) * 8)\n+      b = sizeof (in6_addr) * 8;\n+    bits = b;\n+    unsigned byte = (b + 7) / 8;\n+    unsigned ix = 0;\n+    for (ix = 0; ix < byte; ix++)\n+      addr.s6_addr[ix] = a.s6_addr[ix];\n+    for (; ix != sizeof (in6_addr); ix++)\n+      addr.s6_addr[ix] = 0;\n+    if (b & 3)\n+      addr.s6_addr[b/7] &= (255 << 8) >> (b & 3);\n+  }\n+\n+  bool includes (const in6_addr &a) const\n+  {\n+    unsigned byte = bits / 8;\n+    for (unsigned ix = 0; ix != byte; ix++)\n+      if (addr.s6_addr[ix] != a.s6_addr[ix])\n+\treturn false;\n+    if (bits & 3)\n+      if ((addr.s6_addr[byte] ^ a.s6_addr[byte]) >> (8 - (bits & 3)))\n+\treturn false;\n+    return true;\n+  }\n+};\n+\n+/* Netmask comparison.  */\n+struct netmask_cmp {\n+  bool operator() (const netmask &a, const netmask &b) const\n+  {\n+    if (a.bits != b.bits)\n+      return a.bits < b.bits;\n+    for (unsigned ix = 0; ix != sizeof (in6_addr); ix++)\n+      if (a.addr.s6_addr[ix] != b.addr.s6_addr[ix])\n+\treturn a.addr.s6_addr[ix] < b.addr.s6_addr[ix];\n+    return false;\n+  }\n+};\n+\n+typedef std::set<netmask, netmask_cmp> netmask_set_t;\n+typedef std::vector<netmask> netmask_vec_t;\n+#endif\n+\n+const char *progname;\n+\n+/* Speak thoughts out loud.  */\n+static bool flag_noisy = false;\n+\n+/* One and done.  */\n+static bool flag_one = false;\n+\n+/* Serialize connections.  */\n+static bool flag_sequential = false;\n+\n+/* Fallback to default if map file is unrewarding.  */\n+static bool flag_map = false;\n+\n+/* Fallback to xlate if map file is unrewarding.  */\n+static bool flag_xlate = false;\n+\n+/* Root binary directory.  */\n+static const char *flag_root = \"gcm.cache\";\n+\n+#if NETWORKING\n+static netmask_set_t netmask_set;\n+\n+static netmask_vec_t accept_addrs;\n+#endif\n+\n+/* Strip out the source directory from FILE.  */\n+\n+static const char *\n+trim_src_file (const char *file)\n+{\n+  static const char me[] = __FILE__;\n+  unsigned pos = 0;\n+\n+  while (file[pos] == me[pos] && me[pos])\n+    pos++;\n+  while (pos && !IS_DIR_SEPARATOR (me[pos-1]))\n+    pos--;\n+\n+  return file + pos;\n+}\n+\n+/* Die screaming.  */\n+\n+void ATTRIBUTE_NORETURN ATTRIBUTE_PRINTF_1 ATTRIBUTE_COLD\n+internal_error (const char *fmt, ...)\n+{\n+  fprintf (stderr, \"%s:Internal error \", progname);\n+  va_list args;\n+\n+  va_start (args, fmt);\n+  vfprintf (stderr, fmt, args);\n+  va_end (args);\n+  fprintf (stderr, \"\\n\");\n+\n+  exit (2);\n+}\n+\n+/* Hooked to from gcc_assert & gcc_unreachable.  */\n+\n+void ATTRIBUTE_NORETURN ATTRIBUTE_COLD\n+fancy_abort (const char *file, int line, const char *func)\n+{\n+  internal_error (\"in %s, at %s:%d\", func, trim_src_file (file), line);\n+}\n+\n+/* Exploded on a signal.  */\n+\n+static void ATTRIBUTE_NORETURN ATTRIBUTE_COLD\n+crash_signal (int sig)\n+{\n+  signal (sig, SIG_DFL);\n+  // strsignal is not portable :(\n+  internal_error (\"signal %d\", sig);\n+}\n+\n+/* A fatal error of some kind.  */\n+\n+static void ATTRIBUTE_NORETURN ATTRIBUTE_COLD ATTRIBUTE_PRINTF_1\n+error (const char *msg, ...)\n+{\n+  fprintf (stderr, \"%s:error: \", progname);\n+  va_list args;\n+\n+  va_start (args, msg);\n+  vfprintf (stderr, msg, args);\n+  va_end (args);\n+  fprintf (stderr, \"\\n\");\n+\n+  exit (1);\n+}\n+\n+#if NETWORKING\n+/* Progress messages to the user.  */\n+static bool ATTRIBUTE_PRINTF_1 ATTRIBUTE_COLD\n+noisy (const char *fmt, ...)\n+{\n+  fprintf (stderr, \"%s:\", progname);\n+  va_list args;\n+  va_start (args, fmt);\n+  vfprintf (stderr, fmt, args);\n+  va_end (args);\n+  fprintf (stderr, \"\\n\");\n+\n+  return false;\n+}\n+#endif\n+\n+/* More messages to the user.  */\n+\n+static void ATTRIBUTE_PRINTF_2\n+fnotice (FILE *file, const char *fmt, ...)\n+{\n+  va_list args;\n+\n+  va_start (args, fmt);\n+  vfprintf (file, fmt, args);\n+  va_end (args);\n+}\n+\n+static void ATTRIBUTE_NORETURN\n+print_usage (int error_p)\n+{\n+  FILE *file = error_p ? stderr : stdout;\n+  int status = error_p ? 1 : 0;\n+\n+  fnotice (file, \"Usage: %s [OPTION...] [CONNECTION] [MAPPINGS...] \\n\\n\",\n+\t   progname);\n+  fnotice (file, \"C++ Module Mapper.\\n\\n\");\n+  fnotice (file, \"  -a, --accept     Netmask to accept from\\n\");\n+  fnotice (file, \"  -f, --fallback   Use fallback for missing mappings\\n\");\n+  fnotice (file, \"  -h, --help       Print this help, then exit\\n\");\n+  fnotice (file, \"  -n, --noisy      Print progress messages\\n\");\n+  fnotice (file, \"  -1, --one        One connection and then exit\\n\");\n+  fnotice (file, \"  -r, --root DIR   Root compiled module directory\\n\");\n+  fnotice (file, \"  -s, --sequential Process connections sequentially\\n\");\n+  fnotice (file, \"  -v, --version    Print version number, then exit\\n\");\n+  fnotice (file, \"Send SIGTERM(%d) to terminate\\n\", SIGTERM);\n+  fnotice (file, \"\\nFor bug reporting instructions, please see:\\n%s.\\n\",\n+\t   bug_report_url);\n+  exit (status);\n+}\n+\n+/* Print version information and exit.  */\n+\n+static void ATTRIBUTE_NORETURN\n+print_version (void)\n+{\n+  fnotice (stdout, \"%s %s%s\\n\", progname, pkgversion_string, version_string);\n+  fprintf (stdout, \"Copyright %s 2018-2020 Free Software Foundation, Inc.\\n\",\n+\t   (\"(C)\"));\n+  fnotice (stdout,\n+\t   (\"This is free software; see the source for copying conditions.\\n\"\n+\t    \"There is NO warranty; not even for MERCHANTABILITY or \\n\"\n+\t    \"FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"));\n+  exit (0);\n+}\n+\n+/* ARG is a netmask to accept from.  Add it to the table.  Return\n+   false if we fail to resolve it.  */\n+\n+static bool\n+accept_from (char *arg ATTRIBUTE_UNUSED)\n+{\n+  bool ok = true;\n+#if HAVE_AF_INET6\n+  unsigned bits = sizeof (in6_addr) * 8;\n+  char *slash = strrchr (arg, '/');\n+  if (slash)\n+    {\n+      *slash = 0;\n+      if (slash[1])\n+\t{\n+\t  char *endp;\n+\t  bits = strtoul (slash + 1, &endp, 0);\n+\t}\n+    }\n+\n+  addrinfo hints;\n+\n+  hints.ai_flags = AI_NUMERICSERV;\n+  hints.ai_family = AF_INET6;\n+  hints.ai_socktype = SOCK_STREAM;\n+  hints.ai_protocol = 0;\n+  hints.ai_addrlen = 0;\n+  hints.ai_addr = NULL;\n+  hints.ai_canonname = NULL;\n+  hints.ai_next = NULL;\n+\n+  struct addrinfo *addrs = NULL;\n+  if (int e = getaddrinfo (slash == arg ? NULL : arg, \"0\", &hints, &addrs))\n+    {\n+      noisy (\"cannot resolve '%s': %s\", arg, gai_strerror (e));\n+      ok = false;\n+    }\n+  else\n+    for (addrinfo *next = addrs; next; next = next->ai_next)\n+      if (next->ai_family == AF_INET6)\n+\t{\n+\t  netmask mask (((const sockaddr_in6 *)next->ai_addr)->sin6_addr, bits);\n+\t  netmask_set.insert (mask);\n+\t}\n+  freeaddrinfo (addrs);\n+#endif\n+  return ok;\n+}\n+\n+/* Process args, return index to first non-arg.  */\n+\n+static int\n+process_args (int argc, char **argv)\n+{\n+  static const struct option options[] =\n+    {\n+     { \"accept\", required_argument, NULL, 'a' },\n+     { \"help\",\tno_argument,\tNULL, 'h' },\n+     { \"map\",   no_argument,\tNULL, 'm' },\n+     { \"noisy\",\tno_argument,\tNULL, 'n' },\n+     { \"one\",\tno_argument,\tNULL, '1' },\n+     { \"root\",\trequired_argument, NULL, 'r' },\n+     { \"sequential\", no_argument, NULL, 's' },\n+     { \"translate\",no_argument,\tNULL, 't' },\n+     { \"version\", no_argument,\tNULL, 'v' },\n+     { 0, 0, 0, 0 }\n+    };\n+  int opt;\n+  bool bad_accept = false;\n+  const char *opts = \"a:fhmn1r:stv\";\n+  while ((opt = getopt_long (argc, argv, opts, options, NULL)) != -1)\n+    {\n+      switch (opt)\n+\t{\n+\tcase 'a':\n+\t  if (!accept_from (optarg))\n+\t    bad_accept = true;\n+\t  break;\n+\tcase 'h':\n+\t  print_usage (false);\n+\t  /* print_usage will exit.  */\n+\tcase 'f': // deprecated alias\n+\tcase 'm':\n+\t  flag_map = true;\n+\t  break;\n+\tcase 'n':\n+\t  flag_noisy = true;\n+\t  break;\n+\tcase '1':\n+\t  flag_one = true;\n+\t  break;\n+\tcase 'r':\n+\t  flag_root = optarg;\n+\t  break;\n+\tcase 's':\n+\t  flag_sequential = true;\n+\t  break;\n+\tcase 't':\n+\t  flag_xlate = true;\n+\t  break;\n+\tcase 'v':\n+\t  print_version ();\n+\t  /* print_version will exit.  */\n+\tdefault:\n+\t  print_usage (true);\n+\t  /* print_usage will exit.  */\n+\t}\n+    }\n+\n+  if (bad_accept)\n+    error (\"failed to resolve all accept addresses\");\n+\n+  return optind;\n+}\n+\n+#if NETWORKING\n+\n+/* Manipulate the EPOLL state, or do nothing, if there is epoll.  */\n+\n+#ifdef HAVE_EPOLL\n+static inline void\n+do_epoll_ctl (int epoll_fd, int code, int event, int fd, unsigned data)\n+{\n+  epoll_event ev;\n+  ev.events = event;\n+  ev.data.u32 = data;\n+  if (epoll_ctl (epoll_fd, code, fd, &ev))\n+    {\n+      noisy (\"epoll_ctl error:%s\", xstrerror (errno));\n+      gcc_unreachable ();\n+    }\n+}\n+#define my_epoll_ctl(EFD,C,EV,FD,CL) \\\n+  ((EFD) >= 0 ? do_epoll_ctl (EFD,C,EV,FD,CL) : (void)0)\n+#else\n+#define my_epoll_ctl(EFD,C,EV,FD,CL) ((void)(EFD), (void)(FD), (void)(CL))\n+#endif\n+\n+/* We increment this to tell the server to shut down.  */\n+static volatile int term = false;\n+static volatile int kill_sock_fd = -1;\n+#if !defined (HAVE_PSELECT) && defined (HAVE_SELECT)\n+static int term_pipe[2] = {-1, -1};\n+#else\n+#define term_pipe ((int *)NULL)\n+#endif\n+\n+/* A terminate signal.  Shutdown gracefully.  */\n+\n+static void\n+term_signal (int sig)\n+{\n+  signal (sig, term_signal);\n+  term = term + 1;\n+  if (term_pipe && term_pipe[1] >= 0)\n+    write (term_pipe[1], &term_pipe[1], 1);\n+}\n+\n+/* A kill signal.  Shutdown immediately.  */\n+\n+static void\n+kill_signal (int sig)\n+{\n+  signal (sig, SIG_DFL);\n+  int sock_fd = kill_sock_fd;\n+  if (sock_fd >= 0)\n+    close (sock_fd);\n+  exit (2);\n+}\n+\n+bool process_server (Cody::Server *server, unsigned slot, int epoll_fd)\n+{\n+  switch (server->GetDirection ())\n+    {\n+    case Cody::Server::READING:\n+      if (int err = server->Read ())\n+\treturn !(err == EINTR || err == EAGAIN);\n+      server->ProcessRequests ();\n+      server->PrepareToWrite ();\n+      break;\n+\n+    case Cody::Server::WRITING:\n+      if (int err = server->Write ())\n+\treturn !(err == EINTR || err == EAGAIN);\n+      server->PrepareToRead ();\n+      break;\n+\n+    default:\n+      // We should never get here\n+      return true;\n+    }\n+\n+  // We've changed direction, so update epoll\n+  gcc_assert (server->GetFDRead () == server->GetFDWrite ());\n+  my_epoll_ctl (epoll_fd, EPOLL_CTL_MOD,\n+\t\tserver->GetDirection () == Cody::Server::READING\n+\t\t? EPOLLIN : EPOLLOUT, server->GetFDRead (), slot + 1);\n+\n+  return false;\n+}\n+\n+void close_server (Cody::Server *server, int epoll_fd)\n+{\n+  my_epoll_ctl (epoll_fd, EPOLL_CTL_DEL, EPOLLIN, server->GetFDRead (), 0);\n+\n+  close (server->GetFDRead ());\n+  \n+  delete server;\n+}\n+\n+int open_server (bool ip6, int sock_fd)\n+{\n+  sockaddr_in6 addr;\n+  socklen_t addr_len = sizeof (addr);\n+\n+#ifdef HAVE_ACCEPT4\n+  int client_fd = accept4 (sock_fd, ip6 ? (sockaddr *)&addr : nullptr,\n+\t\t\t   &addr_len, SOCK_NONBLOCK);\n+#else\n+  int client_fd = accept (sock_fd, ip6 ? (sockaddr *)&addr : nullptr, &addr_len);\n+#endif\n+  if (client_fd < 0)\n+    {\n+      error (\"cannot accept: %s\", xstrerror (errno));\n+      flag_one = true;\n+    }\n+  else if (ip6)\n+    {\n+      const char *str = NULL;\n+#if HAVE_INET_NTOP\n+      char name[INET6_ADDRSTRLEN];\n+      str = inet_ntop (addr.sin6_family, &addr.sin6_addr, name, sizeof (name));\n+#endif\n+      if (!accept_addrs.empty ())\n+\t{\n+\t  netmask_vec_t::iterator e = accept_addrs.end ();\n+\t  for (netmask_vec_t::iterator i = accept_addrs.begin ();\n+\t       i != e; ++i)\n+\t    if (i->includes (addr.sin6_addr))\n+\t      goto present;\n+\t  close (client_fd);\n+\t  client_fd = -1;\n+\t  noisy (\"Rejecting connection from disallowed source '%s'\",\n+\t\t str ? str : \"\");\n+\tpresent:;\n+\t}\n+      if (client_fd >= 0)\n+\tflag_noisy && noisy (\"Accepting connection from '%s'\", str ? str : \"\");\n+    }\n+\n+  return client_fd;\n+}\n+\n+/* A server listening on bound socket SOCK_FD.  */\n+\n+static void\n+server (bool ipv6, int sock_fd, module_resolver *resolver)\n+{\n+  int epoll_fd = -1;\n+\n+  signal (SIGTERM, term_signal);\n+#ifdef HAVE_EPOLL\n+  epoll_fd = epoll_create (1);\n+#endif\n+  if (epoll_fd >= 0)\n+    my_epoll_ctl (epoll_fd, EPOLL_CTL_ADD, EPOLLIN, sock_fd, 0);\n+\n+#if defined (HAVE_EPOLL) || defined (HAVE_PSELECT) || defined (HAVE_SELECT)\n+  sigset_t mask;\n+  {\n+    sigset_t block;\n+    sigemptyset (&block);\n+    sigaddset (&block, SIGTERM);\n+    sigprocmask (SIG_BLOCK, &block, &mask);\n+  }\n+#endif\n+\n+#ifdef HAVE_EPOLL\n+  const unsigned max_events = 20;\n+  epoll_event events[max_events];\n+#endif\n+#if defined (HAVE_PSELECT) || defined (HAVE_SELECT)\n+  fd_set readers, writers;\n+#endif\n+  if (term_pipe)\n+    pipe (term_pipe);\n+\n+  // We need stable references to servers, so this array can contain nulls\n+  std::vector<Cody::Server *> connections;\n+  unsigned live = 0;\n+  while (sock_fd >= 0 || live)\n+    {\n+      /* Wait for one or more events.  */\n+      bool eintr = false;\n+      int event_count;\n+\n+      if (epoll_fd >= 0)\n+\t{\n+#ifdef HAVE_EPOLL\n+\t  event_count = epoll_pwait (epoll_fd, events, max_events, -1, &mask);\n+#endif\n+\t}\n+      else\n+\t{\n+#if defined (HAVE_PSELECT) || defined (HAVE_SELECT)\n+\t  FD_ZERO (&readers);\n+\t  FD_ZERO (&writers);\n+\n+\t  unsigned limit = 0;\n+\t  if (sock_fd >= 0\n+\t      && !(term || (live && (flag_one || flag_sequential))))\n+\t    {\n+\t      FD_SET (sock_fd, &readers);\n+\t      limit = sock_fd + 1;\n+\t    }\n+\n+\t  if (term_pipe && term_pipe[0] >= 0)\n+\t    {\n+\t      FD_SET (term_pipe[0], &readers);\n+\t      if (unsigned (term_pipe[0]) >= limit)\n+\t\tlimit = term_pipe[0] + 1;\n+\t    }\n+\n+\t  for (auto iter = connections.begin ();\n+\t       iter != connections.end (); ++iter)\n+\t    if (auto *server = *iter)\n+\t      {\n+\t\tint fd = -1;\n+\t\tswitch (server->GetDirection ())\n+\t\t  {\n+\t\t  case Cody::Server::READING:\n+\t\t    fd = server->GetFDRead ();\n+\t\t    FD_SET (fd, &readers);\n+\t\t    break;\n+\t\t  case Cody::Server::WRITING:\n+\t\t    fd = server->GetFDWrite ();\n+\t\t    FD_SET (fd, &writers);\n+\t\t    break;\n+\t\t  default:\n+\t\t    break;\n+\t\t  }\n+\n+\t\tif (fd >= 0 && limit <= unsigned (fd))\n+\t\t  limit = fd + 1;\n+\t      }\n+\n+#ifdef HAVE_PSELECT\n+\t  event_count = pselect (limit, &readers, &writers, NULL, NULL, &mask);\n+#else\n+\t  event_count = select (limit, &readers, &writers, NULL, NULL);\n+#endif\n+\t  if (term_pipe && FD_ISSET (term_pipe[0], &readers))\n+\t    {\n+\t      /* Fake up an interrupted system call.  */\n+\t      event_count = -1;\n+\t      errno = EINTR;\n+\t    }\n+#endif\n+\t}\n+\n+      if (event_count < 0)\n+\t{\n+\t  // Error in waiting\n+\t  if (errno == EINTR)\n+\t    {\n+\t      flag_noisy && noisy (\"Interrupted wait\");\n+\t      eintr = true;\n+\t    }\n+\t  else\n+\t    error (\"cannot %s: %s\", epoll_fd >= 0 ? \"epoll_wait\"\n+#ifdef HAVE_PSELECT\n+\t\t   : \"pselect\",\n+#else\n+\t\t   : \"select\",\n+#endif\n+\t\t   xstrerror (errno));\n+\t  event_count = 0;\n+\t}\n+\n+      auto iter = connections.begin ();\n+      while (event_count--)\n+\t{\n+\t  // Process an event\n+\t  int active = -2;\n+\n+\t  if (epoll_fd >= 0)\n+\t    {\n+#ifdef HAVE_EPOLL\n+\t      /* See PR c++/88664 for why a temporary is used.  */\n+\t      unsigned data = events[event_count].data.u32;\n+\t      active = int (data) - 1;\n+#endif\n+\t    }\n+\t  else\n+\t    {\n+\t      for (; iter != connections.end (); ++iter)\n+\t\tif (auto *server = *iter)\n+\t\t  {\n+\t\t    bool found = false;\n+\t\t    switch (server->GetDirection ())\n+\t\t      {\n+#if defined (HAVE_PSELECT) || defined (HAVE_SELECT)\n+\t\t      case Cody::Server::READING:\n+\t\t\tfound = FD_ISSET (server->GetFDRead (), &readers);\n+\t\t\tbreak;\n+\t\t      case Cody::Server::WRITING:\n+\t\t\tfound = FD_ISSET (server->GetFDWrite (), &writers);\n+\t\t\tbreak;\n+#endif\n+\t\t      default:\n+\t\t\tbreak;\n+\t\t      }\n+\n+\t\t    if (found)\n+\t\t      {\n+\t\t\tactive = iter - connections.begin ();\n+\t\t\t++iter;\n+\t\t\tbreak;\n+\t\t      }\n+\t\t  }\n+\n+\t      if (active < 0 && sock_fd >= 0 && FD_ISSET (sock_fd, &readers))\n+\t\tactive = -1;\n+\t    }\n+\n+\t  if (active >= 0)\n+\t    {\n+\t      // Do the action\n+\t      auto *server = connections[active];\n+\t      if (process_server (server, active, epoll_fd))\n+\t\t{\n+\t\t  connections[active] = nullptr;\n+\t\t  close_server (server, epoll_fd);\n+\t\t  live--;\n+\t\t  if (flag_sequential)\n+\t\t    my_epoll_ctl (epoll_fd, EPOLL_CTL_ADD, EPOLLIN, sock_fd, 0);\n+\t\t}\n+\t    }\n+\t  else if (active == -1 && !eintr)\n+\t    {\n+\t      // New connection\n+\t      int fd = open_server (ipv6, sock_fd);\n+\t      if (fd >= 0)\n+\t\t{\n+#if !defined (HAVE_ACCEPT4) \\\n+  && (defined (HAVE_EPOLL) || defined (HAVE_PSELECT) || defined (HAVE_SELECT))\n+\t\t  int flags = fcntl (fd, F_GETFL, 0);\n+\t\t  fcntl (fd, F_SETFL, flags | O_NONBLOCK);\n+#endif\n+\t\t  auto *server = new Cody::Server (resolver, fd);\n+\n+\t\t  unsigned slot = connections.size ();\n+\t\t  if (live == slot)\n+\t\t    connections.push_back (server);\n+\t\t  else\n+\t\t    for (auto iter = connections.begin (); ; ++iter)\n+\t\t      if (!*iter)\n+\t\t\t{\n+\t\t\t  *iter = server;\n+\t\t\t  slot = iter - connections.begin ();\n+\t\t\t  break;\n+\t\t\t}\n+\t\t  live++;\n+\t\t  my_epoll_ctl (epoll_fd, EPOLL_CTL_ADD, EPOLLIN, fd, slot + 1);\n+\t\t}\n+\t    }\n+\n+\t  if (sock_fd >= 0\n+\t      && (term || (live && (flag_one || flag_sequential))))\n+\t    {\n+\t      /* Stop paying attention to sock_fd.  */\n+\t      my_epoll_ctl (epoll_fd, EPOLL_CTL_DEL, EPOLLIN, sock_fd, 0);\n+\t      if (flag_one || term)\n+\t\t{\n+\t\t  close (sock_fd);\n+\t\t  sock_fd = -1;\n+\t\t}\n+\t    }\n+\t}\n+    }\n+#if defined (HAVE_EPOLL) || defined (HAVE_PSELECT) || defined (HAVE_SELECT)\n+  /* Restore the signal mask.  */\n+  sigprocmask (SIG_SETMASK, &mask, NULL);\n+#endif\n+\n+  gcc_assert (sock_fd < 0);\n+  if (epoll_fd >= 0)\n+    close (epoll_fd);\n+\n+  if (term_pipe && term_pipe[0] >= 0)\n+    {\n+      close (term_pipe[0]);\n+      close (term_pipe[1]);\n+    }\n+}\n+\n+#endif\n+\n+static int maybe_parse_socket (std::string &option, module_resolver *r)\n+{\n+  /* Local or ipv6 address.  */\n+  auto last = option.find_last_of ('?');\n+  if (last != option.npos)\n+    {\n+      r->set_ident (option.c_str () + last + 1);\n+      option.erase (last);\n+    }\n+  int fd = -2;\n+  char const *errmsg = nullptr;\n+\n+  /* Does it look like a socket?  */\n+  if (option[0] == '=')\n+    {\n+      /* A local socket.  */\n+#if CODY_NETWORKING\n+      fd = Cody::ListenLocal (&errmsg, option.c_str () + 1);\n+#endif\n+    }\n+  else\n+    {\n+      auto colon = option.find_last_of (':');\n+      if (colon != option.npos)\n+\t{\n+\t  /* Try a hostname:port address.  */\n+\t  char const *cptr = option.c_str () + colon;\n+\t  char *endp;\n+\t  unsigned port = strtoul (cptr + 1, &endp, 10);\n+\n+\t  if (port && endp != cptr + 1 && !*endp)\n+\t    {\n+\t      /* Ends in ':number', treat as ipv6 domain socket.  */\n+\t      option.erase (colon);\n+#if CODY_NETWORKING\n+\t      fd = Cody::ListenInet6 (&errmsg, option.c_str (), port);\n+#endif\n+\t    }\n+\t}\n+    }\n+\n+  if (errmsg)\n+    error (\"failed to open socket: %s\", errmsg);\n+\n+  return fd;\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  const char *p = argv[0] + strlen (argv[0]);\n+  while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))\n+    --p;\n+  progname = p;\n+\n+#ifdef SIGSEGV\n+  signal (SIGSEGV, crash_signal);\n+#endif\n+#ifdef SIGILL\n+  signal (SIGILL, crash_signal);\n+#endif\n+#ifdef SIGBUS\n+  signal (SIGBUS, crash_signal);\n+#endif\n+#ifdef SIGABRT\n+  signal (SIGABRT, crash_signal);\n+#endif\n+#ifdef SIGFPE\n+  signal (SIGFPE, crash_signal);\n+#endif\n+#ifdef SIGPIPE\n+  /* Ignore sigpipe, so read/write get an error.  */\n+  signal (SIGPIPE, SIG_IGN);\n+#endif\n+#if NETWORKING\n+#ifdef SIGINT\n+  signal (SIGINT, kill_signal);\n+#endif\n+#endif\n+\n+  int argno = process_args (argc, argv);\n+\n+  std::string name;\n+  int sock_fd = -1; /* Socket fd, otherwise stdin/stdout.  */\n+  module_resolver r (flag_map, flag_xlate);\n+\n+  if (argno != argc)\n+    {\n+      name = argv[argno];\n+      sock_fd = maybe_parse_socket (name, &r);\n+      if (!name.empty ())\n+\targno++;\n+    }\n+\n+  if (argno != argc)\n+    for (; argno != argc; argno++)\n+      {\n+\tstd::string option = argv[argno];\n+\tchar const *prefix = nullptr;\n+\tauto ident = option.find_last_of ('?');\n+\tif (ident != option.npos)\n+\t  {\n+\t    prefix = option.c_str () + ident + 1;\n+\t    option[ident] = 0;\n+\t  }\n+\tint fd = open (option.c_str (), O_RDONLY | O_CLOEXEC);\n+\tint err = 0;\n+\tif (fd < 0)\n+\t  err = errno;\n+\telse\n+\t  {\n+\t    err = r.read_tuple_file (fd, prefix, false);\n+\t    close (fd);\n+\t  }\n+\n+\tif (err)\n+\t  error (\"failed reading '%s': %s\", option.c_str (), xstrerror (err));\n+      }\n+  else\n+    r.set_default_map (true);\n+\n+  if (flag_root)\n+    r.set_repo (flag_root);\n+\n+#ifdef HAVE_AF_INET6\n+  netmask_set_t::iterator end = netmask_set.end ();\n+  for (netmask_set_t::iterator iter = netmask_set.begin ();\n+       iter != end; ++iter)\n+    {\n+      netmask_vec_t::iterator e = accept_addrs.end ();\n+      for (netmask_vec_t::iterator i = accept_addrs.begin (); i != e; ++i)\n+\tif (i->includes (iter->addr))\n+\t  goto present;\n+      accept_addrs.push_back (*iter);\n+    present:;\n+    }\n+#endif\n+\n+#if NETWORKING\n+  if (sock_fd >= 0)\n+    {\n+      server (name[0] != '=', sock_fd, &r);\n+      if (name[0] == '=')\n+\tunlink (name.c_str () + 1);\n+    }\n+  else\n+#endif\n+    {\n+      auto server = Cody::Server (&r, 0, 1);\n+\n+      int err = 0;\n+      for (;;)\n+\t{\n+\t  server.PrepareToRead ();\n+\t  while ((err = server.Read ()))\n+\t    {\n+\t      if (err == EINTR || err == EAGAIN)\n+\t\tcontinue;\n+\t      goto done;\n+\t    }\n+\n+\t  server.ProcessRequests ();\n+\n+\t  server.PrepareToWrite ();\n+\t  while ((err = server.Write ()))\n+\t    {\n+\t      if (err == EINTR || err == EAGAIN)\n+\t\tcontinue;\n+\t      goto done;\n+\t    }\n+\t}\n+    done:;\n+      if (err > 0)\n+\terror (\"communication error:%s\", xstrerror (err));\n+    }\n+\n+  return 0;\n+}"}, {"sha": "1972fda8eb05d040c1390495644252fc92fa2d10", "filename": "config.guess", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/config.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/config.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.guess?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2020 Free Software Foundation, Inc.\n+#   Copyright 1992-2021 Free Software Foundation, Inc.\n \n-timestamp='2020-11-07'\n+timestamp='2021-01-25'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -27,7 +27,7 @@ timestamp='2020-11-07'\n # Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n #\n # You can get the latest version of this script from:\n-# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n #\n # Please send patches to <config-patches@gnu.org>.\n \n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2020 Free Software Foundation, Inc.\n+Copyright 1992-2021 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -138,9 +138,7 @@ UNAME_VERSION=$( (uname -v) 2>/dev/null) || UNAME_VERSION=unknown\n \n case \"$UNAME_SYSTEM\" in\n Linux|GNU|GNU/*)\n-\t# If the system lacks a compiler, then just pick glibc.\n-\t# We could probably try harder.\n-\tLIBC=gnu\n+\tLIBC=unknown\n \n \tset_cc_for_build\n \tcat <<-EOF > \"$dummy.c\"\n@@ -149,16 +147,30 @@ Linux|GNU|GNU/*)\n \tLIBC=uclibc\n \t#elif defined(__dietlibc__)\n \tLIBC=dietlibc\n+\t#elif defined(__GLIBC__)\n+\tLIBC=gnu\n \t#else\n \t#include <stdarg.h>\n+\t/* First heuristic to detect musl libc.  */\n \t#ifdef __DEFINED_va_list\n \tLIBC=musl\n-\t#else\n-\tLIBC=gnu\n \t#endif\n \t#endif\n \tEOF\n \teval \"$($CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g')\"\n+\n+\t# Second heuristic to detect musl libc.\n+\tif [ \"$LIBC\" = unknown ] &&\n+\t   command -v ldd >/dev/null &&\n+\t   ldd --version 2>&1 | grep -q ^musl; then\n+\t\tLIBC=musl\n+\tfi\n+\n+\t# If the system lacks a compiler, then just pick glibc.\n+\t# We could probably try harder.\n+\tif [ \"$LIBC\" = unknown ]; then\n+\t\tLIBC=gnu\n+\tfi\n \t;;\n esac\n \n@@ -176,10 +188,9 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t#\n \t# Note: NetBSD doesn't particularly care about the vendor\n \t# portion of the name.  We always set it to \"unknown\".\n-\tsysctl=\"sysctl -n hw.machine_arch\"\n \tUNAME_MACHINE_ARCH=$( (uname -p 2>/dev/null || \\\n-\t    \"/sbin/$sysctl\" 2>/dev/null || \\\n-\t    \"/usr/sbin/$sysctl\" 2>/dev/null || \\\n+\t    /sbin/sysctl -n hw.machine_arch 2>/dev/null || \\\n+\t    /usr/sbin/sysctl -n hw.machine_arch 2>/dev/null || \\\n \t    echo unknown))\n \tcase \"$UNAME_MACHINE_ARCH\" in\n \t    aarch64eb) machine=aarch64_be-unknown ;;\n@@ -984,6 +995,9 @@ EOF\n     k1om:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n+    loongarch32:Linux:*:* | loongarch64:Linux:*:* | loongarchx32:Linux:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n+\texit ;;\n     m32r*:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n@@ -1072,7 +1086,7 @@ EOF\n     ppcle:Linux:*:*)\n \techo powerpcle-unknown-linux-\"$LIBC\"\n \texit ;;\n-    riscv32:Linux:*:* | riscv64:Linux:*:*)\n+    riscv32:Linux:*:* | riscv32be:Linux:*:* | riscv64:Linux:*:* | riscv64be:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     s390:Linux:*:* | s390x:Linux:*:*)\n@@ -1468,8 +1482,8 @@ EOF\n     i*86:rdos:*:*)\n \techo \"$UNAME_MACHINE\"-pc-rdos\n \texit ;;\n-    i*86:AROS:*:*)\n-\techo \"$UNAME_MACHINE\"-pc-aros\n+    *:AROS:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-aros\n \texit ;;\n     x86_64:VMkernel:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-esx\n@@ -1638,9 +1652,9 @@ This script (version $timestamp), has failed to recognize the\n operating system you are using. If your script is old, overwrite *all*\n copies of config.guess and config.sub with the latest versions from:\n \n-  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+  https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n and\n-  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+  https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n EOF\n \n year=$(echo $timestamp | sed 's,-.*,,')"}, {"sha": "63c1f1c8b5e2d881e106d8951a11c6c94ae6352b", "filename": "config.sub", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/config.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/config.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.sub?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n-#   Copyright 1992-2020 Free Software Foundation, Inc.\n+#   Copyright 1992-2021 Free Software Foundation, Inc.\n \n-timestamp='2020-11-07'\n+timestamp='2021-01-08'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -33,7 +33,7 @@ timestamp='2020-11-07'\n # Otherwise, we print the canonical config type on stdout and succeed.\n \n # You can get the latest version of this script from:\n-# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+# https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n \n # This file is supposed to be the same for all GNU packages\n # and recognize all the CPU types, system types and aliases\n@@ -67,7 +67,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright 1992-2020 Free Software Foundation, Inc.\n+Copyright 1992-2021 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -1185,6 +1185,7 @@ case $cpu-$vendor in\n \t\t\t| k1om \\\n \t\t\t| le32 | le64 \\\n \t\t\t| lm32 \\\n+\t\t\t| loongarch32 | loongarch64 | loongarchx32 \\\n \t\t\t| m32c | m32r | m32rle \\\n \t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \\\n \t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \\\n@@ -1229,7 +1230,7 @@ case $cpu-$vendor in\n \t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n \t\t\t| pru \\\n \t\t\t| pyramid \\\n-\t\t\t| riscv | riscv32 | riscv64 \\\n+\t\t\t| riscv | riscv32 | riscv32be | riscv64 | riscv64be \\\n \t\t\t| rl78 | romp | rs6000 | rx \\\n \t\t\t| s390 | s390x \\\n \t\t\t| score \\\n@@ -1241,6 +1242,7 @@ case $cpu-$vendor in\n \t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n \t\t\t| spu \\\n \t\t\t| tahoe \\\n+\t\t\t| thumbv7* \\\n \t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n \t\t\t| tron \\\n \t\t\t| ubicom32 \\\n@@ -1681,11 +1683,14 @@ fi\n \n # Now, validate our (potentially fixed-up) OS.\n case $os in\n-\t# Sometimes we do \"kernel-abi\", so those need to count as OSes.\n+\t# Sometimes we do \"kernel-libc\", so those need to count as OSes.\n \tmusl* | newlib* | uclibc*)\n \t\t;;\n-\t# Likewise for \"kernel-libc\"\n-\teabi | eabihf | gnueabi | gnueabihf)\n+\t# Likewise for \"kernel-abi\"\n+\teabi* | gnueabi*)\n+\t\t;;\n+\t# VxWorks passes extra cpu info in the 4th filed.\n+\tsimlinux | simwindows | spe)\n \t\t;;\n \t# Now accept the basic system types.\n \t# The portable systems comes first.\n@@ -1749,6 +1754,8 @@ case $kernel-$os in\n \t\t;;\n \tkfreebsd*-gnu* | kopensolaris*-gnu*)\n \t\t;;\n+\tvxworks-simlinux | vxworks-simwindows | vxworks-spe)\n+\t\t;;\n \tnto-qnx*)\n \t\t;;\n \tos2-emx)"}, {"sha": "ccd13a89585abb5a783265012b20e3b632df4c15", "filename": "config/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,3 +1,12 @@\n+2021-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR c++/98316\n+\t* ax_lib_socket_nsl.m4: Import from autoconf-archive.\n+\n+2021-01-03  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* pkg.m4: New file from pkg-config-0.29.2.\n+\n 2020-11-25  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* bootstrap-hwasan.mk: Disable random frame tags for stack-tagging"}, {"sha": "54cad68b4c8cd8faec8f672c5b801225a5558509", "filename": "config/ax_lib_socket_nsl.m4", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/config%2Fax_lib_socket_nsl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/config%2Fax_lib_socket_nsl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fax_lib_socket_nsl.m4?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,40 @@\n+# ===========================================================================\n+#    https://www.gnu.org/software/autoconf-archive/ax_lib_socket_nsl.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_LIB_SOCKET_NSL\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out what libraries are required on this platform to\n+#   link sockets programs.\n+#\n+#   The common cases are not to need any extra libraries, or to need\n+#   -lsocket and -lnsl. We need to avoid linking with libnsl unless we need\n+#   it, though, since on some OSes where it isn't necessary it will totally\n+#   break networking. Unisys also includes gethostbyname() in libsocket but\n+#   needs libnsl for socket().\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Russ Allbery <rra@stanford.edu>\n+#   Copyright (c) 2008 Stepan Kasal <kasal@ucw.cz>\n+#   Copyright (c) 2008 Warren Young <warren@etr-usa.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 7\n+\n+AU_ALIAS([LIB_SOCKET_NSL], [AX_LIB_SOCKET_NSL])\n+AC_DEFUN([AX_LIB_SOCKET_NSL],\n+[\n+\tAC_SEARCH_LIBS([gethostbyname], [nsl])\n+\tAC_SEARCH_LIBS([socket], [socket], [], [\n+\t\tAC_CHECK_LIB([socket], [socket], [LIBS=\"-lsocket -lnsl $LIBS\"],\n+\t\t[], [-lnsl])])\n+])"}, {"sha": "13a889017866a112bbf088864210d7ada61b5682", "filename": "config/pkg.m4", "status": "added", "additions": 275, "deletions": 0, "changes": 275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/config%2Fpkg.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/config%2Fpkg.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fpkg.m4?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -0,0 +1,275 @@\n+# pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-\n+# serial 12 (pkg-config-0.29.2)\n+\n+dnl Copyright \u00a9 2004 Scott James Remnant <scott@netsplit.com>.\n+dnl Copyright \u00a9 2012-2015 Dan Nicholson <dbn.lists@gmail.com>\n+dnl\n+dnl This program is free software; you can redistribute it and/or modify\n+dnl it under the terms of the GNU General Public License as published by\n+dnl the Free Software Foundation; either version 2 of the License, or\n+dnl (at your option) any later version.\n+dnl\n+dnl This program is distributed in the hope that it will be useful, but\n+dnl WITHOUT ANY WARRANTY; without even the implied warranty of\n+dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+dnl General Public License for more details.\n+dnl\n+dnl You should have received a copy of the GNU General Public License\n+dnl along with this program; if not, write to the Free Software\n+dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+dnl 02111-1307, USA.\n+dnl\n+dnl As a special exception to the GNU General Public License, if you\n+dnl distribute this file as part of a program that contains a\n+dnl configuration script generated by Autoconf, you may include it under\n+dnl the same distribution terms that you use for the rest of that\n+dnl program.\n+\n+dnl PKG_PREREQ(MIN-VERSION)\n+dnl -----------------------\n+dnl Since: 0.29\n+dnl\n+dnl Verify that the version of the pkg-config macros are at least\n+dnl MIN-VERSION. Unlike PKG_PROG_PKG_CONFIG, which checks the user's\n+dnl installed version of pkg-config, this checks the developer's version\n+dnl of pkg.m4 when generating configure.\n+dnl\n+dnl To ensure that this macro is defined, also add:\n+dnl m4_ifndef([PKG_PREREQ],\n+dnl     [m4_fatal([must install pkg-config 0.29 or later before running autoconf/autogen])])\n+dnl\n+dnl See the \"Since\" comment for each macro you use to see what version\n+dnl of the macros you require.\n+m4_defun([PKG_PREREQ],\n+[m4_define([PKG_MACROS_VERSION], [0.29.2])\n+m4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,\n+    [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])\n+])dnl PKG_PREREQ\n+\n+dnl PKG_PROG_PKG_CONFIG([MIN-VERSION])\n+dnl ----------------------------------\n+dnl Since: 0.16\n+dnl\n+dnl Search for the pkg-config tool and set the PKG_CONFIG variable to\n+dnl first found in the path. Checks that the version of pkg-config found\n+dnl is at least MIN-VERSION. If MIN-VERSION is not specified, 0.9.0 is\n+dnl used since that's the first version where most current features of\n+dnl pkg-config existed.\n+AC_DEFUN([PKG_PROG_PKG_CONFIG],\n+[m4_pattern_forbid([^_?PKG_[A-Z_]+$])\n+m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])\n+m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])\n+AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])\n+AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])\n+AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])\n+\n+if test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n+\tAC_PATH_TOOL([PKG_CONFIG], [pkg-config])\n+fi\n+if test -n \"$PKG_CONFIG\"; then\n+\t_pkg_min_version=m4_default([$1], [0.9.0])\n+\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n+\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n+\t\tAC_MSG_RESULT([yes])\n+\telse\n+\t\tAC_MSG_RESULT([no])\n+\t\tPKG_CONFIG=\"\"\n+\tfi\n+fi[]dnl\n+])dnl PKG_PROG_PKG_CONFIG\n+\n+dnl PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+dnl -------------------------------------------------------------------\n+dnl Since: 0.18\n+dnl\n+dnl Check to see whether a particular set of modules exists. Similar to\n+dnl PKG_CHECK_MODULES(), but does not set variables or print errors.\n+dnl\n+dnl Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n+dnl only at the first occurence in configure.ac, so if the first place\n+dnl it's called might be skipped (such as if it is within an \"if\", you\n+dnl have to call PKG_CHECK_EXISTS manually\n+AC_DEFUN([PKG_CHECK_EXISTS],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+if test -n \"$PKG_CONFIG\" && \\\n+    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors \"$1\"]); then\n+  m4_default([$2], [:])\n+m4_ifvaln([$3], [else\n+  $3])dnl\n+fi])\n+\n+dnl _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])\n+dnl ---------------------------------------------\n+dnl Internal wrapper calling pkg-config via PKG_CONFIG and setting\n+dnl pkg_failed based on the result.\n+m4_define([_PKG_CONFIG],\n+[if test -n \"$$1\"; then\n+    pkg_cv_[]$1=\"$$1\"\n+ elif test -n \"$PKG_CONFIG\"; then\n+    PKG_CHECK_EXISTS([$3],\n+                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 \"$3\" 2>/dev/null`\n+\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes ],\n+\t\t     [pkg_failed=yes])\n+ else\n+    pkg_failed=untried\n+fi[]dnl\n+])dnl _PKG_CONFIG\n+\n+dnl _PKG_SHORT_ERRORS_SUPPORTED\n+dnl ---------------------------\n+dnl Internal check to see if pkg-config supports short errors.\n+AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n+        _pkg_short_errors_supported=yes\n+else\n+        _pkg_short_errors_supported=no\n+fi[]dnl\n+])dnl _PKG_SHORT_ERRORS_SUPPORTED\n+\n+\n+dnl PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n+dnl   [ACTION-IF-NOT-FOUND])\n+dnl --------------------------------------------------------------\n+dnl Since: 0.4.0\n+dnl\n+dnl Note that if there is a possibility the first call to\n+dnl PKG_CHECK_MODULES might not happen, you should be sure to include an\n+dnl explicit call to PKG_PROG_PKG_CONFIG in your configure.ac\n+AC_DEFUN([PKG_CHECK_MODULES],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl\n+AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl\n+\n+pkg_failed=no\n+AC_MSG_CHECKING([for $2])\n+\n+_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])\n+_PKG_CONFIG([$1][_LIBS], [libs], [$2])\n+\n+m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS\n+and $1[]_LIBS to avoid the need to call pkg-config.\n+See the pkg-config man page for more details.])\n+\n+if test $pkg_failed = yes; then\n+        AC_MSG_RESULT([no])\n+        _PKG_SHORT_ERRORS_SUPPORTED\n+        if test $_pkg_short_errors_supported = yes; then\n+\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"$2\" 2>&1`\n+        else\n+\t        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"$2\" 2>&1`\n+        fi\n+\t# Put the nasty error message in config.log where it belongs\n+\techo \"$$1[]_PKG_ERRORS\" >&AS_MESSAGE_LOG_FD\n+\n+\tm4_default([$4], [AC_MSG_ERROR(\n+[Package requirements ($2) were not met:\n+\n+$$1_PKG_ERRORS\n+\n+Consider adjusting the PKG_CONFIG_PATH environment variable if you\n+installed software in a non-standard prefix.\n+\n+_PKG_TEXT])[]dnl\n+        ])\n+elif test $pkg_failed = untried; then\n+        AC_MSG_RESULT([no])\n+\tm4_default([$4], [AC_MSG_FAILURE(\n+[The pkg-config script could not be found or is too old.  Make sure it\n+is in your PATH or set the PKG_CONFIG environment variable to the full\n+path to pkg-config.\n+\n+_PKG_TEXT\n+\n+To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl\n+        ])\n+else\n+\t$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS\n+\t$1[]_LIBS=$pkg_cv_[]$1[]_LIBS\n+        AC_MSG_RESULT([yes])\n+\t$3\n+fi[]dnl\n+])dnl PKG_CHECK_MODULES\n+\n+\n+dnl PKG_CHECK_MODULES_STATIC(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],\n+dnl   [ACTION-IF-NOT-FOUND])\n+dnl ---------------------------------------------------------------------\n+dnl Since: 0.29\n+dnl\n+dnl Checks for existence of MODULES and gathers its build flags with\n+dnl static libraries enabled. Sets VARIABLE-PREFIX_CFLAGS from --cflags\n+dnl and VARIABLE-PREFIX_LIBS from --libs.\n+dnl\n+dnl Note that if there is a possibility the first call to\n+dnl PKG_CHECK_MODULES_STATIC might not happen, you should be sure to\n+dnl include an explicit call to PKG_PROG_PKG_CONFIG in your\n+dnl configure.ac.\n+AC_DEFUN([PKG_CHECK_MODULES_STATIC],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+_save_PKG_CONFIG=$PKG_CONFIG\n+PKG_CONFIG=\"$PKG_CONFIG --static\"\n+PKG_CHECK_MODULES($@)\n+PKG_CONFIG=$_save_PKG_CONFIG[]dnl\n+])dnl PKG_CHECK_MODULES_STATIC\n+\n+\n+dnl PKG_INSTALLDIR([DIRECTORY])\n+dnl -------------------------\n+dnl Since: 0.27\n+dnl\n+dnl Substitutes the variable pkgconfigdir as the location where a module\n+dnl should install pkg-config .pc files. By default the directory is\n+dnl $libdir/pkgconfig, but the default can be changed by passing\n+dnl DIRECTORY. The user can override through the --with-pkgconfigdir\n+dnl parameter.\n+AC_DEFUN([PKG_INSTALLDIR],\n+[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])\n+m4_pushdef([pkg_description],\n+    [pkg-config installation directory @<:@]pkg_default[@:>@])\n+AC_ARG_WITH([pkgconfigdir],\n+    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,\n+    [with_pkgconfigdir=]pkg_default)\n+AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])\n+m4_popdef([pkg_default])\n+m4_popdef([pkg_description])\n+])dnl PKG_INSTALLDIR\n+\n+\n+dnl PKG_NOARCH_INSTALLDIR([DIRECTORY])\n+dnl --------------------------------\n+dnl Since: 0.27\n+dnl\n+dnl Substitutes the variable noarch_pkgconfigdir as the location where a\n+dnl module should install arch-independent pkg-config .pc files. By\n+dnl default the directory is $datadir/pkgconfig, but the default can be\n+dnl changed by passing DIRECTORY. The user can override through the\n+dnl --with-noarch-pkgconfigdir parameter.\n+AC_DEFUN([PKG_NOARCH_INSTALLDIR],\n+[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])\n+m4_pushdef([pkg_description],\n+    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])\n+AC_ARG_WITH([noarch-pkgconfigdir],\n+    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,\n+    [with_noarch_pkgconfigdir=]pkg_default)\n+AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])\n+m4_popdef([pkg_default])\n+m4_popdef([pkg_description])\n+])dnl PKG_NOARCH_INSTALLDIR\n+\n+\n+dnl PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,\n+dnl [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+dnl -------------------------------------------\n+dnl Since: 0.28\n+dnl\n+dnl Retrieves the value of the pkg-config variable for the given module.\n+AC_DEFUN([PKG_CHECK_VAR],\n+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl\n+AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl\n+\n+_PKG_CONFIG([$1], [variable=\"][$3][\"], [$2])\n+AS_VAR_COPY([$1], [pkg_cv_][$1])\n+\n+AS_VAR_IF([$1], [\"\"], [$5], [$4])dnl\n+])dnl PKG_CHECK_VAR"}, {"sha": "504f6410274acdf97128a941e90a1c93cbb570f4", "filename": "configure", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -2787,15 +2787,15 @@ build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #f\n-host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libdecnumber gmp mpfr mpc isl libelf libiconv libctf\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libelf libiconv libctf\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to\n # know that we are building the simulator.\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gotools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gotools c++tools\"\n \n # these libraries are built for the target environment, and are built after\n # the host libraries and the host tools (which may be a cross compiler)\n@@ -3444,9 +3444,6 @@ case ,${enable_languages}, in\n     ;;\n   *)\n     case \"${target}\" in\n-      *-*-darwin*)\n-\tunsupported_languages=\"$unsupported_languages d\"\n-        ;;\n       bpf-*-*)\n \tunsupported_languages=\"$unsupported_languages d\"\n \t;;"}, {"sha": "088e735c5dba53bb4b725a3e3a56e63c41378949", "filename": "configure.ac", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -132,15 +132,15 @@ build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #f\n-host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libdecnumber gmp mpfr mpc isl libelf libiconv libctf\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libelf libiconv libctf\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to\n # know that we are building the simulator.\n # binutils, gas and ld appear in that order because it makes sense to run\n # \"make check\" in that particular order.\n # If --enable-gold is used, \"gold\" may replace \"ld\".\n-host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gotools\"\n+host_tools=\"texinfo flex bison binutils gas ld fixincludes gcc cgen sid sim gdb gdbserver gprof etc expect dejagnu m4 utils guile fastjar gnattools libcc1 gotools c++tools\"\n \n # these libraries are built for the target environment, and are built after\n # the host libraries and the host tools (which may be a cross compiler)\n@@ -724,9 +724,6 @@ case ,${enable_languages}, in\n     ;;\n   *)\n     case \"${target}\" in\n-      *-*-darwin*)\n-\tunsupported_languages=\"$unsupported_languages d\"\n-        ;;\n       bpf-*-*)\n \tunsupported_languages=\"$unsupported_languages d\"\n \t;;"}, {"sha": "ee7b5b57556871b6f5ae0369708abae56354bd14", "filename": "contrib/ChangeLog", "status": "modified", "additions": 170, "deletions": 0, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,3 +1,173 @@\n+2021-03-23  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Fix broken tests.\n+\n+2021-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Add --directory argument.\n+\n+2021-03-19  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* texi2pod.pl: Substitute @tie{} with a space for the man pages.\n+\n+2021-03-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_update_version.py: Skip one problematic\n+\tcommit.\n+\n+2021-03-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Allow deletion of ChangeLog\n+\tfiles.\n+\t* gcc-changelog/setup.cfg: Set line limit to 120 characters.\n+\t* gcc-changelog/test_email.py: Add test.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\t* gcc-changelog/git_email.py: Fix parsing of deleted files.\n+\n+2021-02-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* mklog.py (generated_files): New set.\n+\t(generate_changelog): Add entries based on generated_files.\n+\n+2021-02-03  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* gcc_update (files_and_dependencies): Add dependency for\n+\tgcc/config/rs6000/fusion.md on gcc/config/rs6000/genfusion.md.\n+\n+2021-01-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR lto/85574\n+\t* compare-lto: Deal with PE-COFF executables specifically.\n+\n+2021-01-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Fix infinite loop for unsupported files.\n+\n+2021-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Support wrapping of functions\n+\tin parentheses that can take multiple lines.\n+\t* gcc-changelog/test_email.py: Add tests for it.\n+\t* gcc-changelog/test_patches.txt: Add 2 patches.\n+\n+2021-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Parse also define_insn_and_split and similar\n+\tdirectives in .md files.\n+\t* test_mklog.py: Test.\n+\n+2021-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Allow modifications of older\n+\tChangeLog (or specific) files without need to make a ChangeLog\n+\tentry.\n+\t* gcc-changelog/test_email.py: Test it.\n+\t* gcc-changelog/test_patches.txt: Add new patch.\n+\n+2021-01-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* update-copyright.py: Port to python3 by guessing encoding\n+\t(first utf8, then iso8859). Add 2 more ignores: .png and .pyc.\n+\n+2021-01-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Add decode_path function.\n+\t* gcc-changelog/git_email.py: Use it in order to solve\n+\tutf8 encoding filename issues.\n+\t* gcc-changelog/git_repository.py: Likewise.\n+\t* gcc-changelog/test_email.py: Test it.\n+\n+2021-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* update-copyright.py: Add AMD and Ulf Adams as external authors.\n+\n+2021-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* update-copyright.py: Use 8 spaces instead of tab to indent.\n+\n+2021-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Add --update-copyright option which adds:\n+\t\"Update copyright years.\" to ChangeLog files belonging\n+\tto a modified file.\n+\n+2021-01-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Skip Update copyright\n+\tyears commits.\n+\n+2020-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Add new error for quoted\n+\tfilenames.\n+\t* gcc-changelog/test_email.py: Test it.\n+\t* gcc-changelog/test_patches.txt: Test it.\n+\n+2020-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/test_email.py: New test.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\n+2020-12-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR bootstrap/98300\n+\t* gcc_update: Add c++tools/config.h.in.\n+\n+2020-12-15  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc_update: Add c++tools & libcody.\n+\n+2020-12-15  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc-changelog/git_commit.py (changelog_locations): Add\n+\tlibcody, c++tools.\n+\n+2020-12-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Filter more cases.\n+\n+2020-12-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Modernize and filter 2 more\n+\tpatterns.\n+\n+2020-12-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* check-params-in-docs.py: use flake8 and add some\n+\ttweaks to ignore aarch64 params.\n+\n+2020-12-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* gcc-git-customization.sh: Configure sendemail.to.\n+\n+2020-11-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Suggest close file for\n+\t'unchanged file mentioned in a ChangeLog' error.\n+\t* gcc-changelog/test_email.py: Test it.\n+\n+2020-11-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Allow sub-directory wildcard\n+\tchangelog entry. Fix a typo caused by apostrophe escaping.\n+\t* gcc-changelog/test_email.py: Test it.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\n+2020-11-30  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* gcc-changelog/git_commit.py (wildcard_prefixes): Add libstdc++\n+\ttestsuite directory.\n+\n+2020-11-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Allow wildcard pattern only.\n+\n+2020-11-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Use regex for cherry pick prefix.\n+\t* gcc-changelog/test_email.py: Test it.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\n 2020-11-25  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Use revert_regex instead"}, {"sha": "440549f5fd89dcbd67493d6319292898ec7f80b4", "filename": "contrib/check-params-in-docs.py", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fcheck-params-in-docs.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fcheck-params-in-docs.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck-params-in-docs.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -23,6 +23,7 @@\n #\n \n import argparse\n+import sys\n from itertools import dropwhile, takewhile\n \n \n@@ -42,7 +43,7 @@ def get_param_tuple(line):\n \n args = parser.parse_args()\n \n-ignored = set(['logical-op-non-short-circuit'])\n+ignored = {'logical-op-non-short-circuit'}\n params = {}\n \n for line in open(args.params_output).readlines():\n@@ -58,15 +59,21 @@ def get_param_tuple(line):\n \n token = '@item '\n texi = [x[len(token):] for x in texi if x.startswith(token)]\n+# skip digits\n+texi = [x for x in texi if not x[0].isdigit()]\n+# skip aarch64 params\n+texi = [x for x in texi if not x.startswith('aarch64')]\n sorted_texi = sorted(texi)\n \n texi_set = set(texi) - ignored\n params_set = set(params.keys()) - ignored\n \n+success = True\n extra = texi_set - params_set\n if len(extra):\n     print('Extra:')\n     print(extra)\n+    success = False\n \n missing = params_set - texi_set\n if len(missing):\n@@ -75,6 +82,9 @@ def get_param_tuple(line):\n         print('@item ' + m)\n         print(params[m])\n         print()\n+    success = False\n \n if texi != sorted_texi:\n     print('WARNING: not sorted alphabetically!')\n+\n+sys.exit(0 if success else 1)"}, {"sha": "c0bb71c07650e7132925c64f7ef4e094d462b1b9", "filename": "contrib/compare-lto", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fcompare-lto", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fcompare-lto", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcompare-lto?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -32,7 +32,7 @@ case $1 in\n esac\n \n if test $# != 2; then\n-  echo 'usage: compare-lto file1.o file2.o' >&2\n+  echo 'usage: compare-lto file1 file2' >&2\n   exit 1\n fi\n \n@@ -101,6 +101,25 @@ else\n     else\n       status=1\n     fi\n+\n+  # PE-COFF executables are timestamped so skip leading bytes for them.\n+  else\n+    case \"$1\" in\n+      *.exe)\n+        if cmp -i 256 \"$1\" \"$2\"; then\n+          status=0\n+        else\n+          status=1\n+        fi\n+        ;;\n+      *)\n+        if test -f \"$1.exe\" && cmp -i 256 \"$1.exe\" \"$2.exe\"; then\n+          status=0\n+        else\n+          status=1\n+        fi\n+        ;;\n+    esac\n   fi\n fi\n "}, {"sha": "72b5bbe322e4059b38bcabe032b46d9c1df7b0f2", "filename": "contrib/filter-clang-warnings.py", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Ffilter-clang-warnings.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Ffilter-clang-warnings.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffilter-clang-warnings.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -21,52 +21,61 @@\n #\n #\n \n-import sys\n import argparse\n \n+\n def skip_warning(filename, message):\n     ignores = {\n-            '': ['-Warray-bounds', '-Wmismatched-tags', 'gcc_gfc: -Wignored-attributes', '-Wchar-subscripts',\n-                'string literal (potentially insecure): -Wformat-security', '-Wdeprecated-register',\n-                '-Wvarargs', 'keyword is hidden by macro definition', \"but the argument has type 'char *': -Wformat-pedantic\",\n-                '-Wnested-anon-types', 'qualifier in explicit instantiation of', 'attribute argument not supported: asm_fprintf',\n-                'when in C++ mode, this behavior is deprecated', '-Wignored-attributes', '-Wgnu-zero-variadic-macro-arguments',\n-                '-Wformat-security'],\n+            '': ['-Warray-bounds', '-Wmismatched-tags',\n+                 'gcc_gfc: -Wignored-attributes', '-Wchar-subscripts',\n+                 'string literal (potentially insecure): -Wformat-security',\n+                 '-Wdeprecated-register',\n+                 '-Wvarargs', 'keyword is hidden by macro definition',\n+                 \"but the argument has type 'char *': -Wformat-pedantic\",\n+                 '-Wnested-anon-types',\n+                 'qualifier in explicit instantiation of',\n+                 'attribute argument not supported: asm_fprintf',\n+                 'when in C++ mode, this behavior is deprecated',\n+                 '-Wignored-attributes', '-Wgnu-zero-variadic-macro-arguments',\n+                 '-Wformat-security', '-Wundefined-internal',\n+                 '-Wunknown-warning-option'],\n             'insn-modes.c': ['-Wshift-count-overflow'],\n             'insn-emit.c': ['-Wtautological-compare'],\n             'insn-attrtab.c': ['-Wparentheses-equality'],\n             'gimple-match.c': ['-Wunused-', '-Wtautological-compare'],\n             'generic-match.c': ['-Wunused-', '-Wtautological-compare'],\n-            'i386.md': ['-Wparentheses-equality', '-Wtautological-compare'],\n+            'i386.md': ['-Wparentheses-equality', '-Wtautological-compare',\n+                        '-Wtautological-overlap-compare'],\n             'sse.md': ['-Wparentheses-equality', '-Wtautological-compare'],\n-            'genautomata.c': ['-Wstring-plus-int']\n-\n+            'genautomata.c': ['-Wstring-plus-int'],\n+            'gfortran.texi': [''],\n+            'libtool': ['']\n     }\n \n     for name, ignores in ignores.items():\n         for i in ignores:\n             if name in filename and i in message:\n                 return True\n-\n     return False\n \n+\n parser = argparse.ArgumentParser()\n-parser.add_argument('log', help = 'Log file with clang warnings')\n+parser.add_argument('log', help='Log file with clang warnings')\n args = parser.parse_args()\n \n-lines = [l.strip() for l in open(args.log)]\n+lines = [line.strip() for line in open(args.log)]\n total = 0\n messages = []\n-for l in lines:\n+for line in lines:\n     token = ': warning: '\n-    i = l.find(token)\n+    i = line.find(token)\n     if i != -1:\n-        location = l[:i]\n-        message = l[i + len(token):]\n+        location = line[:i]\n+        message = line[i + len(token):]\n         if not skip_warning(location, message):\n             total += 1\n-            messages.append(l)\n+            messages.append(line)\n \n-for l in sorted(messages):\n-    print(l)\n+for line in sorted(messages):\n+    print(line)\n print('\\nTotal warnings: %d' % total)"}, {"sha": "43fa7f40e4edf3880e72ceafc792fdf9f509de5b", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 73, "deletions": 9, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -16,10 +16,12 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.  */\n \n+import difflib\n import os\n import re\n \n changelog_locations = {\n+    'c++tools',\n     'config',\n     'contrib',\n     'contrib/header-tools',\n@@ -50,6 +52,7 @@\n     'libatomic',\n     'libbacktrace',\n     'libcc1',\n+    'libcody',\n     'libcpp',\n     'libcpp/po',\n     'libdecnumber',\n@@ -138,7 +141,8 @@\n \n wildcard_prefixes = {\n     'gcc/testsuite/',\n-    'libstdc++-v3/doc/html/'\n+    'libstdc++-v3/doc/html/',\n+    'libstdc++-v3/testsuite/'\n     }\n \n misc_files = {\n@@ -170,6 +174,24 @@\n DATE_FORMAT = '%Y-%m-%d'\n \n \n+def decode_path(path):\n+    # When core.quotepath is true (default value), utf8 chars are encoded like:\n+    # \"b/ko\\304\\215ka.txt\"\n+    #\n+    # The upstream bug is fixed:\n+    # https://github.com/gitpython-developers/GitPython/issues/1099\n+    #\n+    # but we still need a workaround for older versions of the library.\n+    # Please take a look at the explanation of the transformation:\n+    # https://stackoverflow.com/questions/990169/how-do-convert-unicode-escape-sequences-to-unicode-characters-in-a-python-string\n+\n+    if path.startswith('\"') and path.endswith('\"'):\n+        return (path.strip('\"').encode('utf8').decode('unicode-escape')\n+                .encode('latin-1').decode('utf8'))\n+    else:\n+        return path\n+\n+\n class Error:\n     def __init__(self, message, line=None):\n         self.message = message\n@@ -192,6 +214,7 @@ def __init__(self, folder, authors, prs):\n         self.lines = []\n         self.files = []\n         self.file_patterns = []\n+        self.opened_parentheses = 0\n \n     def parse_file_names(self):\n         # Whether the content currently processed is between a star prefix the\n@@ -201,8 +224,14 @@ def parse_file_names(self):\n         for line in self.lines:\n             # If this line matches the star prefix, start the location\n             # processing on the information that follows the star.\n+            # Note that we need to skip macro names that can be in form of:\n+            #\n+            # * config/i386/i386.md (*fix_trunc<mode>_i387_1,\n+            # *add<mode>3_ne, *add<mode>3_eq_0, *add<mode>3_ne_0,\n+            # *fist<mode>2_<rounding>_1, *<code><mode>3_1):\n+            #\n             m = star_prefix_regex.match(line)\n-            if m:\n+            if m and len(m.group('spaces')) == 1:\n                 in_location = True\n                 line = m.group('content')\n \n@@ -272,6 +301,10 @@ def __init__(self, info, strict=True, commit_to_info_hook=None):\n         self.revert_commit = None\n         self.commit_to_info_hook = commit_to_info_hook\n \n+        # Skip Update copyright years commits\n+        if self.info.lines and self.info.lines[0] == 'Update copyright years.':\n+            return\n+\n         # Identify first if the commit is a Revert commit\n         for line in self.info.lines:\n             m = revert_regex.match(line)\n@@ -281,8 +314,9 @@ def __init__(self, info, strict=True, commit_to_info_hook=None):\n         if self.revert_commit:\n             self.info = self.commit_to_info_hook(self.revert_commit)\n \n+        # Allow complete deletion of ChangeLog files in a commit\n         project_files = [f for f in self.info.modified_files\n-                         if self.is_changelog_filename(f[0])\n+                         if (self.is_changelog_filename(f[0], allow_suffix=True) and f[1] != 'D')\n                          or f[0] in misc_files]\n         ignored_files = [f for f in self.info.modified_files\n                          if self.in_ignored_location(f[0])]\n@@ -302,6 +336,7 @@ def __init__(self, info, strict=True, commit_to_info_hook=None):\n             self.parse_changelog()\n             self.parse_file_names()\n             self.check_for_empty_description()\n+            self.check_for_broken_parentheses()\n             self.deduce_changelog_locations()\n             self.check_file_patterns()\n             if not self.errors:\n@@ -317,8 +352,14 @@ def new_files(self):\n         return [x[0] for x in self.info.modified_files if x[1] == 'A']\n \n     @classmethod\n-    def is_changelog_filename(cls, path):\n-        return path.endswith('/ChangeLog') or path == 'ChangeLog'\n+    def is_changelog_filename(cls, path, allow_suffix=False):\n+        basename = os.path.basename(path)\n+        if basename == 'ChangeLog':\n+            return True\n+        elif allow_suffix and basename.startswith('ChangeLog'):\n+            return True\n+        else:\n+            return False\n \n     @classmethod\n     def find_changelog_location(cls, name):\n@@ -464,7 +505,8 @@ def parse_changelog(self):\n                 else:\n                     m = star_prefix_regex.match(line)\n                     if m:\n-                        if len(m.group('spaces')) != 1:\n+                        if (len(m.group('spaces')) != 1 and\n+                                last_entry.opened_parentheses == 0):\n                             msg = 'one space should follow asterisk'\n                             self.errors.append(Error(msg, line))\n                         else:\n@@ -476,13 +518,26 @@ def parse_changelog(self):\n                                         msg = f'empty group \"{needle}\" found'\n                                         self.errors.append(Error(msg, line))\n                             last_entry.lines.append(line)\n+                            self.process_parentheses(last_entry, line)\n                     else:\n                         if last_entry.is_empty:\n                             msg = 'first line should start with a tab, ' \\\n                                   'an asterisk and a space'\n                             self.errors.append(Error(msg, line))\n                         else:\n                             last_entry.lines.append(line)\n+                            self.process_parentheses(last_entry, line)\n+\n+    def process_parentheses(self, last_entry, line):\n+        for c in line:\n+            if c == '(':\n+                last_entry.opened_parentheses += 1\n+            elif c == ')':\n+                if last_entry.opened_parentheses == 0:\n+                    msg = 'bad wrapping of parenthesis'\n+                    self.errors.append(Error(msg, line))\n+                else:\n+                    last_entry.opened_parentheses -= 1\n \n     def parse_file_names(self):\n         for entry in self.changelog_entries:\n@@ -492,7 +547,7 @@ def check_file_patterns(self):\n         for entry in self.changelog_entries:\n             for pattern in entry.file_patterns:\n                 name = os.path.join(entry.folder, pattern)\n-                if name not in wildcard_prefixes:\n+                if not [name.startswith(pr) for pr in wildcard_prefixes]:\n                     msg = 'unsupported wildcard prefix'\n                     self.errors.append(Error(msg, name))\n \n@@ -506,6 +561,12 @@ def check_for_empty_description(self):\n                     msg = 'missing description of a change'\n                     self.errors.append(Error(msg, line))\n \n+    def check_for_broken_parentheses(self):\n+        for entry in self.changelog_entries:\n+            if entry.opened_parentheses != 0:\n+                msg = 'bad parentheses wrapping'\n+                self.errors.append(Error(msg, entry.lines[0]))\n+\n     def get_file_changelog_location(self, changelog_file):\n         for file in self.info.modified_files:\n             if file[0] == changelog_file:\n@@ -560,7 +621,7 @@ def check_mentioned_files(self):\n         mentioned_patterns = []\n         used_patterns = set()\n         for entry in self.changelog_entries:\n-            if not entry.files:\n+            if not entry.files and not entry.file_patterns:\n                 msg = 'no files mentioned for ChangeLog in directory'\n                 self.errors.append(Error(msg, entry.folder))\n             assert not entry.folder.endswith('/')\n@@ -575,6 +636,9 @@ def check_mentioned_files(self):\n         changed_files = set(cand)\n         for file in sorted(mentioned_files - changed_files):\n             msg = 'unchanged file mentioned in a ChangeLog'\n+            candidates = difflib.get_close_matches(file, changed_files, 1)\n+            if candidates:\n+                msg += f' (did you mean \"{candidates[0]}\"?)'\n             self.errors.append(Error(msg, file))\n         for file in sorted(changed_files - mentioned_files):\n             if not self.in_ignored_location(file):\n@@ -616,7 +680,7 @@ def check_mentioned_files(self):\n \n         for pattern in mentioned_patterns:\n             if pattern not in used_patterns:\n-                error = 'pattern doesn''t match any changed files'\n+                error = \"pattern doesn't match any changed files\"\n                 self.errors.append(Error(error, pattern))\n \n     def check_for_correct_changelog(self):"}, {"sha": "b0547b363aa30c61173998d993330cf38b10be39", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -22,7 +22,7 @@\n \n from dateutil.parser import parse\n \n-from git_commit import GitCommit, GitInfo\n+from git_commit import GitCommit, GitInfo, decode_path\n \n from unidiff import PatchSet, PatchedFile\n \n@@ -52,8 +52,8 @@ def __init__(self, filename, strict=False):\n         modified_files = []\n         for f in diff:\n             # Strip \"a/\" and \"b/\" prefixes\n-            source = f.source_file[2:]\n-            target = f.target_file[2:]\n+            source = decode_path(f.source_file)[2:]\n+            target = decode_path(f.target_file)[2:]\n \n             if f.is_added_file:\n                 t = 'A'\n@@ -66,7 +66,7 @@ def __init__(self, filename, strict=False):\n                 t = 'A'\n             else:\n                 t = 'M'\n-            modified_files.append((target, t))\n+            modified_files.append((target if t != 'D' else source, t))\n         git_info = GitInfo(None, date, author, body, modified_files)\n         super().__init__(git_info, strict=strict,\n                          commit_to_info_hook=lambda x: None)"}, {"sha": "a0e293d756d8b82d9229ae15b2f25066b8631d4e", "filename": "contrib/gcc-changelog/git_repository.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fgit_repository.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fgit_repository.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_repository.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -26,7 +26,7 @@\n     print('  Debian, Ubuntu: python3-git')\n     exit(1)\n \n-from git_commit import GitCommit, GitInfo\n+from git_commit import GitCommit, GitInfo, decode_path\n \n \n def parse_git_revisions(repo_path, revisions, strict=True):\n@@ -51,11 +51,11 @@ def commit_to_info(commit):\n                     # Consider that renamed files are two operations:\n                     # the deletion of the original name\n                     # and the addition of the new one.\n-                    modified_files.append((file.a_path, 'D'))\n+                    modified_files.append((decode_path(file.a_path), 'D'))\n                     t = 'A'\n                 else:\n                     t = 'M'\n-                modified_files.append((file.b_path, t))\n+                modified_files.append((decode_path(file.b_path), t))\n \n             date = datetime.utcfromtimestamp(c.committed_date)\n             author = '%s  <%s>' % (c.author.name, c.author.email)"}, {"sha": "1e2b22b008bf00ee35a542a47af1fcebf270904c", "filename": "contrib/gcc-changelog/git_update_version.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fgit_update_version.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fgit_update_version.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_update_version.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -26,6 +26,9 @@\n \n current_timestamp = datetime.datetime.now().strftime('%Y%m%d\\n')\n \n+# Skip the following commits, they cannot be correctly processed\n+IGNORED_COMMITS = ('c2be82058fb40f3ae891c68d185ff53e07f14f45')\n+\n \n def read_timestamp(path):\n     with open(path) as f:\n@@ -98,6 +101,7 @@ def update_current_branch():\n             head = head.parents[1]\n         commits = parse_git_revisions(args.git_path, '%s..%s'\n                                       % (commit.hexsha, head.hexsha))\n+        commits = [c for c in commits if c.info.hexsha not in IGNORED_COMMITS]\n         for git_commit in reversed(commits):\n             prepend_to_changelog_files(repo, args.git_path, git_commit,\n                                        not args.dry_mode)"}, {"sha": "efc313f6d526e31412bdf993347da88105ebadbb", "filename": "contrib/gcc-changelog/setup.cfg", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fsetup.cfg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Fsetup.cfg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fsetup.cfg?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,2 +1,5 @@\n+[flake8]\n+max-line-length = 120\n+\n [tool:pytest]\n addopts = -vv --flake8"}, {"sha": "9d052e06467e45aa3fa5fdda2816f9d6c94101bc", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -113,7 +113,9 @@ def test_wrong_mentioned_filename(self):\n         email = self.from_patch_glob('0096')\n         assert email.errors\n         err = email.errors[0]\n-        assert err.message == 'unchanged file mentioned in a ChangeLog'\n+        assert err.message == 'unchanged file mentioned in a ChangeLog (did ' \\\n+            'you mean \"gcc/testsuite/gcc.target/aarch64/' \\\n+            'advsimd-intrinsics/vdot-3-1.c\"?)'\n         assert err.line == 'gcc/testsuite/gcc.target/aarch64/' \\\n                            'advsimd-intrinsics/vdot-compile-3-1.c'\n \n@@ -333,7 +335,7 @@ def test_libstdcxx_html_regenerated(self):\n         assert not email.errors\n         email = self.from_patch_glob('0002-libstdc-Fake-test-change-1.patch')\n         assert len(email.errors) == 1\n-        msg = 'pattern doesn''t match any changed files'\n+        msg = \"pattern doesn't match any changed files\"\n         assert email.errors[0].message == msg\n         assert email.errors[0].line == 'libstdc++-v3/doc/html/'\n         email = self.from_patch_glob('0003-libstdc-Fake-test-change-2.patch')\n@@ -386,3 +388,35 @@ def test_emptry_entry_desc_2(self):\n         email = self.from_patch_glob('0001-lto-fix-LTO-debug')\n         assert not email.errors\n         assert len(email.changelog_entries) == 1\n+\n+    def test_wildcard_in_subdir(self):\n+        email = self.from_patch_glob('0001-Wildcard-subdirs.patch')\n+        assert len(email.changelog_entries) == 1\n+        err = email.errors[0]\n+        assert err.message == \"pattern doesn't match any changed files\"\n+        assert err.line == 'libstdc++-v3/testsuite/28_regex_not-existing/'\n+\n+    def test_unicode_chars_in_filename(self):\n+        email = self.from_patch_glob('0001-Add-horse.patch')\n+        assert not email.errors\n+\n+    def test_bad_unicode_chars_in_filename(self):\n+        email = self.from_patch_glob('0001-Add-horse2.patch')\n+        assert not email.errors\n+        assert email.changelog_entries[0].files == ['kon\u00ed\u010dek.txt']\n+\n+    def test_modification_of_old_changelog(self):\n+        email = self.from_patch_glob('0001-fix-old-ChangeLog.patch')\n+        assert not email.errors\n+\n+    def test_multiline_parentheses(self):\n+        email = self.from_patch_glob('0001-Add-macro.patch')\n+        assert not email.errors\n+\n+    def test_multiline_bad_parentheses(self):\n+        email = self.from_patch_glob('0002-Wrong-macro-changelog.patch')\n+        assert email.errors[0].message == 'bad parentheses wrapping'\n+\n+    def test_changelog_removal(self):\n+        email = self.from_patch_glob('0001-ChangeLog-removal.patch', strict=True)\n+        assert not email.errors"}, {"sha": "012573b48453ad3c40bf64a19d8489a1acef9d6f", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 191, "deletions": 0, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -3320,3 +3320,194 @@ index 7c9d492f6a4..37e73348cb7 100644\n -- \n 2.25.1\n \n+=== 0001-Wildcard-subdirs.patch ===\n+From b798205595426c53eb362065f6ed6c320dcc161d Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Mon, 30 Nov 2020 13:27:51 +0100\n+Subject: [PATCH] Fix it.\n+\n+libstdc++-v3/ChangeLog:\n+\n+\t* testsuite/28_regex/*: Fix them all.\n+\t* testsuite/28_regex_not-existing/*: Fix them all.\n+---\n+ contrib/gcc-changelog/git_commit.py          | 1 +\n+ libstdc++-v3/testsuite/28_regex/init-list.cc | 1 +\n+ 2 files changed, 2 insertions(+)\n+\n+diff --git a/libstdc++-v3/testsuite/28_regex/init-list.cc b/libstdc++-v3/testsuite/28_regex/init-list.cc\n+index f51453f019a..d10ecf483f4 100644\n+--- a/libstdc++-v3/testsuite/28_regex/init-list.cc\n++++ b/libstdc++-v3/testsuite/28_regex/init-list.cc\n+@@ -1 +1,2 @@\n+ \n++\n+--\n+2.29.2\n+\n+=== 0001-Add-horse.patch ===\n+From 2884248d07e4e2c922e137365253e2e521c425b0 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Mon, 21 Dec 2020 10:14:46 +0100\n+Subject: [PATCH] Add horse.\n+MIME-Version: 1.0\n+Content-Type: text/plain; charset=UTF-8\n+Content-Transfer-Encoding: 8bit\n+\n+ChangeLog:\n+\n+\t* kon\u00ed\u010dek.txt: New file.\n+---\n+ kon\u00ed\u010dek.txt | 1 +\n+ 1 file changed, 1 insertion(+)\n+ create mode 100644 kon\u00ed\u010dek.txt\n+\n+diff --git a/kon\u00ed\u010dek.txt b/kon\u00ed\u010dek.txt\n+new file mode 100644\n+index 00000000000..56c67f58752\n+--- /dev/null\n++++ b/kon\u00ed\u010dek.txt\n+@@ -0,0 +1 @@\n++I'm a horse.\n+-- \n+2.29.2\n+=== 0001-Add-horse2.patch ===\n+From 2884248d07e4e2c922e137365253e2e521c425b0 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Mon, 21 Dec 2020 10:14:46 +0100\n+Subject: [PATCH] Add horse.\n+MIME-Version: 1.0\n+Content-Type: text/plain; charset=UTF-8\n+Content-Transfer-Encoding: 8bit\n+\n+ChangeLog:\n+\n+\t* kon\u00ed\u010dek.txt: New file.\n+---\n+ \"kon\\303\\255\\304\\215ek.txt\" | 1 +\n+ 1 file changed, 1 insertion(+)\n+ create mode 100644 \"kon\\303\\255\\304\\215ek.txt\"\n+\n+diff --git \"a/kon\\303\\255\\304\\215ek.txt\" \"b/kon\\303\\255\\304\\215ek.txt\"\n+new file mode 100644\n+index 00000000000..56c67f58752\n+--- /dev/null\n++++ \"b/kon\\303\\255\\304\\215ek.txt\"\n+@@ -0,0 +1 @@\n++I'm a horse.\n+-- \n+2.29.2\n+\n+=== 0001-fix-old-ChangeLog.patch ===\n+From fd498465b2801203089616be9a0e3c1f4fc065a0 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Wed, 13 Jan 2021 11:45:37 +0100\n+Subject: [PATCH] Fix a changelog.\n+\n+---\n+ gcc/ChangeLog-2020 | 1 +\n+ 1 file changed, 1 insertion(+)\n+\n+diff --git a/gcc/ChangeLog-2020 b/gcc/ChangeLog-2020\n+index 6553720acad..2c170ef014a 100644\n+--- a/gcc/ChangeLog-2020\n++++ b/gcc/ChangeLog-2020\n+@@ -1 +1,2 @@\n+ \n++\n+ \n+-- \n+2.29.2\n+=== 0001-Add-macro.patch ===\n+From 9b7eedc932fe594547fb060b36dfd9e4178c4f9b Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Wed, 13 Jan 2021 16:26:45 +0100\n+Subject: [PATCH 1/2] Add macro.\n+\n+gcc/ChangeLog:\n+\n+\t* config/i386/i386.md (*fix_trunc<mode>_i387_1, *add<mode>3_eq,\n+\t*add<mode>3_ne, *add<mode>3_eq_0, *add<mode>3_ne_0, *add<mode>3_eq,\n+\t*fist<mode>2_<rounding>_1, *<code><mode>3_1, *<code>di3_doubleword):\n+\tUse ix86_pre_reload_split instead of can_create_pseudo_p in condition.\n+\t* config/i386/sse.md\n+\t(*fix_trunc<mode>_i387_1, *add<mode>3_eq,\n+\t*add<mode>3_ne, *add<mode>3_eq_0, *add<mode>3_ne_0, *add<mode>3_eq,\n+\t*fist<mode>2_<rounding>_1): This should also work.\n+---\n+ gcc/config/i386/i386.md | 1 +\n+ gcc/config/i386/sse.md  | 1 +\n+ 2 files changed, 2 insertions(+)\n+\n+diff --git a/gcc/config/i386/i386.md b/gcc/config/i386/i386.md\n+index b60784a2908..ac63591b33f 100644\n+--- a/gcc/config/i386/i386.md\n++++ b/gcc/config/i386/i386.md\n+@@ -1 +1,2 @@\n+ \n++\n+\n+diff --git a/gcc/config/i386/sse.md b/gcc/config/i386/sse.md\n+index 7f03fc491c3..0e17997db26 100644\n+--- a/gcc/config/i386/sse.md\n++++ b/gcc/config/i386/sse.md\n+@@ -1 +1,2 @@\n+ \n++\n+\n+-- \n+2.29.2\n+\n+=== 0002-Wrong-macro-changelog.patch ===\n+From 3542802111d4c6752ac7233ef96655b7fb78aae4 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Wed, 13 Jan 2021 16:54:58 +0100\n+Subject: [PATCH 2/2] Wrong macro changelog\n+\n+gcc/ChangeLog:\n+\n+\t* config/i386/i386.md (*fix_trunc<mode>_i387_1,\n+\t(foo): Change it.\n+---\n+ gcc/config/i386/i386.md | 1 +\n+ 1 file changed, 1 insertion(+)\n+\n+diff --git a/gcc/config/i386/i386.md b/gcc/config/i386/i386.md\n+index ac63591b33f..ff4d61764e7 100644\n+--- a/gcc/config/i386/i386.md\n++++ b/gcc/config/i386/i386.md\n+@@ -1 +1,2 @@\n+ \n++\n+-- \n+2.29.2\n+\n+=== 0001-ChangeLog-removal.patch ===\n+From b39fadf9df1a9510afcab0a391182da7dc68de24 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Fri, 12 Mar 2021 09:10:55 +0100\n+Subject: [PATCH] Test ChangeLog removal.\n+\n+gcc/ChangeLog:\n+\n+\t* ipa-icf.c (make_pass_ipa_icf): Add line.\n+---\n+diff --git a/gcc/analyzer/ChangeLog b/gcc/analyzer/ChangeLog\n+deleted file mode 100644\n+index 94e87f6bcde..00000000000\n+--- a/gcc/analyzer/ChangeLog\n++++ /dev/null\n+@@ -1,1 +0,0 @@\n+- foo\n+diff --git a/gcc/ipa-icf.c b/gcc/ipa-icf.c\n+index 5dd33a75c3a..c4ce432cb98 100644\n+--- a/gcc/ipa-icf.c\n++++ b/gcc/ipa-icf.c\n+@@ -3655,3 +3655,4 @@ make_pass_ipa_icf (gcc::context *ctxt)\n+ {\n+   return new ipa_icf::pass_ipa_icf (ctxt);\n+ }\n++\n+-- \n+2.30.1\n+"}, {"sha": "e7e666237868b2a59703c743814f09a80211c816", "filename": "contrib/gcc-git-customization.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-git-customization.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc-git-customization.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-git-customization.sh?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -35,6 +35,10 @@ git config alias.gcc-commit-mklog '!f() { GCC_FORCE_MKLOG=1 git commit \"$@\"; };\n # *.md    diff=md\n git config diff.md.xfuncname '^\\(define.*$'\n \n+# Tell git send-email where patches go.\n+# ??? Maybe also set sendemail.tocmd to guess from MAINTAINERS?\n+git config sendemail.to 'gcc-patches@gcc.gnu.org'\n+\n set_user=$(git config --get \"user.name\")\n set_email=$(git config --get \"user.email\")\n "}, {"sha": "45a27b76cc36de3ccb2c1b1644eec629e283c44a", "filename": "contrib/gcc_update", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -89,6 +89,7 @@ gcc/config/c6x/c6x-mult.md: gcc/config/c6x/c6x-mult.md.in gcc/config/c6x/genmult\n gcc/config/m68k/m68k-tables.opt: gcc/config/m68k/m68k-devices.def gcc/config/m68k/m68k-isas.def gcc/config/m68k/m68k-microarchs.def gcc/config/m68k/genopt.sh\n gcc/config/mips/mips-tables.opt: gcc/config/mips/mips-cpus.def gcc/config/mips/genopt.sh\n gcc/config/rs6000/rs6000-tables.opt: gcc/config/rs6000/rs6000-cpus.def gcc/config/rs6000/genopt.sh\n+gcc/config/rs6000/fusion.md: gcc/config/rs6000/genfusion.pl\n gcc/config/tilegx/mul-tables.c: gcc/config/tilepro/gen-mul-tables.cc\n gcc/config/tilepro/mul-tables.c: gcc/config/tilepro/gen-mul-tables.cc\n # And then, language-specific files\n@@ -102,6 +103,9 @@ gcc/testsuite/gcc.dg/cpp/direct2s.c: gcc/testsuite/gcc.dg/cpp/direct2.c\n # lto-plugin\n lto-plugin/configure: lto-plugin/configure.ac lto-plugin/aclocal.m4\n lto-plugin/Makefile.in: lto-plugin/Makefile.am lto-plugin/aclocal.m4\n+# tools\n+c++tools/configure: c++tools/configure.ac\n+c++tools/config.h.in: c++tools/configure.ac\n # And libraries, at last\n libbanshee/configure: libbanshee/configure.ac\n libmudflap/configure: libmudflap/configure.ac\n@@ -126,6 +130,7 @@ libquadmath/configure: libquadmath/configure.ac libquadmath/aclocal.m4\n libquadmath/aclocal.m4: libquadmath/configure.ac libquadmath/acinclude.m4\n libquadmath/Makefile.in: libquadmath/Makefile.am libquadmath/configure.ac libgfortran/aclocal.m4\n libgfortran/configure: libgfortran/configure.ac libgfortran/aclocal.m4\n+libcody/configure: libcody/configure.ac libcody/config.m4\n libcpp/aclocal.m4: libcpp/configure.ac\n libcpp/Makefile.in: libcpp/configure.ac libcpp/aclocal.m4\n libcpp/configure: libcpp/configure.ac libcpp/aclocal.m4"}, {"sha": "1604f0516d0834e73fcf9c53f5d6e635869fefdc", "filename": "contrib/mklog.py", "status": "modified", "additions": 74, "deletions": 22, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -27,8 +27,10 @@\n # Author: Martin Liska <mliska@suse.cz>\n \n import argparse\n+import datetime\n import os\n import re\n+import subprocess\n import sys\n from itertools import takewhile\n \n@@ -47,10 +49,14 @@\n super_macro_regex = re.compile(r'^DEF[A-Z0-9_]+\\s*\\(([a-zA-Z0-9_]+)')\n fn_regex = re.compile(r'([a-zA-Z_][^()\\s]*)\\s*\\([^*]')\n template_and_param_regex = re.compile(r'<[^<>]*>')\n+md_def_regex = re.compile(r'\\(define.*\\s+\"(.*)\"')\n bugzilla_url = 'https://gcc.gnu.org/bugzilla/rest.cgi/bug?id=%s&' \\\n                'include_fields=summary'\n \n-function_extensions = {'.c', '.cpp', '.C', '.cc', '.h', '.inc', '.def'}\n+function_extensions = {'.c', '.cpp', '.C', '.cc', '.h', '.inc', '.def', '.md'}\n+\n+# NB: Makefile.in isn't listed as it's not always generated.\n+generated_files = {'aclocal.m4', 'config.h.in', 'configure'}\n \n help_message = \"\"\"\\\n Generate ChangeLog template for PATCH.\n@@ -59,13 +65,13 @@\n \"\"\"\n \n script_folder = os.path.realpath(__file__)\n-gcc_root = os.path.dirname(os.path.dirname(script_folder))\n+root = os.path.dirname(os.path.dirname(script_folder))\n \n \n def find_changelog(path):\n     folder = os.path.split(path)[0]\n     while True:\n-        if os.path.exists(os.path.join(gcc_root, folder, 'ChangeLog')):\n+        if os.path.exists(os.path.join(root, folder, 'ChangeLog')):\n             return folder\n         folder = os.path.dirname(folder)\n         if folder == '':\n@@ -130,6 +136,9 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n     diff = PatchSet(data)\n \n     for file in diff:\n+        # skip files that can't be parsed\n+        if file.path == '/dev/null':\n+            continue\n         changelog = find_changelog(file.path)\n         if changelog not in changelogs:\n             changelogs[changelog] = []\n@@ -186,6 +195,8 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n                 if new_path.startswith(changelog):\n                     new_path = new_path[len(changelog):].lstrip('/')\n                 out += '\\t* %s: ...here.\\n' % (new_path)\n+            elif os.path.basename(file.path) in generated_files:\n+                out += '\\t* %s: Regenerate.\\n' % (relative_path)\n             else:\n                 if not no_functions:\n                     for hunk in file:\n@@ -198,6 +209,15 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n                             for line in hunk:\n                                 m = identifier_regex.match(line.value)\n                                 if line.is_added or line.is_removed:\n+                                    # special-case definition in .md files\n+                                    m2 = md_def_regex.match(line.value)\n+                                    if extension == '.md' and m2:\n+                                        fn = m2.group(1)\n+                                        if fn not in functions:\n+                                            functions.append(fn)\n+                                            last_fn = None\n+                                            success = True\n+\n                                     if not line.value.strip():\n                                         continue\n                                     modified_visited = True\n@@ -227,6 +247,28 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n     return out\n \n \n+def update_copyright(data):\n+    current_timestamp = datetime.datetime.now().strftime('%Y-%m-%d')\n+    username = subprocess.check_output('git config user.name', shell=True,\n+                                       encoding='utf8').strip()\n+    email = subprocess.check_output('git config user.email', shell=True,\n+                                    encoding='utf8').strip()\n+\n+    changelogs = set()\n+    diff = PatchSet(data)\n+\n+    for file in diff:\n+        changelog = os.path.join(find_changelog(file.path), 'ChangeLog')\n+        if changelog not in changelogs:\n+            changelogs.add(changelog)\n+            with open(changelog) as f:\n+                content = f.read()\n+            with open(changelog, 'w+') as f:\n+                f.write(f'{current_timestamp}  {username}  <{email}>\\n\\n')\n+                f.write('\\tUpdate copyright years.\\n\\n')\n+                f.write(content)\n+\n+\n if __name__ == '__main__':\n     parser = argparse.ArgumentParser(description=help_message)\n     parser.add_argument('input', nargs='?',\n@@ -235,31 +277,41 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n                         help='Do not generate function names in ChangeLogs')\n     parser.add_argument('-p', '--fill-up-bug-titles', action='store_true',\n                         help='Download title of mentioned PRs')\n+    parser.add_argument('-d', '--directory',\n+                        help='Root directory where to search for ChangeLog '\n+                        'files')\n     parser.add_argument('-c', '--changelog',\n                         help='Append the ChangeLog to a git commit message '\n                              'file')\n+    parser.add_argument('--update-copyright', action='store_true',\n+                        help='Update copyright in ChangeLog files')\n     args = parser.parse_args()\n     if args.input == '-':\n         args.input = None\n+    if args.directory:\n+        root = args.directory\n \n     data = open(args.input) if args.input else sys.stdin\n-    output = generate_changelog(data, args.no_functions,\n-                                args.fill_up_bug_titles)\n-    if args.changelog:\n-        lines = open(args.changelog).read().split('\\n')\n-        start = list(takewhile(lambda l: not l.startswith('#'), lines))\n-        end = lines[len(start):]\n-        with open(args.changelog, 'w') as f:\n-            if start:\n-                # appent empty line\n-                if start[-1] != '':\n-                    start.append('')\n-            else:\n-                # append 2 empty lines\n-                start = 2 * ['']\n-            f.write('\\n'.join(start))\n-            f.write('\\n')\n-            f.write(output)\n-            f.write('\\n'.join(end))\n+    if args.update_copyright:\n+        update_copyright(data)\n     else:\n-        print(output, end='')\n+        output = generate_changelog(data, args.no_functions,\n+                                    args.fill_up_bug_titles)\n+        if args.changelog:\n+            lines = open(args.changelog).read().split('\\n')\n+            start = list(takewhile(lambda l: not l.startswith('#'), lines))\n+            end = lines[len(start):]\n+            with open(args.changelog, 'w') as f:\n+                if start:\n+                    # appent empty line\n+                    if start[-1] != '':\n+                        start.append('')\n+                else:\n+                    # append 2 empty lines\n+                    start = 2 * ['']\n+                f.write('\\n'.join(start))\n+                f.write('\\n')\n+                f.write(output)\n+                f.write('\\n'.join(end))\n+        else:\n+            print(output, end='')"}, {"sha": "7e95ec1a2ab539a32fc701866d81273eff97f5c0", "filename": "contrib/test_mklog.py", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Ftest_mklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Ftest_mklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftest_mklog.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -399,6 +399,44 @@\n \n '''\n \n+PATCH9 = '''\\\n+diff --git a/gcc/config/i386/sse.md b/gcc/config/i386/sse.md\n+index 2a260c1cfbd..7f03fc491c3 100644\n+--- a/gcc/config/i386/sse.md\n++++ b/gcc/config/i386/sse.md\n+@@ -17611,6 +17611,23 @@ (define_insn \"avx2_<code>v16qiv16hi2<mask_name>\"\n+    (set_attr \"prefix\" \"maybe_evex\")\n+    (set_attr \"mode\" \"OI\")])\n+ \n++(define_insn_and_split \"*avx2_zero_extendv16qiv16hi2_1\"\n++  [(set (match_operand:V32QI 0 \"register_operand\" \"=v\")\n++\t(vec_select:V32QI\n++\t  (vec_concat:V64QI\n++\t    (match_operand:V32QI 1 \"nonimmediate_operand\" \"vm\")\n++\t    (match_operand:V32QI 2 \"const0_operand\" \"C\"))\n++\t  (match_parallel 3 \"pmovzx_parallel\"\n++\t    [(match_operand 4 \"const_int_operand\" \"n\")])))]\n++  \"TARGET_AVX2\"\n++  \"#\"\n++  \"&& reload_completed\"\n++  [(set (match_dup 0) (zero_extend:V16HI (match_dup 1)))]\n++{\n++  operands[0] = lowpart_subreg (V16HImode, operands[0], V32QImode);\n++  operands[1] = lowpart_subreg (V16QImode, operands[1], V32QImode);\n++})\n++\n+ (define_expand \"<insn>v16qiv16hi2\"\n+   [(set (match_operand:V16HI 0 \"register_operand\")\n+ \t(any_extend:V16HI\n+'''\n+\n+EXPECTED9 = '''\\\n+gcc/ChangeLog:\n+\n+\t* config/i386/sse.md (*avx2_zero_extendv16qiv16hi2_1):\n+\n+'''\n+\n class TestMklog(unittest.TestCase):\n     def test_macro_definition(self):\n         changelog = generate_changelog(PATCH1)\n@@ -437,3 +475,7 @@ def test_dr_detection_in_test_case(self):\n     def test_renaming(self):\n         changelog = generate_changelog(PATCH8)\n         assert changelog == EXPECTED8\n+\n+    def test_define_macro_parsing(self):\n+        changelog = generate_changelog(PATCH9)\n+        assert changelog == EXPECTED9"}, {"sha": "5fcf0a1c940066c060edad34ca7a7695416e6a4b", "filename": "contrib/texi2pod.pl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Ftexi2pod.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Ftexi2pod.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftexi2pod.pl?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -210,6 +210,7 @@\n     s/\\@TeX\\{\\}/TeX/g;\n     s/\\@pounds\\{\\}/\\#/g;\n     s/\\@minus(?:\\{\\})?/-/g;\n+    s/\\@tie\\{\\}/ /g;\n     s/\\\\,/,/g;\n \n     # Now the ones that have to be replaced by special escapes"}, {"sha": "5603b8eac1675324d74f59ba537109f443be9ae1", "filename": "contrib/update-copyright.py", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fupdate-copyright.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/contrib%2Fupdate-copyright.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fupdate-copyright.py?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/python\n+#!/usr/bin/env python3\n #\n # Copyright (C) 2013-2020 Free Software Foundation, Inc.\n #\n@@ -64,7 +64,10 @@ class GenericFilter:\n     def __init__ (self):\n         self.skip_files = set()\n         self.skip_dirs = set()\n-        self.skip_extensions = set()\n+        self.skip_extensions = set([\n+                '.png',\n+                '.pyc',\n+                ])\n         self.fossilised_files = set()\n         self.own_files = set()\n \n@@ -307,7 +310,7 @@ def update_copyright (self, dir, filename, filter, file, line, match):\n             # If it looks like the copyright is incomplete, add the next line.\n             while not self.is_complete (match):\n                 try:\n-                    next_line = file.next()\n+                    next_line = file.readline()\n                 except StopIteration:\n                     break\n \n@@ -381,6 +384,15 @@ def update_copyright (self, dir, filename, filter, file, line, match):\n \n         return (line != orig_line, line, next_line)\n \n+    def guess_encoding (self, pathname):\n+        for encoding in ('utf8', 'iso8859'):\n+            try:\n+                open(pathname, 'r', encoding=encoding).read()\n+                return encoding\n+            except UnicodeDecodeError:\n+                pass\n+        return None\n+\n     def process_file (self, dir, filename, filter):\n         pathname = os.path.join (dir, filename)\n         if filename.endswith ('.tmp'):\n@@ -395,7 +407,8 @@ def process_file (self, dir, filename, filter):\n         changed = False\n         line_filter = filter.get_line_filter (dir, filename)\n         mode = None\n-        with open (pathname, 'r') as file:\n+        encoding = self.guess_encoding(pathname)\n+        with open (pathname, 'r', encoding=encoding) as file:\n             prev = None\n             mode = os.fstat (file.fileno()).st_mode\n             for line in file:\n@@ -421,7 +434,7 @@ def process_file (self, dir, filename, filter):\n         # If something changed, write the new file out.\n         if changed and self.errors.ok():\n             tmp_pathname = pathname + '.tmp'\n-            with open (tmp_pathname, 'w') as file:\n+            with open (tmp_pathname, 'w', encoding=encoding) as file:\n                 for line in lines:\n                     file.write (line)\n                 os.fchmod (file.fileno(), mode)\n@@ -432,7 +445,7 @@ def process_file (self, dir, filename, filter):\n     def process_tree (self, tree, filter):\n         for (dir, subdirs, filenames) in os.walk (tree):\n             # Don't recurse through directories that should be skipped.\n-            for i in xrange (len (subdirs) - 1, -1, -1):\n+            for i in range (len (subdirs) - 1, -1, -1):\n                 if filter.skip_dir (dir, subdirs[i]):\n                     del subdirs[i]\n \n@@ -594,7 +607,7 @@ def skip_file (self, dir, filename):\n         if filename == 'README' and os.path.basename (dir) == 'params':\n             return True\n         if filename == 'pdt_5.f03' and os.path.basename (dir) == 'gfortran.dg':\n-\t    return True\n+            return True\n         return GenericFilter.skip_file (self, dir, filename)\n \n class LibCppFilter (GenericFilter):\n@@ -683,6 +696,7 @@ def __init__ (self, errors):\n \n         self.add_external_author ('ARM')\n         self.add_external_author ('AdaCore')\n+        self.add_external_author ('Advanced Micro Devices Inc.')\n         self.add_external_author ('Ami Tavory and Vladimir Dreizin, IBM-HRL.')\n         self.add_external_author ('Cavium Networks.')\n         self.add_external_author ('Faraday Technology Corp.')\n@@ -710,6 +724,7 @@ def __init__ (self, errors):\n         self.add_external_author ('The Go Authors. All rights reserved.')\n         self.add_external_author ('The Go Authors.')\n         self.add_external_author ('The Regents of the University of California.')\n+        self.add_external_author ('Ulf Adams')\n         self.add_external_author ('Unicode, Inc.')\n         self.add_external_author ('University of Toronto.')\n         self.add_external_author ('Yoshinori Sato')"}, {"sha": "cc1fbe70a7665394dc55a21c06485b35b72fd6f0", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,3 +1,10 @@\n+2020-12-14  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* fixincl.x: Rerun genfixes.\n+\t* inclhack.def(aix_physadr_t): Change test_text to something\n+\tthat needs to be replaced.\n+\t* tests/base/sys/types.h(aix_physadr_t): Add expectation.\n+\n 2020-11-18  Nathan Sidwell  <nathan@acm.org>\n \n \t* inclhack.def (aix_physaddr_t): New."}, {"sha": "cc17edfba0bc81b2adecd0be0cb8f283c741ab3d", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  October 21, 2020 at 10:43:22 AM by AutoGen 5.18.16\n+ * It has been AutoGen-ed  December  9, 2020 at 11:16:08 AM by AutoGen 5.18.16\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Oct 21 10:43:22 EDT 2020\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Dec  9 11:16:08 EST 2020\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *"}, {"sha": "3a4cfe06542e7d0e07f984bd7fcc2213275ecc14", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -731,7 +731,7 @@ fix = {\n     select    = \"typedef[ \\t]*struct[ \\t]*([{][^}]*[}][ \\t]*\\\\*[ \\t]*physadr_t;)\";\n     c_fix     = format;\n     c_fix_arg = \"typedef struct __physadr_s %1\";\n-    test_text = \"typedef struct __physadr_s {\";\n+    test_text = \"typedef\tstruct { random stuff } *\tphysadr_t;\";\n };\n \n /*"}, {"sha": "7340e76b1757a5f47c08b355ddb07817c3ea2859", "filename": "fixincludes/tests/base/sys/types.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/fixincludes%2Ftests%2Fbase%2Fsys%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/fixincludes%2Ftests%2Fbase%2Fsys%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Ftypes.h?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -9,6 +9,11 @@\n \n \n \n+#if defined( AIX_PHYSADR_T_CHECK )\n+typedef struct __physadr_s { random stuff } *\tphysadr_t;\n+#endif  /* AIX_PHYSADR_T_CHECK */\n+\n+\n #if defined( GNU_TYPES_CHECK )\n #if !defined(_GCC_PTRDIFF_T)\n #define _GCC_PTRDIFF_T"}, {"sha": "a21b85c0597872dddfa0283b2960208d78e704e1", "filename": "gcc/ABOUT-GCC-NLS", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FABOUT-GCC-NLS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FABOUT-GCC-NLS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FABOUT-GCC-NLS?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -49,7 +49,7 @@ configure GCC with --enable-maintainer-mode to get the master catalog\n rebuilt.\n \n \f\n-Copyright (C) 1998-2020 Free Software Foundation, Inc.\n+Copyright (C) 1998-2021 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "071973805f533cf9fde064908d0c37d4bcce20c0", "filename": "gcc/BASE-VER", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FBASE-VER", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FBASE-VER", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FBASE-VER?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1 +1 @@\n-11.0.0\n+11.0.1"}, {"sha": "d9b2308470472e4292bd69e05ebf5dc9783e2d97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4286, "deletions": 35962, "changes": 40248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "6553720acad21d4388bb22afbda9a8d488307e3d", "filename": "gcc/ChangeLog-2020", "status": "added", "additions": 39860, "deletions": 0, "changes": 39860, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FChangeLog-2020", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FChangeLog-2020", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2020?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "60c2325289ba3f77e80f35709f525a5239d4f79a", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1 +1 @@\n-20201127\n+20210325"}, {"sha": "89800d03901a8d2fdfa2086f083d6c09a5a0c6c4", "filename": "gcc/LANGUAGES", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FLANGUAGES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FLANGUAGES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FLANGUAGES?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -57,7 +57,7 @@ Feb 1, 1998:\n     DEFTREECODE (CLASS_METHOD_DECL, \"class_method_decl\", 'd', 0)\n \n \f\n-Copyright (C) 1998-2020 Free Software Foundation, Inc.\n+Copyright (C) 1998-2021 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "ce57d96d0c3084564b853f975f2e8ca0e837982f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 39, "deletions": 7, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,7 +1,7 @@\n # Makefile for GNU Compiler Collection\n # Run 'configure' to generate Makefile from Makefile.in\n \n-# Copyright (C) 1987-2020 Free Software Foundation, Inc.\n+# Copyright (C) 1987-2021 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -207,6 +207,7 @@ VALGRIND_DRIVER_DEFINES = @valgrind_path_defines@\n # This is how we control whether or not the additional warnings are applied.\n .-warn = $(STRICT_WARN)\n build-warn = $(STRICT_WARN)\n+rtl-ssa-warn = $(STRICT_WARN)\n GCC_WARN_CFLAGS = $(LOOSE_WARN) $(C_LOOSE_WARN) $($(@D)-warn) $(if $(filter-out $(STRICT_WARN),$($(@D)-warn)),,$(C_STRICT_WARN)) $(NOCOMMON_FLAG) $($@-warn)\n GCC_WARN_CXXFLAGS = $(LOOSE_WARN) $($(@D)-warn) $(NOCOMMON_FLAG) $($@-warn)\n \n@@ -412,6 +413,10 @@ enable_as_accelerator = @enable_as_accelerator@\n CPPLIB = ../libcpp/libcpp.a\n CPPINC = -I$(srcdir)/../libcpp/include\n \n+CODYLIB = ../libcody/libcody.a\n+CODYINC = -I$(srcdir)/../libcody\n+NETLIBS = @NETLIBS@\n+\n # Where to find decNumber\n enable_decimal_float = @enable_decimal_float@\n DECNUM = $(srcdir)/../libdecnumber\n@@ -445,6 +450,9 @@ USER_H = $(srcdir)/ginclude/float.h \\\n USER_H_INC_NEXT_PRE = @user_headers_inc_next_pre@\n USER_H_INC_NEXT_POST = @user_headers_inc_next_post@\n \n+# Enable target overriding of this fragment, as in config/t-vxworks.\n+T_GLIMITS_H = $(srcdir)/glimits.h\n+\n # The GCC to use for compiling crt*.o.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES).\n@@ -677,6 +685,9 @@ build_tooldir = $(exec_prefix)/$(target_noncanonical)\n # Directory in which the compiler finds target-independent g++ includes.\n gcc_gxx_include_dir = @gcc_gxx_include_dir@\n gcc_gxx_include_dir_add_sysroot = @gcc_gxx_include_dir_add_sysroot@\n+# Directory in which the compiler finds libc++ includes.\n+gcc_gxx_libcxx_include_dir = @gcc_gxx_libcxx_include_dir@\n+gcc_gxx_libcxx_include_dir_add_sysroot = @gcc_gxx_libcxx_include_dir_add_sysroot@\n # Directory to search for site-specific includes.\n local_includedir = $(local_prefix)/include\n includedir = $(prefix)/include\n@@ -986,6 +997,7 @@ SYSTEM_H = system.h hwint.h $(srcdir)/../include/libiberty.h \\\n PREDICT_H = predict.h predict.def\n CPPLIB_H = $(srcdir)/../libcpp/include/line-map.h \\\n \t$(srcdir)/../libcpp/include/cpplib.h\n+CODYLIB_H = $(srcdir)/../libcody/cody.hh\n INPUT_H = $(srcdir)/../libcpp/include/line-map.h input.h\n OPTS_H = $(INPUT_H) $(VEC_H) opts.h $(OBSTACK_H)\n SYMTAB_H = $(srcdir)/../libcpp/include/symtab.h $(OBSTACK_H)\n@@ -1016,6 +1028,13 @@ PLUGIN_H = plugin.h $(GCC_PLUGIN_H)\n PLUGIN_VERSION_H = plugin-version.h configargs.h\n CONTEXT_H = context.h\n GENSUPPORT_H = gensupport.h read-md.h optabs.def\n+RTL_SSA_H = $(PRETTY_PRINT_H) insn-config.h splay-tree-utils.h \\\n+\t    $(RECOG_H) $(REGS_H) function-abi.h obstack-utils.h \\\n+\t    mux-utils.h rtlanal.h memmodel.h $(EMIT_RTL_H) \\\n+\t    rtl-ssa/accesses.h rtl-ssa/insns.h rtl-ssa/blocks.h \\\n+\t    rtl-ssa/changes.h rtl-ssa/functions.h rtl-ssa/is-a.inl \\\n+\t    rtl-ssa/access-utils.h rtl-ssa/insn-utils.h rtl-ssa/movement.h \\\n+\t    rtl-ssa/change-utils.h rtl-ssa/member-fns.inl\n \n #\f\n # Now figure out from those variables how to compile and link.\n@@ -1106,7 +1125,7 @@ BUILD_ERRORS = build/errors.o\n # libintl.h will be found in ../intl if we are using the included libintl.\n INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n \t   -I$(srcdir)/../include @INCINTL@ \\\n-\t   $(CPPINC) $(GMPINC) $(DECNUMINC) $(BACKTRACEINC) \\\n+\t   $(CPPINC) $(CODYINC) $(GMPINC) $(DECNUMINC) $(BACKTRACEINC) \\\n \t   $(ISLINC)\n \n COMPILE.base = $(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) -o $@\n@@ -1184,6 +1203,7 @@ FLAGS_TO_PASS = \\\n \t\"prefix=$(prefix)\" \\\n \t\"local_prefix=$(local_prefix)\" \\\n \t\"gxx_include_dir=$(gcc_gxx_include_dir)\" \\\n+\t\"gxx_libcxx_include_dir=$(gcc_gxx_libcxx_include_dir)\" \\\n \t\"build_tooldir=$(build_tooldir)\" \\\n \t\"gcc_tooldir=$(gcc_tooldir)\" \\\n \t\"bindir=$(bindir)\" \\\n@@ -1241,6 +1261,7 @@ ANALYZER_OBJS = \\\n \tanalyzer/constraint-manager.o \\\n \tanalyzer/diagnostic-manager.o \\\n \tanalyzer/engine.o \\\n+\tanalyzer/feasible-graph.o \\\n \tanalyzer/function-set.o \\\n \tanalyzer/pending-diagnostic.o \\\n \tanalyzer/program-point.o \\\n@@ -1260,7 +1281,8 @@ ANALYZER_OBJS = \\\n \tanalyzer/state-purge.o \\\n \tanalyzer/store.o \\\n \tanalyzer/supergraph.o \\\n-\tanalyzer/svalue.o\n+\tanalyzer/svalue.o \\\n+\tanalyzer/trimmed-graph.o\n \n # Language-independent object files.\n # We put the *-match.o and insn-*.o files first so that a parallel make\n@@ -1371,6 +1393,7 @@ OBJS = \\\n \tgimple-array-bounds.o \\\n \tgimple-builder.o \\\n \tgimple-expr.o \\\n+\tgimple-if-to-switch.o \\\n \tgimple-iterator.o \\\n \tgimple-fold.o \\\n \tgimple-laddress.o \\\n@@ -1527,6 +1550,11 @@ OBJS = \\\n \treorg.o \\\n \tresource.o \\\n \trtl-error.o \\\n+\trtl-ssa/accesses.o \\\n+\trtl-ssa/blocks.o \\\n+\trtl-ssa/changes.o \\\n+\trtl-ssa/functions.o \\\n+\trtl-ssa/insns.o \\\n \trtl-tests.o \\\n \trtl.o \\\n \trtlhash.o \\\n@@ -1548,6 +1576,7 @@ OBJS = \\\n \tsparseset.o \\\n \tspellcheck.o \\\n \tspellcheck-tree.o \\\n+\tsplay-tree-utils.o \\\n \tsreal.o \\\n \tstack-ptr-mod.o \\\n \tstatistics.o \\\n@@ -1653,6 +1682,7 @@ OBJS = \\\n \ttree-vect-loop.o \\\n \ttree-vect-loop-manip.o \\\n \ttree-vect-slp.o \\\n+\ttree-vect-slp-patterns.o \\\n \ttree-vectorizer.o \\\n \ttree-vector-builder.o \\\n \ttree-vrp.o \\\n@@ -1779,7 +1809,7 @@ DO_LINK_SERIALIZATION = @DO_LINK_SERIALIZATION@\n ifeq ($(DO_LINK_SERIALIZATION),)\n LINK_PROGRESS = :\n else\n-LINK_PROGRESS = msg=\"Linking |\"; cnt=0; if test \"$(2)\" = start; then \\\n+LINK_PROGRESS = msg=\"Linking $@ |\"; cnt=0; if test \"$(2)\" = start; then \\\n   idx=0; cnt2=$(DO_LINK_SERIALIZATION); \\\n   while test $$cnt2 -le $(1); do msg=\"$${msg}==\"; cnt2=`expr $$cnt2 + 1`; idx=`expr $$idx + 1`; done; \\\n   cnt=$$idx; \\\n@@ -3020,6 +3050,8 @@ PREPROCESSOR_DEFINES = \\\n   -DGPLUSPLUS_INCLUDE_DIR_ADD_SYSROOT=$(gcc_gxx_include_dir_add_sysroot) \\\n   -DGPLUSPLUS_TOOL_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)/$(target_noncanonical)\\\" \\\n   -DGPLUSPLUS_BACKWARD_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)/backward\\\" \\\n+  -DGPLUSPLUS_LIBCXX_INCLUDE_DIR=\\\"$(gcc_gxx_libcxx_include_dir)\\\" \\\n+  -DGPLUSPLUS_LIBCXX_INCLUDE_DIR_ADD_SYSROOT=$(gcc_gxx_libcxx_include_dir_add_sysroot) \\\n   -DLOCAL_INCLUDE_DIR=\\\"$(local_includedir)\\\" \\\n   -DCROSS_INCLUDE_DIR=\\\"$(CROSS_SYSTEM_HEADER_DIR)\\\" \\\n   -DTOOL_INCLUDE_DIR=\\\"$(gcc_tooldir)/include\\\" \\\n@@ -3085,7 +3117,7 @@ gcov-tool$(exeext): $(GCOV_TOOL_OBJS) $(LIBDEPS)\n # be rebuilt.\n \n # Build the include directories.\n-stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) fixinc_list\n+stmp-int-hdrs: $(STMP_FIXINC) $(T_GLIMITS_H) $(USER_H) fixinc_list\n # Copy in the headers provided with gcc.\n #\n # The sed command gets just the last file name component;\n@@ -3139,9 +3171,9 @@ stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) fixinc_list\n \t  multi_dir=`echo $${ml} | sed -e 's/^[^;]*;//'`; \\\n \t  fix_dir=include-fixed$${multi_dir}; \\\n \t  if $(LIMITS_H_TEST) ; then \\\n-\t    cat $(srcdir)/limitx.h $(srcdir)/glimits.h $(srcdir)/limity.h > tmp-xlimits.h; \\\n+\t    cat $(srcdir)/limitx.h $(T_GLIMITS_H) $(srcdir)/limity.h > tmp-xlimits.h; \\\n \t  else \\\n-\t    cat $(srcdir)/glimits.h > tmp-xlimits.h; \\\n+\t    cat $(T_GLIMITS_H) > tmp-xlimits.h; \\\n \t  fi; \\\n \t  $(mkinstalldirs) $${fix_dir}; \\\n \t  chmod a+rx $${fix_dir} || true; \\"}, {"sha": "12d3c2e030c581bad526466b213b274c42c428fb", "filename": "gcc/README.Portability", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FREADME.Portability", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2FREADME.Portability", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.Portability?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,4 +1,4 @@\n-Copyright (C) 2000-2020 Free Software Foundation, Inc.\n+Copyright (C) 2000-2021 Free Software Foundation, Inc.\n \n This file is intended to contain a few notes about writing C code\n within GCC so that it compiles without error on the full range of"}, {"sha": "74c18241c9100b3c473ce6999a584ec25afffe4e", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1,4 +1,4 @@\n-dnl Copyright (C) 2005-2020 Free Software Foundation, Inc.\n+dnl Copyright (C) 2005-2021 Free Software Foundation, Inc.\n dnl\n dnl This file is part of GCC.\n dnl"}, {"sha": "6be36df5190c75cb7352b8576c928a0f726a1965", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -18,6 +18,7 @@ m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])\n m4_include([../lt~obsolete.m4])\n m4_include([../config/acx.m4])\n+m4_include([../config/ax_lib_socket_nsl.m4])\n m4_include([../config/cet.m4])\n m4_include([../config/codeset.m4])\n m4_include([../config/depstand.m4])"}, {"sha": "2f39282193d5c4ce3ba571d42f51a35da2f847fa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 70, "deletions": 11966, "changes": 12036, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "5ce188d14fa11ff783d5f08e7e551d5fb2b2fe88", "filename": "gcc/ada/ChangeLog-2020", "status": "added", "additions": 13978, "deletions": 0, "changes": 13978, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2FChangeLog-2020", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2FChangeLog-2020", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog-2020?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "987eff0abba07a286788768a2149ad9c4e8f8138", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -596,7 +596,6 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-fatgen$(objext) \\\n   s-fatlfl$(objext) \\\n   s-fatllf$(objext) \\\n-  s-fatsfl$(objext) \\\n   s-ficobl$(objext) \\\n   s-filatt$(objext) \\\n   s-fileio$(objext) \\\n@@ -713,7 +712,9 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-pooglo$(objext) \\\n   s-pooloc$(objext) \\\n   s-poosiz$(objext) \\\n-  s-powtab$(objext) \\\n+  s-powflt$(objext) \\\n+  s-powlfl$(objext) \\\n+  s-powllf$(objext) \\\n   s-purexc$(objext) \\\n   s-putima$(objext) \\\n   s-rannum$(objext) \\\n@@ -756,7 +757,10 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-vafi32$(objext) \\\n   s-vafi64$(objext) \\\n   s-valenu$(objext) \\\n+  s-valflt$(objext) \\\n   s-valint$(objext) \\\n+  s-vallfl$(objext) \\\n+  s-valllf$(objext) \\\n   s-vallli$(objext) \\\n   s-valllu$(objext) \\\n   s-valrea$(objext) \\\n@@ -2037,6 +2041,7 @@ ifeq ($(strip $(filter-out hppa% hp hpux10%,$(target_cpu) $(target_vendor) $(tar\n   s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n   s-interr.adb<libgnarl/s-interr__sigaction.adb \\\n   s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  a-nallfl.ads<libgnat/a-nallfl__wraplf.ads \\\n   s-osinte.adb<libgnarl/s-osinte__hpux-dce.adb \\\n   s-osinte.ads<libgnarl/s-osinte__hpux-dce.ads \\\n   s-parame.ads<libgnat/s-parame__hpux.ads \\\n@@ -2055,6 +2060,7 @@ ifeq ($(strip $(filter-out hppa% hp hpux11%,$(target_cpu) $(target_vendor) $(tar\n   a-intnam.ads<libgnarl/a-intnam__hpux.ads \\\n   s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n   s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  a-nallfl.ads<libgnat/a-nallfl__wraplf.ads \\\n   s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n   s-osinte.ads<libgnarl/s-osinte__hpux.ads \\\n   s-parame.ads<libgnat/s-parame__hpux.ads \\\n@@ -2162,11 +2168,16 @@ ifeq ($(strip $(filter-out rtems%,$(target_os))),)\n   s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n   s-stchop.adb<libgnat/s-stchop__rtems.adb \\\n   s-interr.adb<libgnarl/s-interr__hwint.adb\n+\n   ifeq ($(strip $(filter-out arm%, $(target_cpu))),)\n     EH_MECHANISM=-arm\n   else\n     EH_MECHANISM=-gcc\n   endif\n+\n+  ifeq ($(strip $(filter-out riscv%,$(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += a-nallfl.ads<libgnat/a-nallfl__wraplf.ads\n+  endif\n endif\n \n # PikeOS\n@@ -2286,6 +2297,7 @@ endif\n ifeq ($(strip $(filter-out mips% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  a-nallfl.ads<libgnat/a-nallfl__wraplf.ads \\\n   s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n   s-intman.adb<libgnarl/s-intman__posix.adb \\\n   s-linux.ads<libgnarl/s-linux__mips.ads \\\n@@ -2299,6 +2311,18 @@ ifeq ($(strip $(filter-out mips% linux%,$(target_cpu) $(target_os))),)\n   s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n   system.ads<libgnat/system-linux-mips.ads\n \n+  ifeq ($(strip $(filter-out mips64% mipsisa64%,$(target_cpu))),)\n+    ifneq ($(strip $(MULTISUBDIR)),/32)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  else\n+    ifneq ($(strip $(filter /64 /n32,$(MULTISUBDIR))),)\n+      LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+      EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+    endif\n+  endif\n+\n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n@@ -2376,12 +2400,14 @@ ifeq ($(strip $(filter-out arm% linux-gnueabi%,$(target_cpu) $(target_os))),)\n   s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n   s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n   s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  $(TRASYM_DWARF_UNIX_PAIRS) \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n   system.ads<libgnat/system-linux-arm.ads\n \n   TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n \n+  EXTRA_GNATRTL_NONTASKING_OBJS += $(TRASYM_DWARF_UNIX_OBJS)\n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n   EH_MECHANISM=-arm\n   THREADSLIB = -lpthread"}, {"sha": "0a90c92402cd00bcf2ea2fc3672b4a39e1830bcb", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -244,6 +244,8 @@ UINT __gnat_current_ccs_encoding;\n \n #include \"adaint.h\"\n \n+int __gnat_in_child_after_fork = 0;\n+\n #if defined (__APPLE__) && defined (st_mtime)\n #define st_atim st_atimespec\n #define st_mtim st_mtimespec\n@@ -2421,6 +2423,7 @@ __gnat_portable_spawn (char *args[] ATTRIBUTE_UNUSED)\n   if (pid == 0)\n     {\n       /* The child. */\n+      __gnat_in_child_after_fork = 1;\n       if (execv (args[0], MAYBE_TO_PTR32 (args)) != 0)\n \t_exit (1);\n     }"}, {"sha": "85997b9ba6858e22da8897e96ca48ec702b93aec", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -139,7 +139,15 @@ struct file_attributes {\n  * fit the above struct on any system)\n  */\n \n-extern int    __gnat_max_path_len;\n+extern int  __gnat_max_path_len;\n+extern int  __gnat_in_child_after_fork;\n+/* This flag expresses the state when the fork call just returned zero result,\n+ * i.e. when the new born child process is created and the new executable is\n+ * not loaded yet. It is used to e.g. disable tracing memory\n+ * allocation/deallocation in memtrack.adb just after fork returns in the child\n+ * process to avoid both parent and child writing to the same gmem.out file\n+ * simultaneously */\n+\n extern OS_Time __gnat_current_time\t\t   (void);\n extern void   __gnat_current_time_string           (char *);\n extern void   __gnat_to_gm_time\t\t\t   (OS_Time *, int *, int *,"}, {"sha": "7dabbfb7fa28ec24dcec12cded6405a3f7c7a92a", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -31,7 +31,6 @@ with Osint;   use Osint;\n with Scans;   use Scans;\n with Scng;\n with Sinput.C;\n-with Snames;  use Snames;\n with Stringt;\n with Styleg;\n \n@@ -154,15 +153,6 @@ package body ALI.Util is\n \n       Scanner.Initialize_Scanner (Source_Index);\n \n-      --  Make sure that the project language reserved words are not\n-      --  recognized as reserved words, but as identifiers. The byte info for\n-      --  those names have been set if we are in gnatmake.\n-\n-      Set_Name_Table_Byte (Name_Project,          0);\n-      Set_Name_Table_Byte (Name_Extends,          0);\n-      Set_Name_Table_Byte (Name_External,         0);\n-      Set_Name_Table_Byte (Name_External_As_List, 0);\n-\n       --  Scan the complete file to compute its checksum\n \n       loop"}, {"sha": "f213c301c0cc732803f3850fb58c3190b0eaf526", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -3814,15 +3814,15 @@ package body ALI is\n          return No_ALI_Id;\n    end Scan_ALI;\n \n-   -----------\n-   -- Scope --\n-   -----------\n+   --------------\n+   -- IS_Scope --\n+   --------------\n \n-   function Scope (IS_Id : Invocation_Signature_Id) return Name_Id is\n+   function IS_Scope (IS_Id : Invocation_Signature_Id) return Name_Id is\n    begin\n       pragma Assert (Present (IS_Id));\n       return Invocation_Signatures.Table (IS_Id).Scope;\n-   end Scope;\n+   end IS_Scope;\n \n    ---------\n    -- SEq --"}, {"sha": "ccb516f34a2fdf438faf0e3441935d88ad670906", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1350,8 +1350,8 @@ package ALI is\n    pragma Inline (Name);\n    --  Obtain the name of invocation signature IS_Id\n \n-   function Scope (IS_Id : Invocation_Signature_Id) return Name_Id;\n-   pragma Inline (Scope);\n+   function IS_Scope (IS_Id : Invocation_Signature_Id) return Name_Id;\n+   pragma Inline (IS_Scope);\n    --  Obtain the scope of invocation signature IS_Id\n \n    procedure Set_Invocation_Graph_Encoding"}, {"sha": "926fb82b37033e4cf3e75a8150fcabca03edfb8b", "filename": "gcc/ada/bindo-writers.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fbindo-writers.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fbindo-writers.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-writers.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -222,7 +222,7 @@ package body Bindo.Writers is\n          Write_Eol;\n \n          Write_Str  (\"      Scope = \");\n-         Write_Name (Scope (IS_Id));\n+         Write_Name (IS_Scope (IS_Id));\n          Write_Eol;\n       end Write_Invocation_Signature;\n "}, {"sha": "61e41dd151ed2cdc200dfc2d57e2e4332a39c004", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 38, "deletions": 18, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -3922,6 +3922,13 @@ package body Checks is\n \n       function Aggregate_Discriminant_Val (Disc : Entity_Id) return Node_Id;\n \n+      function Replace_Current_Instance\n+        (N : Node_Id) return Traverse_Result;\n+      --  Replace a reference to the current instance of the type with the\n+      --  corresponding _init formal of the initialization procedure. Note:\n+      --  this function relies on us currently being within the initialization\n+      --  procedure.\n+\n       --------------------------------\n       -- Aggregate_Discriminant_Val --\n       --------------------------------\n@@ -3949,6 +3956,26 @@ package body Checks is\n          raise Program_Error;\n       end Aggregate_Discriminant_Val;\n \n+      ------------------------------\n+      -- Replace_Current_Instance --\n+      ------------------------------\n+\n+      function Replace_Current_Instance\n+        (N : Node_Id) return Traverse_Result is\n+      begin\n+         if Is_Entity_Name (N)\n+           and then Etype (N) = Entity (N)\n+         then\n+            Rewrite (N,\n+              New_Occurrence_Of (First_Formal (Current_Subprogram), Loc));\n+         end if;\n+\n+         return OK;\n+      end Replace_Current_Instance;\n+\n+      procedure Search_And_Replace_Current_Instance is new\n+        Traverse_Proc (Replace_Current_Instance);\n+\n    --  Start of processing for Build_Discriminant_Checks\n \n    begin\n@@ -3978,6 +4005,13 @@ package body Checks is\n             Dval := Duplicate_Subexpr_No_Checks (Dval);\n          end if;\n \n+         --  Replace references to the current instance of the type with the\n+         --  corresponding _init formal of the initialization procedure.\n+\n+         if Within_Init_Proc then\n+            Search_And_Replace_Current_Instance (Dval);\n+         end if;\n+\n          --  If we have an Unchecked_Union node, we can infer the discriminants\n          --  of the node.\n \n@@ -4386,23 +4420,23 @@ package body Checks is\n                   Apply_Compile_Time_Constraint_Error\n                     (N      => Expr,\n                      Msg    =>\n-                       \"(Ada 2005) null not allowed in null-excluding \"\n+                       \"(Ada 2005) NULL not allowed in null-excluding \"\n                        & \"components??\",\n                      Reason => CE_Null_Not_Allowed);\n \n                when N_Object_Declaration =>\n                   Apply_Compile_Time_Constraint_Error\n                     (N      => Expr,\n                      Msg    =>\n-                       \"(Ada 2005) null not allowed in null-excluding \"\n+                       \"(Ada 2005) NULL not allowed in null-excluding \"\n                        & \"objects??\",\n                      Reason => CE_Null_Not_Allowed);\n \n                when N_Parameter_Specification =>\n                   Apply_Compile_Time_Constraint_Error\n                     (N      => Expr,\n                      Msg    =>\n-                       \"(Ada 2005) null not allowed in null-excluding \"\n+                       \"(Ada 2005) NULL not allowed in null-excluding \"\n                        & \"formals??\",\n                      Reason => CE_Null_Not_Allowed);\n \n@@ -11161,8 +11195,7 @@ package body Checks is\n \n    procedure Validity_Check_Range\n      (N          : Node_Id;\n-      Related_Id : Entity_Id := Empty)\n-   is\n+      Related_Id : Entity_Id := Empty) is\n    begin\n       if Validity_Checks_On and Validity_Check_Operands then\n          if Nkind (N) = N_Range then\n@@ -11179,17 +11212,4 @@ package body Checks is\n       end if;\n    end Validity_Check_Range;\n \n-   --------------------------------\n-   -- Validity_Checks_Suppressed --\n-   --------------------------------\n-\n-   function Validity_Checks_Suppressed (E : Entity_Id) return Boolean is\n-   begin\n-      if Present (E) and then Checks_May_Be_Suppressed (E) then\n-         return Is_Check_Suppressed (E, Validity_Check);\n-      else\n-         return Scope_Suppress.Suppress (Validity_Check);\n-      end if;\n-   end Validity_Checks_Suppressed;\n-\n end Checks;"}, {"sha": "e7b726121e2229e646054bf2e8bf27870ca44d22", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -64,7 +64,6 @@ package Checks is\n    function Range_Checks_Suppressed          (E : Entity_Id) return Boolean;\n    function Storage_Checks_Suppressed        (E : Entity_Id) return Boolean;\n    function Tag_Checks_Suppressed            (E : Entity_Id) return Boolean;\n-   function Validity_Checks_Suppressed       (E : Entity_Id) return Boolean;\n    --  These functions check to see if the named check is suppressed, either\n    --  by an active scope suppress setting, or because the check has been\n    --  specifically suppressed for the given entity. If no entity is relevant"}, {"sha": "29557eca54f0be543f2fb16f17ece20239b1a1fe", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 242, "deletions": 6, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -905,9 +905,12 @@ package body Contracts is\n \n       --  The following checks are relevant only when SPARK_Mode is on, as\n       --  they are not standard Ada legality rules. Internally generated\n-      --  temporaries are ignored.\n+      --  temporaries are ignored, as well as return objects.\n \n-      if SPARK_Mode = On and then Comes_From_Source (Type_Or_Obj_Id) then\n+      if SPARK_Mode = On\n+        and then Comes_From_Source (Type_Or_Obj_Id)\n+        and then not Is_Return_Object (Type_Or_Obj_Id)\n+      then\n          if Is_Effectively_Volatile (Type_Or_Obj_Id) then\n \n             --  The declaration of an effectively volatile object or type must\n@@ -2195,19 +2198,54 @@ package body Contracts is\n          Result  : Entity_Id)\n       is\n          Loc       : constant Source_Ptr := Sloc (Body_Decl);\n+         Last_Decl : Node_Id;\n          Params    : List_Id := No_List;\n          Proc_Bod  : Node_Id;\n          Proc_Decl : Node_Id;\n          Proc_Id   : Entity_Id;\n          Proc_Spec : Node_Id;\n \n+         --  Extra declarations needed to handle interactions between\n+         --  postconditions and finalization.\n+\n+         Postcond_Enabled_Decl : Node_Id;\n+         Return_Success_Decl   : Node_Id;\n+         Result_Obj_Decl       : Node_Id;\n+         Result_Obj_Type_Decl  : Node_Id;\n+         Result_Obj_Type       : Entity_Id;\n+\n+      --  Start of processing for Build_Postconditions_Procedure\n+\n       begin\n          --  Nothing to do if there are no actions to check on exit\n \n          if No (Stmts) then\n             return;\n          end if;\n \n+         --  Otherwise, we generate the postcondition procedure and add\n+         --  associated objects and conditions used to coordinate postcondition\n+         --  evaluation with finalization.\n+\n+         --  Generate:\n+         --\n+         --    procedure _postconditions (Return_Exp : Result_Typ);\n+         --\n+         --    --  Result_Obj_Type created when Result_Type is non-elementary\n+         --    [type Result_Obj_Type is access all Result_Typ;]\n+         --\n+         --    Result_Obj : Result_Obj_Type;\n+         --\n+         --    Postcond_Enabled            : Boolean := True;\n+         --    Return_Success_For_Postcond : Boolean := False;\n+         --\n+         --    procedure _postconditions (Return_Exp : Result_Typ) is\n+         --    begin\n+         --       if Postcond_Enabled and then Return_Success_For_Postcond then\n+         --          [stmts];\n+         --       end if;\n+         --    end;\n+\n          Proc_Id := Make_Defining_Identifier (Loc, Name_uPostconditions);\n          Set_Debug_Info_Needed   (Proc_Id);\n          Set_Postconditions_Proc (Subp_Id, Proc_Id);\n@@ -2245,12 +2283,14 @@ package body Contracts is\n          --  body. This ensures that the body will not cause any premature\n          --  freezing, as it may mention types:\n \n+         --  Generate:\n+         --\n          --    procedure Proc (Obj : Array_Typ) is\n          --       procedure _postconditions is\n          --       begin\n          --          ... Obj ...\n          --       end _postconditions;\n-\n+         --\n          --       subtype T is Array_Typ (Obj'First (1) .. Obj'Last (1));\n          --    begin\n \n@@ -2262,23 +2302,144 @@ package body Contracts is\n          Insert_Before_First_Source_Declaration\n            (Proc_Decl, Declarations (Body_Decl));\n          Analyze (Proc_Decl);\n+         Last_Decl := Proc_Decl;\n+\n+         --  When Result is present (e.g. the postcondition checks apply to a\n+         --  function) we make a local object to capture the result, so, if\n+         --  needed, we can call the generated postconditions procedure during\n+         --  finalization instead of at the point of return.\n+\n+         --  Note: The placement of the following declarations before the\n+         --  declaration of the body of the postconditions, but after the\n+         --  declaration of the postconditions spec is deliberate and required\n+         --  since other code within the expander expects them to be located\n+         --  here. Perhaps when more space is available in the tree this will\n+         --  no longer be necessary ???\n+\n+         if Present (Result) then\n+            --  Elementary result types mean a copy is cheap and preferred over\n+            --  using pointers.\n+\n+            if Is_Elementary_Type (Etype (Result)) then\n+               Result_Obj_Type := Etype (Result);\n+\n+            --  Otherwise, we create a named access type to capture the result\n+\n+            --  Generate:\n+            --\n+            --  type Result_Obj_Type is access all [Result_Type];\n+\n+            else\n+               Result_Obj_Type := Make_Temporary (Loc, 'R');\n+\n+               Result_Obj_Type_Decl :=\n+                 Make_Full_Type_Declaration (Loc,\n+                   Defining_Identifier => Result_Obj_Type,\n+                   Type_Definition     =>\n+                     Make_Access_To_Object_Definition (Loc,\n+                       All_Present        => True,\n+                       Subtype_Indication => New_Occurrence_Of\n+                                               (Etype (Result), Loc)));\n+               Insert_After_And_Analyze (Proc_Decl, Result_Obj_Type_Decl);\n+               Last_Decl := Result_Obj_Type_Decl;\n+            end if;\n+\n+            --  Create the result obj declaration\n+\n+            --  Generate:\n+            --\n+            --  Result_Object_For_Postcond : Result_Obj_Type;\n+\n+            Result_Obj_Decl :=\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier =>\n+                  Make_Defining_Identifier\n+                    (Loc, Name_uResult_Object_For_Postcond),\n+                Object_Definition   =>\n+                  New_Occurrence_Of\n+                    (Result_Obj_Type, Loc));\n+            Set_No_Initialization (Result_Obj_Decl);\n+            Insert_After_And_Analyze (Last_Decl, Result_Obj_Decl);\n+            Last_Decl := Result_Obj_Decl;\n+         end if;\n+\n+         --  Build the Postcond_Enabled flag used to delay evaluation of\n+         --  postconditions until finalization has been performed when cleanup\n+         --  actions are present.\n+\n+         --  Generate:\n+         --\n+         --    Postcond_Enabled : Boolean := True;\n+\n+         Postcond_Enabled_Decl :=\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier =>\n+               Make_Defining_Identifier\n+                 (Loc, Name_uPostcond_Enabled),\n+             Object_Definition   => New_Occurrence_Of (Standard_Boolean, Loc),\n+             Expression          => New_Occurrence_Of (Standard_True, Loc));\n+         Insert_After_And_Analyze (Last_Decl, Postcond_Enabled_Decl);\n+         Last_Decl := Postcond_Enabled_Decl;\n+\n+         --  Create a flag to indicate that return has been reached\n+\n+         --  This is necessary for deciding whether to execute _postconditions\n+         --  during finalization.\n+\n+         --  Generate:\n+         --\n+         --    Return_Success_For_Postcond : Boolean := False;\n+\n+         Return_Success_Decl :=\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier =>\n+               Make_Defining_Identifier\n+                 (Loc, Name_uReturn_Success_For_Postcond),\n+             Object_Definition   => New_Occurrence_Of (Standard_Boolean, Loc),\n+             Expression          => New_Occurrence_Of (Standard_False, Loc));\n+         Insert_After_And_Analyze (Last_Decl, Return_Success_Decl);\n+         Last_Decl := Return_Success_Decl;\n \n          --  Set an explicit End_Label to override the sloc of the implicit\n          --  RETURN statement, and prevent it from inheriting the sloc of one\n          --  the postconditions: this would cause confusing debug info to be\n          --  produced, interfering with coverage-analysis tools.\n \n+         --  Also, wrap the postcondition checks in a conditional which can be\n+         --  used to delay their evaluation when clean-up actions are present.\n+\n+         --  Generate:\n+         --\n+         --    procedure _postconditions is\n+         --    begin\n+         --       if Postcond_Enabled and then Return_Success_For_Postcond then\n+         --          [Stmts];\n+         --       end if;\n+         --    end;\n+\n          Proc_Bod :=\n            Make_Subprogram_Body (Loc,\n              Specification              =>\n                Copy_Subprogram_Spec (Proc_Spec),\n              Declarations               => Empty_List,\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n-                 Statements => Stmts,\n-                 End_Label  => Make_Identifier (Loc, Chars (Proc_Id))));\n+                 End_Label  => Make_Identifier (Loc, Chars (Proc_Id)),\n+                 Statements => New_List (\n+                   Make_If_Statement (Loc,\n+                     Condition      =>\n+                       Make_And_Then (Loc,\n+                         Left_Opnd  =>\n+                           New_Occurrence_Of\n+                             (Defining_Identifier\n+                               (Postcond_Enabled_Decl), Loc),\n+                         Right_Opnd =>\n+                           New_Occurrence_Of\n+                             (Defining_Identifier\n+                               (Return_Success_Decl), Loc)),\n+                      Then_Statements => Stmts))));\n+         Insert_After_And_Analyze (Last_Decl, Proc_Bod);\n \n-         Insert_After_And_Analyze (Proc_Decl, Proc_Bod);\n       end Build_Postconditions_Procedure;\n \n       ----------------------------\n@@ -3277,6 +3438,81 @@ package body Contracts is\n       Freeze_Contracts;\n    end Freeze_Previous_Contracts;\n \n+   --------------------------\n+   -- Get_Postcond_Enabled --\n+   --------------------------\n+\n+   function Get_Postcond_Enabled (Subp : Entity_Id) return Node_Id is\n+      Decl : Node_Id;\n+   begin\n+      Decl :=\n+        Next (Unit_Declaration_Node (Postconditions_Proc (Subp)));\n+      while Present (Decl) loop\n+\n+         if Nkind (Decl) = N_Object_Declaration\n+          and then Chars (Defining_Identifier (Decl))\n+                     = Name_uPostcond_Enabled\n+         then\n+            return Defining_Identifier (Decl);\n+         end if;\n+\n+         Next (Decl);\n+      end loop;\n+\n+      return Empty;\n+   end Get_Postcond_Enabled;\n+\n+   ------------------------------------\n+   -- Get_Result_Object_For_Postcond --\n+   ------------------------------------\n+\n+   function Get_Result_Object_For_Postcond\n+     (Subp : Entity_Id) return Node_Id\n+   is\n+      Decl : Node_Id;\n+   begin\n+      Decl :=\n+        Next (Unit_Declaration_Node (Postconditions_Proc (Subp)));\n+      while Present (Decl) loop\n+\n+         if Nkind (Decl) = N_Object_Declaration\n+           and then Chars (Defining_Identifier (Decl))\n+                      = Name_uResult_Object_For_Postcond\n+         then\n+            return Defining_Identifier (Decl);\n+         end if;\n+\n+         Next (Decl);\n+      end loop;\n+\n+      return Empty;\n+   end Get_Result_Object_For_Postcond;\n+\n+   -------------------------------------\n+   -- Get_Return_Success_For_Postcond --\n+   -------------------------------------\n+\n+   function Get_Return_Success_For_Postcond (Subp : Entity_Id) return Node_Id\n+   is\n+      Decl : Node_Id;\n+   begin\n+      Decl :=\n+        Next (Unit_Declaration_Node (Postconditions_Proc (Subp)));\n+      while Present (Decl) loop\n+\n+         if Nkind (Decl) = N_Object_Declaration\n+          and then Chars (Defining_Identifier (Decl))\n+                     = Name_uReturn_Success_For_Postcond\n+         then\n+            return Defining_Identifier (Decl);\n+         end if;\n+\n+         Next (Decl);\n+      end loop;\n+\n+      return Empty;\n+   end Get_Return_Success_For_Postcond;\n+\n    ---------------------------------\n    -- Inherit_Subprogram_Contract --\n    ---------------------------------"}, {"sha": "b8a12ffd58ab13de509e72f33e4fd41a2d84bbc3", "filename": "gcc/ada/contracts.ads", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fcontracts.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fcontracts.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -188,6 +188,21 @@ package Contracts is\n    --  denoted by Body_Decl. In addition, freeze the contract of the nearest\n    --  enclosing package body.\n \n+   function Get_Postcond_Enabled (Subp : Entity_Id) return Entity_Id;\n+   --  Get the defining identifier for a subprogram's Postcond_Enabled\n+   --  object created during the expansion of the subprogram's postconditions.\n+\n+   function Get_Result_Object_For_Postcond (Subp : Entity_Id) return Entity_Id;\n+   --  Get the defining identifier for a subprogram's\n+   --  Result_Object_For_Postcond object created during the expansion of the\n+   --  subprogram's postconditions.\n+\n+   function Get_Return_Success_For_Postcond\n+     (Subp : Entity_Id) return Entity_Id;\n+   --  Get the defining identifier for a subprogram's\n+   --  Return_Success_For_Postcond object created during the expansion of the\n+   --  subprogram's postconditions.\n+\n    procedure Inherit_Subprogram_Contract\n      (Subp      : Entity_Id;\n       From_Subp : Entity_Id);"}, {"sha": "8072320ae10c1fe13ec91e9cbffcdb835c3d00aa", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -37,6 +37,11 @@\n #define _FILE_OFFSET_BITS 64\n /* the define above will make off_t a 64bit type on GNU/Linux */\n \n+/* Tell Cygwin's <stdio.h> to expose fileno_unlocked() */\n+#if defined(__CYGWIN__) && !defined(__CYGWIN32__) && !defined(_GNU_SOURCE)\n+#define _GNU_SOURCE\n+#endif\n+\n #include <stdio.h>\n #include <sys/types.h>\n #include <sys/stat.h>"}, {"sha": "2c7c7127fa2a4881b9e5df8a9537553cc38c238c", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -74,7 +74,7 @@ package body Debug is\n    --  dN   No file name information in exception messages\n    --  dO   Output immediate error messages\n    --  dP   Do not check for controlled objects in preelaborable packages\n-   --  dQ   Use old secondary stack method\n+   --  dQ\n    --  dR   Bypass check for correct version of s-rpc\n    --  dS   Never convert numbers to machine numbers in Sem_Eval\n    --  dT   Convert to machine numbers only for constant declarations\n@@ -643,11 +643,6 @@ package body Debug is\n    --       in preelaborable packages, but this restriction is a huge pain,\n    --       especially in the predefined library units.\n \n-   --  dQ   Use old method for determining what goes on the secondary stack.\n-   --       This disables some newer optimizations. The intent is to use this\n-   --       temporarily to measure before/after efficiency. ???Remove this\n-   --       when we are done (see Sem_Util.Requires_Transient_Scope).\n-\n    --  dR   Bypass the check for a proper version of s-rpc being present\n    --       to use the -gnatz? switch. This allows debugging of the use\n    --       of stubs generation without needing to have GLADE (or some"}, {"sha": "f8d41ea5b8d209355925d08144befc880ef8bcf2", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_attributes.rst", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -817,8 +817,6 @@ and is static.  For non-scalar types, the result is nonstatic.\n \n Attribute Pool_Address\n ======================\n-.. index:: Parameters, when passed by reference\n-\n .. index:: Pool_Address\n \n ``X'Pool_Address`` for any object ``X`` returns the address\n@@ -1142,6 +1140,26 @@ for compatibility with Ada 83.  See\n the Ada 83 reference manual for an exact description of the semantics of\n this attribute when applied to floating-point types.\n \n+Attribute Small_Denominator\n+===========================\n+.. index:: Small\n+\n+.. index:: Small_Denominator\n+\n+``typ'Small_Denominator`` for any fixed-point subtype `typ` yields the\n+denominator in the representation of ``typ'Small`` as a rational number\n+with coprime factors (i.e. as an irreducible fraction).\n+\n+Attribute Small_Numerator\n+=========================\n+.. index:: Small\n+\n+.. index:: Small_Numerator\n+\n+``typ'Small_Numerator`` for any fixed-point subtype `typ` yields the\n+numerator in the representation of ``typ'Small`` as a rational number\n+with coprime factors (i.e. as an irreducible fraction).\n+\n Attribute Storage_Unit\n ======================\n .. index:: Storage_Unit"}, {"sha": "10fcfc93c1d0330ddd42d6ccfe47b07cf5bad802", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_characteristics.rst", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -160,15 +160,16 @@ is permitted that does not result in a mantissa larger than 63 bits.\n On 64-bit platforms, the small must lie in 2.0**(-127) .. 2.0**127 and the\n range in -1.0E+76 .. 1.0E+76; any combination is permitted that does not\n result in a mantissa larger than 63 bits, and any combination is permitted\n-that results in a mantissa between 64 and 127 bits if the small is either\n-an integer or the reciprocal of an integer.\n-\n-If the small is either an integer or the reciprocal of an integer, which\n-is the case if no ``small`` clause is provided, then the operations of the\n-fixed point type are entirely implemented by means of integer instructions.\n-In the other cases, some operations, in particular input and output, may be\n-implemented by means of floating-point instructions and may be affected by\n-accuracy issues on architectures other than x86.\n+that results in a mantissa between 64 and 127 bits if the small is the\n+ratio of two integers that lie in 1 .. 2.0**127.\n+\n+If the small is the ratio of two integers with 64-bit magnitude on 32-bit\n+platforms and 128-bit magnitude on 64-bit platforms, which is the case if\n+no ``small`` clause is provided, then the operations of the fixed point\n+type are entirely implemented by means of integer instructions.  In the\n+other cases, some operations, in particular input and output, may be\n+implemented by means of floating-point instructions and may be affected\n+by accuracy issues on architectures other than x86.\n \n For a decimal fixed point type, on 32-bit platforms, the small must lie in\n 1.0E-18 .. 1.0E+18 and the digits in 1 .. 18.  On 64-bit platforms, the"}, {"sha": "74b97181a19286200db8c6676032901044abcfc7", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -6652,8 +6652,8 @@ expression. The following is an example of use within a package spec:\n      function Sqrt (Arg : Float) return Float;\n      pragma Test_Case (Name     => \"Test 1\",\n                        Mode     => Nominal,\n-                       Requires => Arg < 10000,\n-                       Ensures  => Sqrt'Result < 10);\n+                       Requires => Arg < 10000.0,\n+                       Ensures  => Sqrt'Result < 10.0);\n      ...\n   end Math_Functions;\n "}, {"sha": "82e992a5041440d49a3f8d21f4dd2ace53b60ce3", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1517,6 +1517,13 @@ Alphabetical List of All Switches\n   an exception because ``Self(Obj)`` produces an anonymous object which does\n   not share the memory location of ``Obj``.\n \n+.. index:: -gnateb  (gcc)\n+\n+:switch:`-gnateb`\n+  Store configuration files by their basename in ALI files. This switch is\n+  used for instance by gprbuild for distributed builds in order to prevent\n+  issues where machine-specific absolute paths could end up being stored in\n+  ALI files.\n \n .. index:: -gnatec  (gcc)\n \n@@ -3337,7 +3344,7 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n :switch:`-gnatw.K`\n   *Suppress warnings on redefinition of names in standard.*\n \n-  This switch activates warnings for declarations that declare a name that\n+  This switch disables warnings for declarations that declare a name that\n   is defined in package Standard.\n \n \n@@ -6704,6 +6711,9 @@ be presented in subsequent sections.\n   Use the target-independent XDR protocol for stream oriented attributes\n   instead of the default implementation which is based on direct binary\n   representations and is therefore target-and endianness-dependent.\n+  However it does not support 128-bit integer types and the exception\n+  ``Ada.IO_Exceptions.Device_Error`` is raised if any attempt is made\n+  at streaming 128-bit integer types with it.\n \n \n   .. index:: -Xnnn  (gnatbind)"}, {"sha": "c4f186ef1306038b91a912b2f38fec395a7f4ed4", "filename": "gcc/ada/doc/gnat_ugn/gnat_and_program_execution.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1840,7 +1840,7 @@ improves performance for your program.\n \n .. _Floating_Point_Operations:\n \n-Floating_Point_Operations\n+Floating Point Operations\n ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n .. index:: Floating-Point Operations"}, {"sha": "46d589a85976f065928a3bb107ffdffdc46d5d1c", "filename": "gcc/ada/doc/gnat_ugn/the_gnat_compilation_model.rst", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1560,6 +1560,10 @@ temporary files that are immediately deleted; it doesn't make sense to\n depend on a file that no longer exists. Such tools include\n ``gprbuild``, ``gnatmake``, and ``gnatcheck``.\n \n+By default, configuration pragma files are stored by their absolute paths in\n+ALI files. You can use the :switch:`-gnateb` switch in order to store them by\n+their basename instead.\n+\n If you are using project file, a separate mechanism is provided using\n project attributes.\n "}, {"sha": "8c401ca0c6a6cf5f3acd3e117ef1f333381ce896", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 71, "deletions": 16, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -2543,6 +2543,29 @@ package body Einfo is\n       return Flag215 (Base_Type (Id));\n    end Is_Param_Block_Component_Type;\n \n+   function Is_Partial_DIC_Procedure (Id : E) return B is\n+      Partial_DIC_Suffix : constant String := \"Partial_DIC\";\n+      DIC_Nam            : constant String := Get_Name_String (Chars (Id));\n+\n+   begin\n+      pragma Assert (Ekind (Id) in E_Function | E_Procedure);\n+\n+      --  Instead of adding a new Entity_Id flag (which are in short supply),\n+      --  we test the form of the subprogram name. When the node field and flag\n+      --  situation is eased, this should be replaced with a flag. ???\n+\n+      if DIC_Nam'Length > Partial_DIC_Suffix'Length\n+        and then\n+          DIC_Nam\n+            (DIC_Nam'Last - Partial_DIC_Suffix'Length + 1 .. DIC_Nam'Last) =\n+               Partial_DIC_Suffix\n+      then\n+         return True;\n+      else\n+         return False;\n+      end if;\n+   end Is_Partial_DIC_Procedure;\n+\n    function Is_Partial_Invariant_Procedure (Id : E) return B is\n    begin\n       pragma Assert (Ekind (Id) in E_Function | E_Procedure);\n@@ -6779,7 +6802,9 @@ package body Einfo is\n \n    procedure Set_Stores_Attribute_Old_Prefix (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Ekind (Id) = E_Constant);\n+      pragma Assert (Is_Type (Id)\n+                      or else (Ekind (Id) in E_Constant\n+                                           | E_Variable));\n       Set_Flag270 (Id, V);\n    end Set_Stores_Attribute_Old_Prefix;\n \n@@ -7401,7 +7426,13 @@ package body Einfo is\n          while Present (Subp_Elmt) loop\n             Subp_Id := Node (Subp_Elmt);\n \n-            if Is_DIC_Procedure (Subp_Id) then\n+            --  Currently the flag Is_DIC_Procedure is set for both normal DIC\n+            --  check procedures as well as for partial DIC check procedures,\n+            --  and we don't have a flag for the partial procedures.\n+\n+            if Is_DIC_Procedure (Subp_Id)\n+              and then not Is_Partial_DIC_Procedure (Subp_Id)\n+            then\n                return Subp_Id;\n             end if;\n \n@@ -8792,6 +8823,36 @@ package body Einfo is\n       return Ekind (Id);\n    end Parameter_Mode;\n \n+   ---------------------------\n+   -- Partial_DIC_Procedure --\n+   ---------------------------\n+\n+   function Partial_DIC_Procedure (Id : E) return E is\n+      Subp_Elmt : Elmt_Id;\n+      Subp_Id   : Entity_Id;\n+      Subps     : Elist_Id;\n+\n+   begin\n+      pragma Assert (Is_Type (Id));\n+\n+      Subps := Subprograms_For_Type (Base_Type (Id));\n+\n+      if Present (Subps) then\n+         Subp_Elmt := First_Elmt (Subps);\n+         while Present (Subp_Elmt) loop\n+            Subp_Id := Node (Subp_Elmt);\n+\n+            if Is_Partial_DIC_Procedure (Subp_Id) then\n+               return Subp_Id;\n+            end if;\n+\n+            Next_Elmt (Subp_Elmt);\n+         end loop;\n+      end if;\n+\n+      return Empty;\n+   end Partial_DIC_Procedure;\n+\n    ---------------------------------\n    -- Partial_Invariant_Procedure --\n    ---------------------------------\n@@ -9271,8 +9332,6 @@ package body Einfo is\n \n    procedure Set_DIC_Procedure (Id : E; V : E) is\n       Base_Typ  : Entity_Id;\n-      Subp_Elmt : Elmt_Id;\n-      Subp_Id   : Entity_Id;\n       Subps     : Elist_Id;\n \n    begin\n@@ -9286,21 +9345,17 @@ package body Einfo is\n          Set_Subprograms_For_Type (Base_Typ, Subps);\n       end if;\n \n-      Subp_Elmt := First_Elmt (Subps);\n       Prepend_Elmt (V, Subps);\n+   end Set_DIC_Procedure;\n \n-      --  Check for a duplicate default initial condition procedure\n-\n-      while Present (Subp_Elmt) loop\n-         Subp_Id := Node (Subp_Elmt);\n-\n-         if Is_DIC_Procedure (Subp_Id) then\n-            raise Program_Error;\n-         end if;\n+   -------------------------------------\n+   -- Set_Partial_Invariant_Procedure --\n+   -------------------------------------\n \n-         Next_Elmt (Subp_Elmt);\n-      end loop;\n-   end Set_DIC_Procedure;\n+   procedure Set_Partial_DIC_Procedure (Id : E; V : E) is\n+   begin\n+      Set_DIC_Procedure (Id, V);\n+   end Set_Partial_DIC_Procedure;\n \n    -----------------------------\n    -- Set_Invariant_Procedure --"}, {"sha": "cc0c815186ee1dd119db10bb259c390f63b10cf1", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -3932,6 +3932,20 @@ package Einfo is\n --       of a single protected/task type, the references are examined as they\n --       must appear only within the type defintion and the corresponding body.\n \n+--    Partial_DIC_Procedure (synthesized)\n+--       Defined in type entities. Set for a private type and its full view\n+--       when the type is subject to pragma Default_Initial_Condition (DIC), or\n+--       when the type inherits a DIC pragma from a parent type. Points to the\n+--       entity of a procedure that takes a single argument of the given type\n+--       and verifies the assertion expression of the DIC pragma at run time.\n+--       When present, the Partial_DIC_Procedure of a type only checks DICs\n+--       associated with the partial (private) view of the type, and is invoked\n+--       by the full DIC_Procedure (which may check additional DICs associated\n+--       with the full view).\n+\n+--       Note: the reason this is marked as a synthesized attribute is that the\n+--       way this is stored is as an element of the Subprograms_For_Type field.\n+\n --    Partial_Invariant_Procedure (synthesized)\n --       Defined in types and subtypes. Set for private types when one or more\n --       [class-wide] type invariants apply to them. Points to the entity for a\n@@ -4489,8 +4503,8 @@ package Einfo is\n --       stored discriminants for the record (sub)type.\n \n --    Stores_Attribute_Old_Prefix (Flag270)\n---       Defined in constants. Set when the constant has been generated to save\n---       the value of attribute 'Old's prefix.\n+--       Defined in constants, variables, and types which are created during\n+--       expansion in order to save the value of attribute 'Old's prefix.\n \n --    Strict_Alignment (Flag145) [implementation base type only]\n --       Defined in all type entities. Indicates that the type is by-reference\n@@ -5821,6 +5835,7 @@ package Einfo is\n    --    Is_Full_Access                      (synth)\n    --    Is_Controlled                       (synth)\n    --    Object_Size_Clause                  (synth)\n+   --    Partial_DIC_Procedure               (synth)\n    --    Partial_Invariant_Procedure         (synth)\n    --    Predicate_Function                  (synth)\n    --    Predicate_Function_M                (synth)\n@@ -6586,6 +6601,7 @@ package Einfo is\n    --    Is_Invariant_Procedure              (Flag257)  (non-generic case only)\n    --    Is_Machine_Code_Subprogram          (Flag137)  (non-generic case only)\n    --    Is_Null_Init_Proc                   (Flag178)\n+   --    Is_Partial_DIC_Procedure            (synth)    (non-generic case only)\n    --    Is_Partial_Invariant_Procedure      (Flag292)  (non-generic case only)\n    --    Is_Predicate_Function               (Flag255)  (non-generic case only)\n    --    Is_Predicate_Function_M             (Flag256)  (non-generic case only)\n@@ -7405,6 +7421,7 @@ package Einfo is\n    function Is_Packed_Array_Impl_Type           (Id : E) return B;\n    function Is_Potentially_Use_Visible          (Id : E) return B;\n    function Is_Param_Block_Component_Type       (Id : E) return B;\n+   function Is_Partial_DIC_Procedure            (Id : E) return B;\n    function Is_Partial_Invariant_Procedure      (Id : E) return B;\n    function Is_Predicate_Function               (Id : E) return B;\n    function Is_Predicate_Function_M             (Id : E) return B;\n@@ -8309,12 +8326,14 @@ package Einfo is\n    ---------------------------------------------------\n \n    function DIC_Procedure                        (Id : E) return E;\n+   function Partial_DIC_Procedure                (Id : E) return E;\n    function Invariant_Procedure                  (Id : E) return E;\n    function Partial_Invariant_Procedure          (Id : E) return E;\n    function Predicate_Function                   (Id : E) return E;\n    function Predicate_Function_M                 (Id : E) return E;\n \n    procedure Set_DIC_Procedure                   (Id : E; V : E);\n+   procedure Set_Partial_DIC_Procedure           (Id : E; V : E);\n    procedure Set_Invariant_Procedure             (Id : E; V : E);\n    procedure Set_Partial_Invariant_Procedure     (Id : E; V : E);\n    procedure Set_Predicate_Function              (Id : E; V : E);"}, {"sha": "cc291c6434f724e4e038b1e5e89a23d022afff27", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -337,7 +337,7 @@ package body Errout is\n    begin\n       --  Return if all errors are to be ignored\n \n-      if Errors_Must_Be_Ignored then\n+      if Get_Ignore_Errors then\n          return;\n       end if;\n \n@@ -612,6 +612,25 @@ package body Errout is\n       end;\n    end Error_Msg;\n \n+   ----------------------------------\n+   -- Error_Msg_Ada_2005_Extension --\n+   ----------------------------------\n+\n+   procedure Error_Msg_Ada_2005_Extension (Extension : String) is\n+      Loc : constant Source_Ptr := Token_Ptr;\n+   begin\n+      if Ada_Version < Ada_2005 then\n+         Error_Msg (Extension & \" is an Ada 2005 extension\", Loc);\n+\n+         if No (Ada_Version_Pragma) then\n+            Error_Msg (\"\\unit must be compiled with -gnat05 switch\", Loc);\n+         else\n+            Error_Msg_Sloc := Sloc (Ada_Version_Pragma);\n+            Error_Msg (\"\\incompatible with Ada version set#\", Loc);\n+         end if;\n+      end if;\n+   end Error_Msg_Ada_2005_Extension;\n+\n    --------------------------------\n    -- Error_Msg_Ada_2012_Feature --\n    --------------------------------\n@@ -1430,7 +1449,9 @@ package body Errout is\n          Last_Killed := True;\n       end if;\n \n-      Set_Posted (N);\n+      if not Get_Ignore_Errors then\n+         Set_Posted (N);\n+      end if;\n    end Error_Msg_NEL;\n \n    ------------------"}, {"sha": "02cfdee2c321ee36146120b560f5c142f1eeebd1", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -902,6 +902,11 @@ package Errout is\n    --  overridden interface primitive Iface_Prim) indicating wrong mode of the\n    --  first formal (RM 9.4(11.9/3)).\n \n+   procedure Error_Msg_Ada_2005_Extension (Extension : String);\n+   --  Analogous to Error_Msg_Ada_2012_Feature, but phrase the message using\n+   --  \"extension\" and not \"feature\". This routine is only used in the parser,\n+   --  so the error is always placed at the Token_Ptr.\n+\n    procedure Error_Msg_Ada_2012_Feature (Feature : String; Loc : Source_Ptr);\n    --  If not operating in Ada 2012 mode or higher, posts errors complaining\n    --  that Feature is only supported in Ada 2012, with appropriate suggestions"}, {"sha": "d7e5470b717a08c4883e4ca4498452c717a988e1", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1895,6 +1895,22 @@ package body Exp_Aggr is\n                   Append_To (Stmts, Init_Call);\n                end if;\n             end if;\n+\n+            --  If Default_Initial_Condition applies to the component type,\n+            --  add a DIC check after the component is default-initialized,\n+            --  as well as after an Initialize procedure is called, in the\n+            --  case of components of a controlled type. It will be analyzed\n+            --  and resolved before the code for initialization of other\n+            --  components.\n+\n+            --  Theoretically this might also be needed for cases where Expr\n+            --  is not empty, but a default init still applies, such as for\n+            --  Default_Value cases, in which case we won't get here. ???\n+\n+            if Has_DIC (Ctype) and then Present (DIC_Procedure (Ctype)) then\n+               Append_To (Stmts,\n+                 Build_DIC_Call (Loc, New_Copy_Tree (Indexed_Comp), Ctype));\n+            end if;\n          end if;\n \n          return Add_Loop_Actions (Stmts);\n@@ -3504,6 +3520,18 @@ package body Exp_Aggr is\n                   then\n                      Check_Ancestor_Discriminants (Entity (Ancestor));\n                   end if;\n+\n+                  --  If ancestor type has Default_Initialization_Condition,\n+                  --  add a DIC check after the ancestor object is initialized\n+                  --  by default.\n+\n+                  if Has_DIC (Entity (Ancestor))\n+                    and then Present (DIC_Procedure (Entity (Ancestor)))\n+                  then\n+                     Append_To (L,\n+                       Build_DIC_Call\n+                         (Loc, New_Copy_Tree (Ref), Entity (Ancestor)));\n+                  end if;\n                end if;\n \n             --  Handle calls to C++ constructors\n@@ -4109,6 +4137,22 @@ package body Exp_Aggr is\n             end;\n          end if;\n \n+         --  If the component association was specified with a box and the\n+         --  component type has a Default_Initial_Condition, then generate\n+         --  a call to the DIC procedure.\n+\n+         if Has_DIC (Etype (Selector))\n+           and then Was_Default_Init_Box_Association (Comp)\n+           and then Present (DIC_Procedure (Etype (Selector)))\n+         then\n+            Append_To (L,\n+              Build_DIC_Call (Loc,\n+                Make_Selected_Component (Loc,\n+                  Prefix        => New_Copy_Tree (Target),\n+                  Selector_Name => New_Occurrence_Of (Selector, Loc)),\n+                Etype (Selector)));\n+         end if;\n+\n          Next (Comp);\n       end loop;\n "}, {"sha": "7f63a2d88d13924a7a5954027192986fd2fb60a9", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 65, "deletions": 40, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -3626,8 +3626,9 @@ package body Exp_Attr is\n       --    For the most common ordinary fixed-point types\n       --      xx   = Fixed{32,64,128}\n       --      ftyp = Integer_{32,64,128}\n-      --      pm   = Typ'Small\n-      --             1.0 / Typ'Small\n+      --      pm   = numerator of Typ'Small\n+      --             denominator of Typ'Small\n+      --             min (scale of Typ'Small, 0)\n \n       --    For other ordinary fixed-point types\n       --      xx   = Real\n@@ -3666,20 +3667,26 @@ package body Exp_Attr is\n \n                begin\n                   if Siz <= 32\n-                    and then Min = Uint_1\n                     and then Max <= Uint_2 ** 31\n+                    and then (Min = Uint_1\n+                               or else Num < Den\n+                               or else Num < Uint_10 ** 8)\n                   then\n                      Fid  := RE_Fore_Fixed32;\n                      Ftyp := RTE (RE_Integer_32);\n                   elsif Siz <= 64\n-                    and then Min = Uint_1\n                     and then Max <= Uint_2 ** 63\n+                    and then (Min = Uint_1\n+                               or else Num < Den\n+                               or else Num < Uint_10 ** 17)\n                   then\n                      Fid  := RE_Fore_Fixed64;\n                      Ftyp := RTE (RE_Integer_64);\n                   elsif System_Max_Integer_Size = 128\n-                    and then Min = Uint_1\n                     and then Max <= Uint_2 ** 127\n+                    and then (Min = Uint_1\n+                               or else Num < Den\n+                               or else Num < Uint_10 ** 37)\n                   then\n                      Fid  := RE_Fore_Fixed128;\n                      Ftyp := RTE (RE_Integer_128);\n@@ -3711,8 +3718,8 @@ package body Exp_Attr is\n                Append_To (Arg_List,\n                  Make_Integer_Literal (Loc, Scale_Value (Ptyp)));\n \n-            --  For ordinary fixed-point types, append Num, Den parameters\n-            --  and also set to do literal conversion\n+            --  For ordinary fixed-point types, append Num, Den and Scale\n+            --  parameters and also set to do literal conversion\n \n             elsif Fid /= RE_Fore_Real then\n                Set_Conversion_OK (First (Arg_List));\n@@ -3723,6 +3730,20 @@ package body Exp_Attr is\n \n                Append_To (Arg_List,\n                  Make_Integer_Literal (Loc, -Norm_Den (Small_Value (Ptyp))));\n+\n+               declare\n+                  Val   : Ureal := Small_Value (Ptyp);\n+                  Scale : Int   := 0;\n+\n+               begin\n+                  while Val >= Ureal_10 loop\n+                     Val := Val / Ureal_10;\n+                     Scale := Scale - 1;\n+                  end loop;\n+\n+                  Append_To (Arg_List,\n+                     Make_Integer_Literal (Loc, UI_From_Int (Scale)));\n+               end;\n             end if;\n \n             Rewrite (N,\n@@ -4681,13 +4702,15 @@ package body Exp_Attr is\n \n       when Attribute_Mod => Mod_Case : declare\n          Arg  : constant Node_Id := Relocate_Node (First (Exprs));\n-         Hi   : constant Node_Id := Type_High_Bound (Etype (Arg));\n+         Hi   : constant Node_Id := Type_High_Bound (Base_Type (Etype (Arg)));\n          Modv : constant Uint    := Modulus (Btyp);\n \n       begin\n \n          --  This is not so simple. The issue is what type to use for the\n-         --  computation of the modular value.\n+         --  computation of the modular value. In addition we need to use\n+         --  the base type as above to retrieve a static bound for the\n+         --  comparisons that follow.\n \n          --  The easy case is when the modulus value is within the bounds\n          --  of the signed integer type of the argument. In this case we can\n@@ -6173,44 +6196,46 @@ package body Exp_Attr is\n       -- Round --\n       -----------\n \n-      --  The handling of the Round attribute is quite delicate. The processing\n-      --  in Sem_Attr introduced a conversion to universal real, reflecting the\n-      --  semantics of Round, but we do not want anything to do with universal\n-      --  real at runtime, since this corresponds to using floating-point\n-      --  arithmetic.\n+      --  The handling of the Round attribute is delicate when the operand is\n+      --  universal fixed. In this case, the processing in Sem_Attr introduced\n+      --  a conversion to universal real, reflecting the semantics of Round,\n+      --  but we do not want anything to do with universal real at run time,\n+      --  since this corresponds to using floating-point arithmetic.\n \n       --  What we have now is that the Etype of the Round attribute correctly\n       --  indicates the final result type. The operand of the Round is the\n       --  conversion to universal real, described above, and the operand of\n       --  this conversion is the actual operand of Round, which may be the\n-      --  special case of a fixed point multiplication or division (Etype =\n-      --  universal fixed)\n+      --  special case of a fixed point multiplication or division.\n \n-      --  The exapander will expand first the operand of the conversion, then\n+      --  The expander will expand first the operand of the conversion, then\n       --  the conversion, and finally the round attribute itself, since we\n       --  always work inside out. But we cannot simply process naively in this\n       --  order. In the semantic world where universal fixed and real really\n       --  exist and have infinite precision, there is no problem, but in the\n       --  implementation world, where universal real is a floating-point type,\n       --  we would get the wrong result.\n \n-      --  So the approach is as follows. First, when expanding a multiply or\n-      --  divide whose type is universal fixed, we do nothing at all, instead\n-      --  deferring the operation till later.\n-\n-      --  The actual processing is done in Expand_N_Type_Conversion which\n-      --  handles the special case of Round by looking at its parent to see if\n-      --  it is a Round attribute, and if it is, handling the conversion (or\n-      --  its fixed multiply/divide child) in an appropriate manner.\n+      --  So the approach is as follows. When expanding a multiply or divide\n+      --  whose type is universal fixed, Fixup_Universal_Fixed_Operation will\n+      --  look up and skip the conversion to universal real if its parent is\n+      --  a Round attribute, taking information from this attribute node. In\n+      --  the other cases, Expand_N_Type_Conversion does the same by looking\n+      --  at its parent to see if it is a Round attribute, before calling the\n+      --  fixed-point expansion routine.\n \n       --  This means that by the time we get to expanding the Round attribute\n       --  itself, the Round is nothing more than a type conversion (and will\n       --  often be a null type conversion), so we just replace it with the\n       --  appropriate conversion operation.\n \n       when Attribute_Round =>\n-         Rewrite (N,\n-           Convert_To (Etype (N), Relocate_Node (First (Exprs))));\n+         if Etype (First (Exprs)) = Etype (N) then\n+            Rewrite (N, Relocate_Node (First (Exprs)));\n+         else\n+            Rewrite (N, Convert_To (Etype (N), First (Exprs)));\n+            Set_Rounded_Result (N);\n+         end if;\n          Analyze_And_Resolve (N);\n \n       --------------\n@@ -7813,6 +7838,8 @@ package body Exp_Attr is\n          | Attribute_Scale\n          | Attribute_Signed_Zeros\n          | Attribute_Small\n+         | Attribute_Small_Denominator\n+         | Attribute_Small_Numerator\n          | Attribute_Storage_Unit\n          | Attribute_Stub_Type\n          | Attribute_System_Allocator_Alignment\n@@ -8284,27 +8311,25 @@ package body Exp_Attr is\n       --  All we do is use the root type (historically this dealt with\n       --  VAX-float .. to be cleaned up further later ???)\n \n-      Fat_Type := Rtyp;\n+      if Rtyp = Standard_Short_Float or else Rtyp = Standard_Float then\n+         Fat_Type := Standard_Float;\n+         Fat_Pkg  := RE_Attr_Float;\n \n-      if Fat_Type = Standard_Short_Float then\n-         Fat_Pkg := RE_Attr_Short_Float;\n+      elsif Rtyp = Standard_Long_Float then\n+         Fat_Type := Standard_Long_Float;\n+         Fat_Pkg  := RE_Attr_Long_Float;\n \n-      elsif Fat_Type = Standard_Float then\n-         Fat_Pkg := RE_Attr_Float;\n-\n-      elsif Fat_Type = Standard_Long_Float then\n-         Fat_Pkg := RE_Attr_Long_Float;\n-\n-      elsif Fat_Type = Standard_Long_Long_Float then\n-         Fat_Pkg := RE_Attr_Long_Long_Float;\n+      elsif Rtyp = Standard_Long_Long_Float then\n+         Fat_Type := Standard_Long_Long_Float;\n+         Fat_Pkg  := RE_Attr_Long_Long_Float;\n \n          --  Universal real (which is its own root type) is treated as being\n          --  equivalent to Standard.Long_Long_Float, since it is defined to\n          --  have the same precision as the longest Float type.\n \n-      elsif Fat_Type = Universal_Real then\n+      elsif Rtyp = Universal_Real then\n          Fat_Type := Standard_Long_Long_Float;\n-         Fat_Pkg := RE_Attr_Long_Long_Float;\n+         Fat_Pkg  := RE_Attr_Long_Long_Float;\n \n       else\n          raise Program_Error;"}, {"sha": "a501bf1aa263ef49b2df9fd33af26039e9ba7382", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1864,8 +1864,8 @@ package body Exp_Ch11 is\n          then\n             return Empty;\n \n-            --  Test for handled sequence of statements with at least one\n-            --  exception handler which might be the one we are looking for.\n+         --  Test for handled sequence of statements with at least one\n+         --  exception handler which might be the one we are looking for.\n \n          elsif Nkind (P) = N_Handled_Sequence_Of_Statements\n            and then Present (Exception_Handlers (P))"}, {"sha": "e0040ede093674e92b0b76938bc0af08ccde8fa9", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 133, "deletions": 85, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -671,24 +671,90 @@ package body Exp_Ch3 is\n       ------------------------\n \n       function Init_One_Dimension (N : Int) return List_Id is\n-         Index : Entity_Id;\n+         Index       : Entity_Id;\n+         DIC_Call    : Node_Id;\n+         Result_List : List_Id;\n+\n+         function Possible_DIC_Call return Node_Id;\n+         --  If the component type has Default_Initial_Conditions and a DIC\n+         --  procedure that is not an empty body, then builds a call to the\n+         --  DIC procedure and returns it.\n+\n+         -----------------------\n+         -- Possible_DIC_Call --\n+         -----------------------\n+\n+         function Possible_DIC_Call return Node_Id is\n+         begin\n+            --  When the component's type has a Default_Initial_Condition, then\n+            --  create a call for the DIC check.\n+\n+            if Has_DIC (Comp_Type)\n+              --  In GNATprove mode, the component DICs are checked by other\n+              --  means. They should not be added to the record type DIC\n+              --  procedure, so that the procedure can be used to check the\n+              --  record type invariants or DICs if any.\n+\n+              and then not GNATprove_Mode\n+\n+              --  DIC checks for components of controlled types are done later\n+              --  (see Exp_Ch7.Make_Deep_Array_Body).\n+\n+              and then not Is_Controlled (Comp_Type)\n+\n+              and then Present (DIC_Procedure (Comp_Type))\n+\n+              and then not Has_Null_Body (DIC_Procedure (Comp_Type))\n+            then\n+               return\n+                 Build_DIC_Call (Loc,\n+                   Make_Indexed_Component (Loc,\n+                     Prefix      => Make_Identifier (Loc, Name_uInit),\n+                     Expressions => Index_List),\n+                   Comp_Type);\n+            else\n+               return Empty;\n+            end if;\n+         end Possible_DIC_Call;\n+\n+      --  Start of processing for Init_One_Dimension\n \n       begin\n          --  If the component does not need initializing, then there is nothing\n          --  to do here, so we return a null body. This occurs when generating\n          --  the dummy Init_Proc needed for Initialize_Scalars processing.\n+         --  An exception is if component type has a Default_Initial_Condition,\n+         --  in which case we generate a call to the type's DIC procedure.\n \n          if not Has_Non_Null_Base_Init_Proc (Comp_Type)\n            and then not Comp_Simple_Init\n            and then not Has_Task (Comp_Type)\n            and then not Has_Default_Aspect (A_Type)\n+           and then (not Has_DIC (Comp_Type)\n+                      or else N > Number_Dimensions (A_Type))\n          then\n-            return New_List (Make_Null_Statement (Loc));\n+            DIC_Call := Possible_DIC_Call;\n+\n+            if Present (DIC_Call) then\n+               return New_List (DIC_Call);\n+            else\n+               return New_List (Make_Null_Statement (Loc));\n+            end if;\n \n          --  If all dimensions dealt with, we simply initialize the component\n+         --  and append a call to component type's DIC procedure when needed.\n \n          elsif N > Number_Dimensions (A_Type) then\n-            return Init_Component;\n+            DIC_Call := Possible_DIC_Call;\n+\n+            if Present (DIC_Call) then\n+               Result_List := Init_Component;\n+               Append (DIC_Call, Result_List);\n+               return Result_List;\n+\n+            else\n+               return Init_Component;\n+            end if;\n \n          --  Here we generate the required loop\n \n@@ -753,6 +819,7 @@ package body Exp_Ch3 is\n       --    3. Tasks are present\n       --    4. The type is marked as a public entity\n       --    5. The array type has a Default_Component_Value aspect\n+      --    6. The array component type has a Default_Initialization_Condition\n \n       --  The reason for the public entity test is to deal properly with the\n       --  Initialize_Scalars pragma. This pragma can be set in the client and\n@@ -771,7 +838,8 @@ package body Exp_Ch3 is\n       Has_Default_Init := Has_Non_Null_Base_Init_Proc (Comp_Type)\n                             or else Comp_Simple_Init\n                             or else Has_Task (Comp_Type)\n-                            or else Has_Default_Aspect (A_Type);\n+                            or else Has_Default_Aspect (A_Type)\n+                            or else Has_DIC (Comp_Type);\n \n       if Has_Default_Init\n         or else (not Restriction_Active (No_Initialize_Scalars)\n@@ -1945,70 +2013,13 @@ package body Exp_Ch3 is\n          Lhs      : Node_Id;\n          Res      : List_Id;\n \n-         function Replace_Discr_Ref (N : Node_Id) return Traverse_Result;\n-         --  Analysis of the aggregate has replaced discriminants by their\n-         --  corresponding discriminals, but these are irrelevant when the\n-         --  component has a mutable type and is initialized with an aggregate.\n-         --  Instead, they must be replaced by the values supplied in the\n-         --  aggregate, that will be assigned during the expansion of the\n-         --  assignment.\n-\n-         -----------------------\n-         -- Replace_Discr_Ref --\n-         -----------------------\n-\n-         function Replace_Discr_Ref (N : Node_Id) return Traverse_Result is\n-            Val : Node_Id;\n-\n-         begin\n-            if Is_Entity_Name (N)\n-              and then Present (Entity (N))\n-              and then Is_Formal (Entity (N))\n-              and then Present (Discriminal_Link (Entity (N)))\n-            then\n-               Val :=\n-                 Make_Selected_Component (Default_Loc,\n-                   Prefix        => New_Copy_Tree (Lhs),\n-                   Selector_Name =>\n-                     New_Occurrence_Of\n-                       (Discriminal_Link (Entity (N)), Default_Loc));\n-\n-               if Present (Val) then\n-                  Rewrite (N, New_Copy_Tree (Val));\n-               end if;\n-            end if;\n-\n-            return OK;\n-         end Replace_Discr_Ref;\n-\n-         procedure Replace_Discriminant_References is\n-           new Traverse_Proc (Replace_Discr_Ref);\n-\n-      --  Start of processing for Build_Assignment\n-\n       begin\n          Lhs :=\n            Make_Selected_Component (Default_Loc,\n              Prefix        => Make_Identifier (Loc, Name_uInit),\n              Selector_Name => New_Occurrence_Of (Id, Default_Loc));\n          Set_Assignment_OK (Lhs);\n \n-         if Nkind (Exp) = N_Aggregate\n-           and then Has_Discriminants (Typ)\n-           and then not Is_Constrained (Base_Type (Typ))\n-         then\n-            --  The aggregate may provide new values for the discriminants\n-            --  of the component, and other components may depend on those\n-            --  discriminants. Previous analysis of those expressions have\n-            --  replaced the discriminants by the formals of the initialization\n-            --  procedure for the type, but these are irrelevant in the\n-            --  enclosing initialization procedure: those discriminant\n-            --  references must be replaced by the values provided in the\n-            --  aggregate.\n-\n-            Replace_Discriminant_References (Exp);\n-         end if;\n-\n          --  Case of an access attribute applied to the current instance.\n          --  Replace the reference to the type by a reference to the actual\n          --  object. (Note that this handles the case of the top level of\n@@ -3438,6 +3449,38 @@ package body Exp_Ch3 is\n                   Actions := No_List;\n                end if;\n \n+               --  When the component's type has a Default_Initial_Condition,\n+               --  and the component is default initialized, then check the\n+               --  DIC here.\n+\n+               if Has_DIC (Typ)\n+                 and then not Present (Expression (Decl))\n+                 and then Present (DIC_Procedure (Typ))\n+                 and then not Has_Null_Body (DIC_Procedure (Typ))\n+\n+                 --  The DICs of ancestors are checked as part of the type's\n+                 --  DIC procedure.\n+\n+                 and then Chars (Id) /= Name_uParent\n+\n+                 --  In GNATprove mode, the component DICs are checked by other\n+                 --  means. They should not be added to the record type DIC\n+                 --  procedure, so that the procedure can be used to check the\n+                 --  record type invariants or DICs if any.\n+\n+                 and then not GNATprove_Mode\n+               then\n+                  Append_New_To (Actions,\n+                     Build_DIC_Call\n+                       (Comp_Loc,\n+                        Make_Selected_Component (Comp_Loc,\n+                          Prefix        =>\n+                            Make_Identifier (Comp_Loc, Name_uInit),\n+                          Selector_Name =>\n+                            New_Occurrence_Of (Id, Comp_Loc)),\n+                        Typ));\n+               end if;\n+\n                if Present (Checks) then\n                   if Chars (Id) = Name_uParent then\n                      Append_List_To (Parent_Stmts, Checks);\n@@ -7403,12 +7446,12 @@ package body Exp_Ch3 is\n \n                --  If we cannot convert the expression into a renaming we must\n                --  consider it an internal error because the backend does not\n-               --  have support to handle it. Also, when a raise expression is\n-               --  encountered we ignore it since it doesn't return a value and\n-               --  thus cannot trigger a copy.\n+               --  have support to handle it. But avoid crashing on a raise\n+               --  expression or conditional expression.\n \n-               elsif Nkind (Original_Node (Expr_Q)) /= N_Raise_Expression then\n-                  pragma Assert (False);\n+               elsif Nkind (Original_Node (Expr_Q)) not in\n+                 N_Raise_Expression | N_If_Expression | N_Case_Expression\n+               then\n                   raise Program_Error;\n                end if;\n \n@@ -7552,12 +7595,14 @@ package body Exp_Ch3 is\n       if Comes_From_Source (Def_Id)\n         and then Has_DIC (Typ)\n         and then Present (DIC_Procedure (Typ))\n+        and then not Has_Null_Body (DIC_Procedure (Typ))\n         and then not Has_Init_Expression (N)\n         and then not Is_Imported (Def_Id)\n       then\n          declare\n-            DIC_Call : constant Node_Id := Build_DIC_Call (Loc, Def_Id, Typ);\n-\n+            DIC_Call : constant Node_Id :=\n+                         Build_DIC_Call\n+                           (Loc, New_Occurrence_Of (Def_Id, Loc), Typ);\n          begin\n             if Present (Next_N) then\n                Insert_Before_And_Analyze (Next_N, DIC_Call);\n@@ -8331,13 +8376,6 @@ package body Exp_Ch3 is\n       Process_Pending_Access_Types (Def_Id);\n       Freeze_Stream_Operations (N, Def_Id);\n \n-      --  Generate the [spec and] body of the procedure tasked with the runtime\n-      --  verification of pragma Default_Initial_Condition's expression.\n-\n-      if Has_DIC (Def_Id) then\n-         Build_DIC_Procedure_Body (Def_Id, For_Freeze => True);\n-      end if;\n-\n       --  Generate the [spec and] body of the invariant procedure tasked with\n       --  the runtime verification of all invariants that pertain to the type.\n       --  This includes invariants on the partial and full view, inherited\n@@ -8363,14 +8401,24 @@ package body Exp_Ch3 is\n       --  subprograms, which may involve local declarations of local\n       --  subtypes to which these checks do not apply.\n \n-      elsif Has_Invariants (Def_Id) then\n-         if not Predicate_Check_In_Scope (Def_Id)\n-           or else (Ekind (Current_Scope) = E_Function\n-                     and then Is_Predicate_Function (Current_Scope))\n-         then\n-            null;\n-         else\n-            Build_Invariant_Procedure_Body (Def_Id);\n+      else\n+         if Has_Invariants (Def_Id) then\n+            if not Predicate_Check_In_Scope (Def_Id)\n+              or else (Ekind (Current_Scope) = E_Function\n+                        and then Is_Predicate_Function (Current_Scope))\n+            then\n+               null;\n+            else\n+               Build_Invariant_Procedure_Body (Def_Id);\n+            end if;\n+         end if;\n+\n+         --  Generate the [spec and] body of the procedure tasked with the\n+         --  run-time verification of pragma Default_Initial_Condition's\n+         --  expression.\n+\n+         if Has_DIC (Def_Id) then\n+            Build_DIC_Procedure_Body (Def_Id);\n          end if;\n       end if;\n \n@@ -8976,13 +9024,13 @@ package body Exp_Ch3 is\n \n                if Warning_Needed then\n                   Error_Msg_N\n-                    (\"Objects of the type cannot be initialized statically \"\n+                    (\"objects of the type cannot be initialized statically \"\n                      & \"by default??\", Parent (E));\n                end if;\n             end if;\n \n          else\n-            Error_Msg_N (\"Object cannot be initialized statically??\", E);\n+            Error_Msg_N (\"object cannot be initialized statically??\", E);\n          end if;\n       end if;\n    end Initialization_Warning;"}, {"sha": "04bd1fe0dba3a591c1756000e8a1b4858142f8f6", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 214, "deletions": 116, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -2183,21 +2183,54 @@ package body Exp_Ch4 is\n          then\n             return;\n          else\n-\n             Func_Body := Make_Boolean_Array_Op (Etype (L), N);\n             Func_Name := Defining_Unit_Name (Specification (Func_Body));\n             Insert_Action (N, Func_Body);\n \n             --  Now rewrite the expression with a call\n \n-            Rewrite (N,\n-              Make_Function_Call (Loc,\n-                Name                   => New_Occurrence_Of (Func_Name, Loc),\n-                Parameter_Associations =>\n-                  New_List (\n-                    L,\n-                    Make_Type_Conversion\n-                      (Loc, New_Occurrence_Of (Etype (L), Loc), R))));\n+            if Transform_Function_Array then\n+               declare\n+                  Temp_Id : constant Entity_Id := Make_Temporary (Loc, 'T');\n+                  Call    : Node_Id;\n+                  Decl    : Node_Id;\n+\n+               begin\n+                  --  Generate:\n+                  --    Temp : ...;\n+\n+                  Decl :=\n+                    Make_Object_Declaration (Loc,\n+                      Defining_Identifier => Temp_Id,\n+                      Object_Definition   =>\n+                        New_Occurrence_Of (Etype (L), Loc));\n+\n+                  --  Generate:\n+                  --    Proc_Call (L, R, Temp);\n+\n+                  Call :=\n+                    Make_Procedure_Call_Statement (Loc,\n+                      Name => New_Occurrence_Of (Func_Name, Loc),\n+                      Parameter_Associations =>\n+                        New_List (\n+                          L,\n+                          Make_Type_Conversion\n+                            (Loc, New_Occurrence_Of (Etype (L), Loc), R),\n+                          New_Occurrence_Of (Temp_Id, Loc)));\n+\n+                  Insert_Actions (Parent (N), New_List (Decl, Call));\n+                  Rewrite (N, New_Occurrence_Of (Temp_Id, Loc));\n+               end;\n+            else\n+               Rewrite (N,\n+                 Make_Function_Call (Loc,\n+                   Name => New_Occurrence_Of (Func_Name, Loc),\n+                   Parameter_Associations =>\n+                     New_List (\n+                       L,\n+                       Make_Type_Conversion\n+                         (Loc, New_Occurrence_Of (Etype (L), Loc), R))));\n+            end if;\n \n             Analyze_And_Resolve (N, Typ);\n          end if;\n@@ -5355,6 +5388,24 @@ package body Exp_Ch4 is\n \n                Rewrite (N, New_Occurrence_Of (Temp, Loc));\n                Analyze_And_Resolve (N, PtrT);\n+\n+               --  When designated type has Default_Initial_Condition aspects,\n+               --  make a call to the type's DIC procedure to perform the\n+               --  checks. Theoretically this might also be needed for cases\n+               --  where the type doesn't have an init proc, but those should\n+               --  be very uncommon, and for now we only support the init proc\n+               --  case. ???\n+\n+               if Has_DIC (Dtyp)\n+                 and then Present (DIC_Procedure (Dtyp))\n+                 and then not Has_Null_Body (DIC_Procedure (Dtyp))\n+               then\n+                  Insert_Action (N,\n+                                 Build_DIC_Call (Loc,\n+                                   Make_Explicit_Dereference (Loc,\n+                                     Prefix => New_Occurrence_Of (Temp, Loc)),\n+                                 Dtyp));\n+               end if;\n             end if;\n          end if;\n       end;\n@@ -9998,12 +10049,21 @@ package body Exp_Ch4 is\n    --       return B;\n    --     end Nnnn;\n \n+   --  or in the case of Transform_Function_Array:\n+\n+   --     procedure Nnnn (A : arr; RESULT : out arr) is\n+   --     begin\n+   --       for J in a'range loop\n+   --          RESULT (J) := not A (J);\n+   --       end loop;\n+   --     end Nnnn;\n+\n    --  Here arr is the actual subtype of the parameter (and hence always\n-   --  constrained). Then we replace the not with a call to this function.\n+   --  constrained). Then we replace the not with a call to this subprogram.\n \n    procedure Expand_N_Op_Not (N : Node_Id) is\n       Loc  : constant Source_Ptr := Sloc (N);\n-      Typ  : constant Entity_Id  := Etype (N);\n+      Typ  : constant Entity_Id  := Etype (Right_Opnd (N));\n       Opnd : Node_Id;\n       Arr  : Entity_Id;\n       A    : Entity_Id;\n@@ -10099,7 +10159,13 @@ package body Exp_Ch4 is\n       end if;\n \n       A := Make_Defining_Identifier (Loc, Name_uA);\n-      B := Make_Defining_Identifier (Loc, Name_uB);\n+\n+      if Transform_Function_Array then\n+         B := Make_Defining_Identifier (Loc, Name_UP_RESULT);\n+      else\n+         B := Make_Defining_Identifier (Loc, Name_uB);\n+      end if;\n+\n       J := Make_Defining_Identifier (Loc, Name_uJ);\n \n       A_J :=\n@@ -10134,33 +10200,82 @@ package body Exp_Ch4 is\n       Func_Name := Make_Temporary (Loc, 'N');\n       Set_Is_Inlined (Func_Name);\n \n-      Insert_Action (N,\n-        Make_Subprogram_Body (Loc,\n-          Specification =>\n-            Make_Function_Specification (Loc,\n-              Defining_Unit_Name => Func_Name,\n-              Parameter_Specifications => New_List (\n-                Make_Parameter_Specification (Loc,\n-                  Defining_Identifier => A,\n-                  Parameter_Type      => New_Occurrence_Of (Typ, Loc))),\n-              Result_Definition => New_Occurrence_Of (Typ, Loc)),\n+      if Transform_Function_Array then\n+         Insert_Action (N,\n+           Make_Subprogram_Body (Loc,\n+             Specification =>\n+               Make_Procedure_Specification (Loc,\n+                 Defining_Unit_Name => Func_Name,\n+                 Parameter_Specifications => New_List (\n+                   Make_Parameter_Specification (Loc,\n+                     Defining_Identifier => A,\n+                     Parameter_Type      => New_Occurrence_Of (Typ, Loc)),\n+                   Make_Parameter_Specification (Loc,\n+                     Defining_Identifier => B,\n+                     Out_Present         => True,\n+                     Parameter_Type      => New_Occurrence_Of (Typ, Loc)))),\n+\n+             Declarations => New_List,\n+\n+             Handled_Statement_Sequence =>\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                 Statements => New_List (Loop_Statement))));\n \n-          Declarations => New_List (\n-            Make_Object_Declaration (Loc,\n-              Defining_Identifier => B,\n-              Object_Definition   => New_Occurrence_Of (Arr, Loc))),\n+         declare\n+            Temp_Id : constant Entity_Id := Make_Temporary (Loc, 'T');\n+            Call    : Node_Id;\n+            Decl    : Node_Id;\n \n-          Handled_Statement_Sequence =>\n-            Make_Handled_Sequence_Of_Statements (Loc,\n-              Statements => New_List (\n-                Loop_Statement,\n-                Make_Simple_Return_Statement (Loc,\n-                  Expression => Make_Identifier (Loc, Chars (B)))))));\n+         begin\n+            --  Generate:\n+            --    Temp : ...;\n \n-      Rewrite (N,\n-        Make_Function_Call (Loc,\n-          Name                   => New_Occurrence_Of (Func_Name, Loc),\n-          Parameter_Associations => New_List (Opnd)));\n+            Decl :=\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Temp_Id,\n+                Object_Definition   => New_Occurrence_Of (Typ, Loc));\n+\n+            --  Generate:\n+            --    Proc_Call (Opnd, Temp);\n+\n+            Call :=\n+              Make_Procedure_Call_Statement (Loc,\n+                Name => New_Occurrence_Of (Func_Name, Loc),\n+                Parameter_Associations =>\n+                  New_List (Opnd, New_Occurrence_Of (Temp_Id, Loc)));\n+\n+            Insert_Actions (Parent (N), New_List (Decl, Call));\n+            Rewrite (N, New_Occurrence_Of (Temp_Id, Loc));\n+         end;\n+      else\n+         Insert_Action (N,\n+           Make_Subprogram_Body (Loc,\n+             Specification =>\n+               Make_Function_Specification (Loc,\n+                 Defining_Unit_Name => Func_Name,\n+                 Parameter_Specifications => New_List (\n+                   Make_Parameter_Specification (Loc,\n+                     Defining_Identifier => A,\n+                     Parameter_Type      => New_Occurrence_Of (Typ, Loc))),\n+                 Result_Definition => New_Occurrence_Of (Typ, Loc)),\n+\n+             Declarations => New_List (\n+               Make_Object_Declaration (Loc,\n+                 Defining_Identifier => B,\n+                 Object_Definition   => New_Occurrence_Of (Arr, Loc))),\n+\n+             Handled_Statement_Sequence =>\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                 Statements => New_List (\n+                   Loop_Statement,\n+                   Make_Simple_Return_Statement (Loc,\n+                     Expression => Make_Identifier (Loc, Chars (B)))))));\n+\n+         Rewrite (N,\n+           Make_Function_Call (Loc,\n+             Name                   => New_Occurrence_Of (Func_Name, Loc),\n+             Parameter_Associations => New_List (Opnd)));\n+      end if;\n \n       Analyze_And_Resolve (N, Typ);\n    end Expand_N_Op_Not;\n@@ -11047,7 +11162,7 @@ package body Exp_Ch4 is\n                   --  because the selected component may be a reference to the\n                   --  object being initialized, whose discriminant is not yet\n                   --  set. This only happens in complex cases involving changes\n-                  --  or representation.\n+                  --  of representation.\n \n                   if Disc = Entity (Selector_Name (N))\n                     and then (Is_Entity_Name (Dval)\n@@ -11059,15 +11174,7 @@ package body Exp_Ch4 is\n                      --  constrained by an outer discriminant, which cannot\n                      --  be optimized away.\n \n-                     if Denotes_Discriminant\n-                          (Dval, Check_Concurrent => True)\n-                     then\n-                        exit Discr_Loop;\n-\n-                     elsif Nkind (Original_Node (Dval)) = N_Selected_Component\n-                       and then\n-                         Denotes_Discriminant\n-                           (Selector_Name (Original_Node (Dval)), True)\n+                     if Denotes_Discriminant (Dval, Check_Concurrent => True)\n                      then\n                         exit Discr_Loop;\n \n@@ -12441,9 +12548,9 @@ package body Exp_Ch4 is\n            and then Nkind (Parent (N)) = N_Attribute_Reference\n            and then Attribute_Name (Parent (N)) = Name_Round\n          then\n-            Set_Rounded_Result (N);\n             Set_Etype (N, Etype (Parent (N)));\n             Target_Type := Etype (N);\n+            Set_Rounded_Result (N);\n          end if;\n \n          if Is_Fixed_Point_Type (Target_Type) then\n@@ -12700,56 +12807,6 @@ package body Exp_Ch4 is\n          return;\n       end if;\n \n-      --  If we have a conversion of a compile time known value to a target\n-      --  type and the value is in range of the target type, then we can simply\n-      --  replace the construct by an integer literal of the correct type. We\n-      --  only apply this to discrete types being converted. Possibly it may\n-      --  apply in other cases, but it is too much trouble to worry about.\n-\n-      --  Note that we do not do this transformation if the Kill_Range_Check\n-      --  flag is set, since then the value may be outside the expected range.\n-      --  This happens in the Normalize_Scalars case.\n-\n-      --  We also skip this if either the target or operand type is biased\n-      --  because in this case, the unchecked conversion is supposed to\n-      --  preserve the bit pattern, not the integer value.\n-\n-      if Is_Integer_Type (Target_Type)\n-        and then not Has_Biased_Representation (Target_Type)\n-        and then Is_Discrete_Type (Operand_Type)\n-        and then not Has_Biased_Representation (Operand_Type)\n-        and then Compile_Time_Known_Value (Operand)\n-        and then not Kill_Range_Check (N)\n-      then\n-         declare\n-            Val : constant Uint := Expr_Rep_Value (Operand);\n-\n-         begin\n-            if Compile_Time_Known_Value (Type_Low_Bound (Target_Type))\n-                 and then\n-               Compile_Time_Known_Value (Type_High_Bound (Target_Type))\n-                 and then\n-               Val >= Expr_Value (Type_Low_Bound (Target_Type))\n-                 and then\n-               Val <= Expr_Value (Type_High_Bound (Target_Type))\n-            then\n-               Rewrite (N, Make_Integer_Literal (Sloc (N), Val));\n-\n-               --  If Address is the target type, just set the type to avoid a\n-               --  spurious type error on the literal when Address is a visible\n-               --  integer type.\n-\n-               if Is_Descendant_Of_Address (Target_Type) then\n-                  Set_Etype (N, Target_Type);\n-               else\n-                  Analyze_And_Resolve (N, Target_Type);\n-               end if;\n-\n-               return;\n-            end if;\n-         end;\n-      end if;\n-\n       --  Generate an extra temporary for cases unsupported by the C backend\n \n       if Modify_Tree_For_C then\n@@ -13260,7 +13317,8 @@ package body Exp_Ch4 is\n       --  will be to universal real, and our real type comes from the Round\n       --  attribute (as well as an indication that we must round the result)\n \n-      if Nkind (Parent (Conv)) = N_Attribute_Reference\n+      if Etype (Conv) = Universal_Real\n+        and then Nkind (Parent (Conv)) = N_Attribute_Reference\n         and then Attribute_Name (Parent (Conv)) = Name_Round\n       then\n          Set_Etype (N, Base_Type (Etype (Parent (Conv))));\n@@ -13898,6 +13956,15 @@ package body Exp_Ch4 is\n    --       return C;\n    --    end Annn;\n \n+   --    or in the case of Transform_Function_Array:\n+\n+   --    procedure Annn (A : typ; B: typ; RESULT: out typ) is\n+   --    begin\n+   --       for J in A'range loop\n+   --          RESULT (J) := A (J) op B (J);\n+   --       end loop;\n+   --    end Annn;\n+\n    --  Here typ is the boolean array type\n \n    function Make_Boolean_Array_Op\n@@ -13908,9 +13975,10 @@ package body Exp_Ch4 is\n \n       A : constant Entity_Id := Make_Defining_Identifier (Loc, Name_uA);\n       B : constant Entity_Id := Make_Defining_Identifier (Loc, Name_uB);\n-      C : constant Entity_Id := Make_Defining_Identifier (Loc, Name_uC);\n       J : constant Entity_Id := Make_Defining_Identifier (Loc, Name_uJ);\n \n+      C   : Entity_Id;\n+\n       A_J : Node_Id;\n       B_J : Node_Id;\n       C_J : Node_Id;\n@@ -13922,6 +13990,12 @@ package body Exp_Ch4 is\n       Loop_Statement : Node_Id;\n \n    begin\n+      if Transform_Function_Array then\n+         C := Make_Defining_Identifier (Loc, Name_UP_RESULT);\n+      else\n+         C := Make_Defining_Identifier (Loc, Name_uC);\n+      end if;\n+\n       A_J :=\n         Make_Indexed_Component (Loc,\n           Prefix      => New_Occurrence_Of (A, Loc),\n@@ -13984,28 +14058,52 @@ package body Exp_Ch4 is\n           Defining_Identifier => B,\n           Parameter_Type      => New_Occurrence_Of (Typ, Loc)));\n \n+      if Transform_Function_Array then\n+         Append_To (Formals,\n+           Make_Parameter_Specification (Loc,\n+             Defining_Identifier => C,\n+             Out_Present         => True,\n+             Parameter_Type      => New_Occurrence_Of (Typ, Loc)));\n+      end if;\n+\n       Func_Name := Make_Temporary (Loc, 'A');\n       Set_Is_Inlined (Func_Name);\n \n-      Func_Body :=\n-        Make_Subprogram_Body (Loc,\n-          Specification =>\n-            Make_Function_Specification (Loc,\n-              Defining_Unit_Name       => Func_Name,\n-              Parameter_Specifications => Formals,\n-              Result_Definition        => New_Occurrence_Of (Typ, Loc)),\n+      if Transform_Function_Array then\n+         Func_Body :=\n+           Make_Subprogram_Body (Loc,\n+             Specification =>\n+               Make_Procedure_Specification (Loc,\n+                 Defining_Unit_Name       => Func_Name,\n+                 Parameter_Specifications => Formals),\n \n-          Declarations => New_List (\n-            Make_Object_Declaration (Loc,\n-              Defining_Identifier => C,\n-              Object_Definition   => New_Occurrence_Of (Typ, Loc))),\n+             Declarations => New_List,\n \n-          Handled_Statement_Sequence =>\n-            Make_Handled_Sequence_Of_Statements (Loc,\n-              Statements => New_List (\n-                Loop_Statement,\n-                Make_Simple_Return_Statement (Loc,\n-                  Expression => New_Occurrence_Of (C, Loc)))));\n+             Handled_Statement_Sequence =>\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                 Statements => New_List (Loop_Statement)));\n+\n+      else\n+         Func_Body :=\n+           Make_Subprogram_Body (Loc,\n+             Specification =>\n+               Make_Function_Specification (Loc,\n+                 Defining_Unit_Name       => Func_Name,\n+                 Parameter_Specifications => Formals,\n+                 Result_Definition        => New_Occurrence_Of (Typ, Loc)),\n+\n+             Declarations => New_List (\n+               Make_Object_Declaration (Loc,\n+                 Defining_Identifier => C,\n+                 Object_Definition   => New_Occurrence_Of (Typ, Loc))),\n+\n+             Handled_Statement_Sequence =>\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                 Statements => New_List (\n+                   Loop_Statement,\n+                   Make_Simple_Return_Statement (Loc,\n+                     Expression => New_Occurrence_Of (C, Loc)))));\n+      end if;\n \n       return Func_Body;\n    end Make_Boolean_Array_Op;"}, {"sha": "4cae2ee8d3f8b860ce0c8f4df39e325d766ffb44", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 52, "deletions": 22, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1469,7 +1469,7 @@ package body Exp_Ch5 is\n       --  there are volatile or independent components. If the Prefix of the\n       --  slice is a component or slice, then it might be a part of an object\n       --  with some other volatile or independent components, so we disable the\n-      --  optimization in that case as well.  We could complicate this code by\n+      --  optimization in that case as well. We could complicate this code by\n       --  actually looking for such volatile and independent components.\n \n       if Is_Bit_Packed_Array (L_Type)\n@@ -1623,14 +1623,27 @@ package body Exp_Ch5 is\n             CI : constant List_Id := Component_Items (CL);\n             VP : constant Node_Id := Variant_Part (CL);\n \n-            Alts   : List_Id;\n-            DC     : Node_Id;\n-            DCH    : List_Id;\n-            Expr   : Node_Id;\n-            Result : List_Id;\n-            V      : Node_Id;\n+            Constrained_Typ : Entity_Id;\n+            Alts            : List_Id;\n+            DC              : Node_Id;\n+            DCH             : List_Id;\n+            Expr            : Node_Id;\n+            Result          : List_Id;\n+            V               : Node_Id;\n \n          begin\n+            --  Try to find a constrained type to extract discriminant values\n+            --  from, so that the case statement built below gets an\n+            --  opportunity to be folded by Expand_N_Case_Statement.\n+\n+            if U_U or else Is_Constrained (Etype (Rhs)) then\n+               Constrained_Typ := Etype (Rhs);\n+            elsif Is_Constrained (Etype (Expression (N))) then\n+               Constrained_Typ := Etype (Expression (N));\n+            else\n+               Constrained_Typ := Empty;\n+            end if;\n+\n             Result := Make_Field_Assigns (CI);\n \n             if Present (VP) then\n@@ -1652,17 +1665,12 @@ package body Exp_Ch5 is\n                   Next_Non_Pragma (V);\n                end loop;\n \n-               --  If we have an Unchecked_Union, use the value of the inferred\n-               --  discriminant of the variant part expression as the switch\n-               --  for the case statement. The case statement may later be\n-               --  folded.\n-\n-               if U_U then\n+               if Present (Constrained_Typ) then\n                   Expr :=\n                     New_Copy (Get_Discriminant_Value (\n                       Entity (Name (VP)),\n-                      Etype (Rhs),\n-                      Discriminant_Constraint (Etype (Rhs))));\n+                      Constrained_Typ,\n+                      Discriminant_Constraint (Constrained_Typ)));\n                else\n                   Expr :=\n                     Make_Selected_Component (Loc,\n@@ -1786,9 +1794,10 @@ package body Exp_Ch5 is\n       --  Start of processing for Expand_Assign_Record\n \n       begin\n-         --  Note that we use the base types for this processing. This results\n-         --  in some extra work in the constrained case, but the change of\n-         --  representation case is so unusual that it is not worth the effort.\n+         --  Note that we need to use the base types for this processing in\n+         --  order to retrieve the Type_Definition. In the constrained case,\n+         --  we filter out the non relevant fields in\n+         --  Make_Component_List_Assign.\n \n          --  First copy the discriminants. This is done unconditionally. It\n          --  is required in the unconstrained left side case, and also in the\n@@ -1824,7 +1833,7 @@ package body Exp_Ch5 is\n                      CF := F;\n                   end if;\n \n-                  if Is_Unchecked_Union (Base_Type (R_Typ)) then\n+                  if Is_Unchecked_Union (R_Typ) then\n \n                      --  Within an initialization procedure this is the\n                      --  assignment to an unchecked union component, in which\n@@ -1916,8 +1925,8 @@ package body Exp_Ch5 is\n                Insert_Actions (N,\n                  Make_Component_List_Assign (Component_List (RDef), True));\n             else\n-               Insert_Actions\n-                 (N, Make_Component_List_Assign (Component_List (RDef)));\n+               Insert_Actions (N,\n+                 Make_Component_List_Assign (Component_List (RDef)));\n             end if;\n \n             Rewrite (N, Make_Null_Statement (Loc));\n@@ -4346,10 +4355,21 @@ package body Exp_Ch5 is\n             Iter_Pack := Scope (Root_Type (Etype (Iter_Type)));\n \n             --  Find declarations needed for \"for ... of\" optimization\n+            --  These declarations come from GNAT sources or sources\n+            --  derived from them. User code may include additional\n+            --  overloadings with similar names, and we need to perforn\n+            --  some reasonable resolution to find the needed primitives.\n+            --  It is unclear whether this mechanism is fragile if a user\n+            --  makes arbitrary changes to the private part of a package\n+            --  that supports iterators.\n \n             Ent := First_Entity (Pack);\n             while Present (Ent) loop\n-               if Chars (Ent) = Name_Get_Element_Access then\n+               if Chars (Ent) = Name_Get_Element_Access\n+                 and then Present (First_Formal (Ent))\n+                 and then Chars (First_Formal (Ent)) = Name_Position\n+                 and then No (Next_Formal (First_Formal (Ent)))\n+               then\n                   Fast_Element_Access_Op := Ent;\n \n                elsif Chars (Ent) = Name_Step\n@@ -4670,6 +4690,16 @@ package body Exp_Ch5 is\n             New_Id  : Entity_Id;\n \n          begin\n+            --  If Discrete_Subtype_Definition has been rewritten as an\n+            --  N_Raise_xxx_Error, rewrite the whole loop as a raise node to\n+            --  avoid confusing the code generator down the line.\n+\n+            if Nkind (Discrete_Subtype_Definition (LPS)) in N_Raise_xxx_Error\n+            then\n+               Rewrite (N, Discrete_Subtype_Definition (LPS));\n+               return;\n+            end if;\n+\n             if Present (Iterator_Filter (LPS)) then\n                pragma Assert (Ada_Version >= Ada_2020);\n                Set_Statements (N,"}, {"sha": "2cd40e42f47a2a5a1355cfa63cbc48657d175d34", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 88, "deletions": 24, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -883,9 +883,8 @@ package body Exp_Ch6 is\n    is\n       Loc : constant Source_Ptr := Sloc (Func_Body);\n \n-      Proc_Decl : constant Node_Id   :=\n-                    Next (Unit_Declaration_Node (Func_Id));\n-      --  It is assumed that the next node following the declaration of the\n+      Proc_Decl : constant Node_Id := Prev (Unit_Declaration_Node (Func_Id));\n+      --  It is assumed that the node before the declaration of the\n       --  corresponding subprogram spec is the declaration of the procedure\n       --  form.\n \n@@ -3492,8 +3491,7 @@ package body Exp_Ch6 is\n       --  of the dimension I/O packages.\n \n       if Ada_Version >= Ada_2012\n-        and then\n-           Nkind (Call_Node) in N_Procedure_Call_Statement | N_Function_Call\n+        and then Nkind (Call_Node) in N_Subprogram_Call\n         and then Present (Parameter_Associations (Call_Node))\n       then\n          Expand_Put_Call_With_Symbol (Call_Node);\n@@ -3637,9 +3635,9 @@ package body Exp_Ch6 is\n                --  For internally generated calls ensure that they reference\n                --  the entity of the spec of the called function (needed since\n                --  the expander may generate calls using the entity of their\n-               --  body). See for example Expand_Boolean_Operator().\n+               --  body).\n \n-               if not (Comes_From_Source (Call_Node))\n+               if not Comes_From_Source (Call_Node)\n                  and then Nkind (Unit_Declaration_Node (Func_Id)) =\n                             N_Subprogram_Body\n                then\n@@ -5384,13 +5382,15 @@ package body Exp_Ch6 is\n       end if;\n \n       --  Build a simple_return_statement that returns the return object when\n-      --  there is a statement sequence, or no expression, or the result will\n-      --  be built in place. Note however that we currently do this for all\n-      --  composite cases, even though not all are built in place.\n+      --  there is a statement sequence, or no expression, or the analysis of\n+      --  the return object declaration generated extra actions, or the result\n+      --  will be built in place. Note however that we currently do this for\n+      --  all composite cases, even though they are not built in place.\n \n       if Present (HSS)\n-        or else Is_Composite_Type (Ret_Typ)\n         or else No (Exp)\n+        or else List_Length (Return_Object_Declarations (N)) > 1\n+        or else Is_Composite_Type (Ret_Typ)\n       then\n          if No (HSS) then\n             Stmts := New_List;\n@@ -6058,16 +6058,11 @@ package body Exp_Ch6 is\n             end;\n          end if;\n \n-      --  Case where we do not build a block\n-\n-      else\n-         --  We're about to drop Return_Object_Declarations on the floor, so\n-         --  we need to insert it, in case it got expanded into useful code.\n-         --  Remove side effects from expression, which may be duplicated in\n-         --  subsequent checks (see Expand_Simple_Function_Return).\n+      --  Case where we do not need to build a block. But we're about to drop\n+      --  Return_Object_Declarations on the floor, so assert that it contains\n+      --  only the return object declaration.\n \n-         Insert_List_Before (N, Return_Object_Declarations (N));\n-         Remove_Side_Effects (Exp);\n+      else pragma Assert (List_Length (Return_Object_Declarations (N)) = 1);\n \n          --  Build simple_return_statement that returns the expression directly\n \n@@ -6250,9 +6245,24 @@ package body Exp_Ch6 is\n             --  Call the _Postconditions procedure if the related subprogram\n             --  has contract assertions that need to be verified on exit.\n \n+            --  Also, mark the successful return to signal that postconditions\n+            --  need to be evaluated when finalization occurs.\n+\n             if Ekind (Spec_Id) = E_Procedure\n               and then Present (Postconditions_Proc (Spec_Id))\n             then\n+               --  Generate:\n+               --\n+               --    Return_Success_For_Postcond := True;\n+               --    _postconditions;\n+\n+               Insert_Action (Stmt,\n+                 Make_Assignment_Statement (Loc,\n+                   Name       =>\n+                     New_Occurrence_Of\n+                      (Get_Return_Success_For_Postcond (Spec_Id), Loc),\n+                   Expression => New_Occurrence_Of (Standard_True, Loc)));\n+\n                Insert_Action (Stmt,\n                  Make_Procedure_Call_Statement (Loc,\n                    Name =>\n@@ -6574,6 +6584,7 @@ package body Exp_Ch6 is\n       Prot_Bod  : Node_Id;\n       Prot_Decl : Node_Id;\n       Prot_Id   : Entity_Id;\n+      Typ       : Entity_Id;\n \n    begin\n       --  Deal with case of protected subprogram. Do not generate protected\n@@ -6648,10 +6659,12 @@ package body Exp_Ch6 is\n       --  are not needed by the C generator (and this also produces cleaner\n       --  output).\n \n+      Typ := Get_Fullest_View (Etype (Subp));\n+\n       if Transform_Function_Array\n         and then Nkind (Specification (N)) = N_Function_Specification\n-        and then Is_Array_Type (Etype (Subp))\n-        and then Is_Constrained (Etype (Subp))\n+        and then Is_Array_Type (Typ)\n+        and then Is_Constrained (Typ)\n         and then not Is_Unchecked_Conversion_Instance (Subp)\n       then\n          Build_Procedure_Form (N);\n@@ -6677,9 +6690,24 @@ package body Exp_Ch6 is\n       --  Call the _Postconditions procedure if the related subprogram has\n       --  contract assertions that need to be verified on exit.\n \n+      --  Also, mark the successful return to signal that postconditions need\n+      --  to be evaluated when finalization occurs.\n+\n       if Ekind (Scope_Id) in E_Entry | E_Entry_Family | E_Procedure\n         and then Present (Postconditions_Proc (Scope_Id))\n       then\n+         --  Generate:\n+         --\n+         --    Return_Success_For_Postcond := True;\n+         --    _postconditions;\n+\n+         Insert_Action (N,\n+           Make_Assignment_Statement (Loc,\n+             Name       =>\n+               New_Occurrence_Of\n+                (Get_Return_Success_For_Postcond (Scope_Id), Loc),\n+             Expression => New_Occurrence_Of (Standard_True, Loc)));\n+\n          Insert_Action (N,\n            Make_Procedure_Call_Statement (Loc,\n              Name => New_Occurrence_Of (Postconditions_Proc (Scope_Id), Loc)));\n@@ -7566,6 +7594,41 @@ package body Exp_Ch6 is\n \n          Force_Evaluation (Exp, Mode => Strict);\n \n+         --  Save the return value or a pointer to the return value since we\n+         --  may need to call postconditions after finalization when cleanup\n+         --  actions are present.\n+\n+         --  Generate:\n+         --\n+         --    Result_Object_For_Postcond := [Exp]'Unrestricted_Access;\n+\n+         Insert_Action (Exp,\n+           Make_Assignment_Statement (Loc,\n+             Name       =>\n+               New_Occurrence_Of\n+                (Get_Result_Object_For_Postcond (Scope_Id), Loc),\n+             Expression =>\n+               (if Is_Elementary_Type (Etype (R_Type)) then\n+                   New_Copy_Tree (Exp)\n+                else\n+                   Make_Attribute_Reference (Loc,\n+                     Attribute_Name => Name_Unrestricted_Access,\n+                     Prefix         => New_Copy_Tree (Exp)))));\n+\n+         --  Mark the successful return to signal that postconditions need to\n+         --  be evaluated when finalization occurs.\n+\n+         --  Generate:\n+         --\n+         --    Return_Success_For_Postcond := True;\n+\n+         Insert_Action (Exp,\n+           Make_Assignment_Statement (Loc,\n+             Name       =>\n+               New_Occurrence_Of\n+                (Get_Return_Success_For_Postcond (Scope_Id), Loc),\n+             Expression => New_Occurrence_Of (Standard_True, Loc)));\n+\n          --  Generate call to _Postconditions\n \n          Insert_Action (Exp,\n@@ -8094,6 +8157,7 @@ package body Exp_Ch6 is\n \n                if True then\n                   Result := Is_Controlled (T)\n+                    and then not Is_Generic_Actual_Type (T)\n                     and then Present (Enclosing_Subprogram (T))\n                     and then not Is_Compilation_Unit (Enclosing_Subprogram (T))\n                     and then Ekind (Enclosing_Subprogram (T)) = E_Procedure;\n@@ -9278,7 +9342,7 @@ package body Exp_Ch6 is\n       Tmp_Id    : Entity_Id;\n \n    begin\n-      --  No action of the call has already been processed\n+      --  No action if the call has already been processed\n \n       if Is_Expanded_Build_In_Place_Call (BIP_Func_Call) then\n          return;\n@@ -9953,7 +10017,7 @@ package body Exp_Ch6 is\n    procedure Warn_BIP (Func_Call : Node_Id) is\n    begin\n       if Debug_Flag_Underscore_BB then\n-         Error_Msg_N (\"build-in-place function call?\", Func_Call);\n+         Error_Msg_N (\"build-in-place function call??\", Func_Call);\n       end if;\n    end Warn_BIP;\n "}, {"sha": "5d8ad7d505d6bc7886a9172ab900bbe03caeb14d", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 700, "deletions": 113, "changes": 813, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -27,42 +27,43 @@\n --    - controlled types\n --    - transient scopes\n \n-with Atree;    use Atree;\n-with Debug;    use Debug;\n-with Einfo;    use Einfo;\n-with Elists;   use Elists;\n-with Errout;   use Errout;\n-with Exp_Ch6;  use Exp_Ch6;\n-with Exp_Ch9;  use Exp_Ch9;\n-with Exp_Ch11; use Exp_Ch11;\n-with Exp_Dbug; use Exp_Dbug;\n-with Exp_Dist; use Exp_Dist;\n-with Exp_Disp; use Exp_Disp;\n-with Exp_Prag; use Exp_Prag;\n-with Exp_Tss;  use Exp_Tss;\n-with Exp_Util; use Exp_Util;\n-with Freeze;   use Freeze;\n-with Lib;      use Lib;\n-with Nlists;   use Nlists;\n-with Nmake;    use Nmake;\n-with Opt;      use Opt;\n-with Output;   use Output;\n-with Restrict; use Restrict;\n-with Rident;   use Rident;\n-with Rtsfind;  use Rtsfind;\n-with Sinfo;    use Sinfo;\n-with Sem;      use Sem;\n-with Sem_Aux;  use Sem_Aux;\n-with Sem_Ch3;  use Sem_Ch3;\n-with Sem_Ch7;  use Sem_Ch7;\n-with Sem_Ch8;  use Sem_Ch8;\n-with Sem_Res;  use Sem_Res;\n-with Sem_Util; use Sem_Util;\n-with Snames;   use Snames;\n-with Stand;    use Stand;\n-with Tbuild;   use Tbuild;\n-with Ttypes;   use Ttypes;\n-with Uintp;    use Uintp;\n+with Atree;     use Atree;\n+with Contracts; use Contracts;\n+with Debug;     use Debug;\n+with Einfo;     use Einfo;\n+with Elists;    use Elists;\n+with Errout;    use Errout;\n+with Exp_Ch6;   use Exp_Ch6;\n+with Exp_Ch9;   use Exp_Ch9;\n+with Exp_Ch11;  use Exp_Ch11;\n+with Exp_Dbug;  use Exp_Dbug;\n+with Exp_Dist;  use Exp_Dist;\n+with Exp_Disp;  use Exp_Disp;\n+with Exp_Prag;  use Exp_Prag;\n+with Exp_Tss;   use Exp_Tss;\n+with Exp_Util;  use Exp_Util;\n+with Freeze;    use Freeze;\n+with Lib;       use Lib;\n+with Nlists;    use Nlists;\n+with Nmake;     use Nmake;\n+with Opt;       use Opt;\n+with Output;    use Output;\n+with Restrict;  use Restrict;\n+with Rident;    use Rident;\n+with Rtsfind;   use Rtsfind;\n+with Sinfo;     use Sinfo;\n+with Sem;       use Sem;\n+with Sem_Aux;   use Sem_Aux;\n+with Sem_Ch3;   use Sem_Ch3;\n+with Sem_Ch7;   use Sem_Ch7;\n+with Sem_Ch8;   use Sem_Ch8;\n+with Sem_Res;   use Sem_Res;\n+with Sem_Util;  use Sem_Util;\n+with Snames;    use Snames;\n+with Stand;     use Stand;\n+with Tbuild;    use Tbuild;\n+with Ttypes;    use Ttypes;\n+with Uintp;     use Uintp;\n \n package body Exp_Ch7 is\n \n@@ -339,6 +340,17 @@ package body Exp_Ch7 is\n    --  such as for task termination. Fin_Id is the finalizer declaration\n    --  entity.\n \n+   procedure Build_Finalizer_Helper\n+     (N                 : Node_Id;\n+      Clean_Stmts       : List_Id;\n+      Mark_Id           : Entity_Id;\n+      Top_Decls         : List_Id;\n+      Defer_Abort       : Boolean;\n+      Fin_Id            : out Entity_Id;\n+      Finalize_Old_Only : Boolean);\n+   --  An internal routine which does all of the heavy lifting on behalf of\n+   --  Build_Finalizer.\n+\n    procedure Build_Finalizer_Call (N : Node_Id; Fin_Id : Entity_Id);\n    --  N is a construct which contains a handled sequence of statements, Fin_Id\n    --  is the entity of a finalizer. Create an At_End handler which covers the\n@@ -1397,20 +1409,32 @@ package body Exp_Ch7 is\n          else\n             Append_Freeze_Actions (Ptr_Typ, Actions);\n          end if;\n+\n+         Analyze_List (Actions);\n+\n+         --  When the type the finalization master is being generated for was\n+         --  created to store a 'Old object, then mark it as such so its\n+         --  finalization can be delayed until after postconditions have been\n+         --  checked.\n+\n+         if Stores_Attribute_Old_Prefix (Ptr_Typ) then\n+            Set_Stores_Attribute_Old_Prefix (Fin_Mas_Id);\n+         end if;\n       end;\n    end Build_Finalization_Master;\n \n-   ---------------------\n-   -- Build_Finalizer --\n-   ---------------------\n+   ----------------------------\n+   -- Build_Finalizer_Helper --\n+   ----------------------------\n \n-   procedure Build_Finalizer\n+   procedure Build_Finalizer_Helper\n      (N                 : Node_Id;\n       Clean_Stmts       : List_Id;\n       Mark_Id           : Entity_Id;\n       Top_Decls         : List_Id;\n       Defer_Abort       : Boolean;\n-      Fin_Id            : out Entity_Id)\n+      Fin_Id            : out Entity_Id;\n+      Finalize_Old_Only : Boolean)\n    is\n       Acts_As_Clean    : constant Boolean :=\n                            Present (Mark_Id)\n@@ -1746,9 +1770,20 @@ package body Exp_Ch7 is\n          --  The default name is _finalizer\n \n          else\n-            Fin_Id :=\n-              Make_Defining_Identifier (Loc,\n-                Chars => New_External_Name (Name_uFinalizer));\n+            --  Generation of a finalization procedure exclusively for 'Old\n+            --  interally generated constants requires different name since\n+            --  there will need to be multiple finalization routines in the\n+            --  same scope. See Build_Finalizer for details.\n+\n+            if Finalize_Old_Only then\n+               Fin_Id :=\n+                 Make_Defining_Identifier (Loc,\n+                   Chars => New_External_Name (Name_uFinalizer_Old));\n+            else\n+               Fin_Id :=\n+                 Make_Defining_Identifier (Loc,\n+                   Chars => New_External_Name (Name_uFinalizer));\n+            end if;\n \n             --  The visibility semantics of AT_END handlers force a strange\n             --  separation of spec and body for stack-related finalizers:\n@@ -2051,8 +2086,26 @@ package body Exp_Ch7 is\n \n             pragma Assert (Present (Spec_Decls));\n \n-            Append_To (Spec_Decls, Fin_Spec);\n-            Analyze (Fin_Spec);\n+            --  It maybe possible that we are finalizing 'Old objects which\n+            --  exist in the spec declarations. When this is the case the\n+            --  Finalizer_Insert_Node will come before the end of the\n+            --  Spec_Decls. So, to mitigate this, we insert the finalizer spec\n+            --  earlier at the Finalizer_Insert_Nod instead of appending to the\n+            --  end of Spec_Decls to prevent its body appearing before its\n+            --  corresponding spec.\n+\n+            if Present (Finalizer_Insert_Nod)\n+              and then List_Containing (Finalizer_Insert_Nod) = Spec_Decls\n+            then\n+               Insert_After_And_Analyze (Finalizer_Insert_Nod, Fin_Spec);\n+               Finalizer_Insert_Nod := Fin_Spec;\n+\n+            --  Otherwise, Finalizer_Insert_Nod is not in Spec_Decls\n+\n+            else\n+               Append_To (Spec_Decls, Fin_Spec);\n+               Analyze (Fin_Spec);\n+            end if;\n \n             --  When the finalizer acts solely as a cleanup routine, the body\n             --  is inserted right after the spec.\n@@ -2194,9 +2247,26 @@ package body Exp_Ch7 is\n \n          Decl := Last_Non_Pragma (Decls);\n          while Present (Decl) loop\n+            --  Depending on the value of flag Finalize_Old_Only we determine\n+            --  which objects get finalized as part of the current finalizer\n+            --  being built.\n+\n+            --  When True, only temporaries capturing the value of attribute\n+            --  'Old are finalized and all other cases are ignored.\n+\n+            --  When False, temporary objects used to capture the value of 'Old\n+            --  are ignored and all others are considered.\n+\n+            if Finalize_Old_Only\n+                 xor (Nkind (Decl) = N_Object_Declaration\n+                       and then Stores_Attribute_Old_Prefix\n+                                  (Defining_Identifier (Decl)))\n+            then\n+               null;\n+\n             --  Library-level tagged types\n \n-            if Nkind (Decl) = N_Full_Type_Declaration then\n+            elsif Nkind (Decl) = N_Full_Type_Declaration then\n                Typ := Defining_Identifier (Decl);\n \n                --  Ignored Ghost types do not need any cleanup actions because\n@@ -3409,7 +3479,7 @@ package body Exp_Ch7 is\n                New_Occurrence_Of (DT_Ptr, Loc))));\n       end Process_Tagged_Type_Declaration;\n \n-   --  Start of processing for Build_Finalizer\n+   --  Start of processing for Build_Finalizer_Helper\n \n    begin\n       Fin_Id := Empty;\n@@ -3559,7 +3629,7 @@ package body Exp_Ch7 is\n       if Acts_As_Clean or else Has_Ctrl_Objs or else Has_Tagged_Types then\n          Create_Finalizer;\n       end if;\n-   end Build_Finalizer;\n+   end Build_Finalizer_Helper;\n \n    --------------------------\n    -- Build_Finalizer_Call --\n@@ -3642,6 +3712,468 @@ package body Exp_Ch7 is\n       Expand_At_End_Handler (HSS, Empty);\n    end Build_Finalizer_Call;\n \n+   ---------------------\n+   -- Build_Finalizer --\n+   ---------------------\n+\n+   procedure Build_Finalizer\n+     (N           : Node_Id;\n+      Clean_Stmts : List_Id;\n+      Mark_Id     : Entity_Id;\n+      Top_Decls   : List_Id;\n+      Defer_Abort : Boolean;\n+      Fin_Id      : out Entity_Id)\n+   is\n+      Def_Ent : constant Entity_Id  := Unique_Defining_Entity (N);\n+      Loc     : constant Source_Ptr := Sloc (N);\n+\n+      --  Declarations used for the creation of _finalization_controller\n+\n+      Fin_Old_Id           : Entity_Id := Empty;\n+      Fin_Controller_Id    : Entity_Id := Empty;\n+      Fin_Controller_Decls : List_Id;\n+      Fin_Controller_Stmts : List_Id;\n+      Fin_Controller_Body  : Node_Id   := Empty;\n+      Fin_Controller_Spec  : Node_Id   := Empty;\n+      Postconditions_Call  : Node_Id   := Empty;\n+\n+      --  Defining identifiers for local objects used to store exception info\n+\n+      Raised_Post_Exception_Id         : Entity_Id := Empty;\n+      Raised_Finalization_Exception_Id : Entity_Id := Empty;\n+      Saved_Exception_Id               : Entity_Id := Empty;\n+\n+   --  Start of processing for Build_Finalizer\n+\n+   begin\n+      --  Create the general finalization routine\n+\n+      Build_Finalizer_Helper\n+        (N                 => N,\n+         Clean_Stmts       => Clean_Stmts,\n+         Mark_Id           => Mark_Id,\n+         Top_Decls         => Top_Decls,\n+         Defer_Abort       => Defer_Abort,\n+         Fin_Id            => Fin_Id,\n+         Finalize_Old_Only => False);\n+\n+      --  When postconditions are present, expansion gets much more complicated\n+      --  due to both the fact that they must be called after finalization and\n+      --  that finalization of 'Old objects must occur after the postconditions\n+      --  get checked.\n+\n+      --  Additionally, exceptions between general finalization and 'Old\n+      --  finalization must be propagated correctly and exceptions which happen\n+      --  during _postconditions need to be saved and reraised after\n+      --  finalization of 'Old objects.\n+\n+      --  Generate:\n+      --\n+      --    Postcond_Enabled := False;\n+      --\n+      --    procedure _finalization_controller is\n+      --\n+      --       --  Exception capturing and tracking\n+      --\n+      --       Saved_Exception               : Exception_Occurrence;\n+      --       Raised_Post_Exception         : Boolean := False;\n+      --       Raised_Finalization_Exception : Boolean := False;\n+      --\n+      --    --  Start of processing for _finalization_controller\n+      --\n+      --    begin\n+      --       --  Perform general finalization\n+      --\n+      --       begin\n+      --          _finalizer;\n+      --       exception\n+      --          when others =>\n+      --             --  Save the exception\n+      --\n+      --             Raised_Finalization_Exception := True;\n+      --             Save_Occurrence\n+      --               (Saved_Exception, Get_Current_Excep.all);\n+      --       end;\n+      --\n+      --       --  Perform postcondition checks after general finalization, but\n+      --       --  before finalization of 'Old related objects.\n+      --\n+      --       if not Raised_Finalization_Exception then\n+      --          begin\n+      --             --  Re-enable postconditions and check them\n+      --\n+      --             Postcond_Enabled := True;\n+      --             _postconditions [(Result_Obj_For_Postcond[.all])];\n+      --          exception\n+      --             when others =>\n+      --                --  Save the exception\n+      --\n+      --                Raised_Post_Exception := True;\n+      --                Save_Occurrence\n+      --                  (Saved_Exception, Get_Current_Excep.all);\n+      --          end;\n+      --       end if;\n+      --\n+      --       --  Finally finalize 'Old related objects\n+      --\n+      --       begin\n+      --          _finalizer_old;\n+      --       exception\n+      --          when others =>\n+      --             --  Reraise the previous finalization error if there is\n+      --             --  one.\n+      --\n+      --             if Raised_Finalization_Exception then\n+      --                Reraise_Occurrence (Saved_Exception);\n+      --             end if;\n+      --\n+      --             --  Otherwise, reraise the current one\n+      --\n+      --             raise;\n+      --       end;\n+      --\n+      --       --  Reraise any saved exception\n+      --\n+      --       if Raised_Finalization_Exception\n+      --            or else Raised_Post_Exception\n+      --       then\n+      --          Reraise_Occurrence (Saved_Exception);\n+      --       end if;\n+      --    end _finalization_controller;\n+\n+      if Nkind (N) = N_Subprogram_Body\n+        and then Present (Postconditions_Proc (Def_Ent))\n+      then\n+         Fin_Controller_Stmts := New_List;\n+         Fin_Controller_Decls := New_List;\n+\n+         --  Build the 'Old finalizer\n+\n+         Build_Finalizer_Helper\n+           (N                 => N,\n+            Clean_Stmts       => Empty_List,\n+            Mark_Id           => Mark_Id,\n+            Top_Decls         => Top_Decls,\n+            Defer_Abort       => Defer_Abort,\n+            Fin_Id            => Fin_Old_Id,\n+            Finalize_Old_Only => True);\n+\n+         --  Create local declarations for _finalization_controller needed for\n+         --  saving exceptions.\n+         --\n+         --  Generate:\n+         --\n+         --    Saved_Exception               : Exception_Occurrence;\n+         --    Raised_Post_Exception         : Boolean := False;\n+         --    Raised_Finalization_Exception : Boolean := False;\n+\n+         Saved_Exception_Id               := Make_Temporary (Loc, 'S');\n+         Raised_Post_Exception_Id         := Make_Temporary (Loc, 'P');\n+         Raised_Finalization_Exception_Id := Make_Temporary (Loc, 'F');\n+\n+         Append_List_To (Fin_Controller_Decls, New_List (\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Saved_Exception_Id,\n+             Object_Definition   =>\n+               New_Occurrence_Of (RTE (RE_Exception_Occurrence), Loc)),\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Raised_Post_Exception_Id,\n+             Object_Definition   => New_Occurrence_Of (Standard_Boolean, Loc),\n+             Expression          => New_Occurrence_Of (Standard_False, Loc)),\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Raised_Finalization_Exception_Id,\n+             Object_Definition   => New_Occurrence_Of (Standard_Boolean, Loc),\n+             Expression          => New_Occurrence_Of (Standard_False, Loc))));\n+\n+         --  Call _finalizer and save any exceptions which occur\n+\n+         --  Generate:\n+         --\n+         --    begin\n+         --       _finalizer;\n+         --    exception\n+         --       when others =>\n+         --          Raised_Finalization_Exception := True;\n+         --          Save_Occurrence\n+         --            (Saved_Exception, Get_Current_Excep.all);\n+         --    end;\n+\n+         if Present (Fin_Id) then\n+            Append_To (Fin_Controller_Stmts,\n+              Make_Block_Statement (Loc,\n+                Handled_Statement_Sequence =>\n+                  Make_Handled_Sequence_Of_Statements (Loc,\n+                    Statements         => New_List (\n+                      Make_Procedure_Call_Statement (Loc,\n+                        Name => New_Occurrence_Of (Fin_Id, Loc))),\n+                    Exception_Handlers => New_List (\n+                      Make_Exception_Handler (Loc,\n+                        Exception_Choices => New_List (\n+                          Make_Others_Choice (Loc)),\n+                        Statements        => New_List (\n+                          Make_Assignment_Statement (Loc,\n+                            Name       =>\n+                              New_Occurrence_Of\n+                                (Raised_Finalization_Exception_Id, Loc),\n+                            Expression =>\n+                              New_Occurrence_Of (Standard_True, Loc)),\n+                          Make_Procedure_Call_Statement (Loc,\n+                             Name                   =>\n+                               New_Occurrence_Of\n+                                 (RTE (RE_Save_Occurrence), Loc),\n+                             Parameter_Associations => New_List (\n+                               New_Occurrence_Of\n+                                 (Saved_Exception_Id, Loc),\n+                               Make_Explicit_Dereference (Loc,\n+                                 Prefix =>\n+                                   Make_Function_Call (Loc,\n+                                     Name =>\n+                                       Make_Explicit_Dereference (Loc,\n+                                         Prefix =>\n+                                           New_Occurrence_Of\n+                                             (RTE (RE_Get_Current_Excep),\n+                                              Loc))))))))))));\n+         end if;\n+\n+         --  Create the call to postconditions based on the kind of the current\n+         --  subprogram, and the type of the Result_Obj_For_Postcond.\n+\n+         --  Generate:\n+         --\n+         --    _postconditions (Result_Obj_For_Postcond[.all]);\n+         --\n+         --   or\n+         --\n+         --    _postconditions;\n+\n+         if Ekind (Def_Ent) = E_Procedure then\n+            Postconditions_Call :=\n+              Make_Procedure_Call_Statement (Loc,\n+                Name =>\n+                  New_Occurrence_Of\n+                    (Postconditions_Proc (Def_Ent), Loc));\n+         else\n+            Postconditions_Call :=\n+              Make_Procedure_Call_Statement (Loc,\n+                Name                   =>\n+                  New_Occurrence_Of\n+                    (Postconditions_Proc (Def_Ent), Loc),\n+                Parameter_Associations => New_List (\n+                  (if Is_Elementary_Type (Etype (Def_Ent)) then\n+                      New_Occurrence_Of\n+                        (Get_Result_Object_For_Postcond\n+                          (Def_Ent), Loc)\n+                   else\n+                      Make_Explicit_Dereference (Loc,\n+                        New_Occurrence_Of\n+                          (Get_Result_Object_For_Postcond\n+                            (Def_Ent), Loc)))));\n+         end if;\n+\n+         --  Call _postconditions when no general finalization exceptions have\n+         --  occured taking care to enable the postconditions and save any\n+         --  exception occurrences.\n+\n+         --  Generate:\n+         --\n+         --    if not Raised_Finalization_Exception then\n+         --       begin\n+         --          Postcond_Enabled := True;\n+         --          _postconditions [(Result_Obj_For_Postcond[.all])];\n+         --       exception\n+         --          when others =>\n+         --             Raised_Post_Exception := True;\n+         --             Save_Occurrence\n+         --               (Saved_Exception, Get_Current_Excep.all);\n+         --       end;\n+         --    end if;\n+\n+         Append_To (Fin_Controller_Stmts,\n+           Make_If_Statement (Loc,\n+             Condition       =>\n+               Make_Op_Not (Loc,\n+                 Right_Opnd =>\n+                   New_Occurrence_Of\n+                     (Raised_Finalization_Exception_Id, Loc)),\n+             Then_Statements => New_List (\n+               Make_Block_Statement (Loc,\n+                 Handled_Statement_Sequence =>\n+                   Make_Handled_Sequence_Of_Statements (Loc,\n+                     Statements         => New_List (\n+                       Make_Assignment_Statement (Loc,\n+                         Name       =>\n+                           New_Occurrence_Of\n+                             (Get_Postcond_Enabled (Def_Ent), Loc),\n+                         Expression =>\n+                            New_Occurrence_Of\n+                              (Standard_True, Loc)),\n+                       Postconditions_Call),\n+                     Exception_Handlers => New_List (\n+                       Make_Exception_Handler (Loc,\n+                         Exception_Choices => New_List (\n+                           Make_Others_Choice (Loc)),\n+                         Statements        => New_List (\n+                           Make_Assignment_Statement (Loc,\n+                             Name       =>\n+                               New_Occurrence_Of\n+                                 (Raised_Post_Exception_Id, Loc),\n+                             Expression =>\n+                               New_Occurrence_Of (Standard_True, Loc)),\n+                           Make_Procedure_Call_Statement (Loc,\n+                              Name                   =>\n+                                New_Occurrence_Of\n+                                  (RTE (RE_Save_Occurrence), Loc),\n+                              Parameter_Associations => New_List (\n+                                New_Occurrence_Of\n+                                  (Saved_Exception_Id, Loc),\n+                                Make_Explicit_Dereference (Loc,\n+                                  Prefix =>\n+                                    Make_Function_Call (Loc,\n+                                      Name =>\n+                                        Make_Explicit_Dereference (Loc,\n+                                          Prefix =>\n+                                            New_Occurrence_Of\n+                                              (RTE (RE_Get_Current_Excep),\n+                                               Loc))))))))))))));\n+\n+         --  Call _finalizer_old and reraise any exception that occurred during\n+         --  initial finalization within the exception handler. Otherwise,\n+         --  propagate the current exception.\n+\n+         --  Generate:\n+         --\n+         --    begin\n+         --       _finalizer_old;\n+         --    exception\n+         --       when others =>\n+         --          if Raised_Finalization_Exception then\n+         --             Reraise_Occurrence (Saved_Exception);\n+         --          end if;\n+         --          raise;\n+         --    end;\n+\n+         if Present (Fin_Old_Id) then\n+            Append_To (Fin_Controller_Stmts,\n+              Make_Block_Statement (Loc,\n+                Handled_Statement_Sequence =>\n+                  Make_Handled_Sequence_Of_Statements (Loc,\n+                    Statements         => New_List (\n+                      Make_Procedure_Call_Statement (Loc,\n+                        Name => New_Occurrence_Of (Fin_Old_Id, Loc))),\n+                    Exception_Handlers => New_List (\n+                      Make_Exception_Handler (Loc,\n+                        Exception_Choices => New_List (\n+                          Make_Others_Choice (Loc)),\n+                        Statements        => New_List (\n+                          Make_If_Statement (Loc,\n+                            Condition       =>\n+                              New_Occurrence_Of\n+                                (Raised_Finalization_Exception_Id, Loc),\n+                            Then_Statements => New_List (\n+                              Make_Procedure_Call_Statement (Loc,\n+                                Name                   =>\n+                                  New_Occurrence_Of\n+                                    (RTE (RE_Reraise_Occurrence), Loc),\n+                                Parameter_Associations => New_List (\n+                                  New_Occurrence_Of\n+                                    (Saved_Exception_Id, Loc))))),\n+                          Make_Raise_Statement (Loc)))))));\n+         end if;\n+\n+         --  Once finalization is complete reraise any pending exceptions\n+\n+         --  Generate:\n+         --\n+         --    if Raised_Post_Exception\n+         --      or else Raised_Finalization_Exception\n+         --    then\n+         --       Reraise_Occurrence (Saved_Exception);\n+         --    end if;\n+\n+         Append_To (Fin_Controller_Stmts,\n+           Make_If_Statement (Loc,\n+             Condition       =>\n+               Make_Or_Else (Loc,\n+                 Left_Opnd  =>\n+                   New_Occurrence_Of\n+                     (Raised_Post_Exception_Id, Loc),\n+                 Right_Opnd =>\n+                   New_Occurrence_Of\n+                     (Raised_Finalization_Exception_Id, Loc)),\n+             Then_Statements => New_List (\n+               Make_Procedure_Call_Statement (Loc,\n+                 Name            =>\n+                   New_Occurrence_Of (RTE (RE_Reraise_Occurrence), Loc),\n+                 Parameter_Associations => New_List (\n+                   New_Occurrence_Of\n+                     (Saved_Exception_Id, Loc))))));\n+\n+         --  Make the finalization controller subprogram body and declaration.\n+\n+         --  Generate:\n+         --    procedure _finalization_controller;\n+         --\n+         --    procedure _finalization_controller is\n+         --    begin\n+         --       [Fin_Controller_Stmts];\n+         --    end;\n+\n+         Fin_Controller_Id :=\n+           Make_Defining_Identifier (Loc,\n+             Chars => New_External_Name (Name_uFinalization_Controller));\n+\n+         Fin_Controller_Spec :=\n+           Make_Subprogram_Declaration (Loc,\n+             Specification =>\n+               Make_Procedure_Specification (Loc,\n+                 Defining_Unit_Name => Fin_Controller_Id));\n+\n+         Fin_Controller_Body :=\n+           Make_Subprogram_Body (Loc,\n+             Specification              =>\n+               Make_Procedure_Specification (Loc,\n+                 Defining_Unit_Name =>\n+                   Make_Defining_Identifier (Loc, Chars (Fin_Controller_Id))),\n+             Declarations               => Fin_Controller_Decls,\n+             Handled_Statement_Sequence =>\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                 Statements => Fin_Controller_Stmts));\n+\n+         --  Disable _postconditions calls which get generated before return\n+         --  statements to delay their evaluation until after finalization.\n+\n+         --  This is done by way of the local Postcond_Enabled object which is\n+         --  initially assigned to True - we then create an assignment within\n+         --  the subprogram's declaration to make it False and assign it back\n+         --  to True before _postconditions is called within\n+         --  _finalization_controller.\n+\n+         --  Generate:\n+         --\n+         --    Postcond_Enable := False;\n+\n+         Append_To (Top_Decls,\n+           Make_Assignment_Statement (Loc,\n+             Name       =>\n+               New_Occurrence_Of\n+                 (Get_Postcond_Enabled (Def_Ent), Loc),\n+             Expression =>\n+               New_Occurrence_Of\n+                 (Standard_False, Loc)));\n+\n+         --  Add the subprogram to the list of declarations an analyze it\n+\n+         Append_To (Top_Decls, Fin_Controller_Spec);\n+         Analyze (Fin_Controller_Spec);\n+         Insert_After (Fin_Controller_Spec, Fin_Controller_Body);\n+         Analyze (Fin_Controller_Body, Suppress => All_Checks);\n+\n+         --  Return the finalization controller as the result Fin_Id\n+\n+         Fin_Id := Fin_Controller_Id;\n+      end if;\n+   end Build_Finalizer;\n+\n    ---------------------\n    -- Build_Late_Proc --\n    ---------------------\n@@ -4132,20 +4664,23 @@ package body Exp_Ch7 is\n       procedure Reset_Scopes_To_Block_Elab_Proc (L : List_Id) is\n          Id   : Entity_Id;\n          Stat : Node_Id;\n+         Node : Node_Id;\n \n       begin\n          Stat := First (L);\n          while Present (Stat) loop\n             case Nkind (Stat) is\n                when N_Block_Statement =>\n-                  Id := Entity (Identifier (Stat));\n+                  if Present (Identifier (Stat)) then\n+                     Id := Entity (Identifier (Stat));\n \n-                  --  The Scope of this block needs to be reset to the new\n-                  --  procedure if the block contains nested subprograms.\n+                     --  The Scope of this block needs to be reset to the new\n+                     --  procedure if the block contains nested subprograms.\n \n-                  if Present (Id) and then Contains_Subprogram (Id) then\n-                     Set_Block_Elab_Proc;\n-                     Set_Scope (Id, Block_Elab_Proc);\n+                     if Present (Id) and then Contains_Subprogram (Id) then\n+                        Set_Block_Elab_Proc;\n+                        Set_Scope (Id, Block_Elab_Proc);\n+                     end if;\n                   end if;\n \n                when N_Loop_Statement =>\n@@ -4168,34 +4703,20 @@ package body Exp_Ch7 is\n \n                when N_If_Statement =>\n                   Reset_Scopes_To_Block_Elab_Proc (Then_Statements (Stat));\n-\n                   Reset_Scopes_To_Block_Elab_Proc (Else_Statements (Stat));\n \n-                  declare\n-                     Elif : Node_Id;\n-\n-                  begin\n-                     Elif := First (Elsif_Parts (Stat));\n-                     while Present (Elif) loop\n-                        Reset_Scopes_To_Block_Elab_Proc\n-                          (Then_Statements (Elif));\n-\n-                        Next (Elif);\n-                     end loop;\n-                  end;\n+                  Node := First (Elsif_Parts (Stat));\n+                  while Present (Node) loop\n+                     Reset_Scopes_To_Block_Elab_Proc (Then_Statements (Node));\n+                     Next (Node);\n+                  end loop;\n \n                when N_Case_Statement =>\n-                  declare\n-                     Alt : Node_Id;\n-\n-                  begin\n-                     Alt := First (Alternatives (Stat));\n-                     while Present (Alt) loop\n-                        Reset_Scopes_To_Block_Elab_Proc (Statements (Alt));\n-\n-                        Next (Alt);\n-                     end loop;\n-                  end;\n+                  Node := First (Alternatives (Stat));\n+                  while Present (Node) loop\n+                     Reset_Scopes_To_Block_Elab_Proc (Statements (Node));\n+                     Next (Node);\n+                  end loop;\n \n                --  Reset the Scope of a subprogram occurring at the top level\n \n@@ -4817,6 +5338,12 @@ package body Exp_Ch7 is\n                                  Nkind (N) = N_Block_Statement\n                                    and then Present (Cleanup_Actions (N));\n \n+      Has_Postcondition      : constant Boolean :=\n+                                 Nkind (N) = N_Subprogram_Body\n+                                   and then Present\n+                                              (Postconditions_Proc\n+                                                (Unique_Defining_Entity (N)));\n+\n       Actions_Required       : constant Boolean :=\n                                  Requires_Cleanup_Actions (N, True)\n                                    or else Is_Asynchronous_Call\n@@ -5031,6 +5558,34 @@ package body Exp_Ch7 is\n             end;\n          end if;\n \n+         --  Move the _postconditions subprogram declaration and its associated\n+         --  objects into the declarations section so that it is callable\n+         --  within _postconditions.\n+\n+         if Has_Postcondition then\n+            declare\n+               Decl      : Node_Id;\n+               Prev_Decl : Node_Id;\n+\n+            begin\n+               Decl :=\n+                 Prev (Subprogram_Body\n+                        (Postconditions_Proc (Current_Subprogram)));\n+               while Present (Decl) loop\n+                  Prev_Decl := Prev (Decl);\n+\n+                  Remove (Decl);\n+                  Prepend_To (New_Decls, Decl);\n+\n+                  exit when Nkind (Decl) = N_Subprogram_Declaration\n+                              and then Chars (Corresponding_Body (Decl))\n+                                         = Name_uPostconditions;\n+\n+                  Decl := Prev_Decl;\n+               end loop;\n+            end;\n+         end if;\n+\n          --  Ensure the presence of a declaration list in order to successfully\n          --  append all original statements to it.\n \n@@ -5977,7 +6532,7 @@ package body Exp_Ch7 is\n \n    begin\n       --  Nothing to do if the scope does not manage the secondary stack or\n-      --  does not contain meaninful actions for insertion.\n+      --  does not contain meaningful actions for insertion.\n \n       if not Manage_SS\n         and then No (Act_Before)\n@@ -6201,22 +6756,6 @@ package body Exp_Ch7 is\n       end if;\n    end Make_Adjust_Call;\n \n-   ----------------------\n-   -- Make_Detach_Call --\n-   ----------------------\n-\n-   function Make_Detach_Call (Obj_Ref : Node_Id) return Node_Id is\n-      Loc : constant Source_Ptr := Sloc (Obj_Ref);\n-\n-   begin\n-      return\n-        Make_Procedure_Call_Statement (Loc,\n-          Name                   =>\n-            New_Occurrence_Of (RTE (RE_Detach), Loc),\n-          Parameter_Associations => New_List (\n-            Unchecked_Convert_To (RTE (RE_Root_Controlled_Ptr), Obj_Ref)));\n-   end Make_Detach_Call;\n-\n    ---------------\n    -- Make_Call --\n    ---------------\n@@ -6848,22 +7387,49 @@ package body Exp_Ch7 is\n \n          Init_Call := Build_Initialization_Call;\n \n-         --  Only create finalization block if there is a non-trivial\n-         --  call to initialization.\n-\n-         if Present (Init_Call)\n-           and then Nkind (Init_Call) /= N_Null_Statement\n+         --  Only create finalization block if there is a nontrivial call\n+         --  to initialization or a Default_Initial_Condition check to be\n+         --  performed.\n+\n+         if (Present (Init_Call)\n+              and then Nkind (Init_Call) /= N_Null_Statement)\n+           or else\n+             (Has_DIC (Comp_Typ)\n+               and then not GNATprove_Mode\n+               and then Present (DIC_Procedure (Comp_Typ))\n+               and then not Has_Null_Body (DIC_Procedure (Comp_Typ)))\n          then\n-            Init_Loop :=\n-              Make_Block_Statement (Loc,\n-                Handled_Statement_Sequence =>\n-                  Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements         => New_List (Init_Call),\n-                    Exception_Handlers => New_List (\n-                      Make_Exception_Handler (Loc,\n-                        Exception_Choices => New_List (\n-                          Make_Others_Choice (Loc)),\n-                        Statements        => New_List (Final_Block)))));\n+            declare\n+               Init_Stmts : constant List_Id := New_List;\n+\n+            begin\n+               if Present (Init_Call) then\n+                  Append_To (Init_Stmts, Init_Call);\n+               end if;\n+\n+               if Has_DIC (Comp_Typ)\n+                 and then Present (DIC_Procedure (Comp_Typ))\n+               then\n+                  Append_To\n+                    (Init_Stmts,\n+                     Build_DIC_Call (Loc,\n+                         Make_Indexed_Component (Loc,\n+                           Prefix      => Make_Identifier (Loc, Name_V),\n+                           Expressions => New_References_To (Index_List, Loc)),\n+                         Comp_Typ));\n+               end if;\n+\n+               Init_Loop :=\n+                 Make_Block_Statement (Loc,\n+                   Handled_Statement_Sequence =>\n+                     Make_Handled_Sequence_Of_Statements (Loc,\n+                       Statements         => Init_Stmts,\n+                       Exception_Handlers => New_List (\n+                         Make_Exception_Handler (Loc,\n+                           Exception_Choices => New_List (\n+                             Make_Others_Choice (Loc)),\n+                           Statements        => New_List (Final_Block)))));\n+            end;\n \n             Append_To (Statements (Handled_Statement_Sequence (Init_Loop)),\n               Make_Assignment_Statement (Loc,\n@@ -8455,6 +9021,24 @@ package body Exp_Ch7 is\n       elsif Is_Tagged_Type (Utyp) then\n          Fin_Id := Find_Optional_Prim_Op (Utyp, TSS_Deep_Finalize);\n \n+      --  Protected types: these also require finalization even though they\n+      --  are not marked controlled explicitly.\n+\n+      elsif Is_Protected_Type (Typ) then\n+         --  Protected objects do not need to be finalized on restricted\n+         --  runtimes.\n+\n+         if Restricted_Profile then\n+            return Empty;\n+\n+         --  ??? Only handle the simple case for now. Will not support a record\n+         --  or array containing protected objects.\n+\n+         elsif Is_Simple_Protected_Type (Typ) then\n+            Fin_Id := RTE (RE_Finalize_Protection);\n+         else\n+            raise Program_Error;\n+         end if;\n       else\n          raise Program_Error;\n       end if;\n@@ -8895,8 +9479,11 @@ package body Exp_Ch7 is\n       --  The underlying type may not be present due to a missing full view.\n       --  In this case freezing did not take place and there is no suitable\n       --  [Deep_]Initialize primitive to call.\n+      --  If Typ is protected then no additional processing is needed either.\n \n-      if No (Utyp) then\n+      if No (Utyp)\n+        or else Is_Protected_Type (Typ)\n+      then\n          return Empty;\n       end if;\n \n@@ -8918,7 +9505,7 @@ package body Exp_Ch7 is\n             and then Present (Alias (Proc))\n             and then Is_Trivial_Subprogram (Alias (Proc)))\n       then\n-         return Make_Null_Statement (Loc);\n+         return Empty;\n       end if;\n \n       --  The object reference may need another conversion depending on the"}, {"sha": "5f75ab671a245088fe68093ebd555bf7bbc8fd57", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -175,13 +175,6 @@ package Exp_Ch7 is\n    --  only the components (if any) are adjusted. Return Empty if Adjust or\n    --  Deep_Adjust is not available, possibly due to previous errors.\n \n-   function Make_Detach_Call (Obj_Ref : Node_Id) return Node_Id;\n-   --  Create a call to unhook an object from an arbitrary list. Obj_Ref is the\n-   --  object. Generate the following:\n-   --\n-   --    Ada.Finalization.Heap_Management.Detach\n-   --      (System.Finalization_Root.Root_Controlled_Ptr (Obj_Ref));\n-\n    function Make_Final_Call\n      (Obj_Ref   : Node_Id;\n       Typ       : Entity_Id;"}, {"sha": "b055b278da0c4b39a1f7c825d83f3f4869125288", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -7161,8 +7161,7 @@ package body Exp_Ch9 is\n          if Ada_Version >= Ada_2005\n            and then\n              (No (Original_Node (Ecall))\n-               or else Nkind (Original_Node (Ecall)) not in\n-                         N_Delay_Relative_Statement | N_Delay_Until_Statement)\n+               or else Nkind (Original_Node (Ecall)) not in N_Delay_Statement)\n          then\n             Extract_Dispatching_Call (Ecall, Call_Ent, Obj, Actuals, Formals);\n "}, {"sha": "bb0003d1c0b7ed523e5ae0e42dfb153aeab47502", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -648,7 +648,7 @@ package body Exp_Dbug is\n       --  Fixed-point case: generate GNAT encodings when asked to\n \n       if Is_Fixed_Point_Type (E)\n-        and then GNAT_Encodings /= DWARF_GNAT_Encodings_Minimal\n+        and then GNAT_Encodings = DWARF_GNAT_Encodings_All\n       then\n          Get_External_Name (E, True, \"XF_\");\n          Add_Real_To_Buffer (Delta_Value (E));"}, {"sha": "14f25db390d26b15ea87405fc86e747725c528f8", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -7241,7 +7241,7 @@ package body Exp_Disp is\n       --     is used by Build_Get_Prim_Op_Address to expand dispatching calls\n       --     through the primary dispatch table.\n \n-      if UI_To_Int (DT_Entry_Count (First_Tag_Component (Typ))) = 0 then\n+      if DT_Entry_Count (First_Tag_Component (Typ)) = 0 then\n          Analyze_List (Result);\n \n       --     Generate:"}, {"sha": "2d3f75d51e86ea51a32c94f0d3229a3b693e77e0", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -902,7 +902,7 @@ package body Exp_Dist is\n    -- Local variables and structures --\n    ------------------------------------\n \n-   RCI_Cache : Node_Id;\n+   RCI_Cache : Node_Id := Empty;\n    --  Needs comments ???\n \n    Output_From_Constrained : constant array (Boolean) of Name_Id :="}, {"sha": "4c658bb902cb2ab8acf49fcb7c715f17b6195d11", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 79, "deletions": 63, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -37,7 +37,6 @@ with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n-with Snames;   use Snames;\n with Stand;    use Stand;\n with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n@@ -417,13 +416,9 @@ package body Exp_Fixd is\n \n       --  The result is rounded if the target of the operation is decimal\n       --  and Rounded_Result is set, or if the target of the operation\n-      --  is an integer type.\n+      --  is an integer type, as determined by Rounded_Result_Set.\n \n-      if Is_Integer_Type (Etype (N))\n-        or else Rounded_Result_Set (N)\n-      then\n-         Set_Rounded_Result (Rnode);\n-      end if;\n+      Set_Rounded_Result (Rnode, Rounded_Result_Set (N));\n \n       --  One more check. We did the divide operation using the longer of\n       --  the two sizes, which is reasonable. However, in the case where the\n@@ -1594,6 +1589,10 @@ package body Exp_Fixd is\n    --  If the small ratio is the reciprocal of a sufficiently small integer,\n    --  then the perfect result set is obtained by a single integer division.\n \n+   --  If the numerator and denominator of the small ratio are sufficiently\n+   --  small integers, then the perfect result set is obtained by a scaled\n+   --  divide operation.\n+\n    --  In other cases, we obtain the close result set by calculating the\n    --  result in floating-point.\n \n@@ -1605,7 +1604,8 @@ package body Exp_Fixd is\n       Small_Ratio : Ureal;\n       Ratio_Num   : Uint;\n       Ratio_Den   : Uint;\n-      Lit         : Node_Id;\n+      Lit_Num     : Node_Id;\n+      Lit_Den     : Node_Id;\n \n    begin\n       if Is_OK_Static_Expression (Expr) then\n@@ -1623,26 +1623,36 @@ package body Exp_Fixd is\n             return;\n \n          else\n-            Lit := Integer_Literal (N, Ratio_Num);\n+            Lit_Num := Integer_Literal (N, Ratio_Num);\n \n-            if Present (Lit) then\n-               Set_Result (N, Build_Multiply (N, Expr, Lit));\n+            if Present (Lit_Num) then\n+               Set_Result (N, Build_Multiply (N, Expr, Lit_Num));\n                return;\n             end if;\n          end if;\n \n       elsif Ratio_Num = 1 then\n-         Lit := Integer_Literal (N, Ratio_Den);\n+         Lit_Den := Integer_Literal (N, Ratio_Den);\n+\n+         if Present (Lit_Den) then\n+            Set_Result (N, Build_Divide (N, Expr, Lit_Den), Rng_Check);\n+            return;\n+         end if;\n+\n+      else\n+         Lit_Num := Integer_Literal (N, Ratio_Num);\n+         Lit_Den := Integer_Literal (N, Ratio_Den);\n \n-         if Present (Lit) then\n-            Set_Result (N, Build_Divide (N, Expr, Lit), Rng_Check);\n+         if Present (Lit_Num) and then Present (Lit_Den) then\n+            Set_Result\n+              (N, Build_Scaled_Divide (N, Expr, Lit_Num, Lit_Den), Rng_Check);\n             return;\n          end if;\n       end if;\n \n-      --  Fall through to use floating-point for the close result set case\n-      --  either as a result of the small ratio not being an integer or the\n-      --  reciprocal of an integer, or if the integer is out of range.\n+      --  Fall through to use floating-point for the close result set case,\n+      --  as a result of the numerator or denominator of the small ratio not\n+      --  being a sufficiently small integer.\n \n       Set_Result (N,\n         Build_Multiply (N,\n@@ -1698,6 +1708,10 @@ package body Exp_Fixd is\n    --  If the small value is the reciprocal of a sufficiently small integer,\n    --  then the perfect result set is obtained by a single integer division.\n \n+   --  If the numerator and denominator of the small value are sufficiently\n+   --  small integers, then the perfect result set is obtained by a scaled\n+   --  divide operation.\n+\n    --  In other cases, we obtain the close result set by calculating the\n    --  result in floating-point.\n \n@@ -1708,7 +1722,8 @@ package body Exp_Fixd is\n       Small       : constant Ureal     := Small_Value (Source_Type);\n       Small_Num   : constant Uint      := Norm_Num (Small);\n       Small_Den   : constant Uint      := Norm_Den (Small);\n-      Lit         : Node_Id;\n+      Lit_Num     : Node_Id;\n+      Lit_Den     : Node_Id;\n \n    begin\n       if Is_OK_Static_Expression (Expr) then\n@@ -1717,25 +1732,35 @@ package body Exp_Fixd is\n       end if;\n \n       if Small_Den = 1 then\n-         Lit := Integer_Literal (N, Small_Num);\n+         Lit_Num := Integer_Literal (N, Small_Num);\n \n-         if Present (Lit) then\n-            Set_Result (N, Build_Multiply (N, Expr, Lit), Rng_Check);\n+         if Present (Lit_Num) then\n+            Set_Result (N, Build_Multiply (N, Expr, Lit_Num), Rng_Check);\n             return;\n          end if;\n \n       elsif Small_Num = 1 then\n-         Lit := Integer_Literal (N, Small_Den);\n+         Lit_Den := Integer_Literal (N, Small_Den);\n+\n+         if Present (Lit_Den) then\n+            Set_Result (N, Build_Divide (N, Expr, Lit_Den), Rng_Check);\n+            return;\n+         end if;\n \n-         if Present (Lit) then\n-            Set_Result (N, Build_Divide (N, Expr, Lit), Rng_Check);\n+      else\n+         Lit_Num := Integer_Literal (N, Small_Num);\n+         Lit_Den := Integer_Literal (N, Small_Den);\n+\n+         if Present (Lit_Num) and then Present (Lit_Den) then\n+            Set_Result\n+              (N, Build_Scaled_Divide (N, Expr, Lit_Num, Lit_Den), Rng_Check);\n             return;\n          end if;\n       end if;\n \n-      --  Fall through to use floating-point for the close result set case\n-      --  either as a result of the small value not being an integer or the\n-      --  reciprocal of an integer, or if the integer is out of range.\n+      --  Fall through to use floating-point for the close result set case,\n+      --  as a result of the numerator or denominator of the small value not\n+      --  being a sufficiently small integer.\n \n       Set_Result (N,\n         Build_Multiply (N,\n@@ -1762,11 +1787,9 @@ package body Exp_Fixd is\n \n    procedure Expand_Convert_Float_To_Fixed (N : Node_Id) is\n       Expr        : constant Node_Id   := Expression (N);\n-      Orig_N      : constant Node_Id   := Original_Node (N);\n       Result_Type : constant Entity_Id := Etype (N);\n       Rng_Check   : constant Boolean   := Do_Range_Check (N);\n       Small       : constant Ureal     := Small_Value (Result_Type);\n-      Truncate    : Boolean;\n \n    begin\n       --  Optimize small = 1, where we can avoid the multiply completely\n@@ -1781,15 +1804,6 @@ package body Exp_Fixd is\n       --  round.\n \n       else\n-         if Is_Decimal_Fixed_Point_Type (Result_Type) then\n-            Truncate :=\n-              Nkind (Orig_N) /= N_Attribute_Reference\n-                or else Get_Attribute_Id\n-                          (Attribute_Name (Orig_N)) /= Attribute_Round;\n-         else\n-            Truncate := False;\n-         end if;\n-\n          Set_Result\n            (N     => N,\n             Expr  =>\n@@ -1798,7 +1812,8 @@ package body Exp_Fixd is\n                  L => Fpt_Value (Expr),\n                  R => Real_Literal (N, Ureal_1 / Small)),\n             Rchk  => Rng_Check,\n-            Trunc => Truncate);\n+            Trunc => Is_Decimal_Fixed_Point_Type (Result_Type)\n+                       and not Rounded_Result (N));\n       end if;\n    end Expand_Convert_Float_To_Fixed;\n \n@@ -1817,6 +1832,10 @@ package body Exp_Fixd is\n    --  If the small value is the reciprocal of a sufficiently small integer,\n    --  the perfect result set is obtained by a single integer multiplication.\n \n+   --  If the numerator and denominator of the small value are sufficiently\n+   --  small integers, then the perfect result set is obtained by a scaled\n+   --  divide operation.\n+\n    --  In other cases, we obtain the close result set by calculating the\n    --  result in floating-point using a multiplication by the reciprocal\n    --  of the Result_Small.\n@@ -1828,29 +1847,40 @@ package body Exp_Fixd is\n       Small       : constant Ureal     := Small_Value (Result_Type);\n       Small_Num   : constant Uint      := Norm_Num (Small);\n       Small_Den   : constant Uint      := Norm_Den (Small);\n-      Lit         : Node_Id;\n+      Lit_Num     : Node_Id;\n+      Lit_Den     : Node_Id;\n \n    begin\n       if Small_Den = 1 then\n-         Lit := Integer_Literal (N, Small_Num);\n+         Lit_Num := Integer_Literal (N, Small_Num);\n \n-         if Present (Lit) then\n-            Set_Result (N, Build_Divide (N, Expr, Lit), Rng_Check);\n+         if Present (Lit_Num) then\n+            Set_Result (N, Build_Divide (N, Expr, Lit_Num), Rng_Check);\n             return;\n          end if;\n \n       elsif Small_Num = 1 then\n-         Lit := Integer_Literal (N, Small_Den);\n+         Lit_Den := Integer_Literal (N, Small_Den);\n+\n+         if Present (Lit_Den) then\n+            Set_Result (N, Build_Multiply (N, Expr, Lit_Den), Rng_Check);\n+            return;\n+         end if;\n+\n+      else\n+         Lit_Num := Integer_Literal (N, Small_Num);\n+         Lit_Den := Integer_Literal (N, Small_Den);\n \n-         if Present (Lit) then\n-            Set_Result (N, Build_Multiply (N, Expr, Lit), Rng_Check);\n+         if Present (Lit_Num) and then Present (Lit_Den) then\n+            Set_Result\n+              (N, Build_Scaled_Divide (N, Expr, Lit_Den, Lit_Num), Rng_Check);\n             return;\n          end if;\n       end if;\n \n-      --  Fall through to use floating-point for the close result set case\n-      --  either as a result of the small value not being an integer or the\n-      --  reciprocal of an integer, or if the integer is out of range.\n+      --  Fall through to use floating-point for the close result set case,\n+      --  as a result of the numerator or denominator of the small value not\n+      --  being a sufficiently small integer.\n \n       Set_Result (N,\n         Build_Multiply (N,\n@@ -2062,13 +2092,6 @@ package body Exp_Fixd is\n       Right : constant Node_Id := Right_Opnd (N);\n \n    begin\n-      --  Suppress expansion of a fixed-by-fixed division if the\n-      --  operation is supported directly by the target.\n-\n-      if Target_Has_Fixed_Ops (Etype (Left), Etype (Right), Etype (N)) then\n-         return;\n-      end if;\n-\n       if Etype (Left) = Universal_Real then\n          Do_Divide_Universal_Fixed (N);\n \n@@ -2232,13 +2255,6 @@ package body Exp_Fixd is\n    --  Start of processing for Expand_Multiply_Fixed_By_Fixed_Giving_Fixed\n \n    begin\n-      --  Suppress expansion of a fixed-by-fixed multiplication if the\n-      --  operation is supported directly by the target.\n-\n-      if Target_Has_Fixed_Ops (Etype (Left), Etype (Right), Etype (N)) then\n-         return;\n-      end if;\n-\n       if Etype (Left) = Universal_Real then\n          if Nkind (Left) = N_Real_Literal then\n             Do_Multiply_Fixed_Universal (N, Left => Right, Right => Left);"}, {"sha": "0cb483b1eaa48c6bfaad3040cbcee728e5b97eba", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 41, "deletions": 13, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -244,8 +244,8 @@ package body Exp_Imgv is\n    --    For the most common ordinary fixed-point types\n    --      xx = Fixed{32,64,128}\n    --      tv = Integer_{32,64,128} (Expr) [convert with no scaling]\n-   --      pm = typ'Small (typ = subtype of expression)\n-   --           1.0 / typ'Small\n+   --      pm = numerator of typ'Small (typ = subtype of expression)\n+   --           denominator of typ'Small\n    --           (Integer_{32,64,128} x typ'Small)'Fore\n    --           typ'Aft\n \n@@ -604,21 +604,29 @@ package body Exp_Imgv is\n             Siz : constant Uint := Esize (Rtyp);\n \n          begin\n+            --  Note that we do not use sharp bounds to speed things up\n+\n             if Siz <= 32\n-              and then Min = Uint_1\n               and then Max <= Uint_2 ** 31\n+              and then (Min = Uint_1\n+                         or else (Num < Den and then Den <= Uint_2 ** 27)\n+                         or else (Den < Num and then Num <= Uint_2 ** 25))\n             then\n                Imid := RE_Image_Fixed32;\n                Tent := RTE (RE_Integer_32);\n             elsif Siz <= 64\n-              and then Min = Uint_1\n               and then Max <= Uint_2 ** 63\n+              and then (Min = Uint_1\n+                         or else (Num < Den and then Den <= Uint_2 ** 59)\n+                         or else (Den < Num and then Num <= Uint_2 ** 53))\n             then\n                Imid := RE_Image_Fixed64;\n                Tent := RTE (RE_Integer_64);\n             elsif System_Max_Integer_Size = 128\n-              and then Min = Uint_1\n               and then Max <= Uint_2 ** 127\n+              and then (Min = Uint_1\n+                         or else (Num < Den and then Den <= Uint_2 ** 123)\n+                         or else (Den < Num and then Num <= Uint_2 ** 122))\n             then\n                Imid := RE_Image_Fixed128;\n                Tent := RTE (RE_Integer_128);\n@@ -872,15 +880,15 @@ package body Exp_Imgv is\n    --      xx = [Long_Long_[Long_]]Unsigned\n \n    --    For floating-point types\n-   --      xx = Real\n+   --      xx = [Long_[Long_]]Float\n \n    --  For decimal fixed-point types, typ'Value (X) expands into\n \n    --    btyp?(Value_Decimal{32,64,128} (X, typ'Scale));\n \n    --  For the most common ordinary fixed-point types\n \n-   --    btyp?(Value_Fixed{32,64,128} (X, S, 1.0 / S));\n+   --    btyp?(Value_Fixed{32,64,128} (X, numerator of S, denominator of S));\n    --    where S = typ'Small\n \n    --  For Wide_[Wide_]Character types, typ'Value (X) expands into:\n@@ -985,25 +993,25 @@ package body Exp_Imgv is\n \n          begin\n             if Siz <= 32\n-              and then Min = Uint_1\n               and then Max <= Uint_2 ** 31\n+              and then (Min = Uint_1 or else Max <= Uint_2 ** 27)\n             then\n                Vid := RE_Value_Fixed32;\n             elsif Siz <= 64\n-              and then Min = Uint_1\n               and then Max <= Uint_2 ** 63\n+              and then (Min = Uint_1 or else Max <= Uint_2 ** 59)\n             then\n                Vid := RE_Value_Fixed64;\n             elsif System_Max_Integer_Size = 128\n-              and then Min = Uint_1\n               and then Max <= Uint_2 ** 127\n+              and then (Min = Uint_1 or else Max <= Uint_2 ** 123)\n             then\n                Vid := RE_Value_Fixed128;\n             else\n-               Vid := RE_Value_Real;\n+               Vid := RE_Value_Long_Float;\n             end if;\n \n-            if Vid /= RE_Value_Real then\n+            if Vid /= RE_Value_Long_Float then\n                Append_To (Args,\n                  Make_Integer_Literal (Loc, -Norm_Num (Small_Value (Rtyp))));\n \n@@ -1023,7 +1031,27 @@ package body Exp_Imgv is\n          end;\n \n       elsif Is_Floating_Point_Type (Rtyp) then\n-         Vid := RE_Value_Real;\n+         --  Short_Float and Float are the same type for GNAT\n+\n+         if Rtyp = Standard_Short_Float or else Rtyp = Standard_Float then\n+            Vid := RE_Value_Float;\n+\n+         --  If Long_Float and Long_Long_Float are the same type, then use the\n+         --  implementation of the former, which is faster and more accurate.\n+\n+         elsif Rtyp = Standard_Long_Float\n+           or else (Rtyp = Standard_Long_Long_Float\n+                     and then\n+                    Standard_Long_Long_Float_Size = Standard_Long_Float_Size)\n+         then\n+            Vid := RE_Value_Long_Float;\n+\n+         elsif Rtyp = Standard_Long_Long_Float then\n+            Vid := RE_Value_Long_Long_Float;\n+\n+         else\n+            raise Program_Error;\n+         end if;\n \n       --  Only other possibility is user-defined enumeration type\n "}, {"sha": "3be039b4be5de626f1b600fbb9781602ebcdf003", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -29,7 +29,6 @@ with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Expander; use Expander;\n with Exp_Atag; use Exp_Atag;\n-with Exp_Ch4;  use Exp_Ch4;\n with Exp_Ch7;  use Exp_Ch7;\n with Exp_Ch11; use Exp_Ch11;\n with Exp_Code; use Exp_Code;\n@@ -857,7 +856,7 @@ package body Exp_Intr is\n    ---------------------------\n \n    procedure Expand_Unc_Conversion (N : Node_Id; E : Entity_Id) is\n-      Func : constant Entity_Id  := Entity (Name (N));\n+      Func : constant Entity_Id := Entity (Name (N));\n       Conv : Node_Id;\n       Ftyp : Entity_Id;\n       Ttyp : Entity_Id;\n@@ -908,12 +907,7 @@ package body Exp_Intr is\n       end if;\n \n       Rewrite (N, Unchecked_Convert_To (Ttyp, Conv));\n-      Set_Etype (N, Ttyp);\n-      Set_Analyzed (N);\n-\n-      if Nkind (N) = N_Unchecked_Type_Conversion then\n-         Expand_N_Unchecked_Type_Conversion (N);\n-      end if;\n+      Analyze_And_Resolve (N, Ttyp);\n    end Expand_Unc_Conversion;\n \n    -----------------------------"}, {"sha": "c90409b5d35e22bbe169c2c230fb6fdcbc203a1c", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1256,8 +1256,15 @@ package body Exp_Pakd is\n          --  array type on Obj to get lost. So we save the type of Obj, and\n          --  make sure it is reset properly.\n \n-         New_Lhs := Duplicate_Subexpr (Obj, Name_Req => True);\n-         New_Rhs := Duplicate_Subexpr_No_Checks (Obj);\n+         declare\n+            T : constant Entity_Id := Etype (Obj);\n+         begin\n+            New_Lhs := Duplicate_Subexpr (Obj, Name_Req => True);\n+            New_Rhs := Duplicate_Subexpr_No_Checks (Obj);\n+            Set_Etype (Obj, T);\n+            Set_Etype (New_Lhs, T);\n+            Set_Etype (New_Rhs, T);\n+         end;\n \n          --  First we deal with the \"and\"\n "}, {"sha": "d616fb6d901b5de2a18600fe17b418c3e1ad5583", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1581,6 +1581,12 @@ package body Exp_Prag is\n                       Expression => Pref));\n                end if;\n \n+               --  Mark the temporary as coming from a 'Old reference\n+\n+               if Present (Temp) then\n+                  Set_Stores_Attribute_Old_Prefix (Temp);\n+               end if;\n+\n                --  Ensure that the prefix is valid\n \n                if Validity_Checks_On and then Validity_Check_Operands then"}, {"sha": "d65136be09d292eceb394400aa3111b92697f23f", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -357,7 +357,10 @@ package body Exp_SPARK is\n       --  procedure for it as done during regular expansion for compilation.\n \n       if Has_DIC (E) and then Is_Tagged_Type (E) then\n-         Build_DIC_Procedure_Body (E, For_Freeze => True);\n+         --  Why is this needed for DIC, but not for other aspects (such as\n+         --  Type_Invariant)???\n+\n+         Build_DIC_Procedure_Body (E);\n       end if;\n    end Expand_SPARK_N_Freeze_Type;\n \n@@ -530,7 +533,7 @@ package body Exp_SPARK is\n         and then Present (DIC_Procedure (Typ))\n         and then not Has_Init_Expression (N)\n       then\n-         Call := Build_DIC_Call (Loc, Obj_Id, Typ);\n+         Call := Build_DIC_Call (Loc, New_Occurrence_Of (Obj_Id, Loc), Typ);\n \n          --  Partially insert the call into the tree by setting its parent\n          --  pointer."}, {"sha": "09bd8726cb6aa520ff03853865234d14811dc9f7", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -578,8 +578,11 @@ package body Exp_Strm is\n          elsif P_Size <= Standard_Long_Integer_Size then\n             Lib_RE := RE_I_LI;\n \n-         else\n+         elsif P_Size <= Standard_Long_Long_Integer_Size then\n             Lib_RE := RE_I_LLI;\n+\n+         else\n+            Lib_RE := RE_I_LLLI;\n          end if;\n \n       --  Unsigned integer types, also includes unsigned fixed-point types\n@@ -609,8 +612,11 @@ package body Exp_Strm is\n          elsif P_Size <= Standard_Long_Integer_Size then\n             Lib_RE := RE_I_LU;\n \n-         else\n+         elsif P_Size <= Standard_Long_Long_Integer_Size then\n             Lib_RE := RE_I_LLU;\n+\n+         else\n+            Lib_RE := RE_I_LLLU;\n          end if;\n \n       else pragma Assert (Is_Access_Type (U_Type));\n@@ -802,16 +808,24 @@ package body Exp_Strm is\n       then\n          if P_Size <= Standard_Short_Short_Integer_Size then\n             Lib_RE := RE_W_SSI;\n+\n          elsif P_Size <= Standard_Short_Integer_Size then\n             Lib_RE := RE_W_SI;\n+\n          elsif P_Size = 24 then\n             Lib_RE := RE_W_I24;\n+\n          elsif P_Size <= Standard_Integer_Size then\n             Lib_RE := RE_W_I;\n+\n          elsif P_Size <= Standard_Long_Integer_Size then\n             Lib_RE := RE_W_LI;\n-         else\n+\n+         elsif P_Size <= Standard_Long_Long_Integer_Size then\n             Lib_RE := RE_W_LLI;\n+\n+         else\n+            Lib_RE := RE_W_LLLI;\n          end if;\n \n       --  Unsigned integer types, also includes unsigned fixed-point types\n@@ -828,16 +842,24 @@ package body Exp_Strm is\n       then\n          if P_Size <= Standard_Short_Short_Integer_Size then\n             Lib_RE := RE_W_SSU;\n+\n          elsif P_Size <= Standard_Short_Integer_Size then\n             Lib_RE := RE_W_SU;\n+\n          elsif P_Size = 24 then\n             Lib_RE := RE_W_U24;\n+\n          elsif P_Size <= Standard_Integer_Size then\n             Lib_RE := RE_W_U;\n+\n          elsif P_Size <= Standard_Long_Integer_Size then\n             Lib_RE := RE_W_LU;\n-         else\n+\n+         elsif P_Size <= Standard_Long_Long_Integer_Size then\n             Lib_RE := RE_W_LLU;\n+\n+         else\n+            Lib_RE := RE_W_LLLU;\n          end if;\n \n       else pragma Assert (Is_Access_Type (U_Type));"}, {"sha": "c5f167af79b4b308f7b9de2740e440d2e47c9a08", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -522,46 +522,4 @@ package body Exp_Tss is\n       return Empty;\n    end TSS;\n \n-   function TSS (Typ : Entity_Id; Nam : Name_Id) return Entity_Id is\n-      FN   : constant Node_Id := Freeze_Node (Typ);\n-      Elmt : Elmt_Id;\n-      Subp : Entity_Id;\n-\n-   begin\n-      if No (FN) then\n-         return Empty;\n-\n-      elsif No (TSS_Elist (FN)) then\n-         return Empty;\n-\n-      else\n-         Elmt := First_Elmt (TSS_Elist (FN));\n-         while Present (Elmt) loop\n-            if Chars (Node (Elmt)) = Nam then\n-               Subp := Node (Elmt);\n-\n-               --  For stream subprograms, the TSS entity may be a renaming-\n-               --  as-body of an already generated entity. Use that one rather\n-               --  the one introduced by the renaming, which is an artifact of\n-               --  current stream handling.\n-\n-               if Nkind (Parent (Parent (Subp))) =\n-                                           N_Subprogram_Renaming_Declaration\n-                 and then\n-                   Present (Corresponding_Spec (Parent (Parent (Subp))))\n-               then\n-                  return Corresponding_Spec (Parent (Parent (Subp)));\n-               else\n-                  return Subp;\n-               end if;\n-\n-            else\n-               Next_Elmt (Elmt);\n-            end if;\n-         end loop;\n-      end if;\n-\n-      return Empty;\n-   end TSS;\n-\n end Exp_Tss;"}, {"sha": "ca35f5a1450f409bf9fd2ef2f584dfb744d1e730", "filename": "gcc/ada/exp_tss.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_tss.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_tss.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -170,7 +170,6 @@ package Exp_Tss is\n    --  be explicitly frozen, so the N_Freeze_Entity node always exists).\n \n    function TSS (Typ : Entity_Id; Nam : TSS_Name_Type) return Entity_Id;\n-   function TSS (Typ : Entity_Id; Nam : Name_Id) return Entity_Id;\n    --  Finds the TSS with the given name associated with the given type.\n    --  If no such TSS exists, then Empty is returned.\n "}, {"sha": "ee2cf8113dc90e443a3659dd4cebbb251b4a0b5d", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -251,13 +251,8 @@ package body Exp_Unst is\n    -----------------------\n \n    function Needs_Fat_Pointer (E : Entity_Id) return Boolean is\n-      Typ : Entity_Id := Etype (E);\n-\n+      Typ : constant Entity_Id := Get_Fullest_View (Etype (E));\n    begin\n-      if Is_Private_Type (Typ) and then Present (Full_View (Typ)) then\n-         Typ := Full_View (Typ);\n-      end if;\n-\n       return Is_Array_Type (Typ) and then not Is_Constrained (Typ);\n    end Needs_Fat_Pointer;\n \n@@ -898,6 +893,8 @@ package body Exp_Unst is\n                      DT     : Boolean := False;\n                      Formal : Node_Id;\n                      Subp   : Entity_Id;\n+                     F_Type : Entity_Id;\n+                     A_Type : Entity_Id;\n \n                   begin\n                      if Nkind (Name (N)) = N_Explicit_Dereference then\n@@ -908,12 +905,16 @@ package body Exp_Unst is\n \n                      Actual := First_Actual (N);\n                      Formal := First_Formal_With_Extras (Subp);\n+\n                      while Present (Actual) loop\n-                        if Is_Array_Type (Etype (Formal))\n-                          and then not Is_Constrained (Etype (Formal))\n-                          and then Is_Constrained (Etype (Actual))\n+                        F_Type := Get_Fullest_View (Etype (Formal));\n+                        A_Type := Get_Fullest_View (Etype (Actual));\n+\n+                        if Is_Array_Type (F_Type)\n+                          and then not Is_Constrained (F_Type)\n+                          and then Is_Constrained (A_Type)\n                         then\n-                           Check_Static_Type (Etype (Actual), Empty, DT);\n+                           Check_Static_Type (A_Type, Empty, DT);\n                         end if;\n \n                         Next_Actual (Actual);"}, {"sha": "cf4059a3d5c0a0fba25b1577ef5f9c94e53b9fb7", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 485, "deletions": 334, "changes": 819, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -60,10 +60,8 @@ with Sem_Util; use Sem_Util;\n with Snames;   use Snames;\n with Stand;    use Stand;\n with Stringt;  use Stringt;\n-with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n-with Urealp;   use Urealp;\n with Validsw;  use Validsw;\n \n with GNAT.HTable;\n@@ -1446,21 +1444,27 @@ package body Exp_Util is\n    --------------------\n \n    function Build_DIC_Call\n-     (Loc    : Source_Ptr;\n-      Obj_Id : Entity_Id;\n-      Typ    : Entity_Id) return Node_Id\n+     (Loc      : Source_Ptr;\n+      Obj_Name : Node_Id;\n+      Typ      : Entity_Id) return Node_Id\n    is\n       Proc_Id    : constant Entity_Id := DIC_Procedure (Typ);\n       Formal_Typ : constant Entity_Id := Etype (First_Formal (Proc_Id));\n \n    begin\n+      --  The DIC procedure has a null body if assertions are disabled or\n+      --  Assertion_Policy Ignore is in effect. In that case, it would be\n+      --  nice to generate a null statement instead of a call to the DIC\n+      --  procedure, but doing that seems to interfere with the determination\n+      --  of ECRs (early call regions) in SPARK. ???\n+\n       return\n         Make_Procedure_Call_Statement (Loc,\n           Name                   => New_Occurrence_Of (Proc_Id, Loc),\n           Parameter_Associations => New_List (\n             Make_Unchecked_Type_Conversion (Loc,\n               Subtype_Mark => New_Occurrence_Of (Formal_Typ, Loc),\n-              Expression   => New_Occurrence_Of (Obj_Id, Loc))));\n+              Expression   => Obj_Name)));\n    end Build_DIC_Call;\n \n    ------------------------------\n@@ -1472,9 +1476,13 @@ package body Exp_Util is\n    --  Ghost mode.\n \n    procedure Build_DIC_Procedure_Body\n-     (Typ        : Entity_Id;\n-      For_Freeze : Boolean := False)\n+     (Typ         : Entity_Id;\n+      Partial_DIC : Boolean := False)\n    is\n+      Pragmas_Seen : Elist_Id := No_Elist;\n+      --  This list contains all DIC pragmas processed so far. The list is used\n+      --  to avoid redundant Default_Initial_Condition checks.\n+\n       procedure Add_DIC_Check\n         (DIC_Prag : Node_Id;\n          DIC_Expr : Node_Id;\n@@ -1494,24 +1502,46 @@ package body Exp_Util is\n       --  pragma. All generated code is added to list Stmts.\n \n       procedure Add_Inherited_Tagged_DIC\n-        (DIC_Prag  : Node_Id;\n-         Par_Typ   : Entity_Id;\n-         Deriv_Typ : Entity_Id;\n-         Stmts     : in out List_Id);\n+        (DIC_Prag : Node_Id;\n+         Expr     : Node_Id;\n+         Stmts    : in out List_Id);\n       --  Add a runtime check to verify assertion expression DIC_Expr of\n-      --  inherited pragma DIC_Prag. This routine applies class-wide pre- and\n-      --  postcondition-like runtime semantics to the check. Par_Typ is the\n-      --  parent type whose DIC pragma is being inherited. Deriv_Typ is the\n-      --  derived type inheriting the DIC pragma. All generated code is added\n-      --  to list Stmts.\n+      --  inherited pragma DIC_Prag. This routine applies class-wide pre-\n+      --  and postcondition-like runtime semantics to the check. Expr is\n+      --  the assertion expression after substitition has been performed\n+      --  (via Replace_References). All generated code is added to list Stmts.\n+\n+      procedure Add_Inherited_DICs\n+        (T         : Entity_Id;\n+         Priv_Typ  : Entity_Id;\n+         Full_Typ  : Entity_Id;\n+         Obj_Id    : Entity_Id;\n+         Checks    : in out List_Id);\n+      --  Generate a DIC check for each inherited Default_Initial_Condition\n+      --  coming from all parent types of type T. Priv_Typ and Full_Typ denote\n+      --  the partial and full view of the parent type. Obj_Id denotes the\n+      --  entity of the _object formal parameter of the DIC procedure. All\n+      --  created checks are added to list Checks.\n \n       procedure Add_Own_DIC\n         (DIC_Prag : Node_Id;\n          DIC_Typ  : Entity_Id;\n+         Obj_Id   : Entity_Id;\n          Stmts    : in out List_Id);\n       --  Add a runtime check to verify the assertion expression of pragma\n-      --  DIC_Prag. DIC_Typ is the owner of the DIC pragma. All generated code\n-      --  is added to list Stmts.\n+      --  DIC_Prag. DIC_Typ is the owner of the DIC pragma. Obj_Id is the\n+      --  object to substitute in the assertion expression for any references\n+      --  to the current instance of the type All generated code is added to\n+      --  list Stmts.\n+\n+      procedure Add_Parent_DICs\n+        (T      : Entity_Id;\n+         Obj_Id : Entity_Id;\n+         Checks : in out List_Id);\n+      --  Generate a Default_Initial_Condition check for each inherited DIC\n+      --  aspect coming from all parent types of type T. Obj_Id denotes the\n+      --  entity of the _object formal parameter of the DIC procedure. All\n+      --  created checks are added to list Checks.\n \n       -------------------\n       -- Add_DIC_Check --\n@@ -1549,6 +1579,10 @@ package body Exp_Util is\n                   Make_Pragma_Argument_Association (Loc,\n                     Expression => DIC_Expr))));\n          end if;\n+\n+         --  Add the pragma to the list of processed pragmas\n+\n+         Append_New_Elmt (DIC_Prag, Pragmas_Seen);\n       end Add_DIC_Check;\n \n       -----------------------\n@@ -1590,65 +1624,172 @@ package body Exp_Util is\n       ------------------------------\n \n       procedure Add_Inherited_Tagged_DIC\n-        (DIC_Prag  : Node_Id;\n-         Par_Typ   : Entity_Id;\n-         Deriv_Typ : Entity_Id;\n-         Stmts     : in out List_Id)\n+        (DIC_Prag : Node_Id;\n+         Expr     : Node_Id;\n+         Stmts    : in out List_Id)\n       is\n-         Deriv_Proc : constant Entity_Id := DIC_Procedure (Deriv_Typ);\n-         DIC_Args   : constant List_Id   :=\n-                        Pragma_Argument_Associations (DIC_Prag);\n-         DIC_Arg    : constant Node_Id   := First (DIC_Args);\n-         DIC_Expr   : constant Node_Id   := Expression_Copy (DIC_Arg);\n-         Par_Proc   : constant Entity_Id := DIC_Procedure (Par_Typ);\n+      begin\n+         --  Once the DIC assertion expression is fully processed, add a check\n+         --  to the statements of the DIC procedure.\n \n-         Expr : Node_Id;\n+         Add_DIC_Check\n+           (DIC_Prag => DIC_Prag,\n+            DIC_Expr => Expr,\n+            Stmts    => Stmts);\n+      end Add_Inherited_Tagged_DIC;\n+\n+      ------------------------\n+      -- Add_Inherited_DICs --\n+      ------------------------\n+\n+      procedure Add_Inherited_DICs\n+        (T         : Entity_Id;\n+         Priv_Typ  : Entity_Id;\n+         Full_Typ  : Entity_Id;\n+         Obj_Id    : Entity_Id;\n+         Checks    : in out List_Id)\n+      is\n+         Deriv_Typ     : Entity_Id;\n+         Expr          : Node_Id;\n+         Prag          : Node_Id;\n+         Prag_Expr     : Node_Id;\n+         Prag_Expr_Arg : Node_Id;\n+         Prag_Typ      : Node_Id;\n+         Prag_Typ_Arg  : Node_Id;\n+\n+         Par_Proc : Entity_Id;\n+         --  The \"partial\" invariant procedure of Par_Typ\n+\n+         Par_Typ : Entity_Id;\n+         --  The suitable view of the parent type used in the substitution of\n+         --  type attributes.\n \n       begin\n-         --  The processing of an inherited DIC assertion expression starts off\n-         --  with a copy of the original parent expression where all references\n-         --  to the parent type have already been replaced with references to\n-         --  the _object formal parameter of the parent type's DIC procedure.\n+         if not Present (Priv_Typ) and then not Present (Full_Typ) then\n+            return;\n+         end if;\n \n-         pragma Assert (Present (DIC_Expr));\n-         Expr := New_Copy_Tree (DIC_Expr);\n+         --  When the type inheriting the class-wide invariant is a concurrent\n+         --  type, use the corresponding record type because it contains all\n+         --  primitive operations of the concurrent type and allows for proper\n+         --  substitution.\n \n-         --  Perform the following substitutions:\n+         if Is_Concurrent_Type (T) then\n+            Deriv_Typ := Corresponding_Record_Type (T);\n+         else\n+            Deriv_Typ := T;\n+         end if;\n \n-         --    * Replace a reference to the _object parameter of the parent\n-         --      type's DIC procedure with a reference to the _object parameter\n-         --      of the derived types' DIC procedure.\n+         pragma Assert (Present (Deriv_Typ));\n \n-         --    * Replace a reference to a discriminant of the parent type with\n-         --      a suitable value from the point of view of the derived type.\n+         --  Determine which rep item chain to use. Precedence is given to that\n+         --  of the parent type's partial view since it usually carries all the\n+         --  class-wide invariants.\n \n-         --    * Replace a call to an overridden parent primitive with a call\n-         --      to the overriding derived type primitive.\n+         if Present (Priv_Typ) then\n+            Prag := First_Rep_Item (Priv_Typ);\n+         else\n+            Prag := First_Rep_Item (Full_Typ);\n+         end if;\n \n-         --    * Replace a call to an inherited parent primitive with a call to\n-         --      the internally-generated inherited derived type primitive.\n+         while Present (Prag) loop\n+            if Nkind (Prag) = N_Pragma\n+              and then Pragma_Name (Prag) = Name_Default_Initial_Condition\n+            then\n+               --  Nothing to do if the pragma was already processed\n \n-         --  Note that primitives defined in the private part are automatically\n-         --  handled by the overriding/inheritance mechanism and do not require\n-         --  an extra replacement pass.\n+               if Contains (Pragmas_Seen, Prag) then\n+                  return;\n+               end if;\n \n-         pragma Assert (Present (Deriv_Proc) and then Present (Par_Proc));\n+               --  Extract arguments of the Default_Initial_Condition pragma\n \n-         Replace_References\n-           (Expr      => Expr,\n-            Par_Typ   => Par_Typ,\n-            Deriv_Typ => Deriv_Typ,\n-            Par_Obj   => First_Formal (Par_Proc),\n-            Deriv_Obj => First_Formal (Deriv_Proc));\n+               Prag_Expr_Arg := First (Pragma_Argument_Associations (Prag));\n+               Prag_Expr     := Expression_Copy (Prag_Expr_Arg);\n \n-         --  Once the DIC assertion expression is fully processed, add a check\n-         --  to the statements of the DIC procedure.\n+               --  Pick up the implicit second argument of the pragma, which\n+               --  indicates the type that the pragma applies to.\n \n-         Add_DIC_Check\n-           (DIC_Prag => DIC_Prag,\n-            DIC_Expr => Expr,\n-            Stmts    => Stmts);\n-      end Add_Inherited_Tagged_DIC;\n+               Prag_Typ_Arg  := Next (Prag_Expr_Arg);\n+               if Present (Prag_Typ_Arg) then\n+                  Prag_Typ := Get_Pragma_Arg (Prag_Typ_Arg);\n+               else\n+                  Prag_Typ := Empty;\n+               end if;\n+\n+               --  The pragma applies to the partial view of the parent type\n+\n+               if Present (Priv_Typ)\n+                 and then Present (Prag_Typ)\n+                 and then Entity (Prag_Typ) = Priv_Typ\n+               then\n+                  Par_Typ := Priv_Typ;\n+\n+               --  The pragma applies to the full view of the parent type\n+\n+               elsif Present (Full_Typ)\n+                 and then Present (Prag_Typ)\n+                 and then Entity (Prag_Typ) = Full_Typ\n+               then\n+                  Par_Typ := Full_Typ;\n+\n+               --  Otherwise the pragma does not belong to the parent type and\n+               --  should not be considered.\n+\n+               else\n+                  return;\n+               end if;\n+\n+               --  Substitute references in the DIC expression that are related\n+               --  to the partial type with corresponding references related to\n+               --  the derived type (call to Replace_References below).\n+\n+               Expr := New_Copy_Tree (Prag_Expr);\n+\n+               Par_Proc := Partial_DIC_Procedure (Par_Typ);\n+\n+               --  If there's not a partial DIC procedure (such as when a\n+               --  full type doesn't have its own DIC, but is inherited from\n+               --  a type with DIC), get the full DIC procedure.\n+\n+               if not Present (Par_Proc) then\n+                  Par_Proc := DIC_Procedure (Par_Typ);\n+               end if;\n+\n+               Replace_References\n+                 (Expr      => Expr,\n+                  Par_Typ   => Par_Typ,\n+                  Deriv_Typ => Deriv_Typ,\n+                  Par_Obj   => First_Formal (Par_Proc),\n+                  Deriv_Obj => Obj_Id);\n+\n+               --  Why are there different actions depending on whether T is\n+               --  tagged? Can these be unified? ???\n+\n+               if Is_Tagged_Type (T) then\n+                  Add_Inherited_Tagged_DIC\n+                    (DIC_Prag  => Prag,\n+                     Expr      => Expr,\n+                     Stmts     => Checks);\n+\n+               else\n+                  Add_Inherited_DIC\n+                    (DIC_Prag  => Prag,\n+                     Par_Typ   => Par_Typ,\n+                     Deriv_Typ => Deriv_Typ,\n+                     Stmts     => Checks);\n+               end if;\n+\n+               --  Leave as soon as we get a DIC pragma, since we'll visit\n+               --  the pragmas of the parents, so will get to any \"inherited\"\n+               --  pragmas that way.\n+\n+               return;\n+            end if;\n+\n+            Next_Rep_Item (Prag);\n+         end loop;\n+      end Add_Inherited_DICs;\n \n       -----------------\n       -- Add_Own_DIC --\n@@ -1657,15 +1798,14 @@ package body Exp_Util is\n       procedure Add_Own_DIC\n         (DIC_Prag : Node_Id;\n          DIC_Typ  : Entity_Id;\n+         Obj_Id   : Entity_Id;\n          Stmts    : in out List_Id)\n       is\n          DIC_Args : constant List_Id   :=\n                       Pragma_Argument_Associations (DIC_Prag);\n          DIC_Arg  : constant Node_Id   := First (DIC_Args);\n          DIC_Asp  : constant Node_Id   := Corresponding_Aspect (DIC_Prag);\n          DIC_Expr : constant Node_Id   := Get_Pragma_Arg (DIC_Arg);\n-         DIC_Proc : constant Entity_Id := DIC_Procedure (DIC_Typ);\n-         Obj_Id   : constant Entity_Id := First_Formal (DIC_Proc);\n \n          --  Local variables\n \n@@ -1722,6 +1862,66 @@ package body Exp_Util is\n             Stmts    => Stmts);\n       end Add_Own_DIC;\n \n+      ---------------------\n+      -- Add_Parent_DICs --\n+      ---------------------\n+\n+      procedure Add_Parent_DICs\n+        (T      : Entity_Id;\n+         Obj_Id : Entity_Id;\n+         Checks : in out List_Id)\n+      is\n+         Dummy_1 : Entity_Id;\n+         Dummy_2 : Entity_Id;\n+\n+         Curr_Typ : Entity_Id;\n+         --  The entity of the current type being examined\n+\n+         Full_Typ : Entity_Id;\n+         --  The full view of Par_Typ\n+\n+         Par_Typ : Entity_Id;\n+         --  The entity of the parent type\n+\n+         Priv_Typ : Entity_Id;\n+         --  The partial view of Par_Typ\n+\n+      begin\n+         --  Climb the parent type chain\n+\n+         Curr_Typ := T;\n+         loop\n+            --  Do not consider subtypes, as they inherit the DICs from their\n+            --  base types.\n+\n+            Par_Typ := Base_Type (Etype (Base_Type (Curr_Typ)));\n+\n+            --  Stop the climb once the root of the parent chain is\n+            --  reached.\n+\n+            exit when Curr_Typ = Par_Typ;\n+\n+            --  Process the DICs of the parent type\n+\n+            Get_Views (Par_Typ, Priv_Typ, Full_Typ, Dummy_1, Dummy_2);\n+\n+            --  Only try to inherit a DIC pragma from the parent type Par_Typ\n+            --  if it Has_Own_DIC pragma. The loop will proceed up the parent\n+            --  chain to find all types that have their own DIC.\n+\n+            if Has_Own_DIC (Par_Typ) then\n+               Add_Inherited_DICs\n+                 (T         => T,\n+                  Priv_Typ  => Priv_Typ,\n+                  Full_Typ  => Full_Typ,\n+                  Obj_Id    => Obj_Id,\n+                  Checks    => Checks);\n+            end if;\n+\n+            Curr_Typ := Par_Typ;\n+         end loop;\n+      end Add_Parent_DICs;\n+\n       --  Local variables\n \n       Loc : constant Source_Ptr := Sloc (Typ);\n@@ -1740,8 +1940,20 @@ package body Exp_Util is\n       Proc_Id      : Entity_Id;\n       Stmts        : List_Id := No_List;\n \n-      Build_Body : Boolean := False;\n-      --  Flag set when the type requires a DIC procedure body to be built\n+      CRec_Typ : Entity_Id := Empty;\n+      --  The corresponding record type of Full_Typ\n+\n+      Full_Typ : Entity_Id := Empty;\n+      --  The full view of the working type\n+\n+      Obj_Id : Entity_Id := Empty;\n+      --  The _object formal parameter of the invariant procedure\n+\n+      Part_Proc : Entity_Id := Empty;\n+      --  The entity of the \"partial\" invariant procedure\n+\n+      Priv_Typ : Entity_Id := Empty;\n+      --  The partial view of the working type\n \n       Work_Typ : Entity_Id;\n       --  The working type\n@@ -1805,25 +2017,41 @@ package body Exp_Util is\n          goto Leave;\n       end if;\n \n-      --  The working type may lack a DIC procedure declaration. This may be\n-      --  due to several reasons:\n+      --  Obtain both views of the type\n+\n+      Get_Views (Work_Typ, Priv_Typ, Full_Typ, Dummy_1, CRec_Typ);\n \n-      --    * The working type's own DIC pragma does not contain a verifiable\n-      --      assertion expression. In this case there is no need to build a\n-      --      DIC procedure because there is nothing to check.\n+      --  The caller requests a body for the partial DIC procedure\n \n-      --    * The working type derives from a parent type. In this case a DIC\n-      --      procedure should be built only when the inherited DIC pragma has\n-      --      a verifiable assertion expression.\n+      if Partial_DIC then\n+         Proc_Id   := Partial_DIC_Procedure (Work_Typ);\n \n-      Proc_Id := DIC_Procedure (Work_Typ);\n+         --  The \"full\" DIC procedure body was already created\n+\n+         --  Create a declaration for the \"partial\" DIC procedure if it\n+         --  is not available.\n \n-      --  Build a DIC procedure declaration when the working type derives from\n-      --  a parent type.\n+         if No (Proc_Id) then\n+            Build_DIC_Procedure_Declaration\n+              (Typ         => Work_Typ,\n+               Partial_DIC => True);\n+\n+            Proc_Id := Partial_DIC_Procedure (Work_Typ);\n+         end if;\n \n-      if No (Proc_Id) then\n-         Build_DIC_Procedure_Declaration (Work_Typ);\n-         Proc_Id := DIC_Procedure (Work_Typ);\n+      --  The caller requests a body for the \"full\" DIC procedure\n+\n+      else\n+         Proc_Id   := DIC_Procedure (Work_Typ);\n+         Part_Proc := Partial_DIC_Procedure (Work_Typ);\n+\n+         --  Create a declaration for the \"full\" DIC procedure if it is\n+         --  not available.\n+\n+         if No (Proc_Id) then\n+            Build_DIC_Procedure_Declaration (Work_Typ);\n+            Proc_Id := DIC_Procedure (Work_Typ);\n+         end if;\n       end if;\n \n       --  At this point there should be a DIC procedure declaration\n@@ -1843,123 +2071,146 @@ package body Exp_Util is\n       Push_Scope (Proc_Id);\n       Install_Formals (Proc_Id);\n \n-      --  The working type defines its own DIC pragma. Replace the current\n-      --  instance of the working type with the formal of the DIC procedure.\n-      --  Note that there is no need to consider inherited DIC pragmas from\n-      --  parent types because the working type's DIC pragma \"hides\" all\n-      --  inherited DIC pragmas.\n+      Obj_Id := First_Formal (Proc_Id);\n+      pragma Assert (Present (Obj_Id));\n \n-      if Has_Own_DIC (Work_Typ) then\n-         pragma Assert (DIC_Typ = Work_Typ);\n+      --  The \"partial\" DIC procedure verifies the DICs of the partial view\n+      --  only.\n \n-         Add_Own_DIC\n-           (DIC_Prag => DIC_Prag,\n-            DIC_Typ  => DIC_Typ,\n-            Stmts    => Stmts);\n+      if Partial_DIC then\n+         pragma Assert (Present (Priv_Typ));\n \n-         Build_Body := True;\n+         if Has_Own_DIC (Work_Typ) then  -- If we're testing this then maybe\n+            Add_Own_DIC        -- we shouldn't be calling Find_DIC_Typ above???\n+              (DIC_Prag => DIC_Prag,\n+               DIC_Typ  => DIC_Typ,  -- Should this just be Work_Typ???\n+               Obj_Id   => Obj_Id,\n+               Stmts    => Stmts);\n+         end if;\n \n-      --  Otherwise the working type inherits a DIC pragma from a parent type.\n-      --  This processing is carried out when the type is frozen because the\n-      --  state of all parent discriminants is known at that point. Note that\n-      --  it is semantically sound to delay the creation of the DIC procedure\n-      --  body till the freeze point. If the type has a DIC pragma of its own,\n-      --  then the DIC procedure body would have already been constructed at\n-      --  the end of the visible declarations and all parent DIC pragmas are\n-      --  effectively \"hidden\" and irrelevant.\n+      --  Otherwise the \"full\" DIC procedure verifies the DICs of the full\n+      --  view, well as DICs inherited from parent types. In addition, it\n+      --  indirectly verifies the DICs of the partial view by calling the\n+      --  \"partial\" DIC procedure.\n \n-      elsif For_Freeze then\n-         pragma Assert (Has_Inherited_DIC (Work_Typ));\n-         pragma Assert (DIC_Typ /= Work_Typ);\n+      else\n+         pragma Assert (Present (Full_Typ));\n \n-         --  The working type is tagged. The verification of the assertion\n-         --  expression is subject to the same semantics as class-wide pre-\n-         --  and postconditions.\n+         --  Check the DIC of the partial view by calling the \"partial\" DIC\n+         --  procedure, unless the partial DIC body is empty. Generate:\n \n-         if Is_Tagged_Type (Work_Typ) then\n-            Add_Inherited_Tagged_DIC\n-              (DIC_Prag  => DIC_Prag,\n-               Par_Typ   => DIC_Typ,\n-               Deriv_Typ => Work_Typ,\n-               Stmts     => Stmts);\n+         --    <Work_Typ>Partial_DIC (_object);\n \n-         --  Otherwise the working type is not tagged. Verify the assertion\n-         --  expression of the inherited DIC pragma by directly calling the\n-         --  DIC procedure of the parent type.\n+         if Present (Part_Proc) and then not Has_Null_Body (Part_Proc) then\n+            Append_New_To (Stmts,\n+              Make_Procedure_Call_Statement (Loc,\n+                Name                   => New_Occurrence_Of (Part_Proc, Loc),\n+                Parameter_Associations => New_List (\n+                  New_Occurrence_Of (Obj_Id, Loc))));\n+         end if;\n \n-         else\n-            Add_Inherited_DIC\n-              (DIC_Prag  => DIC_Prag,\n-               Par_Typ   => DIC_Typ,\n-               Deriv_Typ => Work_Typ,\n-               Stmts     => Stmts);\n+         --  Derived subtypes do not have a partial view\n+\n+         if Present (Priv_Typ) then\n+\n+            --  The processing of the \"full\" DIC procedure intentionally\n+            --  skips the partial view because a) this may result in changes of\n+            --  visibility and b) lead to duplicate checks. However, when the\n+            --  full view is the underlying full view of an untagged derived\n+            --  type whose parent type is private, partial DICs appear on\n+            --  the rep item chain of the partial view only.\n+\n+            --    package Pack_1 is\n+            --       type Root ... is private;\n+            --    private\n+            --       <full view of Root>\n+            --    end Pack_1;\n+\n+            --    with Pack_1;\n+            --    package Pack_2 is\n+            --       type Child is new Pack_1.Root with Type_DIC => ...;\n+            --       <underlying full view of Child>\n+            --    end Pack_2;\n+\n+            --  As a result, the processing of the full view must also consider\n+            --  all DICs of the partial view.\n+\n+            if Is_Untagged_Private_Derivation (Priv_Typ, Full_Typ) then\n+               null;\n+\n+            --  Otherwise the DICs of the partial view are ignored\n+\n+            else\n+               --  Ignore the DICs of the partial view by eliminating the view\n+\n+               Priv_Typ := Empty;\n+            end if;\n          end if;\n \n-         Build_Body := True;\n+         --  Process inherited Default_Initial_Conditions for all parent types\n+\n+         Add_Parent_DICs (Work_Typ, Obj_Id, Stmts);\n       end if;\n \n       End_Scope;\n \n-      if Build_Body then\n+      --  Produce an empty completing body in the following cases:\n+      --    * Assertions are disabled\n+      --    * The DIC Assertion_Policy is Ignore\n+\n+      if No (Stmts) then\n+         Stmts := New_List (Make_Null_Statement (Loc));\n+      end if;\n \n-         --  Produce an empty completing body in the following cases:\n-         --    * Assertions are disabled\n-         --    * The DIC Assertion_Policy is Ignore\n+      --  Generate:\n+      --    procedure <Work_Typ>DIC (_object : <Work_Typ>) is\n+      --    begin\n+      --       <Stmts>\n+      --    end <Work_Typ>DIC;\n \n-         if No (Stmts) then\n-            Stmts := New_List (Make_Null_Statement (Loc));\n-         end if;\n+      Proc_Body :=\n+        Make_Subprogram_Body (Loc,\n+          Specification                =>\n+            Copy_Subprogram_Spec (Parent (Proc_Id)),\n+          Declarations                 => Empty_List,\n+            Handled_Statement_Sequence =>\n+              Make_Handled_Sequence_Of_Statements (Loc,\n+                Statements => Stmts));\n+      Proc_Body_Id := Defining_Entity (Proc_Body);\n \n-         --  Generate:\n-         --    procedure <Work_Typ>DIC (_object : <Work_Typ>) is\n-         --    begin\n-         --       <Stmts>\n-         --    end <Work_Typ>DIC;\n-\n-         Proc_Body :=\n-           Make_Subprogram_Body (Loc,\n-             Specification                =>\n-               Copy_Subprogram_Spec (Parent (Proc_Id)),\n-             Declarations                 => Empty_List,\n-               Handled_Statement_Sequence =>\n-                 Make_Handled_Sequence_Of_Statements (Loc,\n-                   Statements => Stmts));\n-         Proc_Body_Id := Defining_Entity (Proc_Body);\n-\n-         --  Perform minor decoration in case the body is not analyzed\n-\n-         Set_Ekind        (Proc_Body_Id, E_Subprogram_Body);\n-         Set_Etype        (Proc_Body_Id, Standard_Void_Type);\n-         Set_Scope        (Proc_Body_Id, Current_Scope);\n-         Set_SPARK_Pragma (Proc_Body_Id, SPARK_Pragma (Proc_Id));\n-         Set_SPARK_Pragma_Inherited\n-                          (Proc_Body_Id, SPARK_Pragma_Inherited (Proc_Id));\n-\n-         --  Link both spec and body to avoid generating duplicates\n-\n-         Set_Corresponding_Body (Proc_Decl, Proc_Body_Id);\n-         Set_Corresponding_Spec (Proc_Body, Proc_Id);\n-\n-         --  The body should not be inserted into the tree when the context\n-         --  is a generic unit because it is not part of the template.\n-         --  Note that the body must still be generated in order to resolve the\n-         --  DIC assertion expression.\n-\n-         if Inside_A_Generic then\n-            null;\n+      --  Perform minor decoration in case the body is not analyzed\n \n-         --  Semi-insert the body into the tree for GNATprove by setting its\n-         --  Parent field. This allows for proper upstream tree traversals.\n+      Set_Ekind        (Proc_Body_Id, E_Subprogram_Body);\n+      Set_Etype        (Proc_Body_Id, Standard_Void_Type);\n+      Set_Scope        (Proc_Body_Id, Current_Scope);\n+      Set_SPARK_Pragma (Proc_Body_Id, SPARK_Pragma (Proc_Id));\n+      Set_SPARK_Pragma_Inherited\n+                       (Proc_Body_Id, SPARK_Pragma_Inherited (Proc_Id));\n \n-         elsif GNATprove_Mode then\n-            Set_Parent (Proc_Body, Parent (Declaration_Node (Work_Typ)));\n+      --  Link both spec and body to avoid generating duplicates\n \n-         --  Otherwise the body is part of the freezing actions of the working\n-         --  type.\n+      Set_Corresponding_Body (Proc_Decl, Proc_Body_Id);\n+      Set_Corresponding_Spec (Proc_Body, Proc_Id);\n \n-         else\n-            Append_Freeze_Action (Work_Typ, Proc_Body);\n-         end if;\n+      --  The body should not be inserted into the tree when the context\n+      --  is a generic unit because it is not part of the template.\n+      --  Note that the body must still be generated in order to resolve the\n+      --  DIC assertion expression.\n+\n+      if Inside_A_Generic then\n+         null;\n+\n+      --  Semi-insert the body into the tree for GNATprove by setting its\n+      --  Parent field. This allows for proper upstream tree traversals.\n+\n+      elsif GNATprove_Mode then\n+         Set_Parent (Proc_Body, Parent (Declaration_Node (Work_Typ)));\n+\n+      --  Otherwise the body is part of the freezing actions of the working\n+      --  type.\n+\n+      else\n+         Append_Freeze_Action (Work_Typ, Proc_Body);\n       end if;\n \n    <<Leave>>\n@@ -1974,7 +2225,10 @@ package body Exp_Util is\n    --  replaced by gotos which jump to the end of the routine and restore the\n    --  Ghost mode.\n \n-   procedure Build_DIC_Procedure_Declaration (Typ : Entity_Id) is\n+   procedure Build_DIC_Procedure_Declaration\n+     (Typ         : Entity_Id;\n+      Partial_DIC : Boolean := False)\n+   is\n       Loc : constant Source_Ptr := Sloc (Typ);\n \n       Saved_GM  : constant Ghost_Mode_Type := Ghost_Mode;\n@@ -1985,6 +2239,7 @@ package body Exp_Util is\n       DIC_Typ   : Entity_Id;\n       Proc_Decl : Node_Id;\n       Proc_Id   : Entity_Id;\n+      Proc_Nam  : Name_Id;\n       Typ_Decl  : Node_Id;\n \n       CRec_Typ : Entity_Id;\n@@ -2060,17 +2315,35 @@ package body Exp_Util is\n \n       if not Is_Verifiable_DIC_Pragma (DIC_Prag) then\n          goto Leave;\n+      end if;\n+\n+      --  Nothing to do if the type already has a \"partial\" DIC procedure\n+\n+      if Partial_DIC then\n+         if Present (Partial_DIC_Procedure (Work_Typ)) then\n+            goto Leave;\n+         end if;\n \n-      --  Nothing to do if the type already has a DIC procedure\n+      --  Nothing to do if the type already has a \"full\" DIC procedure\n \n       elsif Present (DIC_Procedure (Work_Typ)) then\n          goto Leave;\n       end if;\n \n+      --  The caller requests the declaration of the \"partial\" DIC procedure\n+\n+      if Partial_DIC then\n+         Proc_Nam := New_External_Name (Chars (Work_Typ), \"Partial_DIC\");\n+\n+      --  Otherwise the caller requests the declaration of the \"full\" DIC\n+      --  procedure.\n+\n+      else\n+         Proc_Nam := New_External_Name (Chars (Work_Typ), \"DIC\");\n+      end if;\n+\n       Proc_Id :=\n-        Make_Defining_Identifier (Loc,\n-          Chars =>\n-            New_External_Name (Chars (Work_Typ), \"Default_Initial_Condition\"));\n+        Make_Defining_Identifier (Loc, Chars => Proc_Nam);\n \n       --  Perform minor decoration in case the declaration is not analyzed\n \n@@ -3712,18 +3985,18 @@ package body Exp_Util is\n \n       --  Add an extra out parameter to carry the function result\n \n-      Name_Len := 6;\n-      Name_Buffer (1 .. Name_Len) := \"RESULT\";\n       Append_To (Proc_Formals,\n         Make_Parameter_Specification (Loc,\n           Defining_Identifier =>\n-            Make_Defining_Identifier (Loc, Chars => Name_Find),\n+            Make_Defining_Identifier (Loc, Name_UP_RESULT),\n           Out_Present         => True,\n           Parameter_Type      => New_Occurrence_Of (Etype (Subp), Loc)));\n \n-      --  The new procedure declaration is inserted immediately after the\n-      --  function declaration. The processing in Build_Procedure_Body_Form\n-      --  relies on this order.\n+      --  The new procedure declaration is inserted before the function\n+      --  declaration. The processing in Build_Procedure_Body_Form relies on\n+      --  this order. Note that we insert before because in the case of a\n+      --  function body with no separate spec, we do not want to insert the\n+      --  new spec after the body which will later get rewritten.\n \n       Proc_Decl :=\n         Make_Subprogram_Declaration (Loc,\n@@ -3733,7 +4006,7 @@ package body Exp_Util is\n                 Make_Defining_Identifier (Loc, Chars (Subp)),\n               Parameter_Specifications => Proc_Formals));\n \n-      Insert_After_And_Analyze (Unit_Declaration_Node (Subp), Proc_Decl);\n+      Insert_Before_And_Analyze (Unit_Declaration_Node (Subp), Proc_Decl);\n \n       --  Entity of procedure must remain invisible so that it does not\n       --  overload subsequent references to the original function.\n@@ -6204,9 +6477,7 @@ package body Exp_Util is\n       Loc : constant Source_Ptr := Sloc (Var);\n       Ent : constant Entity_Id  := Entity (Var);\n \n-      procedure Process_Current_Value_Condition\n-        (N : Node_Id;\n-         S : Boolean);\n+      procedure Process_Current_Value_Condition (N : Node_Id; S : Boolean);\n       --  N is an expression which holds either True (S = True) or False (S =\n       --  False) in the condition. This procedure digs out the expression and\n       --  if it refers to Ent, sets Op and Val appropriately.\n@@ -6267,6 +6538,7 @@ package body Exp_Util is\n             --  Recursively process AND and AND THEN branches\n \n             Process_Current_Value_Condition (Left_Opnd (Cond), True);\n+            pragma Assert (Op'Valid);\n \n             if Op /= N_Empty then\n                return;\n@@ -6362,6 +6634,17 @@ package body Exp_Util is\n          return;\n       end if;\n \n+      --  In GNATprove mode we don't want to use current value optimizer, in\n+      --  particular for loop invariant expressions and other assertions that\n+      --  act as cut points for proof. The optimizer often folds expressions\n+      --  into True/False where they trivially follow from the previous\n+      --  assignments, but this deprives proof from the information needed to\n+      --  discharge checks that are beyond the scope of the value optimizer.\n+\n+      if GNATprove_Mode then\n+         return;\n+      end if;\n+\n       --  Otherwise examine current value\n \n       declare\n@@ -7615,26 +7898,6 @@ package body Exp_Util is\n       end if;\n    end Integer_Type_For;\n \n-   ----------------------------\n-   -- Is_All_Null_Statements --\n-   ----------------------------\n-\n-   function Is_All_Null_Statements (L : List_Id) return Boolean is\n-      Stm : Node_Id;\n-\n-   begin\n-      Stm := First (L);\n-      while Present (Stm) loop\n-         if Nkind (Stm) /= N_Null_Statement then\n-            return False;\n-         end if;\n-\n-         Next (Stm);\n-      end loop;\n-\n-      return True;\n-   end Is_All_Null_Statements;\n-\n    --------------------------------------------------\n    -- Is_Displacement_Of_Object_Or_Function_Result --\n    --------------------------------------------------\n@@ -8899,6 +9162,13 @@ package body Exp_Util is\n \n       return\n         Present (Args)\n+\n+          --  If there are args, but the first arg is Empty, then treat the\n+          --  pragma the same as having no args (there may be a second arg that\n+          --  is an implicitly added type arg, and Empty is a placeholder).\n+\n+          and then Present (Get_Pragma_Arg (First (Args)))\n+\n           and then Nkind (Get_Pragma_Arg (First (Args))) /= N_Null;\n    end Is_Verifiable_DIC_Pragma;\n \n@@ -9100,25 +9370,6 @@ package body Exp_Util is\n       end if;\n    end Kill_Dead_Code;\n \n-   ------------------------\n-   -- Known_Non_Negative --\n-   ------------------------\n-\n-   function Known_Non_Negative (Opnd : Node_Id) return Boolean is\n-   begin\n-      if Is_OK_Static_Expression (Opnd) and then Expr_Value (Opnd) >= 0 then\n-         return True;\n-\n-      else\n-         declare\n-            Lo : constant Node_Id := Type_Low_Bound (Etype (Opnd));\n-         begin\n-            return\n-              Is_OK_Static_Expression (Lo) and then Expr_Value (Lo) >= 0;\n-         end;\n-      end if;\n-   end Known_Non_Negative;\n-\n    -----------------------------\n    -- Make_CW_Equivalent_Type --\n    -----------------------------\n@@ -10687,20 +10938,6 @@ package body Exp_Util is\n       return Res;\n    end New_Class_Wide_Subtype;\n \n-   --------------------------------\n-   -- Non_Limited_Designated_Type --\n-   ---------------------------------\n-\n-   function Non_Limited_Designated_Type (T : Entity_Id) return Entity_Id is\n-      Desig : constant Entity_Id := Designated_Type (T);\n-   begin\n-      if Has_Non_Limited_View (Desig) then\n-         return Non_Limited_View (Desig);\n-      else\n-         return Desig;\n-      end if;\n-   end Non_Limited_Designated_Type;\n-\n    -----------------------------------\n    -- OK_To_Do_Constant_Replacement --\n    -----------------------------------\n@@ -11507,8 +11744,8 @@ package body Exp_Util is\n       --  If this is a packed array component or a selected component with a\n       --  nonstandard representation, we cannot generate a reference because\n       --  the component may be unaligned, so we must use a renaming and this\n-      --  renaming must be handled by the front end, as the back end may balk\n-      --  at the nonstandard representation (see Exp_Ch2.Expand_Renaming).\n+      --  renaming is handled by the front end, as the back end may balk at\n+      --  the nonstandard representation (see Evaluation_Required in Exp_Ch8).\n \n       elsif Nkind (Exp) in N_Indexed_Component | N_Selected_Component\n         and then Has_Non_Standard_Rep (Etype (Prefix (Exp)))\n@@ -11522,8 +11759,7 @@ package body Exp_Util is\n              Subtype_Mark        => New_Occurrence_Of (Exp_Type, Loc),\n              Name                => Relocate_Node (Exp)));\n \n-      --  For an expression that denotes a name, we can use a renaming scheme\n-      --  that is handled by the back end, instead of the front end as above.\n+      --  For an expression that denotes a name, we can use a renaming scheme.\n       --  This is needed for correctness in the case of a volatile object of\n       --  a nonvolatile type because the Make_Reference call of the \"default\"\n       --  approach would generate an illegal access value (an access value\n@@ -11546,8 +11782,6 @@ package body Exp_Util is\n              Subtype_Mark        => New_Occurrence_Of (Exp_Type, Loc),\n              Name                => Relocate_Node (Exp)));\n \n-         Set_Is_Renaming_Of_Object (Def_Id, False);\n-\n       --  Avoid generating a variable-sized temporary, by generating the\n       --  reference just for the function call. The transformation could be\n       --  refined to apply only when the array component is constrained by a\n@@ -11958,8 +12192,7 @@ package body Exp_Util is\n                --  and view swaps, the parent type is taken from the formal\n                --  parameter of the subprogram being called.\n \n-               if Nkind (Context) in\n-                    N_Function_Call | N_Procedure_Call_Statement\n+               if Nkind (Context) in N_Subprogram_Call\n                  and then No (Type_Map.Get (Entity (Name (Context))))\n                then\n                   New_Ref :=\n@@ -13555,88 +13788,6 @@ package body Exp_Util is\n       end if;\n    end Small_Integer_Type_For;\n \n-   --------------------------\n-   -- Target_Has_Fixed_Ops --\n-   --------------------------\n-\n-   Integer_Sized_Small : Ureal;\n-   --  Set to 2.0 ** -(Integer'Size - 1) the first time that this function is\n-   --  called (we don't want to compute it more than once).\n-\n-   Long_Integer_Sized_Small : Ureal;\n-   --  Set to 2.0 ** -(Long_Integer'Size - 1) the first time that this function\n-   --  is called (we don't want to compute it more than once)\n-\n-   First_Time_For_THFO : Boolean := True;\n-   --  Set to False after first call (if Fractional_Fixed_Ops_On_Target)\n-\n-   function Target_Has_Fixed_Ops\n-     (Left_Typ   : Entity_Id;\n-      Right_Typ  : Entity_Id;\n-      Result_Typ : Entity_Id) return Boolean\n-   is\n-      function Is_Fractional_Type (Typ : Entity_Id) return Boolean;\n-      --  Return True if the given type is a fixed-point type with a small\n-      --  value equal to 2 ** (-(T'Object_Size - 1)) and whose values have\n-      --  an absolute value less than 1.0. This is currently limited to\n-      --  fixed-point types that map to Integer or Long_Integer.\n-\n-      ------------------------\n-      -- Is_Fractional_Type --\n-      ------------------------\n-\n-      function Is_Fractional_Type (Typ : Entity_Id) return Boolean is\n-      begin\n-         if Esize (Typ) = Standard_Integer_Size then\n-            return Small_Value (Typ) = Integer_Sized_Small;\n-\n-         elsif Esize (Typ) = Standard_Long_Integer_Size then\n-            return Small_Value (Typ) = Long_Integer_Sized_Small;\n-\n-         else\n-            return False;\n-         end if;\n-      end Is_Fractional_Type;\n-\n-   --  Start of processing for Target_Has_Fixed_Ops\n-\n-   begin\n-      --  Return False if Fractional_Fixed_Ops_On_Target is false\n-\n-      if not Fractional_Fixed_Ops_On_Target then\n-         return False;\n-      end if;\n-\n-      --  Here the target has Fractional_Fixed_Ops, if first time, compute\n-      --  standard constants used by Is_Fractional_Type.\n-\n-      if First_Time_For_THFO then\n-         First_Time_For_THFO := False;\n-\n-         Integer_Sized_Small :=\n-           UR_From_Components\n-             (Num   => Uint_1,\n-              Den   => UI_From_Int (Standard_Integer_Size - 1),\n-              Rbase => 2);\n-\n-         Long_Integer_Sized_Small :=\n-           UR_From_Components\n-             (Num   => Uint_1,\n-              Den   => UI_From_Int (Standard_Long_Integer_Size - 1),\n-              Rbase => 2);\n-      end if;\n-\n-      --  Return True if target supports fixed-by-fixed multiply/divide for\n-      --  fractional fixed-point types (see Is_Fractional_Type) and the operand\n-      --  and result types are equivalent fractional types.\n-\n-      return Is_Fractional_Type (Base_Type (Left_Typ))\n-        and then Is_Fractional_Type (Base_Type (Right_Typ))\n-        and then Is_Fractional_Type (Base_Type (Result_Typ))\n-        and then Esize (Left_Typ) = Esize (Right_Typ)\n-        and then Esize (Left_Typ) = Esize (Result_Typ);\n-   end Target_Has_Fixed_Ops;\n-\n    -------------------\n    -- Type_Map_Hash --\n    -------------------"}, {"sha": "96d38944b9c141b4f970f68f99207984595ab979", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 18, "deletions": 36, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -293,23 +293,29 @@ package Exp_Util is\n    --  type is frozen.\n \n    function Build_DIC_Call\n-     (Loc    : Source_Ptr;\n-      Obj_Id : Entity_Id;\n-      Typ    : Entity_Id) return Node_Id;\n-   --  Build a call to the DIC procedure of type Typ with Obj_Id as the actual\n+     (Loc      : Source_Ptr;\n+      Obj_Name : Node_Id;\n+      Typ      : Entity_Id) return Node_Id;\n+   --  Build a call to the DIC procedure for Typ with Obj_Name as the actual\n    --  parameter.\n \n    procedure Build_DIC_Procedure_Body\n-     (Typ        : Entity_Id;\n-      For_Freeze : Boolean := False);\n+     (Typ         : Entity_Id;\n+      Partial_DIC : Boolean := False);\n    --  Create the body of the procedure which verifies the assertion expression\n-   --  of pragma Default_Initial_Condition at run time. Flag For_Freeze should\n-   --  be set when the body is constructed as part of the freezing actions for\n-   --  Typ.\n-\n-   procedure Build_DIC_Procedure_Declaration (Typ : Entity_Id);\n+   --  of pragma Default_Initial_Condition at run time. Partial_DIC indicates\n+   --  that a partial DIC-checking procedure body should be built, for checking\n+   --  a DIC associated with the type's partial view, and which will be called\n+   --  by the main DIC procedure.\n+\n+   procedure Build_DIC_Procedure_Declaration\n+     (Typ         : Entity_Id;\n+      Partial_DIC : Boolean := False);\n    --  Create the declaration of the procedure which verifies the assertion\n-   --  expression of pragma Default_Initial_Condition at run time.\n+   --  expression of pragma Default_Initial_Condition at run time. Partial_DIC\n+   --  indicates that a partial DIC-checking procedure should be declared,\n+   --  for checking a DIC associated with the type's partial view, and which\n+   --  will be called by the main DIC procedure.\n \n    procedure Build_Invariant_Procedure_Body\n      (Typ               : Entity_Id;\n@@ -750,11 +756,6 @@ package Exp_Util is\n    --  Return a suitable standard integer type containing at least S bits and\n    --  of the signedness given by Uns.\n \n-   function Is_All_Null_Statements (L : List_Id) return Boolean;\n-   --  Return True if all the items of the list are N_Null_Statement nodes.\n-   --  False otherwise. True for an empty list. It is an error to call this\n-   --  routine with No_List as the argument.\n-\n    function Is_Displacement_Of_Object_Or_Function_Result\n      (Obj_Id : Entity_Id) return Boolean;\n    --  Determine whether Obj_Id is a source entity that has been initialized by\n@@ -864,11 +865,6 @@ package Exp_Util is\n    --  list. If Warn is True, a warning will be output at the start of N\n    --  indicating the deletion of the code.\n \n-   function Known_Non_Negative (Opnd : Node_Id) return Boolean;\n-   --  Given a node for a subexpression, determines if it represents a value\n-   --  that cannot possibly be negative, and if so returns True. A value of\n-   --  False means that it is not known if the value is positive or negative.\n-\n    function Make_Invariant_Call (Expr : Node_Id) return Node_Id;\n    --  Generate a call to the Invariant_Procedure associated with the type of\n    --  expression Expr. Expr is passed as an actual parameter in the call.\n@@ -949,11 +945,6 @@ package Exp_Util is\n    --  consist of constants, when the object has a nontrivial initialization\n    --  or is controlled.\n \n-   function Non_Limited_Designated_Type (T : Entity_Id) return Entity_Id;\n-   --  An anonymous access type may designate a limited view. Check whether\n-   --  non-limited view is available during expansion, to examine components\n-   --  or other characteristics of the full type.\n-\n    function OK_To_Do_Constant_Replacement (E : Entity_Id) return Boolean;\n    --  This function is used when testing whether or not to replace a reference\n    --  to entity E by a known constant value. Such replacement must be done\n@@ -1172,15 +1163,6 @@ package Exp_Util is\n    --  Return the smallest standard integer type containing at least S bits and\n    --  of the signedness given by Uns.\n \n-   function Target_Has_Fixed_Ops\n-     (Left_Typ   : Entity_Id;\n-      Right_Typ  : Entity_Id;\n-      Result_Typ : Entity_Id) return Boolean;\n-   --  Returns True if and only if the target machine has direct support\n-   --  for fixed-by-fixed multiplications and divisions for the given\n-   --  operand and result types. This is called in package Exp_Fixd to\n-   --  determine whether to expand such operations.\n-\n    function Type_May_Have_Bit_Aligned_Components\n      (Typ : Entity_Id) return Boolean;\n    --  Determines if Typ is a composite type that has within it (looking down"}, {"sha": "30c5b8e636839fe93fa82f9a1fc6618582aae3a9", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -39,6 +39,7 @@\n #include \"system.h\"\n #endif\n \n+#include \"adaint.h\"\n #include <sys/types.h>\n \n #ifdef __MINGW32__\n@@ -78,7 +79,6 @@\n #include <process.h>\n #include <signal.h>\n #include <io.h>\n-#include \"adaint.h\"\n #include \"mingw32.h\"\n \n int\n@@ -360,7 +360,11 @@ __gnat_pipe (int *fd)\n int\n __gnat_expect_fork (void)\n {\n-  return fork ();\n+  int pid = fork();\n+  if (pid == 0) {\n+    __gnat_in_child_after_fork = 1;\n+  }\n+  return pid;\n }\n \n void"}, {"sha": "8dc8a2223960dc3020c4f0d4ad6771a2c935bbd8", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -5642,15 +5642,15 @@ package body Freeze is\n                   Has_Rep_Pragma (E, Name_Atomic_Components)\n                then\n                   Error_Msg_N\n-                    (\"stand alone atomic constant must be \" &\n+                    (\"standalone atomic constant must be \" &\n                      \"imported (RM C.6(13))\", E);\n \n                elsif Has_Rep_Pragma (E, Name_Volatile)\n                        or else\n                      Has_Rep_Pragma (E, Name_Volatile_Components)\n                then\n                   Error_Msg_N\n-                    (\"stand alone volatile constant must be \" &\n+                    (\"standalone volatile constant must be \" &\n                      \"imported (RM C.6(13))\", E);\n                end if;\n             end if;\n@@ -8513,12 +8513,13 @@ package body Freeze is\n             end if;\n \n             if Actual_Size > 64\n-              and then Norm_Num (Small) /= Uint_1\n-              and then Norm_Den (Small) /= Uint_1\n+              and then (Norm_Num (Small) > Uint_2 ** 127\n+                         or else Norm_Den (Small) > Uint_2 ** 127)\n+              and then Small /= Ureal_2_M_128\n             then\n                Error_Msg_Name_1 := Name_Small;\n                Error_Msg_N\n-                 (\"`&''%` not an integer or reciprocal of an integer\", Typ);\n+                 (\"`&''%` not the ratio of two 128-bit integers\", Typ);\n             end if;\n \n             if Smaller (Expr_Value_R (Lo), Ureal_M_10_76) then\n@@ -9224,10 +9225,12 @@ package body Freeze is\n          Check_Overriding_Indicator (E, Empty, Is_Primitive (E));\n       end if;\n \n+      Retype := Get_Fullest_View (Etype (E));\n+\n       if Transform_Function_Array\n         and then Nkind (Parent (E)) = N_Function_Specification\n-        and then Is_Array_Type (Etype (E))\n-        and then Is_Constrained (Etype (E))\n+        and then Is_Array_Type (Retype)\n+        and then Is_Constrained (Retype)\n         and then not Is_Unchecked_Conversion_Instance (E)\n         and then not Rewritten_For_C (E)\n       then"}, {"sha": "d88c354c9a42232c55acc915c2b4059773d38e09", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -42,7 +42,7 @@ MV = mv\n MKDIR = mkdir -p\n RM = rm -f\n RMDIR = rm -rf\n-\f\n+\n \n # Extra flags to pass to recursive makes.\n COMMON_ADAFLAGS= -gnatpg\n@@ -814,7 +814,6 @@ doc/gnat_rm.pdf: ada/gnat_rm.texi $(gcc_docdir)/include/fdl.texi\t\\\n doc/gnat-style.pdf: ada/gnat-style.texi $(gcc_docdir)/include/fdl.texi\n \t$(TEXI2PDF) -c -I $(abs_docdir)/include -o $@ $<\n \n-\f\n # Install hooks:\n # gnat1 is installed elsewhere as part of $(COMPILERS).\n \n@@ -908,7 +907,7 @@ ada.maintainer-clean:\n \t-$(RM) ada/nmake.ads\n \t-$(RM) ada/treeprs.ads\n \t-$(RM) ada/snames.ads ada/snames.adb ada/snames.h\n-\f\n+\n # Stage hooks:\n # The main makefile has already created stage?/ada\n \n@@ -1005,7 +1004,7 @@ $(check_acats_targets): check-acats%:\n \ttouch $$GCC_RUNTEST_PARALLELIZE_DIR/finished\n \n .PHONY: check-acats $(check_acats_targets)\n-\f\n+\n # Compiling object files from source files.\n \n # Ada language specific files."}, {"sha": "836fcbef400ebbc5c027a6be0e6a32010d0fb0c5", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -110,7 +110,7 @@ NO_INLINE_ADAFLAGS = -fno-inline\n NO_OMIT_ADAFLAGS = -fno-omit-frame-pointer\n NO_SIBLING_ADAFLAGS = -fno-optimize-sibling-calls\n NO_REORDER_ADAFLAGS = -fno-toplevel-reorder\n-GNATLIBFLAGS = -W -Wall -gnatpg -nostdinc\n+GNATLIBFLAGS = -W -Wall -gnatg -nostdinc\n GNATLIBCFLAGS = -g -O2\n # Pretend that _Unwind_GetIPInfo is available for the target by default.  This\n # should be autodetected during the configuration of libada and passed down to\n@@ -216,7 +216,7 @@ endif\n ifneq ($(xmake_file),)\n include $(xmake_file)\n endif\n-\f\n+\n # Now figure out from those variables how to compile and link.\n \n all.indirect: Makefile ../gnat1$(exeext)\n@@ -311,7 +311,7 @@ Makefile: ../config.status $(srcdir)/ada/gcc-interface/Makefile.in $(srcdir)/ada\n # This tells GNU make version 3 not to export all the variables\n # defined in this file into the environment.\n .NOEXPORT:\n-\f\n+\n # Lists of files for various purposes.\n \n GNATLINK_OBJS = gnatlink.o \\"}, {"sha": "27ef51a9eed6755ea2393ecc146526460ec97d86", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 80, "deletions": 24, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1764,6 +1764,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t/* Use the arbitrary scale factor description.  Note that we support\n \t   a Small_Value whose magnitude is larger than 64-bit even on 32-bit\n \t   platforms, so we unconditionally use a (dummy) 128-bit type.  */\n+\telse\n \t  {\n \t    const Uint gnat_num = Norm_Num (gnat_small_value);\n \t    const Uint gnat_den = Norm_Den (gnat_small_value);\n@@ -2196,14 +2197,16 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t  }\n \telse\n \t  {\n+\t    /* We make the fields addressable for the sake of compatibility\n+\t       with languages for which the regular fields are addressable.  */\n \t    tem\n \t      = create_field_decl (get_identifier (\"P_ARRAY\"),\n \t\t\t\t   ptr_type_node, gnu_fat_type,\n-\t\t\t\t   NULL_TREE, NULL_TREE, 0, 0);\n+\t\t\t\t   NULL_TREE, NULL_TREE, 0, 1);\n \t    DECL_CHAIN (tem)\n \t      = create_field_decl (get_identifier (\"P_BOUNDS\"),\n \t\t\t\t   gnu_ptr_template, gnu_fat_type,\n-\t\t\t\t   NULL_TREE, NULL_TREE, 0, 0);\n+\t\t\t\t   NULL_TREE, NULL_TREE, 0, 1);\n \t    finish_fat_pointer_type (gnu_fat_type, tem);\n \t    SET_TYPE_UNCONSTRAINED_ARRAY (gnu_fat_type, gnu_type);\n \t  }\n@@ -2326,7 +2329,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \tfinish_record_type (gnu_template_type, gnu_template_fields, 0,\n \t\t\t    debug_info_p);\n \tTYPE_CONTEXT (gnu_template_type) = current_function_decl;\n-\tTYPE_READONLY (gnu_template_type) = 1;\n \n \t/* If Component_Size is not already specified, annotate it with the\n \t   size of the component.  */\n@@ -3053,15 +3055,24 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t\t        || type_annotate_only);\n \t  }\n \n-\t/* Make a node for the record.  If we are not defining the record,\n-\t   suppress expanding incomplete types.  */\n+\t/* Make a node for the record type.  */\n \tgnu_type = make_node (tree_code_for_record_type (gnat_entity));\n \tTYPE_NAME (gnu_type) = gnu_entity_name;\n \tTYPE_PACKED (gnu_type) = (packed != 0) || has_align || has_rep;\n \tTYPE_REVERSE_STORAGE_ORDER (gnu_type)\n \t  = Reverse_Storage_Order (gnat_entity);\n+\n+\t/* If the record type has discriminants, pointers to it may also point\n+\t   to constrained subtypes of it, so mark it as may_alias for LTO.  */\n+\tif (has_discr)\n+\t  prepend_one_attribute\n+\t    (&attr_list, ATTR_MACHINE_ATTRIBUTE,\n+\t     get_identifier (\"may_alias\"), NULL_TREE,\n+\t     gnat_entity);\n+\n \tprocess_attributes (&gnu_type, &attr_list, true, gnat_entity);\n \n+\t/* If we are not defining it, suppress expanding incomplete types.  */\n \tif (!definition)\n \t  {\n \t    defer_incomplete_level++;\n@@ -4702,6 +4713,10 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t  const int quals\n \t    = TYPE_QUAL_VOLATILE\n \t      | (Is_Full_Access (gnat_entity) ? TYPE_QUAL_ATOMIC : 0);\n+\t  /* This is required by free_lang_data_in_type to disable the ODR.  */\n+\t  if (TREE_CODE (gnu_type) == ENUMERAL_TYPE)\n+\t    TYPE_STUB_DECL (gnu_type)\n+\t      = create_type_stub_decl (TYPE_NAME (gnu_type), gnu_type);\n \t  gnu_type = change_qualified_type (gnu_type, quals);\n \t}\n \n@@ -8319,12 +8334,12 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n   if (p_gnu_rep_list && gnu_rep_list)\n     *p_gnu_rep_list = chainon (*p_gnu_rep_list, gnu_rep_list);\n \n-  /* Deal with the annoying case of an extension of a record with variable size\n-     and partial rep clause, for which the _Parent field is forced at offset 0\n-     and has variable size, which we do not support below.  Note that we cannot\n-     do it if the field has fixed size because we rely on the presence of the\n-     REP part built below to trigger the reordering of the fields in a derived\n-     record type when all the fields have a fixed position.  */\n+  /* Deal with the case of an extension of a record type with variable size and\n+     partial rep clause, for which the _Parent field is forced at offset 0 and\n+     has variable size.  Note that we cannot do it if the field has fixed size\n+     because we rely on the presence of the REP part built below to trigger the\n+     reordering of the fields in a derived record type when all the fields have\n+     a fixed position.  */\n   else if (gnu_rep_list\n \t   && !DECL_CHAIN (gnu_rep_list)\n \t   && TREE_CODE (DECL_SIZE (gnu_rep_list)) != INTEGER_CST\n@@ -8342,33 +8357,52 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n      record, before the others, if we also have fields without rep clause.  */\n   else if (gnu_rep_list)\n     {\n-      tree gnu_rep_type, gnu_rep_part;\n-      int i, len = list_length (gnu_rep_list);\n-      tree *gnu_arr = XALLOCAVEC (tree, len);\n+      tree gnu_parent, gnu_rep_type;\n \n       /* If all the fields have a rep clause, we can do a flat layout.  */\n       layout_with_rep = !gnu_field_list\n \t\t\t&& (!gnu_variant_part || variants_have_rep);\n+\n+      /* Same as above but the extension itself has a rep clause, in which case\n+\t we need to set aside the _Parent field to lay out the REP part.  */\n+      if (TREE_CODE (DECL_SIZE (gnu_rep_list)) != INTEGER_CST\n+\t  && !layout_with_rep\n+\t  && !variants_have_rep\n+\t  && first_free_pos\n+\t  && integer_zerop (first_free_pos)\n+\t  && integer_zerop (bit_position (gnu_rep_list)))\n+\t{\n+\t  gnu_parent = gnu_rep_list;\n+\t  gnu_rep_list = DECL_CHAIN (gnu_rep_list);\n+\t}\n+      else\n+\tgnu_parent = NULL_TREE;\n+\n       gnu_rep_type\n \t= layout_with_rep ? gnu_record_type : make_node (RECORD_TYPE);\n \n-      for (gnu_field = gnu_rep_list, i = 0;\n-\t   gnu_field;\n-\t   gnu_field = DECL_CHAIN (gnu_field), i++)\n-\tgnu_arr[i] = gnu_field;\n+      /* Sort the fields in order of increasing bit position.  */\n+      const int len = list_length (gnu_rep_list);\n+      tree *gnu_arr = XALLOCAVEC (tree, len);\n+\n+      gnu_field = gnu_rep_list;\n+      for (int i = 0; i < len; i++)\n+\t{\n+\t  gnu_arr[i] = gnu_field;\n+\t  gnu_field = DECL_CHAIN (gnu_field);\n+\t}\n \n       qsort (gnu_arr, len, sizeof (tree), compare_field_bitpos);\n \n-      /* Put the fields in the list in order of increasing position, which\n-\t means we start from the end.  */\n       gnu_rep_list = NULL_TREE;\n-      for (i = len - 1; i >= 0; i--)\n+      for (int i = len - 1; i >= 0; i--)\n \t{\n \t  DECL_CHAIN (gnu_arr[i]) = gnu_rep_list;\n \t  gnu_rep_list = gnu_arr[i];\n \t  DECL_CONTEXT (gnu_arr[i]) = gnu_rep_type;\n \t}\n \n+      /* Do the layout of the REP part, if any.  */\n       if (layout_with_rep)\n \tgnu_field_list = gnu_rep_list;\n       else\n@@ -8377,14 +8411,36 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n \t    = create_concat_name (gnat_record_type, \"REP\");\n \t  TYPE_REVERSE_STORAGE_ORDER (gnu_rep_type)\n \t    = TYPE_REVERSE_STORAGE_ORDER (gnu_record_type);\n-\t  finish_record_type (gnu_rep_type, gnu_rep_list, 1, debug_info);\n+\t  finish_record_type (gnu_rep_type, gnu_rep_list, 1, false);\n \n \t  /* If FIRST_FREE_POS is nonzero, we need to ensure that the fields\n \t     without rep clause are laid out starting from this position.\n \t     Therefore, we force it as a minimal size on the REP part.  */\n-\t  gnu_rep_part\n+\t  tree gnu_rep_part\n \t    = create_rep_part (gnu_rep_type, gnu_record_type, first_free_pos);\n \n+\t  /* If this is an extension, put back the _Parent field as the first\n+\t     field of the REP part at offset 0 and update its layout.  */\n+\t  if (gnu_parent)\n+\t    {\n+\t      const unsigned int align = DECL_ALIGN (gnu_parent);\n+\t      DECL_CHAIN (gnu_parent) = TYPE_FIELDS (gnu_rep_type);\n+\t      TYPE_FIELDS (gnu_rep_type) = gnu_parent;\n+\t      DECL_CONTEXT (gnu_parent) = gnu_rep_type;\n+\t      if (align > TYPE_ALIGN (gnu_rep_type))\n+\t\t{\n+\t\t  SET_TYPE_ALIGN (gnu_rep_type, align);\n+\t\t  TYPE_SIZE (gnu_rep_type)\n+\t\t    = round_up (TYPE_SIZE (gnu_rep_type), align);\n+\t\t  TYPE_SIZE_UNIT (gnu_rep_type)\n+\t\t    = round_up (TYPE_SIZE_UNIT (gnu_rep_type), align);\n+\t\t  SET_DECL_ALIGN (gnu_rep_part, align);\n+\t\t}\n+\t    }\n+\n+\t  if (debug_info)\n+\t    rest_of_record_type_compilation (gnu_rep_type);\n+\n \t  /* Chain the REP part at the beginning of the field list.  */\n \t  DECL_CHAIN (gnu_rep_part) = gnu_field_list;\n \t  gnu_field_list = gnu_rep_part;\n@@ -10352,7 +10408,7 @@ create_concat_name (Entity_Id gnat_entity, const char *suffix)\n {\n   const Entity_Kind kind = Ekind (gnat_entity);\n   const bool has_suffix = (suffix != NULL);\n-  String_Template temp = {1, has_suffix ? strlen (suffix) : 0};\n+  String_Template temp = {1, has_suffix ? (int) strlen (suffix) : 0};\n   String_Pointer sp = {suffix, &temp};\n \n   Get_External_Name (gnat_entity, has_suffix, sp);"}, {"sha": "ae7a52f3ca224bbe43431a98b38d90c0f8981139", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 44, "deletions": 22, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -970,6 +970,10 @@ lvalue_for_aggregate_p (Node_Id gnat_node, tree gnu_type)\n       /* Even if the parameter is by copy, prefer an lvalue.  */\n       return true;\n \n+    case N_Simple_Return_Statement:\n+      /* Likewise for a return value.  */\n+      return true;\n+\n     case N_Indexed_Component:\n     case N_Selected_Component:\n       /* If an elementary component is used, take it from the constant.  */\n@@ -1333,7 +1337,7 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n \n   return gnu_result;\n }\n-\f\n+\n /* Subroutine of gnat_to_gnu to process gnat_node, an N_Pragma.  Return\n    any statements we generate.  */\n \n@@ -4513,7 +4517,11 @@ Call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target,\n \t  and the return type has variable size, because the gimplifier\n \t  doesn't handle these cases.\n \n-       4. There is no target and we have misaligned In Out or Out parameters\n+       4. There is a target which is a bit-field and the function returns an\n+\t  unconstrained record type with default discriminant, because the\n+\t  return may copy more data than the bit-field can contain.\n+\n+       5. There is no target and we have misaligned In Out or Out parameters\n \t  passed by reference, because we need to preserve the return value\n \t  before copying back the parameters.  However, in this case, we'll\n \t  defer creating the temporary, see below.\n@@ -4536,7 +4544,11 @@ Call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target,\n \t\t  || (TREE_CODE (TREE_TYPE (gnu_target)) == ARRAY_TYPE\n \t\t      && TREE_CODE (TYPE_SIZE (TREE_TYPE (gnu_target)))\n \t\t\t == INTEGER_CST))\n-\t      && TREE_CODE (TYPE_SIZE (gnu_result_type)) != INTEGER_CST)))\n+\t      && TREE_CODE (TYPE_SIZE (gnu_result_type)) != INTEGER_CST)\n+\t  || (gnu_target\n+\t      && TREE_CODE (gnu_target) == COMPONENT_REF\n+\t      && DECL_BIT_FIELD (TREE_OPERAND (gnu_target, 1))\n+\t      && type_is_padding_self_referential (gnu_result_type))))\n     {\n       gnu_retval = create_temporary (\"R\", gnu_result_type);\n       DECL_RETURN_VALUE_P (gnu_retval) = 1;\n@@ -8249,8 +8261,10 @@ gnat_to_gnu (Node_Id gnat_node)\n       /* Remove padding only if the inner object is of self-referential\n \t size: in that case it must be an object of unconstrained type\n \t with a default discriminant and we want to avoid copying too\n-\t much data.  */\n-      if (type_is_padding_self_referential (TREE_TYPE (gnu_result)))\n+\t much data.  But do not remove it if it is already too small.  */\n+      if (type_is_padding_self_referential (TREE_TYPE (gnu_result))\n+\t  && !(TREE_CODE (gnu_result) == COMPONENT_REF\n+\t       && DECL_BIT_FIELD (TREE_OPERAND (gnu_result, 1))))\n \tgnu_result = convert (TREE_TYPE (TYPE_FIELDS (TREE_TYPE (gnu_result))),\n \t\t\t      gnu_result);\n     }\n@@ -8465,15 +8479,16 @@ add_decl_expr (tree gnu_decl, Node_Id gnat_node)\n \t  MARK_VISITED (DECL_SIZE_UNIT (gnu_decl));\n \t  MARK_VISITED (DECL_INITIAL (gnu_decl));\n \t}\n-      /* In any case, we have to deal with our own TYPE_ADA_SIZE field.  */\n-      else if (TREE_CODE (gnu_decl) == TYPE_DECL\n-\t       && RECORD_OR_UNION_TYPE_P (type)\n-\t       && !TYPE_FAT_POINTER_P (type))\n-\tMARK_VISITED (TYPE_ADA_SIZE (type));\n     }\n   else\n     add_stmt_with_node (gnu_stmt, gnat_node);\n \n+  /* Mark our TYPE_ADA_SIZE field now since it will not be gimplified.  */\n+  if (TREE_CODE (gnu_decl) == TYPE_DECL\n+      && RECORD_OR_UNION_TYPE_P (type)\n+      && !TYPE_FAT_POINTER_P (type))\n+    MARK_VISITED (TYPE_ADA_SIZE (type));\n+\n   /* If this is a variable and an initializer is attached to it, it must be\n      valid for the context.  Similar to init_const in create_var_decl.  */\n   if (TREE_CODE (gnu_decl) == VAR_DECL\n@@ -10597,7 +10612,7 @@ make_alias_for_thunk (tree target)\n   return alias;\n }\n \n-/* Create the covariant part of the {GNAT,GNU}_THUNK.  */\n+/* Create the local covariant part of {GNAT,GNU}_THUNK.  */\n \n static tree\n make_covariant_thunk (Entity_Id gnat_thunk, tree gnu_thunk)\n@@ -10608,14 +10623,18 @@ make_covariant_thunk (Entity_Id gnat_thunk, tree gnu_thunk)\n \t\t  gnu_name, TREE_TYPE (gnu_thunk));\n \n   DECL_ARGUMENTS (gnu_cv_thunk) = copy_list (DECL_ARGUMENTS (gnu_thunk));\n+  for (tree param_decl = DECL_ARGUMENTS (gnu_cv_thunk);\n+       param_decl;\n+       param_decl = DECL_CHAIN (param_decl))\n+    DECL_CONTEXT (param_decl) = gnu_cv_thunk;\n+\n   DECL_RESULT (gnu_cv_thunk) = copy_node (DECL_RESULT (gnu_thunk));\n   DECL_CONTEXT (DECL_RESULT (gnu_cv_thunk)) = gnu_cv_thunk;\n \n   DECL_LANG_SPECIFIC (gnu_cv_thunk) = DECL_LANG_SPECIFIC (gnu_thunk);\n   DECL_CONTEXT (gnu_cv_thunk) = DECL_CONTEXT (gnu_thunk);\n   TREE_READONLY (gnu_cv_thunk) = TREE_READONLY (gnu_thunk);\n   TREE_THIS_VOLATILE (gnu_cv_thunk) = TREE_THIS_VOLATILE (gnu_thunk);\n-  TREE_PUBLIC (gnu_cv_thunk) = TREE_PUBLIC (gnu_thunk);\n   DECL_ARTIFICIAL (gnu_cv_thunk) = 1;\n \n   return gnu_cv_thunk;\n@@ -10716,8 +10735,11 @@ maybe_make_gnu_thunk (Entity_Id gnat_thunk, tree gnu_thunk)\n \n   tree gnu_target = gnat_to_gnu_entity (gnat_target, NULL_TREE, false);\n \n-  /* Thunk and target must have the same nesting level, if any.  */\n-  gcc_assert (DECL_CONTEXT (gnu_thunk) == DECL_CONTEXT (gnu_target));\n+  /* If the target is local, then thunk and target must have the same context\n+     because cgraph_node::expand_thunk can only forward the static chain.  */\n+  if (DECL_STATIC_CHAIN (gnu_target)\n+      && DECL_CONTEXT (gnu_thunk) != DECL_CONTEXT (gnu_target))\n+    return false;\n \n   /* If the target returns by invisible reference and is external, apply the\n      same transformation as Subprogram_Body_to_gnu here.  */\n@@ -10742,6 +10764,12 @@ maybe_make_gnu_thunk (Entity_Id gnat_thunk, tree gnu_thunk)\n \n   cgraph_node *target_node = cgraph_node::get_create (gnu_target);\n \n+  /* We may also need to create an alias for the target in order to make\n+     the call local, depending on the linkage of the target.  */\n+  tree gnu_alias = use_alias_for_thunk_p (gnu_target)\n+\t\t  ? make_alias_for_thunk (gnu_target)\n+\t\t  : gnu_target;\n+\n   /* If the return type of the target is a controlling type, then we need\n      both an usual this thunk and a covariant thunk in this order:\n \n@@ -10754,17 +10782,11 @@ maybe_make_gnu_thunk (Entity_Id gnat_thunk, tree gnu_thunk)\n       tree gnu_cv_thunk = make_covariant_thunk (gnat_thunk, gnu_thunk);\n       target_node->create_thunk (gnu_cv_thunk, gnu_target, false,\n \t\t\t\t - fixed_offset, 0, 0,\n-\t\t\t\t NULL_TREE, gnu_target);\n+\t\t\t\t NULL_TREE, gnu_alias);\n \n-      gnu_target = gnu_cv_thunk;\n+      gnu_alias = gnu_target = gnu_cv_thunk;\n     }\n \n-  /* We may also need to create an alias for the target in order to make\n-     the call local, depending on the linkage of the target.  */\n-  tree gnu_alias = use_alias_for_thunk_p (gnu_target)\n-\t\t  ? make_alias_for_thunk (gnu_target)\n-\t\t  : gnu_target;\n-\n   target_node->create_thunk (gnu_thunk, gnu_target, true,\n \t\t\t     fixed_offset, virtual_value, indirect_offset,\n \t\t\t     virtual_offset, gnu_alias);"}, {"sha": "952f032072b761a0a23062743bb8f871deb7464a", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 44, "deletions": 36, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -467,6 +467,11 @@ make_dummy_type (Entity_Id gnat_type)\n     = create_type_stub_decl (TYPE_NAME (gnu_type), gnu_type);\n   if (Is_By_Reference_Type (gnat_equiv))\n     TYPE_BY_REFERENCE_P (gnu_type) = 1;\n+  if (Has_Discriminants (gnat_equiv))\n+    decl_attributes (&gnu_type,\n+\t\t     tree_cons (get_identifier (\"may_alias\"), NULL_TREE,\n+\t\t\t\tNULL_TREE),\n+\t\t     ATTR_FLAG_TYPE_IN_PLACE);\n \n   SET_DUMMY_NODE (gnat_equiv, gnu_type);\n \n@@ -516,10 +521,10 @@ build_dummy_unc_pointer_types (Entity_Id gnat_desig_type, tree gnu_desig_type)\n     = create_type_stub_decl (create_concat_name (gnat_desig_type, \"XUP\"),\n \t\t\t     gnu_fat_type);\n   fields = create_field_decl (get_identifier (\"P_ARRAY\"), gnu_ptr_array,\n-\t\t\t      gnu_fat_type, NULL_TREE, NULL_TREE, 0, 0);\n+\t\t\t      gnu_fat_type, NULL_TREE, NULL_TREE, 0, 1);\n   DECL_CHAIN (fields)\n     = create_field_decl (get_identifier (\"P_BOUNDS\"), gnu_ptr_template,\n-\t\t\t gnu_fat_type, NULL_TREE, NULL_TREE, 0, 0);\n+\t\t\t gnu_fat_type, NULL_TREE, NULL_TREE, 0, 1);\n   finish_fat_pointer_type (gnu_fat_type, fields);\n   SET_TYPE_UNCONSTRAINED_ARRAY (gnu_fat_type, gnu_desig_type);\n   /* Suppress debug info until after the type is completed.  */\n@@ -1571,7 +1576,7 @@ maybe_pad_type (tree type, tree size, unsigned int align,\n     {\n       tree packable_type = make_packable_type (type, true, align);\n       if (TYPE_MODE (packable_type) != BLKmode\n-\t  && align >= TYPE_ALIGN (packable_type))\n+\t  && compare_tree_int (TYPE_SIZE (packable_type), align) <= 0)\n         type = packable_type;\n     }\n \n@@ -2046,7 +2051,6 @@ finish_record_type (tree record_type, tree field_list, int rep_level,\n \tthis_ada_size = this_size;\n \n       const bool variant_part = (TREE_CODE (type) == QUAL_UNION_TYPE);\n-      const bool variant_part_at_zero = variant_part && integer_zerop (pos);\n \n       /* Clear DECL_BIT_FIELD for the cases layout_decl does not handle.  */\n       if (DECL_BIT_FIELD (field)\n@@ -2089,7 +2093,7 @@ finish_record_type (tree record_type, tree field_list, int rep_level,\n       /* Clear DECL_BIT_FIELD_TYPE for a variant part at offset 0, it's simply\n \t not supported by the DECL_BIT_FIELD_REPRESENTATIVE machinery because\n \t the variant part is always the last field in the list.  */\n-      if (variant_part_at_zero)\n+      if (variant_part && integer_zerop (pos))\n \tDECL_BIT_FIELD_TYPE (field) = NULL_TREE;\n \n       /* If we still have DECL_BIT_FIELD set at this point, we know that the\n@@ -2124,18 +2128,20 @@ finish_record_type (tree record_type, tree field_list, int rep_level,\n \tcase RECORD_TYPE:\n \t  /* Since we know here that all fields are sorted in order of\n \t     increasing bit position, the size of the record is one\n-\t     higher than the ending bit of the last field processed,\n-\t     unless we have a variant part at offset 0, since in this\n-\t     case we might have a field outside the variant part that\n-\t     has a higher ending position; so use a MAX in this case.\n-\t     Also, if this field is a QUAL_UNION_TYPE, we need to take\n-\t     into account the previous size in the case of empty variants.  */\n+\t     higher than the ending bit of the last field processed\n+\t     unless we have a rep clause, because we might be processing\n+\t     the REP part of a record with a variant part for which the\n+\t     variant part has a rep clause but not the fixed part, in\n+\t     which case this REP part may contain overlapping fields\n+\t     and thus needs to be treated like a union tyoe above, so\n+\t     use a MAX in that case.  Also, if this field is a variant\n+\t     part, we need to take into account the previous size in\n+\t     the case of empty variants.  */\n \t  ada_size\n-\t    = merge_sizes (ada_size, pos, this_ada_size, variant_part,\n-\t\t\t   variant_part_at_zero);\n+\t    = merge_sizes (ada_size, pos, this_ada_size, rep_level > 0,\n+\t\t\t   variant_part);\n \t  size\n-\t    = merge_sizes (size, pos, this_size, variant_part,\n-\t\t\t   variant_part_at_zero);\n+\t    = merge_sizes (size, pos, this_size, rep_level > 0, variant_part);\n \t  break;\n \n \tdefault:\n@@ -2427,14 +2433,14 @@ rest_of_record_type_compilation (tree record_type)\n }\n \n /* Utility function of above to merge LAST_SIZE, the previous size of a record\n-   with FIRST_BIT and SIZE that describe a field.  SPECIAL is true if this\n-   represents a QUAL_UNION_TYPE in which case we must look for COND_EXPRs and\n-   replace a value of zero with the old size.  If MAX is true, we take the\n+   with FIRST_BIT and SIZE that describe a field.  If MAX is true, we take the\n    MAX of the end position of this field with LAST_SIZE.  In all other cases,\n-   we use FIRST_BIT plus SIZE.  Return an expression for the size.  */\n+   we use FIRST_BIT plus SIZE.  SPECIAL is true if it's for a QUAL_UNION_TYPE,\n+   in which case we must look for COND_EXPRs and replace a value of zero with\n+   the old size.  Return an expression for the size.  */\n \n static tree\n-merge_sizes (tree last_size, tree first_bit, tree size, bool special, bool max)\n+merge_sizes (tree last_size, tree first_bit, tree size, bool max, bool special)\n {\n   tree type = TREE_TYPE (last_size);\n   tree new_size;\n@@ -2451,11 +2457,11 @@ merge_sizes (tree last_size, tree first_bit, tree size, bool special, bool max)\n \t\t\t    integer_zerop (TREE_OPERAND (size, 1))\n \t\t\t    ? last_size : merge_sizes (last_size, first_bit,\n \t\t\t\t\t\t       TREE_OPERAND (size, 1),\n-\t\t\t\t\t\t       1, max),\n+\t\t\t\t\t\t       max, special),\n \t\t\t    integer_zerop (TREE_OPERAND (size, 2))\n \t\t\t    ? last_size : merge_sizes (last_size, first_bit,\n \t\t\t\t\t\t       TREE_OPERAND (size, 2),\n-\t\t\t\t\t\t       1, max));\n+\t\t\t\t\t\t       max, special));\n \n   /* We don't need any NON_VALUE_EXPRs and they can confuse us (especially\n      when fed through SUBSTITUTE_IN_EXPR) into thinking that a constant\n@@ -3521,6 +3527,12 @@ create_subprog_decl (tree name, tree asm_name, tree type, tree param_decl_list,\n void\n finish_subprog_decl (tree decl, tree asm_name, tree type)\n {\n+  /* DECL_ARGUMENTS is set by the caller, but not its context.  */\n+  for (tree param_decl = DECL_ARGUMENTS (decl);\n+       param_decl;\n+       param_decl = DECL_CHAIN (param_decl))\n+    DECL_CONTEXT (param_decl) = decl;\n+\n   tree result_decl\n     = build_decl (DECL_SOURCE_LOCATION (decl), RESULT_DECL, NULL_TREE,\n \t\t  TREE_TYPE (type));\n@@ -3566,8 +3578,6 @@ finish_subprog_decl (tree decl, tree asm_name, tree type)\n void\n begin_subprog_body (tree subprog_decl)\n {\n-  tree param_decl;\n-\n   announce_function (subprog_decl);\n \n   /* This function is being defined.  */\n@@ -3583,10 +3593,6 @@ begin_subprog_body (tree subprog_decl)\n   /* Enter a new binding level and show that all the parameters belong to\n      this function.  */\n   gnat_pushlevel ();\n-\n-  for (param_decl = DECL_ARGUMENTS (subprog_decl); param_decl;\n-       param_decl = DECL_CHAIN (param_decl))\n-    DECL_CONTEXT (param_decl) = subprog_decl;\n }\n \n /* Finish translating the current subprogram and set its BODY.  */\n@@ -4930,10 +4936,6 @@ convert (tree type, tree expr)\n \t\t\t\t\t  convert (TREE_TYPE (type),\n \t\t\t\t\t\t   TYPE_MIN_VALUE (type))));\n \n-      /* ... fall through ... */\n-\n-    case ENUMERAL_TYPE:\n-    case BOOLEAN_TYPE:\n       /* If we are converting an additive expression to an integer type\n \t with lower precision, be wary of the optimization that can be\n \t applied by convert_to_integer.  There are 2 problematic cases:\n@@ -4945,8 +4947,7 @@ convert (tree type, tree expr)\n \t     intermediate conversion that changes the sign could\n \t     be inserted and thus introduce an artificial overflow\n \t     at compile time when the placeholder is substituted.  */\n-      if (code == INTEGER_TYPE\n-\t  && ecode == INTEGER_TYPE\n+      if (ecode == INTEGER_TYPE\n \t  && TYPE_PRECISION (type) < TYPE_PRECISION (etype)\n \t  && (TREE_CODE (expr) == PLUS_EXPR || TREE_CODE (expr) == MINUS_EXPR))\n \t{\n@@ -4955,11 +4956,18 @@ convert (tree type, tree expr)\n \t  if ((TREE_CODE (TREE_TYPE (op0)) == INTEGER_TYPE\n \t       && TYPE_BIASED_REPRESENTATION_P (TREE_TYPE (op0)))\n \t      || CONTAINS_PLACEHOLDER_P (expr))\n-\t    return build1 (NOP_EXPR, type, expr);\n+\t    return fold_convert (type, expr);\n \t}\n \n+      /* ... fall through ... */\n+\n+    case ENUMERAL_TYPE:\n       return fold (convert_to_integer (type, expr));\n \n+    case BOOLEAN_TYPE:\n+      /* Do not use convert_to_integer with boolean types.  */\n+      return fold_convert_loc (EXPR_LOCATION (expr), type, expr);\n+\n     case POINTER_TYPE:\n     case REFERENCE_TYPE:\n       /* If converting between two thin pointers, adjust if needed to account\n@@ -5901,7 +5909,7 @@ gnat_write_global_declarations (void)\n       struct varpool_node *node;\n       char *label;\n \n-      ASM_FORMAT_PRIVATE_NAME (label, first_global_object_name, 0);\n+      ASM_FORMAT_PRIVATE_NAME (label, first_global_object_name, ULONG_MAX);\n       dummy_global\n \t= build_decl (BUILTINS_LOCATION, VAR_DECL, get_identifier (label),\n \t\t      void_type_node);"}, {"sha": "0318194e0dddd14ebef28be514e9c8268de5a5ae", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1020,15 +1020,6 @@ procedure Gnat1drv is\n       --  by the backend where possible).\n \n       Sem_Ch13.Validate_Address_Clauses;\n-\n-      --  Validate independence pragmas (again using values annotated by the\n-      --  back end for component layout where possible) but only for non-GCC\n-      --  back ends, as this is done a priori for GCC back ends.\n-      --  ??? We use to test for AAMP_On_Target which is now gone, consider\n-      --\n-      --  if AAMP_On_Target then\n-      --     Sem_Ch13.Validate_Independence;\n-      --  end if;\n    end Post_Compilation_Validation_Checks;\n \n    -----------------------------------"}, {"sha": "417ee3444ff28d65b3f042d7a9f8ffeb92ae0b70", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 491, "deletions": 463, "changes": 954, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "360177b042bd4f26a00b8618b71ad61f410a531d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -21,11 +21,11 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Nov 19, 2020\n+GNAT User's Guide for Native Platforms , Dec 11, 2020\n \n AdaCore\n \n-Copyright @copyright{} 2008-2020, Free Software Foundation\n+Copyright @copyright{} 2008-2021, Free Software Foundation\n @end quotation\n \n @end copying\n@@ -381,7 +381,7 @@ Performance Considerations\n * Optimization Levels:: \n * Debugging Optimized Code:: \n * Inlining of Subprograms:: \n-* Floating_Point_Operations:: \n+* Floating Point Operations:: \n * Vectorization of loops:: \n * Other Optimization Switches:: \n * Optimization and Strict Aliasing:: \n@@ -2970,6 +2970,10 @@ temporary files that are immediately deleted; it doesn't make sense to\n depend on a file that no longer exists. Such tools include\n @code{gprbuild}, @code{gnatmake}, and @code{gnatcheck}.\n \n+By default, configuration pragma files are stored by their absolute paths in\n+ALI files. You can use the @code{-gnateb} switch in order to store them by\n+their basename instead.\n+\n If you are using project file, a separate mechanism is provided using\n project attributes.\n \n@@ -8968,6 +8972,19 @@ an exception because @code{Self(Obj)} produces an anonymous object which does\n not share the memory location of @code{Obj}.\n @end table\n \n+@geindex -gnateb (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnateb}\n+\n+Store configuration files by their basename in ALI files. This switch is\n+used for instance by gprbuild for distributed builds in order to prevent\n+issues where machine-specific absolute paths could end up being stored in\n+ALI files.\n+@end table\n+\n @geindex -gnatec (gcc)\n \n \n@@ -11490,7 +11507,7 @@ not included in this check.\n \n @emph{Suppress warnings on redefinition of names in standard.}\n \n-This switch activates warnings for declarations that declare a name that\n+This switch disables warnings for declarations that declare a name that\n is defined in package Standard.\n @end table\n \n@@ -15919,6 +15936,9 @@ Exclude source files (check object consistency only).\n Use the target-independent XDR protocol for stream oriented attributes\n instead of the default implementation which is based on direct binary\n representations and is therefore target-and endianness-dependent.\n+However it does not support 128-bit integer types and the exception\n+@code{Ada.IO_Exceptions.Device_Error} is raised if any attempt is made\n+at streaming 128-bit integer types with it.\n \n @geindex -Xnnn (gnatbind)\n \n@@ -19632,7 +19652,7 @@ some guidelines on debugging optimized code.\n * Optimization Levels:: \n * Debugging Optimized Code:: \n * Inlining of Subprograms:: \n-* Floating_Point_Operations:: \n+* Floating Point Operations:: \n * Vectorization of loops:: \n * Other Optimization Switches:: \n * Optimization and Strict Aliasing:: \n@@ -19981,7 +20001,7 @@ Note that if you use @code{-g} you can then use the @code{strip} program\n on the resulting executable,\n which removes both debugging information and global symbols.\n \n-@node Inlining of Subprograms,Floating_Point_Operations,Debugging Optimized Code,Performance Considerations\n+@node Inlining of Subprograms,Floating Point Operations,Debugging Optimized Code,Performance Considerations\n @anchor{gnat_ugn/gnat_and_program_execution id32}@anchor{185}@anchor{gnat_ugn/gnat_and_program_execution inlining-of-subprograms}@anchor{100}\n @subsubsection Inlining of Subprograms\n \n@@ -20120,9 +20140,9 @@ automatically assume that @code{-O3} is better than @code{-O2}, and\n indeed you should use @code{-O3} only if tests show that it actually\n improves performance for your program.\n \n-@node Floating_Point_Operations,Vectorization of loops,Inlining of Subprograms,Performance Considerations\n+@node Floating Point Operations,Vectorization of loops,Inlining of Subprograms,Performance Considerations\n @anchor{gnat_ugn/gnat_and_program_execution floating-point-operations}@anchor{186}@anchor{gnat_ugn/gnat_and_program_execution id33}@anchor{187}\n-@subsubsection Floating_Point_Operations\n+@subsubsection Floating Point Operations\n \n \n @geindex Floating-Point Operations\n@@ -20168,7 +20188,7 @@ Note that the ABI has the same form for both floating-point models,\n so it is permissible to mix units compiled with and without these\n switches.\n \n-@node Vectorization of loops,Other Optimization Switches,Floating_Point_Operations,Performance Considerations\n+@node Vectorization of loops,Other Optimization Switches,Floating Point Operations,Performance Considerations\n @anchor{gnat_ugn/gnat_and_program_execution id34}@anchor{188}@anchor{gnat_ugn/gnat_and_program_execution vectorization-of-loops}@anchor{189}\n @subsubsection Vectorization of loops\n "}, {"sha": "bbfa9f58d7679dbb28e7c1f1a4b267209ddfa305", "filename": "gcc/ada/gnatvsn.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgnatvsn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fgnatvsn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatvsn.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -39,7 +39,7 @@ package Gnatvsn is\n    --  Note: Makefile.in uses the library version string to construct the\n    --  soname value.\n \n-   Current_Year : constant String := \"2020\";\n+   Current_Year : constant String := \"2021\";\n    --  Used in printing copyright messages\n \n    Verbose_Library_Version : constant String := \"GNAT Lib v\" & Library_Version;"}, {"sha": "e7262cd62e531455449318fe24a50ac4a3dc4605", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -999,7 +999,7 @@ package body Impunit is\n \n       for J in Non_Imp_File_Names_12'Range loop\n          if Name_Buffer (1 .. 8) = Non_Imp_File_Names_12 (J).Fname then\n-            return Non_Imp_File_Names_95 (J).RMdef\n+            return Non_Imp_File_Names_12 (J).RMdef\n               and then Ada_Version >= Ada_2012;\n          end if;\n       end loop;"}, {"sha": "3ceb1a31b02cdb2169aef100bd2472a23f7a2d01", "filename": "gcc/ada/init.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -579,12 +579,8 @@ __gnat_error_handler (int sig, siginfo_t *si ATTRIBUTE_UNUSED, void *ucontext)\n \n #ifndef __ia64__\n #define HAVE_GNAT_ALTERNATE_STACK 1\n-/* This must be in keeping with System.OS_Interface.Alternate_Stack_Size.\n-   It must be larger than MINSIGSTKSZ and hopefully near 2 * SIGSTKSZ.  */\n-# if 16 * 1024 < MINSIGSTKSZ\n-#  error \"__gnat_alternate_stack too small\"\n-# endif\n-char __gnat_alternate_stack[16 * 1024];\n+/* This must be in keeping with System.OS_Interface.Alternate_Stack_Size.  */\n+char __gnat_alternate_stack[32 * 1024];\n #endif\n \n #ifdef __XENO__"}, {"sha": "bb4d97c168e8e879e55152b5e059e15b518a169b", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1945,10 +1945,11 @@ package body Inline is\n    -------------------\n \n    procedure Cannot_Inline\n-     (Msg        : String;\n-      N          : Node_Id;\n-      Subp       : Entity_Id;\n-      Is_Serious : Boolean := False)\n+     (Msg           : String;\n+      N             : Node_Id;\n+      Subp          : Entity_Id;\n+      Is_Serious    : Boolean := False;\n+      Suppress_Info : Boolean := False)\n    is\n    begin\n       --  In GNATprove mode, inlining is the technical means by which the\n@@ -1971,7 +1972,7 @@ package body Inline is\n             New_Msg (1 .. Len2) := \"info: no contextual analysis of\";\n             New_Msg (Len2 + 1 .. Msg'Length + Len2 - Len1) :=\n               Msg (Msg'First + Len1 .. Msg'Last);\n-            Cannot_Inline (New_Msg, N, Subp, Is_Serious);\n+            Cannot_Inline (New_Msg, N, Subp, Is_Serious, Suppress_Info);\n             return;\n          end;\n       end if;\n@@ -1992,14 +1993,14 @@ package body Inline is\n          then\n             null;\n \n-         --  In GNATprove mode, issue a warning when -gnatd_f is set, and\n-         --  indicate that the subprogram is not always inlined by setting\n-         --  flag Is_Inlined_Always to False.\n+         --  In GNATprove mode, issue an info message when -gnatd_f is set and\n+         --  Suppress_Info is False, and indicate that the subprogram is not\n+         --  always inlined by setting flag Is_Inlined_Always to False.\n \n          elsif GNATprove_Mode then\n             Set_Is_Inlined_Always (Subp, False);\n \n-            if Debug_Flag_Underscore_F then\n+            if Debug_Flag_Underscore_F and not Suppress_Info then\n                Error_Msg_NE (Msg, N, Subp);\n             end if;\n \n@@ -2022,14 +2023,14 @@ package body Inline is\n \n          Error_Msg_NE (Msg (Msg'First .. Msg'Last - 1), N, Subp);\n \n-      --  In GNATprove mode, issue a warning when -gnatd_f is set, and\n-      --  indicate that the subprogram is not always inlined by setting\n-      --  flag Is_Inlined_Always to False.\n+      --  In GNATprove mode, issue an info message when -gnatd_f is set and\n+      --  Suppress_Info is False, and indicate that the subprogram is not\n+      --  always inlined by setting flag Is_Inlined_Always to False.\n \n       elsif GNATprove_Mode then\n          Set_Is_Inlined_Always (Subp, False);\n \n-         if Debug_Flag_Underscore_F then\n+         if Debug_Flag_Underscore_F and not Suppress_Info then\n             Error_Msg_NE (Msg, N, Subp);\n          end if;\n "}, {"sha": "6790f159f0fde1dc8bcbf994ad0b7616e10f3324", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -154,15 +154,17 @@ package Inline is\n    --  its treatment of the subprogram.\n \n    procedure Cannot_Inline\n-     (Msg        : String;\n-      N          : Node_Id;\n-      Subp       : Entity_Id;\n-      Is_Serious : Boolean := False);\n+     (Msg           : String;\n+      N             : Node_Id;\n+      Subp          : Entity_Id;\n+      Is_Serious    : Boolean := False;\n+      Suppress_Info : Boolean := False);\n    --  This procedure is called if the node N, an instance of a call to\n    --  subprogram Subp, cannot be inlined. Msg is the message to be issued,\n    --  which ends with ? (it does not end with ?p?, this routine takes care of\n-   --  the need to change ? to ?p?). The behavior of this routine depends on\n-   --  the value of Back_End_Inlining:\n+   --  the need to change ? to ?p?). Suppress_Info is set to True to prevent\n+   --  issuing an info message in GNATprove mode. The behavior of this routine\n+   --  depends on the value of Back_End_Inlining:\n    --\n    --    * If Back_End_Inlining is not set (ie. legacy frontend inlining model)\n    --      then if Subp has a pragma Always_Inlined, then an error message is"}, {"sha": "f8d632af78f6cc3cce136ab4ef894479cf5dcced", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -646,7 +646,7 @@ package body Lib.Load is\n                   else\n                      Error_Msg_File_1 := Fname;\n                      Error_Msg_Unit_1 := Uname_Actual;\n-                     Error_Msg (\"File{ does not contain unit$\", Load_Msg_Sloc);\n+                     Error_Msg (\"file{ does not contain unit$\", Load_Msg_Sloc);\n                   end if;\n \n                   Write_Dependency_Chain;"}, {"sha": "16449e87e98a7c199d84be4b4b0501cd64e53ce9", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -1476,11 +1476,8 @@ package body Lib.Writ is\n             --  Normal case of a unit entry with a source index\n \n             if Sind > No_Source_File then\n-               --  We never want directory information in ALI files\n-               --  ???But back out this change temporarily until\n-               --  gprbuild is fixed.\n \n-               if False then\n+               if Config_Files_Store_Basename then\n                   Fname := Strip_Directory (File_Name (Sind));\n                else\n                   Fname := File_Name (Sind);\n@@ -1727,7 +1724,7 @@ package body Lib.Writ is\n \n       --  scope\n \n-      Write_Info_Name (Scope (IS_Id));\n+      Write_Info_Name (IS_Scope (IS_Id));\n       Write_Info_Char (' ');\n \n       --  line"}, {"sha": "08699060aa3c5b7ecda895cd591133a26c9d9dfa", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -819,7 +819,7 @@ package body Lib.Xref is\n                end if;\n \n             --  For the left hand of an assignment case, we do nothing here.\n-            --  The processing for Analyze_Assignment_Statement will set the\n+            --  The processing for Analyze_Assignment will set the\n             --  Referenced_As_LHS flag.\n \n             else"}, {"sha": "2272f83d68d48c5886056db7c32674d5ac6111ec", "filename": "gcc/ada/libgnarl/s-osinte__linux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -328,7 +328,7 @@ package System.OS_Interface is\n       oss : access stack_t) return int;\n    pragma Import (C, sigaltstack, \"sigaltstack\");\n \n-   Alternate_Stack_Size : constant := 16 * 1024;\n+   Alternate_Stack_Size : constant := 32 * 1024;\n    --  This must be in keeping with init.c:__gnat_alternate_stack\n \n    Alternate_Stack : aliased char_array (1 .. Alternate_Stack_Size);"}, {"sha": "634eae63ea325a0d0af596ea3c0554dc469174a1", "filename": "gcc/ada/libgnarl/s-tporft.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnarl%2Fs-tporft.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnarl%2Fs-tporft.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tporft.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -53,6 +53,7 @@ begin\n \n    Local_ATCB.Common.LL.Thread := Thread;\n    Local_ATCB.Common.Current_Priority := System.Priority'First;\n+   Local_ATCB.Common.Global_Task_Lock_Nesting := 0;\n    Specific.Set (Local_ATCB'Unchecked_Access);\n \n    --  It is now safe to use an allocator"}, {"sha": "948b70689f97bb2de4e79a2a676e48b64ef121a7", "filename": "gcc/ada/libgnat/a-cbdlli.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -199,23 +199,19 @@ is\n    procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1)\n+      Count     : Count_Type)\n    is\n    begin\n       Insert (Container, No_Element, New_Item, Count);\n    end Append;\n \n-   ---------------\n-   -- Append_One --\n-   ---------------\n-\n-   procedure Append_One\n+   procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type)\n    is\n    begin\n       Insert (Container, No_Element, New_Item, 1);\n-   end Append_One;\n+   end Append;\n \n    ------------\n    -- Assign --"}, {"sha": "4574aa65afd461a100b0fb68703d8cb7c3efa9fb", "filename": "gcc/ada/libgnat/a-cbdlli.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -57,7 +57,7 @@ is\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n       Aggregate         => (Empty        => Empty,\n-                            Add_Unnamed  => Append_One);\n+                            Add_Unnamed  => Append);\n    pragma Preelaborable_Initialization (List);\n \n    type Cursor is private;\n@@ -151,9 +151,9 @@ is\n    procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1);\n+      Count     : Count_Type);\n \n-   procedure Append_One\n+   procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type);\n "}, {"sha": "4037d84cb03479383ea64354e5068c0e94f8dc5d", "filename": "gcc/ada/libgnat/a-cbsyqu.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cbsyqu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cbsyqu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbsyqu.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -71,14 +71,22 @@ is\n \n       --  Need proper heap data structure here ???\n \n+      --  We suppress warnings here, which might otherwise be triggered\n+      --  by the box initialization of the Elements array below. This\n+      --  initialization is needed to preserve constraints, such as\n+      --  discriminant values, that the actual for Element_Type might\n+      --  carry.\n+\n+      pragma Warnings (Off);\n+\n       type Element_Array is\n         array (Count_Type range <>) of Queue_Interfaces.Element_Type;\n \n       type List_Type (Capacity : Count_Type) is tagged limited record\n          First, Last : Count_Type := 0;\n          Length      : Count_Type := 0;\n          Max_Length  : Count_Type := 0;\n-         Elements    : Element_Array (1 .. Capacity);\n+         Elements    : Element_Array (1 .. Capacity) := (others => <>);\n       end record;\n \n    end Implementation;"}, {"sha": "08c29f2bcb666cac41220061c4f7d6764ccae12c", "filename": "gcc/ada/libgnat/a-cdlili.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -158,23 +158,19 @@ is\n    procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1)\n+      Count     : Count_Type)\n    is\n    begin\n       Insert (Container, No_Element, New_Item, Count);\n    end Append;\n \n-   ---------------\n-   -- Append_One --\n-   ---------------\n-\n-   procedure Append_One\n+   procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type)\n    is\n    begin\n       Insert (Container, No_Element, New_Item, 1);\n-   end Append_One;\n+   end Append;\n \n    ------------\n    -- Assign --"}, {"sha": "53de78b4e5129f6bd7a0eb15731edfe8e6450eb3", "filename": "gcc/ada/libgnat/a-cdlili.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -58,7 +58,7 @@ is\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n       Aggregate         => (Empty       => Empty,\n-                            Add_Unnamed => Append_One);\n+                            Add_Unnamed => Append);\n \n    pragma Preelaborable_Initialization (List);\n \n@@ -154,9 +154,9 @@ is\n    procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1);\n+      Count     : Count_Type);\n \n-   procedure Append_One\n+   procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type);\n "}, {"sha": "79df5a940b244c7a57623bd218628706a07276a0", "filename": "gcc/ada/libgnat/a-cidlli.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -179,23 +179,19 @@ is\n    procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1)\n+      Count     : Count_Type)\n    is\n    begin\n       Insert (Container, No_Element, New_Item, Count);\n    end Append;\n \n-   ---------------\n-   -- Append_One --\n-   ---------------\n-\n-   procedure Append_One\n+   procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type)\n    is\n    begin\n       Insert (Container, No_Element, New_Item, 1);\n-   end Append_One;\n+   end Append;\n \n    ------------\n    -- Assign --"}, {"sha": "c75e5af7858be9148a4ca025e834d5fe11139d26", "filename": "gcc/ada/libgnat/a-cidlli.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cidlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cidlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cidlli.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -57,7 +57,7 @@ is\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n       Aggregate         => (Empty       => Empty,\n-                            Add_Unnamed => Append_One);\n+                            Add_Unnamed => Append);\n \n    pragma Preelaborable_Initialization (List);\n \n@@ -147,9 +147,9 @@ is\n    procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1);\n+      Count     : Count_Type);\n \n-   procedure Append_One\n+   procedure Append\n      (Container : in out List;\n       New_Item  : Element_Type);\n "}, {"sha": "8a8b279a9c0f2a6259f373ded952823404c9c6ab", "filename": "gcc/ada/libgnat/a-cobove.adb", "status": "modified", "additions": 39, "deletions": 34, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -321,46 +321,50 @@ package body Ada.Containers.Bounded_Vectors is\n    -- Append --\n    ------------\n \n-   procedure Append (Container : in out Vector; New_Item : Vector) is\n+   procedure Append\n+     (Container : in out Vector;\n+      New_Item  : Element_Type;\n+      Count     : Count_Type)\n+   is\n    begin\n-      if New_Item.Is_Empty then\n+      if Count = 0 then\n          return;\n       end if;\n \n       if Checks and then Container.Last >= Index_Type'Last then\n          raise Constraint_Error with \"vector is already at its maximum length\";\n       end if;\n \n-      Container.Insert (Container.Last + 1, New_Item);\n+      Container.Insert (Container.Last + 1, New_Item, Count);\n    end Append;\n \n-   procedure Append\n-     (Container : in out Vector;\n-      New_Item  : Element_Type;\n-      Count     : Count_Type := 1)\n-   is\n+   -------------------\n+   -- Append_Vector --\n+   -------------------\n+\n+   procedure Append_Vector (Container : in out Vector; New_Item : Vector) is\n    begin\n-      if Count = 0 then\n+      if New_Item.Is_Empty then\n          return;\n       end if;\n \n       if Checks and then Container.Last >= Index_Type'Last then\n          raise Constraint_Error with \"vector is already at its maximum length\";\n       end if;\n \n-      Container.Insert (Container.Last + 1, New_Item, Count);\n-   end Append;\n+      Container.Insert_Vector (Container.Last + 1, New_Item);\n+   end Append_Vector;\n \n-   ----------------\n-   -- Append_One --\n-   ----------------\n+   ------------\n+   -- Append --\n+   ------------\n \n-   procedure Append_One (Container : in out Vector;\n-                         New_Item  :        Element_Type)\n+   procedure Append (Container : in out Vector;\n+                     New_Item  :        Element_Type)\n    is\n    begin\n       Insert (Container, Last_Index (Container) + 1, New_Item, 1);\n-   end Append_One;\n+   end Append;\n \n    --------------\n    -- Capacity --\n@@ -1243,7 +1247,7 @@ package body Ada.Containers.Bounded_Vectors is\n       end if;\n    end Insert;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Extended_Index;\n       New_Item  : Vector)\n@@ -1309,9 +1313,9 @@ package body Ada.Containers.Bounded_Vectors is\n \n          Container.Elements (B + N - Src'Length .. B + N - 1) := Src;\n       end;\n-   end Insert;\n+   end Insert_Vector;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector)\n@@ -1343,10 +1347,10 @@ package body Ada.Containers.Bounded_Vectors is\n          Index := Before.Index;\n       end if;\n \n-      Insert (Container, Index, New_Item);\n-   end Insert;\n+      Insert_Vector (Container, Index, New_Item);\n+   end Insert_Vector;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector;\n@@ -1387,10 +1391,10 @@ package body Ada.Containers.Bounded_Vectors is\n          Index := Before.Index;\n       end if;\n \n-      Insert (Container, Index, New_Item);\n+      Insert_Vector (Container, Index, New_Item);\n \n       Position := Cursor'(Container'Unchecked_Access, Index);\n-   end Insert;\n+   end Insert_Vector;\n \n    procedure Insert\n      (Container : in out Vector;\n@@ -2028,23 +2032,24 @@ package body Ada.Containers.Bounded_Vectors is\n    -- Prepend --\n    -------------\n \n-   procedure Prepend (Container : in out Vector; New_Item : Vector) is\n-   begin\n-      Insert (Container, Index_Type'First, New_Item);\n-   end Prepend;\n-\n    procedure Prepend\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1)\n    is\n    begin\n-      Insert (Container,\n-              Index_Type'First,\n-              New_Item,\n-              Count);\n+      Insert (Container, Index_Type'First, New_Item, Count);\n    end Prepend;\n \n+   --------------------\n+   -- Prepend_Vector --\n+   --------------------\n+\n+   procedure Prepend_Vector (Container : in out Vector; New_Item : Vector) is\n+   begin\n+      Insert_Vector (Container, Index_Type'First, New_Item);\n+   end Prepend_Vector;\n+\n    --------------\n    -- Previous --\n    --------------"}, {"sha": "324ca840378b88f9c92508c65dc3b5ce13a71951", "filename": "gcc/ada/libgnat/a-cobove.ads", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cobove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-cobove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -61,7 +61,7 @@ package Ada.Containers.Bounded_Vectors is\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n       Aggregate         => (Empty          => Empty,\n-                            Add_Unnamed    => Append_One,\n+                            Add_Unnamed    => Append,\n                             New_Indexed    => New_Vector,\n                             Assign_Indexed => Replace_Element);\n \n@@ -190,22 +190,41 @@ package Ada.Containers.Bounded_Vectors is\n \n    procedure Move (Target : in out Vector; Source : in out Vector);\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Extended_Index;\n       New_Item  : Vector);\n \n    procedure Insert\n+     (Container : in out Vector;\n+      Before    : Extended_Index;\n+      New_Item  : Vector) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector);\n \n    procedure Insert\n+     (Container : in out Vector;\n+      Before    : Cursor;\n+      New_Item  : Vector) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector;\n       Position  : out Cursor);\n \n+   procedure Insert\n+     (Container : in out Vector;\n+      Before    : Cursor;\n+      New_Item  : Vector;\n+      Position  : out Cursor) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n    procedure Insert\n      (Container : in out Vector;\n       Before    : Extended_Index;\n@@ -236,27 +255,36 @@ package Ada.Containers.Bounded_Vectors is\n       Position  : out Cursor;\n       Count     : Count_Type := 1);\n \n-   procedure Prepend\n+   procedure Prepend_Vector\n      (Container : in out Vector;\n       New_Item  : Vector);\n \n+   procedure Prepend\n+     (Container : in out Vector;\n+      New_Item  : Vector) renames Prepend_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n    procedure Prepend\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n \n-   procedure Append\n+   procedure Append_Vector\n      (Container : in out Vector;\n       New_Item  : Vector);\n \n+   procedure Append\n+     (Container : in out Vector;\n+      New_Item  : Vector) renames Append_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n    procedure Append\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1);\n+      Count     : Count_Type);\n \n-   procedure Append_One (Container : in out Vector;\n-                         New_Item  :        Element_Type);\n-   --  Ada_2020 aggregate operation.\n+   procedure Append (Container : in out Vector;\n+                     New_Item  :        Element_Type);\n \n    procedure Insert_Space\n      (Container : in out Vector;"}, {"sha": "051aa711d6a41bd940b1955d7df9efd045c67d80", "filename": "gcc/ada/libgnat/a-coinve.adb", "status": "modified", "additions": 34, "deletions": 30, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coinve.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -67,16 +67,16 @@ is\n    begin\n       return Result : Vector do\n          Reserve_Capacity (Result, Length (Left) + Length (Right));\n-         Append (Result, Left);\n-         Append (Result, Right);\n+         Append_Vector (Result, Left);\n+         Append_Vector (Result, Right);\n       end return;\n    end \"&\";\n \n    function \"&\" (Left  : Vector; Right : Element_Type) return Vector is\n    begin\n       return Result : Vector do\n          Reserve_Capacity (Result, Length (Left) + 1);\n-         Append (Result, Left);\n+         Append_Vector (Result, Left);\n          Append (Result, Right);\n       end return;\n    end \"&\";\n@@ -86,7 +86,7 @@ is\n       return Result : Vector do\n          Reserve_Capacity (Result, 1 + Length (Right));\n          Append (Result, Left);\n-         Append (Result, Right);\n+         Append_Vector (Result, Right);\n       end return;\n    end \"&\";\n \n@@ -176,25 +176,25 @@ is\n       end;\n    end Adjust;\n \n-   ------------\n-   -- Append --\n-   ------------\n+   -------------------\n+   -- Append_Vector --\n+   -------------------\n \n-   procedure Append (Container : in out Vector; New_Item : Vector) is\n+   procedure Append_Vector (Container : in out Vector; New_Item : Vector) is\n    begin\n       if Is_Empty (New_Item) then\n          return;\n       elsif Checks and then Container.Last = Index_Type'Last then\n          raise Constraint_Error with \"vector is already at its maximum length\";\n       else\n-         Insert (Container, Container.Last + 1, New_Item);\n+         Insert_Vector (Container, Container.Last + 1, New_Item);\n       end if;\n-   end Append;\n+   end Append_Vector;\n \n    procedure Append\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1)\n+      Count     : Count_Type)\n    is\n    begin\n       --  In the general case, we pass the buck to Insert, but for efficiency,\n@@ -229,16 +229,16 @@ is\n       end if;\n    end Append;\n \n-   ----------------\n-   -- Append_One --\n-   ----------------\n+   ------------\n+   -- Append --\n+   ------------\n \n-   procedure Append_One (Container : in out Vector;\n+   procedure Append (Container : in out Vector;\n                         New_Item   :        Element_Type)\n    is\n    begin\n       Insert (Container, Last_Index (Container) + 1, New_Item, 1);\n-   end Append_One;\n+   end Append;\n \n    ----------------------\n    -- Append_Slow_Path --\n@@ -269,7 +269,7 @@ is\n          return;\n       else\n          Target.Clear;\n-         Target.Append (Source);\n+         Target.Append_Vector (Source);\n       end if;\n    end Assign;\n \n@@ -1619,7 +1619,7 @@ is\n       end;\n    end Insert;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Extended_Index;\n       New_Item  : Vector)\n@@ -1766,9 +1766,9 @@ is\n             Dst_Index := Dst_Index + 1;\n          end loop;\n       end;\n-   end Insert;\n+   end Insert_Vector;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector)\n@@ -1798,10 +1798,10 @@ is\n          Index := Before.Index;\n       end if;\n \n-      Insert (Container, Index, New_Item);\n-   end Insert;\n+      Insert_Vector (Container, Index, New_Item);\n+   end Insert_Vector;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector;\n@@ -1838,10 +1838,10 @@ is\n          Index := Before.Index;\n       end if;\n \n-      Insert (Container, Index, New_Item);\n+      Insert_Vector (Container, Index, New_Item);\n \n       Position := (Container'Unrestricted_Access, Index);\n-   end Insert;\n+   end Insert_Vector;\n \n    procedure Insert\n      (Container : in out Vector;\n@@ -2559,11 +2559,6 @@ is\n    -- Prepend --\n    -------------\n \n-   procedure Prepend (Container : in out Vector; New_Item : Vector) is\n-   begin\n-      Insert (Container, Index_Type'First, New_Item);\n-   end Prepend;\n-\n    procedure Prepend\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n@@ -2573,6 +2568,15 @@ is\n       Insert (Container, Index_Type'First, New_Item, Count);\n    end Prepend;\n \n+   -------------\n+   -- Prepend_Vector --\n+   -------------\n+\n+   procedure Prepend_Vector (Container : in out Vector; New_Item : Vector) is\n+   begin\n+      Insert_Vector (Container, Index_Type'First, New_Item);\n+   end Prepend_Vector;\n+\n    --------------\n    -- Previous --\n    --------------"}, {"sha": "c9364c7a3e334ee910a4514026fe09f3c551473c", "filename": "gcc/ada/libgnat/a-coinve.ads", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coinve.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -64,7 +64,7 @@ is\n      Default_Iterator  => Iterate,\n      Iterator_Element  => Element_Type,\n      Aggregate         => (Empty          => Empty_Vector,\n-                           Add_Unnamed    => Append_One,\n+                           Add_Unnamed    => Append,\n                            New_Indexed    => New_Vector,\n                            Assign_Indexed => Replace_Element);\n \n@@ -195,22 +195,41 @@ is\n \n    procedure Move (Target : in out Vector; Source : in out Vector);\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Extended_Index;\n       New_Item  : Vector);\n \n    procedure Insert\n+     (Container : in out Vector;\n+      Before    : Extended_Index;\n+      New_Item  : Vector) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector);\n \n    procedure Insert\n+     (Container : in out Vector;\n+      Before    : Cursor;\n+      New_Item  : Vector) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector;\n       Position  : out Cursor);\n \n+   procedure Insert\n+     (Container : in out Vector;\n+      Before    : Cursor;\n+      New_Item  : Vector;\n+      Position  : out Cursor) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n    procedure Insert\n      (Container : in out Vector;\n       Before    : Extended_Index;\n@@ -230,26 +249,36 @@ is\n       Position  : out Cursor;\n       Count     : Count_Type := 1);\n \n-   procedure Prepend\n+   procedure Prepend_Vector\n      (Container : in out Vector;\n       New_Item  : Vector);\n \n+   procedure Prepend\n+     (Container : in out Vector;\n+      New_Item  : Vector) renames Prepend_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n    procedure Prepend\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n \n-   procedure Append\n+   procedure Append_Vector\n      (Container : in out Vector;\n       New_Item  : Vector);\n \n+   procedure Append\n+     (Container : in out Vector;\n+      New_Item  : Vector) renames Append_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n    procedure Append\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1);\n+      Count     : Count_Type);\n \n-   procedure Append_One (Container : in out Vector;\n-                        New_Item  :        Element_Type);\n+   procedure Append (Container : in out Vector;\n+                     New_Item  :        Element_Type);\n \n    procedure Insert_Space\n      (Container : in out Vector;"}, {"sha": "fec72cc21b3773b569114897b4c32fe7cb837d7b", "filename": "gcc/ada/libgnat/a-convec.adb", "status": "modified", "additions": 44, "deletions": 36, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -64,16 +64,16 @@ is\n    begin\n       return Result : Vector do\n          Reserve_Capacity (Result, Length (Left) + Length (Right));\n-         Append (Result, Left);\n-         Append (Result, Right);\n+         Append_Vector (Result, Left);\n+         Append_Vector (Result, Right);\n       end return;\n    end \"&\";\n \n    function \"&\" (Left  : Vector; Right : Element_Type) return Vector is\n    begin\n       return Result : Vector do\n          Reserve_Capacity (Result, Length (Left) + 1);\n-         Append (Result, Left);\n+         Append_Vector (Result, Left);\n          Append (Result, Right);\n       end return;\n    end \"&\";\n@@ -83,7 +83,7 @@ is\n       return Result : Vector do\n          Reserve_Capacity (Result, 1 + Length (Right));\n          Append (Result, Left);\n-         Append (Result, Right);\n+         Append_Vector (Result, Right);\n       end return;\n    end \"&\";\n \n@@ -167,21 +167,10 @@ is\n    -- Append --\n    ------------\n \n-   procedure Append (Container : in out Vector; New_Item : Vector) is\n-   begin\n-      if Is_Empty (New_Item) then\n-         return;\n-      elsif Checks and then Container.Last = Index_Type'Last then\n-         raise Constraint_Error with \"vector is already at its maximum length\";\n-      else\n-         Insert (Container, Container.Last + 1, New_Item);\n-      end if;\n-   end Append;\n-\n    procedure Append\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1)\n+      Count     : Count_Type)\n    is\n    begin\n       --  In the general case, we pass the buck to Insert, but for efficiency,\n@@ -210,16 +199,31 @@ is\n       end if;\n    end Append;\n \n-   ----------------\n-   -- Append_One --\n-   ----------------\n+   -------------------\n+   -- Append_Vector --\n+   -------------------\n+\n+   procedure Append_Vector (Container : in out Vector; New_Item : Vector) is\n+   begin\n+      if Is_Empty (New_Item) then\n+         return;\n+      elsif Checks and then Container.Last = Index_Type'Last then\n+         raise Constraint_Error with \"vector is already at its maximum length\";\n+      else\n+         Insert_Vector (Container, Container.Last + 1, New_Item);\n+      end if;\n+   end Append_Vector;\n+\n+   ------------\n+   -- Append --\n+   ------------\n \n-   procedure Append_One (Container : in out Vector;\n-                         New_Item  :        Element_Type)\n+   procedure Append (Container : in out Vector;\n+                     New_Item  :        Element_Type)\n    is\n    begin\n       Insert (Container, Last_Index (Container) + 1, New_Item, 1);\n-   end Append_One;\n+   end Append;\n \n    ----------------------\n    -- Append_Slow_Path --\n@@ -250,7 +254,7 @@ is\n          return;\n       else\n          Target.Clear;\n-         Target.Append (Source);\n+         Target.Append_Vector (Source);\n       end if;\n    end Assign;\n \n@@ -1310,7 +1314,7 @@ is\n       end;\n    end Insert;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Extended_Index;\n       New_Item  : Vector)\n@@ -1429,9 +1433,9 @@ is\n \n          Container.Elements.EA (K .. J) := Src;\n       end;\n-   end Insert;\n+   end Insert_Vector;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector)\n@@ -1461,10 +1465,10 @@ is\n          Index := Before.Index;\n       end if;\n \n-      Insert (Container, Index, New_Item);\n-   end Insert;\n+      Insert_Vector (Container, Index, New_Item);\n+   end Insert_Vector;\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector;\n@@ -1501,10 +1505,10 @@ is\n          Index := Before.Index;\n       end if;\n \n-      Insert (Container, Index, New_Item);\n+      Insert_Vector (Container, Index, New_Item);\n \n       Position := (Container'Unrestricted_Access, Index);\n-   end Insert;\n+   end Insert_Vector;\n \n    procedure Insert\n      (Container : in out Vector;\n@@ -2266,11 +2270,6 @@ is\n    -- Prepend --\n    -------------\n \n-   procedure Prepend (Container : in out Vector; New_Item : Vector) is\n-   begin\n-      Insert (Container, Index_Type'First, New_Item);\n-   end Prepend;\n-\n    procedure Prepend\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n@@ -2280,6 +2279,15 @@ is\n       Insert (Container, Index_Type'First, New_Item, Count);\n    end Prepend;\n \n+   --------------------\n+   -- Prepend_Vector --\n+   --------------------\n+\n+   procedure Prepend_Vector (Container : in out Vector; New_Item : Vector) is\n+   begin\n+      Insert_Vector (Container, Index_Type'First, New_Item);\n+   end Prepend_Vector;\n+\n    --------------\n    -- Previous --\n    --------------"}, {"sha": "1d257a05bed6e402b8d2c243e0b48219eafbb802", "filename": "gcc/ada/libgnat/a-convec.ads", "status": "modified", "additions": 54, "deletions": 24, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -95,7 +95,7 @@ is\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n       Aggregate         => (Empty          => Empty,\n-                            Add_Unnamed    => Append_One,\n+                            Add_Unnamed    => Append,\n                             New_Indexed    => New_Vector,\n                             Assign_Indexed => Replace_Element);\n \n@@ -334,59 +334,80 @@ is\n      with Pre => First = Index_Type'First;\n    --  Ada_2020 aggregate operation.\n \n-   procedure Insert\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Extended_Index;\n       New_Item  : Vector);\n    --  If Before is not in the range First_Index (Container) .. Last_Index\n    --  (Container) + 1, then Constraint_Error is propagated. If\n-   --  Length(New_Item) is 0, then Insert does nothing. Otherwise, it computes\n-   --  the new length NL as the sum of the current length and Length\n+   --  Length(New_Item) is 0, then Insert_Vector does nothing. Otherwise, it\n+   --  computes the new length NL as the sum of the current length and Length\n    --  (New_Item); if the value of Last appropriate for length NL would be\n    --  greater than Index_Type'Last then Constraint_Error is propagated.\n    --\n    --  If the current vector capacity is less than NL, Reserve_Capacity\n-   --  (Container, NL) is called to increase the vector capacity. Then Insert\n-   --  slides the elements in the range Before .. Last_Index (Container) up by\n-   --  Length(New_Item) positions, and then copies the elements of New_Item to\n-   --  the positions starting at Before. Any exception raised during the\n-   --  copying is propagated.\n+   --  (Container, NL) is called to increase the vector capacity. Then\n+   --  Insert_Vector slides the elements in the range Before .. Last_Index\n+   --  (Container) up by Length(New_Item) positions, and then copies the\n+   --  elements of New_Item to the positions starting at Before. Any exception\n+   --  raised during the copying is propagated.\n \n    procedure Insert\n+     (Container : in out Vector;\n+      Before    : Extended_Index;\n+      New_Item  : Vector) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector);\n    --  If Before is not No_Element, and does not designate an element in\n    --  Container, then Program_Error is propagated. Otherwise, if\n-   --  Length(New_Item) is 0, then Insert does nothing. If Before is\n-   --  No_Element, then the call is equivalent to Insert (Container, Last_Index\n-   --  (Container) + 1, New_Item); otherwise the call is equivalent to Insert\n-   --  (Container, To_Index (Before), New_Item);\n+   --  Length(New_Item) is 0, then Insert_Vector does nothing. If Before is\n+   --  No_Element, then the call is equivalent to Insert_Vector (Container,\n+   --  Last_Index (Container) + 1, New_Item); otherwise the call is equivalent\n+   --  to Insert_Vector (Container, To_Index (Before), New_Item);\n \n    procedure Insert\n+     (Container : in out Vector;\n+      Before    : Cursor;\n+      New_Item  : Vector) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n+   procedure Insert_Vector\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Vector;\n       Position  : out Cursor);\n    --  If Before is not No_Element, and does not designate an element in\n    --  Container, then Program_Error is propagated. If Before equals\n    --  No_Element, then let T be Last_Index (Container) + 1; otherwise, let T\n-   --  be To_Index (Before). Insert (Container, T, New_Item) is called, and\n-   --  then Position is set to To_Cursor (Container, T).\n+   --  be To_Index (Before). Insert_Vector (Container, T, New_Item) is called,\n+   --  and then Position is set to To_Cursor (Container, T).\n+\n+   procedure Insert\n+     (Container : in out Vector;\n+      Before    : Cursor;\n+      New_Item  : Vector;\n+      Position  : out Cursor) renames Insert_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n \n    procedure Insert\n      (Container : in out Vector;\n       Before    : Extended_Index;\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n-   --  Equivalent to Insert (Container, Before, To_Vector (New_Item, Count));\n+   --  Equivalent to:\n+   --  Insert_Vector (Container, Before, To_Vector (New_Item, Count));\n \n    procedure Insert\n      (Container : in out Vector;\n       Before    : Cursor;\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n-   --  Equivalent to Insert (Container, Before, To_Vector (New_Item, Count));\n+   --  Equivalent to:\n+   --  Insert_Vector (Container, Before, To_Vector (New_Item, Count));\n \n    procedure Insert\n      (Container : in out Vector;\n@@ -395,7 +416,7 @@ is\n       Position  : out Cursor;\n       Count     : Count_Type := 1);\n    --  Equivalent to\n-   --  Insert (Container, Before, To_Vector (New_Item, Count), Position);\n+   --  Insert_Vector (Container, Before, To_Vector (New_Item, Count), Position)\n \n    procedure Insert\n      (Container : in out Vector;\n@@ -425,33 +446,42 @@ is\n    --  be To_Index (Before). Insert (Container, T, Count) is called, and then\n    --  Position is set to To_Cursor (Container, T).\n \n-   procedure Prepend\n+   procedure Prepend_Vector\n      (Container : in out Vector;\n       New_Item  : Vector);\n    --  Equivalent to Insert (Container, First_Index (Container), New_Item).\n \n+   procedure Prepend\n+     (Container : in out Vector;\n+      New_Item  : Vector) renames Prepend_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n    procedure Prepend\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n    --  Equivalent to Insert (Container, First_Index (Container), New_Item,\n    --  Count).\n \n-   procedure Append\n+   procedure Append_Vector\n      (Container : in out Vector;\n       New_Item  : Vector);\n    --  Equivalent to Insert (Container, Last_Index (Container) + 1, New_Item).\n \n+   procedure Append\n+     (Container : in out Vector;\n+      New_Item  : Vector) renames Append_Vector;\n+   --  Retained for now for compatibility; AI12-0400 will remove this.\n+\n    procedure Append\n      (Container : in out Vector;\n       New_Item  : Element_Type;\n-      Count     : Count_Type := 1);\n+      Count     : Count_Type);\n    --  Equivalent to Insert (Container, Last_Index (Container) + 1, New_Item,\n    --  Count).\n \n-   procedure Append_One (Container : in out Vector;\n-                         New_Item  :        Element_Type);\n-   --  Ada_2020 aggregate operation.\n+   procedure Append (Container : in out Vector;\n+                     New_Item  :        Element_Type);\n \n    procedure Insert_Space\n      (Container : in out Vector;"}, {"sha": "4ff5b352851dc887245b996f67c31b4b4187f341", "filename": "gcc/ada/libgnat/a-nbnbre.adb", "status": "modified", "additions": 61, "deletions": 8, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -118,6 +118,9 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n \n    package body Float_Conversions is\n \n+      package Conv is new\n+        Big_Integers.Unsigned_Conversions (Long_Long_Unsigned);\n+\n       -----------------\n       -- To_Big_Real --\n       -----------------\n@@ -130,9 +133,6 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n \n       function To_Big_Real (Arg : Num) return Valid_Big_Real is\n \n-         package Conv is new\n-           Big_Integers.Unsigned_Conversions (Long_Long_Unsigned);\n-\n          A : constant Num'Base := abs (Arg);\n          E : constant Integer  := Num'Exponent (A);\n          F : constant Num'Base := Num'Fraction (A);\n@@ -182,9 +182,6 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n \n       function From_Big_Real (Arg : Big_Real) return Num is\n \n-         package Conv is new\n-           Big_Integers.Unsigned_Conversions (Long_Long_Unsigned);\n-\n          M    : constant Natural     := Num'Machine_Mantissa;\n          One  : constant Big_Real    := To_Real (1);\n          Two  : constant Big_Real    := To_Real (2);\n@@ -310,22 +307,78 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n \n    package body Fixed_Conversions is\n \n+      package Float_Aux is new Float_Conversions (Long_Long_Float);\n+\n+      subtype LLLI is Long_Long_Long_Integer;\n+      subtype LLLU is Long_Long_Long_Unsigned;\n+\n+      Too_Large : constant Boolean :=\n+                    Num'Small_Numerator > LLLU'Last\n+                      or else Num'Small_Denominator > LLLU'Last;\n+      --  True if the Small is too large for Long_Long_Long_Unsigned, in which\n+      --  case we convert to/from Long_Long_Float as an intermediate step.\n+\n+      package Conv_I is new Big_Integers.Signed_Conversions (LLLI);\n+      package Conv_U is new Big_Integers.Unsigned_Conversions (LLLU);\n+\n       -----------------\n       -- To_Big_Real --\n       -----------------\n \n+      --  We just compute V * N / D where V is the mantissa value of the fixed\n+      --  point number, and N resp. D is the numerator resp. the denominator of\n+      --  the Small of the fixed-point type.\n+\n       function To_Big_Real (Arg : Num) return Valid_Big_Real is\n+         N, D, V : Big_Integer;\n+\n       begin\n-         return From_String (Arg'Image);\n+         if Too_Large then\n+            return Float_Aux.To_Big_Real (Long_Long_Float (Arg));\n+         end if;\n+\n+         N := Conv_U.To_Big_Integer (Num'Small_Numerator);\n+         D := Conv_U.To_Big_Integer (Num'Small_Denominator);\n+         V := Conv_I.To_Big_Integer (LLLI'Integer_Value (Arg));\n+\n+         return V * N / D;\n       end To_Big_Real;\n \n       -------------------\n       -- From_Big_Real --\n       -------------------\n \n+      --  We first compute A / B = Arg * D / N where N resp. D is the numerator\n+      --  resp. the denominator of the Small of the fixed-point type. Then we\n+      --  divide A by B and convert the result to the mantissa value.\n+\n       function From_Big_Real (Arg : Big_Real) return Num is\n+         N, D, A, B, Q, X : Big_Integer;\n+\n       begin\n-         return Num'Value (To_String (Arg));\n+         if Too_Large then\n+            return Num (Float_Aux.From_Big_Real (Arg));\n+         end if;\n+\n+         N := Conv_U.To_Big_Integer (Num'Small_Numerator);\n+         D := Conv_U.To_Big_Integer (Num'Small_Denominator);\n+         A := Numerator (Arg) * D;\n+         B := Denominator (Arg) * N;\n+\n+         Q := A / B;\n+\n+         --  Round to nearest, ties to away, by comparing twice the remainder\n+\n+         X := (A - Q * B) * To_Big_Integer (2);\n+\n+         if X >= B then\n+            Q := Q + To_Big_Integer (1);\n+\n+         elsif X <= -B then\n+            Q := Q - To_Big_Integer (1);\n+         end if;\n+\n+         return Num'Fixed_Value (Conv_I.From_Big_Integer (Q));\n       end From_Big_Real;\n \n    end Fixed_Conversions;"}, {"sha": "4214157501152276944e393fc4730acf21811f15", "filename": "gcc/ada/libgnat/a-strfix.ads", "status": "modified", "additions": 848, "deletions": 46, "changes": 894, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-strfix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-strfix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strfix.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -108,10 +108,57 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       Going   : Direction := Forward;\n       Mapping : Maps.Character_Mapping_Function) return Natural\n    with\n-     Pre    =>\n+     Pre            =>\n        Pattern'Length /= 0\n          and then (if Source'Length /= 0 then From in Source'Range),\n-     Global => null;\n+\n+     Post           => Index'Result in 0 | Source'Range,\n+     Contract_Cases =>\n+\n+        --  If no slice in the considered range of Source matches Pattern,\n+        --  then 0 is returned.\n+\n+       ((for all J in Source'Range =>\n+           (if (if Going = Forward\n+                then J in From .. Source'Last - Pattern'Length + 1\n+                else J <= From - Pattern'Length + 1)\n+            then Translate (Source (J .. J - 1 + Pattern'Length), Mapping)\n+                 /= Pattern))\n+        =>\n+          Index'Result = 0,\n+\n+        --  Otherwise, a valid index is returned\n+\n+        others\n+        =>\n+\n+          --  The result is in the considered range of Source\n+\n+          (if Going = Forward\n+           then Index'Result in From .. Source'Last - Pattern'Length + 1\n+           else Index'Result in Source'First .. From - Pattern'Length + 1)\n+\n+            --  The slice beginning at the returned index matches Pattern\n+\n+            and then\n+              Translate (Source (Index'Result\n+                                 .. Index'Result - 1 + Pattern'Length),\n+                         Mapping)\n+              = Pattern\n+\n+            --  The result is the smallest or largest index which satisfies the\n+            --  matching, respectively when Going = Forward and\n+            --  Going = Backwards.\n+\n+            and then\n+              (for all J in Source'Range =>\n+                 (if (if Going = Forward\n+                      then J in From .. Index'Result - 1\n+                      else J - 1 in Index'Result .. From - Pattern'Length)\n+                  then Translate (Source (J .. J - 1 + Pattern'Length),\n+                                  Mapping)\n+                       /= Pattern))),\n+     Global         => null;\n    pragma Ada_05 (Index);\n \n    function Index\n@@ -121,10 +168,57 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       Going   : Direction := Forward;\n       Mapping : Maps.Character_Mapping := Maps.Identity) return Natural\n    with\n-     Pre    =>\n+     Pre            =>\n        Pattern'Length /= 0\n          and then (if Source'Length /= 0 then From in Source'Range),\n-     Global => null;\n+\n+     Post           => Index'Result in 0 | Source'Range,\n+     Contract_Cases =>\n+\n+        --  If no slice in the considered range of Source matches Pattern,\n+        --  then 0 is returned.\n+\n+       ((for all J in Source'Range =>\n+           (if (if Going = Forward\n+                then J in From .. Source'Last - Pattern'Length + 1\n+                else J <= From - Pattern'Length + 1)\n+            then Translate (Source (J .. J - 1 + Pattern'Length), Mapping)\n+                 /= Pattern))\n+        =>\n+          Index'Result = 0,\n+\n+        --  Otherwise, a valid index is returned\n+\n+        others\n+        =>\n+\n+          --  The result is in the considered range of Source\n+\n+          (if Going = Forward\n+           then Index'Result in From .. Source'Last - Pattern'Length + 1\n+           else Index'Result in Source'First .. From - Pattern'Length + 1)\n+\n+            --  The slice beginning at the returned index matches Pattern\n+\n+            and then\n+              Translate (Source (Index'Result\n+                                 .. Index'Result - 1 + Pattern'Length),\n+                         Mapping)\n+              = Pattern\n+\n+            --  The result is the smallest or largest index which satisfies the\n+            --  matching, respectively when Going = Forward and\n+            --  Going = Backwards.\n+\n+            and then\n+              (for all J in Source'Range =>\n+                 (if (if Going = Forward\n+                      then J in From .. Index'Result - 1\n+                      else J - 1 in Index'Result .. From - Pattern'Length)\n+                  then Translate (Source (J .. J - 1 + Pattern'Length),\n+                                  Mapping)\n+                       /= Pattern))),\n+     Global         => null;\n    pragma Ada_05 (Index);\n \n    --  Each Index function searches, starting from From, for a slice of\n@@ -146,17 +240,107 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       Going   : Direction := Forward;\n       Mapping : Maps.Character_Mapping := Maps.Identity) return Natural\n    with\n-     Pre    => Pattern'Length > 0,\n-     Global => null;\n+     Pre            => Pattern'Length > 0,\n+\n+     Post           => Index'Result in 0 | Source'Range,\n+     Contract_Cases =>\n+\n+        --  If Source is empty, or if no slice of Source matches Pattern, then\n+        --  0 is returned.\n+\n+       (Source'Length = 0\n+          or else\n+            (for all J in Source'First .. Source'Last - Pattern'Length + 1 =>\n+               Translate (Source (J .. J - 1 + Pattern'Length), Mapping)\n+               /= Pattern)\n+        =>\n+          Index'Result = 0,\n+\n+        --  Otherwise, a valid index is returned\n+\n+        others\n+        =>\n+\n+          --  The result is in the considered range of Source\n+\n+          Index'Result in Source'First .. Source'Last - Pattern'Length + 1\n+\n+            --  The slice beginning at the returned index matches Pattern\n+\n+            and then\n+              Translate (Source (Index'Result\n+                                 .. Index'Result - 1 + Pattern'Length),\n+                         Mapping)\n+              = Pattern\n+\n+            --  The result is the smallest or largest index which satisfies the\n+            --  matching, respectively when Going = Forward and\n+            --  Going = Backwards.\n+\n+            and then\n+              (for all J in Source'Range =>\n+                 (if (if Going = Forward\n+                      then J <= Index'Result - 1\n+                      else J - 1 in Index'Result\n+                                    .. Source'Last - Pattern'Length)\n+                  then Translate (Source (J .. J - 1 + Pattern'Length),\n+                                  Mapping)\n+                       /= Pattern))),\n+     Global         => null;\n \n    function Index\n      (Source  : String;\n       Pattern : String;\n       Going   : Direction := Forward;\n       Mapping : Maps.Character_Mapping_Function) return Natural\n    with\n-     Pre    => Pattern'Length /= 0,\n-     Global => null;\n+     Pre            => Pattern'Length > 0,\n+\n+     Post           => Index'Result in 0 | Source'Range,\n+     Contract_Cases =>\n+\n+        --  If Source is empty, or if no slice of Source matches Pattern, then\n+        --  0 is returned.\n+\n+       (Source'Length = 0\n+          or else\n+            (for all J in Source'First .. Source'Last - Pattern'Length + 1 =>\n+               Translate (Source (J .. J - 1 + Pattern'Length), Mapping)\n+               /= Pattern)\n+        =>\n+          Index'Result = 0,\n+\n+        --  Otherwise, a valid index is returned\n+\n+        others\n+        =>\n+\n+          --  The result is in the considered range of Source\n+\n+          Index'Result in Source'First .. Source'Last - Pattern'Length + 1\n+\n+            --  The slice beginning at the returned index matches Pattern\n+\n+            and then\n+              Translate (Source (Index'Result\n+                                 .. Index'Result - 1 + Pattern'Length),\n+                         Mapping)\n+              = Pattern\n+\n+            --  The result is the smallest or largest index which satisfies the\n+            --  matching, respectively when Going = Forward and\n+            --  Going = Backwards.\n+\n+            and then\n+              (for all J in Source'Range =>\n+                 (if (if Going = Forward\n+                      then J <= Index'Result - 1\n+                      else J - 1 in Index'Result\n+                                    .. Source'Last - Pattern'Length)\n+                  then Translate (Source (J .. J - 1 + Pattern'Length),\n+                                  Mapping)\n+                       /= Pattern))),\n+     Global         => null;\n \n    --  If Going = Forward, returns:\n    --\n@@ -172,7 +356,44 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       Test   : Membership := Inside;\n       Going  : Direction  := Forward) return Natural\n    with\n-     Global => null;\n+     Post           => Index'Result in 0 | Source'Range,\n+     Contract_Cases =>\n+\n+        --  If no character of Source satisfies the property Test on Set, then\n+        --  0 is returned.\n+\n+       ((for all C of Source =>\n+           (Test = Inside) /= Ada.Strings.Maps.Is_In (C, Set))\n+        =>\n+          Index'Result = 0,\n+\n+        --  Otherwise, a index in the range of Source is returned\n+\n+        others\n+        =>\n+\n+          --  The result is in the range of Source\n+\n+          Index'Result in Source'Range\n+\n+            --  The character at the returned index satisfies the property\n+            --  Test on Set\n+\n+            and then\n+              (Test = Inside)\n+              = Ada.Strings.Maps.Is_In (Source (Index'Result), Set)\n+\n+            --  The result is the smallest or largest index which satisfies the\n+            --  property, respectively when Going = Forward and\n+            --  Going = Backwards.\n+\n+            and then\n+              (for all J in Source'Range =>\n+                 (if J /= Index'Result\n+                       and then (J < Index'Result) = (Going = Forward)\n+                  then (Test = Inside)\n+                       /= Ada.Strings.Maps.Is_In (Source (J), Set)))),\n+     Global         => null;\n \n    function Index\n      (Source  : String;\n@@ -181,8 +402,53 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       Test    : Membership := Inside;\n       Going   : Direction := Forward) return Natural\n    with\n-     Pre    => (if Source'Length /= 0 then From in Source'Range),\n-     Global => null;\n+     Pre            => (if Source'Length /= 0 then From in Source'Range),\n+\n+     Post           => Index'Result in 0 | Source'Range,\n+     Contract_Cases =>\n+\n+        --  If no character in the considered slice of Source satisfies the\n+        --  property Test on Set, then 0 is returned.\n+\n+       ((for all I in Source'Range =>\n+           (if I = From\n+                 or else (I > From) = (Going = Forward)\n+            then (Test = Inside) /= Ada.Strings.Maps.Is_In (Source (I), Set)))\n+        =>\n+          Index'Result = 0,\n+\n+        --  Otherwise, an index in the range of Source is returned\n+\n+        others\n+        =>\n+\n+          --  The result is in the considered range of Source\n+\n+          Index'Result in Source'Range\n+            and then (Index'Result = From\n+                        or else (Index'Result > From) = (Going = Forward))\n+\n+            --  The character at the returned index satisfies the property\n+            --  Test on Set.\n+\n+            and then\n+              (Test = Inside)\n+              = Ada.Strings.Maps.Is_In (Source (Index'Result), Set)\n+\n+            --  The result is the smallest or largest index which satisfies the\n+            --  property, respectively when Going = Forward and\n+            --  Going = Backwards.\n+\n+            and then\n+              (for all J in Source'Range =>\n+                 (if J /= Index'Result\n+                       and then (J < Index'Result) = (Going = Forward)\n+                       and then (J = From\n+                                   or else (J > From) = (Going = Forward))\n+                  then\n+                    (Test = Inside)\n+                    /= Ada.Strings.Maps.Is_In (Source (J), Set)))),\n+     Global         => null;\n    pragma Ada_05 (Index);\n    --  Index searches for the first or last occurrence of any of a set of\n    --  characters (when Test=Inside), or any of the complement of a set of\n@@ -198,16 +464,87 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       From   : Positive;\n       Going  : Direction := Forward) return Natural\n    with\n-     Pre   => (if Source'Length /= 0 then From in Source'Range),\n-     Global => null;\n+     Pre            => (if Source'Length /= 0 then From in Source'Range),\n+\n+     Post           => Index_Non_Blank'Result in 0 | Source'Range,\n+     Contract_Cases =>\n+\n+        --  If all characters in the considered slice of Source are Space\n+        --  characters, then 0 is returned.\n+\n+       ((for all J in Source'Range =>\n+           (if J = From or else (J > From) = (Going = Forward)\n+            then Source (J) = ' '))\n+        =>\n+          Index_Non_Blank'Result = 0,\n+\n+        --  Otherwise, a valid index is returned\n+\n+        others\n+        =>\n+\n+          --  The result is in the considered range of Source\n+\n+          Index_Non_Blank'Result in Source'Range\n+            and then (Index_Non_Blank'Result = From\n+                        or else (Index_Non_Blank'Result > From)\n+                                = (Going = Forward))\n+\n+            --  The character at the returned index is not a Space character\n+\n+            and then Source (Index_Non_Blank'Result) /= ' '\n+\n+            --  The result is the smallest or largest index which is not a\n+            --  Space character, respectively when Going = Forward and\n+            --  Going = Backwards.\n+\n+            and then\n+              (for all J in Source'Range =>\n+                 (if J /= Index_Non_Blank'Result\n+                       and then (J < Index_Non_Blank'Result)\n+                                = (Going = Forward)\n+                       and then (J = From or else (J > From)\n+                                = (Going = Forward))\n+                  then Source (J) = ' '))),\n+     Global         => null;\n    pragma Ada_05 (Index_Non_Blank);\n    --  Returns Index (Source, Maps.To_Set(Space), From, Outside, Going)\n \n    function Index_Non_Blank\n      (Source : String;\n       Going  : Direction := Forward) return Natural\n    with\n-     Global => null;\n+     Post           => Index_Non_Blank'Result in 0 | Source'Range,\n+     Contract_Cases =>\n+\n+        --  If all characters of Source are Space characters, then 0 is\n+        --  returned.\n+\n+       ((for all C of Source => C = ' ') => Index_Non_Blank'Result = 0,\n+\n+        --  Otherwise, a valid index is returned\n+\n+        others                           =>\n+\n+          --  The result is in the range of Source\n+\n+          Index_Non_Blank'Result in Source'Range\n+\n+            --  The character at the returned index is not a Space character\n+\n+            and then Source (Index_Non_Blank'Result) /= ' '\n+\n+            --  The result is the smallest or largest index which is not a\n+            --  Space character, respectively when Going = Forward and\n+            --  Going = Backwards.\n+\n+            and then\n+              (for all J in Source'Range =>\n+                 (if J /= Index_Non_Blank'Result\n+                       and then (J < Index_Non_Blank'Result)\n+                              = (Going = Forward)\n+                  then Source (J) = ' '))),\n+     Global         => null;\n    --  Returns Index (Source, Maps.To_Set(Space), Outside, Going)\n \n    function Count\n@@ -246,8 +583,53 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       First  : out Positive;\n       Last   : out Natural)\n    with\n-     Pre    => (if Source'Length /= 0 then From in Source'Range),\n-     Global => null;\n+     Pre            => (if Source'Length /= 0 then From in Source'Range),\n+     Contract_Cases =>\n+\n+        --  If Source is the empty string, or if no character of the considered\n+        --  slice of Source satisfies the property Test on Set, then First is\n+        --  set to From and Last is set to 0.\n+\n+       (Source'Length = 0\n+          or else\n+            (for all C of Source (From .. Source'Last) =>\n+               (Test = Inside) /= Ada.Strings.Maps.Is_In (C, Set))\n+        =>\n+          First = From and then Last = 0,\n+\n+        --  Otherwise, First and Last are set to valid indexes\n+\n+        others\n+        =>\n+\n+          --  First and Last are in the considered range of Source\n+\n+          First in From .. Source'Last\n+            and then Last in First .. Source'Last\n+\n+            --  No character between From and First satisfies the property Test\n+            --  on Set.\n+\n+            and then\n+              (for all C of Source (From .. First - 1) =>\n+                 (Test = Inside) /= Ada.Strings.Maps.Is_In (C, Set))\n+\n+            --  All characters between First and Last satisfy the property Test\n+            --  on Set.\n+\n+            and then\n+              (for all C of Source (First .. Last) =>\n+                 (Test = Inside) = Ada.Strings.Maps.Is_In (C, Set))\n+\n+            --  If Last is not Source'Last, then the character at position\n+            --  Last + 1 does not satify the property Test on Set.\n+\n+            and then\n+              (if Last < Source'Last\n+               then\n+                 (Test = Inside)\n+                 /= Ada.Strings.Maps.Is_In (Source (Last + 1), Set))),\n+     Global         => null;\n    pragma Ada_2012 (Find_Token);\n    --  If Source is not the null string and From is not in Source'Range, then\n    --  Index_Error is raised. Otherwise, First is set to the index of the first\n@@ -264,6 +646,50 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       First  : out Positive;\n       Last   : out Natural)\n    with\n+     Contract_Cases =>\n+\n+        --  If Source is the empty string, or if no character of Source\n+        --  satisfies the property Test on Set, then First is set to From and\n+        --  Last is set to 0.\n+\n+       (Source'Length = 0\n+          or else\n+            (for all C of Source =>\n+               (Test = Inside) /= Ada.Strings.Maps.Is_In (C, Set))\n+        =>\n+          First = Source'First and then Last = 0,\n+\n+        --  Otherwise, First and Last are set to valid indexes\n+\n+        others\n+        =>\n+\n+          --  First and Last are in the considered range of Source\n+\n+          First in Source'Range\n+            and then Last in First .. Source'Last\n+\n+            --  No character before First satisfies the property Test on Set\n+\n+            and then\n+              (for all C of Source (Source'First .. First - 1) =>\n+                 (Test = Inside) /= Ada.Strings.Maps.Is_In (C, Set))\n+\n+            --  All characters between First and Last satisfy the property Test\n+            --  on Set.\n+\n+            and then\n+              (for all C of Source (First .. Last) =>\n+                 (Test = Inside) = Ada.Strings.Maps.Is_In (C, Set))\n+\n+            --  If Last is not Source'Last, then the character at position\n+            --  Last + 1 does not satify the property Test on Set.\n+\n+            and then\n+              (if Last < Source'Last\n+               then\n+                 (Test = Inside)\n+                 /= Ada.Strings.Maps.Is_In (Source (Last + 1), Set))),\n      Global => null;\n    --  Equivalent to Find_Token (Source, Set, Source'First, Test, First, Last)\n \n@@ -275,14 +701,46 @@ package Ada.Strings.Fixed with SPARK_Mode is\n      (Source  : String;\n       Mapping : Maps.Character_Mapping_Function) return String\n    with\n-     Post   => Translate'Result'Length = Source'Length,\n+     Post   =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       Translate'Result'First = 1\n+\n+         --  The returned string has the same length as Source\n+\n+         and then Translate'Result'Last = Source'Length\n+\n+         --  Each character in the returned string is the translation of the\n+         --  character at the same position in Source through Mapping.\n+\n+         and then\n+           (for all J in Source'Range =>\n+              Translate'Result (J - Source'First + 1)\n+              = Mapping (Source (J))),\n      Global => null;\n \n    function Translate\n      (Source  : String;\n       Mapping : Maps.Character_Mapping) return String\n    with\n-     Post   => Translate'Result'Length = Source'Length,\n+     Post   =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       Translate'Result'First = 1\n+\n+         --  The returned string has the same length as Source\n+\n+         and then Translate'Result'Last = Source'Length\n+\n+         --  Each character in the returned string is the translation of the\n+         --  character at the same position in Source through Mapping.\n+\n+         and then\n+           (for all J in Source'Range =>\n+              Translate'Result (J - Source'First + 1)\n+              = Ada.Strings.Maps.Value (Mapping, Source (J))),\n      Global => null;\n \n    --  Returns the string S whose length is Source'Length and such that S (I)\n@@ -293,12 +751,25 @@ package Ada.Strings.Fixed with SPARK_Mode is\n      (Source  : in out String;\n       Mapping : Maps.Character_Mapping_Function)\n    with\n+     Post   =>\n+\n+       --  Each character in Source after the call is the translation of\n+       --  the character at the same position before the call, through Mapping.\n+\n+       (for all J in Source'Range => Source (J) = Mapping (Source'Old (J))),\n      Global => null;\n \n    procedure Translate\n      (Source  : in out String;\n       Mapping : Maps.Character_Mapping)\n    with\n+     Post   =>\n+\n+       --  Each character in Source after the call is the translation of\n+       --  the character at the same position before the call, through Mapping.\n+\n+       (for all J in Source'Range =>\n+          Source (J) = Ada.Strings.Maps.Value (Mapping, Source'Old (J))),\n      Global => null;\n \n    --  Equivalent to Source := Translate(Source, Mapping)\n@@ -344,17 +815,80 @@ package Ada.Strings.Fixed with SPARK_Mode is\n          and then High >= Source'First - 1\n          and then (if High >= Low\n                    then Natural'Max (0, Low - Source'First)\n-                     <= Natural'Last - By'Length\n-                      - Natural'Max (Source'Last - High, 0)\n+                        <= Natural'Last\n+                           - By'Length\n+                           - Natural'Max (Source'Last - High, 0)\n                    else Source'Length <= Natural'Last - By'Length),\n+\n+     --  Lower bound of the returned string is 1\n+\n+     Post           => Replace_Slice'Result'First = 1,\n      Contract_Cases =>\n+\n+        --  If High >= Low, then the returned string comprises\n+        --  Source (Source'First .. Low - 1) & By\n+        --  & Source(High + 1 .. Source'Last).\n+\n        (High >= Low =>\n+\n+          --  Length of the returned string\n+\n           Replace_Slice'Result'Length\n-        = Natural'Max (0, Low - Source'First)\n-        + By'Length\n-        + Natural'Max (Source'Last - High, 0),\n+          = Natural'Max (0, Low - Source'First)\n+            + By'Length\n+            + Natural'Max (Source'Last - High, 0)\n+\n+            --  Elements starting at Low are replaced by elements of By\n+\n+            and then\n+              Replace_Slice'Result (1 .. Natural'Max (0, Low - Source'First))\n+              = Source (Source'First .. Low - 1)\n+            and then\n+              Replace_Slice'Result\n+                (Natural'Max (0, Low - Source'First) + 1\n+                 .. Natural'Max (0, Low - Source'First) + By'Length)\n+              = By\n+\n+            --  When there are remaining characters after the replaced slice,\n+            --  they are appended to the result.\n+\n+            and then\n+              (if High < Source'Last\n+               then\n+                 Replace_Slice'Result\n+                   (Natural'Max (0, Low - Source'First) + By'Length + 1\n+                    .. Replace_Slice'Result'Last)\n+                 = Source (High + 1 .. Source'Last)),\n+\n+        --  If High < Low, then the returned string is\n+        --  Insert (Source, Before => Low, New_Item => By).\n+\n         others      =>\n-          Replace_Slice'Result'Length = Source'Length + By'Length),\n+\n+          --  Length of the returned string\n+\n+          Replace_Slice'Result'Length = Source'Length + By'Length\n+\n+            --  Elements of By are inserted after the element at Low\n+\n+            and then\n+              Replace_Slice'Result (1 .. Low - Source'First)\n+              = Source (Source'First .. Low - 1)\n+            and then\n+              Replace_Slice'Result\n+                (Low - Source'First + 1 .. Low - Source'First + By'Length)\n+              = By\n+\n+            --  When there are remaining characters after Low in Source, they\n+            --  are appended to the result.\n+\n+            and then\n+              (if Low < Source'Last\n+               then\n+                Replace_Slice'Result\n+                  (Low - Source'First + By'Length + 1\n+                   .. Replace_Slice'Result'Last)\n+                = Source (Low .. Source'Last))),\n      Global         => null;\n    --  Equivalent to:\n    --\n@@ -369,7 +903,38 @@ package Ada.Strings.Fixed with SPARK_Mode is\n      Pre    =>\n        Before - 1 in Source'First - 1 .. Source'Last\n          and then Source'Length <= Natural'Last - New_Item'Length,\n-     Post   => Insert'Result'Length = Source'Length + New_Item'Length,\n+\n+     Post   =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       Insert'Result'First = 1\n+\n+         --  Length of the returned string\n+\n+         and then Insert'Result'Length = Source'Length + New_Item'Length\n+\n+         --  Elements of New_Item are inserted after element at Before\n+\n+         and then\n+           Insert'Result (1 .. Before - Source'First)\n+           = Source (Source'First .. Before - 1)\n+         and then\n+           Insert'Result\n+             (Before - Source'First + 1\n+              .. Before - Source'First + New_Item'Length)\n+           = New_Item\n+\n+         --  When there are remaining characters after Before in Source, they\n+         --  are appended to the returned string.\n+\n+         and then\n+           (if Before - 1 < Source'Last\n+            then\n+              Insert'Result\n+                (Before - Source'First + New_Item'Length + 1\n+                 .. Insert'Result'Last)\n+              = Source (Before .. Source'Last)),\n      Global => null;\n    --  Propagates Index_Error if Before is not in\n    --  Source'First .. Source'Last+1; otherwise, returns\n@@ -397,12 +962,44 @@ package Ada.Strings.Fixed with SPARK_Mode is\n      Pre    =>\n        Position - 1 in Source'First - 1 .. Source'Last\n          and then\n-       (if Position - Source'First >= Source'Length - New_Item'Length\n-        then Position - Source'First <= Natural'Last - New_Item'Length),\n+           (if Position - Source'First >= Source'Length - New_Item'Length\n+            then Position - Source'First <= Natural'Last - New_Item'Length),\n+\n      Post   =>\n-       Overwrite'Result'Length\n-     = Integer'Max (Source'Length,\n-                    Position - Source'First + New_Item'Length),\n+\n+       --  Lower bound of the returned string is 1\n+\n+       Overwrite'Result'First = 1\n+\n+         --  Length of the returned string\n+\n+         and then\n+           Overwrite'Result'Length\n+           = Integer'Max (Source'Length,\n+                          Position - Source'First + New_Item'Length)\n+\n+         --  Elements after Position are replaced by elements of New_Item\n+\n+         and then\n+           Overwrite'Result (1 .. Position - Source'First)\n+           = Source (Source'First .. Position - 1)\n+         and then\n+           Overwrite'Result\n+             (Position - Source'First + 1\n+              .. Position - Source'First + New_Item'Length)\n+           = New_Item\n+\n+         --  If the end of Source is reached before the characters in New_Item\n+         --  are exhausted, the remaining characters from New_Item are appended\n+         --  to the string.\n+\n+         and then\n+           (if Position <= Source'Last - New_Item'Length\n+            then\n+              Overwrite'Result\n+                (Position - Source'First + New_Item'Length + 1\n+                 .. Overwrite'Result'Last)\n+              = Source (Position + New_Item'Length .. Source'Last)),\n      Global => null;\n    --  Propagates Index_Error if Position is not in\n    --  Source'First .. Source'Last + 1; otherwise, returns the string obtained\n@@ -429,15 +1026,47 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       From    : Positive;\n       Through : Natural) return String\n    with\n-     Pre    => (if From <= Through\n-                then (From in Source'Range\n-                        and then Through <= Source'Last)),\n-     Post   =>\n-       Delete'Result'Length\n-     = Source'Length - (if From <= Through\n-                        then Through - From + 1\n-                        else 0),\n-     Global => null;\n+     Pre            => (if From <= Through\n+                        then (From in Source'Range\n+                                and then Through <= Source'Last)),\n+\n+     --  Lower bound of the returned string is 1\n+\n+     Post           =>\n+       Delete'Result'First = 1,\n+\n+     Contract_Cases =>\n+\n+        --  If From <= Through, the characters between From and Through are\n+        --  removed.\n+\n+       (From <= Through =>\n+\n+          --  Length of the returned string\n+\n+          Delete'Result'Length = Source'Length - (Through - From + 1)\n+\n+            --  Elements before From are preserved\n+\n+            and then\n+              Delete'Result (1 .. From - Source'First)\n+              = Source (Source'First .. From - 1)\n+\n+            --  If there are remaining characters after Through, they are\n+            --  appended to the returned string.\n+\n+            and then\n+              (if Through < Source'Last\n+               then Delete'Result\n+                      (From - Source'First + 1 .. Delete'Result'Last)\n+                    = Source (Through + 1 .. Source'Last)),\n+\n+        --  Otherwise, the returned string is Source with lower bound 1\n+\n+        others          =>\n+          Delete'Result'Length = Source'Length\n+            and then Delete'Result = Source),\n+     Global         => null;\n    --  If From <= Through, the returned string is\n    --  Replace_Slice(Source, From, Through, \"\"); otherwise, it is Source with\n    --  lower bound 1.\n@@ -469,7 +1098,47 @@ package Ada.Strings.Fixed with SPARK_Mode is\n      (Source : String;\n       Side   : Trim_End) return String\n    with\n-     Post   => Trim'Result'Length <= Source'Length,\n+     Post   =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       Trim'Result'First = 1\n+\n+       --  If all characters in Source are Space, the returned string is\n+       --  empty.\n+\n+         and then\n+           (if (for all J in Source'Range => Source (J) = ' ')\n+            then Trim'Result = \"\"\n+\n+            --  Otherwise, the returned string is a slice of Source\n+\n+            else\n+              (for some Low in Source'Range =>\n+                 (for some High in Source'Range =>\n+\n+                    --  Trim returns the slice of Source between Low and High\n+\n+                    Trim'Result = Source (Low .. High)\n+\n+                      --  Values of Low and High and the characters at their\n+                      --  position depend on Side.\n+\n+                      and then\n+                        (if Side = Left then High = Source'Last\n+                         else Source (High) /= ' ')\n+                      and then\n+                        (if Side = Right then Low = Source'First\n+                         else Source (Low) /= ' ')\n+\n+                      --  All characters outside range Low .. High are\n+                      --  Space characters.\n+\n+                      and then\n+                        (for all J in Source'Range =>\n+                           (if J < Low then Source (J) = ' ')\n+                              and then\n+                                (if J > High then Source (J) = ' '))))),\n      Global => null;\n    --  Returns the string obtained by removing from Source all leading Space\n    --  characters (if Side = Left), all trailing Space characters (if\n@@ -495,7 +1164,50 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       Left   : Maps.Character_Set;\n       Right  : Maps.Character_Set) return String\n    with\n-     Post   => Trim'Result'Length <= Source'Length,\n+     Post   =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       Trim'Result'First = 1\n+\n+         --  If all characters are contained in one of the sets Left and Right,\n+         --  then the returned string is empty.\n+\n+         and then\n+           (if (for all K in Source'Range =>\n+                  Ada.Strings.Maps.Is_In (Source (K), Left))\n+                 or\n+                   (for all K in Source'Range =>\n+                      Ada.Strings.Maps.Is_In (Source (K), Right))\n+            then Trim'Result = \"\"\n+\n+        --  Otherwise, the returned string is a slice of Source\n+\n+        else\n+          (for some Low in Source'Range =>\n+             (for some High in Source'Range =>\n+\n+                --  Trim returns the slice of Source between Low and High\n+\n+                Trim'Result = Source (Low .. High)\n+\n+                  --  Characters at the bounds of the returned string are\n+                  --  not contained in Left or Right.\n+\n+                  and then not Ada.Strings.Maps.Is_In (Source (Low), Left)\n+                  and then not Ada.Strings.Maps.Is_In (Source (High), Right)\n+\n+                  --  All characters before Low are contained in Left.\n+                  --  All characters after High are contained in Right.\n+\n+                  and then\n+                    (for all K in Source'Range =>\n+                       (if K < Low\n+                        then\n+                          Ada.Strings.Maps.Is_In (Source (K), Left))\n+                            and then\n+                              (if K > High then\n+                               Ada.Strings.Maps.Is_In (Source (K), Right)))))),\n      Global => null;\n    --  Returns the string obtained by removing from Source all leading\n    --  characters in Left and all trailing characters in Right.\n@@ -521,8 +1233,33 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       Count  : Natural;\n       Pad    : Character := Space) return String\n    with\n-     Post   => Head'Result'Length = Count,\n-     Global => null;\n+     Post           =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       Head'Result'First = 1\n+\n+         --  Length of the returned string is Count.\n+\n+         and then Head'Result'Length = Count,\n+\n+     Contract_Cases =>\n+\n+        --  If Count <= Source'Length, then the first Count characters of\n+        --  Source are returned.\n+\n+       (Count <= Source'Length =>\n+          Head'Result = Source (Source'First .. Source'First - 1 + Count),\n+\n+        --  Otherwise, the returned string is Source concatenated with\n+        --  Count - Source'Length Pad characters.\n+\n+        others                 =>\n+          Head'Result (1 .. Source'Length) = Source\n+            and then\n+              Head'Result (Source'Length + 1 .. Count)\n+              = (1 .. Count - Source'Length => Pad)),\n+     Global         => null;\n    --  Returns a string of length Count. If Count <= Source'Length, the string\n    --  comprises the first Count characters of Source. Otherwise, its contents\n    --  are Source concatenated with Count - Source'Length Pad characters.\n@@ -547,7 +1284,44 @@ package Ada.Strings.Fixed with SPARK_Mode is\n       Count  : Natural;\n       Pad    : Character := Space) return String\n    with\n-     Post   => Tail'Result'Length = Count,\n+     Post   =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       Tail'Result'First = 1\n+\n+         --  Length of the returned string is Count\n+\n+         and then Tail'Result'Length = Count,\n+     Contract_Cases =>\n+\n+       --  If Count is zero, then the returned string is empty\n+\n+       (Count = 0                     =>\n+          Tail'Result = \"\",\n+\n+        --  Otherwise, if Count <= Source'Length, then the last Count\n+        --  characters of Source are returned.\n+\n+        (Count in 1 .. Source'Length) =>\n+          Tail'Result = Source (Source'Last - Count + 1 .. Source'Last),\n+\n+        --  Otherwise, the returned string is Count - Source'Length Pad\n+        --  characters concatenated with Source.\n+\n+        others                        =>\n+\n+           --  If Source is empty, then the returned string is Count Pad\n+           --  characters.\n+\n+          (if Source'Length = 0\n+           then Tail'Result = (1 .. Count => Pad)\n+           else\n+             Tail'Result (1 .. Count - Source'Length)\n+             = (1 .. Count - Source'Length => Pad)\n+               and then\n+                 Tail'Result (Count - Source'Length + 1 .. Tail'Result'Last)\n+                 = Source)),\n      Global => null;\n    --  Returns a string of length Count. If Count <= Source'Length, the string\n    --  comprises the last Count characters of Source. Otherwise, its contents\n@@ -576,15 +1350,43 @@ package Ada.Strings.Fixed with SPARK_Mode is\n      (Left  : Natural;\n       Right : Character) return String\n    with\n-     Post   => \"*\"'Result'Length = Left,\n+     Post   =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       \"*\"'Result'First = 1\n+\n+         --  Length of the returned string\n+\n+         and then \"*\"'Result'Length = Left\n+\n+         --  All characters of the returned string are Right\n+\n+         and then (for all C of \"*\"'Result => C = Right),\n      Global => null;\n \n    function \"*\"\n      (Left  : Natural;\n       Right : String) return String\n    with\n      Pre    => (if Right'Length /= 0 then Left <= Natural'Last / Right'Length),\n-     Post   => \"*\"'Result'Length = Left * Right'Length,\n+\n+     Post   =>\n+\n+       --  Lower bound of the returned string is 1\n+\n+       \"*\"'Result'First = 1\n+\n+         --  Length of the returned string\n+\n+         and then \"*\"'Result'Length = Left * Right'Length\n+\n+         --  Content of the string is Right concatenated with itself Left times\n+\n+         and then\n+           (for all J in 0 .. Left - 1 =>\n+              \"*\"'Result (J * Right'Length + 1 .. (J + 1) * Right'Length)\n+              = Right),\n      Global => null;\n \n    --  These functions replicate a character or string a specified number of"}, {"sha": "7138f762239b0bf339180646c145b7341b2e3116", "filename": "gcc/ada/libgnat/a-tags.adb", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tags.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,7 +30,6 @@\n ------------------------------------------------------------------------------\n \n with Ada.Exceptions;\n-with Ada.Unchecked_Conversion;\n \n with System.HTable;\n with System.Storage_Elements; use System.Storage_Elements;\n@@ -96,12 +95,6 @@ package body Ada.Tags is\n    function To_Tag is\n      new Unchecked_Conversion (Integer_Address, Tag);\n \n-   function To_Addr_Ptr is\n-      new Ada.Unchecked_Conversion (System.Address, Addr_Ptr);\n-\n-   function To_Address is\n-     new Ada.Unchecked_Conversion (Tag, System.Address);\n-\n    function To_Dispatch_Table_Ptr is\n       new Ada.Unchecked_Conversion (Tag, Dispatch_Table_Ptr);\n \n@@ -114,9 +107,6 @@ package body Ada.Tags is\n    function To_Tag_Ptr is\n      new Ada.Unchecked_Conversion (System.Address, Tag_Ptr);\n \n-   function To_Type_Specific_Data_Ptr is\n-     new Ada.Unchecked_Conversion (System.Address, Type_Specific_Data_Ptr);\n-\n    -------------------------------\n    -- Inline_Always Subprograms --\n    -------------------------------\n@@ -125,40 +115,6 @@ package body Ada.Tags is\n    --  avoid defeating the frontend inlining mechanism and thus ensure the\n    --  generation of their correct debug info.\n \n-   -------------------\n-   -- CW_Membership --\n-   -------------------\n-\n-   --  Canonical implementation of Classwide Membership corresponding to:\n-\n-   --     Obj in Typ'Class\n-\n-   --  Each dispatch table contains a reference to a table of ancestors (stored\n-   --  in the first part of the Tags_Table) and a count of the level of\n-   --  inheritance \"Idepth\".\n-\n-   --  Obj is in Typ'Class if Typ'Tag is in the table of ancestors that are\n-   --  contained in the dispatch table referenced by Obj'Tag . Knowing the\n-   --  level of inheritance of both types, this can be computed in constant\n-   --  time by the formula:\n-\n-   --   TSD (Obj'tag).Tags_Table (TSD (Obj'tag).Idepth - TSD (Typ'tag).Idepth)\n-   --     = Typ'tag\n-\n-   function CW_Membership (Obj_Tag : Tag; Typ_Tag : Tag) return Boolean is\n-      Obj_TSD_Ptr : constant Addr_Ptr :=\n-        To_Addr_Ptr (To_Address (Obj_Tag) - DT_Typeinfo_Ptr_Size);\n-      Typ_TSD_Ptr : constant Addr_Ptr :=\n-        To_Addr_Ptr (To_Address (Typ_Tag) - DT_Typeinfo_Ptr_Size);\n-      Obj_TSD     : constant Type_Specific_Data_Ptr :=\n-        To_Type_Specific_Data_Ptr (Obj_TSD_Ptr.all);\n-      Typ_TSD     : constant Type_Specific_Data_Ptr :=\n-        To_Type_Specific_Data_Ptr (Typ_TSD_Ptr.all);\n-      Pos         : constant Integer := Obj_TSD.Idepth - Typ_TSD.Idepth;\n-   begin\n-      return Pos >= 0 and then Obj_TSD.Tags_Table (Pos) = Typ_Tag;\n-   end CW_Membership;\n-\n    ----------------------\n    -- Get_External_Tag --\n    ----------------------"}, {"sha": "203f7ca95d4c4b19e3860fa6b3659a560aafbaae", "filename": "gcc/ada/libgnat/a-tags.ads", "status": "modified", "additions": 46, "deletions": 4, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tags.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -65,6 +65,7 @@\n --    length depends on the number of interfaces covered by a tagged type.\n \n with System.Storage_Elements;\n+with Ada.Unchecked_Conversion;\n \n package Ada.Tags is\n    pragma Preelaborate;\n@@ -501,10 +502,6 @@ private\n    --  dispatch table, return the tagged kind of a type in the context of\n    --  concurrency and limitedness.\n \n-   function CW_Membership (Obj_Tag : Tag; Typ_Tag : Tag) return Boolean;\n-   --  Given the tag of an object and the tag associated to a type, return\n-   --  true if Obj is in Typ'Class.\n-\n    function IW_Membership (This : System.Address; T : Tag) return Boolean;\n    --  Ada 2005 (AI-251): General routine that checks if a given object\n    --  implements a tagged type. Its common usage is to check if Obj is in\n@@ -623,4 +620,49 @@ private\n    --  This type is used by the frontend to generate the code that handles\n    --  dispatch table slots of types declared at the local level.\n \n+   -------------------\n+   -- CW_Membership --\n+   -------------------\n+\n+   function To_Address is\n+     new Ada.Unchecked_Conversion (Tag, System.Address);\n+\n+   function To_Addr_Ptr is\n+      new Ada.Unchecked_Conversion (System.Address, Addr_Ptr);\n+\n+   function To_Type_Specific_Data_Ptr is\n+     new Ada.Unchecked_Conversion (System.Address, Type_Specific_Data_Ptr);\n+\n+   --  Canonical implementation of Classwide Membership corresponding to:\n+\n+   --     Obj in Typ'Class\n+\n+   --  Each dispatch table contains a reference to a table of ancestors (stored\n+   --  in the first part of the Tags_Table) and a count of the level of\n+   --  inheritance \"Idepth\".\n+\n+   --  Obj is in Typ'Class if Typ'Tag is in the table of ancestors that are\n+   --  contained in the dispatch table referenced by Obj'Tag . Knowing the\n+   --  level of inheritance of both types, this can be computed in constant\n+   --  time by the formula:\n+\n+   --   TSD (Obj'tag).Tags_Table (TSD (Obj'tag).Idepth - TSD (Typ'tag).Idepth)\n+   --     = Typ'tag\n+\n+   function CW_Membership (Obj_Tag : Tag; Typ_Tag : Tag) return Boolean is\n+     (declare\n+         Obj_TSD_Ptr : constant Addr_Ptr :=\n+           To_Addr_Ptr (To_Address (Obj_Tag) - DT_Typeinfo_Ptr_Size);\n+         Typ_TSD_Ptr : constant Addr_Ptr :=\n+           To_Addr_Ptr (To_Address (Typ_Tag) - DT_Typeinfo_Ptr_Size);\n+         Obj_TSD     : constant Type_Specific_Data_Ptr :=\n+           To_Type_Specific_Data_Ptr (Obj_TSD_Ptr.all);\n+         Typ_TSD     : constant Type_Specific_Data_Ptr :=\n+           To_Type_Specific_Data_Ptr (Typ_TSD_Ptr.all);\n+         Pos         : constant Integer := Obj_TSD.Idepth - Typ_TSD.Idepth;\n+      begin\n+         Pos >= 0 and then Obj_TSD.Tags_Table (Pos) = Typ_Tag);\n+   --  Given the tag of an object and the tag associated to a type, return\n+   --  true if Obj is in Typ'Class.\n+\n end Ada.Tags;"}, {"sha": "cf9430582d5f18245694ee479cfc9b04bb9469a8", "filename": "gcc/ada/libgnat/a-ticoau.adb", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ticoau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ticoau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ticoau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,22 +30,19 @@\n ------------------------------------------------------------------------------\n \n with Ada.Text_IO.Generic_Aux; use Ada.Text_IO.Generic_Aux;\n-with Ada.Text_IO.Float_Aux;\n \n with System.Img_Real; use System.Img_Real;\n \n package body Ada.Text_IO.Complex_Aux is\n \n-   package Aux renames Ada.Text_IO.Float_Aux;\n-\n    ---------\n    -- Get --\n    ---------\n \n    procedure Get\n      (File  : File_Type;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Width : Field)\n    is\n       Buf   : String (1 .. Field'Last);\n@@ -95,8 +92,8 @@ package body Ada.Text_IO.Complex_Aux is\n \n    procedure Gets\n      (From  : String;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Last  : out Positive)\n    is\n       Paren : Boolean;\n@@ -139,8 +136,8 @@ package body Ada.Text_IO.Complex_Aux is\n \n    procedure Put\n      (File  : File_Type;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Fore  : Field;\n       Aft   : Field;\n       Exp   : Field)\n@@ -159,8 +156,8 @@ package body Ada.Text_IO.Complex_Aux is\n \n    procedure Puts\n      (To    : out String;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Aft   : Field;\n       Exp   : Field)\n    is\n@@ -174,9 +171,9 @@ package body Ada.Text_IO.Complex_Aux is\n       --  Both parts are initially converted with a Fore of 0\n \n       Rptr := 0;\n-      Set_Image_Real (ItemR, R_String, Rptr, 0, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (ItemR), R_String, Rptr, 0, Aft, Exp);\n       Iptr := 0;\n-      Set_Image_Real (ItemI, I_String, Iptr, 0, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (ItemI), I_String, Iptr, 0, Aft, Exp);\n \n       --  Check room for both parts plus parens plus comma (RM G.1.3(34))\n "}, {"sha": "22555cf3faaa14e5f4515526685181300e827bd3", "filename": "gcc/ada/libgnat/a-ticoau.ads", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ticoau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ticoau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ticoau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,39 +30,46 @@\n ------------------------------------------------------------------------------\n \n --  This package contains the routines for Ada.Text_IO.Complex_IO that are\n---  shared among separate instantiations of this package. The routines in\n---  this package are identical semantically to those in Complex_IO itself,\n---  except that the generic parameter Complex has been replaced by separate\n---  real and imaginary values of type Long_Long_Float, and default parameters\n---  have been removed because they are supplied explicitly by the calls from\n---  within the generic template.\n+--  shared among separate instantiations of this package. The routines in this\n+--  package are identical semantically to those in Complex_IO, except that the\n+--  generic parameter Complex has been replaced by separate real and imaginary\n+--  parameters, and default parameters have been removed because they are\n+--  supplied explicitly by the calls from within the generic template.\n+\n+with Ada.Text_IO.Float_Aux;\n+\n+private generic\n+\n+   type Num is digits <>;\n+\n+   with package Aux is new Ada.Text_IO.Float_Aux (Num, <>);\n \n package Ada.Text_IO.Complex_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Width : Field);\n \n    procedure Put\n      (File  : File_Type;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Fore  : Field;\n       Aft   : Field;\n       Exp   : Field);\n \n    procedure Gets\n      (From  : String;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Last  : out Positive);\n \n    procedure Puts\n      (To    : out String;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Aft   : Field;\n       Exp   : Field);\n "}, {"sha": "e35a745e3fd4f4d8e0f318e6b6c54a8faa9518c4", "filename": "gcc/ada/libgnat/a-ticoio.adb", "status": "modified", "additions": 79, "deletions": 15, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ticoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ticoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ticoio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -29,33 +29,67 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Text_IO;\n-\n with Ada.Text_IO.Complex_Aux;\n+with Ada.Text_IO.Float_Aux;\n+with System.Val_Flt;  use System.Val_Flt;\n+with System.Val_LFlt; use System.Val_LFlt;\n+with System.Val_LLF;  use System.Val_LLF;\n \n package body Ada.Text_IO.Complex_IO is\n \n    use Complex_Types;\n \n-   package Aux renames Ada.Text_IO.Complex_Aux;\n+   package Scalar_Float is new\n+      Ada.Text_IO.Float_Aux (Float, Scan_Float);\n+\n+   package Scalar_Long_Float is new\n+      Ada.Text_IO.Float_Aux (Long_Float, Scan_Long_Float);\n+\n+   package Scalar_Long_Long_Float is new\n+      Ada.Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   package Aux_Float is new\n+      Ada.Text_IO.Complex_Aux (Float, Scalar_Float);\n+\n+   package Aux_Long_Float is new\n+      Ada.Text_IO.Complex_Aux (Long_Float, Scalar_Long_Float);\n \n-   subtype LLF is Long_Long_Float;\n-   --  Type used for calls to routines in Aux\n+   package Aux_Long_Long_Float is new\n+      Ada.Text_IO.Complex_Aux (Long_Long_Float, Scalar_Long_Long_Float);\n+\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Float is OK, where type Long_Float is OK and where type Long_Long_Float\n+   --  is needed. These boolean constants are used to test for this, such that\n+   --  only code for the relevant case is included in the instance.\n+\n+   OK_Float : constant Boolean := Real'Base'Digits <= Float'Digits;\n+\n+   OK_Long_Float : constant Boolean := Real'Base'Digits <= Long_Float'Digits;\n \n    ---------\n    -- Get --\n    ---------\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Complex_Types.Complex;\n+      Item  : out Complex;\n       Width : Field := 0)\n    is\n       Real_Item : Real'Base;\n       Imag_Item : Real'Base;\n \n    begin\n-      Aux.Get (File, LLF (Real_Item), LLF (Imag_Item), Width);\n+      if OK_Float then\n+         Aux_Float.Get (File, Float (Real_Item), Float (Imag_Item), Width);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Get\n+           (File, Long_Float (Real_Item), Long_Float (Imag_Item), Width);\n+      else\n+         Aux_Long_Long_Float.Get\n+           (File, Long_Long_Float (Real_Item), Long_Long_Float (Imag_Item),\n+            Width);\n+      end if;\n+\n       Item := (Real_Item, Imag_Item);\n \n    exception\n@@ -67,7 +101,7 @@ package body Ada.Text_IO.Complex_IO is\n    ---------\n \n    procedure Get\n-     (Item  : out Complex_Types.Complex;\n+     (Item  : out Complex;\n       Width : Field := 0)\n    is\n    begin\n@@ -80,14 +114,24 @@ package body Ada.Text_IO.Complex_IO is\n \n    procedure Get\n      (From : String;\n-      Item : out Complex_Types.Complex;\n+      Item : out Complex;\n       Last : out Positive)\n    is\n       Real_Item : Real'Base;\n       Imag_Item : Real'Base;\n \n    begin\n-      Aux.Gets (From, LLF (Real_Item), LLF (Imag_Item), Last);\n+      if OK_Float then\n+         Aux_Float.Gets (From, Float (Real_Item), Float (Imag_Item), Last);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Gets\n+           (From, Long_Float (Real_Item), Long_Float (Imag_Item), Last);\n+      else\n+         Aux_Long_Long_Float.Gets\n+           (From, Long_Long_Float (Real_Item), Long_Long_Float (Imag_Item),\n+            Last);\n+      end if;\n+\n       Item := (Real_Item, Imag_Item);\n \n    exception\n@@ -100,21 +144,32 @@ package body Ada.Text_IO.Complex_IO is\n \n    procedure Put\n      (File : File_Type;\n-      Item : Complex_Types.Complex;\n+      Item : Complex;\n       Fore : Field := Default_Fore;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (File, LLF (Re (Item)), LLF (Im (Item)), Fore, Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Put\n+           (File, Float (Re (Item)), Float (Im (Item)), Fore, Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Put\n+           (File, Long_Float (Re (Item)), Long_Float (Im (Item)), Fore, Aft,\n+            Exp);\n+      else\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Re (Item)), Long_Long_Float (Im (Item)),\n+            Fore, Aft, Exp);\n+      end if;\n    end Put;\n \n    ---------\n    -- Put --\n    ---------\n \n    procedure Put\n-     (Item : Complex_Types.Complex;\n+     (Item : Complex;\n       Fore : Field := Default_Fore;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp)\n@@ -129,12 +184,21 @@ package body Ada.Text_IO.Complex_IO is\n \n    procedure Put\n      (To   : out String;\n-      Item : Complex_Types.Complex;\n+      Item : Complex;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Puts (To, LLF (Re (Item)), LLF (Im (Item)), Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Puts (To, Float (Re (Item)), Float (Im (Item)), Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Puts\n+           (To, Long_Float (Re (Item)), Long_Float (Im (Item)), Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Puts\n+           (To, Long_Long_Float (Re (Item)), Long_Long_Float (Im (Item)),\n+            Aft, Exp);\n+      end if;\n    end Put;\n \n end Ada.Text_IO.Complex_IO;"}, {"sha": "ac751c13e1abe4e94e843d7e4abbd1c444b871a6", "filename": "gcc/ada/libgnat/a-tideau.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tideau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tideau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tideau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,7 +30,6 @@\n ------------------------------------------------------------------------------\n \n with Ada.Text_IO.Generic_Aux; use Ada.Text_IO.Generic_Aux;\n-with Ada.Text_IO.Float_Aux;   use Ada.Text_IO.Float_Aux;\n \n package body Ada.Text_IO.Decimal_Aux is\n "}, {"sha": "c6f4430e7cbef9862dee6f483169eda692fa4b6a", "filename": "gcc/ada/libgnat/a-tifiau.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tifiau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tifiau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tifiau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,7 +30,6 @@\n ------------------------------------------------------------------------------\n \n with Ada.Text_IO.Generic_Aux; use Ada.Text_IO.Generic_Aux;\n-with Ada.Text_IO.Float_Aux;   use Ada.Text_IO.Float_Aux;\n \n package body Ada.Text_IO.Fixed_Aux is\n "}, {"sha": "412740ed691c52fcccfc06509fd03806bb5bd3d0", "filename": "gcc/ada/libgnat/a-tifiio.adb", "status": "modified", "additions": 120, "deletions": 68, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -29,8 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Fixed point I/O\n---  ---------------\n+--  -------------------\n+--  - Fixed point I/O -\n+--  -------------------\n \n --  The following text documents implementation details of the fixed point\n --  input/output routines in the GNAT runtime. The first part describes the\n@@ -40,7 +41,7 @@\n --  Subsequently these are reduced to implementation constraints and the impact\n --  of these constraints on a few possible approaches to input/output is given.\n --  Based on this analysis, a specific implementation is selected for use in\n---  the GNAT runtime. Finally, the chosen algorithm is analyzed numerically in\n+--  the GNAT runtime. Finally the chosen algorithms are analyzed numerically in\n --  order to provide user-level documentation on limits for range and precision\n --  of fixed point types as well as accuracy of input/output conversions.\n \n@@ -68,7 +69,7 @@\n --  Operations\n --  ----------\n \n---  'Image and 'Wide_Image (see RM 3.5(34))\n+--  [Wide_[Wide_]]Image attribute (see RM 3.5(27.1/2))\n \n --          These attributes return a decimal real literal best approximating\n --          the value (rounded away from zero if halfway between) with a\n@@ -88,7 +89,7 @@\n --          attributes, although it would be nice to be able to output more\n --          than S'Aft digits after the decimal point for values of subtype S.\n \n---  'Value and 'Wide_Value attribute (RM 3.5(40-55))\n+--  [Wide_[Wide_]]Value attribute (RM 3.5(39.1/2))\n \n --          Since the input can be given in any base in the range 2..16,\n --          accurate conversion to a fixed point number may require\n@@ -121,7 +122,7 @@\n --  be less than 2.0**(-53).\n \n --  In GNAT, Fine_Delta is 2.0**(-63), and Duration for example is a 64-bit\n---  type. This means that a floating-point type with 63 bits of mantissa needs\n+--  type. This means that a floating-point type with 64 bits of mantissa needs\n --  to be used, which is only generally available on the x86 architecture. It\n --  would still be possible to use multi-precision floating point to perform\n --  calculations using longer mantissas, but this is a much harder approach.\n@@ -137,52 +138,106 @@\n \n --  Fixed-precision integer arithmetic has the advantage of simplicity and\n --  speed. For the most common fixed point types this would be a perfect\n---  solution. The downside however may be a too limited set of acceptable\n+--  solution. The downside however may be a restricted set of acceptable\n --  fixed point types.\n \n+--  Implementation Choices\n+--  ----------------------\n+\n+--  The current implementation in the GNAT runtime uses fixed-precision integer\n+--  arithmetic for fixed point types whose Small is the ratio of two integers\n+--  whose magnitude is bounded relatively to the size of the mantissa, with a\n+--  two-tiered approach for 32-bit and 64-bit fixed point types. For the other\n+--  fixed point types, the implementation uses floating-point arithmetic.\n+\n+--  The exact requirements of the algorithms are analyzed and documented along\n+--  with the implementation in their respective units.\n+\n with Interfaces;\n with Ada.Text_IO.Fixed_Aux;\n with Ada.Text_IO.Float_Aux;\n with System.Img_Fixed_32; use System.Img_Fixed_32;\n with System.Img_Fixed_64; use System.Img_Fixed_64;\n with System.Val_Fixed_32; use System.Val_Fixed_32;\n with System.Val_Fixed_64; use System.Val_Fixed_64;\n+with System.Val_LLF;      use System.Val_LLF;\n \n-package body Ada.Text_IO.Fixed_IO is\n+package body Ada.Text_IO.Fixed_IO with SPARK_Mode => Off is\n \n    --  Note: we still use the floating-point I/O routines for types whose small\n-   --  is not a sufficiently small integer or the reciprocal thereof. This will\n-   --  result in inaccuracies for fixed point types that require more precision\n-   --  than is available in Long_Long_Float.\n+   --  is not the ratio of two sufficiently small integers. This will result in\n+   --  inaccuracies for fixed point types that require more precision than is\n+   --  available in Long_Long_Float.\n \n-   subtype Int32 is Interfaces.Integer_32;\n-   subtype Int64 is Interfaces.Integer_64;\n+   subtype Int32 is Interfaces.Integer_32; use type Int32;\n+   subtype Int64 is Interfaces.Integer_64; use type Int64;\n \n    package Aux32 is new\n      Ada.Text_IO.Fixed_Aux (Int32, Scan_Fixed32, Set_Image_Fixed32);\n \n    package Aux64 is new\n      Ada.Text_IO.Fixed_Aux (Int64, Scan_Fixed64, Set_Image_Fixed64);\n \n-   Exact : constant Boolean :=\n-     (Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n-       or else Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small))\n-     and then Num'Small >= 2.0**(-63)\n-     and then Num'Small <= 2.0**63;\n-   --  True if the exact algorithm implemented in Fixed_Aux can be used. The\n-   --  condition is a Small which is either an integer or the reciprocal of an\n-   --  integer with the appropriate magnitude.\n-\n-   Need_64 : constant Boolean :=\n-     Num'Object_Size > 32\n-       or else Num'Small > 2.0**31\n-       or else Num'Small < 2.0**(-31);\n-   --  Throughout this generic body, we distinguish between the case where type\n-   --  Int32 is acceptable and where type Int64 is needed. This Boolean is used\n-   --  to test for these cases and since it is a constant, only code for the\n-   --  relevant case will be included in the instance.\n+   package Aux_Long_Long_Float is new\n+     Ada.Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n \n-   E : constant Natural := 31 + 32 * Boolean'Pos (Need_64);\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Int32 is OK and where type Int64 is OK. These boolean constants are used\n+   --  to test for this, such that only code for the relevant case is included\n+   --  in the instance; that's why the computation of their value must be fully\n+   --  static (although it is not a static expressions in the RM sense).\n+\n+   OK_Get_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator <= 2**27\n+            and then Num'Small_Denominator <= 2**27));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**27)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**25));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   OK_Get_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator <= 2**59\n+            and then Num'Small_Denominator <= 2**59));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**59)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**53));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   E : constant Natural := 63 - 32 * Boolean'Pos (OK_Put_32);\n    --  T'Size - 1 for the selected Int{32,64}\n \n    F0 : constant Natural := 0;\n@@ -217,18 +272,18 @@ package body Ada.Text_IO.Fixed_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Get (File, Long_Long_Float (Item), Width);\n-      elsif Need_64 then\n+      if OK_Get_32 then\n+         Item := Num'Fixed_Value\n+                   (Aux32.Get (File, Width,\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Get (File, Width,\n-                               Int64 (-Float'Ceiling (Num'Small)),\n-                               Int64 (-Float'Ceiling (1.0 / Num'Small))));\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n       else\n-         Item := Num'Fixed_Value\n-                   (Aux32.Get (File, Width,\n-                               Int32 (-Float'Ceiling (Num'Small)),\n-                               Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n       end if;\n \n    exception\n@@ -240,7 +295,7 @@ package body Ada.Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -251,18 +306,18 @@ package body Ada.Text_IO.Fixed_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Gets (From, Long_Long_Float (Item), Last);\n-      elsif Need_64 then\n+      if OK_Get_32 then\n+         Item := Num'Fixed_Value\n+                   (Aux32.Gets (From, Last,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Gets (From, Last,\n-                                Int64 (-Float'Ceiling (Num'Small)),\n-                                Int64 (-Float'Ceiling (1.0 / Num'Small))));\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n       else\n-         Item := Num'Fixed_Value\n-                   (Aux32.Gets (From, Last,\n-                                Int32 (-Float'Ceiling (Num'Small)),\n-                                Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+         Aux_Long_Long_Float.Gets (From, Long_Long_Float (Item), Last);\n       end if;\n \n    exception\n@@ -281,18 +336,17 @@ package body Ada.Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      if not Exact then\n-         Float_Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n+                    For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Put (File, Int64'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int64 (-Float'Ceiling (Num'Small)),\n-                    Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n                     For0, Num'Aft);\n       else\n-         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int32 (-Float'Ceiling (Num'Small)),\n-                    Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                    For0, Num'Aft);\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n       end if;\n    end Put;\n \n@@ -313,18 +367,16 @@ package body Ada.Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      if not Exact then\n-         Float_Aux.Puts (To, Long_Long_Float (Item), Aft, Exp);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Puts (To, Int32'Integer_Value (Item), Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Puts (To, Int64'Integer_Value (Item), Aft, Exp,\n-                     Int64 (-Float'Ceiling (Num'Small)),\n-                     Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n                      For0, Num'Aft);\n       else\n-         Aux32.Puts (To, Int32'Integer_Value (Item), Aft, Exp,\n-                     Int32 (-Float'Ceiling (Num'Small)),\n-                     Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n+         Aux_Long_Long_Float.Puts (To, Long_Long_Float (Item), Aft, Exp);\n       end if;\n    end Put;\n "}, {"sha": "8a3886d30e67ca5881fd249397b7507ccf3ced03", "filename": "gcc/ada/libgnat/a-tifiio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tifiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tifiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tifiio.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -23,7 +23,7 @@\n private generic\n    type Num is delta <>;\n \n-package Ada.Text_IO.Fixed_IO is\n+package Ada.Text_IO.Fixed_IO with SPARK_Mode => On is\n \n    Default_Fore : Field := Num'Fore;\n    Default_Aft  : Field := Num'Aft;"}, {"sha": "f50e4c925751deaf2b39ad12983c49a3586c5f9a", "filename": "gcc/ada/libgnat/a-tifiio__128.adb", "status": "modified", "additions": 165, "deletions": 94, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tifiio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tifiio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tifiio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -29,8 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Fixed point I/O\n---  ---------------\n+--  -------------------\n+--  - Fixed point I/O -\n+--  -------------------\n \n --  The following text documents implementation details of the fixed point\n --  input/output routines in the GNAT runtime. The first part describes the\n@@ -40,7 +41,7 @@\n --  Subsequently these are reduced to implementation constraints and the impact\n --  of these constraints on a few possible approaches to input/output is given.\n --  Based on this analysis, a specific implementation is selected for use in\n---  the GNAT runtime. Finally, the chosen algorithm is analyzed numerically in\n+--  the GNAT runtime. Finally the chosen algorithms are analyzed numerically in\n --  order to provide user-level documentation on limits for range and precision\n --  of fixed point types as well as accuracy of input/output conversions.\n \n@@ -68,7 +69,7 @@\n --  Operations\n --  ----------\n \n---  'Image and 'Wide_Image (see RM 3.5(34))\n+--  [Wide_[Wide_]]Image attribute (see RM 3.5(27.1/2))\n \n --          These attributes return a decimal real literal best approximating\n --          the value (rounded away from zero if halfway between) with a\n@@ -88,7 +89,7 @@\n --          attributes, although it would be nice to be able to output more\n --          than S'Aft digits after the decimal point for values of subtype S.\n \n---  'Value and 'Wide_Value attribute (RM 3.5(40-55))\n+--  [Wide_[Wide_]]Value attribute (RM 3.5(39.1/2))\n \n --          Since the input can be given in any base in the range 2..16,\n --          accurate conversion to a fixed point number may require\n@@ -120,9 +121,9 @@\n --  available has 53 bits of mantissa. This means that Fine_Delta cannot\n --  be less than 2.0**(-53).\n \n---  In GNAT, Fine_Delta is 2.0**(-63), and Duration for example is a 64-bit\n---  type. This means that a floating-point type with 63 bits of mantissa needs\n---  to be used, which is only generally available on the x86 architecture. It\n+--  In GNAT, Fine_Delta is 2.0**(-127), and Duration for example is a 64-bit\n+--  type. This means that a floating-point type with 128 bits of mantissa needs\n+--  to be used, which currently does not exist in any common architecture. It\n --  would still be possible to use multi-precision floating point to perform\n --  calculations using longer mantissas, but this is a much harder approach.\n \n@@ -137,9 +138,21 @@\n \n --  Fixed-precision integer arithmetic has the advantage of simplicity and\n --  speed. For the most common fixed point types this would be a perfect\n---  solution. The downside however may be a too limited set of acceptable\n+--  solution. The downside however may be a restricted set of acceptable\n --  fixed point types.\n \n+--  Implementation Choices\n+--  ----------------------\n+\n+--  The current implementation in the GNAT runtime uses fixed-precision integer\n+--  arithmetic for fixed point types whose Small is the ratio of two integers\n+--  whose magnitude is bounded relatively to the size of the mantissa, with a\n+--  three-tiered approach for 32-bit, 64-bit and 128-bit fixed point types. For\n+--  other fixed point types, the implementation uses floating-point arithmetic.\n+\n+--  The exact requirements of the algorithms are analyzed and documented along\n+--  with the implementation in their respective units.\n+\n with Interfaces;\n with Ada.Text_IO.Fixed_Aux;\n with Ada.Text_IO.Float_Aux;\n@@ -149,17 +162,18 @@ with System.Img_Fixed_128; use System.Img_Fixed_128;\n with System.Val_Fixed_32;  use System.Val_Fixed_32;\n with System.Val_Fixed_64;  use System.Val_Fixed_64;\n with System.Val_Fixed_128; use System.Val_Fixed_128;\n+with System.Val_LLF;       use System.Val_LLF;\n \n-package body Ada.Text_IO.Fixed_IO is\n+package body Ada.Text_IO.Fixed_IO with SPARK_Mode => Off is\n \n    --  Note: we still use the floating-point I/O routines for types whose small\n-   --  is not a sufficiently small integer or the reciprocal thereof. This will\n-   --  result in inaccuracies for fixed point types that require more precision\n-   --  than is available in Long_Long_Float.\n+   --  is not the ratio of two sufficiently small integers. This will result in\n+   --  inaccuracies for fixed point types that require more precision than is\n+   --  available in Long_Long_Float.\n \n-   subtype Int32  is Interfaces.Integer_32;\n-   subtype Int64  is Interfaces.Integer_64;\n-   subtype Int128 is Interfaces.Integer_128;\n+   subtype Int32  is Interfaces.Integer_32;  use type Int32;\n+   subtype Int64  is Interfaces.Integer_64;  use type Int64;\n+   subtype Int128 is Interfaces.Integer_128; use type Int128;\n \n    package Aux32 is new\n      Ada.Text_IO.Fixed_Aux (Int32, Scan_Fixed32, Set_Image_Fixed32);\n@@ -170,31 +184,93 @@ package body Ada.Text_IO.Fixed_IO is\n    package Aux128 is new\n      Ada.Text_IO.Fixed_Aux (Int128, Scan_Fixed128, Set_Image_Fixed128);\n \n-   Exact : constant Boolean :=\n-     (Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n-       or else Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small))\n-     and then Num'Small >= 2.0**(-127)\n-     and then Num'Small <= 2.0**127;\n-   --  True if the exact algorithm implemented in Fixed_Aux can be used. The\n-   --  condition is a Small which is either an integer or the reciprocal of an\n-   --  integer with the appropriate magnitude.\n-\n-   Need_64 : constant Boolean :=\n-     Num'Object_Size > 32\n-       or else Num'Small > 2.0**31\n-       or else Num'Small < 2.0**(-31);\n-   Need_128 : constant Boolean :=\n-     Num'Object_Size > 64\n-       or else Num'Small > 2.0**63\n-       or else Num'Small < 2.0**(-63);\n-   --  Throughout this generic body, we distinguish between the cases where\n-   --  type Int32 is acceptable, where type Int64 is acceptable, and where\n-   --  type Int128 is needed. These boolean constants are used to test for\n-   --  these cases and since they are constant, only code for the relevant\n-   --  case will be really included in the instance.\n+   package Aux_Long_Long_Float is new\n+     Ada.Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Int32 is OK, where type Int64 is OK and where type Int128 is OK. These\n+   --  boolean constants are used to test for this, such that only code for the\n+   --  relevant case is included in the instance; that's why the computation of\n+   --  their value must be fully static (although it is not a static expression\n+   --  in the RM sense).\n+\n+   OK_Get_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator <= 2**27\n+            and then Num'Small_Denominator <= 2**27));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**27)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**25));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   OK_Get_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator <= 2**59\n+            and then Num'Small_Denominator <= 2**59));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**59)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**53));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   OK_Get_128 : constant Boolean :=\n+     Num'Base'Object_Size <= 128\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**127)\n+           or else\n+          (Num'Small_Numerator <= 2**123\n+            and then Num'Small_Denominator <= 2**123));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_128 : constant Boolean :=\n+     Num'Base'Object_Size <= 128\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**127)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**123)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**122));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n \n    E : constant Natural :=\n-         31 + 32 * Boolean'Pos (Need_64) + 64 * Boolean'Pos (Need_128);\n+         127 - 64 * Boolean'Pos (OK_Put_64) - 32 * Boolean'Pos (OK_Put_32);\n    --  T'Size - 1 for the selected Int{32,64,128}\n \n    F0 : constant Natural := 0;\n@@ -231,23 +307,23 @@ package body Ada.Text_IO.Fixed_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Get (File, Long_Long_Float (Item), Width);\n-      elsif Need_128 then\n+      if OK_Get_32 then\n          Item := Num'Fixed_Value\n-                   (Aux128.Get (File, Width,\n-                                Int128 (-Float'Ceiling (Num'Small)),\n-                                Int128 (-Float'Ceiling (1.0 / Num'Small))));\n-      elsif Need_64 then\n+                   (Aux32.Get (File, Width,\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Get (File, Width,\n-                               Int64 (-Float'Ceiling (Num'Small)),\n-                               Int64 (-Float'Ceiling (1.0 / Num'Small))));\n-      else\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_128 then\n          Item := Num'Fixed_Value\n-                   (Aux32.Get (File, Width,\n-                               Int32 (-Float'Ceiling (Num'Small)),\n-                               Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+                   (Aux128.Get (File, Width,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      else\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n       end if;\n \n    exception\n@@ -259,7 +335,7 @@ package body Ada.Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -270,23 +346,23 @@ package body Ada.Text_IO.Fixed_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Gets (From, Long_Long_Float (Item), Last);\n-      elsif Need_128 then\n+      if OK_Get_32 then\n          Item := Num'Fixed_Value\n-                   (Aux128.Gets (From, Last,\n-                                 Int128 (-Float'Ceiling (Num'Small)),\n-                                 Int128 (-Float'Ceiling (1.0 / Num'Small))));\n-      elsif Need_64 then\n+                   (Aux32.Gets (From, Last,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Gets (From, Last,\n-                                Int64 (-Float'Ceiling (Num'Small)),\n-                                Int64 (-Float'Ceiling (1.0 / Num'Small))));\n-      else\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_128 then\n          Item := Num'Fixed_Value\n-                   (Aux32.Gets (From, Last,\n-                                Int32 (-Float'Ceiling (Num'Small)),\n-                                Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+                   (Aux128.Gets (From, Last,\n+                                 -Num'Small_Numerator,\n+                                 -Num'Small_Denominator));\n+      else\n+         Aux_Long_Long_Float.Gets (From, Long_Long_Float (Item), Last);\n       end if;\n \n    exception\n@@ -305,23 +381,21 @@ package body Ada.Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      if not Exact then\n-         Float_Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n-      elsif Need_128 then\n-         Aux128.Put (File, Int128'Integer_Value (Item), Fore, Aft, Exp,\n-                     Int128 (-Float'Ceiling (Num'Small)),\n-                     Int128 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n+                    For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Put (File, Int64'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int64 (-Float'Ceiling (Num'Small)),\n-                    Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n                     For0, Num'Aft);\n+      elsif OK_Put_128 then\n+         Aux128.Put (File, Int128'Integer_Value (Item), Fore, Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n       else\n-         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int32 (-Float'Ceiling (Num'Small)),\n-                    Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                    For0, Num'Aft);\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n       end if;\n    end Put;\n \n@@ -342,23 +416,20 @@ package body Ada.Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      if not Exact then\n-         Float_Aux.Puts (To, Long_Long_Float (Item), Aft, Exp);\n-      elsif Need_128 then\n-         Aux128.Puts (To, Int128'Integer_Value (Item), Aft, Exp,\n-                      Int128 (-Float'Ceiling (Num'Small)),\n-                      Int128 (-Float'Ceiling (1.0 / Num'Small)),\n-                      For0, Num'Aft);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Puts (To, Int32'Integer_Value (Item), Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Puts (To, Int64'Integer_Value (Item), Aft, Exp,\n-                     Int64 (-Float'Ceiling (Num'Small)),\n-                     Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n                      For0, Num'Aft);\n+      elsif OK_Put_128 then\n+         Aux128.Puts (To, Int128'Integer_Value (Item), Aft, Exp,\n+                      -Num'Small_Numerator, -Num'Small_Denominator,\n+                      For0, Num'Aft);\n       else\n-         Aux32.Puts (To, Int32'Integer_Value (Item), Aft, Exp,\n-                     Int32 (-Float'Ceiling (Num'Small)),\n-                     Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n+         Aux_Long_Long_Float.Puts (To, Long_Long_Float (Item), Aft, Exp);\n       end if;\n    end Put;\n "}, {"sha": "4955a992f73fd53c0c7c26dc2d1bae42fad69887", "filename": "gcc/ada/libgnat/a-tiflau.adb", "status": "modified", "additions": 9, "deletions": 109, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tiflau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tiflau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tiflau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -32,7 +32,6 @@\n with Ada.Text_IO.Generic_Aux; use Ada.Text_IO.Generic_Aux;\n \n with System.Img_Real; use System.Img_Real;\n-with System.Val_Real; use System.Val_Real;\n \n package body Ada.Text_IO.Float_Aux is\n \n@@ -42,7 +41,7 @@ package body Ada.Text_IO.Float_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Long_Long_Float;\n+      Item  : out Num;\n       Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n@@ -58,7 +57,7 @@ package body Ada.Text_IO.Float_Aux is\n          Ptr := 1;\n       end if;\n \n-      Item := Scan_Real (Buf, Ptr'Access, Stop);\n+      Item := Scan (Buf, Ptr'Access, Stop);\n       Check_End_Of_Field (Buf, Stop, Ptr, Width);\n    end Get;\n \n@@ -68,127 +67,27 @@ package body Ada.Text_IO.Float_Aux is\n \n    procedure Gets\n      (From : String;\n-      Item : out Long_Long_Float;\n+      Item : out Num;\n       Last : out Positive)\n    is\n       Pos : aliased Integer;\n \n    begin\n       String_Skip (From, Pos);\n-      Item := Scan_Real (From, Pos'Access, From'Last);\n+      Item := Scan (From, Pos'Access, From'Last);\n       Last := Pos - 1;\n \n    exception\n       when Constraint_Error => raise Data_Error;\n    end Gets;\n \n-   ---------------\n-   -- Load_Real --\n-   ---------------\n-\n-   procedure Load_Real\n-     (File : File_Type;\n-      Buf  : out String;\n-      Ptr  : in out Natural)\n-   is\n-      Loaded   : Boolean;\n-\n-   begin\n-      --  Skip initial blanks, and load possible sign\n-\n-      Load_Skip (File);\n-      Load (File, Buf, Ptr, '+', '-');\n-\n-      --  Case of .nnnn\n-\n-      Load (File, Buf, Ptr, '.', Loaded);\n-\n-      if Loaded then\n-         Load_Digits (File, Buf, Ptr, Loaded);\n-\n-         --  Hopeless junk if no digits loaded\n-\n-         if not Loaded then\n-            return;\n-         end if;\n-\n-      --  Otherwise must have digits to start\n-\n-      else\n-         Load_Digits (File, Buf, Ptr, Loaded);\n-\n-         --  Hopeless junk if no digits loaded\n-\n-         if not Loaded then\n-            return;\n-         end if;\n-\n-         --  Based cases. We recognize either the standard '#' or the\n-         --  allowed alternative replacement ':' (see RM J.2(3)).\n-\n-         Load (File, Buf, Ptr, '#', ':', Loaded);\n-\n-         if Loaded then\n-\n-            --  Case of nnn#.xxx#\n-\n-            Load (File, Buf, Ptr, '.', Loaded);\n-\n-            if Loaded then\n-               Load_Extended_Digits (File, Buf, Ptr);\n-               Load (File, Buf, Ptr, '#', ':');\n-\n-            --  Case of nnn#xxx.[xxx]# or nnn#xxx#\n-\n-            else\n-               Load_Extended_Digits (File, Buf, Ptr);\n-               Load (File, Buf, Ptr, '.', Loaded);\n-\n-               if Loaded then\n-                  Load_Extended_Digits (File, Buf, Ptr);\n-               end if;\n-\n-               --  As usual, it seems strange to allow mixed base characters,\n-               --  but that is what ACVC tests expect, see CE3804M, case (3).\n-\n-               Load (File, Buf, Ptr, '#', ':');\n-            end if;\n-\n-         --  Case of nnn.[nnn] or nnn\n-\n-         else\n-            --  Prevent the potential processing of '.' in cases where the\n-            --  initial digits have a trailing underscore.\n-\n-            if Buf (Ptr) = '_' then\n-               return;\n-            end if;\n-\n-            Load (File, Buf, Ptr, '.', Loaded);\n-\n-            if Loaded then\n-               Load_Digits (File, Buf, Ptr);\n-            end if;\n-         end if;\n-      end if;\n-\n-      --  Deal with exponent\n-\n-      Load (File, Buf, Ptr, 'E', 'e', Loaded);\n-\n-      if Loaded then\n-         Load (File, Buf, Ptr, '+', '-');\n-         Load_Digits (File, Buf, Ptr);\n-      end if;\n-   end Load_Real;\n-\n    ---------\n    -- Put --\n    ---------\n \n    procedure Put\n      (File : File_Type;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Fore : Field;\n       Aft  : Field;\n       Exp  : Field)\n@@ -197,7 +96,7 @@ package body Ada.Text_IO.Float_Aux is\n       Ptr : Natural := 0;\n \n    begin\n-      Set_Image_Real (Item, Buf, Ptr, Fore, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (Item), Buf, Ptr, Fore, Aft, Exp);\n       Put_Item (File, Buf (1 .. Ptr));\n    end Put;\n \n@@ -207,15 +106,16 @@ package body Ada.Text_IO.Float_Aux is\n \n    procedure Puts\n      (To   : out String;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Aft  : Field;\n       Exp  : Field)\n    is\n       Buf : String (1 .. Max_Real_Image_Length);\n       Ptr : Natural := 0;\n \n    begin\n-      Set_Image_Real (Item, Buf, Ptr, Fore => 1, Aft => Aft, Exp => Exp);\n+      Set_Image_Real\n+        (Long_Long_Float (Item), Buf, Ptr, Fore => 1, Aft => Aft, Exp => Exp);\n \n       if Ptr > To'Length then\n          raise Layout_Error;"}, {"sha": "2dfe76da97437d69a7b10736eb3f5133c50b9fce", "filename": "gcc/ada/libgnat/a-tiflau.ads", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tiflau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tiflau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tiflau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -31,41 +31,42 @@\n \n --  This package contains the routines for Ada.Text_IO.Float_IO that are\n --  shared among separate instantiations of this package. The routines in\n---  this package are identical semantically to those in Float_IO itself,\n---  except that generic parameter Num has been replaced by Long_Long_Float,\n---  and the default parameters have been removed because they are supplied\n+--  this package are identical semantically to those in Float_IO, except\n+--  that the default parameters have been removed because they are supplied\n --  explicitly by the calls from within the generic template. This package\n---  is also used by Ada.Text_IO.Fixed_IO, and Ada.Text_IO.Decimal_IO.\n+--  is also used by Ada.Text_IO.Fixed_IO and Ada.Text_IO.Decimal_IO.\n \n-private package Ada.Text_IO.Float_Aux is\n+private generic\n \n-   procedure Load_Real\n-     (File : File_Type;\n-      Buf  : out String;\n-      Ptr  : in out Natural);\n-   --  This is an auxiliary routine that is used to load a possibly signed\n-   --  real literal value from the input file into Buf, starting at Ptr + 1.\n+   type Num is digits <>;\n+\n+   with function Scan\n+     (Str : String;\n+      Ptr : not null access Integer;\n+      Max : Integer) return Num;\n+\n+package Ada.Text_IO.Float_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Long_Long_Float;\n+      Item  : out Num;\n       Width : Field);\n \n    procedure Put\n      (File : File_Type;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Fore : Field;\n       Aft  : Field;\n       Exp  : Field);\n \n    procedure Gets\n      (From : String;\n-      Item : out Long_Long_Float;\n+      Item : out Num;\n       Last : out Positive);\n \n    procedure Puts\n      (To   : out String;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Aft  : Field;\n       Exp  : Field);\n "}, {"sha": "db1cea2dcd04ea5ffaf05502507f65f48e7c5840", "filename": "gcc/ada/libgnat/a-tiflio.adb", "status": "modified", "additions": 52, "deletions": 22, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tiflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tiflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tiflio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,10 +30,29 @@\n ------------------------------------------------------------------------------\n \n with Ada.Text_IO.Float_Aux;\n+with System.Val_Flt;  use System.Val_Flt;\n+with System.Val_LFlt; use System.Val_LFlt;\n+with System.Val_LLF;  use System.Val_LLF;\n \n-package body Ada.Text_IO.Float_IO is\n+package body Ada.Text_IO.Float_IO with SPARK_Mode => Off is\n \n-   package Aux renames Ada.Text_IO.Float_Aux;\n+   package Aux_Float is new\n+      Ada.Text_IO.Float_Aux (Float, Scan_Float);\n+\n+   package Aux_Long_Float is new\n+      Ada.Text_IO.Float_Aux (Long_Float, Scan_Long_Float);\n+\n+   package Aux_Long_Long_Float is new\n+      Ada.Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Float is OK, where type Long_Float is OK and where type Long_Long_Float\n+   --  is needed. These boolean constants are used to test for this, such that\n+   --  only code for the relevant case is included in the instance.\n+\n+   OK_Float : constant Boolean := Num'Base'Digits <= Float'Digits;\n+\n+   OK_Long_Float : constant Boolean := Num'Base'Digits <= Long_Float'Digits;\n \n    ---------\n    -- Get --\n@@ -47,7 +66,13 @@ package body Ada.Text_IO.Float_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      Aux.Get (File, Long_Long_Float (Item), Width);\n+      if OK_Float then\n+         Aux_Float.Get (File, Float (Item), Width);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Get (File, Long_Float (Item), Width);\n+      else\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n+      end if;\n \n       --  In the case where the type is unconstrained (e.g. Standard'Float),\n       --  the above conversion may result in an infinite value, which is\n@@ -66,22 +91,8 @@ package body Ada.Text_IO.Float_IO is\n      (Item  : out Num;\n       Width : Field := 0)\n    is\n-      pragma Unsuppress (Range_Check);\n-\n    begin\n-      Aux.Get (Current_In, Long_Long_Float (Item), Width);\n-\n-      --  In the case where the type is unconstrained (e.g. Standard'Float),\n-      --  the above conversion may result in an infinite value, which is\n-      --  normally fine for a conversion, but in this case, we want to treat\n-      --  that as a data error.\n-\n-      if not Item'Valid then\n-         raise Data_Error;\n-      end if;\n-\n-   exception\n-      when Constraint_Error => raise Data_Error;\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -92,7 +103,13 @@ package body Ada.Text_IO.Float_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      Aux.Gets (From, Long_Long_Float (Item), Last);\n+      if OK_Float then\n+         Aux_Float.Gets (From, Float (Item), Last);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Gets (From, Long_Float (Item), Last);\n+      else\n+         Aux_Long_Long_Float.Gets (From, Long_Long_Float (Item), Last);\n+      end if;\n \n       --  In the case where the type is unconstrained (e.g. Standard'Float),\n       --  the above conversion may result in an infinite value, which is\n@@ -119,7 +136,14 @@ package body Ada.Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Put (File, Float (Item), Fore, Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Put (File, Long_Float (Item), Fore, Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n+      end if;\n    end Put;\n \n    procedure Put\n@@ -129,7 +153,7 @@ package body Ada.Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (Current_Out, Long_Long_Float (Item), Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n@@ -139,7 +163,13 @@ package body Ada.Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Puts (To, Long_Long_Float (Item), Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Puts (To, Float (Item), Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Puts (To, Long_Float (Item), Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Puts (To, Long_Long_Float (Item), Aft, Exp);\n+      end if;\n    end Put;\n \n end Ada.Text_IO.Float_IO;"}, {"sha": "d61b9e75ce768c1d7764616d5d0cde33192e8dd8", "filename": "gcc/ada/libgnat/a-tiflio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tiflio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tiflio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tiflio.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -43,7 +43,7 @@\n private generic\n    type Num is digits <>;\n \n-package Ada.Text_IO.Float_IO is\n+package Ada.Text_IO.Float_IO with SPARK_Mode => On is\n \n    Default_Fore : Field := 2;\n    Default_Aft  : Field := Num'Digits - 1;"}, {"sha": "5e13dae20ba6f256a42e70d48169b771e4c416cc", "filename": "gcc/ada/libgnat/a-tigeau.adb", "status": "modified", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tigeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tigeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tigeau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -376,6 +376,106 @@ package body Ada.Text_IO.Generic_Aux is\n       end if;\n    end Load_Integer;\n \n+   ---------------\n+   -- Load_Real --\n+   ---------------\n+\n+   procedure Load_Real\n+     (File : File_Type;\n+      Buf  : out String;\n+      Ptr  : in out Natural)\n+   is\n+      Loaded   : Boolean;\n+\n+   begin\n+      --  Skip initial blanks, and load possible sign\n+\n+      Load_Skip (File);\n+      Load (File, Buf, Ptr, '+', '-');\n+\n+      --  Case of .nnnn\n+\n+      Load (File, Buf, Ptr, '.', Loaded);\n+\n+      if Loaded then\n+         Load_Digits (File, Buf, Ptr, Loaded);\n+\n+         --  Hopeless junk if no digits loaded\n+\n+         if not Loaded then\n+            return;\n+         end if;\n+\n+      --  Otherwise must have digits to start\n+\n+      else\n+         Load_Digits (File, Buf, Ptr, Loaded);\n+\n+         --  Hopeless junk if no digits loaded\n+\n+         if not Loaded then\n+            return;\n+         end if;\n+\n+         --  Based cases. We recognize either the standard '#' or the\n+         --  allowed alternative replacement ':' (see RM J.2(3)).\n+\n+         Load (File, Buf, Ptr, '#', ':', Loaded);\n+\n+         if Loaded then\n+\n+            --  Case of nnn#.xxx#\n+\n+            Load (File, Buf, Ptr, '.', Loaded);\n+\n+            if Loaded then\n+               Load_Extended_Digits (File, Buf, Ptr);\n+               Load (File, Buf, Ptr, '#', ':');\n+\n+            --  Case of nnn#xxx.[xxx]# or nnn#xxx#\n+\n+            else\n+               Load_Extended_Digits (File, Buf, Ptr);\n+               Load (File, Buf, Ptr, '.', Loaded);\n+\n+               if Loaded then\n+                  Load_Extended_Digits (File, Buf, Ptr);\n+               end if;\n+\n+               --  As usual, it seems strange to allow mixed base characters,\n+               --  but that is what ACVC tests expect, see CE3804M, case (3).\n+\n+               Load (File, Buf, Ptr, '#', ':');\n+            end if;\n+\n+         --  Case of nnn.[nnn] or nnn\n+\n+         else\n+            --  Prevent the potential processing of '.' in cases where the\n+            --  initial digits have a trailing underscore.\n+\n+            if Buf (Ptr) = '_' then\n+               return;\n+            end if;\n+\n+            Load (File, Buf, Ptr, '.', Loaded);\n+\n+            if Loaded then\n+               Load_Digits (File, Buf, Ptr);\n+            end if;\n+         end if;\n+      end if;\n+\n+      --  Deal with exponent\n+\n+      Load (File, Buf, Ptr, 'E', 'e', Loaded);\n+\n+      if Loaded then\n+         Load (File, Buf, Ptr, '+', '-');\n+         Load_Digits (File, Buf, Ptr);\n+      end if;\n+   end Load_Real;\n+\n    ---------------\n    -- Load_Skip --\n    ---------------"}, {"sha": "d6acd8db32adfb6f14c22e16cd50ce2202c4f567", "filename": "gcc/ada/libgnat/a-tigeau.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tigeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-tigeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tigeau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -156,6 +156,12 @@ private package Ada.Text_IO.Generic_Aux is\n       Ptr  : in out Natural);\n    --  Loads a possibly signed integer literal value\n \n+   procedure Load_Real\n+     (File : File_Type;\n+      Buf  : out String;\n+      Ptr  : in out Natural);\n+   --  Loads a possibly signed real literal value\n+\n    function Nextc (File : File_Type) return Integer;\n    --  Like Getc, but includes a call to Ungetc, so that the file\n    --  pointer is not moved by the call."}, {"sha": "05a6d9d1ebc04a10bc12819f977fedc3eb475abe", "filename": "gcc/ada/libgnat/a-wtcoau.adb", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtcoau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtcoau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtcoau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,22 +30,19 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Text_IO.Generic_Aux; use Ada.Wide_Text_IO.Generic_Aux;\n-with Ada.Wide_Text_IO.Float_Aux;\n \n with System.Img_Real; use System.Img_Real;\n \n package body Ada.Wide_Text_IO.Complex_Aux is\n \n-   package Aux renames Ada.Wide_Text_IO.Float_Aux;\n-\n    ---------\n    -- Get --\n    ---------\n \n    procedure Get\n      (File  : File_Type;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Width : Field)\n    is\n       Buf   : String (1 .. Field'Last);\n@@ -95,8 +92,8 @@ package body Ada.Wide_Text_IO.Complex_Aux is\n \n    procedure Gets\n      (From  : String;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Last  : out Positive)\n    is\n       Paren : Boolean;\n@@ -139,8 +136,8 @@ package body Ada.Wide_Text_IO.Complex_Aux is\n \n    procedure Put\n      (File  : File_Type;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Fore  : Field;\n       Aft   : Field;\n       Exp   : Field)\n@@ -159,8 +156,8 @@ package body Ada.Wide_Text_IO.Complex_Aux is\n \n    procedure Puts\n      (To    : out String;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Aft   :  Field;\n       Exp   :  Field)\n    is\n@@ -174,9 +171,9 @@ package body Ada.Wide_Text_IO.Complex_Aux is\n       --  Both parts are initially converted with a Fore of 0\n \n       Rptr := 0;\n-      Set_Image_Real (ItemR, R_String, Rptr, 0, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (ItemR), R_String, Rptr, 0, Aft, Exp);\n       Iptr := 0;\n-      Set_Image_Real (ItemI, I_String, Iptr, 0, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (ItemI), I_String, Iptr, 0, Aft, Exp);\n \n       --  Check room for both parts plus parens plus comma (RM G.1.3(34))\n "}, {"sha": "affb969548a58a8316f349c99b6a24684e87bf73", "filename": "gcc/ada/libgnat/a-wtcoau.ads", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtcoau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtcoau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtcoau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -29,40 +29,47 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains the routines for Ada.Wide_Text_IO.Complex_IO that\n---  are shared among separate instantiations of this package. The routines\n---  in this package are identical semantically to those in Complex_IO itself,\n---  except that the generic parameter Complex has been replaced by separate\n---  real and imaginary values of type Long_Long_Float, and default parameters\n---  have been removed because they are supplied explicitly by the calls from\n---  within the generic template.\n+--  This package contains the routines for Ada.Wide_Text_IO.Complex_IO that are\n+--  shared among separate instantiations of this package. The routines in this\n+--  package are identical semantically to those in Complex_IO, except that the\n+--  generic parameter Complex has been replaced by separate real and imaginary\n+--  parameters, and default parameters have been removed because they are\n+--  supplied explicitly by the calls from within the generic template.\n+\n+with Ada.Wide_Text_IO.Float_Aux;\n+\n+private generic\n+\n+   type Num is digits <>;\n+\n+   with package Aux is new Ada.Wide_Text_IO.Float_Aux (Num, <>);\n \n package Ada.Wide_Text_IO.Complex_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Width : Field);\n \n-   procedure Gets\n-     (From  : String;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n-      Last  : out Positive);\n-\n    procedure Put\n      (File  : File_Type;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Fore  : Field;\n       Aft   : Field;\n       Exp   : Field);\n \n+   procedure Gets\n+     (From  : String;\n+      ItemR : out Num;\n+      ItemI : out Num;\n+      Last  : out Positive);\n+\n    procedure Puts\n      (To    : out String;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Aft   : Field;\n       Exp   : Field);\n "}, {"sha": "8e9ff7af385624f5605678ac080b86c456889d93", "filename": "gcc/ada/libgnat/a-wtcoio.adb", "status": "modified", "additions": 77, "deletions": 18, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtcoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtcoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtcoio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,24 +30,43 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Text_IO.Complex_Aux;\n+with Ada.Wide_Text_IO.Float_Aux;\n+with System.Val_Flt;  use System.Val_Flt;\n+with System.Val_LFlt; use System.Val_LFlt;\n+with System.Val_LLF;  use System.Val_LLF;\n+with System.WCh_Con;  use System.WCh_Con;\n+with System.WCh_WtS;  use System.WCh_WtS;\n \n-with System.WCh_Con; use System.WCh_Con;\n-with System.WCh_WtS; use System.WCh_WtS;\n+package body Ada.Wide_Text_IO.Complex_IO is\n \n-with Ada.Unchecked_Conversion;\n+   use Complex_Types;\n \n-package body Ada.Wide_Text_IO.Complex_IO is\n+   package Scalar_Float is new\n+      Ada.Wide_Text_IO.Float_Aux (Float, Scan_Float);\n+\n+   package Scalar_Long_Float is new\n+      Ada.Wide_Text_IO.Float_Aux (Long_Float, Scan_Long_Float);\n+\n+   package Scalar_Long_Long_Float is new\n+      Ada.Wide_Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   package Aux_Float is new\n+      Ada.Wide_Text_IO.Complex_Aux (Float, Scalar_Float);\n \n-   package Aux renames Ada.Wide_Text_IO.Complex_Aux;\n+   package Aux_Long_Float is new\n+      Ada.Wide_Text_IO.Complex_Aux (Long_Float, Scalar_Long_Float);\n \n-   subtype LLF is Long_Long_Float;\n-   --  Type used for calls to routines in Aux\n+   package Aux_Long_Long_Float is new\n+      Ada.Wide_Text_IO.Complex_Aux (Long_Long_Float, Scalar_Long_Long_Float);\n \n-   function TFT is new\n-     Ada.Unchecked_Conversion (File_Type, Ada.Wide_Text_IO.File_Type);\n-   --  This unchecked conversion is to get around a visibility bug in\n-   --  GNAT version 2.04w. It should be possible to simply use the\n-   --  subtype declared above and do normal checked conversions.\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Float is OK, where type Long_Float is OK and where type Long_Long_Float\n+   --  is needed. These boolean constants are used to test for this, such that\n+   --  only code for the relevant case is included in the instance.\n+\n+   OK_Float : constant Boolean := Real'Base'Digits <= Float'Digits;\n+\n+   OK_Long_Float : constant Boolean := Real'Base'Digits <= Long_Float'Digits;\n \n    ---------\n    -- Get --\n@@ -62,7 +81,17 @@ package body Ada.Wide_Text_IO.Complex_IO is\n       Imag_Item : Real'Base;\n \n    begin\n-      Aux.Get (TFT (File), LLF (Real_Item), LLF (Imag_Item), Width);\n+      if OK_Float then\n+         Aux_Float.Get (File, Float (Real_Item), Float (Imag_Item), Width);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Get\n+           (File, Long_Float (Real_Item), Long_Float (Imag_Item), Width);\n+      else\n+         Aux_Long_Long_Float.Get\n+           (File, Long_Long_Float (Real_Item), Long_Long_Float (Imag_Item),\n+            Width);\n+      end if;\n+\n       Item := (Real_Item, Imag_Item);\n \n    exception\n@@ -78,7 +107,7 @@ package body Ada.Wide_Text_IO.Complex_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    ---------\n@@ -100,7 +129,17 @@ package body Ada.Wide_Text_IO.Complex_IO is\n       --  Aux.Gets will raise Data_Error in any case.\n \n    begin\n-      Aux.Gets (S, LLF (Real_Item), LLF (Imag_Item), Last);\n+      if OK_Float then\n+         Aux_Float.Gets (S, Float (Real_Item), Float (Imag_Item), Last);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Gets\n+           (S, Long_Float (Real_Item), Long_Float (Imag_Item), Last);\n+      else\n+         Aux_Long_Long_Float.Gets\n+           (S, Long_Long_Float (Real_Item), Long_Long_Float (Imag_Item),\n+            Last);\n+      end if;\n+\n       Item := (Real_Item, Imag_Item);\n \n    exception\n@@ -119,7 +158,18 @@ package body Ada.Wide_Text_IO.Complex_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (TFT (File), LLF (Re (Item)), LLF (Im (Item)), Fore, Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Put\n+           (File, Float (Re (Item)), Float (Im (Item)), Fore, Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Put\n+           (File, Long_Float (Re (Item)), Long_Float (Im (Item)), Fore, Aft,\n+            Exp);\n+      else\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Re (Item)), Long_Long_Float (Im (Item)),\n+            Fore, Aft, Exp);\n+      end if;\n    end Put;\n \n    ---------\n@@ -133,7 +183,7 @@ package body Ada.Wide_Text_IO.Complex_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    ---------\n@@ -149,7 +199,16 @@ package body Ada.Wide_Text_IO.Complex_IO is\n       S : String (To'First .. To'Last);\n \n    begin\n-      Aux.Puts (S, LLF (Re (Item)), LLF (Im (Item)), Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Puts (S, Float (Re (Item)), Float (Im (Item)), Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Puts\n+           (S, Long_Float (Re (Item)), Long_Float (Im (Item)), Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Puts\n+           (S, Long_Long_Float (Re (Item)), Long_Long_Float (Im (Item)),\n+            Aft, Exp);\n+      end if;\n \n       for J in S'Range loop\n          To (J) := Wide_Character'Val (Character'Pos (S (J)));"}, {"sha": "f80a5b9719a0640d870471a83dc29e08e5dc3c58", "filename": "gcc/ada/libgnat/a-wtcoio.ads", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtcoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtcoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtcoio.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -20,42 +20,40 @@ generic\n \n package Ada.Wide_Text_IO.Complex_IO is\n \n-   use Complex_Types;\n-\n    Default_Fore : Field := 2;\n-   Default_Aft  : Field := Real'Digits - 1;\n+   Default_Aft  : Field := Complex_Types.Real'Digits - 1;\n    Default_Exp  : Field := 3;\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Complex;\n+      Item  : out Complex_Types.Complex;\n       Width : Field := 0);\n \n    procedure Get\n-     (Item  : out Complex;\n+     (Item  : out Complex_Types.Complex;\n       Width : Field := 0);\n \n    procedure Put\n      (File : File_Type;\n-      Item : Complex;\n+      Item : Complex_Types.Complex;\n       Fore : Field := Default_Fore;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp);\n \n    procedure Put\n-     (Item : Complex;\n+     (Item : Complex_Types.Complex;\n       Fore : Field := Default_Fore;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp);\n \n    procedure Get\n      (From : Wide_String;\n-      Item : out Complex;\n+      Item : out Complex_Types.Complex;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out Wide_String;\n-      Item : Complex;\n+      Item : Complex_Types.Complex;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp);\n "}, {"sha": "57fcc92a20ff6f26b3b342c4689e7f5ec78c429c", "filename": "gcc/ada/libgnat/a-wtdeau.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtdeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtdeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtdeau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,7 +30,6 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Text_IO.Generic_Aux; use Ada.Wide_Text_IO.Generic_Aux;\n-with Ada.Wide_Text_IO.Float_Aux;   use Ada.Wide_Text_IO.Float_Aux;\n \n package body Ada.Wide_Text_IO.Decimal_Aux is\n "}, {"sha": "c503a20549f18083c5d555d83c878893151f1066", "filename": "gcc/ada/libgnat/a-wtdeio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtdeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtdeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtdeio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -89,7 +89,7 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -144,7 +144,7 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put"}, {"sha": "796c72499f227fce86351a83c69a04382801efe1", "filename": "gcc/ada/libgnat/a-wtdeio__128.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtdeio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtdeio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtdeio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -102,7 +102,7 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -162,7 +162,7 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put"}, {"sha": "f89359cecdd4774510bef4be74504a9bf5d9f36c", "filename": "gcc/ada/libgnat/a-wtenio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtenio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtenio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtenio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -51,7 +51,7 @@ package body Ada.Wide_Text_IO.Enumeration_IO is\n \n    procedure Get (Item : out Enum) is\n    begin\n-      Get (Current_Input, Item);\n+      Get (Current_In, Item);\n    end Get;\n \n    procedure Get\n@@ -88,7 +88,7 @@ package body Ada.Wide_Text_IO.Enumeration_IO is\n       Set   : Type_Set := Default_Setting)\n    is\n    begin\n-      Put (Current_Output, Item, Width, Set);\n+      Put (Current_Out, Item, Width, Set);\n    end Put;\n \n    procedure Put"}, {"sha": "611b76ddf5b8a14c0eca32d4896b889664411887", "filename": "gcc/ada/libgnat/a-wtfiau.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtfiau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtfiau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtfiau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,7 +30,6 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Text_IO.Generic_Aux; use Ada.Wide_Text_IO.Generic_Aux;\n-with Ada.Wide_Text_IO.Float_Aux;   use Ada.Wide_Text_IO.Float_Aux;\n \n package body Ada.Wide_Text_IO.Fixed_Aux is\n "}, {"sha": "e2537ae0ce30843718e90be38e6f2335979b34df", "filename": "gcc/ada/libgnat/a-wtfiio.adb", "status": "modified", "additions": 99, "deletions": 60, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -36,44 +36,86 @@ with System.Img_Fixed_32; use System.Img_Fixed_32;\n with System.Img_Fixed_64; use System.Img_Fixed_64;\n with System.Val_Fixed_32; use System.Val_Fixed_32;\n with System.Val_Fixed_64; use System.Val_Fixed_64;\n+with System.Val_LLF;       use System.Val_LLF;\n with System.WCh_Con;      use System.WCh_Con;\n with System.WCh_WtS;      use System.WCh_WtS;\n \n package body Ada.Wide_Text_IO.Fixed_IO is\n \n    --  Note: we still use the floating-point I/O routines for types whose small\n-   --  is not a sufficiently small integer or the reciprocal thereof. This will\n-   --  result in inaccuracies for fixed point types that require more precision\n-   --  than is available in Long_Long_Float.\n+   --  is not the ratio of two sufficiently small integers. This will result in\n+   --  inaccuracies for fixed point types that require more precision than is\n+   --  available in Long_Long_Float.\n \n-   subtype Int32 is Interfaces.Integer_32;\n-   subtype Int64 is Interfaces.Integer_64;\n+   subtype Int32 is Interfaces.Integer_32; use type Int32;\n+   subtype Int64 is Interfaces.Integer_64; use type Int64;\n \n    package Aux32 is new\n      Ada.Wide_Text_IO.Fixed_Aux (Int32, Scan_Fixed32, Set_Image_Fixed32);\n \n    package Aux64 is new\n      Ada.Wide_Text_IO.Fixed_Aux (Int64, Scan_Fixed64, Set_Image_Fixed64);\n \n-   Exact : constant Boolean :=\n-     (Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n-       or else Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small))\n-     and then Num'Small >= 2.0**(-63)\n-     and then Num'Small <= 2.0**63;\n-   --  True if the exact algorithm implemented in Fixed_Aux can be used. The\n-   --  condition is a Small which is either an integer or the reciprocal of an\n-   --  integer with the appropriate magnitude.\n-\n-   Need_64 : constant Boolean :=\n-     Num'Object_Size > 32\n-       or else Num'Small > 2.0**31\n-       or else Num'Small < 2.0**(-31);\n+   package Aux_Long_Long_Float is new\n+     Ada.Wide_Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n    --  Throughout this generic body, we distinguish between the case where type\n-   --  Int32 is acceptable and where type Int64 is needed. This Boolean is used\n-   --  to test for these cases and since it is a constant, only code for the\n-   --  relevant case will be included in the instance.\n+   --  Int32 is OK and where type Int64 is OK. These boolean constants are used\n+   --  to test for this, such that only code for the relevant case is included\n+   --  in the instance; that's why the computation of their value must be fully\n+   --  static (although it is not a static expressions in the RM sense).\n+\n+   OK_Get_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator <= 2**27\n+            and then Num'Small_Denominator <= 2**27));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**27)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**25));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n \n-   E : constant Natural := 31 + 32 * Boolean'Pos (Need_64);\n+   OK_Get_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator <= 2**59\n+            and then Num'Small_Denominator <= 2**59));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**59)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**53));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   E : constant Natural := 63 - 32 * Boolean'Pos (OK_Put_32);\n    --  T'Size - 1 for the selected Int{32,64}\n \n    F0 : constant Natural := 0;\n@@ -108,18 +150,18 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Get (File, Long_Long_Float (Item), Width);\n-      elsif Need_64 then\n+      if OK_Get_32 then\n+         Item := Num'Fixed_Value\n+                   (Aux32.Get (File, Width,\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Get (File, Width,\n-                               Int64 (-Float'Ceiling (Num'Small)),\n-                               Int64 (-Float'Ceiling (1.0 / Num'Small))));\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n       else\n-         Item := Num'Fixed_Value\n-                   (Aux32.Get (File, Width,\n-                               Int32 (-Float'Ceiling (Num'Small)),\n-                               Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n       end if;\n \n    exception\n@@ -131,7 +173,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -148,18 +190,18 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       --  Aux.Gets will raise Data_Error in any case.\n \n    begin\n-      if not Exact then\n-         Float_Aux.Gets (S, Long_Long_Float (Item), Last);\n-      elsif Need_64 then\n+      if OK_Get_32 then\n+         Item := Num'Fixed_Value\n+                   (Aux32.Gets (S, Last,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Gets (S, Last,\n-                                Int64 (-Float'Ceiling (Num'Small)),\n-                                Int64 (-Float'Ceiling (1.0 / Num'Small))));\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n       else\n-         Item := Num'Fixed_Value\n-                   (Aux32.Gets (S, Last,\n-                                Int32 (-Float'Ceiling (Num'Small)),\n-                                Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+         Aux_Long_Long_Float.Gets (S, Long_Long_Float (Item), Last);\n       end if;\n \n    exception\n@@ -178,18 +220,17 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      if not Exact then\n-         Float_Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n+                    For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Put (File, Int64'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int64 (-Float'Ceiling (Num'Small)),\n-                    Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n                     For0, Num'Aft);\n       else\n-         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int32 (-Float'Ceiling (Num'Small)),\n-                    Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                    For0, Num'Aft);\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n       end if;\n    end Put;\n \n@@ -200,7 +241,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n@@ -212,18 +253,16 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       S : String (To'First .. To'Last);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Puts (S, Long_Long_Float (Item), Aft, Exp);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Puts (S, Int32'Integer_Value (Item), Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Puts (S, Int64'Integer_Value (Item), Aft, Exp,\n-                     Int64 (-Float'Ceiling (Num'Small)),\n-                     Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n                      For0, Num'Aft);\n       else\n-         Aux32.Puts (S, Int32'Integer_Value (Item), Aft, Exp,\n-                     Int32 (-Float'Ceiling (Num'Small)),\n-                     Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n+         Aux_Long_Long_Float.Puts (S, Long_Long_Float (Item), Aft, Exp);\n       end if;\n \n       for J in S'Range loop"}, {"sha": "a5801be16ee363f50074012625181f46960edcc2", "filename": "gcc/ada/libgnat/a-wtfiio__128.adb", "status": "modified", "additions": 144, "deletions": 85, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtfiio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtfiio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtfiio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -38,19 +38,20 @@ with System.Img_Fixed_128; use System.Img_Fixed_128;\n with System.Val_Fixed_32;  use System.Val_Fixed_32;\n with System.Val_Fixed_64;  use System.Val_Fixed_64;\n with System.Val_Fixed_128; use System.Val_Fixed_128;\n+with System.Val_LLF;       use System.Val_LLF;\n with System.WCh_Con;       use System.WCh_Con;\n with System.WCh_WtS;       use System.WCh_WtS;\n \n package body Ada.Wide_Text_IO.Fixed_IO is\n \n    --  Note: we still use the floating-point I/O routines for types whose small\n-   --  is not a sufficiently small integer or the reciprocal thereof. This will\n-   --  result in inaccuracies for fixed point types that require more precision\n-   --  than is available in Long_Long_Float.\n+   --  is not the ratio of two sufficiently small integers. This will result in\n+   --  inaccuracies for fixed point types that require more precision than is\n+   --  available in Long_Long_Float.\n \n-   subtype Int32  is Interfaces.Integer_32;\n-   subtype Int64  is Interfaces.Integer_64;\n-   subtype Int128 is Interfaces.Integer_128;\n+   subtype Int32  is Interfaces.Integer_32;  use type Int32;\n+   subtype Int64  is Interfaces.Integer_64;  use type Int64;\n+   subtype Int128 is Interfaces.Integer_128; use type Int128;\n \n    package Aux32 is new\n      Ada.Wide_Text_IO.Fixed_Aux (Int32, Scan_Fixed32, Set_Image_Fixed32);\n@@ -61,31 +62,93 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    package Aux128 is new\n      Ada.Wide_Text_IO.Fixed_Aux (Int128, Scan_Fixed128, Set_Image_Fixed128);\n \n-   Exact : constant Boolean :=\n-     (Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n-       or else Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small))\n-     and then Num'Small >= 2.0**(-127)\n-     and then Num'Small <= 2.0**127;\n-   --  True if the exact algorithm implemented in Fixed_Aux can be used. The\n-   --  condition is a Small which is either an integer or the reciprocal of an\n-   --  integer with the appropriate magnitude.\n-\n-   Need_64 : constant Boolean :=\n-     Num'Object_Size > 32\n-       or else Num'Small > 2.0**31\n-       or else Num'Small < 2.0**(-31);\n-   Need_128 : constant Boolean :=\n-     Num'Object_Size > 64\n-       or else Num'Small > 2.0**63\n-       or else Num'Small < 2.0**(-63);\n-   --  Throughout this generic body, we distinguish between the cases where\n-   --  type Int32 is acceptable, where type Int64 is acceptable, and where\n-   --  type Int128 is needed. These boolean constants are used to test for\n-   --  these cases and since they are constant, only code for the relevant\n-   --  case will be really included in the instance.\n+   package Aux_Long_Long_Float is new\n+     Ada.Wide_Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Int32 is OK, where type Int64 is OK and where type Int128 is OK. These\n+   --  boolean constants are used to test for this, such that only code for the\n+   --  relevant case is included in the instance; that's why the computation of\n+   --  their value must be fully static (although it is not a static expression\n+   --  in the RM sense).\n+\n+   OK_Get_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator <= 2**27\n+            and then Num'Small_Denominator <= 2**27));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**27)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**25));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   OK_Get_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator <= 2**59\n+            and then Num'Small_Denominator <= 2**59));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**59)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**53));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   OK_Get_128 : constant Boolean :=\n+     Num'Base'Object_Size <= 128\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**127)\n+           or else\n+          (Num'Small_Numerator <= 2**123\n+            and then Num'Small_Denominator <= 2**123));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_128 : constant Boolean :=\n+     Num'Base'Object_Size <= 128\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**127)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**123)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**122));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n \n    E : constant Natural :=\n-         31 + 32 * Boolean'Pos (Need_64) + 64 * Boolean'Pos (Need_128);\n+         127 - 64 * Boolean'Pos (OK_Put_64) - 32 * Boolean'Pos (OK_Put_32);\n    --  T'Size - 1 for the selected Int{32,64,128}\n \n    F0 : constant Natural := 0;\n@@ -122,23 +185,23 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Get (File, Long_Long_Float (Item), Width);\n-      elsif Need_128 then\n+      if OK_Get_32 then\n          Item := Num'Fixed_Value\n-                   (Aux128.Get (File, Width,\n-                                Int128 (-Float'Ceiling (Num'Small)),\n-                                Int128 (-Float'Ceiling (1.0 / Num'Small))));\n-      elsif Need_64 then\n+                   (Aux32.Get (File, Width,\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Get (File, Width,\n-                               Int64 (-Float'Ceiling (Num'Small)),\n-                               Int64 (-Float'Ceiling (1.0 / Num'Small))));\n-      else\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_128 then\n          Item := Num'Fixed_Value\n-                   (Aux32.Get (File, Width,\n-                               Int32 (-Float'Ceiling (Num'Small)),\n-                               Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+                   (Aux128.Get (File, Width,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      else\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n       end if;\n \n    exception\n@@ -150,7 +213,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -167,23 +230,23 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       --  Aux.Gets will raise Data_Error in any case.\n \n    begin\n-      if not Exact then\n-         Float_Aux.Gets (S, Long_Long_Float (Item), Last);\n-      elsif Need_128 then\n+      if OK_Get_32 then\n          Item := Num'Fixed_Value\n-                   (Aux128.Gets (S, Last,\n-                                 Int128 (-Float'Ceiling (Num'Small)),\n-                                 Int128 (-Float'Ceiling (1.0 / Num'Small))));\n-      elsif Need_64 then\n+                   (Aux32.Gets (S, Last,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Gets (S, Last,\n-                                Int64 (-Float'Ceiling (Num'Small)),\n-                                Int64 (-Float'Ceiling (1.0 / Num'Small))));\n-      else\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_128 then\n          Item := Num'Fixed_Value\n-                   (Aux32.Gets (S, Last,\n-                                Int32 (-Float'Ceiling (Num'Small)),\n-                                Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+                   (Aux128.Gets (S, Last,\n+                                 -Num'Small_Numerator,\n+                                 -Num'Small_Denominator));\n+      else\n+         Aux_Long_Long_Float.Gets (S, Long_Long_Float (Item), Last);\n       end if;\n \n    exception\n@@ -202,23 +265,21 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      if not Exact then\n-         Float_Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n-      elsif Need_128 then\n-         Aux128.Put (File, Int128'Integer_Value (Item), Fore, Aft, Exp,\n-                     Int128 (-Float'Ceiling (Num'Small)),\n-                     Int128 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n+                    For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Put (File, Int64'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int64 (-Float'Ceiling (Num'Small)),\n-                    Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n                     For0, Num'Aft);\n+      elsif OK_Put_128 then\n+         Aux128.Put (File, Int128'Integer_Value (Item), Fore, Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n       else\n-         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int32 (-Float'Ceiling (Num'Small)),\n-                    Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                    For0, Num'Aft);\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n       end if;\n    end Put;\n \n@@ -229,7 +290,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n@@ -241,24 +302,22 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       S : String (To'First .. To'Last);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Puts (S, Long_Long_Float (Item), Aft, Exp);\n-      elsif Need_128 then\n-         Aux128.Puts (S, Int128'Integer_Value (Item), Aft, Exp,\n-                      Int128 (-Float'Ceiling (Num'Small)),\n-                      Int128 (-Float'Ceiling (1.0 / Num'Small)),\n-                      For0, Num'Aft);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Puts (S, Int32'Integer_Value (Item), Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Puts (S, Int64'Integer_Value (Item), Aft, Exp,\n-                     Int64 (-Float'Ceiling (Num'Small)),\n-                     Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n                      For0, Num'Aft);\n+      elsif OK_Put_128 then\n+         Aux128.Puts (S, Int128'Integer_Value (Item), Aft, Exp,\n+                      -Num'Small_Numerator, -Num'Small_Denominator,\n+                      For0, Num'Aft);\n       else\n-         Aux32.Puts (S, Int32'Integer_Value (Item), Aft, Exp,\n-                     Int32 (-Float'Ceiling (Num'Small)),\n-                     Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n+         Aux_Long_Long_Float.Puts (S, Long_Long_Float (Item), Aft, Exp);\n       end if;\n+\n       for J in S'Range loop\n          To (J) := Wide_Character'Val (Character'Pos (S (J)));\n       end loop;"}, {"sha": "7db1b7867b6f759d2c1bc0c526c418f8988216cb", "filename": "gcc/ada/libgnat/a-wtflau.adb", "status": "modified", "additions": 15, "deletions": 116, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtflau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtflau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtflau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -31,8 +31,7 @@\n \n with Ada.Wide_Text_IO.Generic_Aux; use Ada.Wide_Text_IO.Generic_Aux;\n \n-with System.Img_Real;  use System.Img_Real;\n-with System.Val_Real;  use System.Val_Real;\n+with System.Img_Real; use System.Img_Real;\n \n package body Ada.Wide_Text_IO.Float_Aux is\n \n@@ -42,23 +41,23 @@ package body Ada.Wide_Text_IO.Float_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Long_Long_Float;\n+      Item  : out Num;\n       Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Stop : Integer := 0;\n-      Ptr  : aliased Integer := 1;\n+      Ptr  : aliased Integer;\n \n    begin\n       if Width /= 0 then\n          Load_Width (File, Width, Buf, Stop);\n          String_Skip (Buf, Ptr);\n       else\n          Load_Real (File, Buf, Stop);\n+         Ptr := 1;\n       end if;\n \n-      Item := Scan_Real (Buf, Ptr'Access, Stop);\n-\n+      Item := Scan (Buf, Ptr'Access, Stop);\n       Check_End_Of_Field (Buf, Stop, Ptr, Width);\n    end Get;\n \n@@ -68,137 +67,36 @@ package body Ada.Wide_Text_IO.Float_Aux is\n \n    procedure Gets\n      (From : String;\n-      Item : out Long_Long_Float;\n+      Item : out Num;\n       Last : out Positive)\n    is\n       Pos : aliased Integer;\n \n    begin\n       String_Skip (From, Pos);\n-      Item := Scan_Real (From, Pos'Access, From'Last);\n+      Item := Scan (From, Pos'Access, From'Last);\n       Last := Pos - 1;\n \n    exception\n-      when Constraint_Error =>\n-         raise Data_Error;\n+      when Constraint_Error => raise Data_Error;\n    end Gets;\n \n-   ---------------\n-   -- Load_Real --\n-   ---------------\n-\n-   procedure Load_Real\n-     (File : File_Type;\n-      Buf  : out String;\n-      Ptr  : in out Natural)\n-   is\n-      Loaded   : Boolean;\n-\n-   begin\n-      --  Skip initial blanks and load possible sign\n-\n-      Load_Skip (File);\n-      Load (File, Buf, Ptr, '+', '-');\n-\n-      --  Case of .nnnn\n-\n-      Load (File, Buf, Ptr, '.', Loaded);\n-\n-      if Loaded then\n-         Load_Digits (File, Buf, Ptr, Loaded);\n-\n-         --  Hopeless junk if no digits loaded\n-\n-         if not Loaded then\n-            return;\n-         end if;\n-\n-      --  Otherwise must have digits to start\n-\n-      else\n-         Load_Digits (File, Buf, Ptr, Loaded);\n-\n-         --  Hopeless junk if no digits loaded\n-\n-         if not Loaded then\n-            return;\n-         end if;\n-\n-         --  Deal with based case. We recognize either the standard '#' or the\n-         --  allowed alternative replacement ':' (see RM J.2(3)).\n-\n-         Load (File, Buf, Ptr, '#', ':', Loaded);\n-\n-         if Loaded then\n-\n-            --  Case of nnn#.xxx#\n-\n-            Load (File, Buf, Ptr, '.', Loaded);\n-\n-            if Loaded then\n-               Load_Extended_Digits (File, Buf, Ptr);\n-               Load (File, Buf, Ptr, '#', ':');\n-\n-            --  Case of nnn#xxx.[xxx]# or nnn#xxx#\n-\n-            else\n-               Load_Extended_Digits (File, Buf, Ptr);\n-               Load (File, Buf, Ptr, '.', Loaded);\n-\n-               if Loaded then\n-                  Load_Extended_Digits (File, Buf, Ptr);\n-               end if;\n-\n-               --  As usual, it seems strange to allow mixed base characters,\n-               --  but that is what ACVC tests expect, see CE3804M, case (3).\n-\n-               Load (File, Buf, Ptr, '#', ':');\n-            end if;\n-\n-         --  Case of nnn.[nnn] or nnn\n-\n-         else\n-            --  Prevent the potential processing of '.' in cases where the\n-            --  initial digits have a trailing underscore.\n-\n-            if Buf (Ptr) = '_' then\n-               return;\n-            end if;\n-\n-            Load (File, Buf, Ptr, '.', Loaded);\n-\n-            if Loaded then\n-               Load_Digits (File, Buf, Ptr);\n-            end if;\n-         end if;\n-      end if;\n-\n-      --  Deal with exponent\n-\n-      Load (File, Buf, Ptr, 'E', 'e', Loaded);\n-\n-      if Loaded then\n-         Load (File, Buf, Ptr, '+', '-');\n-         Load_Digits (File, Buf, Ptr);\n-      end if;\n-   end Load_Real;\n-\n    ---------\n    -- Put --\n    ---------\n \n    procedure Put\n      (File : File_Type;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Fore : Field;\n       Aft  : Field;\n       Exp  : Field)\n    is\n-      Buf : String (1 .. Field'Last);\n+      Buf : String (1 .. Max_Real_Image_Length);\n       Ptr : Natural := 0;\n \n    begin\n-      Set_Image_Real (Item, Buf, Ptr, Fore, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (Item), Buf, Ptr, Fore, Aft, Exp);\n       Put_Item (File, Buf (1 .. Ptr));\n    end Put;\n \n@@ -208,15 +106,16 @@ package body Ada.Wide_Text_IO.Float_Aux is\n \n    procedure Puts\n      (To   : out String;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Aft  : Field;\n       Exp  : Field)\n    is\n-      Buf : String (1 .. Field'Last);\n+      Buf : String (1 .. Max_Real_Image_Length);\n       Ptr : Natural := 0;\n \n    begin\n-      Set_Image_Real (Item, Buf, Ptr, Fore => 1, Aft => Aft, Exp => Exp);\n+      Set_Image_Real\n+        (Long_Long_Float (Item), Buf, Ptr, Fore => 1, Aft => Aft, Exp => Exp);\n \n       if Ptr > To'Length then\n          raise Layout_Error;"}, {"sha": "82ace794bc4aa6c3726d61bbb605b3277ed45a3e", "filename": "gcc/ada/libgnat/a-wtflau.ads", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtflau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtflau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtflau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -31,41 +31,42 @@\n \n --  This package contains the routines for Ada.Wide_Text_IO.Float_IO that\n --  are shared among separate instantiations of this package. The routines\n---  in this package are identical semantically to those in Float_IO itself,\n---  except that generic parameter Num has been replaced by Long_Long_Float,\n---  and the default parameters have been removed because they are supplied\n+--  in this package are identical semantically to those in Float_IO, except\n+--  that the default parameters have been removed because they are supplied\n --  explicitly by the calls from within the generic template. This package\n---  is also used by Ada.Wide_Text_IO.Fixed_IO, Ada.Wide_Text_IO.Decimal_IO.\n+--  is also used by Ada.Wide_Text_IO.Fixed_IO and Ada.Wide_Text_IO.Decimal_IO.\n \n-private package Ada.Wide_Text_IO.Float_Aux is\n+private generic\n \n-   procedure Load_Real\n-     (File : File_Type;\n-      Buf  : out String;\n-      Ptr  : in out Natural);\n-   --  This is an auxiliary routine that is used to load a possibly signed\n-   --  real literal value from the input file into Buf, starting at Ptr + 1.\n+   type Num is digits <>;\n+\n+   with function Scan\n+     (Str : String;\n+      Ptr : not null access Integer;\n+      Max : Integer) return Num;\n+\n+package Ada.Wide_Text_IO.Float_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Long_Long_Float;\n+      Item  : out Num;\n       Width : Field);\n \n-   procedure Gets\n-     (From : String;\n-      Item : out Long_Long_Float;\n-      Last : out Positive);\n-\n    procedure Put\n      (File : File_Type;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Fore : Field;\n       Aft  : Field;\n       Exp  : Field);\n \n+   procedure Gets\n+     (From : String;\n+      Item : out Num;\n+      Last : out Positive);\n+\n    procedure Puts\n      (To   : out String;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Aft  : Field;\n       Exp  : Field);\n "}, {"sha": "369178633f12cb1c73cdb4d732601a49d2286e8d", "filename": "gcc/ada/libgnat/a-wtflio.adb", "status": "modified", "additions": 75, "deletions": 10, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtflio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,13 +30,31 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Text_IO.Float_Aux;\n-\n-with System.WCh_Con; use System.WCh_Con;\n-with System.WCh_WtS; use System.WCh_WtS;\n+with System.Val_Flt;  use System.Val_Flt;\n+with System.Val_LFlt; use System.Val_LFlt;\n+with System.Val_LLF;  use System.Val_LLF;\n+with System.WCh_Con;  use System.WCh_Con;\n+with System.WCh_WtS;  use System.WCh_WtS;\n \n package body Ada.Wide_Text_IO.Float_IO is\n \n-   package Aux renames Ada.Wide_Text_IO.Float_Aux;\n+   package Aux_Float is new\n+      Ada.Wide_Text_IO.Float_Aux (Float, Scan_Float);\n+\n+   package Aux_Long_Float is new\n+      Ada.Wide_Text_IO.Float_Aux (Long_Float, Scan_Long_Float);\n+\n+   package Aux_Long_Long_Float is new\n+      Ada.Wide_Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Float is OK, where type Long_Float is OK and where type Long_Long_Float\n+   --  is needed. These boolean constants are used to test for this, such that\n+   --  only code for the relevant case is included in the instance.\n+\n+   OK_Float : constant Boolean := Num'Base'Digits <= Float'Digits;\n+\n+   OK_Long_Float : constant Boolean := Num'Base'Digits <= Long_Float'Digits;\n \n    ---------\n    -- Get --\n@@ -47,8 +65,25 @@ package body Ada.Wide_Text_IO.Float_IO is\n       Item  : out Num;\n       Width : Field := 0)\n    is\n+      pragma Unsuppress (Range_Check);\n+\n    begin\n-      Aux.Get (File, Long_Long_Float (Item), Width);\n+      if OK_Float then\n+         Aux_Float.Get (File, Float (Item), Width);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Get (File, Long_Float (Item), Width);\n+      else\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n+      end if;\n+\n+      --  In the case where the type is unconstrained (e.g. Standard'Float),\n+      --  the above conversion may result in an infinite value, which is\n+      --  normally fine for a conversion, but in this case, we want to treat\n+      --  that as a data error.\n+\n+      if not Item'Valid then\n+         raise Data_Error;\n+      end if;\n \n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -59,22 +94,39 @@ package body Ada.Wide_Text_IO.Float_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n      (From : Wide_String;\n       Item : out Num;\n       Last : out Positive)\n    is\n+      pragma Unsuppress (Range_Check);\n+\n       S : constant String := Wide_String_To_String (From, WCEM_Upper);\n       --  String on which we do the actual conversion. Note that the method\n       --  used for wide character encoding is irrelevant, since if there is\n       --  a character outside the Standard.Character range then the call to\n       --  Aux.Gets will raise Data_Error in any case.\n \n    begin\n-      Aux.Gets (S, Long_Long_Float (Item), Last);\n+      if OK_Float then\n+         Aux_Float.Gets (S, Float (Item), Last);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Gets (S, Long_Float (Item), Last);\n+      else\n+         Aux_Long_Long_Float.Gets (S, Long_Long_Float (Item), Last);\n+      end if;\n+\n+      --  In the case where the type is unconstrained (e.g. Standard'Float),\n+      --  the above conversion may result in an infinite value, which is\n+      --  normally fine for a conversion, but in this case, we want to treat\n+      --  that as a data error.\n+\n+      if not Item'Valid then\n+         raise Data_Error;\n+      end if;\n \n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -92,7 +144,14 @@ package body Ada.Wide_Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Put (File, Float (Item), Fore, Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Put (File, Long_Float (Item), Fore, Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n+      end if;\n    end Put;\n \n    procedure Put\n@@ -102,7 +161,7 @@ package body Ada.Wide_Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n@@ -114,7 +173,13 @@ package body Ada.Wide_Text_IO.Float_IO is\n       S : String (To'First .. To'Last);\n \n    begin\n-      Aux.Puts (S, Long_Long_Float (Item), Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Puts (S, Float (Item), Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Puts (S, Long_Float (Item), Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Puts (S, Long_Long_Float (Item), Aft, Exp);\n+      end if;\n \n       for J in S'Range loop\n          To (J) := Wide_Character'Val (Character'Pos (S (J)));"}, {"sha": "bc9b459a9f7b60d6a80f6c99b674b1c041a69d0a", "filename": "gcc/ada/libgnat/a-wtgeau.adb", "status": "modified", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtgeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtgeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtgeau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -402,6 +402,106 @@ package body Ada.Wide_Text_IO.Generic_Aux is\n       end if;\n    end Load_Integer;\n \n+   ---------------\n+   -- Load_Real --\n+   ---------------\n+\n+   procedure Load_Real\n+     (File : File_Type;\n+      Buf  : out String;\n+      Ptr  : in out Natural)\n+   is\n+      Loaded   : Boolean;\n+\n+   begin\n+      --  Skip initial blanks and load possible sign\n+\n+      Load_Skip (File);\n+      Load (File, Buf, Ptr, '+', '-');\n+\n+      --  Case of .nnnn\n+\n+      Load (File, Buf, Ptr, '.', Loaded);\n+\n+      if Loaded then\n+         Load_Digits (File, Buf, Ptr, Loaded);\n+\n+         --  Hopeless junk if no digits loaded\n+\n+         if not Loaded then\n+            return;\n+         end if;\n+\n+      --  Otherwise must have digits to start\n+\n+      else\n+         Load_Digits (File, Buf, Ptr, Loaded);\n+\n+         --  Hopeless junk if no digits loaded\n+\n+         if not Loaded then\n+            return;\n+         end if;\n+\n+         --  Deal with based case. We recognize either the standard '#' or the\n+         --  allowed alternative replacement ':' (see RM J.2(3)).\n+\n+         Load (File, Buf, Ptr, '#', ':', Loaded);\n+\n+         if Loaded then\n+\n+            --  Case of nnn#.xxx#\n+\n+            Load (File, Buf, Ptr, '.', Loaded);\n+\n+            if Loaded then\n+               Load_Extended_Digits (File, Buf, Ptr);\n+               Load (File, Buf, Ptr, '#', ':');\n+\n+            --  Case of nnn#xxx.[xxx]# or nnn#xxx#\n+\n+            else\n+               Load_Extended_Digits (File, Buf, Ptr);\n+               Load (File, Buf, Ptr, '.', Loaded);\n+\n+               if Loaded then\n+                  Load_Extended_Digits (File, Buf, Ptr);\n+               end if;\n+\n+               --  As usual, it seems strange to allow mixed base characters,\n+               --  but that is what ACVC tests expect, see CE3804M, case (3).\n+\n+               Load (File, Buf, Ptr, '#', ':');\n+            end if;\n+\n+         --  Case of nnn.[nnn] or nnn\n+\n+         else\n+            --  Prevent the potential processing of '.' in cases where the\n+            --  initial digits have a trailing underscore.\n+\n+            if Buf (Ptr) = '_' then\n+               return;\n+            end if;\n+\n+            Load (File, Buf, Ptr, '.', Loaded);\n+\n+            if Loaded then\n+               Load_Digits (File, Buf, Ptr);\n+            end if;\n+         end if;\n+      end if;\n+\n+      --  Deal with exponent\n+\n+      Load (File, Buf, Ptr, 'E', 'e', Loaded);\n+\n+      if Loaded then\n+         Load (File, Buf, Ptr, '+', '-');\n+         Load_Digits (File, Buf, Ptr);\n+      end if;\n+   end Load_Real;\n+\n    ---------------\n    -- Load_Skip --\n    ---------------"}, {"sha": "7c899717c2db402a5a0b341e62d22274f2b9218e", "filename": "gcc/ada/libgnat/a-wtgeau.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtgeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtgeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtgeau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -155,6 +155,12 @@ package Ada.Wide_Text_IO.Generic_Aux is\n       Ptr  : in out Natural);\n    --  Loads a possibly signed integer literal value\n \n+   procedure Load_Real\n+     (File : File_Type;\n+      Buf  : out String;\n+      Ptr  : in out Natural);\n+   --  Loads a possibly signed real literal value\n+\n    procedure Put_Item (File : File_Type; Str : String);\n    --  This routine is like Wide_Text_IO.Put, except that it checks for\n    --  overflow of bounded lines, as described in (RM A.10.6(8)). It is used"}, {"sha": "b322433090917ff6779a045165cc3f328a434fe7", "filename": "gcc/ada/libgnat/a-wtinio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtinio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtinio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtinio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -95,7 +95,7 @@ package body Ada.Wide_Text_IO.Integer_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -149,7 +149,7 @@ package body Ada.Wide_Text_IO.Integer_IO is\n       Base  : Number_Base := Default_Base)\n    is\n    begin\n-      Put (Current_Output, Item, Width, Base);\n+      Put (Current_Out, Item, Width, Base);\n    end Put;\n \n    procedure Put"}, {"sha": "0eea7b52c816d403f0137b602fcd898f9386fdcd", "filename": "gcc/ada/libgnat/a-wtinio__128.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtinio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtinio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtinio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -111,7 +111,7 @@ package body Ada.Wide_Text_IO.Integer_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -169,7 +169,7 @@ package body Ada.Wide_Text_IO.Integer_IO is\n       Base  : Number_Base := Default_Base)\n    is\n    begin\n-      Put (Current_Output, Item, Width, Base);\n+      Put (Current_Out, Item, Width, Base);\n    end Put;\n \n    procedure Put"}, {"sha": "efab035f69656ce7562b92db0ba80ddb8215b795", "filename": "gcc/ada/libgnat/a-wtmoio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtmoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtmoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtmoio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -94,7 +94,7 @@ package body Ada.Wide_Text_IO.Modular_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -147,7 +147,7 @@ package body Ada.Wide_Text_IO.Modular_IO is\n       Base  : Number_Base := Default_Base)\n    is\n    begin\n-      Put (Current_Output, Item, Width, Base);\n+      Put (Current_Out, Item, Width, Base);\n    end Put;\n \n    procedure Put"}, {"sha": "a32eaf25224b7b81a4611911f14486a7b34c7f21", "filename": "gcc/ada/libgnat/a-wtmoio__128.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtmoio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-wtmoio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtmoio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -110,7 +110,7 @@ package body Ada.Wide_Text_IO.Modular_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -167,7 +167,7 @@ package body Ada.Wide_Text_IO.Modular_IO is\n       Base  : Number_Base := Default_Base)\n    is\n    begin\n-      Put (Current_Output, Item, Width, Base);\n+      Put (Current_Out, Item, Width, Base);\n    end Put;\n \n    procedure Put"}, {"sha": "bb3368095427724dc2094e7f372cbf56b62b0173", "filename": "gcc/ada/libgnat/a-ztcoau.adb", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztcoau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztcoau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztcoau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,22 +30,19 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Wide_Text_IO.Generic_Aux; use Ada.Wide_Wide_Text_IO.Generic_Aux;\n-with Ada.Wide_Wide_Text_IO.Float_Aux;\n \n with System.Img_Real; use System.Img_Real;\n \n package body Ada.Wide_Wide_Text_IO.Complex_Aux is\n \n-   package Aux renames Ada.Wide_Wide_Text_IO.Float_Aux;\n-\n    ---------\n    -- Get --\n    ---------\n \n    procedure Get\n      (File  : File_Type;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Width : Field)\n    is\n       Buf   : String (1 .. Field'Last);\n@@ -95,8 +92,8 @@ package body Ada.Wide_Wide_Text_IO.Complex_Aux is\n \n    procedure Gets\n      (From  : String;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Last  : out Positive)\n    is\n       Paren : Boolean;\n@@ -139,8 +136,8 @@ package body Ada.Wide_Wide_Text_IO.Complex_Aux is\n \n    procedure Put\n      (File  : File_Type;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Fore  : Field;\n       Aft   : Field;\n       Exp   : Field)\n@@ -159,8 +156,8 @@ package body Ada.Wide_Wide_Text_IO.Complex_Aux is\n \n    procedure Puts\n      (To    : out String;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Aft   :  Field;\n       Exp   :  Field)\n    is\n@@ -174,9 +171,9 @@ package body Ada.Wide_Wide_Text_IO.Complex_Aux is\n       --  Both parts are initially converted with a Fore of 0\n \n       Rptr := 0;\n-      Set_Image_Real (ItemR, R_String, Rptr, 0, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (ItemR), R_String, Rptr, 0, Aft, Exp);\n       Iptr := 0;\n-      Set_Image_Real (ItemI, I_String, Iptr, 0, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (ItemI), I_String, Iptr, 0, Aft, Exp);\n \n       --  Check room for both parts plus parens plus comma (RM G.1.3(34))\n "}, {"sha": "43546d804dfcfcaff96cc2648bf392798daf97e3", "filename": "gcc/ada/libgnat/a-ztcoau.ads", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztcoau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztcoau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztcoau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -15,38 +15,45 @@\n \n --  This package contains the routines for Ada.Wide_Wide_Text_IO.Complex_IO\n --  that are shared among separate instantiations of this package. The routines\n---  in this package are identical semantically to those in Complex_IO itself,\n---  except that the generic parameter Complex has been replaced by separate\n---  real and imaginary values of type Long_Long_Float, and default parameters\n---  have been removed because they are supplied explicitly by the calls from\n---  within the generic template.\n+--  in this package are identical semantically to those in Complex_IO, except\n+--  that the generic parameter Complex has been replaced by separate real and\n+--  imaginary parameters, and default parameters have been removed because they\n+--  are supplied explicitly by the calls from within the generic template.\n+\n+with Ada.Wide_Wide_Text_IO.Float_Aux;\n+\n+private generic\n+\n+   type Num is digits <>;\n+\n+   with package Aux is new Ada.Wide_Wide_Text_IO.Float_Aux (Num, <>);\n \n package Ada.Wide_Wide_Text_IO.Complex_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n+      ItemR : out Num;\n+      ItemI : out Num;\n       Width : Field);\n \n-   procedure Gets\n-     (From  : String;\n-      ItemR : out Long_Long_Float;\n-      ItemI : out Long_Long_Float;\n-      Last  : out Positive);\n-\n    procedure Put\n      (File  : File_Type;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Fore  : Field;\n       Aft   : Field;\n       Exp   : Field);\n \n+   procedure Gets\n+     (From  : String;\n+      ItemR : out Num;\n+      ItemI : out Num;\n+      Last  : out Positive);\n+\n    procedure Puts\n      (To    : out String;\n-      ItemR : Long_Long_Float;\n-      ItemI : Long_Long_Float;\n+      ItemR : Num;\n+      ItemI : Num;\n       Aft   : Field;\n       Exp   : Field);\n "}, {"sha": "51031912604c04e6535acb606e20f99215bb1d5e", "filename": "gcc/ada/libgnat/a-ztcoio.adb", "status": "modified", "additions": 79, "deletions": 17, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztcoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztcoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztcoio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,24 +30,46 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Wide_Text_IO.Complex_Aux;\n-\n-with System.WCh_Con; use System.WCh_Con;\n-with System.WCh_WtS; use System.WCh_WtS;\n+with Ada.Wide_Wide_Text_IO.Float_Aux;\n+with System.Val_Flt;  use System.Val_Flt;\n+with System.Val_LFlt; use System.Val_LFlt;\n+with System.Val_LLF;  use System.Val_LLF;\n+with System.WCh_Con;  use System.WCh_Con;\n+with System.WCh_WtS;  use System.WCh_WtS;\n \n with Ada.Unchecked_Conversion;\n \n package body Ada.Wide_Wide_Text_IO.Complex_IO is\n \n-   package Aux renames Ada.Wide_Wide_Text_IO.Complex_Aux;\n+   use Complex_Types;\n+\n+   package Scalar_Float is new\n+      Ada.Wide_Wide_Text_IO.Float_Aux (Float, Scan_Float);\n+\n+   package Scalar_Long_Float is new\n+      Ada.Wide_Wide_Text_IO.Float_Aux (Long_Float, Scan_Long_Float);\n+\n+   package Scalar_Long_Long_Float is new\n+      Ada.Wide_Wide_Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   package Aux_Float is new\n+      Ada.Wide_Wide_Text_IO.Complex_Aux (Float, Scalar_Float);\n \n-   subtype LLF is Long_Long_Float;\n-   --  Type used for calls to routines in Aux\n+   package Aux_Long_Float is new\n+      Ada.Wide_Wide_Text_IO.Complex_Aux (Long_Float, Scalar_Long_Float);\n \n-   function TFT is new\n-     Ada.Unchecked_Conversion (File_Type, Ada.Wide_Wide_Text_IO.File_Type);\n-   --  This unchecked conversion is to get around a visibility bug in\n-   --  GNAT version 2.04w. It should be possible to simply use the\n-   --  subtype declared above and do normal checked conversions.\n+   package Aux_Long_Long_Float is new\n+      Ada.Wide_Wide_Text_IO.Complex_Aux\n+        (Long_Long_Float, Scalar_Long_Long_Float);\n+\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Float is OK, where type Long_Float is OK and where type Long_Long_Float\n+   --  is needed. These boolean constants are used to test for this, such that\n+   --  only code for the relevant case is included in the instance.\n+\n+   OK_Float : constant Boolean := Real'Base'Digits <= Float'Digits;\n+\n+   OK_Long_Float : constant Boolean := Real'Base'Digits <= Long_Float'Digits;\n \n    ---------\n    -- Get --\n@@ -62,7 +84,17 @@ package body Ada.Wide_Wide_Text_IO.Complex_IO is\n       Imag_Item : Real'Base;\n \n    begin\n-      Aux.Get (TFT (File), LLF (Real_Item), LLF (Imag_Item), Width);\n+      if OK_Float then\n+         Aux_Float.Get (File, Float (Real_Item), Float (Imag_Item), Width);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Get\n+           (File, Long_Float (Real_Item), Long_Float (Imag_Item), Width);\n+      else\n+         Aux_Long_Long_Float.Get\n+           (File, Long_Long_Float (Real_Item), Long_Long_Float (Imag_Item),\n+            Width);\n+      end if;\n+\n       Item := (Real_Item, Imag_Item);\n \n    exception\n@@ -78,7 +110,7 @@ package body Ada.Wide_Wide_Text_IO.Complex_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    ---------\n@@ -100,7 +132,17 @@ package body Ada.Wide_Wide_Text_IO.Complex_IO is\n       --  Aux.Gets will raise Data_Error in any case.\n \n    begin\n-      Aux.Gets (S, LLF (Real_Item), LLF (Imag_Item), Last);\n+      if OK_Float then\n+         Aux_Float.Gets (S, Float (Real_Item), Float (Imag_Item), Last);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Gets\n+           (S, Long_Float (Real_Item), Long_Float (Imag_Item), Last);\n+      else\n+         Aux_Long_Long_Float.Gets\n+           (S, Long_Long_Float (Real_Item), Long_Long_Float (Imag_Item),\n+            Last);\n+      end if;\n+\n       Item := (Real_Item, Imag_Item);\n \n    exception\n@@ -119,7 +161,18 @@ package body Ada.Wide_Wide_Text_IO.Complex_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (TFT (File), LLF (Re (Item)), LLF (Im (Item)), Fore, Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Put\n+           (File, Float (Re (Item)), Float (Im (Item)), Fore, Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Put\n+           (File, Long_Float (Re (Item)), Long_Float (Im (Item)), Fore, Aft,\n+            Exp);\n+      else\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Re (Item)), Long_Long_Float (Im (Item)),\n+            Fore, Aft, Exp);\n+      end if;\n    end Put;\n \n    ---------\n@@ -133,7 +186,7 @@ package body Ada.Wide_Wide_Text_IO.Complex_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    ---------\n@@ -149,7 +202,16 @@ package body Ada.Wide_Wide_Text_IO.Complex_IO is\n       S : String (To'First .. To'Last);\n \n    begin\n-      Aux.Puts (S, LLF (Re (Item)), LLF (Im (Item)), Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Puts (S, Float (Re (Item)), Float (Im (Item)), Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Puts\n+           (S, Long_Float (Re (Item)), Long_Float (Im (Item)), Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Puts\n+           (S, Long_Long_Float (Re (Item)), Long_Long_Float (Im (Item)),\n+            Aft, Exp);\n+      end if;\n \n       for J in S'Range loop\n          To (J) := Wide_Wide_Character'Val (Character'Pos (S (J)));"}, {"sha": "2a08153a36d28420fdabd5bf71f0711ca2a57732", "filename": "gcc/ada/libgnat/a-ztcoio.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztcoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztcoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztcoio.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -23,39 +23,39 @@ package Ada.Wide_Wide_Text_IO.Complex_IO is\n    use Complex_Types;\n \n    Default_Fore : Field := 2;\n-   Default_Aft  : Field := Real'Digits - 1;\n+   Default_Aft  : Field := Complex_Types.Real'Digits - 1;\n    Default_Exp  : Field := 3;\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Complex;\n+      Item  : out Complex_Types.Complex;\n       Width : Field := 0);\n \n    procedure Get\n-     (Item  : out Complex;\n+     (Item  : out Complex_Types.Complex;\n       Width : Field := 0);\n \n    procedure Put\n      (File : File_Type;\n-      Item : Complex;\n+      Item : Complex_Types.Complex;\n       Fore : Field := Default_Fore;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp);\n \n    procedure Put\n-     (Item : Complex;\n+     (Item : Complex_Types.Complex;\n       Fore : Field := Default_Fore;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp);\n \n    procedure Get\n      (From : Wide_Wide_String;\n-      Item : out Complex;\n+      Item : out Complex_Types.Complex;\n       Last : out Positive);\n \n    procedure Put\n      (To   : out Wide_Wide_String;\n-      Item : Complex;\n+      Item : Complex_Types.Complex;\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp);\n "}, {"sha": "ec6431bee9973740e92b9dcea9c79ccebcf9979d", "filename": "gcc/ada/libgnat/a-ztdeau.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztdeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztdeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztdeau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,7 +30,6 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Wide_Text_IO.Generic_Aux; use Ada.Wide_Wide_Text_IO.Generic_Aux;\n-with Ada.Wide_Wide_Text_IO.Float_Aux;   use Ada.Wide_Wide_Text_IO.Float_Aux;\n \n package body Ada.Wide_Wide_Text_IO.Decimal_Aux is\n "}, {"sha": "1d9f5d8343706f2d68aaaa2fa4e6ae25955f4223", "filename": "gcc/ada/libgnat/a-ztdeio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztdeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztdeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztdeio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -89,7 +89,7 @@ package body Ada.Wide_Wide_Text_IO.Decimal_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -144,7 +144,7 @@ package body Ada.Wide_Wide_Text_IO.Decimal_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put"}, {"sha": "156a66d752cf8c2d269740b62391e2bad4180681", "filename": "gcc/ada/libgnat/a-ztdeio__128.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztdeio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztdeio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztdeio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -102,7 +102,7 @@ package body Ada.Wide_Wide_Text_IO.Decimal_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -162,7 +162,7 @@ package body Ada.Wide_Wide_Text_IO.Decimal_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put"}, {"sha": "6c35b9fc72f79317c2c85786634689f5075d2d85", "filename": "gcc/ada/libgnat/a-ztenio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztenio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztenio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztenio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -51,7 +51,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_IO is\n \n    procedure Get (Item : out Enum) is\n    begin\n-      Get (Current_Input, Item);\n+      Get (Current_In, Item);\n    end Get;\n \n    procedure Get\n@@ -88,7 +88,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_IO is\n       Set   : Type_Set := Default_Setting)\n    is\n    begin\n-      Put (Current_Output, Item, Width, Set);\n+      Put (Current_Out, Item, Width, Set);\n    end Put;\n \n    procedure Put"}, {"sha": "1e94fef0231b6c3e0718fa4ab045434bb78d48ac", "filename": "gcc/ada/libgnat/a-ztfiau.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztfiau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztfiau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztfiau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,7 +30,6 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Wide_Text_IO.Generic_Aux; use Ada.Wide_Wide_Text_IO.Generic_Aux;\n-with Ada.Wide_Wide_Text_IO.Float_Aux;   use Ada.Wide_Wide_Text_IO.Float_Aux;\n \n package body Ada.Wide_Wide_Text_IO.Fixed_Aux is\n "}, {"sha": "53ed45b8ee3a26ee4b145c54d80ecb82b0056e19", "filename": "gcc/ada/libgnat/a-ztfiio.adb", "status": "modified", "additions": 99, "deletions": 60, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -36,44 +36,86 @@ with System.Img_Fixed_32; use System.Img_Fixed_32;\n with System.Img_Fixed_64; use System.Img_Fixed_64;\n with System.Val_Fixed_32; use System.Val_Fixed_32;\n with System.Val_Fixed_64; use System.Val_Fixed_64;\n+with System.Val_LLF;      use System.Val_LLF;\n with System.WCh_Con;      use System.WCh_Con;\n with System.WCh_WtS;      use System.WCh_WtS;\n \n package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n \n    --  Note: we still use the floating-point I/O routines for types whose small\n-   --  is not a sufficiently small integer or the reciprocal thereof. This will\n-   --  result in inaccuracies for fixed point types that require more precision\n-   --  than is available in Long_Long_Float.\n+   --  is not the ratio of two sufficiently small integers. This will result in\n+   --  inaccuracies for fixed point types that require more precision than is\n+   --  available in Long_Long_Float.\n \n-   subtype Int32 is Interfaces.Integer_32;\n-   subtype Int64 is Interfaces.Integer_64;\n+   subtype Int32 is Interfaces.Integer_32; use type Int32;\n+   subtype Int64 is Interfaces.Integer_64; use type Int64;\n \n    package Aux32 is new\n      Ada.Wide_Wide_Text_IO.Fixed_Aux (Int32, Scan_Fixed32, Set_Image_Fixed32);\n \n    package Aux64 is new\n      Ada.Wide_Wide_Text_IO.Fixed_Aux (Int64, Scan_Fixed64, Set_Image_Fixed64);\n \n-   Exact : constant Boolean :=\n-     (Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n-       or else Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small))\n-     and then Num'Small >= 2.0**(-63)\n-     and then Num'Small <= 2.0**63;\n-   --  True if the exact algorithm implemented in Fixed_Aux can be used. The\n-   --  condition is a Small which is either an integer or the reciprocal of an\n-   --  integer with the appropriate magnitude.\n-\n-   Need_64 : constant Boolean :=\n-     Num'Object_Size > 32\n-       or else Num'Small > 2.0**31\n-       or else Num'Small < 2.0**(-31);\n+   package Aux_Long_Long_Float is new\n+     Ada.Wide_Wide_Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n    --  Throughout this generic body, we distinguish between the case where type\n-   --  Int32 is acceptable and where type Int64 is needed. This Boolean is used\n-   --  to test for these cases and since it is a constant, only code for the\n-   --  relevant case will be included in the instance.\n+   --  Int32 is OK and where type Int64 is OK. These boolean constants are used\n+   --  to test for this, such that only code for the relevant case is included\n+   --  in the instance; that's why the computation of their value must be fully\n+   --  static (although it is not a static expressions in the RM sense).\n+\n+   OK_Get_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator <= 2**27\n+            and then Num'Small_Denominator <= 2**27));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**27)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**25));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n \n-   E : constant Natural := 31 + 32 * Boolean'Pos (Need_64);\n+   OK_Get_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator <= 2**59\n+            and then Num'Small_Denominator <= 2**59));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**59)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**53));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   E : constant Natural := 63 - 32 * Boolean'Pos (OK_Put_32);\n    --  T'Size - 1 for the selected Int{32,64}\n \n    F0 : constant Natural := 0;\n@@ -108,18 +150,18 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Get (File, Long_Long_Float (Item), Width);\n-      elsif Need_64 then\n+      if OK_Get_32 then\n+         Item := Num'Fixed_Value\n+                   (Aux32.Get (File, Width,\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Get (File, Width,\n-                               Int64 (-Float'Ceiling (Num'Small)),\n-                               Int64 (-Float'Ceiling (1.0 / Num'Small))));\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n       else\n-         Item := Num'Fixed_Value\n-                   (Aux32.Get (File, Width,\n-                               Int32 (-Float'Ceiling (Num'Small)),\n-                               Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n       end if;\n \n    exception\n@@ -131,7 +173,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -148,18 +190,18 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       --  Aux.Gets will raise Data_Error in any case.\n \n    begin\n-      if not Exact then\n-         Float_Aux.Gets (S, Long_Long_Float (Item), Last);\n-      elsif Need_64 then\n+      if OK_Get_32 then\n+         Item := Num'Fixed_Value\n+                   (Aux32.Gets (S, Last,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Gets (S, Last,\n-                                Int64 (-Float'Ceiling (Num'Small)),\n-                                Int64 (-Float'Ceiling (1.0 / Num'Small))));\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n       else\n-         Item := Num'Fixed_Value\n-                   (Aux32.Gets (S, Last,\n-                                Int32 (-Float'Ceiling (Num'Small)),\n-                                Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+         Aux_Long_Long_Float.Gets (S, Long_Long_Float (Item), Last);\n       end if;\n \n    exception\n@@ -178,18 +220,17 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      if not Exact then\n-         Float_Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n+                    For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Put (File, Int64'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int64 (-Float'Ceiling (Num'Small)),\n-                    Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n                     For0, Num'Aft);\n       else\n-         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int32 (-Float'Ceiling (Num'Small)),\n-                    Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                    For0, Num'Aft);\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n       end if;\n    end Put;\n \n@@ -200,7 +241,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n@@ -212,18 +253,16 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       S : String (To'First .. To'Last);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Puts (S, Long_Long_Float (Item), Aft, Exp);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Puts (S, Int32'Integer_Value (Item), Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Puts (S, Int64'Integer_Value (Item), Aft, Exp,\n-                     Int64 (-Float'Ceiling (Num'Small)),\n-                     Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n                      For0, Num'Aft);\n       else\n-         Aux32.Puts (S, Int32'Integer_Value (Item), Aft, Exp,\n-                     Int32 (-Float'Ceiling (Num'Small)),\n-                     Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n+         Aux_Long_Long_Float.Puts (S, Long_Long_Float (Item), Aft, Exp);\n       end if;\n \n       for J in S'Range loop"}, {"sha": "13ed410354fd250bdcd5694eaaf9be0065fa5c67", "filename": "gcc/ada/libgnat/a-ztfiio__128.adb", "status": "modified", "additions": 143, "deletions": 85, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztfiio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztfiio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztfiio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -38,19 +38,20 @@ with System.Img_Fixed_128; use System.Img_Fixed_128;\n with System.Val_Fixed_32;  use System.Val_Fixed_32;\n with System.Val_Fixed_64;  use System.Val_Fixed_64;\n with System.Val_Fixed_128; use System.Val_Fixed_128;\n+with System.Val_LLF;       use System.Val_LLF;\n with System.WCh_Con;       use System.WCh_Con;\n with System.WCh_WtS;       use System.WCh_WtS;\n \n package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n \n    --  Note: we still use the floating-point I/O routines for types whose small\n-   --  is not a sufficiently small integer or the reciprocal thereof. This will\n-   --  result in inaccuracies for fixed point types that require more precision\n-   --  than is available in Long_Long_Float.\n+   --  is not the ratio of two sufficiently small integers. This will result in\n+   --  inaccuracies for fixed point types that require more precision than is\n+   --  available in Long_Long_Float.\n \n-   subtype Int32  is Interfaces.Integer_32;\n-   subtype Int64  is Interfaces.Integer_64;\n-   subtype Int128 is Interfaces.Integer_128;\n+   subtype Int32  is Interfaces.Integer_32;  use type Int32;\n+   subtype Int64  is Interfaces.Integer_64;  use type Int64;\n+   subtype Int128 is Interfaces.Integer_128; use type Int128;\n \n    package Aux32 is new\n      Ada.Wide_Wide_Text_IO.Fixed_Aux (Int32, Scan_Fixed32, Set_Image_Fixed32);\n@@ -62,31 +63,93 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n      Ada.Wide_Wide_Text_IO.Fixed_Aux\n       (Int128, Scan_Fixed128, Set_Image_Fixed128);\n \n-   Exact : constant Boolean :=\n-     (Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n-       or else Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small))\n-     and then Num'Small >= 2.0**(-127)\n-     and then Num'Small <= 2.0**127;\n-   --  True if the exact algorithm implemented in Fixed_Aux can be used. The\n-   --  condition is a Small which is either an integer or the reciprocal of an\n-   --  integer with the appropriate magnitude.\n-\n-   Need_64 : constant Boolean :=\n-     Num'Object_Size > 32\n-       or else Num'Small > 2.0**31\n-       or else Num'Small < 2.0**(-31);\n-   Need_128 : constant Boolean :=\n-     Num'Object_Size > 64\n-       or else Num'Small > 2.0**63\n-       or else Num'Small < 2.0**(-63);\n-   --  Throughout this generic body, we distinguish between the cases where\n-   --  type Int32 is acceptable, where type Int64 is acceptable, and where\n-   --  type Int128 is needed. These boolean constants are used to test for\n-   --  these cases and since they are constant, only code for the relevant\n-   --  case will be really included in the instance.\n+   package Aux_Long_Long_Float is new\n+     Ada.Wide_Wide_Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Int32 is OK, where type Int64 is OK and where type Int128 is OK. These\n+   --  boolean constants are used to test for this, such that only code for the\n+   --  relevant case is included in the instance; that's why the computation of\n+   --  their value must be fully static (although it is not a static expression\n+   --  in the RM sense).\n+\n+   OK_Get_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator <= 2**27\n+            and then Num'Small_Denominator <= 2**27));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_32 : constant Boolean :=\n+     Num'Base'Object_Size <= 32\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**31)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**27)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**25));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   OK_Get_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator <= 2**59\n+            and then Num'Small_Denominator <= 2**59));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_64 : constant Boolean :=\n+     Num'Base'Object_Size <= 64\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**63)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**59)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**53));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n+\n+   OK_Get_128 : constant Boolean :=\n+     Num'Base'Object_Size <= 128\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**127)\n+           or else\n+          (Num'Small_Numerator <= 2**123\n+            and then Num'Small_Denominator <= 2**123));\n+   --  These conditions are derived from the prerequisites of System.Value_F\n+\n+   OK_Put_128 : constant Boolean :=\n+     Num'Base'Object_Size <= 128\n+       and then\n+         ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n+           or else\n+          (Num'Small_Denominator = 1 and then Num'Small_Numerator <= 2**127)\n+           or else\n+          (Num'Small_Numerator < Num'Small_Denominator\n+            and then Num'Small_Denominator <= 2**123)\n+           or else\n+          (Num'Small_Denominator < Num'Small_Numerator\n+            and then Num'Small_Numerator <= 2**122));\n+   --  These conditions are derived from the prerequisites of System.Image_F\n \n    E : constant Natural :=\n-         31 + 32 * Boolean'Pos (Need_64) + 64 * Boolean'Pos (Need_128);\n+         127 - 64 * Boolean'Pos (OK_Put_64) - 32 * Boolean'Pos (OK_Put_32);\n    --  T'Size - 1 for the selected Int{32,64,128}\n \n    F0 : constant Natural := 0;\n@@ -123,23 +186,23 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       pragma Unsuppress (Range_Check);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Get (File, Long_Long_Float (Item), Width);\n-      elsif Need_128 then\n+      if OK_Get_32 then\n          Item := Num'Fixed_Value\n-                   (Aux128.Get (File, Width,\n-                                Int128 (-Float'Ceiling (Num'Small)),\n-                                Int128 (-Float'Ceiling (1.0 / Num'Small))));\n-      elsif Need_64 then\n+                   (Aux32.Get (File, Width,\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Get (File, Width,\n-                               Int64 (-Float'Ceiling (Num'Small)),\n-                               Int64 (-Float'Ceiling (1.0 / Num'Small))));\n-      else\n+                               -Num'Small_Numerator,\n+                               -Num'Small_Denominator));\n+      elsif OK_Get_128 then\n          Item := Num'Fixed_Value\n-                   (Aux32.Get (File, Width,\n-                               Int32 (-Float'Ceiling (Num'Small)),\n-                               Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+                   (Aux128.Get (File, Width,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      else\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n       end if;\n \n    exception\n@@ -151,7 +214,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n@@ -168,23 +231,23 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       --  Aux.Gets will raise Data_Error in any case.\n \n    begin\n-      if not Exact then\n-         Float_Aux.Gets (S, Long_Long_Float (Item), Last);\n-      elsif Need_128 then\n+      if OK_Get_32 then\n          Item := Num'Fixed_Value\n-                   (Aux128.Gets (S, Last,\n-                                 Int128 (-Float'Ceiling (Num'Small)),\n-                                 Int128 (-Float'Ceiling (1.0 / Num'Small))));\n-      elsif Need_64 then\n+                   (Aux32.Gets (S, Last,\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_64 then\n          Item := Num'Fixed_Value\n                    (Aux64.Gets (S, Last,\n-                                Int64 (-Float'Ceiling (Num'Small)),\n-                                Int64 (-Float'Ceiling (1.0 / Num'Small))));\n-      else\n+                                -Num'Small_Numerator,\n+                                -Num'Small_Denominator));\n+      elsif OK_Get_128 then\n          Item := Num'Fixed_Value\n-                   (Aux32.Gets (S, Last,\n-                                Int32 (-Float'Ceiling (Num'Small)),\n-                                Int32 (-Float'Ceiling (1.0 / Num'Small))));\n+                   (Aux128.Gets (S, Last,\n+                                 -Num'Small_Numerator,\n+                                 -Num'Small_Denominator));\n+      else\n+         Aux_Long_Long_Float.Gets (S, Long_Long_Float (Item), Last);\n       end if;\n \n    exception\n@@ -203,23 +266,21 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      if not Exact then\n-         Float_Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n-      elsif Need_128 then\n-         Aux128.Put (File, Int128'Integer_Value (Item), Fore, Aft, Exp,\n-                     Int128 (-Float'Ceiling (Num'Small)),\n-                     Int128 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n+                    For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Put (File, Int64'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int64 (-Float'Ceiling (Num'Small)),\n-                    Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                    -Num'Small_Numerator, -Num'Small_Denominator,\n                     For0, Num'Aft);\n+      elsif OK_Put_128 then\n+         Aux128.Put (File, Int128'Integer_Value (Item), Fore, Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n       else\n-         Aux32.Put (File, Int32'Integer_Value (Item), Fore, Aft, Exp,\n-                    Int32 (-Float'Ceiling (Num'Small)),\n-                    Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                    For0, Num'Aft);\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n       end if;\n    end Put;\n \n@@ -230,7 +291,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n@@ -242,23 +303,20 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       S : String (To'First .. To'Last);\n \n    begin\n-      if not Exact then\n-         Float_Aux.Puts (S, Long_Long_Float (Item), Aft, Exp);\n-      elsif Need_128 then\n-         Aux128.Puts (S, Int128'Integer_Value (Item), Aft, Exp,\n-                      Int128 (-Float'Ceiling (Num'Small)),\n-                      Int128 (-Float'Ceiling (1.0 / Num'Small)),\n-                      For0, Num'Aft);\n-      elsif Need_64 then\n+      if OK_Put_32 then\n+         Aux32.Puts (S, Int32'Integer_Value (Item), Aft, Exp,\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n+                     For0, Num'Aft);\n+      elsif OK_Put_64 then\n          Aux64.Puts (S, Int64'Integer_Value (Item), Aft, Exp,\n-                     Int64 (-Float'Ceiling (Num'Small)),\n-                     Int64 (-Float'Ceiling (1.0 / Num'Small)),\n+                     -Num'Small_Numerator, -Num'Small_Denominator,\n                      For0, Num'Aft);\n+      elsif OK_Put_128 then\n+         Aux128.Puts (S, Int128'Integer_Value (Item), Aft, Exp,\n+                      -Num'Small_Numerator, -Num'Small_Denominator,\n+                      For0, Num'Aft);\n       else\n-         Aux32.Puts (S, Int32'Integer_Value (Item), Aft, Exp,\n-                     Int32 (-Float'Ceiling (Num'Small)),\n-                     Int32 (-Float'Ceiling (1.0 / Num'Small)),\n-                     For0, Num'Aft);\n+         Aux_Long_Long_Float.Puts (S, Long_Long_Float (Item), Aft, Exp);\n       end if;\n \n       for J in S'Range loop"}, {"sha": "1bddcd86ddf6830f5132ccea5d8953941c2b3a51", "filename": "gcc/ada/libgnat/a-ztflau.adb", "status": "modified", "additions": 16, "deletions": 117, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztflau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztflau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztflau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -31,8 +31,7 @@\n \n with Ada.Wide_Wide_Text_IO.Generic_Aux; use Ada.Wide_Wide_Text_IO.Generic_Aux;\n \n-with System.Img_Real;  use System.Img_Real;\n-with System.Val_Real;  use System.Val_Real;\n+with System.Img_Real; use System.Img_Real;\n \n package body Ada.Wide_Wide_Text_IO.Float_Aux is\n \n@@ -42,23 +41,23 @@ package body Ada.Wide_Wide_Text_IO.Float_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Long_Long_Float;\n+      Item  : out Num;\n       Width : Field)\n    is\n       Buf  : String (1 .. Field'Last);\n       Stop : Integer := 0;\n-      Ptr  : aliased Integer := 1;\n+      Ptr  : aliased Integer;\n \n    begin\n       if Width /= 0 then\n          Load_Width (File, Width, Buf, Stop);\n          String_Skip (Buf, Ptr);\n       else\n          Load_Real (File, Buf, Stop);\n+         Ptr := 1;\n       end if;\n \n-      Item := Scan_Real (Buf, Ptr'Access, Stop);\n-\n+      Item := Scan (Buf, Ptr'Access, Stop);\n       Check_End_Of_Field (Buf, Stop, Ptr, Width);\n    end Get;\n \n@@ -68,137 +67,36 @@ package body Ada.Wide_Wide_Text_IO.Float_Aux is\n \n    procedure Gets\n      (From : String;\n-      Item : out Long_Long_Float;\n+      Item : out Num;\n       Last : out Positive)\n    is\n       Pos : aliased Integer;\n \n    begin\n       String_Skip (From, Pos);\n-      Item := Scan_Real (From, Pos'Access, From'Last);\n+      Item := Scan (From, Pos'Access, From'Last);\n       Last := Pos - 1;\n \n    exception\n-      when Constraint_Error =>\n-         raise Data_Error;\n+      when Constraint_Error => raise Data_Error;\n    end Gets;\n \n-   ---------------\n-   -- Load_Real --\n-   ---------------\n-\n-   procedure Load_Real\n-     (File : File_Type;\n-      Buf  : out String;\n-      Ptr  : in out Natural)\n-   is\n-      Loaded   : Boolean;\n-\n-   begin\n-      --  Skip initial blanks and load possible sign\n-\n-      Load_Skip (File);\n-      Load (File, Buf, Ptr, '+', '-');\n-\n-      --  Case of .nnnn\n-\n-      Load (File, Buf, Ptr, '.', Loaded);\n-\n-      if Loaded then\n-         Load_Digits (File, Buf, Ptr, Loaded);\n-\n-         --  Hopeless junk if no digits loaded\n-\n-         if not Loaded then\n-            return;\n-         end if;\n-\n-      --  Otherwise must have digits to start\n-\n-      else\n-         Load_Digits (File, Buf, Ptr, Loaded);\n-\n-         --  Hopeless junk if no digits loaded\n-\n-         if not Loaded then\n-            return;\n-         end if;\n-\n-         --  Deal with based case. We recognize either the standard '#' or the\n-         --  allowed alternative replacement ':' (see RM J.2(3)).\n-\n-         Load (File, Buf, Ptr, '#', ':', Loaded);\n-\n-         if Loaded then\n-\n-            --  Case of nnn#.xxx#\n-\n-            Load (File, Buf, Ptr, '.', Loaded);\n-\n-            if Loaded then\n-               Load_Extended_Digits (File, Buf, Ptr);\n-               Load (File, Buf, Ptr, '#', ':');\n-\n-            --  Case of nnn#xxx.[xxx]# or nnn#xxx#\n-\n-            else\n-               Load_Extended_Digits (File, Buf, Ptr);\n-               Load (File, Buf, Ptr, '.', Loaded);\n-\n-               if Loaded then\n-                  Load_Extended_Digits (File, Buf, Ptr);\n-               end if;\n-\n-               --  As usual, it seems strange to allow mixed base characters,\n-               --  but that is what ACVC tests expect, see CE3804M, case (3).\n-\n-               Load (File, Buf, Ptr, '#', ':');\n-            end if;\n-\n-         --  Case of nnn.[nnn] or nnn\n-\n-         else\n-            --  Prevent the potential processing of '.' in cases where the\n-            --  initial digits have a trailing underscore.\n-\n-            if Buf (Ptr) = '_' then\n-               return;\n-            end if;\n-\n-            Load (File, Buf, Ptr, '.', Loaded);\n-\n-            if Loaded then\n-               Load_Digits (File, Buf, Ptr);\n-            end if;\n-         end if;\n-      end if;\n-\n-      --  Deal with exponent\n-\n-      Load (File, Buf, Ptr, 'E', 'e', Loaded);\n-\n-      if Loaded then\n-         Load (File, Buf, Ptr, '+', '-');\n-         Load_Digits (File, Buf, Ptr);\n-      end if;\n-   end Load_Real;\n-\n    ---------\n    -- Put --\n    ---------\n \n    procedure Put\n      (File : File_Type;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Fore : Field;\n       Aft  : Field;\n       Exp  : Field)\n    is\n-      Buf : String (1 .. Field'Last);\n+      Buf : String (1 .. Max_Real_Image_Length);\n       Ptr : Natural := 0;\n \n    begin\n-      Set_Image_Real (Item, Buf, Ptr, Fore, Aft, Exp);\n+      Set_Image_Real (Long_Long_Float (Item), Buf, Ptr, Fore, Aft, Exp);\n       Put_Item (File, Buf (1 .. Ptr));\n    end Put;\n \n@@ -208,15 +106,16 @@ package body Ada.Wide_Wide_Text_IO.Float_Aux is\n \n    procedure Puts\n      (To   : out String;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Aft  : Field;\n       Exp  : Field)\n    is\n-      Buf    : String (1 .. Field'Last);\n-      Ptr    : Natural := 0;\n+      Buf : String (1 .. Max_Real_Image_Length);\n+      Ptr : Natural := 0;\n \n    begin\n-      Set_Image_Real (Item, Buf, Ptr, Fore => 1, Aft => Aft, Exp => Exp);\n+      Set_Image_Real\n+        (Long_Long_Float (Item), Buf, Ptr, Fore => 1, Aft => Aft, Exp => Exp);\n \n       if Ptr > To'Length then\n          raise Layout_Error;"}, {"sha": "48fba8267acf81cc49a70a7041fa0d463a99de1b", "filename": "gcc/ada/libgnat/a-ztflau.ads", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztflau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztflau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztflau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -31,41 +31,42 @@\n \n --  This package contains the routines for Ada.Wide_Wide_Text_IO.Float_IO that\n --  are shared among separate instantiations of this package. The routines\n---  in this package are identical semantically to those in Float_IO itself,\n---  except that generic parameter Num has been replaced by Long_Long_Float,\n---  and the default parameters have been removed because they are supplied\n+--  in this package are identical semantically to those in Float_IO, except\n+--  that the default parameters have been removed because they are supplied\n --  explicitly by the calls from within the generic template. Also used by\n---  Ada.Wide_Wide_Text_IO.Fixed_IO, and by Ada.Wide_Wide_Text_IO.Decimal_IO.\n+--  Ada.Wide_Wide_Text_IO.Fixed_IO and by Ada.Wide_Wide_Text_IO.Decimal_IO.\n \n-private package Ada.Wide_Wide_Text_IO.Float_Aux is\n+private generic\n \n-   procedure Load_Real\n-     (File : File_Type;\n-      Buf  : out String;\n-      Ptr  : in out Natural);\n-   --  This is an auxiliary routine that is used to load a possibly signed\n-   --  real literal value from the input file into Buf, starting at Ptr + 1.\n+   type Num is digits <>;\n+\n+   with function Scan\n+     (Str : String;\n+      Ptr : not null access Integer;\n+      Max : Integer) return Num;\n+\n+package Ada.Wide_Wide_Text_IO.Float_Aux is\n \n    procedure Get\n      (File  : File_Type;\n-      Item  : out Long_Long_Float;\n+      Item  : out Num;\n       Width : Field);\n \n-   procedure Gets\n-     (From : String;\n-      Item : out Long_Long_Float;\n-      Last : out Positive);\n-\n    procedure Put\n      (File : File_Type;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Fore : Field;\n       Aft  : Field;\n       Exp  : Field);\n \n+   procedure Gets\n+     (From : String;\n+      Item : out Num;\n+      Last : out Positive);\n+\n    procedure Puts\n      (To   : out String;\n-      Item : Long_Long_Float;\n+      Item : Num;\n       Aft  : Field;\n       Exp  : Field);\n "}, {"sha": "e491e6298976c9818d41807a46ffa5471d37368d", "filename": "gcc/ada/libgnat/a-ztflio.adb", "status": "modified", "additions": 75, "deletions": 9, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztflio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010", "patch": "@@ -30,12 +30,31 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Wide_Text_IO.Float_Aux;\n-with System.WCh_Con; use System.WCh_Con;\n-with System.WCh_WtS; use System.WCh_WtS;\n+with System.Val_Flt;  use System.Val_Flt;\n+with System.Val_LFlt; use System.Val_LFlt;\n+with System.Val_LLF;  use System.Val_LLF;\n+with System.WCh_Con;  use System.WCh_Con;\n+with System.WCh_WtS;  use System.WCh_WtS;\n \n package body Ada.Wide_Wide_Text_IO.Float_IO is\n \n-   package Aux renames Ada.Wide_Wide_Text_IO.Float_Aux;\n+   package Aux_Float is new\n+      Ada.Wide_Wide_Text_IO.Float_Aux (Float, Scan_Float);\n+\n+   package Aux_Long_Float is new\n+      Ada.Wide_Wide_Text_IO.Float_Aux (Long_Float, Scan_Long_Float);\n+\n+   package Aux_Long_Long_Float is new\n+      Ada.Wide_Wide_Text_IO.Float_Aux (Long_Long_Float, Scan_Long_Long_Float);\n+\n+   --  Throughout this generic body, we distinguish between the case where type\n+   --  Float is OK, where type Long_Float is OK and where type Long_Long_Float\n+   --  is needed. These boolean constants are used to test for this, such that\n+   --  only code for the relevant case is included in the instance.\n+\n+   OK_Float : constant Boolean := Num'Base'Digits <= Float'Digits;\n+\n+   OK_Long_Float : constant Boolean := Num'Base'Digits <= Long_Float'Digits;\n \n    ---------\n    -- Get --\n@@ -46,8 +65,25 @@ package body Ada.Wide_Wide_Text_IO.Float_IO is\n       Item  : out Num;\n       Width : Field := 0)\n    is\n+      pragma Unsuppress (Range_Check);\n+\n    begin\n-      Aux.Get (File, Long_Long_Float (Item), Width);\n+      if OK_Float then\n+         Aux_Float.Get (File, Float (Item), Width);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Get (File, Long_Float (Item), Width);\n+      else\n+         Aux_Long_Long_Float.Get (File, Long_Long_Float (Item), Width);\n+      end if;\n+\n+      --  In the case where the type is unconstrained (e.g. Standard'Float),\n+      --  the above conversion may result in an infinite value, which is\n+      --  normally fine for a conversion, but in this case, we want to treat\n+      --  that as a data error.\n+\n+      if not Item'Valid then\n+         raise Data_Error;\n+      end if;\n \n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -58,22 +94,39 @@ package body Ada.Wide_Wide_Text_IO.Float_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Get (Current_Input, Item, Width);\n+      Get (Current_In, Item, Width);\n    end Get;\n \n    procedure Get\n      (From : Wide_Wide_String;\n       Item : out Num;\n       Last : out Positive)\n    is\n+      pragma Unsuppress (Range_Check);\n+\n       S : constant String := Wide_Wide_String_To_String (From, WCEM_Upper);\n       --  String on which we do the actual conversion. Note that the method\n       --  used for wide character encoding is irrelevant, since if there is\n       --  a character outside the Standard.Character range then the call to\n       --  Aux.Gets will raise Data_Error in any case.\n \n    begin\n-      Aux.Gets (S, Long_Long_Float (Item), Last);\n+      if OK_Float then\n+         Aux_Float.Gets (S, Float (Item), Last);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Gets (S, Long_Float (Item), Last);\n+      else\n+         Aux_Long_Long_Float.Gets (S, Long_Long_Float (Item), Last);\n+      end if;\n+\n+      --  In the case where the type is unconstrained (e.g. Standard'Float),\n+      --  the above conversion may result in an infinite value, which is\n+      --  normally fine for a conversion, but in this case, we want to treat\n+      --  that as a data error.\n+\n+      if not Item'Valid then\n+         raise Data_Error;\n+      end if;\n \n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -91,7 +144,14 @@ package body Ada.Wide_Wide_Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Put (File, Float (Item), Fore, Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Put (File, Long_Float (Item), Fore, Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Put\n+           (File, Long_Long_Float (Item), Fore, Aft, Exp);\n+      end if;\n    end Put;\n \n    procedure Put\n@@ -101,7 +161,7 @@ package body Ada.Wide_Wide_Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Put (Current_Output, Item, Fore, Aft, Exp);\n+      Put (Current_Out, Item, Fore, Aft, Exp);\n    end Put;\n \n    procedure Put\n@@ -113,7 +173,13 @@ package body Ada.Wide_Wide_Text_IO.Float_IO is\n       S : String (To'First .. To'Last);\n \n    begin\n-      Aux.Puts (S, Long_Long_Float (Item), Aft, Exp);\n+      if OK_Float then\n+         Aux_Float.Puts (S, Float (Item), Aft, Exp);\n+      elsif OK_Long_Float then\n+         Aux_Long_Float.Puts (S, Long_Float (Item), Aft, Exp);\n+      else\n+         Aux_Long_Long_Float.Puts (S, Long_Long_Float (Item), Aft, Exp);\n+      end if;\n \n       for J in S'Range loop\n          To (J) := Wide_Wide_Character'Val (Character'Pos (S (J)));"}, {"sha": "6b5e4c5add8e2af1eeed750a789a4745a04f1dd9", "filename": "gcc/ada/libgnat/a-ztgeau.adb", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztgeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztgeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztgeau.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "6b80ed4cfe107846a75a0d0d8ae280f16d661bdc", "filename": "gcc/ada/libgnat/a-ztgeau.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztgeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztgeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztgeau.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "c19c8a6af7271c4c8c9a1b7eee578aad3744750a", "filename": "gcc/ada/libgnat/a-ztinio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztinio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztinio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztinio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "19dcc3467628c8b34fd47e28a627b207cd14af08", "filename": "gcc/ada/libgnat/a-ztinio__128.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztinio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztinio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztinio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "ba854ffd0f37e2b7a6d9c4822ee584e2caf32d13", "filename": "gcc/ada/libgnat/a-ztmoio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztmoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztmoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztmoio.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "21015080dd98c805a99b1204e2a8331d791cd3b6", "filename": "gcc/ada/libgnat/a-ztmoio__128.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztmoio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fa-ztmoio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztmoio__128.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "1e8627e550ea20adb2bc06eb9f51c2f45bb358dc", "filename": "gcc/ada/libgnat/g-diopit.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fg-diopit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fg-diopit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-diopit.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "952d795960f439f29426aafa5427e87c91bf3b28", "filename": "gcc/ada/libgnat/g-diopit.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fg-diopit.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fg-diopit.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-diopit.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "0f9d0b9f96aff9871ae130a761925d5c3691f336", "filename": "gcc/ada/libgnat/g-expect.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-expect.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "f7212e87ccaabc7d58bbdb8914a9bb0da42f08ef", "filename": "gcc/ada/libgnat/g-sercom__linux.adb", "status": "modified", "additions": 78, "deletions": 14, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "a5f508d9e0339cd3ed685645261ed3d29cfec45d", "filename": "gcc/ada/libgnat/memtrack.adb", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fmemtrack.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fmemtrack.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fmemtrack.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "21b72949be5d7ec38bc82d791c2228b4674a9d98", "filename": "gcc/ada/libgnat/s-bitfie.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-bitfie.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-bitfie.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-bitfie.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "ef839a885fe815bcc62dbd3aea25b6024dbe69d9", "filename": "gcc/ada/libgnat/s-bituti.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-bituti.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-bituti.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-bituti.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "9f25987e42885b4e9d014ce40efb3b42a4547528", "filename": "gcc/ada/libgnat/s-fatgen.adb", "status": "modified", "additions": 316, "deletions": 366, "changes": 682, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "700cfdc027d881a074c6d02bea14b9ef39672467", "filename": "gcc/ada/libgnat/s-fatgen.ads", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fatgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fatgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fatgen.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "45b13e15ba9c3c0afd93029efde2cf7a04935c27", "filename": "gcc/ada/libgnat/s-fatsfl.ads", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da07eb33b5453c932ab1248629d9feebf0da6b1/gcc%2Fada%2Flibgnat%2Fs-fatsfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da07eb33b5453c932ab1248629d9feebf0da6b1/gcc%2Fada%2Flibgnat%2Fs-fatsfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fatsfl.ads?ref=5da07eb33b5453c932ab1248629d9feebf0da6b1"}, {"sha": "3e9ae58948f03d1752581fc696e1ea4e8a2b75b6", "filename": "gcc/ada/libgnat/s-finmas.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-finmas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-finmas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-finmas.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "eb30ea1d12c472116e8f257bbd23b4cd2c4a568f", "filename": "gcc/ada/libgnat/s-finmas.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-finmas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-finmas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-finmas.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "aaa117f489bf0d56ae23408927512be5f4846c71", "filename": "gcc/ada/libgnat/s-fofi128.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fofi128.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fofi128.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fofi128.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "cf94fb8ce7b616c083c94935377041613d73e7cb", "filename": "gcc/ada/libgnat/s-fofi32.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fofi32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fofi32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fofi32.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "cdde2043ca4cb0868f63aca612f3a7bcc166e97b", "filename": "gcc/ada/libgnat/s-fofi64.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fofi64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fofi64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fofi64.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "c9c476dfccaf946446bcae22715c36c78e172fda", "filename": "gcc/ada/libgnat/s-fore_f.adb", "status": "modified", "additions": 44, "deletions": 17, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fore_f.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fore_f.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fore_f.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "cf6d983d20ae130fa0aca624f6ff342aa9fb7c03", "filename": "gcc/ada/libgnat/s-fore_f.ads", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fore_f.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-fore_f.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fore_f.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "94a7a2f8ac351a9f3f7fa8a331975f06a1460447", "filename": "gcc/ada/libgnat/s-imagef.adb", "status": "modified", "additions": 75, "deletions": 17, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-imagef.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-imagef.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-imagef.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "ace7e6b31bdebc01a6ce352386261d2dbab3b6ce", "filename": "gcc/ada/libgnat/s-imagef.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-imagef.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-imagef.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-imagef.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "2ec6a1aec1d9b2747fe6ac42ffd30ed1ac9fa1c8", "filename": "gcc/ada/libgnat/s-imgrea.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-imgrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-imgrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-imgrea.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "6e21c657c004ccada274f4100190eb8958909a84", "filename": "gcc/ada/libgnat/s-imguti.ads", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-imguti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-imguti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-imguti.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "0cfa522ab30f5a96f82691cdda48ba668c1d037b", "filename": "gcc/ada/libgnat/s-objrea.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-objrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-objrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-objrea.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "b3cfe13ab0672d0ad153fcf414e7e0a74bb36ada", "filename": "gcc/ada/libgnat/s-objrea.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-objrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-objrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-objrea.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "9d58967d61ea44e0f16d8c9fe0d6e0f6f50cb4a7", "filename": "gcc/ada/libgnat/s-powflt.ads", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-powflt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-powflt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-powflt.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "d191effe52dea72d1a5b7ce1e22416e0850b61cf", "filename": "gcc/ada/libgnat/s-powlfl.ads", "status": "added", "additions": 355, "deletions": 0, "changes": 355, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-powlfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-powlfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-powlfl.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "c5c42a14c3beb7f1c472f00d4ce482ed0962a34e", "filename": "gcc/ada/libgnat/s-powllf.ads", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-powllf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-powllf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-powllf.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "ef8d74aaae890d52454fa4f0e2b721abece12668", "filename": "gcc/ada/libgnat/s-powtab.ads", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da07eb33b5453c932ab1248629d9feebf0da6b1/gcc%2Fada%2Flibgnat%2Fs-powtab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da07eb33b5453c932ab1248629d9feebf0da6b1/gcc%2Fada%2Flibgnat%2Fs-powtab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-powtab.ads?ref=5da07eb33b5453c932ab1248629d9feebf0da6b1"}, {"sha": "f2d264deb8cad33f3f5ec30d00c6c4121194b1cf", "filename": "gcc/ada/libgnat/s-secsta.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-secsta.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "8fe2721638c7199d554648456ce59c11376d1ef1", "filename": "gcc/ada/libgnat/s-stratt.adb", "status": "modified", "additions": 147, "deletions": 63, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-stratt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-stratt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stratt.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "965dff6710310158d83a68d78be3909780ce63b7", "filename": "gcc/ada/libgnat/s-stratt.ads", "status": "modified", "additions": 60, "deletions": 47, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-stratt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-stratt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stratt.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "fbeec8db99e605f1c51cec526e1d77b84341bd23", "filename": "gcc/ada/libgnat/s-trasym.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-trasym.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "5806d580997f7f18d8122240544b47433f9d62bf", "filename": "gcc/ada/libgnat/s-valflt.ads", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valflt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valflt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valflt.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "c612f75dfc4d72eb77593e948df0e36579db2074", "filename": "gcc/ada/libgnat/s-vallfl.ads", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-vallfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-vallfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-vallfl.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "46a311b9da2ce9689825d44e0375d296e82356ad", "filename": "gcc/ada/libgnat/s-valllf.ads", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valllf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valllf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valllf.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "0ac3846542b75132660ff8da9c3c898b418b2077", "filename": "gcc/ada/libgnat/s-valrea.adb", "status": "modified", "additions": 163, "deletions": 18, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valrea.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "d6ade8092858d16b218108d79809299f87aa960a", "filename": "gcc/ada/libgnat/s-valrea.ads", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valrea.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "89307520fa02105fff62befc683be0f4a7cfbddb", "filename": "gcc/ada/libgnat/s-valued.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valued.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valued.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valued.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "d13111a4ae54a57a5db047754087b136c1bc6e81", "filename": "gcc/ada/libgnat/s-valuef.adb", "status": "modified", "additions": 70, "deletions": 35, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valuef.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valuef.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valuef.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "abd4817c8bcbd819f6f3ebf37e4c9f1cebfbd78b", "filename": "gcc/ada/libgnat/s-valuef.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valuef.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valuef.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valuef.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "9e4de3e299e02e34582c55951eab9917726ec151", "filename": "gcc/ada/libgnat/s-valuer.adb", "status": "modified", "additions": 117, "deletions": 52, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valuer.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valuer.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valuer.adb?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "a933859eae2ed0cc69c4a7bf01537e8c85b7d70b", "filename": "gcc/ada/libgnat/s-valuer.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valuer.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fs-valuer.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valuer.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "db4579ffbc9797fbce9a78d5e0981d7909020871", "filename": "gcc/ada/libgnat/system-aix.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-aix.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "b3069208e55b3cdede848c22f206eef5d3ac7632", "filename": "gcc/ada/libgnat/system-darwin-arm.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-darwin-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-darwin-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-darwin-arm.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "bc0b147f1939d4474d67afc12d12823f2e81f521", "filename": "gcc/ada/libgnat/system-darwin-ppc.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-darwin-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-darwin-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-darwin-ppc.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "c1752241da186e829ce65ad34c281ac3e765b268", "filename": "gcc/ada/libgnat/system-darwin-x86.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-darwin-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-darwin-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-darwin-x86.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "52e4a8891f913341c9f1b4819a1a1f30b5e8a03b", "filename": "gcc/ada/libgnat/system-djgpp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-djgpp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-djgpp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-djgpp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "0cc0daba7740118208e3c5ba7d688c7fddc24015", "filename": "gcc/ada/libgnat/system-dragonfly-x86_64.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-dragonfly-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-dragonfly-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-dragonfly-x86_64.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "ce1835c06cfc680571cc96164920011b1a86ccf7", "filename": "gcc/ada/libgnat/system-freebsd.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-freebsd.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "202bcac7f3aba0698751946430add24b5b5cb6b5", "filename": "gcc/ada/libgnat/system-hpux-ia64.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-hpux-ia64.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "34f27528ea2cc46ed2c5addadca822e6a8d576f6", "filename": "gcc/ada/libgnat/system-hpux.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-hpux.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "2c638e548fc289c7d8e5870f34c8e872580f8c5b", "filename": "gcc/ada/libgnat/system-linux-alpha.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-alpha.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "9020c79760d98103a872ba5cd81e53ee4ea7d905", "filename": "gcc/ada/libgnat/system-linux-arm.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-arm.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "dccf4446412c1f80908a1d082f4e661433fd3cfb", "filename": "gcc/ada/libgnat/system-linux-hppa.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-hppa.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "14b6bb31efae62cf25e9ee09fb87ae05a82aba29", "filename": "gcc/ada/libgnat/system-linux-ia64.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-ia64.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "db7f9e7802cd666689c4385d5e18a07e5bcd98bf", "filename": "gcc/ada/libgnat/system-linux-m68k.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-m68k.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "d44bf1b4968360693f1768b60f6b777da627cb8e", "filename": "gcc/ada/libgnat/system-linux-mips.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-mips.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "917b949ff97c5f6d88efd77e9b3999f8810c274c", "filename": "gcc/ada/libgnat/system-linux-ppc.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-ppc.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "9e93e5e57343f11b1306d28f373884c691919379", "filename": "gcc/ada/libgnat/system-linux-riscv.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "0ceeb965d4de88e8f6c7c8db8c91af5702cb96dd", "filename": "gcc/ada/libgnat/system-linux-s390.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-s390.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-s390.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-s390.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "fd0e0c723fc67c39dde3d775ea1e39f0b9ca8d1a", "filename": "gcc/ada/libgnat/system-linux-sh4.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-sh4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-sh4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-sh4.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "29a650a58399e55fc32dbdc895847bece6ccf8a7", "filename": "gcc/ada/libgnat/system-linux-sparc.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-sparc.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "73c99c30069cffcd879a30896639c0656f94c6bb", "filename": "gcc/ada/libgnat/system-linux-x86.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-x86.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "e2d976593b24c9e16d9708818371c2583cf979bc", "filename": "gcc/ada/libgnat/system-lynxos178-ppc.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-ppc.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "31318954ce3f2641652d5af4b92ce6f783a61c19", "filename": "gcc/ada/libgnat/system-lynxos178-x86.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "3729e44b87ec6bc75a70eba74104edb0f7ee8dbb", "filename": "gcc/ada/libgnat/system-mingw.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-mingw.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "a6336a9307eccdeb2ee8e6626f9e676bd0bd38b9", "filename": "gcc/ada/libgnat/system-qnx-aarch64.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "dca09dd5ea51438323e5eff1e284fd6a6ac20cb4", "filename": "gcc/ada/libgnat/system-rtems.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "1efc78f9a3959db26c0146ab254224359c9250ee", "filename": "gcc/ada/libgnat/system-solaris-sparc.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-solaris-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-solaris-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-solaris-sparc.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "8dc46ed2732133dec67b2dd9b21e9332214a49f6", "filename": "gcc/ada/libgnat/system-solaris-x86.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-solaris-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-solaris-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-solaris-x86.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "592e25b317ee174bb1931cce3b4beb01b83b2bdd", "filename": "gcc/ada/libgnat/system-vxworks-arm-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "ac025ce02f3002fa55838c90b7235d044fb1a733", "filename": "gcc/ada/libgnat/system-vxworks-arm-rtp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "483881f1a14c8cf9bd3d9df4b5950c57f6c960ea", "filename": "gcc/ada/libgnat/system-vxworks-arm.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "ac674bd6d484cd7cdf0b8edd6cbcf63eee81267b", "filename": "gcc/ada/libgnat/system-vxworks-e500-kernel.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-kernel.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "45a99f3df87a1bf985543e7cadb86081c676b402", "filename": "gcc/ada/libgnat/system-vxworks-e500-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "27f77076dfab48ecbceb91a59ecd75d190bfce69", "filename": "gcc/ada/libgnat/system-vxworks-e500-rtp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "f60fbcdb0138e04627d5234c04702e015f366b0e", "filename": "gcc/ada/libgnat/system-vxworks-e500-vthread.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-vthread.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-vthread.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-vthread.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "ec3de264b2a58fde20a2eba9423462dcc8400312", "filename": "gcc/ada/libgnat/system-vxworks-ppc-kernel.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-kernel.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "e38ff3bfc02604295208ed8bcd0dc4294672b143", "filename": "gcc/ada/libgnat/system-vxworks-ppc-ravenscar.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-ravenscar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-ravenscar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-ravenscar.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "b4277e2d0163da2522f7d311ed5d1840993c269c", "filename": "gcc/ada/libgnat/system-vxworks-ppc-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "eeeca9b4aea878548e4c5774a6dda8b06a953084", "filename": "gcc/ada/libgnat/system-vxworks-ppc-rtp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "05d27d66dae9dfa0f9364cbba1b4e1cb2b051815", "filename": "gcc/ada/libgnat/system-vxworks-ppc-vthread.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-vthread.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-vthread.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-vthread.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "9862f42613bb88df55d8f99f9db735cdb1ef8451", "filename": "gcc/ada/libgnat/system-vxworks-ppc.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "b6eebb58fa408072710575e70f1c6c692d01768b", "filename": "gcc/ada/libgnat/system-vxworks-x86-kernel.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-kernel.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "e6d31def28b5b2a6fcdcf62a20ae834b4093978f", "filename": "gcc/ada/libgnat/system-vxworks-x86-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "960a7ed9251ca240aaa2fadf3830b64214cfa269", "filename": "gcc/ada/libgnat/system-vxworks-x86-rtp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "f3f403722612689d7dc0e7783bc366ba98e5b6b8", "filename": "gcc/ada/libgnat/system-vxworks-x86-vthread.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-vthread.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-vthread.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-vthread.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "55bc3f6e33c3e855fdbedbdd696a9de08d14621d", "filename": "gcc/ada/libgnat/system-vxworks-x86.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "0624ffa2998303d3f5de6befa25142be18fbcc57", "filename": "gcc/ada/libgnat/system-vxworks7-aarch64-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "14913327e08f70b5dd20db5035f8633863f944f2", "filename": "gcc/ada/libgnat/system-vxworks7-aarch64.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "d7da53d26338d58b02ef23e73da69bd5885f6377", "filename": "gcc/ada/libgnat/system-vxworks7-arm-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "483881f1a14c8cf9bd3d9df4b5950c57f6c960ea", "filename": "gcc/ada/libgnat/system-vxworks7-arm.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "e697629375d05641e8925ffdb859647e5fc11f91", "filename": "gcc/ada/libgnat/system-vxworks7-e500-kernel.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-kernel.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "638862856900ade7507c9de34564f4140040fed0", "filename": "gcc/ada/libgnat/system-vxworks7-e500-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "69a0a66b86bd702b9c18ae3662ee897d7f04ac5f", "filename": "gcc/ada/libgnat/system-vxworks7-e500-rtp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "82c5d3a26381c383b3ee0289a831cd3425b70a7c", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-kernel.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "d34d6323c874441efe8242a7458642cddde76aa8", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "404da856bdb77a521024ce7eaaa59d15cd9ad065", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-rtp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "05a51d9f892ac74d8f63f4b7d7486de6eb244b3c", "filename": "gcc/ada/libgnat/system-vxworks7-ppc64-kernel.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "e55de8c16efa0a68111ddce75157c1b0eecc8ef7", "filename": "gcc/ada/libgnat/system-vxworks7-ppc64-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "b3659a35f9174dfe94172e218dd2273eb3d9e37a", "filename": "gcc/ada/libgnat/system-vxworks7-x86-kernel.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}, {"sha": "8c2d527013dd11e31f1278c83e6d623bf5dfe770", "filename": "gcc/ada/libgnat/system-vxworks7-x86-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c14e5f9c7262336bf11dfede6277dd727b83010/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads?ref=5c14e5f9c7262336bf11dfede6277dd727b83010"}]}