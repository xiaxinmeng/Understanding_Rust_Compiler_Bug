{"sha": "bdd98b6edc408fda6e065938af0bab021ec0c66e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRkOThiNmVkYzQwOGZkYTZlMDY1OTM4YWYwYmFiMDIxZWMwYzY2ZQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-06-29T08:19:08Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-06-29T08:19:08Z"}, "message": "re PR libgcj/49451 (FileHandleGcTest FAILS on IRIX)\n\n\tPR libgcj/49451\n\t* include/private/gcconfig.h [IRIX5 && _MIPS_SZPTR == 64]\n\t(ELF_CLASS): Define.\n\t* dyn_load.c [IRIX5]: Include <elf.h>.\n\tInclude <obj.h> for O32, <objlist.h> for N32, N64.\n\t[SUNOS5DL && USE_PROC_FOR_LIBRARIES] (obj_offset): Define.\n\t[SUNOS4 && USE_PROC_FOR_LIBRARIES] (obj_offset): Define.\n\t[IRIX5 && !USE_PROC_FOR_LIBRARIES] (struct link_map): Define.\n\t(__rld_obj_head): Declare.\n\t(l_next, l_addr, obj_offset): Define.\n\t(GC_FirstDLOpenedLinkMap): New function.\n\t[SUNOS4 || SUNOS5DL] (GC_register_dynamic_libraries): Also use on\n\tIRIX5.\n\tUse obj_offset.\n\t[IRIX5 || (USE_PROC_FOR_LIBRARIES && !LINUX]\n\t(GC_register_dynamic_libraries): Don't use /proc version on IRIX5.\n\nFrom-SVN: r175623", "tree": {"sha": "a4074fd2d15845bc509087d4cd217b78a36829c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4074fd2d15845bc509087d4cd217b78a36829c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdd98b6edc408fda6e065938af0bab021ec0c66e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd98b6edc408fda6e065938af0bab021ec0c66e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd98b6edc408fda6e065938af0bab021ec0c66e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd98b6edc408fda6e065938af0bab021ec0c66e/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0f33d3a128be9cc917198f93a13d451795b8175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f33d3a128be9cc917198f93a13d451795b8175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f33d3a128be9cc917198f93a13d451795b8175"}], "stats": {"total": 99, "additions": 92, "deletions": 7}, "files": [{"sha": "d08acc014e05b9b2e0e32f27516928e686596c5f", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd98b6edc408fda6e065938af0bab021ec0c66e/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd98b6edc408fda6e065938af0bab021ec0c66e/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=bdd98b6edc408fda6e065938af0bab021ec0c66e", "patch": "@@ -1,3 +1,22 @@\n+2011-06-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libgcj/49451\n+\t* include/private/gcconfig.h [IRIX5 && _MIPS_SZPTR == 64]\n+\t(ELF_CLASS): Define.\n+\t* dyn_load.c [IRIX5]: Include <elf.h>.\n+\tInclude <obj.h> for O32, <objlist.h> for N32, N64.\n+\t[SUNOS5DL && USE_PROC_FOR_LIBRARIES] (obj_offset): Define.\n+\t[SUNOS4 && USE_PROC_FOR_LIBRARIES] (obj_offset): Define.\n+\t[IRIX5 && !USE_PROC_FOR_LIBRARIES] (struct link_map): Define.\n+\t(__rld_obj_head): Declare.\n+\t(l_next, l_addr, obj_offset): Define.\n+\t(GC_FirstDLOpenedLinkMap): New function.\n+\t[SUNOS4 || SUNOS5DL] (GC_register_dynamic_libraries): Also use on\n+\tIRIX5.\n+\tUse obj_offset.\n+\t[IRIX5 || (USE_PROC_FOR_LIBRARIES && !LINUX]\n+\t(GC_register_dynamic_libraries): Don't use /proc version on IRIX5.\n+\n 2011-04-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.ac (THREADS): Remove decosf1, irix, mach, os2."}, {"sha": "f1e3e8ec74fdb41b8174dd2d66c2638ba1725f6e", "filename": "boehm-gc/dyn_load.c", "status": "modified", "additions": 70, "deletions": 7, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd98b6edc408fda6e065938af0bab021ec0c66e/boehm-gc%2Fdyn_load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd98b6edc408fda6e065938af0bab021ec0c66e/boehm-gc%2Fdyn_load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdyn_load.c?ref=bdd98b6edc408fda6e065938af0bab021ec0c66e", "patch": "@@ -82,6 +82,15 @@\n #   define l_addr\tlm_addr\n #   define l_name\tlm_name\n #endif\n+#ifdef IRIX5\n+#   include <elf.h>\n+#   if _MIPS_SIM == _MIPS_SIM_ABI32 /* O32 ABI */\n+     /* Don't include <obj_list.h> here. */\n+#     include <obj.h>\n+#   else /* N32 or N64 ABIs */\n+#     include <objlist.h>\n+#   endif\n+#endif\n \n #if defined(NETBSD)\n #   include <machine/elf_machdep.h>\n@@ -139,6 +148,8 @@ GC_register_has_static_roots_callback\n     Elf32_Dyn _DYNAMIC;\n #endif\n \n+#define obj_offset(lm) ((unsigned long)(lm->l_addr))\n+\n static struct link_map *\n GC_FirstDLOpenedLinkMap()\n {\n@@ -192,6 +203,8 @@ GC_FirstDLOpenedLinkMap()\n     struct link_dynamic _DYNAMIC;\n #endif\n \n+#define obj_offset(lm) ((unsigned long)(lm->l_addr))\n+\n static struct link_map *\n GC_FirstDLOpenedLinkMap()\n {\n@@ -226,9 +239,59 @@ static ptr_t GC_first_common()\n \n #endif  /* SUNOS4 ... */\n \n-# if defined(SUNOS4) || defined(SUNOS5DL)\n+#if defined(IRIX5) && !defined(USE_PROC_FOR_LIBRARIES)\n+\n+/* Provide struct link map. */\n+#  if _MIPS_SIM == _MIPS_SIM_ABI32 /* O32 ABI */\n+/* Provide our own version of struct obj_list in <obj_list.h> with\n+   correctly typed data member.  */\n+struct obj_list {\n+    struct obj *data;\n+    struct obj_list *next;\n+    struct obj_list *prev;\n+} objList;\n+\n+struct link_map {\n+    objList l_ol;\n+};\n+\n+extern objList *__rld_obj_head;\n+\n+/* Map field names */\n+#    define l_next\tl_ol.next\n+#    define l_addr\tl_ol.data->o_pelfhdr\t\n+\n+#    define obj_offset(lm) \\\n+\t((unsigned long)(lm->l_ol.o_praw - (char *)lm->l_ol.o_base_address))\n+#  else /* N32 or N64 ABIs */\n+struct link_map {\n+    ElfW(Obj_Info) l_oi;\n+};\n+\n+extern ElfW(Obj_Info) *__rld_obj_head;\n+\n+/* Map field names */\n+#    define l_next\tl_oi.oi_next\n+#    define l_addr\tl_oi.oi_ehdr\n+\n+/* See gdb/solib-irix.c (fetch_lm_info).  */\n+#    define obj_offset(lm) \\\n+\t ((unsigned long)(lm->l_oi.oi_ehdr - lm->l_oi.oi_orig_ehdr))\n+#  endif\n+\n+static struct link_map *\n+GC_FirstDLOpenedLinkMap()\n+{\n+    return (struct link_map *)__rld_obj_head;\n+}\n+\n+#endif /* IRIX5 ... */\n+\n+# if defined(SUNOS4) || defined(SUNOS5DL) || defined(IRIX5)\n /* Add dynamic library data sections to the root set.\t\t*/\n-# if !defined(PCR) && !defined(GC_SOLARIS_PTHREADS) && defined(THREADS)\n+# if !defined(PCR) \\\n+     && !defined(GC_SOLARIS_PTHREADS) && !defined(GC_IRIX_THREADS) \\\n+     && defined(THREADS)\n #   ifndef SRC_M3\n \t--> fix mutual exclusion with dlopen\n #   endif  /* We assume M3 programs don't call dlopen for now */\n@@ -241,7 +304,7 @@ void GC_register_dynamic_libraries()\n   \n \n   for (lm = GC_FirstDLOpenedLinkMap();\n-       lm != (struct link_map *) 0;  lm = lm->l_next)\n+       lm != (struct link_map *) 0;  lm = (struct link_map *) lm->l_next)\n     {\n #     ifdef SUNOS4\n \tstruct exec *e;\n@@ -252,7 +315,7 @@ void GC_register_dynamic_libraries()\n \t\t    ((char *) (N_BSSADDR(*e) + e->a_bss + lm->lm_addr)),\n \t\t    TRUE);\n #     endif\n-#     ifdef SUNOS5DL\n+#     if defined(SUNOS5DL) || defined(IRIX5)\n \tElfW(Ehdr) * e;\n         ElfW(Phdr) * p;\n         unsigned long offset;\n@@ -261,7 +324,7 @@ void GC_register_dynamic_libraries()\n         \n \te = (ElfW(Ehdr) *) lm->l_addr;\n         p = ((ElfW(Phdr) *)(((char *)(e)) + e->e_phoff));\n-        offset = ((unsigned long)(lm->l_addr));\n+        offset = obj_offset(lm);\n         for( i = 0; i < (int)(e->e_phnum); ((i++),(p++)) ) {\n           switch( p->p_type ) {\n             case PT_LOAD:\n@@ -589,7 +652,7 @@ void GC_register_dynamic_libraries()\n \n #endif /* LINUX */\n \n-#if defined(IRIX5) || (defined(USE_PROC_FOR_LIBRARIES) && !defined(LINUX))\n+#if defined(USE_PROC_FOR_LIBRARIES) && !defined(LINUX)\n \n #include <sys/procfs.h>\n #include <sys/stat.h>\n@@ -718,7 +781,7 @@ void GC_register_dynamic_libraries()\n \tfd = -1;\n }\n \n-# endif /* USE_PROC || IRIX5 */\n+# endif /* USE_PROC */\n \n # if defined(MSWIN32) || defined(MSWINCE) || defined(CYGWIN32)\n "}, {"sha": "25fff6e7e6aa5326c51a73320dd53053dfc8a7e6", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd98b6edc408fda6e065938af0bab021ec0c66e/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd98b6edc408fda6e065938af0bab021ec0c66e/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=bdd98b6edc408fda6e065938af0bab021ec0c66e", "patch": "@@ -1445,6 +1445,9 @@\n #\t  if CPP_WORDSZ != 64\n #\t    define ALIGN_DOUBLE\n #\t  endif\n+#\t  if _MIPS_SZPTR == 64\n+#\t    define ELF_CLASS ELFCLASS64\n+#\t  endif\n #\telse\n #         define ALIGNMENT 4\n #\t  define ALIGN_DOUBLE"}]}