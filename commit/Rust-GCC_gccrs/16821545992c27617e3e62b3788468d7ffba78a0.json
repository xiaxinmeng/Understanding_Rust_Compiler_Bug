{"sha": "16821545992c27617e3e62b3788468d7ffba78a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY4MjE1NDU5OTJjMjc2MTdlM2U2MmIzNzg4NDY4ZDdmZmJhNzhhMA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-10-11T13:53:01Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-10-11T13:53:01Z"}, "message": "sse.md (VI124_AVX2_48_AVX512F): New.\n\n        * config/i386/sse.md (VI124_AVX2_48_AVX512F): New.\n        (VI8F_256_512): Ditto.\n        (abs<mode>2): Changed iterator.\n        (avx2_perm<mode>): Changed to ...\n        (<avx2_avx512f>_perm<mode>): This.\n        (avx2_perm<mode>_1): Changed to ...\n        (<avx2_avx512f>_perm<mode>_1): This.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\nCo-Authored-By: Sergey Lega <sergey.s.lega@intel.com>\n\nFrom-SVN: r203436", "tree": {"sha": "8e4e4bbba5a0b2ca0e3f061dc7ed87359f5c1be4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4e4bbba5a0b2ca0e3f061dc7ed87359f5c1be4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16821545992c27617e3e62b3788468d7ffba78a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16821545992c27617e3e62b3788468d7ffba78a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16821545992c27617e3e62b3788468d7ffba78a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16821545992c27617e3e62b3788468d7ffba78a0/comments", "author": null, "committer": null, "parents": [{"sha": "5348cff8673d19287910f82cda9a8b3445104f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5348cff8673d19287910f82cda9a8b3445104f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5348cff8673d19287910f82cda9a8b3445104f54"}], "stats": {"total": 56, "additions": 41, "deletions": 15}, "files": [{"sha": "e61f74b60247559a825bc82cf1fd74faa953c510", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16821545992c27617e3e62b3788468d7ffba78a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16821545992c27617e3e62b3788468d7ffba78a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16821545992c27617e3e62b3788468d7ffba78a0", "patch": "@@ -1,3 +1,21 @@\n+2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Sergey Lega  <sergey.s.lega@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md (VI124_AVX2_48_AVX512F): New.\n+\t(VI8F_256_512): Ditto.\n+\t(abs<mode>2): Changed iterator.\n+\t(avx2_perm<mode>): Changed to ...\n+\t(<avx2_avx512f>_perm<mode>): This.\n+\t(avx2_perm<mode>_1): Changed to ...\n+\t(<avx2_avx512f>_perm<mode>_1): This.\n+\n 2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Sergey Lega  <sergey.s.lega@intel.com>"}, {"sha": "dd310b5eeb4a307e69a73b055a661d87162195d6", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 23, "deletions": 15, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16821545992c27617e3e62b3788468d7ffba78a0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16821545992c27617e3e62b3788468d7ffba78a0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=16821545992c27617e3e62b3788468d7ffba78a0", "patch": "@@ -236,6 +236,12 @@\n   [(V16HI \"TARGET_AVX2\") V8HI\n    (V8SI \"TARGET_AVX2\") V4SI])\n \n+(define_mode_iterator VI124_AVX2_48_AVX512F\n+  [(V32QI \"TARGET_AVX2\") V16QI\n+   (V16HI \"TARGET_AVX2\") V8HI\n+   (V16SI \"TARGET_AVX512F\") (V8SI \"TARGET_AVX2\") V4SI\n+   (V8DI \"TARGET_AVX512F\")])\n+\n (define_mode_iterator VI124_AVX512F\n   [(V32QI \"TARGET_AVX2\") V16QI\n    (V32HI \"TARGET_AVX512F\") (V16HI \"TARGET_AVX2\") V8HI\n@@ -344,6 +350,8 @@\n (define_mode_iterator VI8F_128 [V2DI V2DF])\n (define_mode_iterator VI4F_256 [V8SI V8SF])\n (define_mode_iterator VI8F_256 [V4DI V4DF])\n+(define_mode_iterator VI8F_256_512\n+  [V4DI V4DF (V8DI \"TARGET_AVX512F\") (V8DF \"TARGET_AVX512F\")])\n \n ;; Mapping from float mode to required SSE level\n (define_mode_attr sse\n@@ -8627,9 +8635,9 @@\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"abs<mode>2\"\n-  [(set (match_operand:VI124_AVX2 0 \"register_operand\" \"=v\")\n-\t(abs:VI124_AVX2\n-\t  (match_operand:VI124_AVX2 1 \"nonimmediate_operand\" \"vm\")))]\n+  [(set (match_operand:VI124_AVX2_48_AVX512F 0 \"register_operand\" \"=v\")\n+\t(abs:VI124_AVX2_48_AVX512F\n+\t  (match_operand:VI124_AVX2_48_AVX512F 1 \"nonimmediate_operand\" \"vm\")))]\n   \"TARGET_SSSE3\"\n   \"%vpabs<ssemodesuffix>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sselog1\")\n@@ -10755,25 +10763,25 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_expand \"avx2_perm<mode>\"\n-  [(match_operand:VI8F_256 0 \"register_operand\")\n-   (match_operand:VI8F_256 1 \"nonimmediate_operand\")\n+(define_expand \"<avx2_avx512f>_perm<mode>\"\n+  [(match_operand:VI8F_256_512 0 \"register_operand\")\n+   (match_operand:VI8F_256_512 1 \"nonimmediate_operand\")\n    (match_operand:SI 2 \"const_0_to_255_operand\")]\n   \"TARGET_AVX2\"\n {\n   int mask = INTVAL (operands[2]);\n-  emit_insn (gen_avx2_perm<mode>_1 (operands[0], operands[1],\n-\t\t\t\t    GEN_INT ((mask >> 0) & 3),\n-\t\t\t\t    GEN_INT ((mask >> 2) & 3),\n-\t\t\t\t    GEN_INT ((mask >> 4) & 3),\n-\t\t\t\t    GEN_INT ((mask >> 6) & 3)));\n+  emit_insn (gen_<avx2_avx512f>_perm<mode>_1 (operands[0], operands[1],\n+\t\t\t\t\t    GEN_INT ((mask >> 0) & 3),\n+\t\t\t\t\t    GEN_INT ((mask >> 2) & 3),\n+\t\t\t\t\t    GEN_INT ((mask >> 4) & 3),\n+\t\t\t\t\t    GEN_INT ((mask >> 6) & 3)));\n   DONE;\n })\n \n-(define_insn \"avx2_perm<mode>_1\"\n-  [(set (match_operand:VI8F_256 0 \"register_operand\" \"=v\")\n-\t(vec_select:VI8F_256\n-\t  (match_operand:VI8F_256 1 \"nonimmediate_operand\" \"vm\")\n+(define_insn \"<avx2_avx512f>_perm<mode>_1\"\n+  [(set (match_operand:VI8F_256_512 0 \"register_operand\" \"=v\")\n+\t(vec_select:VI8F_256_512\n+\t  (match_operand:VI8F_256_512 1 \"nonimmediate_operand\" \"vm\")\n \t  (parallel [(match_operand 2 \"const_0_to_3_operand\")\n \t\t     (match_operand 3 \"const_0_to_3_operand\")\n \t\t     (match_operand 4 \"const_0_to_3_operand\")"}]}