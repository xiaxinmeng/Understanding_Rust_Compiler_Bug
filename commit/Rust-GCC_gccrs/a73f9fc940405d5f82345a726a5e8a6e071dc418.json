{"sha": "a73f9fc940405d5f82345a726a5e8a6e071dc418", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczZjlmYzk0MDQwNWQ1ZjgyMzQ1YTcyNmE1ZThhNmUwNzFkYzQxOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-17T11:36:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-17T11:36:39Z"}, "message": "(jump_optimize): Allow SUBREG in many places where REG is allowed.\n\nFrom-SVN: r1872", "tree": {"sha": "91c0fcb2faad104061ba17418b678cca0b5eec62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91c0fcb2faad104061ba17418b678cca0b5eec62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a73f9fc940405d5f82345a726a5e8a6e071dc418", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73f9fc940405d5f82345a726a5e8a6e071dc418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73f9fc940405d5f82345a726a5e8a6e071dc418", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73f9fc940405d5f82345a726a5e8a6e071dc418/comments", "author": null, "committer": null, "parents": [{"sha": "b8eb43a245a976d1e97f5afecdb0428867c68271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8eb43a245a976d1e97f5afecdb0428867c68271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8eb43a245a976d1e97f5afecdb0428867c68271"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "f126700fe51e4e7eb22e7f4bad367df9b53a4c2a", "filename": "gcc/jump.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73f9fc940405d5f82345a726a5e8a6e071dc418/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73f9fc940405d5f82345a726a5e8a6e071dc418/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=a73f9fc940405d5f82345a726a5e8a6e071dc418", "patch": "@@ -699,6 +699,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t      && GET_CODE (PATTERN (temp2)) == SET\n \t      && rtx_equal_p (SET_DEST (PATTERN (temp2)), temp1)\n \t      && (GET_CODE (SET_SRC (PATTERN (temp2))) == REG\n+\t\t  || GET_CODE (SET_SRC (PATTERN (temp2))) == SUBREG\n \t\t  || CONSTANT_P (SET_SRC (PATTERN (temp2))))\n \t      && (REG_NOTES (temp2) == 0\n \t\t  || ((REG_NOTE_KIND (REG_NOTES (temp2)) == REG_EQUAL\n@@ -830,6 +831,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n #endif\n \t      && GET_MODE_CLASS (GET_MODE (temp1)) == MODE_INT\n \t      && (GET_CODE (temp2 = SET_SRC (PATTERN (temp))) == REG\n+\t\t  || GET_CODE (temp2) == SUBREG\n \t\t  || GET_CODE (temp2) == CONST_INT)\n \t      /* Allow either form, but prefer the former if both apply.  */\n \t      && (((temp3 = reg_set_last (temp1, insn)) != 0\n@@ -838,6 +840,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t\t\t&& REGNO (temp3) >= FIRST_PSEUDO_REGISTER\n #endif\n \t\t\t)\n+\t\t       || GET_CODE (temp3) == SUBREG\n \t\t       || GET_CODE (temp3) == CONST_INT))\n \t\t  /* Make the latter case look like  x = x; if (...) x = 0;  */\n \t\t  || ((temp3 = temp1, BRANCH_COST >= 2)"}]}