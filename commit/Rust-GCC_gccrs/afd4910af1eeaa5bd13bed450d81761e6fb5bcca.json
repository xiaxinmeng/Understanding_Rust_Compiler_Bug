{"sha": "afd4910af1eeaa5bd13bed450d81761e6fb5bcca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZkNDkxMGFmMWVlYWE1YmQxM2JlZDQ1MGQ4MTc2MWU2ZmI1YmNjYQ==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2003-04-19T19:26:41Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-04-19T19:26:41Z"}, "message": "BigInteger.java (probablePrime): New.\n\n2003-04-19  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* java/math/BigInteger.java (probablePrime): New.\n\t* java/math/BigDecimal.java (unscaledValue): New.\n\nFrom-SVN: r65825", "tree": {"sha": "5ce1e52bab1d482436dcacc2d92fc543280208e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ce1e52bab1d482436dcacc2d92fc543280208e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afd4910af1eeaa5bd13bed450d81761e6fb5bcca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd4910af1eeaa5bd13bed450d81761e6fb5bcca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afd4910af1eeaa5bd13bed450d81761e6fb5bcca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd4910af1eeaa5bd13bed450d81761e6fb5bcca/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1a1591b9ef91e138109a510a92c60ee153b8555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a1591b9ef91e138109a510a92c60ee153b8555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a1591b9ef91e138109a510a92c60ee153b8555"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "ee610a8062e89eafab1fcfcbac4e0fe3edde4f5e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afd4910af1eeaa5bd13bed450d81761e6fb5bcca/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afd4910af1eeaa5bd13bed450d81761e6fb5bcca/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=afd4910af1eeaa5bd13bed450d81761e6fb5bcca", "patch": "@@ -1,3 +1,8 @@\n+2003-04-19  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* java/math/BigInteger.java (probablePrime): New.\n+\t* java/math/BigDecimal.java (unscaledValue): New.\n+\n 2003-04-19  Ranjit Mathew  <rmathew@hotmail.com>\n \n \t* java/io/File.java (getAbsolutePath): On Windows, take care"}, {"sha": "fc99cf1f7d23c7dbff989ee62627e4bf965507ca", "filename": "libjava/java/math/BigDecimal.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afd4910af1eeaa5bd13bed450d81761e6fb5bcca/libjava%2Fjava%2Fmath%2FBigDecimal.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afd4910af1eeaa5bd13bed450d81761e6fb5bcca/libjava%2Fjava%2Fmath%2FBigDecimal.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fmath%2FBigDecimal.java?ref=afd4910af1eeaa5bd13bed450d81761e6fb5bcca", "patch": "@@ -431,6 +431,11 @@ public int scale ()\n     return scale;\n   }\n   \n+  public BigInteger unscaledValue()\n+  {\n+    return intVal;\n+  }\n+\n   public BigDecimal abs () \n   {\n     return new BigDecimal (intVal.abs (), scale);"}, {"sha": "34ec5a4c42585c352f5a8bae346999182c448cab", "filename": "libjava/java/math/BigInteger.java", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afd4910af1eeaa5bd13bed450d81761e6fb5bcca/libjava%2Fjava%2Fmath%2FBigInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afd4910af1eeaa5bd13bed450d81761e6fb5bcca/libjava%2Fjava%2Fmath%2FBigInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fmath%2FBigInteger.java?ref=afd4910af1eeaa5bd13bed450d81761e6fb5bcca", "patch": "@@ -223,6 +223,23 @@ public BigInteger(int bitLength, int certainty, Random rnd)\n       }\n   }\n \n+  /** \n+   *  Return a BigInteger that is bitLength bits long with a\n+   *  probability < 2^-100 of being composite.\n+   *\n+   *  @param bitLength length in bits of resulting number\n+   *  @param rnd random number generator to use\n+   *  @throws ArithmeticException if bitLength < 2\n+   *  @since 1.4\n+   */\n+  public static BigInteger probablePrime(int bitLength, Random rnd)\n+  {\n+    if (bitLength < 2)\n+      throw new ArithmeticException();\n+\n+    return new BigInteger(bitLength, 100, rnd);\n+  }\n+\n   /** Return a (possibly-shared) BigInteger with a given long value. */\n   public static BigInteger valueOf(long val)\n   {"}]}