{"sha": "98c99a5a376eb0b8b601fc02dec9eeacf5086196", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjOTlhNWEzNzZlYjBiOGI2MDFmYzAyZGVjOWVlYWNmNTA4NjE5Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T10:42:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T10:42:00Z"}, "message": "[multiple changes]\n\n2011-08-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb: Minor reformatting.\n\n2011-08-03  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-taprop-irix.adb, s-taprop-hpux-dce.adb, s-taprop-vms.adb\n\t(ATCB_Key): Removed, not always used.\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* gnatcmd.adb, make.adb, prj.adb, prj.ads, makeutl.adb, makeutl.ads,\n\tclean.adb, prj-conf.adb, prj-env.adb, prj-env.ads (Makeutl): remove\n\tmost remaining global variables.\n\nFrom-SVN: r177263", "tree": {"sha": "d1f32c8f9533e67c4ad8467155a274f5e8b42674", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1f32c8f9533e67c4ad8467155a274f5e8b42674"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98c99a5a376eb0b8b601fc02dec9eeacf5086196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c99a5a376eb0b8b601fc02dec9eeacf5086196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c99a5a376eb0b8b601fc02dec9eeacf5086196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c99a5a376eb0b8b601fc02dec9eeacf5086196/comments", "author": null, "committer": null, "parents": [{"sha": "686d09844fd59ffdb2d49c1c5da0a46594d06778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686d09844fd59ffdb2d49c1c5da0a46594d06778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/686d09844fd59ffdb2d49c1c5da0a46594d06778"}], "stats": {"total": 285, "additions": 163, "deletions": 122}, "files": [{"sha": "ce4039269c925cc4c447efaa3dd0a0e13275f2fb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -1,3 +1,18 @@\n+2011-08-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb: Minor reformatting.\n+\n+2011-08-03  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-taprop-irix.adb, s-taprop-hpux-dce.adb, s-taprop-vms.adb\n+\t(ATCB_Key): Removed, not always used.\n+\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* gnatcmd.adb, make.adb, prj.adb, prj.ads, makeutl.adb, makeutl.ads,\n+\tclean.adb, prj-conf.adb, prj-env.adb, prj-env.ads (Makeutl): remove\n+\tmost remaining global variables.\n+\n 2011-08-03  Robert Dewar  <dewar@adacore.com>\n \n \t* gnatcmd.adb, prj-proc.adb, mlib-prj.adb, prj.adb, makeutl.ads,"}, {"sha": "e67b48eeae135c793519312cb206cc0380dd7546", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -71,6 +71,10 @@ package body Clean is\n    --  Prefix of binder generated file, and number of actual characters used.\n    --  Changed to \"b__\" for VMS in the body of the package.\n \n+   Project_Tree : constant Project_Tree_Ref :=\n+                    new Project_Tree_Data (Is_Root_Tree => True);\n+   --  The project tree\n+\n    Object_Directory_Path : String_Access := null;\n    --  The path name of the object directory, set with switch -D\n "}, {"sha": "60c246853371add52e205231d422a40fc8c99504", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -6556,7 +6556,7 @@ package body Exp_Dist is\n                Make_Aggregate (Loc,\n                  Component_Associations => New_List (\n                    Make_Component_Association (Loc,\n-                     Choices => New_List (Make_Identifier (Loc, Name_Ras)),\n+                     Choices    => New_List (Make_Identifier (Loc, Name_Ras)),\n                      Expression =>\n                        PolyORB_Support.Helpers.Build_From_Any_Call (\n                          Underlying_RACW_Type (RAS_Type),\n@@ -9054,8 +9054,8 @@ package body Exp_Dist is\n                      if Nkind (Datum) /= N_Attribute_Reference then\n \n                         --  We ignore the value of the length of each\n-                        --  dimension, since the target array has already\n-                        --  been constrained anyway.\n+                        --  dimension, since the target array has already been\n+                        --  constrained anyway.\n \n                         if Etype (Datum) /= RTE (RE_Any) then\n                            Set_Expression (Assignment,"}, {"sha": "f858c8a5c4ab916a6ab94f41db31f5b5a4a45efe", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -67,6 +67,10 @@ procedure GNATCmd is\n    B_Start : String_Ptr    := new String'(\"b~\");\n    --  Prefix of binder generated file, changed to b__ for VMS\n \n+   Project_Tree : constant Project_Tree_Ref :=\n+                    new Project_Tree_Data (Is_Root_Tree => True);\n+   --  The project tree\n+\n    Old_Project_File_Used : Boolean := False;\n    --  This flag indicates a switch -p (for gnatxref and gnatfind) for\n    --  an old fashioned project file. -p cannot be used in conjunction\n@@ -766,7 +770,7 @@ procedure GNATCmd is\n          while Proj /= null loop\n             if Proj.Project.Config_File_Temp then\n                Delete_Temporary_File\n-                 (Project_Tree, Proj.Project.Config_File_Name);\n+                 (Project_Tree.Shared, Proj.Project.Config_File_Name);\n             end if;\n \n             Proj := Proj.Next;\n@@ -777,7 +781,7 @@ procedure GNATCmd is\n       --  has been created, delete this temporary file.\n \n       if Temp_File_Name /= No_Path then\n-         Delete_Temporary_File (Project_Tree, Temp_File_Name);\n+         Delete_Temporary_File (Project_Tree.Shared, Temp_File_Name);\n       end if;\n    end Delete_Temp_Config_Files;\n \n@@ -1286,7 +1290,9 @@ procedure GNATCmd is\n    is\n    begin\n       Makeutl.Test_If_Relative_Path\n-        (Switch, Parent, Including_Non_Switch => False, Including_RTS => True);\n+        (Switch, Parent,\n+         Do_Fail => Osint.Fail'Access,\n+         Including_Non_Switch => False, Including_RTS => True);\n    end Test_If_Relative_Path;\n \n    -------------------\n@@ -2598,15 +2604,15 @@ begin\n exception\n    when Error_Exit =>\n       if not Keep_Temporary_Files then\n-         Prj.Delete_All_Temp_Files (Project_Tree);\n+         Prj.Delete_All_Temp_Files (Project_Tree.Shared);\n          Delete_Temp_Config_Files;\n       end if;\n \n       Set_Exit_Status (Failure);\n \n    when Normal_Exit =>\n       if not Keep_Temporary_Files then\n-         Prj.Delete_All_Temp_Files (Project_Tree);\n+         Prj.Delete_All_Temp_Files (Project_Tree.Shared);\n          Delete_Temp_Config_Files;\n       end if;\n "}, {"sha": "1abc9d3fe31be0bab63c3ab5e377381b6514eb61", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -158,6 +158,10 @@ package body Make is\n    --  True if gnatmake is invoked with -f -u and one or several mains on the\n    --  command line.\n \n+   Project_Tree : constant Project_Tree_Ref :=\n+                    new Project_Tree_Data (Is_Root_Tree => True);\n+   --  The project tree\n+\n    Main_On_Command_Line : Boolean := False;\n    --  True if gnatmake is invoked with one or several mains on the command\n    --  line.\n@@ -2359,6 +2363,7 @@ package body Make is\n                                    new String'(Name_Buffer (1 .. Name_Len));\n                                  Test_If_Relative_Path\n                                    (New_Args (Last_New),\n+                                    Do_Fail => Make_Failed'Access,\n                                     Parent => Dir_Path,\n                                     Including_Non_Switch => False);\n                               end if;\n@@ -2392,6 +2397,7 @@ package body Make is\n                      begin\n                         Test_If_Relative_Path\n                           (New_Args (1),\n+                           Do_Fail              => Make_Failed'Access,\n                            Parent               => Dir_Path,\n                            Including_Non_Switch => False);\n                         Add_Arguments\n@@ -3968,7 +3974,7 @@ package body Make is\n    begin\n       if not Debug.Debug_Flag_N then\n          Delete_Temp_Config_Files;\n-         Prj.Delete_All_Temp_Files (Project_Tree);\n+         Prj.Delete_All_Temp_Files (Project_Tree.Shared);\n       end if;\n    end Delete_All_Temp_Files;\n \n@@ -3991,7 +3997,7 @@ package body Make is\n          while Proj /= null loop\n             if Proj.Project.Config_File_Temp then\n                Delete_Temporary_File\n-                 (Project_Tree, Proj.Project.Config_File_Name);\n+                 (Project_Tree.Shared, Proj.Project.Config_File_Name);\n \n                --  Make sure that we don't have a config file for this project,\n                --  in case there are several mains. In this case, we will\n@@ -5222,29 +5228,34 @@ package body Make is\n             for J in 1 .. Binder_Switches.Last loop\n                Test_If_Relative_Path\n                  (Binder_Switches.Table (J),\n+                  Do_Fail => Make_Failed'Access,\n                   Parent => Dir_Path, Including_L_Switch => False);\n             end loop;\n \n             for J in 1 .. Saved_Binder_Switches.Last loop\n                Test_If_Relative_Path\n                  (Saved_Binder_Switches.Table (J),\n+                  Do_Fail => Make_Failed'Access,\n                   Parent => Current_Work_Dir.all, Including_L_Switch => False);\n             end loop;\n \n             for J in 1 .. Linker_Switches.Last loop\n                Test_If_Relative_Path\n-                 (Linker_Switches.Table (J), Parent => Dir_Path);\n+                 (Linker_Switches.Table (J), Parent => Dir_Path,\n+                  Do_Fail => Make_Failed'Access);\n             end loop;\n \n             for J in 1 .. Saved_Linker_Switches.Last loop\n                Test_If_Relative_Path\n                  (Saved_Linker_Switches.Table (J),\n+                  Do_Fail => Make_Failed'Access,\n                   Parent => Current_Work_Dir.all);\n             end loop;\n \n             for J in 1 .. Gcc_Switches.Last loop\n                Test_If_Relative_Path\n                  (Gcc_Switches.Table (J),\n+                  Do_Fail => Make_Failed'Access,\n                   Parent               => Dir_Path,\n                   Including_Non_Switch => False);\n             end loop;\n@@ -5253,6 +5264,7 @@ package body Make is\n                Test_If_Relative_Path\n                  (Saved_Gcc_Switches.Table (J),\n                   Parent               => Current_Work_Dir.all,\n+                  Do_Fail => Make_Failed'Access,\n                   Including_Non_Switch => False);\n             end loop;\n          end;\n@@ -5945,7 +5957,7 @@ package body Make is\n                   --  If switch -C was specified, create a binder mapping file\n \n                   if Create_Mapping_File then\n-                     Mapping_Path := Create_Binder_Mapping_File;\n+                     Mapping_Path := Create_Binder_Mapping_File (Project_Tree);\n \n                      if Mapping_Path /= No_Path then\n                         Last_Arg := Last_Arg + 1;\n@@ -5966,7 +5978,8 @@ package body Make is\n                      --  Delete the temporary mapping file if one was created\n \n                      if Mapping_Path /= No_Path then\n-                        Delete_Temporary_File (Project_Tree, Mapping_Path);\n+                        Delete_Temporary_File\n+                           (Project_Tree.Shared, Mapping_Path);\n                      end if;\n \n                      --  And reraise the exception\n@@ -5978,7 +5991,7 @@ package body Make is\n                --  if one was created.\n \n                if Mapping_Path /= No_Path then\n-                  Delete_Temporary_File (Project_Tree, Mapping_Path);\n+                  Delete_Temporary_File (Project_Tree.Shared, Mapping_Path);\n                end if;\n             end Bind_Step;\n          end if;\n@@ -6203,7 +6216,9 @@ package body Make is\n                   declare\n                      Linker_Options : constant String_List :=\n                                         Linker_Options_Switches\n-                                          (Main_Project, Project_Tree);\n+                                          (Main_Project,\n+                                           Do_Fail => Make_Failed'Access,\n+                                           In_Tree => Project_Tree);\n                   begin\n                      for Option in Linker_Options'Range loop\n                         Linker_Switches.Increment_Last;\n@@ -6447,14 +6462,16 @@ package body Make is\n                      loop\n                         Test_If_Relative_Path\n                           (Binder_Switches.Table (J),\n+                           Do_Fail => Make_Failed'Access,\n                            Parent => Dir_Path, Including_L_Switch => False);\n                      end loop;\n \n                      for\n                        J in Last_Linker_Switch + 1 .. Linker_Switches.Last\n                      loop\n                         Test_If_Relative_Path\n-                          (Linker_Switches.Table (J), Parent => Dir_Path);\n+                          (Linker_Switches.Table (J), Parent => Dir_Path,\n+                           Do_Fail => Make_Failed'Access);\n                      end loop;\n                   end;\n \n@@ -6609,7 +6626,7 @@ package body Make is\n \n          else\n             Record_Temp_File\n-              (Project_Tree,\n+              (Project_Tree.Shared,\n                Data.Mapping_File_Names (Data.Last_Mapping_File_Names));\n          end if;\n \n@@ -8487,5 +8504,4 @@ begin\n \n    Prj.Com.Fail    := Make_Failed'Access;\n    MLib.Fail       := Make_Failed'Access;\n-   Makeutl.Do_Fail := Make_Failed'Access;\n end Make;"}, {"sha": "39a8c0d4fd9563dc0b238cbb840a656894ce5c71", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -204,8 +204,8 @@ package body Makeutl is\n    ------------------------------\n \n    function Check_Source_Info_In_ALI\n-     (The_ALI : ALI_Id;\n-      Tree    : Project_Tree_Ref) return Boolean\n+     (The_ALI      : ALI_Id;\n+      Tree         : Project_Tree_Ref) return Boolean\n    is\n       Unit_Name : Name_Id;\n \n@@ -221,7 +221,7 @@ package body Makeutl is\n          Name_Len  := Name_Len - 2;\n          Unit_Name := Name_Find;\n \n-         if File_Not_A_Source_Of (Unit_Name, Units.Table (U).Sfile) then\n+         if File_Not_A_Source_Of (Tree, Unit_Name, Units.Table (U).Sfile) then\n             return False;\n          end if;\n \n@@ -237,7 +237,7 @@ package body Makeutl is\n                   Name_Len  := Name_Len - 2;\n                   Unit_Name := Name_Find;\n \n-                  if File_Not_A_Source_Of (Unit_Name, WR.Sfile) then\n+                  if File_Not_A_Source_Of (Tree, Unit_Name, WR.Sfile) then\n                      return False;\n                   end if;\n                end if;\n@@ -289,7 +289,7 @@ package body Makeutl is\n                --  (and then will be for the same unit).\n \n                if Find_Source\n-                    (In_Tree   => Project_Tree,\n+                    (In_Tree   => Tree,\n                      Project   => No_Project,\n                      Base_Name => SD.Sfile) = No_Source\n                then\n@@ -326,7 +326,9 @@ package body Makeutl is\n    -- Create_Binder_Mapping_File --\n    --------------------------------\n \n-   function Create_Binder_Mapping_File return Path_Name_Type is\n+   function Create_Binder_Mapping_File\n+     (Project_Tree : Project_Tree_Ref) return Path_Name_Type\n+   is\n       Mapping_Path : Path_Name_Type := No_Path;\n \n       Mapping_FD : File_Descriptor := Invalid_FD;\n@@ -350,7 +352,7 @@ package body Makeutl is\n \n    begin\n       Tempdir.Create_Temp_File (Mapping_FD, Mapping_Path);\n-      Record_Temp_File (Project_Tree, Mapping_Path);\n+      Record_Temp_File (Project_Tree.Shared, Mapping_Path);\n \n       if Mapping_FD /= Invalid_FD then\n          OK := True;\n@@ -616,8 +618,9 @@ package body Makeutl is\n    --------------------------\n \n    function File_Not_A_Source_Of\n-     (Uname : Name_Id;\n-      Sfile : File_Name_Type) return Boolean\n+     (Project_Tree : Project_Tree_Ref;\n+      Uname        : Name_Id;\n+      Sfile        : File_Name_Type) return Boolean\n    is\n       Unit : constant Unit_Index :=\n                Units_Htable.Get (Project_Tree.Units_HT, Uname);\n@@ -908,6 +911,7 @@ package body Makeutl is\n \n    function Linker_Options_Switches\n      (Project  : Project_Id;\n+      Do_Fail  : Fail_Proc;\n       In_Tree  : Project_Tree_Ref) return String_List\n    is\n       procedure Recursive_Add\n@@ -995,6 +999,7 @@ package body Makeutl is\n                   Test_If_Relative_Path\n                     (Switch => Linker_Options_Buffer (Last_Linker_Option),\n                      Parent => Dir_Path,\n+                     Do_Fail => Do_Fail,\n                      Including_L_Switch => True);\n                end if;\n \n@@ -1176,6 +1181,7 @@ package body Makeutl is\n    procedure Test_If_Relative_Path\n      (Switch               : in out String_Access;\n       Parent               : String;\n+      Do_Fail              : Fail_Proc;\n       Including_L_Switch   : Boolean := True;\n       Including_Non_Switch : Boolean := True;\n       Including_RTS        : Boolean := False)"}, {"sha": "6e23e567c7e44503e632e995cdbdc070f0bf6499", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -23,28 +23,22 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This package contains various subprograms used by the builders, in\n+--  particular those subprograms related to project management and build\n+--  queue management.\n+\n with ALI;\n-with Namet; use Namet;\n+with GNAT.OS_Lib; use GNAT.OS_Lib;\n+with Namet;       use Namet;\n with Opt;\n-with Osint;\n-with Prj;   use Prj;\n+with Prj;         use Prj;\n with Prj.Tree;\n-with Types; use Types;\n-\n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n+with Types;       use Types;\n \n package Makeutl is\n \n    type Fail_Proc is access procedure (S : String);\n \n-   Do_Fail : Fail_Proc := Osint.Fail'Access;\n-   --  Failing procedure called from procedure Test_If_Relative_Path below. May\n-   --  be redirected.\n-\n-   Project_Tree : constant Project_Tree_Ref :=\n-                    new Project_Tree_Data (Is_Root_Tree => True);\n-   --  The project tree\n-\n    Source_Info_Option : constant String := \"--source-info=\";\n    --  Switch to indicate the source info file\n \n@@ -75,7 +69,8 @@ package Makeutl is\n       Last   : in out Natural);\n    --  Add a string to a list of strings\n \n-   function Create_Binder_Mapping_File return Path_Name_Type;\n+   function Create_Binder_Mapping_File\n+     (Project_Tree : Project_Tree_Ref) return Path_Name_Type;\n    --  Create a binder mapping file and returns its path name\n \n    function Create_Name (Name : String) return File_Name_Type;\n@@ -101,15 +96,16 @@ package Makeutl is\n    --  Prints out the program name followed by a colon, N and S\n \n    function File_Not_A_Source_Of\n-     (Uname : Name_Id;\n-      Sfile : File_Name_Type) return Boolean;\n+     (Project_Tree : Project_Tree_Ref;\n+      Uname        : Name_Id;\n+      Sfile        : File_Name_Type) return Boolean;\n    --  Check that file name Sfile is one of the source of unit Uname. Returns\n    --  True if the unit is in one of the project file, but the file name is not\n    --  one of its source. Returns False otherwise.\n \n    function Check_Source_Info_In_ALI\n-     (The_ALI : ALI.ALI_Id;\n-      Tree    : Project_Tree_Ref) return Boolean;\n+     (The_ALI      : ALI.ALI_Id;\n+      Tree         : Project_Tree_Ref) return Boolean;\n    --  Check whether all file references in ALI are still valid (i.e. the\n    --  source files are still associated with the same units). Return True\n    --  if everything is still valid.\n@@ -179,6 +175,7 @@ package Makeutl is\n \n    function Linker_Options_Switches\n      (Project  : Project_Id;\n+      Do_Fail  : Fail_Proc;\n       In_Tree  : Project_Tree_Ref) return String_List;\n    --  Collect the options specified in the Linker'Linker_Options attributes\n    --  of project Project, in project tree In_Tree, and in the projects that\n@@ -191,6 +188,7 @@ package Makeutl is\n    procedure Test_If_Relative_Path\n      (Switch               : in out String_Access;\n       Parent               : String;\n+      Do_Fail              : Fail_Proc;\n       Including_L_Switch   : Boolean := True;\n       Including_Non_Switch : Boolean := True;\n       Including_RTS        : Boolean := False);\n@@ -200,6 +198,8 @@ package Makeutl is\n    --  switches, Including_L_Switch is False, because the argument of the -L\n    --  switch is not a path. If Including_RTS is True, process also switches\n    --  --RTS=.\n+   --  Do_Fail is called in case of error. Using Osing.Fail might be\n+   --  appropriate.\n \n    function Path_Or_File_Name (Path : Path_Name_Type) return String;\n    --  Returns a file name if -df is used, otherwise return a path name"}, {"sha": "1e0e87eab7de11f5b277d214b41519064b05f9d2", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -987,7 +987,7 @@ package body Prj.Conf is\n \n                   begin\n                      Prj.Env.Create_Temp_File\n-                       (In_Tree   => Project_Tree,\n+                       (Shared    => Project_Tree.Shared,\n                         Path_FD   => Path_FD,\n                         Path_Name => Path_Name,\n                         File_Use  => \"configuration file\");"}, {"sha": "58f1ec8c57f09958e4e28b5bfd515bf197ff02a3", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -901,7 +901,7 @@ package body Prj.Env is\n    --  Start of processing for Create_Mapping_File\n \n    begin\n-      Create_Temp_File (In_Tree, File, Name, \"mapping\");\n+      Create_Temp_File (In_Tree.Shared, File, Name, \"mapping\");\n \n       if Current_Verbosity = High then\n          Debug_Increase_Indent (\"Create mapping file \", Name_Id (Name));\n@@ -937,7 +937,7 @@ package body Prj.Env is\n    ----------------------\n \n    procedure Create_Temp_File\n-     (In_Tree   : Project_Tree_Ref;\n+     (Shared    : Shared_Project_Tree_Data_Access;\n       Path_FD   : out File_Descriptor;\n       Path_Name : out Path_Name_Type;\n       File_Use  : String)\n@@ -951,7 +951,7 @@ package body Prj.Env is\n                         & Get_Name_String (Path_Name));\n          end if;\n \n-         Record_Temp_File (In_Tree, Path_Name);\n+         Record_Temp_File (Shared, Path_Name);\n \n       else\n          Prj.Com.Fail\n@@ -964,12 +964,12 @@ package body Prj.Env is\n    --------------------------\n \n    procedure Create_New_Path_File\n-     (In_Tree   : Project_Tree_Ref;\n+     (Shared    : Shared_Project_Tree_Data_Access;\n       Path_FD   : out File_Descriptor;\n       Path_Name : out Path_Name_Type)\n    is\n    begin\n-      Create_Temp_File (In_Tree, Path_FD, Path_Name, \"path file\");\n+      Create_Temp_File (Shared, Path_FD, Path_Name, \"path file\");\n    end Create_New_Path_File;\n \n    ------------------------------------\n@@ -1392,8 +1392,8 @@ package body Prj.Env is\n \n    procedure Initialize (In_Tree : Project_Tree_Ref) is\n    begin\n-      In_Tree.Private_Part.Current_Source_Path_File := No_Path;\n-      In_Tree.Private_Part.Current_Object_Path_File := No_Path;\n+      In_Tree.Shared.Private_Part.Current_Source_Path_File := No_Path;\n+      In_Tree.Shared.Private_Part.Current_Object_Path_File := No_Path;\n    end Initialize;\n \n    -------------------\n@@ -1573,6 +1573,8 @@ package body Prj.Env is\n       Objects_Path        : Boolean := True)\n \n    is\n+      Shared : constant Shared_Project_Tree_Data_Access := In_Tree.Shared;\n+\n       Source_Paths : Source_Path_Table.Instance;\n       Object_Paths : Object_Path_Table.Instance;\n       --  List of source or object dirs. Only computed the first time this\n@@ -1609,7 +1611,7 @@ package body Prj.Env is\n          In_Tree : Project_Tree_Ref;\n          Dummy   : in out Boolean)\n       is\n-         pragma Unreferenced (Dummy);\n+         pragma Unreferenced (Dummy, In_Tree);\n \n          Path : Path_Name_Type;\n \n@@ -1622,8 +1624,7 @@ package body Prj.Env is\n             --  Ada sources.\n \n             if Has_Ada_Sources (Project) then\n-               Add_To_Source_Path\n-                 (Project.Source_Dirs, In_Tree.Shared, Source_Paths);\n+               Add_To_Source_Path (Project.Source_Dirs, Shared, Source_Paths);\n             end if;\n          end if;\n \n@@ -1653,8 +1654,7 @@ package body Prj.Env is\n       if Include_Path and then Project.Include_Path_File = No_Path then\n          Source_Path_Table.Init (Source_Paths);\n          Process_Source_Dirs := True;\n-         Create_New_Path_File\n-           (In_Tree, Source_FD, Project.Include_Path_File);\n+         Create_New_Path_File (Shared, Source_FD, Project.Include_Path_File);\n       end if;\n \n       --  For the object path, we make a distinction depending on\n@@ -1665,15 +1665,15 @@ package body Prj.Env is\n             Object_Path_Table.Init (Object_Paths);\n             Process_Object_Dirs := True;\n             Create_New_Path_File\n-              (In_Tree, Object_FD, Project.Objects_Path_File_With_Libs);\n+              (Shared, Object_FD, Project.Objects_Path_File_With_Libs);\n          end if;\n \n       elsif Objects_Path then\n          if Project.Objects_Path_File_Without_Libs = No_Path then\n             Object_Path_Table.Init (Object_Paths);\n             Process_Object_Dirs := True;\n             Create_New_Path_File\n-              (In_Tree, Object_FD, Project.Objects_Path_File_Without_Libs);\n+              (Shared, Object_FD, Project.Objects_Path_File_Without_Libs);\n          end if;\n       end if;\n \n@@ -1743,39 +1743,39 @@ package body Prj.Env is\n       --  corresponding flags.\n \n       if Include_Path and then\n-         In_Tree.Private_Part.Current_Source_Path_File /=\n-           Project.Include_Path_File\n+        Shared.Private_Part.Current_Source_Path_File /=\n+          Project.Include_Path_File\n       then\n-         In_Tree.Private_Part.Current_Source_Path_File :=\n+         Shared.Private_Part.Current_Source_Path_File :=\n            Project.Include_Path_File;\n          Set_Path_File_Var\n            (Project_Include_Path_File,\n-            Get_Name_String (In_Tree.Private_Part.Current_Source_Path_File));\n+            Get_Name_String (Shared.Private_Part.Current_Source_Path_File));\n       end if;\n \n       if Objects_Path then\n          if Including_Libraries then\n-            if In_Tree.Private_Part.Current_Object_Path_File /=\n+            if Shared.Private_Part.Current_Object_Path_File /=\n               Project.Objects_Path_File_With_Libs\n             then\n-               In_Tree.Private_Part.Current_Object_Path_File :=\n+               Shared.Private_Part.Current_Object_Path_File :=\n                  Project.Objects_Path_File_With_Libs;\n                Set_Path_File_Var\n                  (Project_Objects_Path_File,\n                   Get_Name_String\n-                    (In_Tree.Private_Part.Current_Object_Path_File));\n+                    (Shared.Private_Part.Current_Object_Path_File));\n             end if;\n \n          else\n-            if In_Tree.Private_Part.Current_Object_Path_File /=\n+            if Shared.Private_Part.Current_Object_Path_File /=\n               Project.Objects_Path_File_Without_Libs\n             then\n-               In_Tree.Private_Part.Current_Object_Path_File :=\n+               Shared.Private_Part.Current_Object_Path_File :=\n                  Project.Objects_Path_File_Without_Libs;\n                Set_Path_File_Var\n                  (Project_Objects_Path_File,\n                   Get_Name_String\n-                    (In_Tree.Private_Part.Current_Object_Path_File));\n+                    (Shared.Private_Part.Current_Object_Path_File));\n             end if;\n          end if;\n       end if;"}, {"sha": "fd14a4a3c3dba75707beba6ed6847d3f0ca95504", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -43,7 +43,7 @@ package Prj.Env is\n    --  corresponding to a source.\n \n    procedure Create_Temp_File\n-     (In_Tree   : Project_Tree_Ref;\n+     (Shared    : Shared_Project_Tree_Data_Access;\n       Path_FD   : out File_Descriptor;\n       Path_Name : out Path_Name_Type;\n       File_Use  : String);\n@@ -71,7 +71,7 @@ package Prj.Env is\n    --  individual units.\n \n    procedure Create_New_Path_File\n-     (In_Tree   : Project_Tree_Ref;\n+     (Shared    : Shared_Project_Tree_Data_Access;\n       Path_FD   : out File_Descriptor;\n       Path_Name : out Path_Name_Type);\n    --  Create a new temporary path file, placing file name in Path_Name"}, {"sha": "b9c9402e7eb621959be6b4de2ec1eff869d16b9b", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 32, "deletions": 30, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -118,8 +118,8 @@ package body Prj is\n    ---------------------------\n \n    procedure Delete_Temporary_File\n-     (Tree : Project_Tree_Ref;\n-      Path : Path_Name_Type)\n+     (Shared : Shared_Project_Tree_Data_Access := null;\n+      Path   : Path_Name_Type)\n    is\n       Dont_Care : Boolean;\n       pragma Warnings (Off, Dont_Care);\n@@ -132,21 +132,25 @@ package body Prj is\n \n          Delete_File (Get_Name_String (Path), Dont_Care);\n \n-         for Index in\n-           1 .. Temp_Files_Table.Last (Tree.Private_Part.Temp_Files)\n-         loop\n-            if Tree.Private_Part.Temp_Files.Table (Index) = Path then\n-               Tree.Private_Part.Temp_Files.Table (Index) := No_Path;\n-            end if;\n-         end loop;\n+         if Shared /= null then\n+            for Index in\n+              1 .. Temp_Files_Table.Last (Shared.Private_Part.Temp_Files)\n+            loop\n+               if Shared.Private_Part.Temp_Files.Table (Index) = Path then\n+                  Shared.Private_Part.Temp_Files.Table (Index) := No_Path;\n+               end if;\n+            end loop;\n+         end if;\n       end if;\n    end Delete_Temporary_File;\n \n    ---------------------------\n    -- Delete_All_Temp_Files --\n    ---------------------------\n \n-   procedure Delete_All_Temp_Files (Tree : Project_Tree_Ref) is\n+   procedure Delete_All_Temp_Files\n+     (Shared : Shared_Project_Tree_Data_Access)\n+   is\n       Dont_Care : Boolean;\n       pragma Warnings (Off, Dont_Care);\n \n@@ -155,9 +159,9 @@ package body Prj is\n    begin\n       if not Debug.Debug_Flag_N then\n          for Index in\n-           1 .. Temp_Files_Table.Last (Tree.Private_Part.Temp_Files)\n+           1 .. Temp_Files_Table.Last (Shared.Private_Part.Temp_Files)\n          loop\n-            Path := Tree.Private_Part.Temp_Files.Table (Index);\n+            Path := Shared.Private_Part.Temp_Files.Table (Index);\n \n             if Path /= No_Path then\n                if Current_Verbosity = High then\n@@ -169,20 +173,20 @@ package body Prj is\n             end if;\n          end loop;\n \n-         Temp_Files_Table.Free (Tree.Private_Part.Temp_Files);\n-         Temp_Files_Table.Init (Tree.Private_Part.Temp_Files);\n+         Temp_Files_Table.Free (Shared.Private_Part.Temp_Files);\n+         Temp_Files_Table.Init (Shared.Private_Part.Temp_Files);\n       end if;\n \n       --  If any of the environment variables ADA_PRJ_INCLUDE_FILE or\n       --  ADA_PRJ_OBJECTS_FILE has been set, then reset their value to\n       --  the empty string. On VMS, this has the effect of deassigning\n       --  the logical names.\n \n-      if Tree.Private_Part.Current_Source_Path_File /= No_Path then\n+      if Shared.Private_Part.Current_Source_Path_File /= No_Path then\n          Setenv (Project_Include_Path_File, \"\");\n       end if;\n \n-      if Tree.Private_Part.Current_Object_Path_File /= No_Path then\n+      if Shared.Private_Part.Current_Object_Path_File /= No_Path then\n          Setenv (Project_Objects_Path_File, \"\");\n       end if;\n    end Delete_All_Temp_Files;\n@@ -712,11 +716,11 @@ package body Prj is\n    ----------------------\n \n    procedure Record_Temp_File\n-     (Tree : Project_Tree_Ref;\n-      Path : Path_Name_Type)\n+     (Shared : Shared_Project_Tree_Data_Access;\n+      Path   : Path_Name_Type)\n    is\n    begin\n-      Temp_Files_Table.Append (Tree.Private_Part.Temp_Files, Path);\n+      Temp_Files_Table.Append (Shared.Private_Part.Temp_Files, Path);\n    end Record_Temp_File;\n \n    ----------\n@@ -914,6 +918,8 @@ package body Prj is\n             Array_Element_Table.Free (Tree.Shared.Array_Elements);\n             Array_Table.Free (Tree.Shared.Arrays);\n             Package_Table.Free (Tree.Shared.Packages);\n+\n+            Temp_Files_Table.Free (Tree.Shared.Private_Part.Temp_Files);\n          end if;\n \n          Source_Paths_Htable.Reset (Tree.Source_Paths_HT);\n@@ -922,10 +928,6 @@ package body Prj is\n          Free_List (Tree.Projects, Free_Project => True);\n          Free_Units (Tree.Units_HT);\n \n-         --  Private part\n-\n-         Temp_Files_Table.Free  (Tree.Private_Part.Temp_Files);\n-\n          Unchecked_Free (Tree);\n       end if;\n    end Free;\n@@ -953,6 +955,13 @@ package body Prj is\n          Array_Element_Table.Init    (Tree.Shared.Array_Elements);\n          Array_Table.Init            (Tree.Shared.Arrays);\n          Package_Table.Init          (Tree.Shared.Packages);\n+\n+         --  Private part table\n+\n+         Temp_Files_Table.Init (Tree.Shared.Private_Part.Temp_Files);\n+\n+         Tree.Shared.Private_Part.Current_Source_Path_File := No_Path;\n+         Tree.Shared.Private_Part.Current_Object_Path_File := No_Path;\n       end if;\n \n       Source_Paths_Htable.Reset    (Tree.Source_Paths_HT);\n@@ -963,13 +972,6 @@ package body Prj is\n \n       Free_List (Tree.Projects, Free_Project => True);\n       Free_Units (Tree.Units_HT);\n-\n-      --  Private part table\n-\n-      Temp_Files_Table.Init (Tree.Private_Part.Temp_Files);\n-\n-      Tree.Private_Part.Current_Source_Path_File := No_Path;\n-      Tree.Private_Part.Current_Object_Path_File := No_Path;\n    end Reset;\n \n    -------------------"}, {"sha": "43adbe4633c1d262a23151ec39bdd0b6c2683a26", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -1409,6 +1409,8 @@ package Prj is\n       Array_Elements    : Array_Element_Table.Instance;\n       Arrays            : Array_Table.Instance;\n       Packages          : Package_Table.Instance;\n+\n+      Private_Part      : Private_Project_Tree_Data;\n    end record;\n    type Shared_Project_Tree_Data_Access is access all Shared_Project_Tree_Data;\n    --  The data that is shared among multiple trees, when these trees are\n@@ -1451,8 +1453,6 @@ package Prj is\n       Source_Info_File_Exists : Boolean := False;\n       --  True when a source info file has been successfully read\n \n-      Private_Part : Private_Project_Tree_Data;\n-\n       Shared : Shared_Project_Tree_Data_Access;\n       --  The shared data for this tree and all aggregated trees.\n \n@@ -1638,18 +1638,19 @@ package Prj is\n    ----------------\n \n    procedure Record_Temp_File\n-     (Tree : Project_Tree_Ref;\n-      Path : Path_Name_Type);\n+     (Shared : Shared_Project_Tree_Data_Access;\n+      Path   : Path_Name_Type);\n    --  Record the path of a newly created temporary file, so that it can be\n    --  deleted later.\n \n-   procedure Delete_All_Temp_Files (Tree : Project_Tree_Ref);\n+   procedure Delete_All_Temp_Files\n+     (Shared : Shared_Project_Tree_Data_Access);\n    --  Delete all recorded temporary files.\n    --  Does nothing if Debug.Debug_Flag_N is set\n \n    procedure Delete_Temporary_File\n-     (Tree : Project_Tree_Ref;\n-      Path : Path_Name_Type);\n+     (Shared : Shared_Project_Tree_Data_Access := null;\n+      Path   : Path_Name_Type);\n    --  Delete a temporary file from the disk. The file is also removed from the\n    --  list of temporary files to delete at the end of the program, in case\n    --  another program running on the same machine has recreated it."}, {"sha": "164034ec8819d66917e969f45fc3930ef328199f", "filename": "gcc/ada/s-taprop-hpux-dce.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-hpux-dce.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -84,9 +84,6 @@ package body System.Task_Primitives.Operations is\n    --  a time; it is used to execute in mutual exclusion from all other tasks.\n    --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n \n-   ATCB_Key : aliased pthread_key_t;\n-   --  Key used to find the Ada Task_Id associated with a thread\n-\n    Environment_Task_Id : Task_Id;\n    --  A variable to hold Task_Id for the environment task\n "}, {"sha": "3e0b9ab7cd3ab4dfe97e0bacb903b2317987c9e1", "filename": "gcc/ada/s-taprop-irix.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fs-taprop-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fs-taprop-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-irix.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,9 +78,6 @@ package body System.Task_Primitives.Operations is\n    --  a time; it is used to execute in mutual exclusion from all other tasks.\n    --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n \n-   ATCB_Key : aliased pthread_key_t;\n-   --  Key used to find the Ada Task_Id associated with a thread\n-\n    Environment_Task_Id : Task_Id;\n    --  A variable to hold Task_Id for the environment task\n "}, {"sha": "5c1770bd8a3966add04c7b423f65ad47de9430b2", "filename": "gcc/ada/s-taprop-vms.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fs-taprop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c99a5a376eb0b8b601fc02dec9eeacf5086196/gcc%2Fada%2Fs-taprop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vms.adb?ref=98c99a5a376eb0b8b601fc02dec9eeacf5086196", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2011, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -72,9 +72,6 @@ package body System.Task_Primitives.Operations is\n    --  a time; it is used to execute in mutual exclusion from all other tasks.\n    --  Used mainly in Single_Lock mode, but also to protect All_Tasks_List\n \n-   ATCB_Key : aliased pthread_key_t;\n-   --  Key used to find the Ada Task_Id associated with a thread\n-\n    Environment_Task_Id : Task_Id;\n    --  A variable to hold Task_Id for the environment task\n "}]}