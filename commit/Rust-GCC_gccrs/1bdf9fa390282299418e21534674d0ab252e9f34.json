{"sha": "1bdf9fa390282299418e21534674d0ab252e9f34", "node_id": "C_kwDOANBUbNoAKDFiZGY5ZmEzOTAyODIyOTk0MThlMjE1MzQ2NzRkMGFiMjUyZTlmMzQ", "commit": {"author": {"name": "Joel Brobecker", "email": "brobecker@adacore.com", "date": "2022-03-11T03:39:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-16T08:42:05Z"}, "message": "[Ada] sigaction result not properly checked in __gnat_install_handler (QNX)\n\nThe QNX version of __gnat_install_handler calls sigaction for a number\nof signals, and then prints an error message when the the call failed.\nBut unfortunately, except for the first call, we forgot to store\nsigaction's return value, so the check that ensues uses a potentially\nuninitialized variable, which the compiler does detect (this is how we\nfound this issue).\n\nThis change fixes this by make sure we store the result of each\nsigaction call before checking it.\n\nWhile at it, we noticed a thinko in the error messages all alerting\nabout the SIGFPE signal, rather than the signal it just tested.  Most\nlikely a copy/paste thinko. Fixed by this change as well.\n\ngcc/ada/\n\n\t* init.c (__gnat_install_handler) [__QNX__]: Save sigaction's\n\treturn value in err before checking err's value.  Fix incorrect\n\tsignal names in perror messages.", "tree": {"sha": "02ff1961a5bac943712a12ac88dd423e8766b565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02ff1961a5bac943712a12ac88dd423e8766b565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bdf9fa390282299418e21534674d0ab252e9f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdf9fa390282299418e21534674d0ab252e9f34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bdf9fa390282299418e21534674d0ab252e9f34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdf9fa390282299418e21534674d0ab252e9f34/comments", "author": {"login": "brobecke", "id": 11981700, "node_id": "MDQ6VXNlcjExOTgxNzAw", "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brobecke", "html_url": "https://github.com/brobecke", "followers_url": "https://api.github.com/users/brobecke/followers", "following_url": "https://api.github.com/users/brobecke/following{/other_user}", "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}", "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions", "organizations_url": "https://api.github.com/users/brobecke/orgs", "repos_url": "https://api.github.com/users/brobecke/repos", "events_url": "https://api.github.com/users/brobecke/events{/privacy}", "received_events_url": "https://api.github.com/users/brobecke/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "839e7f16abda3fd8bd46d59ff1521d402d328a24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839e7f16abda3fd8bd46d59ff1521d402d328a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/839e7f16abda3fd8bd46d59ff1521d402d328a24"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "89f16a176d3b6ca4250c22ceea3f88040c8ad97b", "filename": "gcc/ada/init.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdf9fa390282299418e21534674d0ab252e9f34/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdf9fa390282299418e21534674d0ab252e9f34/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=1bdf9fa390282299418e21534674d0ab252e9f34", "patch": "@@ -2625,26 +2625,26 @@ __gnat_install_handler (void)\n     }\n   }\n   if (__gnat_get_interrupt_state (SIGILL) != 's') {\n-    sigaction (SIGILL,  &act, NULL);\n+    err = sigaction (SIGILL,  &act, NULL);\n     if (err == -1) {\n       err = errno;\n-      perror (\"error while attaching SIGFPE\");\n+      perror (\"error while attaching SIGILL\");\n       perror (strerror (err));\n     }\n   }\n   if (__gnat_get_interrupt_state (SIGSEGV) != 's') {\n-    sigaction (SIGSEGV, &act, NULL);\n+    err = sigaction (SIGSEGV, &act, NULL);\n     if (err == -1) {\n       err = errno;\n-      perror (\"error while attaching SIGFPE\");\n+      perror (\"error while attaching SIGSEGV\");\n       perror (strerror (err));\n     }\n   }\n   if (__gnat_get_interrupt_state (SIGBUS) != 's') {\n-    sigaction (SIGBUS,  &act, NULL);\n+    err = sigaction (SIGBUS,  &act, NULL);\n     if (err == -1) {\n       err = errno;\n-      perror (\"error while attaching SIGFPE\");\n+      perror (\"error while attaching SIGBUS\");\n       perror (strerror (err));\n     }\n   }"}]}