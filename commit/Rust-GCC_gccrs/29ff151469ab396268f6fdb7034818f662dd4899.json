{"sha": "29ff151469ab396268f6fdb7034818f662dd4899", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlmZjE1MTQ2OWFiMzk2MjY4ZjZmZGI3MDM0ODE4ZjY2MmRkNDg5OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-25T19:14:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-25T19:14:33Z"}, "message": "(save_for_inline_nocopy): Remove decls of unused vars.\n\n(expand_inline_function): Remove two block-scope decls of unused variable COPY.\n\nFrom-SVN: r6887", "tree": {"sha": "6a44fb17f224ab9f7b2ac9a98323dbb124c2bb38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a44fb17f224ab9f7b2ac9a98323dbb124c2bb38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29ff151469ab396268f6fdb7034818f662dd4899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ff151469ab396268f6fdb7034818f662dd4899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ff151469ab396268f6fdb7034818f662dd4899", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ff151469ab396268f6fdb7034818f662dd4899/comments", "author": null, "committer": null, "parents": [{"sha": "2049526b765b6838efa5ae8ca4240df491af86b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2049526b765b6838efa5ae8ca4240df491af86b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2049526b765b6838efa5ae8ca4240df491af86b3"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "adc457feca2ad9dfe6803c63cf1bcfe1dd0077ae", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29ff151469ab396268f6fdb7034818f662dd4899/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29ff151469ab396268f6fdb7034818f662dd4899/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=29ff151469ab396268f6fdb7034818f662dd4899", "patch": "@@ -700,13 +700,8 @@ save_for_inline_nocopy (fndecl)\n      tree fndecl;\n {\n   rtx insn;\n-  rtx head, copy;\n-  tree parms;\n-  int max_labelno, min_labelno, i, len;\n-  int max_reg;\n-  int max_uid;\n+  rtx head;\n   rtx first_nonparm_insn;\n-  int function_flags;\n \n   /* Set up PARMDECL_MAP which maps pseudo-reg number to its PARM_DECL.\n      Later we set TREE_READONLY to 0 if the parm is modified inside the fn.\n@@ -1237,8 +1232,6 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n       tree arg = convert (TREE_TYPE (formal), TREE_VALUE (actual));\n       /* Mode of the variable used within the function.  */\n       enum machine_mode mode = TYPE_MODE (TREE_TYPE (formal));\n-      /* Where parameter is located in the function.  */\n-      rtx copy;\n \n       /* Make sure this formal has some correspondence in the users code\n        * before emitting any line notes for it.  */\n@@ -1508,8 +1501,6 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n   for (formal = DECL_ARGUMENTS (fndecl), i = 0;\n        formal; formal = TREE_CHAIN (formal), i++)\n     {\n-      rtx copy = arg_vals[i];\n-\n       loc = RTVEC_ELT (arg_vector, i);\n \n       if (GET_CODE (loc) == MEM"}]}