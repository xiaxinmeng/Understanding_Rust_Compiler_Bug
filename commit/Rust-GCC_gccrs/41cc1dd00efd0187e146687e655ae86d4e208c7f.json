{"sha": "41cc1dd00efd0187e146687e655ae86d4e208c7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjYzFkZDAwZWZkMDE4N2UxNDY2ODdlNjU1YWU4NmQ0ZTIwOGM3Zg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-12-15T10:34:46Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-12-15T10:34:46Z"}, "message": "re PR fortran/63674 ([F03] procedure pointer and non/pure procedure)\n\n2014-12-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/63674\n\t* resolve.c (check_pure_function): Rewording in error message.\n\n\n2014-12-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/63674\n\t* gfortran.dg/forall_5.f90: Modified error message.\n\t* gfortran.dg/proc_ptr_comp_39.f90: Ditto.\n\t* gfortran.dg/pure_dummy_length_1.f90: Ditto.\n\t* gfortran.dg/stfunc_6.f90: Ditto.\n\t* gfortran.dg/typebound_operator_4.f90: Ditto.\n\nFrom-SVN: r218738", "tree": {"sha": "4c4cf4ce38b9c72ff9bcc5c976a8ac38c101b8a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c4cf4ce38b9c72ff9bcc5c976a8ac38c101b8a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41cc1dd00efd0187e146687e655ae86d4e208c7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41cc1dd00efd0187e146687e655ae86d4e208c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41cc1dd00efd0187e146687e655ae86d4e208c7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41cc1dd00efd0187e146687e655ae86d4e208c7f/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "952e78198dca941aa86d1c3555c01379020dfa2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952e78198dca941aa86d1c3555c01379020dfa2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/952e78198dca941aa86d1c3555c01379020dfa2d"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "8b10a4864925ff6c9a76ed9c25349cac151409f9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=41cc1dd00efd0187e146687e655ae86d4e208c7f", "patch": "@@ -1,3 +1,8 @@\n+2014-12-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/63674\n+\t* resolve.c (check_pure_function): Rewording in error message.\n+\n 2014-12-14  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/63674"}, {"sha": "fec36c9cdfa7c9f820fed10376866152d5d933f6", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=41cc1dd00efd0187e146687e655ae86d4e208c7f", "patch": "@@ -2808,7 +2808,7 @@ pure_stmt_function (gfc_expr *e, gfc_symbol *sym)\n }\n \n \n-/* Check if a non-pure function function is allowed in the current context. */\n+/* Check if an impure function is allowed in the current context. */\n \n static bool check_pure_function (gfc_expr *e)\n {\n@@ -2817,21 +2817,21 @@ static bool check_pure_function (gfc_expr *e)\n     {\n       if (forall_flag)\n \t{\n-\t  gfc_error (\"Reference to non-PURE function %qs at %L inside a \"\n+\t  gfc_error (\"Reference to impure function %qs at %L inside a \"\n \t\t     \"FORALL %s\", name, &e->where,\n \t\t     forall_flag == 2 ? \"mask\" : \"block\");\n \t  return false;\n \t}\n       else if (gfc_do_concurrent_flag)\n \t{\n-\t  gfc_error (\"Reference to non-PURE function %qs at %L inside a \"\n+\t  gfc_error (\"Reference to impure function %qs at %L inside a \"\n \t\t     \"DO CONCURRENT %s\", name, &e->where,\n \t\t     gfc_do_concurrent_flag == 2 ? \"mask\" : \"block\");\n \t  return false;\n \t}\n       else if (gfc_pure (NULL))\n \t{\n-\t  gfc_error (\"Reference to non-PURE function %qs at %L \"\n+\t  gfc_error (\"Reference to impure function %qs at %L \"\n \t\t     \"within a PURE procedure\", name, &e->where);\n \t  return false;\n \t}"}, {"sha": "9a0df0582453c4f1493728f84cfda19abd12ab4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41cc1dd00efd0187e146687e655ae86d4e208c7f", "patch": "@@ -1,3 +1,12 @@\n+2014-12-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/63674\n+\t* gfortran.dg/forall_5.f90: Modified error message.\n+\t* gfortran.dg/proc_ptr_comp_39.f90: Ditto.\n+\t* gfortran.dg/pure_dummy_length_1.f90: Ditto.\n+\t* gfortran.dg/stfunc_6.f90: Ditto.\n+\t* gfortran.dg/typebound_operator_4.f90: Ditto.\n+\n 2014-12-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/64284"}, {"sha": "55491f5bd450ae76a92412a83cc7a9f0f1e9b79f", "filename": "gcc/testsuite/gfortran.dg/forall_5.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fforall_5.f90?ref=41cc1dd00efd0187e146687e655ae86d4e208c7f", "patch": "@@ -18,14 +18,14 @@ end module foo\n   logical :: s(n)\n \n   a = 0\n-  forall (i=1:n, foot (i)) a(i) = i  ! { dg-error \"non-PURE\" }\n+  forall (i=1:n, foot (i)) a(i) = i  ! { dg-error \"impure\" }\n   if (any (a .ne. (/0,2,3,0/))) call abort ()\n \n-  forall (i=1:n, s (i) .or. t(i)) a(i) = i  ! { dg-error \"non-PURE|LOGICAL\" }\n+  forall (i=1:n, s (i) .or. t(i)) a(i) = i  ! { dg-error \"impure|LOGICAL\" }\n   if (any (a .ne. (/0,3,2,1/))) call abort ()\n \n   a = 0\n-  forall (i=1:n, mod (i, 2) == 0) a(i) = w (i)  ! { dg-error \"non-PURE\" }\n+  forall (i=1:n, mod (i, 2) == 0) a(i) = w (i)  ! { dg-error \"impure\" }\n   if (any (a .ne. (/0,2,0,4/))) call abort ()\n \n contains"}, {"sha": "8294ddcc1bfcbf869c4a72c1d7b4ceb583fdf96b", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_39.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_39.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_39.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_39.f90?ref=41cc1dd00efd0187e146687e655ae86d4e208c7f", "patch": "@@ -25,7 +25,7 @@ pure subroutine ps()\n   pure integer function eval(a)\n     type(t), intent(in) :: a\n     eval = a%pf()\n-    eval = a%nf()   ! { dg-error \"Reference to non-PURE function\" }\n+    eval = a%nf()   ! { dg-error \"Reference to impure function\" }\n     call a%ps()\n     call a%ns()     ! { dg-error \"is not PURE\" }\n   end function"}, {"sha": "407780ddbe2d06f64abbf1c2646d784f5a2ef37e", "filename": "gcc/testsuite/gfortran.dg/pure_dummy_length_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_dummy_length_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_dummy_length_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_dummy_length_1.f90?ref=41cc1dd00efd0187e146687e655ae86d4e208c7f", "patch": "@@ -24,6 +24,6 @@ pure function purity(self, string, ignore_case) result(same)\n          character(*), intent(in) :: string\r\n          integer(4), intent(in) :: ignore_case\r\n          integer i\r\n-         if (end > impure (self)) & ! { dg-error \"non-PURE function\" }\r\n+         if (end > impure (self)) & ! { dg-error \"impure function\" }\r\n            return\r\n    end function\r"}, {"sha": "37137fb41f8bb9570b2bc3c76311bcd631dcb856", "filename": "gcc/testsuite/gfortran.dg/stfunc_6.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstfunc_6.f90?ref=41cc1dd00efd0187e146687e655ae86d4e208c7f", "patch": "@@ -17,12 +17,12 @@\n   FORALL(i=1:4) a(i) = u (a(i)) - a(i)** 2 \n   if (any (a .ne. 0)) call abort ()\n   if (i .ne. 99) call abort ()\n-  FORALL (i=1:4) a(i) = st3 (i) ! { dg-error \"non-PURE function\" \"non-PURE reference in FORALL\" { xfail *-*-*} }\n-  FORALL (i=1:4) a(i) = v(i) ! { dg-error \"non-PURE function\" }\n+  FORALL (i=1:4) a(i) = st3 (i) ! { dg-error \"impure function\" \"impure reference in FORALL\" { xfail *-*-*} }\n+  FORALL (i=1:4) a(i) = v(i) ! { dg-error \"impure function\" }\n contains\n   pure integer function u (x)\n     integer,intent(in) :: x\n-    st2 (i) = i * v(i) ! { dg-error \"non-PURE function\" }\n+    st2 (i) = i * v(i) ! { dg-error \"impure function\" }\n     u = st2(x)\n   end function\n   integer function v (x)"}, {"sha": "f9a2612530ce34d843c4157681e567df4b728f4a", "filename": "gcc/testsuite/gfortran.dg/typebound_operator_4.f03", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41cc1dd00efd0187e146687e655ae86d4e208c7f/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_4.f03?ref=41cc1dd00efd0187e146687e655ae86d4e208c7f", "patch": "@@ -63,8 +63,8 @@ PURE SUBROUTINE iampure ()\n     TYPE(myint) :: x\n \n     x = 0 ! { dg-bogus \"is not PURE\" }\n-    x = x + 42 ! { dg-bogus \"to a non-PURE procedure\" }\n-    x = x .PLUS. 5 ! { dg-bogus \"to a non-PURE procedure\" }\n+    x = x + 42 ! { dg-bogus \"to a impure procedure\" }\n+    x = x .PLUS. 5 ! { dg-bogus \"to a impure procedure\" }\n   END SUBROUTINE iampure\n \n END MODULE m\n@@ -75,8 +75,8 @@ PURE SUBROUTINE iampure2 ()\n   TYPE(myreal) :: x\n \n   x = 0.0 ! { dg-error \"is not PURE\" }\n-  x = x + 42.0 ! { dg-error \"non-PURE function\" }\n-  x = x .PLUS. 5.0 ! { dg-error \"non-PURE function\" }\n+  x = x + 42.0 ! { dg-error \"impure function\" }\n+  x = x .PLUS. 5.0 ! { dg-error \"impure function\" }\n END SUBROUTINE iampure2\n \n PROGRAM main"}]}