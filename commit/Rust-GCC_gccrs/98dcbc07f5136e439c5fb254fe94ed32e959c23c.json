{"sha": "98dcbc07f5136e439c5fb254fe94ed32e959c23c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThkY2JjMDdmNTEzNmU0MzljNWZiMjU0ZmU5NGVkMzJlOTU5YzIzYw==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-01-15T10:05:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-15T10:05:56Z"}, "message": "unroll.c (loop_iterations): Return 0 if the last loop insn is not a jump insn or if...\n\n8\n\t* unroll.c (loop_iterations): Return 0 if the last loop insn\n\tis not a jump insn or if the loop has multiple back edges.\n\nFrom-SVN: r24680", "tree": {"sha": "619b471570a1cb06192dfa615752214a0e07bc47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/619b471570a1cb06192dfa615752214a0e07bc47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98dcbc07f5136e439c5fb254fe94ed32e959c23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98dcbc07f5136e439c5fb254fe94ed32e959c23c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98dcbc07f5136e439c5fb254fe94ed32e959c23c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98dcbc07f5136e439c5fb254fe94ed32e959c23c/comments", "author": null, "committer": null, "parents": [{"sha": "9f16f9324c40bfe04279994e8a32a19e5fef5b58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f16f9324c40bfe04279994e8a32a19e5fef5b58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f16f9324c40bfe04279994e8a32a19e5fef5b58"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "2c0bdef1e2bb48402842f46bc4c53f82a5d82918", "filename": "gcc/unroll.c", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98dcbc07f5136e439c5fb254fe94ed32e959c23c/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98dcbc07f5136e439c5fb254fe94ed32e959c23c/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=98dcbc07f5136e439c5fb254fe94ed32e959c23c", "patch": "@@ -3480,22 +3480,43 @@ loop_iterations (loop_start, loop_end, loop_info)\n   loop_info->unroll_number = 1;\n   loop_info->vtop = 0;\n \n-  /* First find the iteration variable.  If the last insn is a conditional\n-     branch, and the insn before tests a register value, make that the\n-     iteration variable.  */\n-  \n   /* We used to use prev_nonnote_insn here, but that fails because it might\n      accidentally get the branch for a contained loop if the branch for this\n      loop was deleted.  We can only trust branches immediately before the\n      loop_end.  */\n   last_loop_insn = PREV_INSN (loop_end);\n \n+  /* ??? We should probably try harder to find the jump insn\n+     at the end of the loop.  The following code assumes that \n+     the last loop insn is a jump to the top of the loop.  */\n+  if (GET_CODE (last_loop_insn) != JUMP_INSN)\n+    {\n+      if (loop_dump_stream)\n+\tfprintf (loop_dump_stream,\n+\t\t \"Loop iterations: No final conditional branch found.\\n\");\n+      return 0;\n+    }\n+\n+  /* If there is a more than a single jump to the top of the loop\n+     we cannot (easily) determine the iteration count.  */\n+  if (LABEL_NUSES (JUMP_LABEL (last_loop_insn)) > 1)\n+    {\n+      if (loop_dump_stream)\n+\tfprintf (loop_dump_stream,\n+\t\t \"Loop iterations: Loop has multiple back edges.\\n\");\n+      return 0;\n+    }\n+\n+  /* Find the iteration variable.  If the last insn is a conditional\n+     branch, and the insn before tests a register value, make that the\n+     iteration variable.  */\n+  \n   comparison = get_condition_for_loop (last_loop_insn);\n   if (comparison == 0)\n     {\n       if (loop_dump_stream)\n \tfprintf (loop_dump_stream,\n-\t\t \"Loop iterations: No final conditional branch found.\\n\");\n+\t\t \"Loop iterations: No final comparison found.\\n\");\n       return 0;\n     }\n "}]}