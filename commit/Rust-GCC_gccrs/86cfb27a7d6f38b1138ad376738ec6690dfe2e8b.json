{"sha": "86cfb27a7d6f38b1138ad376738ec6690dfe2e8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZjZmIyN2E3ZDZmMzhiMTEzOGFkMzc2NzM4ZWM2NjkwZGZlMmU4Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-09-28T09:17:30Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-09-28T09:17:30Z"}, "message": "expmed.c (store_fixed_bit_field): Always use convert_to_mode in order to convert between modes.\n\n\t* expmed.c (store_fixed_bit_field): Always use convert_to_mode in\n\torder to convert between modes.\n\t(extract_bit_field_1): Test TRULY_NOOP_TRUNCATION on the right mode.\n\nFrom-SVN: r140730", "tree": {"sha": "0731ffe63c84669ad48a81762dda973a70625d68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0731ffe63c84669ad48a81762dda973a70625d68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86cfb27a7d6f38b1138ad376738ec6690dfe2e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86cfb27a7d6f38b1138ad376738ec6690dfe2e8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86cfb27a7d6f38b1138ad376738ec6690dfe2e8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86cfb27a7d6f38b1138ad376738ec6690dfe2e8b/comments", "author": null, "committer": null, "parents": [{"sha": "57cb79efa40dd98e6250d5f8e49eb608c0abc15b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57cb79efa40dd98e6250d5f8e49eb608c0abc15b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57cb79efa40dd98e6250d5f8e49eb608c0abc15b"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "c9fc7ae1e7b35b05e7914b4ba84676f444a80597", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86cfb27a7d6f38b1138ad376738ec6690dfe2e8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86cfb27a7d6f38b1138ad376738ec6690dfe2e8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86cfb27a7d6f38b1138ad376738ec6690dfe2e8b", "patch": "@@ -1,3 +1,9 @@\n+2008-09-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* expmed.c (store_fixed_bit_field): Always use convert_to_mode in\n+\torder to convert between modes.\n+\t(extract_bit_field_1): Test TRULY_NOOP_TRUNCATION on the right mode.\n+\n 2008-09-27  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (sh_gimplify_va_arg_expr): Use VIEW_CONVERT_EXPR"}, {"sha": "ae5ad0a2f12f2cfe676c47324fcf4c2246b11f1f", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86cfb27a7d6f38b1138ad376738ec6690dfe2e8b/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86cfb27a7d6f38b1138ad376738ec6690dfe2e8b/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=86cfb27a7d6f38b1138ad376738ec6690dfe2e8b", "patch": "@@ -949,13 +949,7 @@ store_fixed_bit_field (rtx op0, unsigned HOST_WIDE_INT offset,\n \t\t      && bitpos + bitsize != GET_MODE_BITSIZE (mode));\n \n       if (GET_MODE (value) != mode)\n-\t{\n-\t  if ((REG_P (value) || GET_CODE (value) == SUBREG)\n-\t      && GET_MODE_SIZE (mode) < GET_MODE_SIZE (GET_MODE (value)))\n-\t    value = gen_lowpart (mode, value);\n-\t  else\n-\t    value = convert_to_mode (mode, value, 1);\n-\t}\n+\tvalue = convert_to_mode (mode, value, 1);\n \n       if (must_and)\n \tvalue = expand_binop (mode, and_optab, value,\n@@ -1348,7 +1342,7 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n \t       ? bitpos + bitsize == BITS_PER_WORD\n \t       : bitpos == 0)))\n       && ((!MEM_P (op0)\n-\t   && TRULY_NOOP_TRUNCATION (GET_MODE_BITSIZE (mode),\n+\t   && TRULY_NOOP_TRUNCATION (GET_MODE_BITSIZE (mode1),\n \t\t\t\t     GET_MODE_BITSIZE (GET_MODE (op0)))\n \t   && GET_MODE_SIZE (mode1) != 0\n \t   && byte_offset % GET_MODE_SIZE (mode1) == 0)"}]}