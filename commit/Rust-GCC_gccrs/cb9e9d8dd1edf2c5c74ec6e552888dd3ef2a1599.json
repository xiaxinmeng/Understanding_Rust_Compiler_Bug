{"sha": "cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I5ZTlkOGRkMWVkZjJjNWM3NGVjNmU1NTI4ODhkZDNlZjJhMTU5OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-01-19T17:11:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-01-19T17:11:15Z"}, "message": "dwarf2out.c (gen_subprogram_die): Don't reuse the in-class decl for the abstract instance of an inline function.\n\n        * dwarf2out.c (gen_subprogram_die): Don't reuse the in-class decl\n        for the abstract instance of an inline function.\n\nFrom-SVN: r39137", "tree": {"sha": "962927994a1efdcce23bee9d31b56b3e733bc349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/962927994a1efdcce23bee9d31b56b3e733bc349"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20342a6bc1df6e55bad32a8f5ba9f3ac4a751660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20342a6bc1df6e55bad32a8f5ba9f3ac4a751660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20342a6bc1df6e55bad32a8f5ba9f3ac4a751660"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "58eb78f7f5a5485b93c3fbd59b27919446a3a433", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599", "patch": "@@ -1,3 +1,8 @@\n+2001-01-19  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2out.c (gen_subprogram_die): Don't reuse the in-class decl\n+\tfor the abstract instance of an inline function.\n+\n Fri Jan 19 14:31:35 2001  Alexandre Oliva  <aoliva@redhat.com>, J\"orn Rennecke <amylaar@redhat.com>\n \n \t* reload1.c (move2add_note_store): Treat all registers directly or"}, {"sha": "d311dbbbd2f9437233722806877630636d7dbfd9", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=cb9e9d8dd1edf2c5c74ec6e552888dd3ef2a1599", "patch": "@@ -9868,12 +9868,11 @@ gen_subprogram_die (decl, context_die)\n       /* If the definition comes from the same place as the declaration,\n \t maybe use the old DIE.  We always want the DIE for this function\n \t that has the *_pc attributes to be under comp_unit_die so the\n-\t debugger can find it.  For inlines, that is the concrete instance,\n-\t so we can use the old DIE here.  For non-inline methods, we want a\n-\t specification DIE at toplevel, so we need a new DIE.  For local\n-\t class methods, this doesn't apply; we just use the old DIE.  */\n-      if ((DECL_ABSTRACT (decl) || old_die->die_parent == comp_unit_die\n-\t   || context_die == NULL)\n+\t debugger can find it.  We also need to do this for abstract\n+\t instances of inlines, since the spec requires the out-of-line copy\n+\t to have the same parent.  For local class methods, this doesn't\n+\t apply; we just use the old DIE.  */\n+      if ((old_die->die_parent == comp_unit_die || context_die == NULL)\n \t  && (DECL_ARTIFICIAL (decl)\n \t      || (get_AT_unsigned (old_die, DW_AT_decl_file) == file_index\n \t\t  && (get_AT_unsigned (old_die, DW_AT_decl_line)"}]}