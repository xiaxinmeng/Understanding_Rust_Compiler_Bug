{"sha": "95891ca020591196cde50c4cde4cab14783a3c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU4OTFjYTAyMDU5MTE5NmNkZTUwYzRjZGU0Y2FiMTQ3ODNhM2MwMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-16T12:39:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-16T14:03:03Z"}, "message": "libstdc++: Modernize <bits/random.h> helpers\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/random.h (_Shift::__value): Use constexpr.\n\t(_Select_uint_least_t::type): Use using-declaration.\n\t(_Mod): Likewise.\n\t* testsuite/26_numerics/random/pr60037-neg.cc: Adjust dg-error\n\tline number.", "tree": {"sha": "e668fe619f03b50644bde3b0d00e894b09e1e4d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e668fe619f03b50644bde3b0d00e894b09e1e4d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95891ca020591196cde50c4cde4cab14783a3c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95891ca020591196cde50c4cde4cab14783a3c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95891ca020591196cde50c4cde4cab14783a3c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95891ca020591196cde50c4cde4cab14783a3c00/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42167831ab1f3cd61f02a22dfb0e87333073c5ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42167831ab1f3cd61f02a22dfb0e87333073c5ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42167831ab1f3cd61f02a22dfb0e87333073c5ca"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "c5cae87b636e7de4240137ba7dd93dfde033f27c", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95891ca020591196cde50c4cde4cab14783a3c00/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95891ca020591196cde50c4cde4cab14783a3c00/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=95891ca020591196cde50c4cde4cab14783a3c00", "patch": "@@ -68,11 +68,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t     bool = __w < static_cast<size_t>\n \t\t\t  (std::numeric_limits<_UIntType>::digits)>\n       struct _Shift\n-      { static const _UIntType __value = 0; };\n+      { static constexpr _UIntType __value = 0; };\n \n     template<typename _UIntType, size_t __w>\n       struct _Shift<_UIntType, __w, true>\n-      { static const _UIntType __value = _UIntType(1) << __w; };\n+      { static constexpr _UIntType __value = _UIntType(1) << __w; };\n \n     template<int __s,\n \t     int __which = ((__s <= __CHAR_BIT__ * sizeof (int))\n@@ -88,20 +88,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     template<int __s>\n       struct _Select_uint_least_t<__s, 4>\n-      { typedef unsigned int type; };\n+      { using type = unsigned int; };\n \n     template<int __s>\n       struct _Select_uint_least_t<__s, 3>\n-      { typedef unsigned long type; };\n+      { using type = unsigned long; };\n \n     template<int __s>\n       struct _Select_uint_least_t<__s, 2>\n-      { typedef unsigned long long type; };\n+      { using type = unsigned long long; };\n \n #if __SIZEOF_INT128__ > __SIZEOF_LONG_LONG__\n     template<int __s>\n       struct _Select_uint_least_t<__s, 1>\n-      { __extension__ typedef unsigned __int128 type; };\n+      { __extension__ using type = unsigned __int128; };\n #endif\n \n     // Assume a != 0, a < m, c < m, x < m.\n@@ -111,11 +111,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n              bool __schrage_ok = __m % __a < __m / __a>\n       struct _Mod\n       {\n-\ttypedef typename _Select_uint_least_t<std::__lg(__a)\n-\t\t\t\t\t      + std::__lg(__m) + 2>::type _Tp2;\n \tstatic _Tp\n \t__calc(_Tp __x)\n-\t{ return static_cast<_Tp>((_Tp2(__a) * __x + __c) % __m); }\n+\t{\n+\t  using _Tp2\n+\t    = typename _Select_uint_least_t<std::__lg(__a)\n+\t\t\t\t\t    + std::__lg(__m) + 2>::type;\n+\t  return static_cast<_Tp>((_Tp2(__a) * __x + __c) % __m);\n+\t}\n       };\n \n     // Schrage."}, {"sha": "d6e6399bd793fa940c5f0415a6b1d320dd9d168f", "filename": "libstdc++-v3/testsuite/26_numerics/random/pr60037-neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95891ca020591196cde50c4cde4cab14783a3c00/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95891ca020591196cde50c4cde4cab14783a3c00/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc?ref=95891ca020591196cde50c4cde4cab14783a3c00", "patch": "@@ -10,6 +10,6 @@ std::__detail::_Adaptor<std::mt19937, unsigned long> aurng(urng);\n auto x = std::generate_canonical<std::size_t,\n \t\t\tstd::numeric_limits<std::size_t>::digits>(urng);\n \n-// { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 166 }\n+// { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 169 }\n \n // { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 3350 }"}]}