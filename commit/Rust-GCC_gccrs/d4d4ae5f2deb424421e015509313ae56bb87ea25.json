{"sha": "d4d4ae5f2deb424421e015509313ae56bb87ea25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRkNGFlNWYyZGViNDI0NDIxZTAxNTUwOTMxM2FlNTZiYjg3ZWEyNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-12-30T13:48:51Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-12-30T13:48:51Z"}, "message": "system.h (bcopy, [...]): Add prototype arguments.\n\n\t* system.h (bcopy, bcmp, bzero, index, rindex, atof, atol, free,\n\tgetcwd, getenv, getwd, sbrk, strstr, malloc, calloc, realloc,\n\tstrerror, getrlimit, setrlimit, abort): Add prototype arguments.\n\nFrom-SVN: r31139", "tree": {"sha": "51fb546a9af894627c59fa9e107305285fbe3142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51fb546a9af894627c59fa9e107305285fbe3142"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4d4ae5f2deb424421e015509313ae56bb87ea25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d4ae5f2deb424421e015509313ae56bb87ea25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4d4ae5f2deb424421e015509313ae56bb87ea25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d4ae5f2deb424421e015509313ae56bb87ea25/comments", "author": null, "committer": null, "parents": [{"sha": "d22ce03d6e4106c647e11eba966929dd20662359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22ce03d6e4106c647e11eba966929dd20662359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d22ce03d6e4106c647e11eba966929dd20662359"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "7e07a6316c7dfd2eef7dc63df5036cbedf23ca84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d4ae5f2deb424421e015509313ae56bb87ea25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d4ae5f2deb424421e015509313ae56bb87ea25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4d4ae5f2deb424421e015509313ae56bb87ea25", "patch": "@@ -1,3 +1,9 @@\n+1999-12-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* system.h (bcopy, bcmp, bzero, index, rindex, atof, atol, free,\n+\tgetcwd, getenv, getwd, sbrk, strstr, malloc, calloc, realloc,\n+\tstrerror, getrlimit, setrlimit, abort): Add prototype arguments.\n+\n 1999-12-30  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* i386.c (ix86_expand_fp_compare): In non-sahf non-TARGET_IEEE"}, {"sha": "ef675f3bf7b52a3decb6d43617ba790d3cbc3afe", "filename": "gcc/system.h", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d4ae5f2deb424421e015509313ae56bb87ea25/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d4ae5f2deb424421e015509313ae56bb87ea25/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=d4d4ae5f2deb424421e015509313ae56bb87ea25", "patch": "@@ -291,7 +291,7 @@ extern int errno;\n #ifndef bcopy\n # ifdef HAVE_BCOPY\n #  ifdef NEED_DECLARATION_BCOPY\n-extern void bcopy ();\n+extern void bcopy PARAMS ((const PTR, PTR, size_t));\n #  endif\n # else /* ! HAVE_BCOPY */\n #  define bcopy(src,dst,len) memmove((dst),(src),(len))\n@@ -301,7 +301,7 @@ extern void bcopy ();\n #ifndef bcmp\n # ifdef HAVE_BCMP\n #  ifdef NEED_DECLARATION_BCMP\n-extern int bcmp ();\n+extern int bcmp PARAMS ((const PTR, const PTR, size_t));\n #  endif\n # else /* ! HAVE_BCMP */\n #  define bcmp(left,right,len) memcmp ((left),(right),(len))\n@@ -311,7 +311,7 @@ extern int bcmp ();\n #ifndef bzero\n # ifdef HAVE_BZERO\n #  ifdef NEED_DECLARATION_BZERO\n-extern void bzero ();\n+extern void bzero PARAMS ((PTR, size_t));\n #  endif\n # else /* ! HAVE_BZERO */\n #  define bzero(dst,len) memset ((dst),0,(len))\n@@ -321,7 +321,7 @@ extern void bzero ();\n #ifndef index\n # ifdef HAVE_INDEX\n #  ifdef NEED_DECLARATION_INDEX\n-extern char *index ();\n+extern char *index PARAMS ((const char *, int));\n #  endif\n # else /* ! HAVE_INDEX */\n #  define index strchr\n@@ -331,65 +331,65 @@ extern char *index ();\n #ifndef rindex\n # ifdef HAVE_RINDEX\n #  ifdef NEED_DECLARATION_RINDEX\n-extern char *rindex ();\n+extern char *rindex PARAMS ((const char *, int));\n #  endif\n # else /* ! HAVE_RINDEX */\n #  define rindex strrchr\n # endif\n #endif\n \n #ifdef NEED_DECLARATION_ATOF\n-extern double atof ();\n+extern double atof PARAMS ((const char *));\n #endif\n \n #ifdef NEED_DECLARATION_ATOL\n-extern long atol();\n+extern long atol PARAMS ((const char *));\n #endif\n \n #ifdef NEED_DECLARATION_FREE\n-extern void free ();\n+extern void free PARAMS ((PTR));\n #endif\n \n #ifdef NEED_DECLARATION_GETCWD\n-extern char *getcwd ();\n+extern char *getcwd PARAMS ((char *, size_t));\n #endif\n \n #ifdef NEED_DECLARATION_GETENV\n-extern char *getenv ();\n+extern char *getenv PARAMS ((const char *));\n #endif\n \n #ifdef NEED_DECLARATION_GETWD\n-extern char *getwd ();\n+extern char *getwd PARAMS ((char *));\n #endif\n \n #ifdef NEED_DECLARATION_SBRK\n-extern PTR sbrk ();\n+extern PTR sbrk PARAMS ((int));\n #endif\n \n #ifdef NEED_DECLARATION_STRSTR\n-extern char *strstr ();\n+extern char *strstr PARAMS ((const char *, const char *));\n #endif\n \n #ifdef HAVE_MALLOC_H\n #include <malloc.h>\n #endif\n \n #ifdef NEED_DECLARATION_MALLOC\n-extern PTR malloc ();\n+extern PTR malloc PARAMS ((size_t));\n #endif\n \n #ifdef NEED_DECLARATION_CALLOC\n-extern PTR calloc ();\n+extern PTR calloc PARAMS ((size_t, size_t));\n #endif\n \n #ifdef NEED_DECLARATION_REALLOC\n-extern PTR realloc ();\n+extern PTR realloc PARAMS ((PTR, size_t));\n #endif\n \n #ifdef HAVE_STRERROR\n # ifdef NEED_DECLARATION_STRERROR\n #  ifndef strerror\n-extern char *strerror ();\n+extern char *strerror PARAMS ((int));\n #  endif\n # endif\n #else /* ! HAVE_STRERROR */\n@@ -408,15 +408,21 @@ extern const char *strsignal PARAMS ((int));\n #ifdef HAVE_GETRLIMIT\n # ifdef NEED_DECLARATION_GETRLIMIT\n #  ifndef getrlimit\n-extern int getrlimit ();\n+#   ifdef ANSI_PROTOTYPES\n+struct rlimit;\n+#   endif\n+extern int getrlimit PARAMS ((int, struct rlimit *));\n #  endif\n # endif\n #endif\n \n #ifdef HAVE_SETRLIMIT\n # ifdef NEED_DECLARATION_SETRLIMIT\n #  ifndef setrlimit\n-extern int setrlimit ();\n+#   ifdef ANSI_PROTOTYPES\n+struct rlimit;\n+#   endif\n+extern int setrlimit PARAMS ((int, const struct rlimit *));\n #  endif\n # endif\n #endif\n@@ -428,7 +434,7 @@ extern int setrlimit ();\n #endif\n \n #ifdef NEED_DECLARATION_ABORT\n-extern void abort ();\n+extern void abort PARAMS ((void));\n #endif\n \n /* Define a STRINGIFY macro that's right for ANSI or traditional C."}]}