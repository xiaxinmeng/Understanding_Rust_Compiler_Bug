{"sha": "a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVlNTIyNjQ0MWUzYmY5NWMwZTBhNGY0ZGI2ZDY4N2M5MjE1MjI5Yw==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2013-04-14T17:50:57Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2013-04-14T17:50:57Z"}, "message": "re PR fortran/56816 (ICE in delete_root)\n\nfortran/\n\tPR fortran/56816\n\t* match.c (gfc_match_select_type): Add syntax error. Move namespace\n\tallocation and cleanup...\n\t* parse.c (decode_statement): ... here.\n\ntestsuite/\n\tPR fortran/56816\n\t* gfortran.dg/select_type_33.f03: New test.\n\nFrom-SVN: r197950", "tree": {"sha": "f79fa561f34bf163d5d9ac1cc2e2778225bb390e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f79fa561f34bf163d5d9ac1cc2e2778225bb390e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/comments", "author": null, "committer": null, "parents": [{"sha": "01007ae0449a8740bbba4a1bda75cdddfe974ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01007ae0449a8740bbba4a1bda75cdddfe974ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01007ae0449a8740bbba4a1bda75cdddfe974ef6"}], "stats": {"total": 72, "additions": 65, "deletions": 7}, "files": [{"sha": "2b1f82a831dffa1be345382cbd9c4a6fb5a0044c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "patch": "@@ -1,3 +1,10 @@\n+2013-04-14  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/56816\n+\t* match.c (gfc_match_select_type): Add syntax error. Move namespace\n+\tallocation and cleanup...\n+\t* parse.c (decode_statement): ... here.\n+\n 2013-04-13  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/55959"}, {"sha": "b5e9609d965c27b248ac03b4a5fe08caee1506d8", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "patch": "@@ -5337,7 +5337,6 @@ gfc_match_select_type (void)\n   char name[GFC_MAX_SYMBOL_LEN];\n   bool class_array;\n   gfc_symbol *sym;\n-  gfc_namespace *parent_ns;\n \n   m = gfc_match_label ();\n   if (m == MATCH_ERROR)\n@@ -5347,8 +5346,6 @@ gfc_match_select_type (void)\n   if (m != MATCH_YES)\n     return m;\n \n-  gfc_current_ns = gfc_build_block_ns (gfc_current_ns);\n-\n   m = gfc_match (\" %n => %e\", name, &expr2);\n   if (m == MATCH_YES)\n     {\n@@ -5379,7 +5376,10 @@ gfc_match_select_type (void)\n \n   m = gfc_match (\" )%t\");\n   if (m != MATCH_YES)\n-    goto cleanup;\n+    {\n+      gfc_error (\"parse error in SELECT TYPE statement at %C\");\n+      goto cleanup;\n+    }\n \n   /* This ghastly expression seems to be needed to distinguish a CLASS\n      array, which can have a reference, from other expressions that\n@@ -5417,9 +5417,6 @@ gfc_match_select_type (void)\n   return MATCH_YES;\n \n cleanup:\n-  parent_ns = gfc_current_ns->parent;\n-  gfc_free_namespace (gfc_current_ns);\n-  gfc_current_ns = parent_ns;\n   return m;\n }\n "}, {"sha": "74a5b4b6c404ba91e42ab04e972c9a6eefc08483", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "patch": "@@ -262,6 +262,7 @@ decode_specification_statement (void)\n static gfc_statement\n decode_statement (void)\n {\n+  gfc_namespace *ns;\n   gfc_statement st;\n   locus old_locus;\n   match m;\n@@ -363,7 +364,12 @@ decode_statement (void)\n   match (NULL, gfc_match_associate, ST_ASSOCIATE);\n   match (NULL, gfc_match_critical, ST_CRITICAL);\n   match (NULL, gfc_match_select, ST_SELECT_CASE);\n+\n+  gfc_current_ns = gfc_build_block_ns (gfc_current_ns);\n   match (NULL, gfc_match_select_type, ST_SELECT_TYPE);\n+  ns = gfc_current_ns;\n+  gfc_current_ns = gfc_current_ns->parent;\n+  gfc_free_namespace (ns);\n \n   /* General statement matching: Instead of testing every possible\n      statement, we eliminate most possibilities by peeking at the"}, {"sha": "cdff281c9307d9ce043e67a143aaaa7fd4872f4b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "patch": "@@ -1,3 +1,8 @@\n+2013-04-14  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/56816\n+\t* gfortran.dg/select_type_33.f03: New test.\n+\n 2013-04-13  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/55959"}, {"sha": "3ba27e0103c70910ca1edcedcb7c8546abe1eef2", "filename": "gcc/testsuite/gfortran.dg/select_type_33.f03", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_33.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e5226441e3bf95c0e0a4f4db6d687c9215229c/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_33.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_33.f03?ref=a5e5226441e3bf95c0e0a4f4db6d687c9215229c", "patch": "@@ -0,0 +1,43 @@\n+! { dg-do compile }\n+!\n+! PR fortran/56816\n+! The unfinished SELECT TYPE statement below was leading to an ICE because\n+! at the time the statement was rejected, the compiler tried to free\n+! some symbols that had already been freed with the SELECT TYPE\n+! namespace.\n+!\n+! Original testcase from Dominique Pelletier <dominique.pelletier@polymtl.ca>\n+!\n+module any_list_module\n+    implicit none\n+\n+    private\n+    public :: anylist, anyitem\n+\n+    type anylist\n+    end type\n+\n+    type anyitem\n+        class(*), allocatable :: value\n+    end type\n+end module any_list_module\n+\n+\n+module my_item_list_module\n+\n+    use any_list_module\n+    implicit none\n+\n+    type, extends (anyitem) :: myitem\n+    end type myitem\n+\n+contains\n+\n+    subroutine myprint (this)\n+        class (myitem) ::   this\n+\n+        select type ( v => this % value ! { dg-error \"parse error in SELECT TYPE\" }\n+        end select                      ! { dg-error \"Expecting END SUBROUTINE\" }\n+    end subroutine myprint\n+\n+end module my_item_list_module"}]}