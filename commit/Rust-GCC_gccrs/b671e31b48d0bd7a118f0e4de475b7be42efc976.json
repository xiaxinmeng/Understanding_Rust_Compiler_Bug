{"sha": "b671e31b48d0bd7a118f0e4de475b7be42efc976", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY3MWUzMWI0OGQwYmQ3YTExOGYwZTRkZTQ3NWI3YmU0MmVmYzk3Ng==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2013-04-11T10:11:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T10:11:57Z"}, "message": "gnat_ugn.texi, [...]: Move chapter \"Tools Supporting Project Files\" from projects.texi to gnat_ugn.texi.\n\n2013-04-11  Vincent Celier  <celier@adacore.com>\n\n\t* gnat_ugn.texi, projects.texi: Move chapter \"Tools Supporting Project\n\tFiles\" from projects.texi to gnat_ugn.texi.\n\nFrom-SVN: r197755", "tree": {"sha": "5461a76409ee200c60ee0407e5b4f6ab2af2162b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5461a76409ee200c60ee0407e5b4f6ab2af2162b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b671e31b48d0bd7a118f0e4de475b7be42efc976", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b671e31b48d0bd7a118f0e4de475b7be42efc976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b671e31b48d0bd7a118f0e4de475b7be42efc976", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b671e31b48d0bd7a118f0e4de475b7be42efc976/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddd38fc15469f31cc72dac08b655ba10b1ed0c62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd38fc15469f31cc72dac08b655ba10b1ed0c62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd38fc15469f31cc72dac08b655ba10b1ed0c62"}], "stats": {"total": 1933, "additions": 970, "deletions": 963}, "files": [{"sha": "bd589e3f16b12fc5cb33eb2f17ef34feb373efdf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b671e31b48d0bd7a118f0e4de475b7be42efc976/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b671e31b48d0bd7a118f0e4de475b7be42efc976/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b671e31b48d0bd7a118f0e4de475b7be42efc976", "patch": "@@ -1,3 +1,8 @@\n+2013-04-11  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnat_ugn.texi, projects.texi: Move chapter \"Tools Supporting Project\n+\tFiles\" from projects.texi to gnat_ugn.texi.\n+\n 2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Make-lang.in: Update dependencies."}, {"sha": "3ff68258af7bb89058e7007b243683fffe00c03a", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 881, "deletions": 0, "changes": 881, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b671e31b48d0bd7a118f0e4de475b7be42efc976/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b671e31b48d0bd7a118f0e4de475b7be42efc976/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b671e31b48d0bd7a118f0e4de475b7be42efc976", "patch": "@@ -12491,6 +12491,887 @@ are used in this example.\n \n @include projects.texi\n \n+@c ---------------------------------------------\n+@c Tools Supporting Project Files\n+@c ---------------------------------------------\n+\n+@node Tools Supporting Project Files\n+@chapter Tools Supporting Project Files\n+\n+@noindent\n+\n+@menu\n+* gnatmake and Project Files::\n+* The GNAT Driver and Project Files::\n+* The Development Environments::\n+@end menu\n+\n+@c ---------------------------------------------\n+@node gnatmake and Project Files\n+@section gnatmake and Project Files\n+@c ---------------------------------------------\n+\n+@noindent\n+This section covers several topics related to @command{gnatmake} and\n+project files: defining ^switches^switches^ for @command{gnatmake}\n+and for the tools that it invokes; specifying configuration pragmas;\n+the use of the @code{Main} attribute; building and rebuilding library project\n+files.\n+\n+@menu\n+* Switches Related to Project Files::\n+* Switches and Project Files::\n+* Specifying Configuration Pragmas::\n+* Project Files and Main Subprograms::\n+* Library Project Files::\n+@end menu\n+\n+@c ---------------------------------------------\n+@node Switches Related to Project Files\n+@subsection Switches Related to Project Files\n+@c ---------------------------------------------\n+\n+@noindent\n+The following switches are used by GNAT tools that support project files:\n+\n+@table @option\n+\n+@item ^-P^/PROJECT_FILE=^@var{project}\n+@cindex @option{^-P^/PROJECT_FILE^} (any project-aware tool)\n+Indicates the name of a project file. This project file will be parsed with\n+the verbosity indicated by @option{^-vP^MESSAGE_PROJECT_FILES=^@emph{x}},\n+if any, and using the external references indicated\n+by @option{^-X^/EXTERNAL_REFERENCE^} switches, if any.\n+@ifclear vms\n+There may zero, one or more spaces between @option{-P} and @var{project}.\n+@end ifclear\n+\n+There must be only one @option{^-P^/PROJECT_FILE^} switch on the command line.\n+\n+Since the Project Manager parses the project file only after all the switches\n+on the command line are checked, the order of the switches\n+@option{^-P^/PROJECT_FILE^},\n+@option{^-vP^/MESSAGES_PROJECT_FILE=^@emph{x}}\n+or @option{^-X^/EXTERNAL_REFERENCE^} is not significant.\n+\n+@item ^-X^/EXTERNAL_REFERENCE=^@var{name=value}\n+@cindex @option{^-X^/EXTERNAL_REFERENCE^} (any project-aware tool)\n+Indicates that external variable @var{name} has the value @var{value}.\n+The Project Manager will use this value for occurrences of\n+@code{external(name)} when parsing the project file.\n+\n+@ifclear vms\n+If @var{name} or @var{value} includes a space, then @var{name=value} should be\n+put between quotes.\n+@smallexample\n+  -XOS=NT\n+  -X\"user=John Doe\"\n+@end smallexample\n+@end ifclear\n+\n+Several @option{^-X^/EXTERNAL_REFERENCE^} switches can be used simultaneously.\n+If several @option{^-X^/EXTERNAL_REFERENCE^} switches specify the same\n+@var{name}, only the last one is used.\n+\n+An external variable specified with a @option{^-X^/EXTERNAL_REFERENCE^} switch\n+takes precedence over the value of the same name in the environment.\n+\n+@item ^-vP^/MESSAGES_PROJECT_FILE=^@emph{x}\n+@cindex @option{^-vP^/MESSAGES_PROJECT_FILE^} (any project-aware tool)\n+Indicates the verbosity of the parsing of GNAT project files.\n+\n+@ifclear vms\n+@option{-vP0} means Default;\n+@option{-vP1} means Medium;\n+@option{-vP2} means High.\n+@end ifclear\n+\n+@ifset vms\n+There are three possible options for this qualifier: DEFAULT, MEDIUM and\n+HIGH.\n+@end ifset\n+\n+The default is ^Default^DEFAULT^: no output for syntactically correct\n+project files.\n+If several @option{^-vP^/MESSAGES_PROJECT_FILE=^@emph{x}} switches are present,\n+only the last one is used.\n+\n+@item ^-aP^/ADD_PROJECT_SEARCH_DIR=^<dir>\n+@cindex @option{^-aP^/ADD_PROJECT_SEARCH_DIR=^} (any project-aware tool)\n+Add directory <dir> at the beginning of the project search path, in order,\n+after the current working directory.\n+\n+@ifclear vms\n+@item -eL\n+@cindex @option{-eL} (any project-aware tool)\n+Follow all symbolic links when processing project files.\n+@end ifclear\n+\n+@item ^--subdirs^/SUBDIRS^=<subdir>\n+@cindex @option{^--subdirs^/SUBDIRS^=} (gnatmake and gnatclean)\n+This switch is recognized by @command{gnatmake} and @command{gnatclean}. It\n+indicate that the real directories (except the source directories) are the\n+subdirectories <subdir> of the directories specified in the project files.\n+This applies in particular to object directories, library directories and\n+exec directories. If the subdirectories do not exist, they are created\n+automatically.\n+\n+@end table\n+\n+@c ---------------------------------------------\n+@node Switches and Project Files\n+@subsection Switches and Project Files\n+@c ---------------------------------------------\n+\n+@noindent\n+@ifset vms\n+It is not currently possible to specify VMS style qualifiers in the project\n+files; only Unix style ^switches^switches^ may be specified.\n+@end ifset\n+\n+For each of the packages @code{Builder}, @code{Compiler}, @code{Binder}, and\n+@code{Linker}, you can specify a @code{^Default_Switches^Default_Switches^}\n+attribute, a @code{Switches} attribute, or both;\n+as their names imply, these ^switch^switch^-related\n+attributes affect the ^switches^switches^ that are used for each of these GNAT\n+components when\n+@command{gnatmake} is invoked.  As will be explained below, these\n+component-specific ^switches^switches^ precede\n+the ^switches^switches^ provided on the @command{gnatmake} command line.\n+\n+The @code{^Default_Switches^Default_Switches^} attribute is an attribute\n+indexed by language name (case insensitive) whose value is a string list.\n+For example:\n+\n+@smallexample @c projectfile\n+@group\n+package Compiler is\n+  for ^Default_Switches^Default_Switches^ (\"Ada\")\n+      use (\"^-gnaty^-gnaty^\",\n+           \"^-v^-v^\");\n+end Compiler;\n+@end group\n+@end smallexample\n+\n+@noindent\n+The @code{Switches} attribute is indexed on a file name (which may or may\n+not be case sensitive, depending\n+on the operating system) whose value is a string list.  For example:\n+\n+@smallexample @c projectfile\n+@group\n+package Builder is\n+   for Switches (\"main1.adb\")\n+       use (\"^-O2^-O2^\");\n+   for Switches (\"main2.adb\")\n+       use (\"^-g^-g^\");\n+end Builder;\n+@end group\n+@end smallexample\n+\n+@noindent\n+For the @code{Builder} package, the file names must designate source files\n+for main subprograms.  For the @code{Binder} and @code{Linker} packages, the\n+file names must designate @file{ALI} or source files for main subprograms.\n+In each case just the file name without an explicit extension is acceptable.\n+\n+For each tool used in a program build (@command{gnatmake}, the compiler, the\n+binder, and the linker), the corresponding package @dfn{contributes} a set of\n+^switches^switches^ for each file on which the tool is invoked, based on the\n+^switch^switch^-related attributes defined in the package.\n+In particular, the ^switches^switches^\n+that each of these packages contributes for a given file @var{f} comprise:\n+\n+@itemize @bullet\n+@item the value of attribute @code{Switches (@var{f})},\n+  if it is specified in the package for the given file,\n+@item otherwise, the value of @code{^Default_Switches^Default_Switches^ (\"Ada\")},\n+  if it is specified in the package.\n+\n+@end itemize\n+\n+@noindent\n+If neither of these attributes is defined in the package, then the package does\n+not contribute any ^switches^switches^ for the given file.\n+\n+When @command{gnatmake} is invoked on a file, the ^switches^switches^ comprise\n+two sets, in the following order: those contributed for the file\n+by the @code{Builder} package;\n+and the switches passed on the command line.\n+\n+When @command{gnatmake} invokes a tool (compiler, binder, linker) on a file,\n+the ^switches^switches^ passed to the tool comprise three sets,\n+in the following order:\n+\n+@enumerate\n+@item\n+the applicable ^switches^switches^ contributed for the file\n+by the @code{Builder} package in the project file supplied on the command line;\n+\n+@item\n+those contributed for the file by the package (in the relevant project file --\n+see below) corresponding to the tool; and\n+\n+@item\n+the applicable switches passed on the command line.\n+@end enumerate\n+\n+The term @emph{applicable ^switches^switches^} reflects the fact that\n+@command{gnatmake} ^switches^switches^ may or may not be passed to individual\n+tools, depending on the individual ^switch^switch^.\n+\n+@command{gnatmake} may invoke the compiler on source files from different\n+projects. The Project Manager will use the appropriate project file to\n+determine the @code{Compiler} package for each source file being compiled.\n+Likewise for the @code{Binder} and @code{Linker} packages.\n+\n+As an example, consider the following package in a project file:\n+\n+@smallexample @c projectfile\n+@group\n+project Proj1 is\n+   package Compiler is\n+      for ^Default_Switches^Default_Switches^ (\"Ada\")\n+          use (\"^-g^-g^\");\n+      for Switches (\"a.adb\")\n+          use (\"^-O1^-O1^\");\n+      for Switches (\"b.adb\")\n+          use (\"^-O2^-O2^\",\n+               \"^-gnaty^-gnaty^\");\n+   end Compiler;\n+end Proj1;\n+@end group\n+@end smallexample\n+\n+@noindent\n+If @command{gnatmake} is invoked with this project file, and it needs to\n+compile, say, the files @file{a.adb}, @file{b.adb}, and @file{c.adb}, then\n+@file{a.adb} will be compiled with the ^switch^switch^\n+@option{^-O1^-O1^},\n+@file{b.adb} with ^switches^switches^\n+@option{^-O2^-O2^}\n+and @option{^-gnaty^-gnaty^},\n+and @file{c.adb} with @option{^-g^-g^}.\n+\n+The following example illustrates the ordering of the ^switches^switches^\n+contributed by different packages:\n+\n+@smallexample @c projectfile\n+@group\n+project Proj2 is\n+   package Builder is\n+      for Switches (\"main.adb\")\n+          use (\"^-g^-g^\",\n+               \"^-O1^-)1^\",\n+               \"^-f^-f^\");\n+   end Builder;\n+@end group\n+\n+@group\n+   package Compiler is\n+      for Switches (\"main.adb\")\n+          use (\"^-O2^-O2^\");\n+   end Compiler;\n+end Proj2;\n+@end group\n+@end smallexample\n+\n+@noindent\n+If you issue the command:\n+\n+@smallexample\n+    gnatmake ^-Pproj2^/PROJECT_FILE=PROJ2^ -O0 main\n+@end smallexample\n+\n+@noindent\n+then the compiler will be invoked on @file{main.adb} with the following\n+sequence of ^switches^switches^\n+\n+@smallexample\n+   ^-g -O1 -O2 -O0^-g -O1 -O2 -O0^\n+@end smallexample\n+\n+@noindent\n+with the last @option{^-O^-O^}\n+^switch^switch^ having precedence over the earlier ones;\n+several other ^switches^switches^\n+(such as @option{^-c^-c^}) are added implicitly.\n+\n+The ^switches^switches^\n+@option{^-g^-g^}\n+and @option{^-O1^-O1^} are contributed by package\n+@code{Builder},  @option{^-O2^-O2^} is contributed\n+by the package @code{Compiler}\n+and @option{^-O0^-O0^} comes from the command line.\n+\n+The @option{^-g^-g^}\n+^switch^switch^ will also be passed in the invocation of\n+@command{Gnatlink.}\n+\n+A final example illustrates switch contributions from packages in different\n+project files:\n+\n+@smallexample @c projectfile\n+@group\n+project Proj3 is\n+   for Source_Files use (\"pack.ads\", \"pack.adb\");\n+   package Compiler is\n+      for ^Default_Switches^Default_Switches^ (\"Ada\")\n+          use (\"^-gnata^-gnata^\");\n+   end Compiler;\n+end Proj3;\n+@end group\n+\n+@group\n+with \"Proj3\";\n+project Proj4 is\n+   for Source_Files use (\"foo_main.adb\", \"bar_main.adb\");\n+   package Builder is\n+      for Switches (\"foo_main.adb\")\n+          use (\"^-s^-s^\",\n+               \"^-g^-g^\");\n+   end Builder;\n+end Proj4;\n+@end group\n+\n+@group\n+-- Ada source file:\n+with Pack;\n+procedure Foo_Main is\n+   @dots{}\n+end Foo_Main;\n+@end group\n+@end smallexample\n+\n+@noindent\n+If the command is\n+@smallexample\n+gnatmake ^-PProj4^/PROJECT_FILE=PROJ4^ foo_main.adb -cargs -gnato\n+@end smallexample\n+\n+@noindent\n+then the ^switches^switches^ passed to the compiler for @file{foo_main.adb} are\n+@option{^-g^-g^} (contributed by the package @code{Proj4.Builder}) and\n+@option{^-gnato^-gnato^} (passed on the command line).\n+When the imported package @code{Pack} is compiled, the ^switches^switches^ used\n+are @option{^-g^-g^} from @code{Proj4.Builder},\n+@option{^-gnata^-gnata^} (contributed from package @code{Proj3.Compiler},\n+and @option{^-gnato^-gnato^} from the command line.\n+\n+When using @command{gnatmake} with project files, some ^switches^switches^ or\n+arguments may be expressed as relative paths. As the working directory where\n+compilation occurs may change, these relative paths are converted to absolute\n+paths. For the ^switches^switches^ found in a project file, the relative paths\n+are relative to the project file directory, for the switches on the command\n+line, they are relative to the directory where @command{gnatmake} is invoked.\n+The ^switches^switches^ for which this occurs are:\n+^-I^-I^,\n+^-A^-A^,\n+^-L^-L^,\n+^-aO^-aO^,\n+^-aL^-aL^,\n+^-aI^-aI^, as well as all arguments that are not switches (arguments to\n+^switch^switch^\n+^-o^-o^, object files specified in package @code{Linker} or after\n+-largs on the command line). The exception to this rule is the ^switch^switch^\n+^--RTS=^--RTS=^ for which a relative path argument is never converted.\n+\n+@c ---------------------------------------------\n+@node Specifying Configuration Pragmas\n+@subsection Specifying Configuration Pragmas\n+@c ---------------------------------------------\n+\n+@noindent\n+When using @command{gnatmake} with project files, if there exists a file\n+@file{gnat.adc} that contains configuration pragmas, this file will be\n+ignored.\n+\n+Configuration pragmas can be defined by means of the following attributes in\n+project files: @code{Global_Configuration_Pragmas} in package @code{Builder}\n+and @code{Local_Configuration_Pragmas} in package @code{Compiler}.\n+\n+Both these attributes are single string attributes. Their values is the path\n+name of a file containing configuration pragmas. If a path name is relative,\n+then it is relative to the project directory of the project file where the\n+attribute is defined.\n+\n+When compiling a source, the configuration pragmas used are, in order,\n+those listed in the file designated by attribute\n+@code{Global_Configuration_Pragmas} in package @code{Builder} of the main\n+project file, if it is specified, and those listed in the file designated by\n+attribute @code{Local_Configuration_Pragmas} in package @code{Compiler} of\n+the project file of the source, if it exists.\n+\n+@c ---------------------------------------------\n+@node Project Files and Main Subprograms\n+@subsection Project Files and Main Subprograms\n+@c ---------------------------------------------\n+\n+@noindent\n+When using a project file, you can invoke @command{gnatmake}\n+with one or several main subprograms, by specifying their source files on the\n+command line.\n+\n+@smallexample\n+    gnatmake ^-P^/PROJECT_FILE=^prj main1.adb main2.adb main3.adb\n+@end smallexample\n+\n+@noindent\n+Each of these needs to be a source file of the same project, except\n+when the switch ^-u^/UNIQUE^ is used.\n+\n+When ^-u^/UNIQUE^ is not used, all the mains need to be sources of the\n+same project, one of the project in the tree rooted at the project specified\n+on the command line. The package @code{Builder} of this common project, the\n+\"main project\" is the one that is considered by @command{gnatmake}.\n+\n+When ^-u^/UNIQUE^ is used, the specified source files may be in projects\n+imported directly or indirectly by the project specified on the command line.\n+Note that if such a source file is not part of the project specified on the\n+command line, the ^switches^switches^ found in package @code{Builder} of the\n+project specified on the command line, if any, that are transmitted\n+to the compiler will still be used, not those found in the project file of\n+the source file.\n+\n+When using a project file, you can also invoke @command{gnatmake} without\n+explicitly specifying any main, and the effect depends on whether you have\n+defined the @code{Main} attribute.  This attribute has a string list value,\n+where each element in the list is the name of a source file (the file\n+extension is optional) that contains a unit that can be a main subprogram.\n+\n+If the @code{Main} attribute is defined in a project file as a non-empty\n+string list and the switch @option{^-u^/UNIQUE^} is not used on the command\n+line, then invoking @command{gnatmake} with this project file but without any\n+main on the command line is equivalent to invoking @command{gnatmake} with all\n+the file names in the @code{Main} attribute on the command line.\n+\n+Example:\n+@smallexample @c projectfile\n+@group\n+   project Prj is\n+      for Main use (\"main1.adb\", \"main2.adb\", \"main3.adb\");\n+   end Prj;\n+@end group\n+@end smallexample\n+\n+@noindent\n+With this project file, @code{\"gnatmake ^-Pprj^/PROJECT_FILE=PRJ^\"}\n+is equivalent to\n+@code{\"gnatmake ^-Pprj^/PROJECT_FILE=PRJ^ main1.adb main2.adb main3.adb\"}.\n+\n+When the project attribute @code{Main} is not specified, or is specified\n+as an empty string list, or when the switch @option{-u} is used on the command\n+line, then invoking @command{gnatmake} with no main on the command line will\n+result in all immediate sources of the project file being checked, and\n+potentially recompiled. Depending on the presence of the switch @option{-u},\n+sources from other project files on which the immediate sources of the main\n+project file depend are also checked and potentially recompiled. In other\n+words, the @option{-u} switch is applied to all of the immediate sources of the\n+main project file.\n+\n+When no main is specified on the command line and attribute @code{Main} exists\n+and includes several mains, or when several mains are specified on the\n+command line, the default ^switches^switches^ in package @code{Builder} will\n+be used for all mains, even if there are specific ^switches^switches^\n+specified for one or several mains.\n+\n+But the ^switches^switches^ from package @code{Binder} or @code{Linker} will be\n+the specific ^switches^switches^ for each main, if they are specified.\n+\n+@c ---------------------------------------------\n+@node Library Project Files\n+@subsection Library Project Files\n+@c ---------------------------------------------\n+\n+@noindent\n+When @command{gnatmake} is invoked with a main project file that is a library\n+project file, it is not allowed to specify one or more mains on the command\n+line.\n+\n+When a library project file is specified, switches ^-b^/ACTION=BIND^ and\n+^-l^/ACTION=LINK^ have special meanings.\n+\n+@itemize @bullet\n+@item ^-b^/ACTION=BIND^ is only allowed for stand-alone libraries. It indicates\n+  to @command{gnatmake} that @command{gnatbind} should be invoked for the\n+  library.\n+\n+@item ^-l^/ACTION=LINK^ may be used for all library projects. It indicates\n+  to @command{gnatmake} that the binder generated file should be compiled\n+  (in the case of a stand-alone library) and that the library should be built.\n+@end itemize\n+\n+@c ---------------------------------------------\n+@node The GNAT Driver and Project Files\n+@section The GNAT Driver and Project Files\n+@c ---------------------------------------------\n+\n+@noindent\n+A number of GNAT tools, other than @command{^gnatmake^gnatmake^}\n+can benefit from project files:\n+(@command{^gnatbind^gnatbind^},\n+@command{^gnatcheck^gnatcheck^},\n+@command{^gnatclean^gnatclean^},\n+@command{^gnatelim^gnatelim^},\n+@command{^gnatfind^gnatfind^},\n+@command{^gnatlink^gnatlink^},\n+@command{^gnatls^gnatls^},\n+@command{^gnatmetric^gnatmetric^},\n+@command{^gnatpp^gnatpp^},\n+@command{^gnatstub^gnatstub^},\n+and @command{^gnatxref^gnatxref^}). However, none of these tools can be invoked\n+directly with a project file switch (@option{^-P^/PROJECT_FILE=^}).\n+They must be invoked through the @command{gnat} driver.\n+\n+The @command{gnat} driver is a wrapper that accepts a number of commands and\n+calls the corresponding tool. It was designed initially for VMS platforms (to\n+convert VMS qualifiers to Unix-style switches), but it is now available on all\n+GNAT platforms.\n+\n+On non-VMS platforms, the @command{gnat} driver accepts the following commands\n+(case insensitive):\n+\n+@itemize @bullet\n+@item BIND to invoke @command{^gnatbind^gnatbind^}\n+@item CHOP to invoke @command{^gnatchop^gnatchop^}\n+@item CLEAN to invoke @command{^gnatclean^gnatclean^}\n+@item COMP or COMPILE to invoke the compiler\n+@item ELIM to invoke @command{^gnatelim^gnatelim^}\n+@item FIND to invoke @command{^gnatfind^gnatfind^}\n+@item KR or KRUNCH to invoke @command{^gnatkr^gnatkr^}\n+@item LINK to invoke @command{^gnatlink^gnatlink^}\n+@item LS or LIST to invoke @command{^gnatls^gnatls^}\n+@item MAKE to invoke @command{^gnatmake^gnatmake^}\n+@item NAME to invoke @command{^gnatname^gnatname^}\n+@item PREP or PREPROCESS to invoke @command{^gnatprep^gnatprep^}\n+@item PP or PRETTY to invoke @command{^gnatpp^gnatpp^}\n+@item METRIC to invoke @command{^gnatmetric^gnatmetric^}\n+@item STUB to invoke @command{^gnatstub^gnatstub^}\n+@item XREF to invoke @command{^gnatxref^gnatxref^}\n+\n+@end itemize\n+\n+@noindent\n+(note that the compiler is invoked using the command\n+@command{^gnatmake -f -u -c^gnatmake -f -u -c^}).\n+\n+On non-VMS platforms, between @command{gnat} and the command, two\n+special switches may be used:\n+\n+@itemize @bullet\n+@item @command{-v} to display the invocation of the tool.\n+@item @command{-dn} to prevent the @command{gnat} driver from removing\n+  the temporary files it has created. These temporary files are\n+  configuration files and temporary file list files.\n+\n+@end itemize\n+\n+@noindent\n+The command may be followed by switches and arguments for the invoked\n+tool.\n+\n+@smallexample\n+  gnat bind -C main.ali\n+  gnat ls -a main\n+  gnat chop foo.txt\n+@end smallexample\n+\n+@noindent\n+Switches may also be put in text files, one switch per line, and the text\n+files may be specified with their path name preceded by '@@'.\n+\n+@smallexample\n+   gnat bind @@args.txt main.ali\n+@end smallexample\n+\n+@noindent\n+In addition, for commands BIND, COMP or COMPILE, FIND, ELIM, LS or LIST, LINK,\n+METRIC, PP or PRETTY, STUB and XREF, the project file related switches\n+(@option{^-P^/PROJECT_FILE^},\n+@option{^-X^/EXTERNAL_REFERENCE^} and\n+@option{^-vP^/MESSAGES_PROJECT_FILE=^x}) may be used in addition to\n+the switches of the invoking tool.\n+\n+When GNAT PP or GNAT PRETTY is used with a project file, but with no source\n+specified on the command line, it invokes @command{^gnatpp^gnatpp^} with all\n+the immediate sources of the specified project file.\n+\n+When GNAT METRIC is used with a project file, but with no source\n+specified on the command line, it invokes @command{^gnatmetric^gnatmetric^}\n+with all the immediate sources of the specified project file and with\n+@option{^-d^/DIRECTORY^} with the parameter pointing to the object directory\n+of the project.\n+\n+In addition, when GNAT PP, GNAT PRETTY or GNAT METRIC is used with\n+a project file, no source is specified on the command line and\n+switch ^-U^/ALL_PROJECTS^ is specified on the command line, then\n+the underlying tool (^gnatpp^gnatpp^ or\n+^gnatmetric^gnatmetric^) is invoked for all sources of all projects,\n+not only for the immediate sources of the main project.\n+@ifclear vms\n+(-U stands for Universal or Union of the project files of the project tree)\n+@end ifclear\n+\n+For each of the following commands, there is optionally a corresponding\n+package in the main project.\n+\n+@itemize @bullet\n+@item package @code{Binder} for command BIND (invoking @code{^gnatbind^gnatbind^})\n+\n+@item package @code{Check} for command CHECK (invoking\n+  @code{^gnatcheck^gnatcheck^})\n+\n+@item package @code{Compiler} for command COMP or COMPILE (invoking the compiler)\n+\n+@item package @code{Cross_Reference} for command XREF (invoking\n+  @code{^gnatxref^gnatxref^})\n+\n+@item package @code{Eliminate} for command ELIM (invoking\n+  @code{^gnatelim^gnatelim^})\n+\n+@item package @code{Finder} for command FIND (invoking @code{^gnatfind^gnatfind^})\n+\n+@item package @code{Gnatls} for command LS or LIST (invoking @code{^gnatls^gnatls^})\n+\n+@item package @code{Gnatstub} for command STUB\n+  (invoking @code{^gnatstub^gnatstub^})\n+\n+@item package @code{Linker} for command LINK (invoking @code{^gnatlink^gnatlink^})\n+\n+@item package @code{Check} for command CHECK\n+  (invoking @code{^gnatcheck^gnatcheck^})\n+\n+@item package @code{Metrics} for command METRIC\n+  (invoking @code{^gnatmetric^gnatmetric^})\n+\n+@item package @code{Pretty_Printer} for command PP or PRETTY\n+  (invoking @code{^gnatpp^gnatpp^})\n+\n+@end itemize\n+\n+@noindent\n+Package @code{Gnatls} has a unique attribute @code{Switches},\n+a simple variable with a string list value. It contains ^switches^switches^\n+for the invocation of @code{^gnatls^gnatls^}.\n+\n+@smallexample @c projectfile\n+@group\n+project Proj1 is\n+   package gnatls is\n+      for Switches\n+          use (\"^-a^-a^\",\n+               \"^-v^-v^\");\n+   end gnatls;\n+end Proj1;\n+@end group\n+@end smallexample\n+\n+@noindent\n+All other packages have two attribute @code{Switches} and\n+@code{^Default_Switches^Default_Switches^}.\n+\n+@code{Switches} is an indexed attribute, indexed by the\n+source file name, that has a string list value: the ^switches^switches^ to be\n+used when the tool corresponding to the package is invoked for the specific\n+source file.\n+\n+@code{^Default_Switches^Default_Switches^} is an attribute,\n+indexed by  the programming language that has a string list value.\n+@code{^Default_Switches^Default_Switches^ (\"Ada\")} contains the\n+^switches^switches^ for the invocation of the tool corresponding\n+to the package, except if a specific @code{Switches} attribute\n+is specified for the source file.\n+\n+@smallexample @c projectfile\n+@group\n+project Proj is\n+\n+   for Source_Dirs use (\"**\");\n+\n+   package gnatls is\n+      for Switches use\n+          (\"^-a^-a^\",\n+           \"^-v^-v^\");\n+   end gnatls;\n+@end group\n+@group\n+\n+   package Compiler is\n+      for ^Default_Switches^Default_Switches^ (\"Ada\")\n+          use (\"^-gnatv^-gnatv^\",\n+               \"^-gnatwa^-gnatwa^\");\n+   end Binder;\n+@end group\n+@group\n+\n+   package Binder is\n+      for ^Default_Switches^Default_Switches^ (\"Ada\")\n+          use (\"^-C^-C^\",\n+               \"^-e^-e^\");\n+   end Binder;\n+@end group\n+@group\n+\n+   package Linker is\n+      for ^Default_Switches^Default_Switches^ (\"Ada\")\n+          use (\"^-C^-C^\");\n+      for Switches (\"main.adb\")\n+          use (\"^-C^-C^\",\n+               \"^-v^-v^\",\n+               \"^-v^-v^\");\n+   end Linker;\n+@end group\n+@group\n+\n+   package Finder is\n+      for ^Default_Switches^Default_Switches^ (\"Ada\")\n+           use (\"^-a^-a^\",\n+                \"^-f^-f^\");\n+   end Finder;\n+@end group\n+@group\n+\n+   package Cross_Reference is\n+      for ^Default_Switches^Default_Switches^ (\"Ada\")\n+          use (\"^-a^-a^\",\n+               \"^-f^-f^\",\n+               \"^-d^-d^\",\n+               \"^-u^-u^\");\n+   end Cross_Reference;\n+end Proj;\n+@end group\n+@end smallexample\n+\n+@noindent\n+With the above project file, commands such as\n+\n+@smallexample\n+   ^gnat comp -Pproj main^GNAT COMP /PROJECT_FILE=PROJ MAIN^\n+   ^gnat ls -Pproj main^GNAT LIST /PROJECT_FILE=PROJ MAIN^\n+   ^gnat xref -Pproj main^GNAT XREF /PROJECT_FILE=PROJ MAIN^\n+   ^gnat bind -Pproj main.ali^GNAT BIND /PROJECT_FILE=PROJ MAIN.ALI^\n+   ^gnat link -Pproj main.ali^GNAT LINK /PROJECT_FILE=PROJ MAIN.ALI^\n+@end smallexample\n+\n+@noindent\n+will set up the environment properly and invoke the tool with the switches\n+found in the package corresponding to the tool:\n+@code{^Default_Switches^Default_Switches^ (\"Ada\")} for all tools,\n+except @code{Switches (\"main.adb\")}\n+for @code{^gnatlink^gnatlink^}.\n+It is also possible to invoke some of the tools,\n+(@code{^gnatcheck^gnatcheck^},\n+@code{^gnatmetric^gnatmetric^},\n+and @code{^gnatpp^gnatpp^})\n+on a set of project units thanks to the combination of the switches\n+@option{-P}, @option{-U} and possibly the main unit when one is interested\n+in its closure. For instance,\n+@smallexample\n+gnat metric -Pproj\n+@end smallexample\n+\n+@noindent\n+will compute the metrics for all the immediate units of project\n+@code{proj}.\n+@smallexample\n+gnat metric -Pproj -U\n+@end smallexample\n+\n+@noindent\n+will compute the metrics for all the units of the closure of projects\n+rooted at @code{proj}.\n+@smallexample\n+gnat metric -Pproj -U main_unit\n+@end smallexample\n+\n+@noindent\n+will compute the metrics for the closure of units rooted at\n+@code{main_unit}. This last possibility relies implicitly\n+on @command{gnatbind}'s option @option{-R}. But if the argument files for the\n+tool invoked by the @command{gnat} driver are explicitly  specified\n+either directly or through the tool @option{-files} option, then the tool\n+is called only for these explicitly specified files.\n+\n+@c ---------------------------------------------\n+@node The Development Environments\n+@section The Development Environments\n+@c ---------------------------------------------\n+\n+@noindent\n+See the appropriate manuals for more details. These environments will\n+store a number of settings in the project itself, when they are meant\n+to be shared by the whole team working on the project. Here are the\n+attributes defined in the package @b{IDE} in projects.\n+\n+@table @code\n+@item Remote_Host\n+This is a simple attribute. Its value is a string that designates the remote\n+host in a cross-compilation environment, to be used for remote compilation and\n+debugging. This field should not be specified when running on the local\n+machine.\n+\n+@item Program_Host\n+This is a simple attribute. Its value is a string that specifies the\n+name of IP address of the embedded target in a cross-compilation environment,\n+on which the program should execute.\n+\n+@item Communication_Protocol\n+This is a simple string attribute. Its value is the name of the protocol\n+to use to communicate with the target in a cross-compilation environment,\n+e.g.@: @code{\"wtx\"} or @code{\"vxworks\"}.\n+\n+@item Compiler_Command\n+This is an indexed attribute, whose domain is a language name. Its\n+value is  string that denotes the command to be used to invoke the compiler.\n+The value of @code{Compiler_Command (\"Ada\")} is expected to be compatible with\n+@command{gnatmake}, in particular in the handling of switches.\n+\n+@item Debugger_Command\n+This is simple attribute, Its value is a string that specifies the name of\n+the debugger to be used, such as gdb, powerpc-wrs-vxworks-gdb or gdb-4.\n+\n+@item Default_Switches\n+This is an indexed attribute. Its indexes are the name of the\n+external tools that the GNAT Programming System (GPS) is supporting. Its\n+value is a list of switches to use when invoking that tool.\n+\n+@item  Gnatlist\n+This is a simple attribute.  Its value is a string that specifies the name\n+of the @command{gnatls} utility to be used to retrieve information about the\n+predefined path; e.g., @code{\"gnatls\"}, @code{\"powerpc-wrs-vxworks-gnatls\"}.\n+\n+@item VCS_Kind\n+This is a simple attribute. Its value is a string used to specify the\n+Version Control System (VCS) to be used for this project, e.g.@: CVS, RCS\n+ClearCase or Perforce.\n+\n+@item Gnat\n+This is a simple attribute. Its value is a string that specifies the name\n+of the @command{gnat} utility to be used when executing various tools from\n+GPS, in particular @code{\"gnat pp\"}, @code{\"gnat stub\"},@dots{}\n+\n+@item VCS_File_Check\n+This is a simple attribute. Its value is a string that specifies the\n+command used by the VCS to check the validity of a file, either\n+when the user explicitly asks for a check, or as a sanity check before\n+doing the check-in.\n+\n+@item VCS_Log_Check\n+This is a simple attribute. Its value is a string that specifies\n+the command used by the VCS to check the validity of a log file.\n+\n+@item VCS_Repository_Root\n+The VCS repository root path. This is used to create tags or branches\n+of the repository. For subversion the value should be the @code{URL}\n+as specified to check-out the working copy of the repository.\n+\n+@item VCS_Patch_Root\n+The local root directory to use for building patch file. All patch chunks\n+will be relative to this path. The root project directory is used if\n+this value is not defined.\n+\n+@end table\n+\n @c *****************************************\n @c * Cross-referencing tools\n @c *****************************************"}, {"sha": "f170bfd637ee9b811f7f14a10d320392b24453ec", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 84, "deletions": 963, "changes": 1047, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b671e31b48d0bd7a118f0e4de475b7be42efc976/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b671e31b48d0bd7a118f0e4de475b7be42efc976/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=b671e31b48d0bd7a118f0e4de475b7be42efc976", "patch": "@@ -82,7 +82,6 @@ the information on the command line itself). They share common switches\n to control the loading of the project (in particular\n @option{^-P^/PROJECT_FILE=^@emph{projectfile}} and\n @option{^-X^/EXTERNAL_REFERENCE=^@emph{vbl}=@emph{value}}).\n-@xref{Switches Related to Project Files}.\n \n The Project Manager supports a wide range of development strategies,\n for systems of all sizes.  Here are some typical practices that are\n@@ -875,8 +874,7 @@ the associated language, and thus the compiler to use.\n \n Note that the use by the Ada compiler of pragmas Source_File_Name is not\n supported when using project files. You must use the features described in this\n-paragraph. You can however specify other configuration pragmas\n-(@pxref{Specifying Configuration Pragmas}).\n+paragraph. You can however specify other configuration pragmas.\n \n The following attributes can be defined in package @code{Naming}:\n \n@@ -1532,13 +1530,13 @@ The second parameter to @code{external} is optional, and is the default\n value to use if \"mode\" is not set from the command line or the environment.\n \n In order to set the switches according to the different scenarios, other\n-constructs have to be introduced such as typed variables and case statements.\n+constructs have to be introduced such as typed variables and case constructions.\n \n @cindex typed variable\n-@cindex case statement\n+@cindex case construction\n A @b{typed variable} is a variable that\n can take only a limited number of values, similar to an enumeration in Ada.\n-Such a variable can then be used in a @b{case statement} and create conditional\n+Such a variable can then be used in a @b{case construction} and create conditional\n sections in the project. The following example shows how this can be done:\n \n @smallexample @c projectfile\n@@ -1565,7 +1563,7 @@ project is considered as invalid.\n \n The @code{Mode} variable is initialized with an external value\n defaulting to @code{\"debug\"}. This default could be omitted and that would\n-force the user to define the value. Finally, we can use a case statement to set the\n+force the user to define the value. Finally, we can use a case construction to set the\n switches depending on the scenario the user has chosen.\n \n Most aspects of the projects can depend on scenarios. The notable exception\n@@ -2914,8 +2912,8 @@ attributes.\n * External Values::\n * Typed String Declaration::\n * Variables::\n+* Case Constructions::\n * Attributes::\n-* Case Statements::\n @end menu\n \n @c ---------------------------------------------\n@@ -3122,6 +3120,9 @@ The following packages are currently supported in project files\n   @code{Builder}. The first string should always be @code{-rules} to specify\n   that all the other options belong to the @code{-rules} section of the\n   parameters to @command{gnatcheck}.\n+@item Clean\n+  This package specifies the options used when cleaning a project or a project\n+  tree using the tools @command{gnatclean} or @command{gprclean}.\n @item Compiler\n   This package specifies the compilation options used by the compiler for\n   each languages. @xref{Tools Options in Project Files}.\n@@ -3151,17 +3152,12 @@ The following packages are currently supported in project files\n @item IDE\n   This package specifies the options used when starting an integrated\n   development environment, for instance @command{GPS} or @command{Gnatbench}.\n-  @xref{The Development Environments}.\n @item Install\n   This package specifies the options used when installing a project\n   with @command{gprinstall}. @xref{Installation}.\n @item Linker\n   This package specifies the options used by the linker.\n   @xref{Main Subprograms}.\n-@item Makefile\n-@cindex Makefile package in projects\n-  This package is used by the GPS plugin Makefile.py. See the documentation\n-  in that plugin (from GPS: /Tools/Plug-ins).\n @item Metrics\n   This package specifies the options used when calling the tool\n   @command{gnatmetric} via the @command{gnat} driver. Its attributes\n@@ -3178,6 +3174,9 @@ The following packages are currently supported in project files\n   @command{gnatpp} via the @command{gnat} driver. Its attributes\n   @b{Default_Switches} and @b{Switches} have the same semantics as for the\n   package @code{Builder}.\n+@item Remote\n+  This package is used by @command{gprbuild} to describe how distributed\n+  compilation should be done.\n @item Stack\n   This package specifies the options used when calling the tool\n   @command{gnatstack} via the @command{gnat} driver. Its attributes\n@@ -3430,7 +3429,7 @@ Here is an example of a string type declaration:\n Variables of a string type are called @b{typed variables}; all other\n variables are called @b{untyped variables}. Typed variables are\n particularly useful in @code{case} constructions, to support conditional\n-attribute declarations. (@pxref{Case Statements}).\n+attribute declarations. (@pxref{Case Constructions}).\n \n A string type may be referenced by its name if it has been declared in the same\n project file, or by an expanded name whose prefix is the name of the project\n@@ -3452,7 +3451,7 @@ string (\"\").\n \n A @b{typed} variable can be used as part of a @b{case} expression to\n compute the value, but it can only be declared once in the project file,\n-so that all case statements see the same value for the variable. This\n+so that all case constructions see the same value for the variable. This\n provides more consistency and makes the project easier to understand.\n The syntax for its declaration is identical to the Ada syntax for an\n object declaration. In effect, a typed variable acts as a constant.\n@@ -3513,6 +3512,75 @@ A @b{context} may be one of the following:\n   whose selector is a package name in that project.\n @end itemize\n \n+@c ---------------------------------------------\n+@node Case Constructions\n+@subsection Case Constructions\n+@c ---------------------------------------------\n+\n+@noindent\n+A @b{case} statement is used in a project file to effect conditional\n+behavior. Through this statement, you can set the value of attributes\n+and variables depending on the value previously assigned to a typed\n+variable.\n+\n+All choices in a choice list must be distinct. Unlike Ada, the choice\n+lists of all alternatives do not need to include all values of the type.\n+An @code{others} choice must appear last in the list of alternatives.\n+\n+The syntax of a @code{case} construction is based on the Ada case statement\n+(although the @code{null} statement for empty alternatives is optional).\n+\n+The case expression must be a typed string variable, whose value is often\n+given by an external reference (@pxref{External Values}).\n+\n+Each alternative starts with the reserved word @code{when}, either a list of\n+literal strings separated by the @code{\"|\"} character or the reserved word\n+@code{others}, and the @code{\"=>\"} token.\n+Each literal string must belong to the string type that is the type of the\n+case variable.\n+After each @code{=>}, there are zero or more statements.  The only\n+statements allowed in a case construction are other case constructions,\n+attribute declarations and variable declarations. String type declarations and\n+package declarations are not allowed. Variable declarations are restricted to\n+variables that have already been declared before the case construction.\n+\n+@smallexample\n+case_statement ::=\n+  @i{case} @i{<typed_variable_>}name @i{is} @{case_item@} @i{end case} ;\n+\n+case_item ::=\n+  @i{when} discrete_choice_list =>\n+    @{case_statement\n+      | attribute_declaration\n+      | variable_declaration\n+      | empty_declaration@}\n+\n+discrete_choice_list ::= string_literal @{| string_literal@} | @i{others}\n+@end smallexample\n+\n+@noindent\n+Here is a typical example:\n+\n+@smallexample @c projectfile\n+@group\n+project MyProj is\n+   type OS_Type is (\"GNU/Linux\", \"Unix\", \"NT\", \"VMS\");\n+   OS : OS_Type := external (\"OS\", \"GNU/Linux\");\n+\n+   package Compiler is\n+     case OS is\n+       when \"GNU/Linux\" | \"Unix\" =>\n+         for Switches (\"Ada\") use (\"-gnath\");\n+       when \"NT\" =>\n+         for Switches (\"Ada\") use (\"-gnatP\");\n+       when others =>\n+         null;\n+     end case;\n+   end Compiler;\n+end MyProj;\n+@end group\n+@end smallexample\n+\n @c ---------------------------------------------\n @node Attributes\n @subsection Attributes\n@@ -3666,7 +3734,7 @@ system (file). The text is between brackets ([]) if the index is optional.\n @item Specification_Exceptions @tab list @tab Naming @tab insensitive (language)\n @item Implementation_Exceptions @tab list @tab Naming @tab insensitive (language)\n @headitem\n-   Building @tab @tab @tab @pxref{Switches and Project Files}\n+   Building @tab @tab @tab\n @item Default_Switches @tab list @tab Builder, Compiler, Binder, Linker, Cross_Reference, Finder, Pretty_Printer, gnatstub, Check, Synchronize, Eliminate, Metrics, IDE @tab insensitive (language name)\n @item Switches @tab list @tab Builder, Compiler, Binder, Linker, Cross_Reference, Finder, gnatls, Pretty_Printer, gnatstub, Check, Synchronize, Eliminate, Metrics, Stack @tab [file] (file name)\n @item Local_Configuration_Pragmas @tab string @tab Compiler @tab -\n@@ -3757,950 +3825,3 @@ system (file). The text is between brackets ([]) if the index is optional.\n @item Response_File_Switches @tab list @tab Linker @tab -\n @end multitable\n \n-@c ---------------------------------------------\n-@node Case Statements\n-@subsection Case Statements\n-@c ---------------------------------------------\n-\n-@noindent\n-A @b{case} statement is used in a project file to effect conditional\n-behavior. Through this statement, you can set the value of attributes\n-and variables depending on the value previously assigned to a typed\n-variable.\n-\n-All choices in a choice list must be distinct. Unlike Ada, the choice\n-lists of all alternatives do not need to include all values of the type.\n-An @code{others} choice must appear last in the list of alternatives.\n-\n-The syntax of a @code{case} construction is based on the Ada case statement\n-(although the @code{null} statement for empty alternatives is optional).\n-\n-The case expression must be a typed string variable, whose value is often\n-given by an external reference (@pxref{External Values}).\n-\n-Each alternative starts with the reserved word @code{when}, either a list of\n-literal strings separated by the @code{\"|\"} character or the reserved word\n-@code{others}, and the @code{\"=>\"} token.\n-Each literal string must belong to the string type that is the type of the\n-case variable.\n-After each @code{=>}, there are zero or more statements.  The only\n-statements allowed in a case construction are other case statements,\n-attribute declarations and variable declarations. String type declarations and\n-package declarations are not allowed. Variable declarations are restricted to\n-variables that have already been declared before the case construction.\n-\n-@smallexample\n-case_statement ::=\n-  @i{case} @i{<typed_variable_>}name @i{is} @{case_item@} @i{end case} ;\n-\n-case_item ::=\n-  @i{when} discrete_choice_list =>\n-    @{case_statement\n-      | attribute_declaration\n-      | variable_declaration\n-      | empty_declaration@}\n-\n-discrete_choice_list ::= string_literal @{| string_literal@} | @i{others}\n-@end smallexample\n-\n-@noindent\n-Here is a typical example:\n-\n-@smallexample @c projectfile\n-@group\n-project MyProj is\n-   type OS_Type is (\"GNU/Linux\", \"Unix\", \"NT\", \"VMS\");\n-   OS : OS_Type := external (\"OS\", \"GNU/Linux\");\n-\n-   package Compiler is\n-     case OS is\n-       when \"GNU/Linux\" | \"Unix\" =>\n-         for Switches (\"Ada\") use (\"-gnath\");\n-       when \"NT\" =>\n-         for Switches (\"Ada\") use (\"-gnatP\");\n-       when others =>\n-         null;\n-     end case;\n-   end Compiler;\n-end MyProj;\n-@end group\n-@end smallexample\n-\n-@c ---------------------------------------------\n-@node Tools Supporting Project Files\n-@chapter Tools Supporting Project Files\n-@c ---------------------------------------------\n-\n-@noindent\n-\n-@menu\n-* gnatmake and Project Files::\n-* The GNAT Driver and Project Files::\n-* The Development Environments::\n-@end menu\n-\n-@c ---------------------------------------------\n-@node gnatmake and Project Files\n-@section gnatmake and Project Files\n-@c ---------------------------------------------\n-\n-@noindent\n-This section covers several topics related to @command{gnatmake} and\n-project files: defining ^switches^switches^ for @command{gnatmake}\n-and for the tools that it invokes; specifying configuration pragmas;\n-the use of the @code{Main} attribute; building and rebuilding library project\n-files.\n-\n-@menu\n-* Switches Related to Project Files::\n-* Switches and Project Files::\n-* Specifying Configuration Pragmas::\n-* Project Files and Main Subprograms::\n-* Library Project Files::\n-@end menu\n-\n-@c ---------------------------------------------\n-@node Switches Related to Project Files\n-@subsection Switches Related to Project Files\n-@c ---------------------------------------------\n-\n-@noindent\n-The following switches are used by GNAT tools that support project files:\n-\n-@table @option\n-\n-@item ^-P^/PROJECT_FILE=^@var{project}\n-@cindex @option{^-P^/PROJECT_FILE^} (any project-aware tool)\n-Indicates the name of a project file. This project file will be parsed with\n-the verbosity indicated by @option{^-vP^MESSAGE_PROJECT_FILES=^@emph{x}},\n-if any, and using the external references indicated\n-by @option{^-X^/EXTERNAL_REFERENCE^} switches, if any.\n-@ifclear vms\n-There may zero, one or more spaces between @option{-P} and @var{project}.\n-@end ifclear\n-\n-There must be only one @option{^-P^/PROJECT_FILE^} switch on the command line.\n-\n-Since the Project Manager parses the project file only after all the switches\n-on the command line are checked, the order of the switches\n-@option{^-P^/PROJECT_FILE^},\n-@option{^-vP^/MESSAGES_PROJECT_FILE=^@emph{x}}\n-or @option{^-X^/EXTERNAL_REFERENCE^} is not significant.\n-\n-@item ^-X^/EXTERNAL_REFERENCE=^@var{name=value}\n-@cindex @option{^-X^/EXTERNAL_REFERENCE^} (any project-aware tool)\n-Indicates that external variable @var{name} has the value @var{value}.\n-The Project Manager will use this value for occurrences of\n-@code{external(name)} when parsing the project file.\n-\n-@ifclear vms\n-If @var{name} or @var{value} includes a space, then @var{name=value} should be\n-put between quotes.\n-@smallexample\n-  -XOS=NT\n-  -X\"user=John Doe\"\n-@end smallexample\n-@end ifclear\n-\n-Several @option{^-X^/EXTERNAL_REFERENCE^} switches can be used simultaneously.\n-If several @option{^-X^/EXTERNAL_REFERENCE^} switches specify the same\n-@var{name}, only the last one is used.\n-\n-An external variable specified with a @option{^-X^/EXTERNAL_REFERENCE^} switch\n-takes precedence over the value of the same name in the environment.\n-\n-@item ^-vP^/MESSAGES_PROJECT_FILE=^@emph{x}\n-@cindex @option{^-vP^/MESSAGES_PROJECT_FILE^} (any project-aware tool)\n-Indicates the verbosity of the parsing of GNAT project files.\n-\n-@ifclear vms\n-@option{-vP0} means Default;\n-@option{-vP1} means Medium;\n-@option{-vP2} means High.\n-@end ifclear\n-\n-@ifset vms\n-There are three possible options for this qualifier: DEFAULT, MEDIUM and\n-HIGH.\n-@end ifset\n-\n-The default is ^Default^DEFAULT^: no output for syntactically correct\n-project files.\n-If several @option{^-vP^/MESSAGES_PROJECT_FILE=^@emph{x}} switches are present,\n-only the last one is used.\n-\n-@item ^-aP^/ADD_PROJECT_SEARCH_DIR=^<dir>\n-@cindex @option{^-aP^/ADD_PROJECT_SEARCH_DIR=^} (any project-aware tool)\n-Add directory <dir> at the beginning of the project search path, in order,\n-after the current working directory.\n-\n-@ifclear vms\n-@item -eL\n-@cindex @option{-eL} (any project-aware tool)\n-Follow all symbolic links when processing project files.\n-@end ifclear\n-\n-@item ^--subdirs^/SUBDIRS^=<subdir>\n-@cindex @option{^--subdirs^/SUBDIRS^=} (gnatmake and gnatclean)\n-This switch is recognized by @command{gnatmake} and @command{gnatclean}. It\n-indicate that the real directories (except the source directories) are the\n-subdirectories <subdir> of the directories specified in the project files.\n-This applies in particular to object directories, library directories and\n-exec directories. If the subdirectories do not exist, they are created\n-automatically.\n-\n-@end table\n-\n-@c ---------------------------------------------\n-@node Switches and Project Files\n-@subsection Switches and Project Files\n-@c ---------------------------------------------\n-\n-@noindent\n-@ifset vms\n-It is not currently possible to specify VMS style qualifiers in the project\n-files; only Unix style ^switches^switches^ may be specified.\n-@end ifset\n-\n-For each of the packages @code{Builder}, @code{Compiler}, @code{Binder}, and\n-@code{Linker}, you can specify a @code{^Default_Switches^Default_Switches^}\n-attribute, a @code{Switches} attribute, or both;\n-as their names imply, these ^switch^switch^-related\n-attributes affect the ^switches^switches^ that are used for each of these GNAT\n-components when\n-@command{gnatmake} is invoked.  As will be explained below, these\n-component-specific ^switches^switches^ precede\n-the ^switches^switches^ provided on the @command{gnatmake} command line.\n-\n-The @code{^Default_Switches^Default_Switches^} attribute is an attribute\n-indexed by language name (case insensitive) whose value is a string list.\n-For example:\n-\n-@smallexample @c projectfile\n-@group\n-package Compiler is\n-  for ^Default_Switches^Default_Switches^ (\"Ada\")\n-      use (\"^-gnaty^-gnaty^\",\n-           \"^-v^-v^\");\n-end Compiler;\n-@end group\n-@end smallexample\n-\n-@noindent\n-The @code{Switches} attribute is indexed on a file name (which may or may\n-not be case sensitive, depending\n-on the operating system) whose value is a string list.  For example:\n-\n-@smallexample @c projectfile\n-@group\n-package Builder is\n-   for Switches (\"main1.adb\")\n-       use (\"^-O2^-O2^\");\n-   for Switches (\"main2.adb\")\n-       use (\"^-g^-g^\");\n-end Builder;\n-@end group\n-@end smallexample\n-\n-@noindent\n-For the @code{Builder} package, the file names must designate source files\n-for main subprograms.  For the @code{Binder} and @code{Linker} packages, the\n-file names must designate @file{ALI} or source files for main subprograms.\n-In each case just the file name without an explicit extension is acceptable.\n-\n-For each tool used in a program build (@command{gnatmake}, the compiler, the\n-binder, and the linker), the corresponding package @dfn{contributes} a set of\n-^switches^switches^ for each file on which the tool is invoked, based on the\n-^switch^switch^-related attributes defined in the package.\n-In particular, the ^switches^switches^\n-that each of these packages contributes for a given file @var{f} comprise:\n-\n-@itemize @bullet\n-@item the value of attribute @code{Switches (@var{f})},\n-  if it is specified in the package for the given file,\n-@item otherwise, the value of @code{^Default_Switches^Default_Switches^ (\"Ada\")},\n-  if it is specified in the package.\n-\n-@end itemize\n-\n-@noindent\n-If neither of these attributes is defined in the package, then the package does\n-not contribute any ^switches^switches^ for the given file.\n-\n-When @command{gnatmake} is invoked on a file, the ^switches^switches^ comprise\n-two sets, in the following order: those contributed for the file\n-by the @code{Builder} package;\n-and the switches passed on the command line.\n-\n-When @command{gnatmake} invokes a tool (compiler, binder, linker) on a file,\n-the ^switches^switches^ passed to the tool comprise three sets,\n-in the following order:\n-\n-@enumerate\n-@item\n-the applicable ^switches^switches^ contributed for the file\n-by the @code{Builder} package in the project file supplied on the command line;\n-\n-@item\n-those contributed for the file by the package (in the relevant project file --\n-see below) corresponding to the tool; and\n-\n-@item\n-the applicable switches passed on the command line.\n-@end enumerate\n-\n-The term @emph{applicable ^switches^switches^} reflects the fact that\n-@command{gnatmake} ^switches^switches^ may or may not be passed to individual\n-tools, depending on the individual ^switch^switch^.\n-\n-@command{gnatmake} may invoke the compiler on source files from different\n-projects. The Project Manager will use the appropriate project file to\n-determine the @code{Compiler} package for each source file being compiled.\n-Likewise for the @code{Binder} and @code{Linker} packages.\n-\n-As an example, consider the following package in a project file:\n-\n-@smallexample @c projectfile\n-@group\n-project Proj1 is\n-   package Compiler is\n-      for ^Default_Switches^Default_Switches^ (\"Ada\")\n-          use (\"^-g^-g^\");\n-      for Switches (\"a.adb\")\n-          use (\"^-O1^-O1^\");\n-      for Switches (\"b.adb\")\n-          use (\"^-O2^-O2^\",\n-               \"^-gnaty^-gnaty^\");\n-   end Compiler;\n-end Proj1;\n-@end group\n-@end smallexample\n-\n-@noindent\n-If @command{gnatmake} is invoked with this project file, and it needs to\n-compile, say, the files @file{a.adb}, @file{b.adb}, and @file{c.adb}, then\n-@file{a.adb} will be compiled with the ^switch^switch^\n-@option{^-O1^-O1^},\n-@file{b.adb} with ^switches^switches^\n-@option{^-O2^-O2^}\n-and @option{^-gnaty^-gnaty^},\n-and @file{c.adb} with @option{^-g^-g^}.\n-\n-The following example illustrates the ordering of the ^switches^switches^\n-contributed by different packages:\n-\n-@smallexample @c projectfile\n-@group\n-project Proj2 is\n-   package Builder is\n-      for Switches (\"main.adb\")\n-          use (\"^-g^-g^\",\n-               \"^-O1^-)1^\",\n-               \"^-f^-f^\");\n-   end Builder;\n-@end group\n-\n-@group\n-   package Compiler is\n-      for Switches (\"main.adb\")\n-          use (\"^-O2^-O2^\");\n-   end Compiler;\n-end Proj2;\n-@end group\n-@end smallexample\n-\n-@noindent\n-If you issue the command:\n-\n-@smallexample\n-    gnatmake ^-Pproj2^/PROJECT_FILE=PROJ2^ -O0 main\n-@end smallexample\n-\n-@noindent\n-then the compiler will be invoked on @file{main.adb} with the following\n-sequence of ^switches^switches^\n-\n-@smallexample\n-   ^-g -O1 -O2 -O0^-g -O1 -O2 -O0^\n-@end smallexample\n-\n-@noindent\n-with the last @option{^-O^-O^}\n-^switch^switch^ having precedence over the earlier ones;\n-several other ^switches^switches^\n-(such as @option{^-c^-c^}) are added implicitly.\n-\n-The ^switches^switches^\n-@option{^-g^-g^}\n-and @option{^-O1^-O1^} are contributed by package\n-@code{Builder},  @option{^-O2^-O2^} is contributed\n-by the package @code{Compiler}\n-and @option{^-O0^-O0^} comes from the command line.\n-\n-The @option{^-g^-g^}\n-^switch^switch^ will also be passed in the invocation of\n-@command{Gnatlink.}\n-\n-A final example illustrates switch contributions from packages in different\n-project files:\n-\n-@smallexample @c projectfile\n-@group\n-project Proj3 is\n-   for Source_Files use (\"pack.ads\", \"pack.adb\");\n-   package Compiler is\n-      for ^Default_Switches^Default_Switches^ (\"Ada\")\n-          use (\"^-gnata^-gnata^\");\n-   end Compiler;\n-end Proj3;\n-@end group\n-\n-@group\n-with \"Proj3\";\n-project Proj4 is\n-   for Source_Files use (\"foo_main.adb\", \"bar_main.adb\");\n-   package Builder is\n-      for Switches (\"foo_main.adb\")\n-          use (\"^-s^-s^\",\n-               \"^-g^-g^\");\n-   end Builder;\n-end Proj4;\n-@end group\n-\n-@group\n--- Ada source file:\n-with Pack;\n-procedure Foo_Main is\n-   @dots{}\n-end Foo_Main;\n-@end group\n-@end smallexample\n-\n-@noindent\n-If the command is\n-@smallexample\n-gnatmake ^-PProj4^/PROJECT_FILE=PROJ4^ foo_main.adb -cargs -gnato\n-@end smallexample\n-\n-@noindent\n-then the ^switches^switches^ passed to the compiler for @file{foo_main.adb} are\n-@option{^-g^-g^} (contributed by the package @code{Proj4.Builder}) and\n-@option{^-gnato^-gnato^} (passed on the command line).\n-When the imported package @code{Pack} is compiled, the ^switches^switches^ used\n-are @option{^-g^-g^} from @code{Proj4.Builder},\n-@option{^-gnata^-gnata^} (contributed from package @code{Proj3.Compiler},\n-and @option{^-gnato^-gnato^} from the command line.\n-\n-When using @command{gnatmake} with project files, some ^switches^switches^ or\n-arguments may be expressed as relative paths. As the working directory where\n-compilation occurs may change, these relative paths are converted to absolute\n-paths. For the ^switches^switches^ found in a project file, the relative paths\n-are relative to the project file directory, for the switches on the command\n-line, they are relative to the directory where @command{gnatmake} is invoked.\n-The ^switches^switches^ for which this occurs are:\n-^-I^-I^,\n-^-A^-A^,\n-^-L^-L^,\n-^-aO^-aO^,\n-^-aL^-aL^,\n-^-aI^-aI^, as well as all arguments that are not switches (arguments to\n-^switch^switch^\n-^-o^-o^, object files specified in package @code{Linker} or after\n--largs on the command line). The exception to this rule is the ^switch^switch^\n-^--RTS=^--RTS=^ for which a relative path argument is never converted.\n-\n-@c ---------------------------------------------\n-@node Specifying Configuration Pragmas\n-@subsection Specifying Configuration Pragmas\n-@c ---------------------------------------------\n-\n-@noindent\n-When using @command{gnatmake} with project files, if there exists a file\n-@file{gnat.adc} that contains configuration pragmas, this file will be\n-ignored.\n-\n-Configuration pragmas can be defined by means of the following attributes in\n-project files: @code{Global_Configuration_Pragmas} in package @code{Builder}\n-and @code{Local_Configuration_Pragmas} in package @code{Compiler}.\n-\n-Both these attributes are single string attributes. Their values is the path\n-name of a file containing configuration pragmas. If a path name is relative,\n-then it is relative to the project directory of the project file where the\n-attribute is defined.\n-\n-When compiling a source, the configuration pragmas used are, in order,\n-those listed in the file designated by attribute\n-@code{Global_Configuration_Pragmas} in package @code{Builder} of the main\n-project file, if it is specified, and those listed in the file designated by\n-attribute @code{Local_Configuration_Pragmas} in package @code{Compiler} of\n-the project file of the source, if it exists.\n-\n-@c ---------------------------------------------\n-@node Project Files and Main Subprograms\n-@subsection Project Files and Main Subprograms\n-@c ---------------------------------------------\n-\n-@noindent\n-When using a project file, you can invoke @command{gnatmake}\n-with one or several main subprograms, by specifying their source files on the\n-command line.\n-\n-@smallexample\n-    gnatmake ^-P^/PROJECT_FILE=^prj main1.adb main2.adb main3.adb\n-@end smallexample\n-\n-@noindent\n-Each of these needs to be a source file of the same project, except\n-when the switch ^-u^/UNIQUE^ is used.\n-\n-When ^-u^/UNIQUE^ is not used, all the mains need to be sources of the\n-same project, one of the project in the tree rooted at the project specified\n-on the command line. The package @code{Builder} of this common project, the\n-\"main project\" is the one that is considered by @command{gnatmake}.\n-\n-When ^-u^/UNIQUE^ is used, the specified source files may be in projects\n-imported directly or indirectly by the project specified on the command line.\n-Note that if such a source file is not part of the project specified on the\n-command line, the ^switches^switches^ found in package @code{Builder} of the\n-project specified on the command line, if any, that are transmitted\n-to the compiler will still be used, not those found in the project file of\n-the source file.\n-\n-When using a project file, you can also invoke @command{gnatmake} without\n-explicitly specifying any main, and the effect depends on whether you have\n-defined the @code{Main} attribute.  This attribute has a string list value,\n-where each element in the list is the name of a source file (the file\n-extension is optional) that contains a unit that can be a main subprogram.\n-\n-If the @code{Main} attribute is defined in a project file as a non-empty\n-string list and the switch @option{^-u^/UNIQUE^} is not used on the command\n-line, then invoking @command{gnatmake} with this project file but without any\n-main on the command line is equivalent to invoking @command{gnatmake} with all\n-the file names in the @code{Main} attribute on the command line.\n-\n-Example:\n-@smallexample @c projectfile\n-@group\n-   project Prj is\n-      for Main use (\"main1.adb\", \"main2.adb\", \"main3.adb\");\n-   end Prj;\n-@end group\n-@end smallexample\n-\n-@noindent\n-With this project file, @code{\"gnatmake ^-Pprj^/PROJECT_FILE=PRJ^\"}\n-is equivalent to\n-@code{\"gnatmake ^-Pprj^/PROJECT_FILE=PRJ^ main1.adb main2.adb main3.adb\"}.\n-\n-When the project attribute @code{Main} is not specified, or is specified\n-as an empty string list, or when the switch @option{-u} is used on the command\n-line, then invoking @command{gnatmake} with no main on the command line will\n-result in all immediate sources of the project file being checked, and\n-potentially recompiled. Depending on the presence of the switch @option{-u},\n-sources from other project files on which the immediate sources of the main\n-project file depend are also checked and potentially recompiled. In other\n-words, the @option{-u} switch is applied to all of the immediate sources of the\n-main project file.\n-\n-When no main is specified on the command line and attribute @code{Main} exists\n-and includes several mains, or when several mains are specified on the\n-command line, the default ^switches^switches^ in package @code{Builder} will\n-be used for all mains, even if there are specific ^switches^switches^\n-specified for one or several mains.\n-\n-But the ^switches^switches^ from package @code{Binder} or @code{Linker} will be\n-the specific ^switches^switches^ for each main, if they are specified.\n-\n-@c ---------------------------------------------\n-@node Library Project Files\n-@subsection Library Project Files\n-@c ---------------------------------------------\n-\n-@noindent\n-When @command{gnatmake} is invoked with a main project file that is a library\n-project file, it is not allowed to specify one or more mains on the command\n-line.\n-\n-When a library project file is specified, switches ^-b^/ACTION=BIND^ and\n-^-l^/ACTION=LINK^ have special meanings.\n-\n-@itemize @bullet\n-@item ^-b^/ACTION=BIND^ is only allowed for stand-alone libraries. It indicates\n-  to @command{gnatmake} that @command{gnatbind} should be invoked for the\n-  library.\n-\n-@item ^-l^/ACTION=LINK^ may be used for all library projects. It indicates\n-  to @command{gnatmake} that the binder generated file should be compiled\n-  (in the case of a stand-alone library) and that the library should be built.\n-@end itemize\n-\n-@c ---------------------------------------------\n-@node The GNAT Driver and Project Files\n-@section The GNAT Driver and Project Files\n-@c ---------------------------------------------\n-\n-@noindent\n-A number of GNAT tools, other than @command{^gnatmake^gnatmake^}\n-can benefit from project files:\n-(@command{^gnatbind^gnatbind^},\n-@command{^gnatcheck^gnatcheck^},\n-@command{^gnatclean^gnatclean^},\n-@command{^gnatelim^gnatelim^},\n-@command{^gnatfind^gnatfind^},\n-@command{^gnatlink^gnatlink^},\n-@command{^gnatls^gnatls^},\n-@command{^gnatmetric^gnatmetric^},\n-@command{^gnatpp^gnatpp^},\n-@command{^gnatstub^gnatstub^},\n-and @command{^gnatxref^gnatxref^}). However, none of these tools can be invoked\n-directly with a project file switch (@option{^-P^/PROJECT_FILE=^}).\n-They must be invoked through the @command{gnat} driver.\n-\n-The @command{gnat} driver is a wrapper that accepts a number of commands and\n-calls the corresponding tool. It was designed initially for VMS platforms (to\n-convert VMS qualifiers to Unix-style switches), but it is now available on all\n-GNAT platforms.\n-\n-On non-VMS platforms, the @command{gnat} driver accepts the following commands\n-(case insensitive):\n-\n-@itemize @bullet\n-@item BIND to invoke @command{^gnatbind^gnatbind^}\n-@item CHOP to invoke @command{^gnatchop^gnatchop^}\n-@item CLEAN to invoke @command{^gnatclean^gnatclean^}\n-@item COMP or COMPILE to invoke the compiler\n-@item ELIM to invoke @command{^gnatelim^gnatelim^}\n-@item FIND to invoke @command{^gnatfind^gnatfind^}\n-@item KR or KRUNCH to invoke @command{^gnatkr^gnatkr^}\n-@item LINK to invoke @command{^gnatlink^gnatlink^}\n-@item LS or LIST to invoke @command{^gnatls^gnatls^}\n-@item MAKE to invoke @command{^gnatmake^gnatmake^}\n-@item NAME to invoke @command{^gnatname^gnatname^}\n-@item PREP or PREPROCESS to invoke @command{^gnatprep^gnatprep^}\n-@item PP or PRETTY to invoke @command{^gnatpp^gnatpp^}\n-@item METRIC to invoke @command{^gnatmetric^gnatmetric^}\n-@item STUB to invoke @command{^gnatstub^gnatstub^}\n-@item XREF to invoke @command{^gnatxref^gnatxref^}\n-\n-@end itemize\n-\n-@noindent\n-(note that the compiler is invoked using the command\n-@command{^gnatmake -f -u -c^gnatmake -f -u -c^}).\n-\n-On non-VMS platforms, between @command{gnat} and the command, two\n-special switches may be used:\n-\n-@itemize @bullet\n-@item @command{-v} to display the invocation of the tool.\n-@item @command{-dn} to prevent the @command{gnat} driver from removing\n-  the temporary files it has created. These temporary files are\n-  configuration files and temporary file list files.\n-\n-@end itemize\n-\n-@noindent\n-The command may be followed by switches and arguments for the invoked\n-tool.\n-\n-@smallexample\n-  gnat bind -C main.ali\n-  gnat ls -a main\n-  gnat chop foo.txt\n-@end smallexample\n-\n-@noindent\n-Switches may also be put in text files, one switch per line, and the text\n-files may be specified with their path name preceded by '@@'.\n-\n-@smallexample\n-   gnat bind @@args.txt main.ali\n-@end smallexample\n-\n-@noindent\n-In addition, for commands BIND, COMP or COMPILE, FIND, ELIM, LS or LIST, LINK,\n-METRIC, PP or PRETTY, STUB and XREF, the project file related switches\n-(@option{^-P^/PROJECT_FILE^},\n-@option{^-X^/EXTERNAL_REFERENCE^} and\n-@option{^-vP^/MESSAGES_PROJECT_FILE=^x}) may be used in addition to\n-the switches of the invoking tool.\n-\n-When GNAT PP or GNAT PRETTY is used with a project file, but with no source\n-specified on the command line, it invokes @command{^gnatpp^gnatpp^} with all\n-the immediate sources of the specified project file.\n-\n-When GNAT METRIC is used with a project file, but with no source\n-specified on the command line, it invokes @command{^gnatmetric^gnatmetric^}\n-with all the immediate sources of the specified project file and with\n-@option{^-d^/DIRECTORY^} with the parameter pointing to the object directory\n-of the project.\n-\n-In addition, when GNAT PP, GNAT PRETTY or GNAT METRIC is used with\n-a project file, no source is specified on the command line and\n-switch ^-U^/ALL_PROJECTS^ is specified on the command line, then\n-the underlying tool (^gnatpp^gnatpp^ or\n-^gnatmetric^gnatmetric^) is invoked for all sources of all projects,\n-not only for the immediate sources of the main project.\n-@ifclear vms\n-(-U stands for Universal or Union of the project files of the project tree)\n-@end ifclear\n-\n-For each of the following commands, there is optionally a corresponding\n-package in the main project.\n-\n-@itemize @bullet\n-@item package @code{Binder} for command BIND (invoking @code{^gnatbind^gnatbind^})\n-\n-@item package @code{Check} for command CHECK (invoking\n-  @code{^gnatcheck^gnatcheck^})\n-\n-@item package @code{Compiler} for command COMP or COMPILE (invoking the compiler)\n-\n-@item package @code{Cross_Reference} for command XREF (invoking\n-  @code{^gnatxref^gnatxref^})\n-\n-@item package @code{Eliminate} for command ELIM (invoking\n-  @code{^gnatelim^gnatelim^})\n-\n-@item package @code{Finder} for command FIND (invoking @code{^gnatfind^gnatfind^})\n-\n-@item package @code{Gnatls} for command LS or LIST (invoking @code{^gnatls^gnatls^})\n-\n-@item package @code{Gnatstub} for command STUB\n-  (invoking @code{^gnatstub^gnatstub^})\n-\n-@item package @code{Linker} for command LINK (invoking @code{^gnatlink^gnatlink^})\n-\n-@item package @code{Check} for command CHECK\n-  (invoking @code{^gnatcheck^gnatcheck^})\n-\n-@item package @code{Metrics} for command METRIC\n-  (invoking @code{^gnatmetric^gnatmetric^})\n-\n-@item package @code{Pretty_Printer} for command PP or PRETTY\n-  (invoking @code{^gnatpp^gnatpp^})\n-\n-@end itemize\n-\n-@noindent\n-Package @code{Gnatls} has a unique attribute @code{Switches},\n-a simple variable with a string list value. It contains ^switches^switches^\n-for the invocation of @code{^gnatls^gnatls^}.\n-\n-@smallexample @c projectfile\n-@group\n-project Proj1 is\n-   package gnatls is\n-      for Switches\n-          use (\"^-a^-a^\",\n-               \"^-v^-v^\");\n-   end gnatls;\n-end Proj1;\n-@end group\n-@end smallexample\n-\n-@noindent\n-All other packages have two attribute @code{Switches} and\n-@code{^Default_Switches^Default_Switches^}.\n-\n-@code{Switches} is an indexed attribute, indexed by the\n-source file name, that has a string list value: the ^switches^switches^ to be\n-used when the tool corresponding to the package is invoked for the specific\n-source file.\n-\n-@code{^Default_Switches^Default_Switches^} is an attribute,\n-indexed by  the programming language that has a string list value.\n-@code{^Default_Switches^Default_Switches^ (\"Ada\")} contains the\n-^switches^switches^ for the invocation of the tool corresponding\n-to the package, except if a specific @code{Switches} attribute\n-is specified for the source file.\n-\n-@smallexample @c projectfile\n-@group\n-project Proj is\n-\n-   for Source_Dirs use (\"**\");\n-\n-   package gnatls is\n-      for Switches use\n-          (\"^-a^-a^\",\n-           \"^-v^-v^\");\n-   end gnatls;\n-@end group\n-@group\n-\n-   package Compiler is\n-      for ^Default_Switches^Default_Switches^ (\"Ada\")\n-          use (\"^-gnatv^-gnatv^\",\n-               \"^-gnatwa^-gnatwa^\");\n-   end Binder;\n-@end group\n-@group\n-\n-   package Binder is\n-      for ^Default_Switches^Default_Switches^ (\"Ada\")\n-          use (\"^-C^-C^\",\n-               \"^-e^-e^\");\n-   end Binder;\n-@end group\n-@group\n-\n-   package Linker is\n-      for ^Default_Switches^Default_Switches^ (\"Ada\")\n-          use (\"^-C^-C^\");\n-      for Switches (\"main.adb\")\n-          use (\"^-C^-C^\",\n-               \"^-v^-v^\",\n-               \"^-v^-v^\");\n-   end Linker;\n-@end group\n-@group\n-\n-   package Finder is\n-      for ^Default_Switches^Default_Switches^ (\"Ada\")\n-           use (\"^-a^-a^\",\n-                \"^-f^-f^\");\n-   end Finder;\n-@end group\n-@group\n-\n-   package Cross_Reference is\n-      for ^Default_Switches^Default_Switches^ (\"Ada\")\n-          use (\"^-a^-a^\",\n-               \"^-f^-f^\",\n-               \"^-d^-d^\",\n-               \"^-u^-u^\");\n-   end Cross_Reference;\n-end Proj;\n-@end group\n-@end smallexample\n-\n-@noindent\n-With the above project file, commands such as\n-\n-@smallexample\n-   ^gnat comp -Pproj main^GNAT COMP /PROJECT_FILE=PROJ MAIN^\n-   ^gnat ls -Pproj main^GNAT LIST /PROJECT_FILE=PROJ MAIN^\n-   ^gnat xref -Pproj main^GNAT XREF /PROJECT_FILE=PROJ MAIN^\n-   ^gnat bind -Pproj main.ali^GNAT BIND /PROJECT_FILE=PROJ MAIN.ALI^\n-   ^gnat link -Pproj main.ali^GNAT LINK /PROJECT_FILE=PROJ MAIN.ALI^\n-@end smallexample\n-\n-@noindent\n-will set up the environment properly and invoke the tool with the switches\n-found in the package corresponding to the tool:\n-@code{^Default_Switches^Default_Switches^ (\"Ada\")} for all tools,\n-except @code{Switches (\"main.adb\")}\n-for @code{^gnatlink^gnatlink^}.\n-It is also possible to invoke some of the tools,\n-(@code{^gnatcheck^gnatcheck^},\n-@code{^gnatmetric^gnatmetric^},\n-and @code{^gnatpp^gnatpp^})\n-on a set of project units thanks to the combination of the switches\n-@option{-P}, @option{-U} and possibly the main unit when one is interested\n-in its closure. For instance,\n-@smallexample\n-gnat metric -Pproj\n-@end smallexample\n-\n-@noindent\n-will compute the metrics for all the immediate units of project\n-@code{proj}.\n-@smallexample\n-gnat metric -Pproj -U\n-@end smallexample\n-\n-@noindent\n-will compute the metrics for all the units of the closure of projects\n-rooted at @code{proj}.\n-@smallexample\n-gnat metric -Pproj -U main_unit\n-@end smallexample\n-\n-@noindent\n-will compute the metrics for the closure of units rooted at\n-@code{main_unit}. This last possibility relies implicitly\n-on @command{gnatbind}'s option @option{-R}. But if the argument files for the\n-tool invoked by the @command{gnat} driver are explicitly  specified\n-either directly or through the tool @option{-files} option, then the tool\n-is called only for these explicitly specified files.\n-\n-@c ---------------------------------------------\n-@node The Development Environments\n-@section The Development Environments\n-@c ---------------------------------------------\n-\n-@noindent\n-See the appropriate manuals for more details. These environments will\n-store a number of settings in the project itself, when they are meant\n-to be shared by the whole team working on the project. Here are the\n-attributes defined in the package @b{IDE} in projects.\n-\n-@table @code\n-@item Remote_Host\n-This is a simple attribute. Its value is a string that designates the remote\n-host in a cross-compilation environment, to be used for remote compilation and\n-debugging. This field should not be specified when running on the local\n-machine.\n-\n-@item Program_Host\n-This is a simple attribute. Its value is a string that specifies the\n-name of IP address of the embedded target in a cross-compilation environment,\n-on which the program should execute.\n-\n-@item Communication_Protocol\n-This is a simple string attribute. Its value is the name of the protocol\n-to use to communicate with the target in a cross-compilation environment,\n-e.g.@: @code{\"wtx\"} or @code{\"vxworks\"}.\n-\n-@item Compiler_Command\n-This is an indexed attribute, whose domain is a language name. Its\n-value is  string that denotes the command to be used to invoke the compiler.\n-The value of @code{Compiler_Command (\"Ada\")} is expected to be compatible with\n-@command{gnatmake}, in particular in the handling of switches.\n-\n-@item Debugger_Command\n-This is simple attribute, Its value is a string that specifies the name of\n-the debugger to be used, such as gdb, powerpc-wrs-vxworks-gdb or gdb-4.\n-\n-@item Default_Switches\n-This is an indexed attribute. Its indexes are the name of the\n-external tools that the GNAT Programming System (GPS) is supporting. Its\n-value is a list of switches to use when invoking that tool.\n-\n-@item  Gnatlist\n-This is a simple attribute.  Its value is a string that specifies the name\n-of the @command{gnatls} utility to be used to retrieve information about the\n-predefined path; e.g., @code{\"gnatls\"}, @code{\"powerpc-wrs-vxworks-gnatls\"}.\n-\n-@item VCS_Kind\n-This is a simple attribute. Its value is a string used to specify the\n-Version Control System (VCS) to be used for this project, e.g.@: CVS, RCS\n-ClearCase or Perforce.\n-\n-@item Gnat\n-This is a simple attribute. Its value is a string that specifies the name\n-of the @command{gnat} utility to be used when executing various tools from\n-GPS, in particular @code{\"gnat pp\"}, @code{\"gnat stub\"},@dots{}\n-\n-@item VCS_File_Check\n-This is a simple attribute. Its value is a string that specifies the\n-command used by the VCS to check the validity of a file, either\n-when the user explicitly asks for a check, or as a sanity check before\n-doing the check-in.\n-\n-@item VCS_Log_Check\n-This is a simple attribute. Its value is a string that specifies\n-the command used by the VCS to check the validity of a log file.\n-\n-@item VCS_Repository_Root\n-The VCS repository root path. This is used to create tags or branches\n-of the repository. For subversion the value should be the @code{URL}\n-as specified to check-out the working copy of the repository.\n-\n-@item VCS_Patch_Root\n-The local root directory to use for building patch file. All patch chunks\n-will be relative to this path. The root project directory is used if\n-this value is not defined.\n-\n-@end table"}]}