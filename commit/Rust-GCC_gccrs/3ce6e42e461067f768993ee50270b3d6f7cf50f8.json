{"sha": "3ce6e42e461067f768993ee50270b3d6f7cf50f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NlNmU0MmU0NjEwNjdmNzY4OTkzZWU1MDI3MGIzZDZmN2NmNTBmOA==", "commit": {"author": {"name": "Xuepeng Guo", "email": "xuepeng.guo@intel.com", "date": "2008-05-27T18:03:55Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-05-27T18:03:55Z"}, "message": "dwarf2out.c (current_fde): New.\n\n2008-05-27  Xuepeng Guo  <xuepeng.guo@intel.com>\n\t    H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* dwarf2out.c (current_fde): New.\n\t(add_cfi): Use it.\n\t(lookup_cfa:): Likewise.\n\t(dwarf2out_end_epilogue): Likewise.\n\t(dwarf2out_note_section_used): Likewise.\n\nCo-Authored-By: H.J. Lu <hongjiu.lu@intel.com>\n\nFrom-SVN: r136043", "tree": {"sha": "c446caf48ad87a202c303d7933ffe53371828df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c446caf48ad87a202c303d7933ffe53371828df3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ce6e42e461067f768993ee50270b3d6f7cf50f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce6e42e461067f768993ee50270b3d6f7cf50f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ce6e42e461067f768993ee50270b3d6f7cf50f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce6e42e461067f768993ee50270b3d6f7cf50f8/comments", "author": null, "committer": null, "parents": [{"sha": "a32990968ed7264a23f0546123a1384f6a0e4db5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32990968ed7264a23f0546123a1384f6a0e4db5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32990968ed7264a23f0546123a1384f6a0e4db5"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "3b5fb98dc0192496d10e020a4a76bb25821644ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ce6e42e461067f768993ee50270b3d6f7cf50f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ce6e42e461067f768993ee50270b3d6f7cf50f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ce6e42e461067f768993ee50270b3d6f7cf50f8", "patch": "@@ -1,3 +1,12 @@\n+2008-05-27  Xuepeng Guo  <xuepeng.guo@intel.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* dwarf2out.c (current_fde): New.\n+\t(add_cfi): Use it.\n+\t(lookup_cfa:): Likewise.\n+\t(dwarf2out_end_epilogue): Likewise.\n+\t(dwarf2out_note_section_used): Likewise.\n+\n 2008-05-27  Michael Matz  <matz@suse.de>\n \n \tPR c++/27975"}, {"sha": "76df897edf92aa544f3a6f520aeed6d873bf1746", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ce6e42e461067f768993ee50270b3d6f7cf50f8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ce6e42e461067f768993ee50270b3d6f7cf50f8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=3ce6e42e461067f768993ee50270b3d6f7cf50f8", "patch": "@@ -633,6 +633,14 @@ dwarf2out_cfi_label (void)\n   return label;\n }\n \n+/* Get the current fde_table entry we should use.  */\n+\n+static inline struct dw_fde_struct * \n+current_fde (void)\n+{\n+  return fde_table_in_use ? &fde_table[fde_table_in_use - 1] : NULL;\n+}\n+\n /* Add CFI to the current fde at the PC value indicated by LABEL if specified,\n    or to the CIE if LABEL is NULL.  */\n \n@@ -641,7 +649,9 @@ add_fde_cfi (const char *label, dw_cfi_ref cfi)\n {\n   if (label)\n     {\n-      dw_fde_ref fde = &fde_table[fde_table_in_use - 1];\n+      dw_fde_ref fde = current_fde ();\n+\n+      gcc_assert (fde != NULL);\n \n       if (*label == 0)\n \tlabel = dwarf2out_cfi_label ();\n@@ -713,6 +723,7 @@ static void\n lookup_cfa (dw_cfa_location *loc)\n {\n   dw_cfi_ref cfi;\n+  dw_fde_ref fde;\n \n   loc->reg = INVALID_REGNUM;\n   loc->offset = 0;\n@@ -722,12 +733,10 @@ lookup_cfa (dw_cfa_location *loc)\n   for (cfi = cie_cfi_head; cfi; cfi = cfi->dw_cfi_next)\n     lookup_cfa_1 (cfi, loc);\n \n-  if (fde_table_in_use)\n-    {\n-      dw_fde_ref fde = &fde_table[fde_table_in_use - 1];\n-      for (cfi = fde->dw_fde_cfi; cfi; cfi = cfi->dw_cfi_next)\n-\tlookup_cfa_1 (cfi, loc);\n-    }\n+  fde = current_fde ();\n+  if (fde)\n+    for (cfi = fde->dw_fde_cfi; cfi; cfi = cfi->dw_cfi_next)\n+      lookup_cfa_1 (cfi, loc);\n }\n \n /* The current rule for calculating the DWARF2 canonical frame address.  */\n@@ -2686,7 +2695,8 @@ dwarf2out_end_epilogue (unsigned int line ATTRIBUTE_UNUSED,\n   ASM_GENERATE_INTERNAL_LABEL (label, FUNC_END_LABEL,\n \t\t\t       current_function_funcdef_no);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n-  fde = &fde_table[fde_table_in_use - 1];\n+  fde = current_fde ();\n+  gcc_assert (fde != NULL);\n   fde->dw_fde_end = xstrdup (label);\n }\n \n@@ -2739,11 +2749,10 @@ dwarf2out_note_section_used (void)\n void\n dwarf2out_switch_text_section (void)\n {\n-  dw_fde_ref fde;\n+  dw_fde_ref fde = current_fde ();\n \n-  gcc_assert (cfun);\n+  gcc_assert (cfun && fde);\n \n-  fde = &fde_table[fde_table_in_use - 1];\n   fde->dw_fde_switched_sections = true;\n   fde->dw_fde_hot_section_label = crtl->subsections.hot_section_label;\n   fde->dw_fde_hot_section_end_label = crtl->subsections.hot_section_end_label;\n@@ -10985,7 +10994,8 @@ convert_cfa_to_fb_loc_list (HOST_WIDE_INT offset)\n   dw_cfa_location last_cfa, next_cfa;\n   const char *start_label, *last_label, *section;\n \n-  fde = &fde_table[fde_table_in_use - 1];\n+  fde = current_fde ();\n+  gcc_assert (fde != NULL);\n \n   section = secname_for_decl (current_function_decl);\n   list_tail = &list;"}]}