{"sha": "50efcce1d5ea69be69e39048d9649264ddcd7361", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBlZmNjZTFkNWVhNjliZTY5ZTM5MDQ4ZDk2NDkyNjRkZGNkNzM2MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-05-27T04:18:38Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-05-27T04:18:38Z"}, "message": "tree.h (decl_comdat_group): Declare.\n\n\n\t* tree.h (decl_comdat_group): Declare.\n\t* cgraph.h (symtab_in_same_comdat_p): Move offline to ...\n\t* tree.c (decl_comdat_group): Here.\n\nFrom-SVN: r210956", "tree": {"sha": "d8f2d6ee50de4a3d7d6e80c118985acd5c7adfcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8f2d6ee50de4a3d7d6e80c118985acd5c7adfcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50efcce1d5ea69be69e39048d9649264ddcd7361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50efcce1d5ea69be69e39048d9649264ddcd7361", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50efcce1d5ea69be69e39048d9649264ddcd7361", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50efcce1d5ea69be69e39048d9649264ddcd7361/comments", "author": null, "committer": null, "parents": [{"sha": "48f5146b1ad1bb76b1c4dd5b79c67a8479056916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f5146b1ad1bb76b1c4dd5b79c67a8479056916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f5146b1ad1bb76b1c4dd5b79c67a8479056916"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "61b5a44112ffdd7a58d95755a8e1595db1305db7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50efcce1d5ea69be69e39048d9649264ddcd7361/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50efcce1d5ea69be69e39048d9649264ddcd7361/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50efcce1d5ea69be69e39048d9649264ddcd7361", "patch": "@@ -1,3 +1,9 @@\n+2014-05-26  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree.h (decl_comdat_group): Declare.\n+\t* cgraph.h (symtab_in_same_comdat_p): Move offline to ...\n+\t* tree.c (decl_comdat_group): Here.\n+\n 2014-05-26  Richard Sandiford  <r.sandiford@uk.ibm.com>\n \n \tPR rtl-optimization/61222"}, {"sha": "8556e2d1774b54e7f812fad94556969abac06d91", "filename": "gcc/cgraph.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50efcce1d5ea69be69e39048d9649264ddcd7361/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50efcce1d5ea69be69e39048d9649264ddcd7361/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=50efcce1d5ea69be69e39048d9649264ddcd7361", "patch": "@@ -1621,14 +1621,4 @@ symtab_in_same_comdat_p (symtab_node *one, symtab_node *two)\n \n   return one->get_comdat_group () == two->get_comdat_group ();\n }\n-\n-/* Return comdat group of DECL.  */\n-static inline tree\n-decl_comdat_group (tree node)\n-{\n-  struct symtab_node *snode = symtab_get_node (node);\n-  if (!snode)\n-    return NULL;\n-  return snode->get_comdat_group ();\n-}\n #endif  /* GCC_CGRAPH_H  */"}, {"sha": "394a821c01aa2545cd341c0fd075e37c8c2d9fd8", "filename": "gcc/tree.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50efcce1d5ea69be69e39048d9649264ddcd7361/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50efcce1d5ea69be69e39048d9649264ddcd7361/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=50efcce1d5ea69be69e39048d9649264ddcd7361", "patch": "@@ -603,6 +603,16 @@ decl_assembler_name (tree decl)\n   return DECL_WITH_VIS_CHECK (decl)->decl_with_vis.assembler_name;\n }\n \n+/* Return comdat group of DECL.  */\n+tree\n+decl_comdat_group (tree node)\n+{\n+  struct symtab_node *snode = symtab_get_node (node);\n+  if (!snode)\n+    return NULL;\n+  return snode->get_comdat_group ();\n+}\n+\n /* Compute the number of bytes occupied by a tree with code CODE.\n    This function cannot be used for nodes that have variable sizes,\n    including TREE_VEC, INTEGER_CST, STRING_CST, and CALL_EXPR.  */"}, {"sha": "de2b5c84f36de0254d45c4716a8492b0f65aa244", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50efcce1d5ea69be69e39048d9649264ddcd7361/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50efcce1d5ea69be69e39048d9649264ddcd7361/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=50efcce1d5ea69be69e39048d9649264ddcd7361", "patch": "@@ -3431,6 +3431,7 @@ tree_operand_check_code (const_tree __t, enum tree_code __code, int __i,\n    || ((NODE) && TREE_TYPE ((NODE)) == error_mark_node))\n \n extern tree decl_assembler_name (tree);\n+extern tree decl_comdat_group (tree);\n \n /* Compute the number of bytes occupied by 'node'.  This routine only\n    looks at TREE_CODE and, if the code is TREE_VEC, TREE_VEC_LENGTH.  */"}]}