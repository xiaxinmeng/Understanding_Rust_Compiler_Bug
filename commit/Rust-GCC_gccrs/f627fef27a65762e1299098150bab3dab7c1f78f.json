{"sha": "f627fef27a65762e1299098150bab3dab7c1f78f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyN2ZlZjI3YTY1NzYyZTEyOTkwOTgxNTBiYWIzZGFiN2MxZjc4Zg==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-07-28T10:29:17Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-07-28T10:29:17Z"}, "message": "re PR target/49313 (Inefficient libgcc implementations for avr)\n\n\tPR target/49313\n\tUndo r176835 from trunk\n\t2011-07-27  Georg-Johann Lay\n\nFrom-SVN: r176865", "tree": {"sha": "8c8671364939527ffb15c864f9525f0a3ec651cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c8671364939527ffb15c864f9525f0a3ec651cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f627fef27a65762e1299098150bab3dab7c1f78f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f627fef27a65762e1299098150bab3dab7c1f78f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f627fef27a65762e1299098150bab3dab7c1f78f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f627fef27a65762e1299098150bab3dab7c1f78f/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c35c943f68d45d199500488d5debbeb95cfc9154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c35c943f68d45d199500488d5debbeb95cfc9154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c35c943f68d45d199500488d5debbeb95cfc9154"}], "stats": {"total": 323, "additions": 25, "deletions": 298}, "files": [{"sha": "b8317a3d907f566b9cefb4febec2d4cd327d2db1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f627fef27a65762e1299098150bab3dab7c1f78f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f627fef27a65762e1299098150bab3dab7c1f78f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f627fef27a65762e1299098150bab3dab7c1f78f", "patch": "@@ -1,3 +1,9 @@\n+2011-07-28  Georg-Johann Lay  <avr@gjlay.de>\n+\t\n+\tPR target/49313\n+\tUndo r176835 from trunk\n+\t2011-07-27  Georg-Johann Lay\n+\n 2011-07-28  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \tPR target/49687"}, {"sha": "a14d96d42dea61ff26c279eab4c7a9c212551f49", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 0, "deletions": 270, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f627fef27a65762e1299098150bab3dab7c1f78f/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f627fef27a65762e1299098150bab3dab7c1f78f/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=f627fef27a65762e1299098150bab3dab7c1f78f", "patch": "@@ -55,7 +55,6 @@\n    UNSPEC_FMUL\n    UNSPEC_FMULS\n    UNSPEC_FMULSU\n-   UNSPEC_COPYSIGN\n    ])\n \n (define_c_enum \"unspecv\"\n@@ -3942,275 +3941,6 @@\n   [(set_attr \"length\" \"9\")\n    (set_attr \"cc\" \"clobber\")])\n \n-\n-;; Parity\n-\n-(define_expand \"parityhi2\"\n-  [(set (reg:HI 24)\n-        (match_operand:HI 1 \"register_operand\" \"\"))\n-   (set (reg:HI 24)\n-        (parity:HI (reg:HI 24)))\n-   (set (match_operand:HI 0 \"register_operand\" \"\")\n-        (reg:HI 24))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"paritysi2\"\n-  [(set (reg:SI 22)\n-        (match_operand:SI 1 \"register_operand\" \"\"))\n-   (set (reg:HI 24)\n-        (parity:HI (reg:SI 22)))\n-   (set (match_operand:SI 0 \"register_operand\" \"\")\n-        (zero_extend:SI (reg:HI 24)))]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*parityhi2.libgcc\"\n-  [(set (reg:HI 24)\n-        (parity:HI (reg:HI 24)))]\n-  \"\"\n-  \"%~call __parityhi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"*parityqihi2.libgcc\"\n-  [(set (reg:HI 24)\n-        (parity:HI (reg:QI 24)))]\n-  \"\"\n-  \"%~call __parityqi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"*paritysihi2.libgcc\"\n-  [(set (reg:HI 24)\n-        (parity:HI (reg:SI 22)))]\n-  \"\"\n-  \"%~call __paritysi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-\n-;; Popcount\n-\n-(define_expand \"popcounthi2\"\n-  [(set (reg:HI 24)\n-        (match_operand:HI 1 \"register_operand\" \"\"))\n-   (set (reg:HI 24)\n-        (popcount:HI (reg:HI 24)))\n-   (set (match_operand:HI 0 \"register_operand\" \"\")\n-        (reg:HI 24))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"popcountsi2\"\n-  [(set (reg:SI 22)\n-        (match_operand:SI 1 \"register_operand\" \"\"))\n-   (set (reg:HI 24)\n-        (popcount:HI (reg:SI 22)))\n-   (set (match_operand:SI 0 \"register_operand\" \"\")\n-        (zero_extend:SI (reg:HI 24)))]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*popcounthi2.libgcc\"\n-  [(set (reg:HI 24)\n-        (popcount:HI (reg:HI 24)))]\n-  \"\"\n-  \"%~call __popcounthi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"*popcountsi2.libgcc\"\n-  [(set (reg:HI 24)\n-        (popcount:HI (reg:SI 22)))]\n-  \"\"\n-  \"%~call __popcountsi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"*popcountqi2.libgcc\"\n-  [(set (reg:QI 24)\n-        (popcount:QI (reg:QI 24)))]\n-  \"\"\n-  \"%~call __popcountqi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn_and_split \"*popcountqihi2.libgcc\"\n-  [(set (reg:HI 24)\n-        (popcount:HI (reg:QI 24)))]\n-  \"\"\n-  \"#\"\n-  \"\"\n-  [(set (reg:QI 24)\n-        (popcount:QI (reg:QI 24)))\n-   (set (reg:QI 25)\n-        (const_int 0))]\n-  \"\")\n-\n-;; Count Leading Zeros\n-\n-(define_expand \"clzhi2\"\n-  [(set (reg:HI 24)\n-        (match_operand:HI 1 \"register_operand\" \"\"))\n-   (parallel [(set (reg:HI 24)\n-                   (clz:HI (reg:HI 24)))\n-              (clobber (reg:QI 26))])\n-   (set (match_operand:HI 0 \"register_operand\" \"\")\n-        (reg:HI 24))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"clzsi2\"\n-  [(set (reg:SI 22)\n-        (match_operand:SI 1 \"register_operand\" \"\"))\n-   (parallel [(set (reg:HI 24)\n-                   (clz:HI (reg:SI 22)))\n-              (clobber (reg:QI 26))])\n-   (set (match_operand:SI 0 \"register_operand\" \"\")\n-        (zero_extend:SI (reg:HI 24)))]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*clzhi2.libgcc\"\n-  [(parallel [(set (reg:HI 24)\n-                   (clz:HI (reg:HI 24)))\n-              (clobber (reg:QI 26))])]\n-  \"\"\n-  \"%~call __clzhi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"*clzsihi2.libgcc\"\n-  [(parallel [(set (reg:HI 24)\n-                   (clz:HI (reg:SI 22)))\n-              (clobber (reg:QI 26))])]\n-  \"\"\n-  \"%~call __clzsi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-;; Count Trailing Zeros\n-\n-(define_expand \"ctzhi2\"\n-  [(set (reg:HI 24)\n-        (match_operand:HI 1 \"register_operand\" \"\"))\n-   (parallel [(set (reg:HI 24)\n-                   (ctz:HI (reg:HI 24)))\n-              (clobber (reg:QI 26))])\n-   (set (match_operand:HI 0 \"register_operand\" \"\")\n-        (reg:HI 24))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"ctzsi2\"\n-  [(set (reg:SI 22)\n-        (match_operand:SI 1 \"register_operand\" \"\"))\n-   (parallel [(set (reg:HI 24)\n-                   (ctz:HI (reg:SI 22)))\n-              (clobber (reg:QI 22))\n-              (clobber (reg:QI 26))])\n-   (set (match_operand:SI 0 \"register_operand\" \"\")\n-        (zero_extend:SI (reg:HI 24)))]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*ctzhi2.libgcc\"\n-  [(set (reg:HI 24)\n-        (ctz:HI (reg:HI 24)))\n-   (clobber (reg:QI 26))]\n-  \"\"\n-  \"%~call __ctzhi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"*ctzsihi2.libgcc\"\n-  [(set (reg:HI 24)\n-        (ctz:HI (reg:SI 22)))\n-   (clobber (reg:QI 22))\n-   (clobber (reg:QI 26))]\n-  \"\"\n-  \"%~call __ctzsi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-;; Find First Set\n-\n-(define_expand \"ffshi2\"\n-  [(set (reg:HI 24)\n-        (match_operand:HI 1 \"register_operand\" \"\"))\n-   (parallel [(set (reg:HI 24)\n-                   (ffs:HI (reg:HI 24)))\n-              (clobber (reg:QI 26))])\n-   (set (match_operand:HI 0 \"register_operand\" \"\")\n-        (reg:HI 24))]\n-  \"\"\n-  \"\")\n-\n-(define_expand \"ffssi2\"\n-  [(set (reg:SI 22)\n-        (match_operand:SI 1 \"register_operand\" \"\"))\n-   (parallel [(set (reg:HI 24)\n-                   (ffs:HI (reg:SI 22)))\n-              (clobber (reg:QI 22))\n-              (clobber (reg:QI 26))])\n-   (set (match_operand:SI 0 \"register_operand\" \"\")\n-        (zero_extend:SI (reg:HI 24)))]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*ffshi2.libgcc\"\n-  [(parallel [(set (reg:HI 24)\n-                   (ffs:HI (reg:HI 24)))\n-              (clobber (reg:QI 26))])]\n-  \"\"\n-  \"%~call __ffshi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-(define_insn \"*ffssihi2.libgcc\"\n-  [(parallel [(set (reg:HI 24)\n-                   (ffs:HI (reg:SI 22)))\n-              (clobber (reg:QI 22))\n-              (clobber (reg:QI 26))])]\n-  \"\"\n-  \"%~call __ffssi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-;; Copysign\n-\n-(define_insn \"copysignsf3\"\n-  [(set (match_operand:SF 0 \"register_operand\"             \"=r\")\n-        (unspec:SF [(match_operand:SF 1 \"register_operand\"  \"0\")\n-                    (match_operand:SF 2 \"register_operand\"  \"r\")]\n-                   UNSPEC_COPYSIGN))]\n-  \"\"\n-  \"bst %D2,7\\;bld %D0,7\"\n-  [(set_attr \"length\" \"2\")\n-   (set_attr \"cc\" \"none\")])\n-  \n-;; Swap Bytes (change byte-endianess)\n-\n-(define_expand \"bswapsi2\"\n-  [(set (reg:SI 22)\n-        (match_operand:SI 1 \"register_operand\" \"\"))\n-   (set (reg:SI 22)\n-        (bswap:SI (reg:SI 22)))\n-   (set (match_operand:SI 0 \"register_operand\" \"\")\n-        (reg:SI 22))]\n-  \"\"\n-  \"\")\n-\n-(define_insn \"*bswapsi2.libgcc\"\n-  [(set (reg:SI 22)\n-        (bswap:SI (reg:SI 22)))]\n-  \"\"\n-  \"%~call __bswapsi2\"\n-  [(set_attr \"type\" \"xcall\")\n-   (set_attr \"cc\" \"clobber\")])\n-\n-\n ;; CPU instructions\n \n ;; NOP taking 1 or 2 Ticks "}, {"sha": "d3d6e4fd74f1d68d2062b293282818809bc87ac1", "filename": "gcc/config/avr/libgcc.S", "status": "modified", "additions": 19, "deletions": 28, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f627fef27a65762e1299098150bab3dab7c1f78f/gcc%2Fconfig%2Favr%2Flibgcc.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f627fef27a65762e1299098150bab3dab7c1f78f/gcc%2Fconfig%2Favr%2Flibgcc.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Flibgcc.S?ref=f627fef27a65762e1299098150bab3dab7c1f78f", "patch": "@@ -1074,15 +1074,9 @@ ENDF __ffssi2\n ;; clobbers: r26\n DEFUN __ffshi2\n     clr  r26\n-#ifdef __AVR_HAVE_JMP_CALL__\n-    ;; Some cores have problem skipping 2-word instruction\n-    tst  r24\n-    breq 2f\n-#else\n     cpse r24, __zero_reg__\n-#endif /* __AVR_HAVE_JMP_CALL__ */\n 1:  XJMP __loop_ffsqi2\n-2:  ldi  r26, 8\n+    ldi  r26, 8\n     or   r24, r25\n     brne 1b\n     ret\n@@ -1112,25 +1106,25 @@ ENDF __loop_ffsqi2\n #if defined (L_ctzsi2)\n ;; count trailing zeros\n ;; r25:r24 = ctz32 (r25:r22)\n-;; clobbers: r26, r22\n-;; ctz(0) = 255\n-;; Note that ctz(0) in undefined for GCC\n+;; ctz(0) = 32\n DEFUN __ctzsi2\n     XCALL __ffssi2\n     dec  r24\n+    sbrc r24, 7\n+    ldi  r24, 32\n     ret\n ENDF __ctzsi2\n #endif /* defined (L_ctzsi2) */\n \n #if defined (L_ctzhi2)\n ;; count trailing zeros\n ;; r25:r24 = ctz16 (r25:r24)\n-;; clobbers: r26\n-;; ctz(0) = 255\n-;; Note that ctz(0) in undefined for GCC\n+;; ctz(0) = 16\n DEFUN __ctzhi2\n     XCALL __ffshi2\n     dec  r24\n+    sbrc r24, 7\n+    ldi  r24, 16\n     ret\n ENDF __ctzhi2\n #endif /* defined (L_ctzhi2) */\n@@ -1264,50 +1258,47 @@ ENDF __parityqi2\n #if defined (L_popcounthi2)\n ;; population count\n ;; r25:r24 = popcount16 (r25:r24)\n-;; clobbers: __tmp_reg__\n+;; clobbers: r30, __tmp_reg__\n DEFUN __popcounthi2\n     XCALL __popcountqi2\n-    push r24\n+    mov  r30, r24\n     mov  r24, r25\n     XCALL __popcountqi2\n+    add  r24, r30\n     clr  r25\n-    ;; FALLTHRU\n-ENDF __popcounthi2\n-\n-DEFUN __popcounthi2_tail\n-    pop   __tmp_reg__\n-    add   r24, __tmp_reg__\n     ret\n-ENDF __popcounthi2_tail\n+ENDF __popcounthi2\n #endif /* defined (L_popcounthi2) */\n \n #if defined (L_popcountsi2)\n ;; population count\n ;; r25:r24 = popcount32 (r25:r22)\n-;; clobbers: __tmp_reg__\n+;; clobbers: r26, r30, __tmp_reg__\n DEFUN __popcountsi2\n     XCALL __popcounthi2\n-    push  r24\n+    mov   r26, r24\n     mov_l r24, r22\n     mov_h r25, r23\n     XCALL __popcounthi2\n-    XJMP  __popcounthi2_tail\n+    add   r24, r26\n+    ret\n ENDF __popcountsi2\n #endif /* defined (L_popcountsi2) */\n \n #if defined (L_popcountdi2)\n ;; population count\n ;; r25:r24 = popcount64 (r25:r18)\n-;; clobbers: r22, r23, __tmp_reg__\n+;; clobbers: r22, r23, r26, r27, r30, __tmp_reg__\n DEFUN __popcountdi2\n     XCALL __popcountsi2\n-    push  r24\n+    mov   r27, r24\n     mov_l r22, r18\n     mov_h r23, r19\n     mov_l r24, r20\n     mov_h r25, r21\n     XCALL __popcountsi2\n-    XJMP  __popcounthi2_tail\n+    add   r24, r27\n+    ret\n ENDF __popcountdi2\n #endif /* defined (L_popcountdi2) */\n "}]}