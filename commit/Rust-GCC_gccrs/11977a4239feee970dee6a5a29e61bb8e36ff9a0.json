{"sha": "11977a4239feee970dee6a5a29e61bb8e36ff9a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5NzdhNDIzOWZlZWU5NzBkZWU2YTVhMjllNjFiYjhlMzZmZjlhMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-11-09T02:57:23Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-11-09T02:57:23Z"}, "message": "codecvt.h (codecvt::do_out): Make it const-correct.\n\n\t* include/bits/codecvt.h (codecvt::do_out): Make it const-correct.\n\t(codecvt::do_in): Likewise.\n\nFrom-SVN: r37332", "tree": {"sha": "fb7a8462d1b38e1dc7ade36e7601fce1f1d29927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb7a8462d1b38e1dc7ade36e7601fce1f1d29927"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11977a4239feee970dee6a5a29e61bb8e36ff9a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11977a4239feee970dee6a5a29e61bb8e36ff9a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11977a4239feee970dee6a5a29e61bb8e36ff9a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11977a4239feee970dee6a5a29e61bb8e36ff9a0/comments", "author": null, "committer": null, "parents": [{"sha": "ca68ea18621523e959e06361efd0e43abbe32dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca68ea18621523e959e06361efd0e43abbe32dc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca68ea18621523e959e06361efd0e43abbe32dc9"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "55ca9e044a42c5f3b1592c95d9b2bba0cf0f1fe3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11977a4239feee970dee6a5a29e61bb8e36ff9a0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11977a4239feee970dee6a5a29e61bb8e36ff9a0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=11977a4239feee970dee6a5a29e61bb8e36ff9a0", "patch": "@@ -1,3 +1,8 @@\n+2000-11-08  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* include/bits/codecvt.h (codecvt::do_out): Make it const-correct.\n+\t(codecvt::do_in): Likewise.\n+\n 2000-11-08  David Edelsohn  <edelsohn@gnu.org>\n \n \t* src/locale-inst.cc: Add explicit instantiations of"}, {"sha": "1c0d4137436c7ea97c148ee7ca8d3323efc609fb", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11977a4239feee970dee6a5a29e61bb8e36ff9a0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11977a4239feee970dee6a5a29e61bb8e36ff9a0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=11977a4239feee970dee6a5a29e61bb8e36ff9a0", "patch": "@@ -393,7 +393,7 @@ namespace std\n \t  // Argument list for iconv specifies a byte sequence. Thus,\n \t  // all to/from arrays must be brutally casted to char*.\n \t  char* __cto = reinterpret_cast<char*>(__to);\n-\t  char* __cfrom;\n+\t  const char* __cfrom;\n \t  size_t __conv;\n \n \t  // Some encodings need a byte order marker as the first item\n@@ -408,13 +408,13 @@ namespace std\n \t      intern_type __cfixed[__size + 1];\n \t      __cfixed[0] = static_cast<intern_type>(__int_bom);\n \t      char_traits<intern_type>::copy(__cfixed + 1, __from, __size);\n-\t      __cfrom = reinterpret_cast<char*>(__cfixed);\n+\t      __cfrom = reinterpret_cast<const char*>(__cfixed);\n \t      __conv = iconv(*__desc, &__cfrom, &__flen, &__cto, &__tlen); \n \t    }\n \t  else\n \t    {\n \t      intern_type* __cfixed = const_cast<intern_type*>(__from);\n-\t      __cfrom = reinterpret_cast<char*>(__cfixed);\n+\t      __cfrom = reinterpret_cast<const char*>(__cfixed);\n \t      __conv = iconv(*__desc, &__cfrom, &__flen, &__cto, &__tlen); \n \t    }\n \n@@ -495,7 +495,7 @@ namespace std\n \t  // Argument list for iconv specifies a byte sequence. Thus,\n \t  // all to/from arrays must be brutally casted to char*.\n \t  char* __cto = reinterpret_cast<char*>(__to);\n-\t  char* __cfrom;\n+\t  const char* __cfrom;\n \t  size_t __conv;\n \n \t  // Some encodings need a byte order marker as the first item\n@@ -510,13 +510,13 @@ namespace std\n \t      extern_type __cfixed[__size + 1];\n \t      __cfixed[0] = static_cast<extern_type>(__ext_bom);\n \t      char_traits<extern_type>::copy(__cfixed + 1, __from, __size);\n-\t      __cfrom = reinterpret_cast<char*>(__cfixed);\n+\t      __cfrom = reinterpret_cast<const char*>(__cfixed);\n \t      __conv = iconv(*__desc, &__cfrom, &__flen, &__cto, &__tlen); \n \t    }\n \t  else\n \t    {\n \t      extern_type* __cfixed = const_cast<extern_type*>(__from);\n-\t      __cfrom = reinterpret_cast<char*>(__cfixed);\n+\t      __cfrom = reinterpret_cast<const char*>(__cfixed);\n \t      __conv = iconv(*__desc, &__cfrom, &__flen, &__cto, &__tlen); \n \t    }\n "}]}