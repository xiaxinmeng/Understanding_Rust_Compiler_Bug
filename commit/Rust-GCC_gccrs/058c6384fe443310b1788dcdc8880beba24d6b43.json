{"sha": "058c6384fe443310b1788dcdc8880beba24d6b43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU4YzYzODRmZTQ0MzMxMGIxNzg4ZGNkYzg4ODBiZWJhMjRkNmI0Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-12-07T16:45:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-12-07T16:45:45Z"}, "message": "re PR middle-end/68291 (ICE in emit_move_insn, at expr.c:3540)\n\n\tPR middle-end/68291\n\tPR middle-end/68292\n\t* cfgexpand.c (set_rtl): Always accept PARALLELs with BLKmode for\n\tSSA names based on RESULT_DECLs.\n\t* function.c (expand_function_start): Do not create BLKmode REGs\n\tfor GIMPLE registers when coalescing is enabled.\n\nFrom-SVN: r231372", "tree": {"sha": "2e641b887cd6d08eba392818062c5fa46e53f8ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e641b887cd6d08eba392818062c5fa46e53f8ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/058c6384fe443310b1788dcdc8880beba24d6b43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058c6384fe443310b1788dcdc8880beba24d6b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/058c6384fe443310b1788dcdc8880beba24d6b43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058c6384fe443310b1788dcdc8880beba24d6b43/comments", "author": null, "committer": null, "parents": [{"sha": "5dd2902aa1bf772c53951ae9998645d4b89d50ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd2902aa1bf772c53951ae9998645d4b89d50ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd2902aa1bf772c53951ae9998645d4b89d50ae"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "abd648e3ce51839c63c042bc2215da99f6577819", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/058c6384fe443310b1788dcdc8880beba24d6b43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/058c6384fe443310b1788dcdc8880beba24d6b43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=058c6384fe443310b1788dcdc8880beba24d6b43", "patch": "@@ -1,7 +1,15 @@\n+2015-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/68291\n+\tPR middle-end/68292\n+\t* cfgexpand.c (set_rtl): Always accept PARALLELs with BLKmode for\n+\tSSA names based on RESULT_DECLs.\n+\t* function.c (expand_function_start): Do not create BLKmode REGs\n+\tfor GIMPLE registers when coalescing is enabled.\n+\n 2015-12-07  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* final.c (shorten_branches): Fix check for basic asm.\n-\n \t* ipa-icf-gimple.c (func_checker::compare_gimple_asm): Add check for\n \tbasic asm.\n "}, {"sha": "5338c251b461d1c8bd8961fc991b8d599ac56fb9", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/058c6384fe443310b1788dcdc8880beba24d6b43/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/058c6384fe443310b1788dcdc8880beba24d6b43/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=058c6384fe443310b1788dcdc8880beba24d6b43", "patch": "@@ -184,10 +184,15 @@ set_rtl (tree t, rtx x)\n \t\t\t\t      || SUBREG_P (XEXP (x, 0)))\n \t\t\t\t  && (REG_P (XEXP (x, 1))\n \t\t\t\t      || SUBREG_P (XEXP (x, 1))))\n+\t\t\t      /* We need to accept PARALLELs for RESUT_DECLs\n+\t\t\t\t because of vector types with BLKmode returned\n+\t\t\t\t in multiple registers, but they are supposed\n+\t\t\t\t to be uncoalesced.  */\n \t\t\t      || (GET_CODE (x) == PARALLEL\n \t\t\t\t  && SSAVAR (t)\n \t\t\t\t  && TREE_CODE (SSAVAR (t)) == RESULT_DECL\n-\t\t\t\t  && !flag_tree_coalesce_vars))\n+\t\t\t\t  && (GET_MODE (x) == BLKmode\n+\t\t\t\t      || !flag_tree_coalesce_vars)))\n \t\t\t   : (MEM_P (x) || x == pc_rtx\n \t\t\t      || (GET_CODE (x) == CONCAT\n \t\t\t\t  && MEM_P (XEXP (x, 0))"}, {"sha": "b513eada68c88269964ffb11f2724a02a8ec1130", "filename": "gcc/function.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/058c6384fe443310b1788dcdc8880beba24d6b43/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/058c6384fe443310b1788dcdc8880beba24d6b43/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=058c6384fe443310b1788dcdc8880beba24d6b43", "patch": "@@ -5148,15 +5148,16 @@ expand_function_start (tree subr)\n       /* Compute the return values into a pseudo reg, which we will copy\n \t into the true return register after the cleanups are done.  */\n       tree return_type = TREE_TYPE (res);\n-      /* If we may coalesce this result, make sure it has the expected\n-\t mode.  */\n-      if (flag_tree_coalesce_vars && is_gimple_reg (res))\n-\t{\n-\t  tree def = ssa_default_def (cfun, res);\n-\t  gcc_assert (def);\n-\t  machine_mode mode = promote_ssa_mode (def, NULL);\n-\t  set_parm_rtl (res, gen_reg_rtx (mode));\n-\t}\n+\n+      /* If we may coalesce this result, make sure it has the expected mode\n+\t in case it was promoted.  But we need not bother about BLKmode.  */\n+      machine_mode promoted_mode\n+\t= flag_tree_coalesce_vars && is_gimple_reg (res)\n+\t  ? promote_ssa_mode (ssa_default_def (cfun, res), NULL)\n+\t  : BLKmode;\n+\n+      if (promoted_mode != BLKmode)\n+\tset_parm_rtl (res, gen_reg_rtx (promoted_mode));\n       else if (TYPE_MODE (return_type) != BLKmode\n \t       && targetm.calls.return_in_msb (return_type))\n \t/* expand_function_end will insert the appropriate padding in"}]}