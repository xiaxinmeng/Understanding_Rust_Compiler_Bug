{"sha": "08e3ae7fce360db23bceb45c1b16718ee21deb91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhlM2FlN2ZjZTM2MGRiMjNiY2ViNDVjMWIxNjcxOGVlMjFkZWI5MQ==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-25T09:16:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-25T09:16:59Z"}, "message": "Merge #525\n\n525: Support BorrowExpr, DereferenceExpr, NegationExpr in marking live symbols and corresponding test cases. r=philberty a=thomasyonug\n\nSupport BorrowExpr, DereferenceExpr, NegationExpr in marking live symbols and corresponding test cases.\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>", "tree": {"sha": "60ebc714d84b5bc4b341bfe2c37e80b52d87dd11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60ebc714d84b5bc4b341bfe2c37e80b52d87dd11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08e3ae7fce360db23bceb45c1b16718ee21deb91", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg1Z8LCRBK7hj4Ov3rIwAABHwIAKw6xnMS05xRzbrXQTberQeN\nmbmZ7S1Et2aI77cJfXM38D/gIfZaGvGSftZHys6nBdKtDLiBU8msDeP0GPLYjLmt\nzMWKvnVZLF9o/mU09hiBpYyD+zsd+HnKPHjOkDKSOfXNxXle7NgDCov+sCirqAvR\nNqlaOdQkkx01PGHeyBMrOH7ObpxRcVZTTVy9hfR2sdr2wV8SN2N8oU6pqekK7MTV\nkoD4s6IYEO6I1/BBpKAnhjIzqQpSn+NJ/SaJkPWyPArVKQKRQrE7gnMx6/LGJbvU\nI2eskZJ4s0ykZbrQQxNqAgLM6ISV3mOaDwidnJO+inMBR4lZOhXDmBfOigslgbE=\n=5sF9\n-----END PGP SIGNATURE-----\n", "payload": "tree 60ebc714d84b5bc4b341bfe2c37e80b52d87dd11\nparent 07b7486e2c27a83e5809b246b8c9797c5e69ae72\nparent b111e6305ad3dee5b599918bee892ff2bbe2c11f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1624612619 +0000\ncommitter GitHub <noreply@github.com> 1624612619 +0000\n\nMerge #525\n\n525: Support BorrowExpr, DereferenceExpr, NegationExpr in marking live symbols and corresponding test cases. r=philberty a=thomasyonug\n\nSupport BorrowExpr, DereferenceExpr, NegationExpr in marking live symbols and corresponding test cases.\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e3ae7fce360db23bceb45c1b16718ee21deb91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e3ae7fce360db23bceb45c1b16718ee21deb91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e3ae7fce360db23bceb45c1b16718ee21deb91/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07b7486e2c27a83e5809b246b8c9797c5e69ae72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b7486e2c27a83e5809b246b8c9797c5e69ae72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b7486e2c27a83e5809b246b8c9797c5e69ae72"}, {"sha": "b111e6305ad3dee5b599918bee892ff2bbe2c11f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b111e6305ad3dee5b599918bee892ff2bbe2c11f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b111e6305ad3dee5b599918bee892ff2bbe2c11f"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "8391bc48c802a024cf4273fe9802844e394f4bb3", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=08e3ae7fce360db23bceb45c1b16718ee21deb91", "patch": "@@ -354,7 +354,7 @@ class CompileExpr : public HIRCompileBase\n   void visit (HIR::NegationExpr &expr) override\n   {\n     auto op = expr.get_expr_type ();\n-    auto negated_expr = CompileExpr::Compile (expr.get_expr (), ctx);\n+    auto negated_expr = CompileExpr::Compile (expr.get_expr ().get (), ctx);\n     auto location = expr.get_locus ();\n \n     translated"}, {"sha": "102ab97ad4a6e40f7714200ce940f09638a27941", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=08e3ae7fce360db23bceb45c1b16718ee21deb91", "patch": "@@ -300,8 +300,6 @@ class NegationExpr : public OperatorExpr\n \n   void accept_vis (HIRVisitor &vis) override;\n \n-  Expr *get_expr () { return main_or_left_expr.get (); }\n-\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "74cf0d3efe11065a2f59ed473b833a6a18de0f14", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=08e3ae7fce360db23bceb45c1b16718ee21deb91", "patch": "@@ -39,6 +39,21 @@ class MarkLive : public MarkLiveBase\n   void visit (HIR::PathInExpression &expr) override;\n   void visit (HIR::IdentifierExpr &expr) override;\n \n+  void visit (HIR::BorrowExpr &expr) override\n+  {\n+    expr.get_expr ().get ()->accept_vis (*this);\n+  }\n+\n+  void visit (HIR::DereferenceExpr &expr) override\n+  {\n+    expr.get_expr ().get ()->accept_vis (*this);\n+  }\n+\n+  void visit (HIR::NegationExpr &expr) override\n+  {\n+    expr.get_expr ().get ()->accept_vis (*this);\n+  }\n+\n   void visit (HIR::BlockExpr &expr) override\n   {\n     expr.iterate_stmts ([&] (HIR::Stmt *s) mutable -> bool {\n@@ -50,6 +65,7 @@ class MarkLive : public MarkLiveBase\n \texpr.get_final_expr ().get ()->accept_vis (*this);\n       }\n   }\n+\n   void visit (HIR::Function &function) override\n   {\n     function.get_definition ().get ()->accept_vis (*this);"}, {"sha": "90ea595efe3e411fbeaec5be2efd7e4d73c7d6aa", "filename": "gcc/rust/typecheck/rust-hir-const-fold.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h?ref=08e3ae7fce360db23bceb45c1b16718ee21deb91", "patch": "@@ -341,7 +341,7 @@ class ConstFoldExpr : public ConstFoldBase\n \n   void visit (HIR::NegationExpr &expr) override\n   {\n-    auto negated_expr = ConstFoldExpr::fold (expr.get_expr ());\n+    auto negated_expr = ConstFoldExpr::fold (expr.get_expr ().get ());\n     if (negated_expr == nullptr)\n       return;\n "}, {"sha": "236c7b9c92f29c638ac41eb4d526c6367a611965", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=08e3ae7fce360db23bceb45c1b16718ee21deb91", "patch": "@@ -619,7 +619,8 @@ class TypeCheckExpr : public TypeCheckBase\n \n   void visit (HIR::NegationExpr &expr) override\n   {\n-    auto negated_expr_ty = TypeCheckExpr::Resolve (expr.get_expr (), false);\n+    auto negated_expr_ty\n+      = TypeCheckExpr::Resolve (expr.get_expr ().get (), false);\n \n     // https://doc.rust-lang.org/reference/expressions/operator-expr.html#negation-operators\n     switch (expr.get_expr_type ())"}, {"sha": "98c6f99683e6f750dd132afbfd7ff016a26791f7", "filename": "gcc/testsuite/rust/compile/torture/borrow_function.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fborrow_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fborrow_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fborrow_function.rs?ref=08e3ae7fce360db23bceb45c1b16718ee21deb91", "patch": "@@ -0,0 +1,5 @@\n+fn foo() {}\n+\n+fn main() {\n+    let _a = &foo;\n+}\n\\ No newline at end of file"}, {"sha": "b1c5ff63423f89798ebd83187bac08e0fa6998a5", "filename": "gcc/testsuite/rust/compile/torture/deref_function.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fderef_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fderef_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fderef_function.rs?ref=08e3ae7fce360db23bceb45c1b16718ee21deb91", "patch": "@@ -0,0 +1,10 @@\n+fn foo() {}\n+\n+\n+fn main() {\n+    let _c = *{\n+\tlet _a = foo;\n+\tlet b = &1;\n+\tb\n+    };\n+}\n\\ No newline at end of file"}, {"sha": "b592f9c00ef65c0870e0e474664906c5c73f48d8", "filename": "gcc/testsuite/rust/compile/torture/negation_function.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fnegation_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e3ae7fce360db23bceb45c1b16718ee21deb91/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fnegation_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fnegation_function.rs?ref=08e3ae7fce360db23bceb45c1b16718ee21deb91", "patch": "@@ -0,0 +1,7 @@\n+fn ret1() -> i32 {\n+    return 1;\n+}\n+\n+fn main() {\n+    let _a = -ret1();\n+}\n\\ No newline at end of file"}]}