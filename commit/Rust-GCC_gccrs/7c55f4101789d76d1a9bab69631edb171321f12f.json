{"sha": "7c55f4101789d76d1a9bab69631edb171321f12f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M1NWY0MTAxNzg5ZDc2ZDFhOWJhYjY5NjMxZWRiMTcxMzIxZjEyZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-04-11T12:46:10Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-04-11T12:46:10Z"}, "message": "re PR c++/56913 ([C++11] SFINAE for ill-formed pointer-to-member operators with incompatible ref-qualifiers)\n\n/cp\n2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/56913\n\t* typeck2.c (build_m_component_ref): Protect error calls with\n\t(complain & tf_error).\n\n/testsuite\n2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/56913\n\t* g++.dg/cpp0x/sfinae44.C: New.\n\nFrom-SVN: r197780", "tree": {"sha": "f2b42078949cacebf29ff22cb452a4cfa62de440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2b42078949cacebf29ff22cb452a4cfa62de440"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c55f4101789d76d1a9bab69631edb171321f12f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c55f4101789d76d1a9bab69631edb171321f12f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c55f4101789d76d1a9bab69631edb171321f12f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c55f4101789d76d1a9bab69631edb171321f12f/comments", "author": null, "committer": null, "parents": [{"sha": "4d8f3296a0d32cf3c8b3956c8c0c778703b494c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8f3296a0d32cf3c8b3956c8c0c778703b494c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d8f3296a0d32cf3c8b3956c8c0c778703b494c0"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "01fc3efc5bed7830a0818e80a537eca5a01cd480", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c55f4101789d76d1a9bab69631edb171321f12f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c55f4101789d76d1a9bab69631edb171321f12f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c55f4101789d76d1a9bab69631edb171321f12f", "patch": "@@ -1,3 +1,9 @@\n+2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/56913\n+\t* typeck2.c (build_m_component_ref): Protect error calls with\n+\t(complain & tf_error).\n+\n 2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54216"}, {"sha": "a0bc50b2a5e767f9efeca9a3a46e0f3ddc64b4c2", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c55f4101789d76d1a9bab69631edb171321f12f/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c55f4101789d76d1a9bab69631edb171321f12f/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=7c55f4101789d76d1a9bab69631edb171321f12f", "patch": "@@ -1722,11 +1722,19 @@ build_m_component_ref (tree datum, tree component, tsubst_flags_t complain)\n \t{\n \t  bool lval = real_lvalue_p (datum);\n \t  if (lval && FUNCTION_RVALUE_QUALIFIED (type))\n-\t    error (\"pointer-to-member-function type %qT requires an rvalue\",\n-\t\t   ptrmem_type);\n+\t    {\n+\t      if (complain & tf_error)\n+\t\terror (\"pointer-to-member-function type %qT requires an rvalue\",\n+\t\t       ptrmem_type);\n+\t      return error_mark_node;\n+\t    }\n \t  else if (!lval && !FUNCTION_RVALUE_QUALIFIED (type))\n-\t    error (\"pointer-to-member-function type %qT requires an lvalue\",\n-\t\t   ptrmem_type);\n+\t    {\n+\t      if (complain & tf_error)\n+\t\terror (\"pointer-to-member-function type %qT requires an lvalue\",\n+\t\t       ptrmem_type);\n+\t      return error_mark_node;\n+\t    }\n \t}\n       return build2 (OFFSET_REF, type, datum, component);\n     }"}, {"sha": "58447dbe1e9880e181fc18b54f11d485a6dcb098", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c55f4101789d76d1a9bab69631edb171321f12f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c55f4101789d76d1a9bab69631edb171321f12f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c55f4101789d76d1a9bab69631edb171321f12f", "patch": "@@ -1,3 +1,8 @@\n+2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/56913\n+\t* g++.dg/cpp0x/sfinae44.C: New.\n+\n 2013-04-11  Arnaud Charlet  <charlet@adacore.com>\n \n \t* ada/acats/run_all.sh: Remove special handling of -gnat95 switch."}, {"sha": "bbcae622630410aea9c3b7629afeccfe2278b0b4", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae44.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c55f4101789d76d1a9bab69631edb171321f12f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c55f4101789d76d1a9bab69631edb171321f12f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae44.C?ref=7c55f4101789d76d1a9bab69631edb171321f12f", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/56913\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T>\n+T &&declval();\n+\n+template<typename T, typename U,\n+         typename = decltype((declval<T>().*declval<U>())())>\n+constexpr bool test(int)\n+{\n+  return true;\n+}\n+\n+template<typename T, typename U>\n+constexpr bool test(...)\n+{\n+  return false;\n+}\n+\n+struct S\n+{};\n+\n+static_assert(!test<S, void (S::*)() &>(0), \"\");\n+static_assert(test<S, void (S::*)() &&>(0), \"\");\n+static_assert(test<S &, void (S::*)() &>(0), \"\");\n+static_assert(!test<S &, void (S::*)() &&>(0), \"\");"}]}