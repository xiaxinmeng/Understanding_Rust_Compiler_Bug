{"sha": "ce79110f01f445d97a32f93cc53c346cf98a5425", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U3OTExMGYwMWY0NDVkOTdhMzJmOTNjYzUzYzM0NmNmOThhNTQyNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-07-08T09:53:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-07-08T09:53:02Z"}, "message": "Revert r254460 (collect2 LTO for AIX).\n\n2019-07-08  Martin Liska  <mliska@suse.cz>\n\n\t* collect2.c (defined): Revert to before r254460.\n\t(scan_prog_file): Revert to before r254460.\n\nFrom-SVN: r273229", "tree": {"sha": "4eb3e36a8368c0da3c32c48895f0f24cfa380ce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb3e36a8368c0da3c32c48895f0f24cfa380ce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce79110f01f445d97a32f93cc53c346cf98a5425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce79110f01f445d97a32f93cc53c346cf98a5425", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce79110f01f445d97a32f93cc53c346cf98a5425", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce79110f01f445d97a32f93cc53c346cf98a5425/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75b41faa236ff0bbedf0cfe7de92d0092fd38757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b41faa236ff0bbedf0cfe7de92d0092fd38757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b41faa236ff0bbedf0cfe7de92d0092fd38757"}], "stats": {"total": 27, "additions": 8, "deletions": 19}, "files": [{"sha": "31ad4e5208ea4d37790a1fd92d8f46870e0b0a72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce79110f01f445d97a32f93cc53c346cf98a5425/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce79110f01f445d97a32f93cc53c346cf98a5425/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce79110f01f445d97a32f93cc53c346cf98a5425", "patch": "@@ -1,3 +1,8 @@\n+2019-07-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* collect2.c (defined): Revert to before r254460.\n+\t(scan_prog_file): Revert to before r254460.\n+\n 2019-07-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/83518"}, {"sha": "e25e33962fb721f4d88c72b5ef1b3a29ff88aea8", "filename": "gcc/collect2.c", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce79110f01f445d97a32f93cc53c346cf98a5425/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce79110f01f445d97a32f93cc53c346cf98a5425/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=ce79110f01f445d97a32f93cc53c346cf98a5425", "patch": "@@ -616,7 +616,7 @@ static const char *const target_machine = TARGET_MACHINE;\n \n    Return 0 if not found, otherwise return its name, allocated with malloc.  */\n \n-#if defined (OBJECT_FORMAT_NONE) || defined (OBJECT_FORMAT_COFF)\n+#ifdef OBJECT_FORMAT_NONE\n \n /* Add an entry for the object file NAME to object file list LIST.\n    New entries are added at the end of the list. The original pointer\n@@ -636,7 +636,7 @@ add_lto_object (struct lto_object_list *list, const char *name)\n \n   list->last = n;\n }\n-#endif\n+#endif /* OBJECT_FORMAT_NONE */\n \n \n /* Perform a link-time recompilation and relink if any of the object\n@@ -2799,10 +2799,8 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n   LDFILE *ldptr = NULL;\n   int sym_index, sym_count;\n   int is_shared = 0;\n-  int found_lto = 0;\n \n-  if (which_pass != PASS_FIRST && which_pass != PASS_OBJ\n-      && which_pass != PASS_LTOINFO)\n+  if (which_pass != PASS_FIRST && which_pass != PASS_OBJ)\n     return;\n \n #ifdef COLLECT_EXPORT_LIST\n@@ -2815,7 +2813,6 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n      eliminate scan_libraries() function.  */\n   do\n     {\n-      found_lto = 0;\n #endif\n       /* Some platforms (e.g. OSF4) declare ldopen as taking a\n \t non-const char * filename parameter, even though it will not\n@@ -2858,19 +2855,6 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n \t\t\t++name;\n #endif\n \n-                      if (which_pass == PASS_LTOINFO)\n-                        {\n-\t\t\t  if (found_lto)\n-\t\t\t    continue;\n-\t\t\t  if (strncmp (name, \"__gnu_lto_v1\", 12) == 0)\n-\t\t\t    {\n-\t\t\t      add_lto_object (&lto_objects, prog_name);\n-\t\t\t      found_lto = 1;\n-\t\t\t      break;\n-\t\t\t    }\n-\t\t\t  continue;\n-\t\t\t}\n-\n \t\t      switch (is_ctor_dtor (name))\n \t\t\t{\n #if TARGET_AIX_VERSION"}]}