{"sha": "f1b51f68f8ac6c63e352dda8599aed01634212de", "node_id": "C_kwDOANBUbNoAKGYxYjUxZjY4ZjhhYzZjNjNlMzUyZGRhODU5OWFlZDAxNjM0MjEyZGU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-09-20T10:57:28Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-03T14:43:48Z"}, "message": "libstdc++: Make _GLIBCXX_HOSTED respect -ffreestanding [PR103626]\n\nThis allows the library to switch to freestanding mode when compiling\nwith the -ffreestanding flag. This means you don't need a separate\nlibstdc++ build configured with --disable-hosted-libstdcxx in order to\ncompile for a freestanding environment.\n\nThe testsuite support files cannot be compiled for freestanding, so add\n-fno-freestanding to override any -ffreestanding in the test flags.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/103626\n\t* acinclude.m4 (GLIBCXX_ENABLE_HOSTED): Define _GLIBCXX_HOSTED\n\tto __STDC_HOSTED__ for non-freestanding installations.\n\t* configure: Regenerate.\n\t* include/Makefile.am (${host_builddir}/c++config.h): Adjust\n\tgrep pattern.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/lib/libstdc++.exp (v3-build_support): Use\n\t-fno-freestanding.\n\t* testsuite/libstdc++-abi/abi.exp: Likewise.", "tree": {"sha": "18496da44408ad8f7e0fb72263e2edf7523eb61e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18496da44408ad8f7e0fb72263e2edf7523eb61e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1b51f68f8ac6c63e352dda8599aed01634212de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b51f68f8ac6c63e352dda8599aed01634212de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b51f68f8ac6c63e352dda8599aed01634212de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b51f68f8ac6c63e352dda8599aed01634212de/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d0627c244f7520bf74ec9cf2a8b69c32b6d30d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d0627c244f7520bf74ec9cf2a8b69c32b6d30d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d0627c244f7520bf74ec9cf2a8b69c32b6d30d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "1b404d7df220c96d3120de4dc5f42bcc10e38678", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=f1b51f68f8ac6c63e352dda8599aed01634212de", "patch": "@@ -2992,7 +2992,7 @@ AC_DEFUN([GLIBCXX_ENABLE_HOSTED], [\n     fi\n   else\n     is_hosted=yes\n-    hosted_define=1\n+    hosted_define=__STDC_HOSTED__\n   fi\n   GLIBCXX_CONDITIONAL(GLIBCXX_HOSTED, test $is_hosted = yes)\n   AC_DEFINE_UNQUOTED(_GLIBCXX_HOSTED, $hosted_define,"}, {"sha": "1ff28af2c2c1810ad31b1a8c6f23733acb6abe10", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=f1b51f68f8ac6c63e352dda8599aed01634212de", "patch": "@@ -15651,7 +15651,7 @@ $as_echo \"$as_me: Only freestanding libraries will be built\" >&6;}\n     fi\n   else\n     is_hosted=yes\n-    hosted_define=1\n+    hosted_define=__STDC_HOSTED__\n   fi\n \n "}, {"sha": "3472e84f75c5b999a3f2a04b937c2255c12505db", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=f1b51f68f8ac6c63e352dda8599aed01634212de", "patch": "@@ -1326,7 +1326,7 @@ ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\\n \t&& ldbl_alt128_compat='s,^#undef _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT$$,#define _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT 1,' ;\\\n \tverbose_assert='s,g,g,' ; \\\n-\tgrep \"^[\t ]*#[\t ]*define[\t ][\t ]*_GLIBCXX_HOSTED[\t ][\t ]*1[\t ]*$$\" \\\n+\tgrep \"^[\t ]*#[\t ]*define[\t ][\t ]*_GLIBCXX_HOSTED[\t ][\t ]*__STDC_HOSTED__[\t ]*$$\" \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\\n \t&& grep \"^[\t ]*#[\t ]*define[\t ][\t ]*_GLIBCXX_VERBOSE[\t ][\t ]*1[\t ]*$$\" \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\"}, {"sha": "39ef34fc3cedf0ce67e7884f7f62eaf3c691f28e", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=f1b51f68f8ac6c63e352dda8599aed01634212de", "patch": "@@ -1820,7 +1820,7 @@ ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\\n \t&& ldbl_alt128_compat='s,^#undef _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT$$,#define _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT 1,' ;\\\n \tverbose_assert='s,g,g,' ; \\\n-\tgrep \"^[\t ]*#[\t ]*define[\t ][\t ]*_GLIBCXX_HOSTED[\t ][\t ]*1[\t ]*$$\" \\\n+\tgrep \"^[\t ]*#[\t ]*define[\t ][\t ]*_GLIBCXX_HOSTED[\t ][\t ]*__STDC_HOSTED__[\t ]*$$\" \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\\n \t&& grep \"^[\t ]*#[\t ]*define[\t ][\t ]*_GLIBCXX_VERBOSE[\t ][\t ]*1[\t ]*$$\" \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\"}, {"sha": "d3256b6c8c415986d2600a100effd8f049ab869b", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=f1b51f68f8ac6c63e352dda8599aed01634212de", "patch": "@@ -654,7 +654,7 @@ proc v3-build_support { } {\n \t# do not prevent compilation.\n \t# Disable LTO so that ar/ranlib don't need the LTO plugin.\n \tif { [v3_target_compile $srcdir/util/$f $object_file \"object\" \\\n-\t\t  [list \"incdir=$srcdir\" \"additional_flags=-w -fno-lto\"]]\n+\t\t  [list \"incdir=$srcdir\" \"additional_flags=-w -fno-lto -fno-freestanding\"]]\n \t     != \"\" } {\n \t    error \"could not compile $f\"\n \t}\n@@ -693,7 +693,7 @@ proc v3-build_support { } {\n \t    # Compile with \"-w\" so that warnings issued by the compiler\n \t    # do not prevent compilation.\n \t    if { [v3_target_compile $srcdir/util/$f $object_file \"sharedlib\" \\\n-\t     [list \"incdir=$srcdir\" \"additional_flags=-fno-inline -w -shared -fPIC -DPIC -std=gnu++98\"]]\n+\t     [list \"incdir=$srcdir\" \"additional_flags=-fno-inline -w -shared -fPIC -DPIC -std=gnu++98 -fno-freestanding\"]]\n \t\t != \"\" } {\n \t\terror \"could not compile $f\"\n \t    }"}, {"sha": "66f19ea4514ca6f5a509dc2f94d8d19b0607071c", "filename": "libstdc++-v3/testsuite/libstdc++-abi/abi.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b51f68f8ac6c63e352dda8599aed01634212de/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-abi%2Fabi.exp?ref=f1b51f68f8ac6c63e352dda8599aed01634212de", "patch": "@@ -60,7 +60,7 @@ remote_exec \"build\" \"$blddir/scripts/extract_symvers\" \\\n \n # Build the abi_check program.\n if { [v3_target_compile \"$srcdir/util/testsuite_abi_check.cc\" \"abi_check\" \\\n-      \"executable\" [list \"additional_flags=-w\"]] != \"\" } {\n+      \"executable\" [list \"additional_flags=-w -fno-freestanding\"]] != \"\" } {\n     error \"could not compile testsuite_abi_check.cc\"\n }\n "}]}