{"sha": "26ff2117a92699fbbf8ba5559248df3696b88ce1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZmZjIxMTdhOTI2OTlmYmJmOGJhNTU1OTI0OGRmMzY5NmI4OGNlMQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@nerim.net", "date": "2002-07-24T12:17:53Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-07-24T12:17:53Z"}, "message": "pretty-print.h: Add macros from cp/error.c `:w\n\n\n\t* pretty-print.h: Add macros from cp/error.c\n`:w\n\nFrom-SVN: r55703", "tree": {"sha": "a6a1bef25348c2529c289330dcb76d0f4383bc3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6a1bef25348c2529c289330dcb76d0f4383bc3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26ff2117a92699fbbf8ba5559248df3696b88ce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26ff2117a92699fbbf8ba5559248df3696b88ce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26ff2117a92699fbbf8ba5559248df3696b88ce1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26ff2117a92699fbbf8ba5559248df3696b88ce1/comments", "author": null, "committer": null, "parents": [{"sha": "6364054f3ae2db85eed718152cce6a21c313fa72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6364054f3ae2db85eed718152cce6a21c313fa72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6364054f3ae2db85eed718152cce6a21c313fa72"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "3e488ab713f2c1e150d0f7ed338c5dc7eb44da7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26ff2117a92699fbbf8ba5559248df3696b88ce1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26ff2117a92699fbbf8ba5559248df3696b88ce1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26ff2117a92699fbbf8ba5559248df3696b88ce1", "patch": "@@ -1,3 +1,7 @@\n+2002-07-24  Gabriel Dos Reis  <gdr@nerim.net>\n+\n+\t* pretty-print.h: Add macros from cp/error.c\n+\n 2002-07-24  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000-protos.h (mask_operand_wrap): Declare."}, {"sha": "a4ae280b1fae20230567ae2f655a67f64bdce1b8", "filename": "gcc/pretty-print.h", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26ff2117a92699fbbf8ba5559248df3696b88ce1/gcc%2Fpretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26ff2117a92699fbbf8ba5559248df3696b88ce1/gcc%2Fpretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.h?ref=26ff2117a92699fbbf8ba5559248df3696b88ce1", "patch": "@@ -29,30 +29,39 @@ typedef struct pretty_print_info pretty_print_info;\n /* The type of pretty-printer flags passed to clients.  */\n typedef unsigned int pp_flags;\n \n-/* The type of pretty-print styles.  */\n-enum pp_style\n+enum pp_padding\n {\n-  pp_standard_c,\n-  pp_gnu_c,\n-  pp_standard_cxx,\n-  pp_gnu_cxx\n+  pp_none, pp_before, pp_after\n };\n \n struct pretty_print_info\n {\n+  /* The entity to pretty-print.  */\n   tree entity;\n-  tree scope;\n-  enum pp_style style;\n   pp_flags flags;\n+  /* Where to put whitespace around the entity being formatted.  */\n+  enum pp_padding padding;\n   /* Where we print external representation of ENTITY.  */\n   output_buffer *buffer;\n-  /* Client extenion hook.  */\n-  void *x_data;\n-\n-  void (*print_declaration) (pretty_print_info *);\n-  void (*print_statement) (pretty_print_info *);\n-  void (*print_expression) (pretty_print_info *);\n };\n \n \n+#define pp_sorry_for_unsupported_tree(PPI, T) \\\n+  output_verbatim ((PPI)->buffer, \"\\nsorry: `%s' not supported by %s\\n\",\\\n+                   tree_code_name[(int) TREE_CODE (T)], __FUNCTION__)\n+\n+#define pp_left_paren(PPI)    output_add_character ((PPI)->buffer, '(')\n+#define pp_right_paren(PPI)   output_add_character ((PPI)->buffer, ')')\n+#define pp_left_bracket(PPI)  output_add_character ((PPI)->buffer, '[')\n+#define pp_right_bracket(PPI) output_add_character ((PPI)->buffer, '[')\n+#define pp_semi_colon(PPI)    output_add_character ((PPI)->buffer, ';')\n+#define pp_comma(PPI)         output_add_string ((PPI)->buffer, \", \")\n+#define pp_dot(PPI)           output_add_character ((PPI)->buffer, '.')\n+#define pp_colon(PPI)         output_add_character ((PPI)->buffer, ':')\n+#define pp_colon_colon(PPI)   output_add_string ((PPI)->buffer, \"::\")\n+#define pp_quote(PPI)         output_add_character ((PPI)->buffer, '\\'')\n+#define pp_backquote(PPI)     output_add_character ((PPI)->buffer, '`')\n+#define pp_doublequote(PPI)   output_add_character ((PPI)->buffer, '\"')\n+\n+\n #endif /* GCC_PRETTY_PRINT_H */"}]}