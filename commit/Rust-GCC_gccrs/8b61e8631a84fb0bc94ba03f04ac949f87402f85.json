{"sha": "8b61e8631a84fb0bc94ba03f04ac949f87402f85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2MWU4NjMxYTg0ZmIwYmM5NGJhMDNmMDRhYzk0OWY4NzQwMmY4NQ==", "commit": {"author": {"name": "Revital Eres", "email": "revital.eres@linaro.org", "date": "2012-01-02T10:54:00Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2012-01-02T10:54:00Z"}, "message": "SMS: Prevent the creation of reg-moves for definitions with MODE_CC\n\nFrom-SVN: r182786", "tree": {"sha": "36b4795404ad49759db242ac7d9fa7804b2511ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36b4795404ad49759db242ac7d9fa7804b2511ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b61e8631a84fb0bc94ba03f04ac949f87402f85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b61e8631a84fb0bc94ba03f04ac949f87402f85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b61e8631a84fb0bc94ba03f04ac949f87402f85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b61e8631a84fb0bc94ba03f04ac949f87402f85/comments", "author": null, "committer": null, "parents": [{"sha": "ba768e1850d730bcd44e674fdf4f4fe252f85182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba768e1850d730bcd44e674fdf4f4fe252f85182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba768e1850d730bcd44e674fdf4f4fe252f85182"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "7284b31687a4e62d994cf1161539ac7c5c97393f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b61e8631a84fb0bc94ba03f04ac949f87402f85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b61e8631a84fb0bc94ba03f04ac949f87402f85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b61e8631a84fb0bc94ba03f04ac949f87402f85", "patch": "@@ -1,3 +1,9 @@\n+2012-01-02  Revital Eres  <revital.eres@linaro.org>\n+\n+\t* ddg.c (def_has_ccmode_p): New function.\n+\t(add_cross_iteration_register_deps,\n+\tcreate_ddg_dep_from_intra_loop_link): Call it.\n+\n 2012-01-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR other/51679"}, {"sha": "a5158827638942dc32cccf876360e90b4a8d3644", "filename": "gcc/ddg.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b61e8631a84fb0bc94ba03f04ac949f87402f85/gcc%2Fddg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b61e8631a84fb0bc94ba03f04ac949f87402f85/gcc%2Fddg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fddg.c?ref=8b61e8631a84fb0bc94ba03f04ac949f87402f85", "patch": "@@ -166,6 +166,24 @@ autoinc_var_is_used_p (rtx def_insn, rtx use_insn)\n   return false;\n }\n \n+/* Return true if one of the definitions in INSN has MODE_CC.  Otherwise\n+   return false.  */\n+static bool\n+def_has_ccmode_p (rtx insn)\n+{\n+  df_ref *def;\n+\n+  for (def = DF_INSN_DEFS (insn); *def; def++)\n+    {\n+      enum machine_mode mode = GET_MODE (DF_REF_REG (*def));\n+\n+      if (GET_MODE_CLASS (mode) == MODE_CC)\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n /* Computes the dependence parameters (latency, distance etc.), creates\n    a ddg_edge and adds it to the given DDG.  */\n static void\n@@ -202,6 +220,7 @@ create_ddg_dep_from_intra_loop_link (ddg_ptr g, ddg_node_ptr src_node,\n      whose register has multiple defs in the loop.  */\n   if (flag_modulo_sched_allow_regmoves \n       && (t == ANTI_DEP && dt == REG_DEP)\n+      && !def_has_ccmode_p (dest_node->insn)\n       && !autoinc_var_is_used_p (dest_node->insn, src_node->insn))\n     {\n       rtx set;\n@@ -335,7 +354,8 @@ add_cross_iteration_register_deps (ddg_ptr g, df_ref last_def)\n           if (DF_REF_ID (last_def) != DF_REF_ID (first_def)\n               || !flag_modulo_sched_allow_regmoves\n \t      || JUMP_P (use_node->insn)\n-              || autoinc_var_is_used_p (DF_REF_INSN (last_def), use_insn))\n+              || autoinc_var_is_used_p (DF_REF_INSN (last_def), use_insn)\n+\t      || def_has_ccmode_p (DF_REF_INSN (last_def)))\n             create_ddg_dep_no_link (g, use_node, first_def_node, ANTI_DEP,\n                                     REG_DEP, 1);\n "}, {"sha": "77ad56205ed85a62a3ad83f21f730e94066e8d34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b61e8631a84fb0bc94ba03f04ac949f87402f85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b61e8631a84fb0bc94ba03f04ac949f87402f85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8b61e8631a84fb0bc94ba03f04ac949f87402f85", "patch": "@@ -1,3 +1,7 @@\n+2012-01-02  Revital Eres  <revital.eres@linaro.org>\n+\n+\t* gcc.dg/sms-11.c: New file.\n+\n 2012-01-02  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51682"}, {"sha": "6134598632d863ab118a0e7cf36660efda69caa3", "filename": "gcc/testsuite/gcc.dg/sms-11.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b61e8631a84fb0bc94ba03f04ac949f87402f85/gcc%2Ftestsuite%2Fgcc.dg%2Fsms-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b61e8631a84fb0bc94ba03f04ac949f87402f85/gcc%2Ftestsuite%2Fgcc.dg%2Fsms-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsms-11.c?ref=8b61e8631a84fb0bc94ba03f04ac949f87402f85", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms\" } */\n+\n+extern void abort (void);\n+\n+float out[4][4] = { 6, 6, 7, 5, 6, 7, 5, 5, 6, 4, 4, 4, 6, 2, 3, 4 };\n+\n+void\n+invert (void)\n+{\n+  int i, j, k = 0, swap;\n+  float tmp[4][4] = { 5, 6, 7, 5, 6, 7, 5, 5, 4, 4, 4, 4, 3, 2, 3, 4 };\n+\n+  for (i = 0; i < 4; i++)\n+    {\n+      for (j = i + 1; j < 4; j++)\n+\tif (tmp[j][i] > tmp[i][i])\n+\t  swap = j;\n+\n+      if (swap != i)\n+\ttmp[i][k] = tmp[swap][k];\n+    }\n+\n+  for (i = 0; i < 4; i++)\n+    for (j = 0; j < 4; j++)\n+      if (tmp[i][j] != out[i][j])\n+\tabort ();\n+}\n+\n+int\n+main ()\n+{\n+  invert ();\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-rtl-dump \"sms\" } } */"}]}