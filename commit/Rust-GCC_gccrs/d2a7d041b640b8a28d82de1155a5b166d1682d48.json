{"sha": "d2a7d041b640b8a28d82de1155a5b166d1682d48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJhN2QwNDFiNjQwYjhhMjhkODJkZTExNTVhNWIxNjZkMTY4MmQ0OA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-11-03T06:07:39Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-11-03T06:07:39Z"}, "message": "Fix multilib build of libgcc on Linux/sparc.\n\n\t* configure.ac: Set host_address on sparc too.\n\t* configure: Regenerate.\n\t* config.host: Add sparc/t-linux64 and sparc/t-softmul conditionally\n\tbased upon host_address.\n\t* config/sparc/t-linux64: Set CRTSTUFF_T_CFLAGS unconditionally.\n\nFrom-SVN: r180818", "tree": {"sha": "9a17b80ba28414db1fbe3aceb5eaaecf1b619dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a17b80ba28414db1fbe3aceb5eaaecf1b619dda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2a7d041b640b8a28d82de1155a5b166d1682d48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a7d041b640b8a28d82de1155a5b166d1682d48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2a7d041b640b8a28d82de1155a5b166d1682d48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2a7d041b640b8a28d82de1155a5b166d1682d48/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8c866e57c8fa49fa506f3dd2ff146aeab3c92a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c866e57c8fa49fa506f3dd2ff146aeab3c92a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c866e57c8fa49fa506f3dd2ff146aeab3c92a4"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "1365813ff1a7611f17bfbcd8bf103864dd43066f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d2a7d041b640b8a28d82de1155a5b166d1682d48", "patch": "@@ -1,3 +1,11 @@\n+2011-11-02  David S. Miller  <davem@davemloft.net>\n+\n+\t* configure.ac: Set host_address on sparc too.\n+\t* configure: Regenerate.\n+\t* config.host: Add sparc/t-linux64 and sparc/t-softmul conditionally\n+\tbased upon host_address.\n+\t* config/sparc/t-linux64: Set CRTSTUFF_T_CFLAGS unconditionally.\n+\n 2011-11-02  Jason Merrill  <jason@redhat.com>\n \n \t* config/rs6000/t-ppccomm: Add missing \\."}, {"sha": "c62e8308c95f5b1e4ba9f810302a9297a24fd718", "filename": "libgcc/config.host", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=d2a7d041b640b8a28d82de1155a5b166d1682d48", "patch": "@@ -1008,7 +1008,10 @@ sparc-*-elf*)\n \textra_parts=\"$extra_parts crti.o crtn.o crtfastmath.o\"\n \t;;\n sparc-*-linux*)\t\t# SPARC's running GNU/Linux, libc6\n-\ttmake_file=\"${tmake_file} t-crtfm sparc/t-linux64\"\n+\ttmake_file=\"${tmake_file} t-crtfm\"\n+\tif test \"${host_address}\" = 64; then\n+\t\ttmake_file=\"$tmake_file sparc/t-linux64\"\n+\tfi\n \tcase ${host} in\n \t*-leon*)\n \t\ttmake_file=\"${tmake_file} t-fdpbit\"\n@@ -1021,7 +1024,9 @@ sparc-*-linux*)\t\t# SPARC's running GNU/Linux, libc6\n \t*-leon[3-9]*)\n \t\t;;\n \t*)\n-\t  \ttmake_file=\"$tmake_file sparc/t-softmul\"\n+\t\tif test \"${host_address}\" = 32; then\n+\t\t\ttmake_file=\"$tmake_file sparc/t-softmul\"\n+\t\tfi\n \t  \t;;\n \tesac\n \textra_parts=\"$extra_parts crtfastmath.o\"\n@@ -1052,7 +1057,13 @@ sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n \t;;\n sparc64-*-linux*)\t\t# 64-bit SPARC's running GNU/Linux\n \textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"${tmake_file} t-crtfm sparc/t-linux sparc/t-linux64\"\n+\ttmake_file=\"${tmake_file} t-crtfm sparc/t-linux\"\n+\tif test \"${host_address}\" = 64; then\n+\t\ttmake_file=\"${tmake_file} sparc/t-linux64\"\n+\tfi\n+\tif test \"${host_address}\" = 32; then\n+\t\ttmake_file=\"${tmake_file} sparc/t-softmul\"\n+\tfi\n \tmd_unwind_header=sparc/linux-unwind.h\n \t;;\n sparc64-*-netbsd*)"}, {"sha": "6583fe25ac797be6eeed68e42873c28e358797d8", "filename": "libgcc/config/sparc/t-linux64", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2Fconfig%2Fsparc%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2Fconfig%2Fsparc%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Ft-linux64?ref=d2a7d041b640b8a28d82de1155a5b166d1682d48", "patch": "@@ -1,2 +1 @@\n-CRTSTUFF_T_CFLAGS = `if test x$$($(CC) -print-multi-os-directory) \\\n-\t\t\t= x../lib64; then echo -mcmodel=medany; fi`\n+CRTSTUFF_T_CFLAGS = -mcmodel=medany"}, {"sha": "0f18037e796052f8976771dfa55a1780e5911bb1", "filename": "libgcc/configure", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=d2a7d041b640b8a28d82de1155a5b166d1682d48", "patch": "@@ -4609,11 +4609,12 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgcc_cv_cfi\" >&5\n $as_echo \"$libgcc_cv_cfi\" >&6; }\n \n-# Check 32bit or 64bit for x86.\n+# Check 32bit or 64bit for x86 and sparc.\n case ${host} in\n-i?86*-*-* | x86_64*-*-*)\n+i?86*-*-* | x86_64*-*-* | sparc*-*-*)\n   cat > conftest.c <<EOF\n-#ifdef __x86_64__\n+#if defined(__x86_64__) || \\\n+    (defined(__sparc__) && defined(__arch64__))\n host_address=64\n #else\n host_address=32"}, {"sha": "5250be3b59e8c1459ccf841cbb0fbb8481f60bd7", "filename": "libgcc/configure.ac", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2a7d041b640b8a28d82de1155a5b166d1682d48/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=d2a7d041b640b8a28d82de1155a5b166d1682d48", "patch": "@@ -255,11 +255,12 @@ AC_CACHE_CHECK([whether assembler supports CFI directives], [libgcc_cv_cfi],\n   [libgcc_cv_cfi=yes],\n   [libgcc_cv_cfi=no])])\n \n-# Check 32bit or 64bit for x86.\n+# Check 32bit or 64bit for x86 and sparc.\n case ${host} in\n-i?86*-*-* | x86_64*-*-*)\n+i?86*-*-* | x86_64*-*-* | sparc*-*-*)\n   cat > conftest.c <<EOF\n-#ifdef __x86_64__\n+#if defined(__x86_64__) || \\\n+    (defined(__sparc__) && defined(__arch64__))\n host_address=64\n #else\n host_address=32"}]}