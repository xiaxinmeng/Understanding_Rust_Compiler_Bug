{"sha": "a335a94a1bf49dcb3c966af05cd68be6ee36277e", "node_id": "C_kwDOANBUbNoAKGEzMzVhOTRhMWJmNDlkY2IzYzk2NmFmMDVjZDY4YmU2ZWUzNjI3N2U", "commit": {"author": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2022-04-15T02:51:06Z"}, "committer": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2022-04-15T12:18:11Z"}, "message": "i386: Correct target attribute for crc32 intrinsics\n\nComplile _mm_crc32_u8/16/32/64 intrinsics with -mcrc32\nwould meet target specific option mismatch. Correct target pragma\nto fix.\n\ngcc/ChangeLog:\n\n\t* config/i386/smmintrin.h: Correct target pragma from sse4.1\n\tand sse4.2 to crc32 for crc32 intrinsics.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/crc32-6.c: Adjust dg-error message.\n\t* gcc.target/i386/crc32-7.c: New test.", "tree": {"sha": "9a7490ca8cdb058cfc2979148e687832b7e0c513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a7490ca8cdb058cfc2979148e687832b7e0c513"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a335a94a1bf49dcb3c966af05cd68be6ee36277e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a335a94a1bf49dcb3c966af05cd68be6ee36277e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a335a94a1bf49dcb3c966af05cd68be6ee36277e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a335a94a1bf49dcb3c966af05cd68be6ee36277e/comments", "author": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e580f81d22d61153564959f08d9a6d3bcc7fd386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e580f81d22d61153564959f08d9a6d3bcc7fd386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e580f81d22d61153564959f08d9a6d3bcc7fd386"}], "stats": {"total": 61, "additions": 42, "deletions": 19}, "files": [{"sha": "eb6a451c10a020c9872ab72655948041c4ce6f2a", "filename": "gcc/config/i386/smmintrin.h", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a335a94a1bf49dcb3c966af05cd68be6ee36277e/gcc%2Fconfig%2Fi386%2Fsmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a335a94a1bf49dcb3c966af05cd68be6ee36277e/gcc%2Fconfig%2Fi386%2Fsmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsmmintrin.h?ref=a335a94a1bf49dcb3c966af05cd68be6ee36277e", "patch": "@@ -810,17 +810,11 @@ _mm_cmpgt_epi64 (__m128i __X, __m128i __Y)\n \n #include <popcntintrin.h>\n \n-#ifndef __SSE4_1__\n+#ifndef __CRC32__\n #pragma GCC push_options\n-#pragma GCC target(\"sse4.1\")\n-#define __DISABLE_SSE4_1__\n-#endif /* __SSE4_1__ */\n-\n-#ifndef __SSE4_2__\n-#pragma GCC push_options\n-#pragma GCC target(\"sse4.2\")\n-#define __DISABLE_SSE4_2__\n-#endif /* __SSE4_1__ */\n+#pragma GCC target(\"crc32\")\n+#define __DISABLE_CRC32__\n+#endif /* __CRC32__ */\n \n /* Accumulate CRC32 (polynomial 0x11EDC6F41) value.  */\n extern __inline unsigned int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n@@ -849,14 +843,9 @@ _mm_crc32_u64 (unsigned long long __C, unsigned long long __V)\n }\n #endif\n \n-#ifdef __DISABLE_SSE4_2__\n-#undef __DISABLE_SSE4_2__\n+#ifdef __DISABLE_CRC32__\n+#undef __DISABLE_CRC32__\n #pragma GCC pop_options\n-#endif /* __DISABLE_SSE4_2__ */\n-\n-#ifdef __DISABLE_SSE4_1__\n-#undef __DISABLE_SSE4_1__\n-#pragma GCC pop_options\n-#endif /* __DISABLE_SSE4_1__ */\n+#endif /* __DISABLE_CRC32__ */\n \n #endif /* _SMMINTRIN_H_INCLUDED */"}, {"sha": "7f2b42df3a2fcb20976d37339c3e620586a9b7ef", "filename": "gcc/testsuite/gcc.target/i386/crc32-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a335a94a1bf49dcb3c966af05cd68be6ee36277e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a335a94a1bf49dcb3c966af05cd68be6ee36277e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-6.c?ref=a335a94a1bf49dcb3c966af05cd68be6ee36277e", "patch": "@@ -10,4 +10,4 @@ test_mm_crc32_u8 (unsigned int CRC, unsigned char V)\n   return _mm_crc32_u8 (CRC, V);\n }\n \n-/* { dg-error \"needs isa option -mcrc32\" \"\" { target *-*-* } 0  } */\n+/* { dg-error \"target specific option mismatch\" \"\" { target *-*-* } 0  } */"}, {"sha": "2e310e38b8200061d10bea709a002ebbeffb37f8", "filename": "gcc/testsuite/gcc.target/i386/crc32-7.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a335a94a1bf49dcb3c966af05cd68be6ee36277e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a335a94a1bf49dcb3c966af05cd68be6ee36277e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-7.c?ref=a335a94a1bf49dcb3c966af05cd68be6ee36277e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcrc32\" } */\n+/* { dg-final { scan-assembler \"crc32b\\[^\\\\n\\]*eax\" } } */\n+/* { dg-final { scan-assembler \"crc32w\\[^\\\\n\\]*eax\" } } */\n+/* { dg-final { scan-assembler \"crc32l\\[^\\\\n\\]*eax\" } } */\n+/* { dg-final { scan-assembler \"crc32q\\[^\\\\n\\]*rax\" { target { ! ia32 } } } } */\n+\n+#include <immintrin.h>\n+\n+unsigned int\n+test_mm_crc32_u8 (unsigned int CRC, unsigned char V)\n+{\n+  return _mm_crc32_u8 (CRC, V);\n+}\n+\n+unsigned int\n+test_mm_crc32_u16 (unsigned int CRC, unsigned short V)\n+{\n+  return _mm_crc32_u16 (CRC, V);\n+}\n+\n+unsigned int\n+test_mm_crc32_u32 (unsigned int CRC, unsigned int V)\n+{\n+  return _mm_crc32_u32 (CRC, V);\n+}\n+\n+#ifdef __x86_64__\n+unsigned long long\n+test_mm_crc32_u64 (unsigned long long CRC, unsigned long long V)\n+{\n+  return _mm_crc32_u64 (CRC, V);\n+}\n+#endif"}]}