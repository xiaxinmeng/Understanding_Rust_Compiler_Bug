{"sha": "9021b8ec96cd58324a3cce6a7b756cd964f91aa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAyMWI4ZWM5NmNkNTgzMjRhM2NjZTZhN2I3NTZjZDk2NGY5MWFhMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:23:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:23:13Z"}, "message": "emit-rtl.c: Include rtl-iter.h.\n\ngcc/\n\t* emit-rtl.c: Include rtl-iter.h.\n\t(find_auto_inc): Turn from being a for_each_rtx callback to being\n\ta function that examines each subrtx itself.  Assume the first operand\n\tto an RTX_AUTOINC is the automodified register.\n\t(try_split): Update call accordingly.\n\nFrom-SVN: r214638", "tree": {"sha": "d2d441830db8c826e4f804efe337774451b7ffee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2d441830db8c826e4f804efe337774451b7ffee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9021b8ec96cd58324a3cce6a7b756cd964f91aa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9021b8ec96cd58324a3cce6a7b756cd964f91aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9021b8ec96cd58324a3cce6a7b756cd964f91aa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9021b8ec96cd58324a3cce6a7b756cd964f91aa1/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e971a9125be65a34233e6b7496f6c39419a6a5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e971a9125be65a34233e6b7496f6c39419a6a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e971a9125be65a34233e6b7496f6c39419a6a5c"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "3d822a528e338318976f84af7711b32d727dca56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9021b8ec96cd58324a3cce6a7b756cd964f91aa1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9021b8ec96cd58324a3cce6a7b756cd964f91aa1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9021b8ec96cd58324a3cce6a7b756cd964f91aa1", "patch": "@@ -1,3 +1,11 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* emit-rtl.c: Include rtl-iter.h.\n+\t(find_auto_inc): Turn from being a for_each_rtx callback to being\n+\ta function that examines each subrtx itself.  Assume the first operand\n+\tto an RTX_AUTOINC is the automodified register.\n+\t(try_split): Update call accordingly.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* dwarf2out.c (resolve_one_addr): Remove unused data parameter."}, {"sha": "e47ef02e939ee22f9c6befb7af299a633855136f", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9021b8ec96cd58324a3cce6a7b756cd964f91aa1/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9021b8ec96cd58324a3cce6a7b756cd964f91aa1/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=9021b8ec96cd58324a3cce6a7b756cd964f91aa1", "patch": "@@ -58,6 +58,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"target.h\"\n #include \"builtins.h\"\n+#include \"rtl-iter.h\"\n \n struct target_rtl default_target_rtl;\n #if SWITCHABLE_TARGET\n@@ -3505,30 +3506,17 @@ prev_cc0_setter (rtx insn)\n /* Find a RTX_AUTOINC class rtx which matches DATA.  */\n \n static int\n-find_auto_inc (rtx *xp, void *data)\n+find_auto_inc (const_rtx x, const_rtx reg)\n {\n-  rtx x = *xp;\n-  rtx reg = (rtx) data;\n-\n-  if (GET_RTX_CLASS (GET_CODE (x)) != RTX_AUTOINC)\n-    return 0;\n-\n-  switch (GET_CODE (x))\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, x, NONCONST)\n     {\n-      case PRE_DEC:\n-      case PRE_INC:\n-      case POST_DEC:\n-      case POST_INC:\n-      case PRE_MODIFY:\n-      case POST_MODIFY:\n-\tif (rtx_equal_p (reg, XEXP (x, 0)))\n-\t  return 1;\n-\tbreak;\n-\n-      default:\n-\tgcc_unreachable ();\n+      const_rtx x = *iter;\n+      if (GET_RTX_CLASS (GET_CODE (x)) == RTX_AUTOINC\n+\t  && rtx_equal_p (reg, XEXP (x, 0)))\n+\treturn true;\n     }\n-  return -1;\n+  return false;\n }\n #endif\n \n@@ -3715,7 +3703,7 @@ try_split (rtx pat, rtx trial, int last)\n \t    {\n \t      rtx reg = XEXP (note, 0);\n \t      if (!FIND_REG_INC_NOTE (insn, reg)\n-\t\t  && for_each_rtx (&PATTERN (insn), find_auto_inc, reg) > 0)\n+\t\t  && find_auto_inc (PATTERN (insn), reg))\n \t\tadd_reg_note (insn, REG_INC, reg);\n \t    }\n \t  break;"}]}