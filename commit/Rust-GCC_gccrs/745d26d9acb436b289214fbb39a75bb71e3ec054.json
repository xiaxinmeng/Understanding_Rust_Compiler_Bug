{"sha": "745d26d9acb436b289214fbb39a75bb71e3ec054", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ1ZDI2ZDlhY2I0MzZiMjg5MjE0ZmJiMzlhNzViYjcxZTNlYzA1NA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-10-15T04:18:01Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-10-15T04:18:01Z"}, "message": "re PR c++/17976 (Calls the dtor twice)\n\n\tPR c++/17976\n\t* decl.c (cp_finish_decl): Do not call expand_static_init more\n\tthan once for a single variable.\n\n\tPR c++/17976\n\t* g++.dg/init/dtor3.C: New test.\n\nFrom-SVN: r89081", "tree": {"sha": "11da67c5447778d35df7bb85fd7da29f96d7c5bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11da67c5447778d35df7bb85fd7da29f96d7c5bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/745d26d9acb436b289214fbb39a75bb71e3ec054", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745d26d9acb436b289214fbb39a75bb71e3ec054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/745d26d9acb436b289214fbb39a75bb71e3ec054", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745d26d9acb436b289214fbb39a75bb71e3ec054/comments", "author": null, "committer": null, "parents": [{"sha": "53e782e542b3311a78d36410c9e87c34ad5717ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53e782e542b3311a78d36410c9e87c34ad5717ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53e782e542b3311a78d36410c9e87c34ad5717ff"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "8ae05c0e4ece00f1d1fc277ac92e7d9ab67ab38f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745d26d9acb436b289214fbb39a75bb71e3ec054/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745d26d9acb436b289214fbb39a75bb71e3ec054/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=745d26d9acb436b289214fbb39a75bb71e3ec054", "patch": "@@ -1,3 +1,9 @@\n+2004-10-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/17976\n+\t* decl.c (cp_finish_decl): Do not call expand_static_init more\n+\tthan once for a single variable.\n+\n 2004-10-14  Matt Austern  <austern@apple.com>\n \n \t* Make-lang.in (pt.o): depends on pointer-set.h"}, {"sha": "ee7e48143f80b4582d924100bc1c9d5fc1c0ff3c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745d26d9acb436b289214fbb39a75bb71e3ec054/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745d26d9acb436b289214fbb39a75bb71e3ec054/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=745d26d9acb436b289214fbb39a75bb71e3ec054", "patch": "@@ -4763,6 +4763,7 @@ cp_finish_decl (tree decl, tree init, tree asmspec_tree, int flags)\n   tree cleanup;\n   const char *asmspec = NULL;\n   int was_readonly = 0;\n+  bool var_definition_p = false;\n \n   if (decl == error_mark_node)\n     return;\n@@ -4904,6 +4905,11 @@ cp_finish_decl (tree decl, tree init, tree asmspec_tree, int flags)\n \t  /* Remember that the initialization for this variable has\n \t     taken place.  */\n \t  DECL_INITIALIZED_P (decl) = 1;\n+\t  /* This declaration is the definition of this variable,\n+\t     unless we are initializing a static data member within\n+\t     the class specifier.  */\n+\t  if (!DECL_EXTERNAL (decl))\n+\t    var_definition_p = true;\n \t  /* The variable is being defined, so determine its\n \t     visibility.  */\n \t  determine_visibility (decl);\n@@ -4969,10 +4975,18 @@ cp_finish_decl (tree decl, tree init, tree asmspec_tree, int flags)\n \t      else if (!TREE_STATIC (decl))\n \t\tinitialize_local_var (decl, init);\n \t    }\n-\n-\t  if (TREE_STATIC (decl))\n-\t    expand_static_init (decl, init);\n-\t}\n+\t  \n+\t  /* If a variable is defined, and then a subsequent\n+\t     definintion with external linkage is encountered, we will\n+\t     get here twice for the same variable.  We want to avoid\n+\t     calling expand_static_init more than once.  For variables\n+\t     that are not static data members, we can call\n+\t     expand_static_init only when we actually process the\n+\t     initializer.  It is not legal to redeclare a static data\n+\t     member, so this issue does not arise in that case.  */\n+\t  if (var_definition_p && TREE_STATIC (decl))\n+\t    expand_static_init (decl, init); \n+\t} \n     }\n \n   /* If a CLEANUP_STMT was created to destroy a temporary bound to a"}, {"sha": "1acfe77ab563ab16b3e3b14a5068ce4e6a32cbaf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745d26d9acb436b289214fbb39a75bb71e3ec054/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745d26d9acb436b289214fbb39a75bb71e3ec054/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=745d26d9acb436b289214fbb39a75bb71e3ec054", "patch": "@@ -1,3 +1,8 @@\n+2004-10-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/17976\n+\t* g++.dg/init/dtor3.C: New test.\n+\n 2004-10-15  Ben Elliston  <bje@au.ibm.com>\n \n \t* gcc.dg/ppc-stackalign-1.c: Set dg-options to {}."}, {"sha": "2af1ffe46347832210735ce9a9eb01913e332768", "filename": "gcc/testsuite/g++.dg/init/dtor3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745d26d9acb436b289214fbb39a75bb71e3ec054/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdtor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745d26d9acb436b289214fbb39a75bb71e3ec054/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdtor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdtor3.C?ref=745d26d9acb436b289214fbb39a75bb71e3ec054", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/17976\n+// { dg-do run }\n+\n+extern \"C\" void abort();\n+struct A\n+{\n+  static int i;\n+  A(){}\n+  ~A(){i++;if(i>1)abort();}\n+};\n+\n+int A::i = 0;\n+\n+A a;\n+extern A a;\n+\n+int main()\n+{\n+  return 0;\n+}\n+"}]}