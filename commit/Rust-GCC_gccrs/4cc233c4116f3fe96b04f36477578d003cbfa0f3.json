{"sha": "4cc233c4116f3fe96b04f36477578d003cbfa0f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNjMjMzYzQxMTZmM2ZlOTZiMDRmMzY0Nzc1NzhkMDAzY2JmYTBmMw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2005-11-23T02:14:26Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2005-11-23T02:14:26Z"}, "message": "re PR libfortran/24794 (problem with namelist input of character array)\n\n2005-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/24794\n\t* gfortran.dg/namelist_12.f: Fix quotes.\n\t* gfortran.dg/namelist_13.f90: Fix quotes.\n\t* gfortran.dg/namelist_14.f90: Fix quotes.\n\t* gfortran.dg/namelist_15.f90: Fix quotes.\n\t* gfortran.dg/namelist_use.f90: Fix quotes.\n\t* gfortran.dg/namelist_use_only.f90: Fix quotes.\n\t* gfortran.dg/namelist_21.f90: New test.\n\t* gfortran.dg/namelist_22.f90: New test.\n\nFrom-SVN: r107396", "tree": {"sha": "2a199de17d6a21a8e3356fc709f367c47f984db5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a199de17d6a21a8e3356fc709f367c47f984db5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cc233c4116f3fe96b04f36477578d003cbfa0f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc233c4116f3fe96b04f36477578d003cbfa0f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc233c4116f3fe96b04f36477578d003cbfa0f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc233c4116f3fe96b04f36477578d003cbfa0f3/comments", "author": null, "committer": null, "parents": [{"sha": "c4a108fd8eba44c9aac67f2c482754c2f975fdf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4a108fd8eba44c9aac67f2c482754c2f975fdf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4a108fd8eba44c9aac67f2c482754c2f975fdf6"}], "stats": {"total": 148, "additions": 121, "deletions": 27}, "files": [{"sha": "85ff4845637d369b5b30b8653dd89bacfd480286", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -1,3 +1,15 @@\n+2005-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/24794\n+\t* gfortran.dg/namelist_12.f: Fix quotes.\n+\t* gfortran.dg/namelist_13.f90: Fix quotes.\n+\t* gfortran.dg/namelist_14.f90: Fix quotes.\n+\t* gfortran.dg/namelist_15.f90: Fix quotes.\n+\t* gfortran.dg/namelist_use.f90: Fix quotes.\n+\t* gfortran.dg/namelist_use_only.f90: Fix quotes.\n+\t* gfortran.dg/namelist_21.f90: New test.\n+\t* gfortran.dg/namelist_22.f90: New test.\n+\n 2005-11-22  Kazu Hirata  <kazu@codesourcery.com>\n \n \tPR target/23435"}, {"sha": "6a7bfad83ba59dd6f94c70c4babf1c2c101c4d29", "filename": "gcc/testsuite/gfortran.dg/namelist_12.f", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_12.f?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -1,9 +1,9 @@\n c{ dg-do run }\n-c This program repeats many of the same tests as test_nml_1 but for integer instead of real.\n-c  It also tests repeat nulls, comma delimited character read, a triplet qualifier, a range with\n-c and assumed start, a quote delimited string, a qualifier with an assumed end and a fully\n-c explicit range.  It also tests that integers and characters are successfully read back by\n-c namelist.\n+c This program repeats many of the same tests as test_nml_1 but for integer\n+c instead of real. It also tests repeat nulls, comma delimited character read,\n+c a triplet qualifier, a range with and assumed start, a quote delimited string,\n+c a qualifier with an assumed end and a fully explicit range.  It also tests\n+c that integers and characters are successfully read back by namelist.\n c Provided by Paul Thomas - pault@gcc.gnu.org\n \n       program namelist_12\n@@ -25,14 +25,14 @@ program namelist_12\n       ch =\"zzzzzzzzzz\"\n       check=\"abcdefghij\"\n \n-      open (10,status=\"scratch\")\n-      write (10, *) \"!mynml\"\n-      write (10, *) \" \"\n-      write (10, *) \"&mynml  x(7) =+99 x=1, 2 ,\"\n-      write (10, *) \" 2*3, ,, 2* !comment\"\n-      write (10, *) \" 9 ch=qqqdefghqq , x(8:7:-1) = 8 , 7\"\n-      write (10, *) \" ch(:3) =\"\"abc\"\",\"\n-      write (10, *) \" ch(9:)='ij' x(4:5)=4 ,5 xx = 42/\"\n+      open (10,status=\"scratch\", delim=\"apostrophe\")\n+      write (10, '(a)') \"!mynml\"\n+      write (10, '(a)') \" \"\n+      write (10, '(a)') \"&mynml  x(7) =+99 x=1, 2 ,\"\n+      write (10, '(a)') \" 2*3, ,, 2* !comment\"\n+      write (10, '(a)') \" 9 ch='qqqdefghqq' , x(8:7:-1) = 8 , 7\"\n+      write (10, '(a)') \" ch(:3) =\"\"abc\"\",\"\n+      write (10, '(a)') \" ch(9:)='ij' x(4:5)=4 ,5 xx = 42/\"\n       rewind (10)\n \n       read (10, nml=mynml, IOSTAT=ier)\n@@ -52,5 +52,4 @@ program namelist_12\n         if ( ch(i:i).ne.check(I:I) ) call abort\n       end do\n       if (xx.ne.42) call abort ()\n-\n       end program"}, {"sha": "185b522e7f0328b8a4f4feb824331450b6d2bfc3", "filename": "gcc/testsuite/gfortran.dg/namelist_13.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_13.f90?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -25,7 +25,7 @@ program namelist_13\n   zeros = 0\n   zeros(5) = 1\n \n-  open(10,status=\"scratch\")\n+  open(10,status=\"scratch\", delim=\"apostrophe\")\n   write (10, nml=mynml, iostat=ier)\n   if (ier.ne.0) call abort\n "}, {"sha": "d6fc9b6ca61455cacef5e4e3991f2a0ddc7c86f5", "filename": "gcc/testsuite/gfortran.dg/namelist_14.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_14.f90?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -55,7 +55,7 @@ subroutine foo (i, dt, pi, chs, cha)\n     dts = mt ((/1, 2, 3, 4/))\n     dtl = mt ((/41, 42, 43, 44/))\n \n-    open (10, status = \"scratch\")\n+    open (10, status = \"scratch\", delim='apostrophe')\n     write (10, nml = z, iostat = ier)\n     if (ier /= 0 ) call abort()\n     rewind (10)"}, {"sha": "50f02927ce5d29e11633e807b3aef8df7c3de130", "filename": "gcc/testsuite/gfortran.dg/namelist_15.f90", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_15.f90?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -25,21 +25,22 @@ program namelist_15\n   write (10, '(A)') \" x = 3, 4, 'dd', 'ee', 'ff', 'gg',\"\n   write (10, '(A)') \"     4, 5, 'hh', 'ii', 'jj', 'kk',\"\n   write (10, '(A)') \" x%i = , ,-3, -4\"\n-  write (10, '(A)') \" x(2)%m(1)%ch(2) =q,\"\n-  write (10, '(A)') \" x(2)%m(2)%ch(1)(1) =w,\"\n-  write (10, '(A)') \" x%m%ch(:)(2) =z z z z z z z z,\"\n+  write (10, '(A)') \" x(2)%m(1)%ch(2) ='q',\"\n+  write (10, '(A)') \" x(2)%m(2)%ch(1)(1) ='w',\"\n+  write (10, '(A)') \" x%m%ch(:)(2) = 'z','z','z','z','z','z','z','z',\"\n   write (10, '(A)') \"&end\"\n    \n   rewind (10)\n   read (10, nml = mynml, iostat = ier)\n-  if (ier .ne. 0) call abort () \n+  if (ier .ne. 0) print *, 'First read.' !call abort () \n   close (10)\n \n-  open (10, status = \"scratch\")\n+  open (10, status = \"scratch\", delim='apostrophe')\n   write (10, nml = mynml)\n   rewind (10)\n+\n   read (10, nml = mynml, iostat = ier)\n-  if (ier .ne. 0) call abort () \n+  if (ier .ne. 0) print *, 'Second read.' !call abort () \n   close(10)\n \n   if (.not. ((x(1)%i(1) == 3)          .and. &\n@@ -55,4 +56,4 @@ program namelist_15\n              (x(2)%m(2)%ch(1) == \"wz\") .and. &\n \t     (x(2)%m(2)%ch(2) == \"kz\"))) call abort ()\n \n-end program namelist_15 \n+end program namelist_15"}, {"sha": "463ef1b9e4f83590bc881910971ac614490277d8", "filename": "gcc/testsuite/gfortran.dg/namelist_21.f90", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_21.f90?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -0,0 +1,41 @@\n+!{ dg-do run }\n+! Tests filling arrays from a namelist read when object list is not complete.\n+! Developed from a test case provided by Christoph Jacob.\n+! Contributed by Jerry DeLisle  <jvdelisle@gcc.gnu.org>.\n+program pr24794\n+\n+   implicit none\n+   integer, parameter :: maxop=15, iunit=7\n+   character*8 namea(maxop), nameb(maxop)\n+   integer i, ier\n+\n+   namelist/ccsopr/ namea,nameb\n+   namea=\"\"\n+   nameb=\"\"\n+   open (12, status=\"scratch\", delim=\"apostrophe\")\n+   write (12, '(a)') \"&ccsopr\"\n+   write (12, '(a)') \"    namea='spi01h','spi02o','spi03h','spi04o','spi05h',\"\n+   write (12, '(a)') \"          'spi07o','spi08h','spi09h',\"\n+   write (12, '(a)') \"    nameb='spi01h','spi03h','spi05h','spi06h','spi08h',\"\n+   write (12, '(a)') \"&end\"\n+\n+   rewind (12)\n+   read (12, nml=ccsopr, iostat=ier)\n+   if (ier.ne.0) call abort()\n+   \n+   rewind (12)\n+   write(12,nml=ccsopr)\n+   \n+   rewind (12)\n+   read (12, nml=ccsopr, iostat=ier)\n+   if (ier.ne.0) call abort()\n+   \n+   if (namea(2).ne.\"spi02o  \") call abort()\n+   if (namea(9).ne.\"        \") call abort()\n+   if (namea(15).ne.\"        \") call abort()\n+   if (nameb(1).ne.\"spi01h  \") call abort()\n+   if (nameb(6).ne.\"        \") call abort()\n+   if (nameb(15).ne.\"        \") call abort()\n+   \n+   close (12)\n+end program pr24794"}, {"sha": "6face8b1f5bea2ea6da2a320adcd598f2e1a65bb", "filename": "gcc/testsuite/gfortran.dg/namelist_22.f90", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_22.f90?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -0,0 +1,41 @@\n+!{ dg-do run }\n+! Tests filling arrays from a namelist read when object list is not complete.\n+! This is the same as namelist_21.f90 except using spaces as seperators instead\n+! of commas. Developed from a test case provided by Christoph Jacob.\n+! Contributed by Jerry DeLisle  <jvdelisle@gcc.gnu.org>.\n+program pr24794\n+\n+   implicit none\n+   integer, parameter :: maxop=15, iunit=7\n+   character*8 namea(maxop), nameb(maxop)\n+   integer i, ier\n+\n+   namelist/ccsopr/ namea,nameb\n+   namea=\"\"\n+   nameb=\"\"\n+   open (12, status=\"scratch\", delim=\"apostrophe\")\n+   write (12, '(a)') \"&ccsopr\"\n+   write (12, '(a)') \"    namea='spi01h' 'spi02o' 'spi03h' 'spi04o' 'spi05h'\"\n+   write (12, '(a)') \"          'spi07o' 'spi08h' 'spi09h'\"\n+   write (12, '(a)') \"    nameb='spi01h' 'spi03h' 'spi05h' 'spi06h' 'spi08h'\"\n+   write (12, '(a)') \"&end\"\n+\n+   rewind (12)\n+   read (12, nml=ccsopr, iostat=ier)\n+   if (ier.ne.0) call abort()\n+   \n+   rewind (12)\n+   write(12,nml=ccsopr)\n+   \n+   rewind (12)\n+   read (12, nml=ccsopr, iostat=ier)\n+   if (ier.ne.0) call abort()\n+   if (namea(2).ne.\"spi02o  \") call abort()\n+   if (namea(9).ne.\"        \") call abort()\n+   if (namea(15).ne.\"        \") call abort()\n+   if (nameb(1).ne.\"spi01h  \") call abort()\n+   if (nameb(6).ne.\"        \") call abort()\n+   if (nameb(15).ne.\"        \") call abort()\n+   \n+   close (12)\n+end program pr24794"}, {"sha": "871e529a1a4db98bf1ae4ae6d31057dfe83c276e", "filename": "gcc/testsuite/gfortran.dg/namelist_use.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use.f90?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -17,8 +17,8 @@ program namelist_use\n   real    :: rrr\n   namelist /nml2/ ii, rrr    ! Concatenate use and host associated variables.\n   open (10, status=\"scratch\")\n-  write (10,*) \"&NML1 aa=lmno ii=1 rr=2.5 /\"\n-  write (10,*) \"&NML2 aa=pqrs ii=2 rrr=3.5 /\"\n+  write (10,*) \"&NML1 aa='lmno' ii=1 rr=2.5 /\"\n+  write (10,*) \"&NML2 aa='pqrs' ii=2 rrr=3.5 /\"\n   rewind (10)\n   read (10,nml=nml1,iostat=i)\n   if ((i.ne.0).or.(aa.ne.\"lmno\").or.(ii.ne.1).or.(rr.ne.2.5)) call abort ()"}, {"sha": "3f7b8e6ff4e6c1a4766873ef2e5a6d1c5ebba43f", "filename": "gcc/testsuite/gfortran.dg/namelist_use_only.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc233c4116f3fe96b04f36477578d003cbfa0f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_use_only.f90?ref=4cc233c4116f3fe96b04f36477578d003cbfa0f3", "patch": "@@ -22,8 +22,8 @@ program namelist_use_only\n   use global, only : nml1, aa, ii, rr\n   use global, only : nml2, rrrr=>rrr, foo\n   open (10, status=\"scratch\")\n-  write (10,*) \"&NML1 aa=lmno ii=1 rr=2.5 /\"\n-  write (10,*) \"&NML2 aaa=pqrs iii=2 rrr=3.5 /\"\n+  write (10,'(a)') \"&NML1 aa='lmno' ii=1 rr=2.5 /\"\n+  write (10,'(a)') \"&NML2 aaa='pqrs' iii=2 rrr=3.5 /\"\n   rewind (10)\n   read (10,nml=nml1,iostat=i)\n   if ((i.ne.0).or.(aa.ne.\"lmno\").or.(ii.ne.1).or.(rr.ne.2.5)) call abort ()"}]}