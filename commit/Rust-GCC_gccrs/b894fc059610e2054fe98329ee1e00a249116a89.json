{"sha": "b894fc059610e2054fe98329ee1e00a249116a89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5NGZjMDU5NjEwZTIwNTRmZTk4MzI5ZWUxZTAwYTI0OTExNmE4OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-26T02:07:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-26T02:07:50Z"}, "message": "cp-tree.def (TYPEOF_TYPE): New code.\n\n\t* cp-tree.def (TYPEOF_TYPE): New code.\n\t* error.c (dump_type_real): Handle it.\n\t* pt.c (tsubst): Likewise.\n\t* tree.c (search_tree): Likewise.\n\t* semantics.c (finish_typeof): New fn.\n\t* parse.y (typespec): Use it.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r23343", "tree": {"sha": "d4dc0a4806de0efac7979dd8cc215ec76794f37e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4dc0a4806de0efac7979dd8cc215ec76794f37e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b894fc059610e2054fe98329ee1e00a249116a89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b894fc059610e2054fe98329ee1e00a249116a89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b894fc059610e2054fe98329ee1e00a249116a89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b894fc059610e2054fe98329ee1e00a249116a89/comments", "author": null, "committer": null, "parents": [{"sha": "86910c53b6301f301d093a8de8e8794e90c5ee00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86910c53b6301f301d093a8de8e8794e90c5ee00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86910c53b6301f301d093a8de8e8794e90c5ee00"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "9bffbed91edae6137ad4f984466bdebef939ca5a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -1,3 +1,13 @@\n+1998-10-26  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cp-tree.def (TYPEOF_TYPE): New code.\n+\t* error.c (dump_type_real): Handle it.\n+\t* pt.c (tsubst): Likewise.\n+\t* tree.c (search_tree): Likewise.\n+\t* semantics.c (finish_typeof): New fn.\n+\t* parse.y (typespec): Use it.\n+\t* cp-tree.h: Declare it.\n+\n 1998-10-26  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* cp-tree.h (FORMAT_VBASE_NAME): Make definition unconditional."}, {"sha": "3c50e8fe2994b9ccd0d0df31ea14be9cc123b56e", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -149,6 +149,10 @@ DEFTREECODE (TEMPLATE_TEMPLATE_PARM, \"template_template_parm\", 't', 0)\n    TREE_TYPE is a _TYPE from a baseclass of `T'.  */\n DEFTREECODE (TYPENAME_TYPE, \"typename_type\", 't', 0)\n \n+/* A type designated by `__typeof (expr)'.  TYPE_FIELDS is the\n+   expression in question.  */\n+DEFTREECODE (TYPEOF_TYPE, \"typeof_type\", 't', 0)\n+\n /* A thunk is a stub function.\n \n    Thunks are used to implement multiple inheritance:"}, {"sha": "e9f7429cc76bea0a22c3c93794df7edff02b74b6", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -3033,6 +3033,7 @@ extern void enter_scope_of                      PROTO((tree));\n extern tree finish_base_specifier               PROTO((tree, tree, int));\n extern void finish_member_declaration           PROTO((tree));\n extern void check_multiple_declarators          PROTO((void));\n+extern tree finish_typeof\t\t\tPROTO((tree));\n \n /* in sig.c */\n extern tree build_signature_pointer_type\tPROTO((tree));"}, {"sha": "002473a781bfdb4c1febb871ac2e728ef4a1d155", "filename": "gcc/cp/error.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -328,6 +328,12 @@ dump_type_real (t, v, canonical_name)\n       OB_PUTID (TYPE_IDENTIFIER (t));\n       break;\n \n+    case TYPEOF_TYPE:\n+      OB_PUTS (\"__typeof (\");\n+      dump_expr (TYPE_FIELDS (t), 1);\n+      OB_PUTC (')');\n+      break;\n+\n     default:\n       sorry (\"`%s' not supported by dump_type\",\n \t     tree_code_name[(int) TREE_CODE (t)]);"}, {"sha": "44e960049834f21191ec13347010974e9e55aec8", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -5760,7 +5760,7 @@ case 399:\n     break;}\n case 400:\n #line 1792 \"parse.y\"\n-{ yyval.ftype.t = TREE_TYPE (yyvsp[-1].ttype);\n+{ yyval.ftype.t = finish_typeof (yyvsp[-1].ttype);\n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 401:"}, {"sha": "e92cd7383eb296ba11849b3cc5c6438b2e8d0deb", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -1789,7 +1789,7 @@ typespec:\n \t| complete_type_name\n \t\t{ $$.t = $1; $$.new_type_flag = 0; }\n \t| TYPEOF '(' expr ')'\n-\t\t{ $$.t = TREE_TYPE ($3);\n+\t\t{ $$.t = finish_typeof ($3);\n \t\t  $$.new_type_flag = 0; }\n \t| TYPEOF '(' type_id ')'\n \t\t{ $$.t = groktypename ($3.t);"}, {"sha": "2f57bda4eea01ddcc7f03551ddfa1e4b702f33b5", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -5841,6 +5841,9 @@ tsubst (t, args, in_decl)\n \t(TREE_CODE (t), tsubst (TREE_OPERAND (t, 0), args, in_decl),\n \t tsubst (TREE_OPERAND (t, 1), args, in_decl));\n \n+    case TYPEOF_TYPE:\n+      return TREE_TYPE (tsubst_expr (TYPE_FIELDS (t), args, in_decl));\n+\n     default:\n       sorry (\"use of `%s' in template\",\n \t     tree_code_name [(int) TREE_CODE (t)]);"}, {"sha": "e2cf813f2210d765ddda4de194bf44ec5dd6d6fe", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -1604,3 +1604,25 @@ check_multiple_declarators ()\n     cp_error (\"multiple declarators in template declaration\");\n }\n \n+tree\n+finish_typeof (expr)\n+     tree expr;\n+{\n+  if (processing_template_decl)\n+    {\n+      tree t;\n+\n+      push_obstacks_nochange ();\n+      end_temporary_allocation ();\n+\n+      t = make_lang_type (TYPEOF_TYPE);\n+      CLASSTYPE_GOT_SEMICOLON (t) = 1;\n+      TYPE_FIELDS (t) = expr;\n+\n+      pop_obstacks ();\n+\n+      return t;\n+    }\n+\n+  return TREE_TYPE (expr);\n+}"}, {"sha": "28e0d1c3e51f80d69fed664c2c3c4a320e602faf", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b894fc059610e2054fe98329ee1e00a249116a89/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=b894fc059610e2054fe98329ee1e00a249116a89", "patch": "@@ -1686,6 +1686,7 @@ search_tree (t, func)\n     case TYPENAME_TYPE:\n     case UNION_TYPE:\n     case ENUMERAL_TYPE:\n+    case TYPEOF_TYPE:\n       break;\n \n     case POINTER_TYPE:"}]}