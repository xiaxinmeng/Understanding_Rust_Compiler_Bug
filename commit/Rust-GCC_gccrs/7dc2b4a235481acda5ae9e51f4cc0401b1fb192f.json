{"sha": "7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RjMmI0YTIzNTQ4MWFjZGE1YWU5ZTUxZjRjYzA0MDFiMWZiMTkyZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-08-09T04:33:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-08-09T04:33:42Z"}, "message": "Fix empty class parameters with constexpr.\n\n\tPR c++/67131\n\t* class.c (is_really_empty_class): Call complete_type.\n\t* constexpr.c (cxx_eval_constant_expression): Check\n\tis_really_empty_class.\n\t(potential_constant_expression_1): Likewise.  Check for error type.\n\nFrom-SVN: r239267", "tree": {"sha": "af1d5b910d980f8803fa3cb95c390dfbf608337e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af1d5b910d980f8803fa3cb95c390dfbf608337e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b08e71f9e8afbdf264d159627760aa2bf8a8ca1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08e71f9e8afbdf264d159627760aa2bf8a8ca1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b08e71f9e8afbdf264d159627760aa2bf8a8ca1a"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "1ff70d4a8e748031d3a582c80321cf3771f39f3b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "patch": "@@ -1,3 +1,11 @@\n+2016-08-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/67131\n+\t* class.c (is_really_empty_class): Call complete_type.\n+\t* constexpr.c (cxx_eval_constant_expression): Check\n+\tis_really_empty_class.\n+\t(potential_constant_expression_1): Likewise.  Check for error type.\n+\n 2016-08-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/58706"}, {"sha": "d898c380057d2f64a8e8d1f47dc45c0faeb56ec0", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "patch": "@@ -8419,7 +8419,7 @@ is_really_empty_class (tree type)\n \n       /* CLASSTYPE_EMPTY_P isn't set properly until the class is actually laid\n \t out, but we'd like to be able to check this before then.  */\n-      if (COMPLETE_TYPE_P (type) && is_empty_class (type))\n+      if (COMPLETE_TYPE_P (complete_type (type)) && is_empty_class (type))\n \treturn true;\n \n       for (binfo = TYPE_BINFO (type), i = 0;"}, {"sha": "2ced9c64e44cac6e90e73efe7dfe097ae7a61d98", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "patch": "@@ -3670,7 +3670,13 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t CONST_DECL for aggregate constants.  */\n       if (lval)\n \treturn t;\n-      if (ctx->strict)\n+      if (is_really_empty_class (TREE_TYPE (t)))\n+\t{\n+\t  /* If the class is empty, we aren't actually loading anything.  */\n+\t  r = build_constructor (TREE_TYPE (t), NULL);\n+\t  TREE_CONSTANT (r) = true;\n+\t}\n+      else if (ctx->strict)\n \tr = decl_really_constant_value (t);\n       else\n \tr = decl_constant_value (t);\n@@ -3705,7 +3711,7 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t/* Defer in case this is only used for its type.  */;\n       else if (TREE_CODE (TREE_TYPE (t)) == REFERENCE_TYPE)\n \t/* Defer, there's no lvalue->rvalue conversion.  */;\n-      else if (is_empty_class (TREE_TYPE (t)))\n+      else if (is_really_empty_class (TREE_TYPE (t)))\n \t{\n \t  /* If the class is empty, we aren't actually loading anything.  */\n \t  r = build_constructor (TREE_TYPE (t), NULL);\n@@ -4736,6 +4742,9 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict,\n     }\n   if (CONSTANT_CLASS_P (t))\n     return true;\n+  if (CODE_CONTAINS_STRUCT (TREE_CODE (t), TS_TYPED)\n+      && TREE_TYPE (t) == error_mark_node)\n+    return false;\n \n   switch (TREE_CODE (t))\n     {\n@@ -4891,12 +4900,14 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict,\n \n     case VAR_DECL:\n       if (want_rval\n+\t  && !var_in_constexpr_fn (t)\n+\t  && !type_dependent_expression_p (t)\n \t  && !decl_constant_var_p (t)\n \t  && (strict\n \t      || !CP_TYPE_CONST_NON_VOLATILE_P (TREE_TYPE (t))\n \t      || !DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (t))\n-\t  && !var_in_constexpr_fn (t)\n-\t  && !type_dependent_expression_p (t))\n+\t  && COMPLETE_TYPE_P (TREE_TYPE (t))\n+\t  && !is_really_empty_class (TREE_TYPE (t)))\n         {\n           if (flags & tf_error)\n             non_const_var_error (t);"}, {"sha": "74634424f44bcb3e2eaf1fe7bdba309704d9c88a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-empty12.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty12.C?ref=7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "patch": "@@ -0,0 +1,5 @@\n+// { dg-do compile { target c++11 } }\n+\n+struct A { } a;\n+constexpr int f (A a) { return 42; }\n+constexpr int i = f(a);"}, {"sha": "1896ead6dca5d1c1580994f44dc34f692e80d4e6", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-empty13.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty13.C?ref=7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "patch": "@@ -0,0 +1,7 @@\n+// { dg-do compile { target c++11 } }\n+\n+struct A {\n+  struct B { } b;\n+} a;\n+constexpr int f (A a) { return 42; }\n+constexpr int i = f(a);"}, {"sha": "de11b26a99f44bf7f0937f976d5cee9c4c9e3fb8", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ42.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dc2b4a235481acda5ae9e51f4cc0401b1fb192f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ42.C?ref=7dc2b4a235481acda5ae9e51f4cc0401b1fb192f", "patch": "@@ -14,4 +14,4 @@ template <template <typename...> class F> struct A {\n template <typename F> auto valid_call(F f) -> decltype(f());\n constexpr auto valid_call(...) { return 0; }\n template <typename> struct no_type;\n-static_assert(!valid_call(metafunction<no_type>),\"\"); // { dg-error \"\" }\n+static_assert(!valid_call(metafunction<no_type>),\"\");"}]}