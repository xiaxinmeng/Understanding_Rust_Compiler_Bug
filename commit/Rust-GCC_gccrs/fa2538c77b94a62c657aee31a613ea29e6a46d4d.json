{"sha": "fa2538c77b94a62c657aee31a613ea29e6a46d4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEyNTM4Yzc3Yjk0YTYyYzY1N2FlZTMxYTYxM2VhMjllNmE0NmQ0ZA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-07-08T08:14:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-08T08:14:32Z"}, "message": "[Ada] Wrong evaluation of membership test\n\nThe code generated by the compiler erroneously evaluates to True\nmembership tests when their left operand is a a class-wide interface\nobject and the right operand is a tagged type that implements such\ninterface type.\n\n2019-07-08  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Tagged_Membership): Fix regression silently\n\tintroduced in r260738 that erroneouslusy causes the evaluation\n\tto True of the membership test when the left operand of the\n\tmembership test is a class-wide interface object and the right\n\toperand is a type that implements such interface type.\n\ngcc/testsuite/\n\n\t* gnat.dg/interface10.adb: New testcase.\n\nFrom-SVN: r273219", "tree": {"sha": "78e0143b58e8943d97f6c4a1f33431c0f26fad67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78e0143b58e8943d97f6c4a1f33431c0f26fad67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa2538c77b94a62c657aee31a613ea29e6a46d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa2538c77b94a62c657aee31a613ea29e6a46d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa2538c77b94a62c657aee31a613ea29e6a46d4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa2538c77b94a62c657aee31a613ea29e6a46d4d/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "570d5bbc7b7c5f7eb0eb03660a93687a6698ae7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570d5bbc7b7c5f7eb0eb03660a93687a6698ae7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570d5bbc7b7c5f7eb0eb03660a93687a6698ae7e"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "26927316f9ee6b4f865c11f365df3f5156ba4d41", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa2538c77b94a62c657aee31a613ea29e6a46d4d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa2538c77b94a62c657aee31a613ea29e6a46d4d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fa2538c77b94a62c657aee31a613ea29e6a46d4d", "patch": "@@ -1,3 +1,11 @@\n+2019-07-08  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch4.adb (Tagged_Membership): Fix regression silently\n+\tintroduced in r260738 that erroneouslusy causes the evaluation\n+\tto True of the membership test when the left operand of the\n+\tmembership test is a class-wide interface object and the right\n+\toperand is a type that implements such interface type.\n+\n 2019-07-08  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): Do not"}, {"sha": "eb35845e53d5cc7a616127c01587e7daca32609a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa2538c77b94a62c657aee31a613ea29e6a46d4d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa2538c77b94a62c657aee31a613ea29e6a46d4d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=fa2538c77b94a62c657aee31a613ea29e6a46d4d", "patch": "@@ -14156,7 +14156,8 @@ package body Exp_Ch4 is\n          --    Obj1 in DT'Class;     --  Compile time error\n          --    Obj1 in Iface'Class;  --  Compile time error\n \n-         if not Is_Class_Wide_Type (Left_Type)\n+         if not Is_Interface (Left_Type)\n+           and then not Is_Class_Wide_Type (Left_Type)\n            and then (Is_Ancestor (Etype (Right_Type), Left_Type,\n                                   Use_Full_View => True)\n                       or else (Is_Interface (Etype (Right_Type))"}, {"sha": "ca899513c0a5f58701ad1199e12f518505a48165", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa2538c77b94a62c657aee31a613ea29e6a46d4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa2538c77b94a62c657aee31a613ea29e6a46d4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa2538c77b94a62c657aee31a613ea29e6a46d4d", "patch": "@@ -1,3 +1,7 @@\n+2019-07-08  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat.dg/interface10.adb: New testcase.\n+\n 2019-07-08  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/addr13.adb, gnat.dg/addr13.ads: New testcase."}, {"sha": "7433454ca3a18529d89e1a4c01eb12f42fc6ca4f", "filename": "gcc/testsuite/gnat.dg/interface10.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa2538c77b94a62c657aee31a613ea29e6a46d4d/gcc%2Ftestsuite%2Fgnat.dg%2Finterface10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa2538c77b94a62c657aee31a613ea29e6a46d4d/gcc%2Ftestsuite%2Fgnat.dg%2Finterface10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finterface10.adb?ref=fa2538c77b94a62c657aee31a613ea29e6a46d4d", "patch": "@@ -0,0 +1,22 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnata\" }\n+\n+with Ada.Text_IO;\n+\n+procedure Interface10 is\n+\n+   type Iface is interface;\n+\n+   type My_First_Type is new Iface with null record;\n+   type My_Second_Type is new Iface with null record;\n+\n+   procedure Do_Test (Object : in Iface'Class) is\n+   begin\n+      pragma Assert\n+        ((Object in My_First_Type) = (Object in My_First_Type'Class));\n+   end;\n+\n+   V : My_Second_Type;\n+begin\n+   Do_Test (V);\n+end Interface10;"}]}