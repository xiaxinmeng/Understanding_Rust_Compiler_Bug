{"sha": "2b1fd83f6261143b75f815628aad7e69e1f4e94e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIxZmQ4M2Y2MjYxMTQzYjc1ZjgxNTYyOGFhZDdlNjllMWY0ZTk0ZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2002-02-09T03:51:25Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2002-02-09T03:51:25Z"}, "message": "sh.c (expand_prologue): Fix mis-applied 2001-11-09's patch.\n\n* config/sh/sh.c (expand_prologue): Fix mis-applied 2001-11-09's\npatch.\n\nFrom-SVN: r49631", "tree": {"sha": "0fb40742b56f82f7ec1a890ec92f7d9df6d5f30d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fb40742b56f82f7ec1a890ec92f7d9df6d5f30d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b1fd83f6261143b75f815628aad7e69e1f4e94e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1fd83f6261143b75f815628aad7e69e1f4e94e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b1fd83f6261143b75f815628aad7e69e1f4e94e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1fd83f6261143b75f815628aad7e69e1f4e94e/comments", "author": null, "committer": null, "parents": [{"sha": "fa5322fa5824e95a7aa82413782b510c8d91e7d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5322fa5824e95a7aa82413782b510c8d91e7d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5322fa5824e95a7aa82413782b510c8d91e7d8"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "5c88767aa6dad5675e90086b9e2efb006afb3bc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1fd83f6261143b75f815628aad7e69e1f4e94e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1fd83f6261143b75f815628aad7e69e1f4e94e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b1fd83f6261143b75f815628aad7e69e1f4e94e", "patch": "@@ -1,5 +1,8 @@\n 2002-02-09  Alexandre Oliva  <aoliva@redhat.com>\n \n+\t* config/sh/sh.c (expand_prologue): Fix mis-applied 2001-11-09's\n+\tpatch.\n+\t\n \tContribute sh64-elf.\n \t2002-02-09  Alexandre Oliva  <aoliva@redhat.com>\n \t* config/sh/sh.c (TARGET_CANNOT_MODIFY_JUMPS_P): Define to..."}, {"sha": "9a2885320b568759802c442d1f930a9a0b78adf9", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1fd83f6261143b75f815628aad7e69e1f4e94e/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1fd83f6261143b75f815628aad7e69e1f4e94e/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=2b1fd83f6261143b75f815628aad7e69e1f4e94e", "patch": "@@ -4453,6 +4453,13 @@ sh_expand_prologue ()\n \n   extra_push = 0;\n \n+  if (TARGET_SHCOMPACT && flag_pic && current_function_args_info.call_cookie)\n+    /* We're going to use the PIC register to load the address of the\n+       incoming-argument decoder and/or of the return trampoline from\n+       the GOT, so make sure the PIC register is preserved and\n+       initialized.  */\n+    regs_ever_live[PIC_OFFSET_TABLE_REGNUM] = 1;\n+\n   if (TARGET_SHCOMPACT\n       && (current_function_args_info.call_cookie & ~ CALL_COOKIE_RET_TRAMP(1)))\n     {\n@@ -4734,13 +4741,6 @@ sh_expand_prologue ()\n   if (frame_pointer_needed)\n     emit_insn (GEN_MOV (frame_pointer_rtx, stack_pointer_rtx));\n \n-  if (TARGET_SHCOMPACT && flag_pic && current_function_args_info.call_cookie)\n-    /* We're going to use the PIC register to load the address of the\n-       incoming-argument decoder and/or of the return trampoline from\n-       the GOT, so make sure the PIC register is preserved and\n-       initialized.  */\n-    regs_ever_live[PIC_OFFSET_TABLE_REGNUM] = 1;\n-\n   if (TARGET_SHCOMPACT\n       && (current_function_args_info.call_cookie & ~ CALL_COOKIE_RET_TRAMP(1)))\n     {"}]}