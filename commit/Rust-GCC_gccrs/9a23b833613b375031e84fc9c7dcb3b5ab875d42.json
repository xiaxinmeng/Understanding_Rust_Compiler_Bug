{"sha": "9a23b833613b375031e84fc9c7dcb3b5ab875d42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEyM2I4MzM2MTNiMzc1MDMxZTg0ZmM5YzdkY2IzYjVhYjg3NWQ0Mg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2006-08-22T19:16:03Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-08-22T19:16:03Z"}, "message": "Index: gcc/ChangeLog\n2006-08-21  Geoffrey Keating  <geoffk@apple.com>\n\n\tPR debug/28692\n\t* dwarf2out.c (rtl_for_decl_init): Don't try to create RTL for\n\tcomplex values, nor for generic vector values.\n\nIndex: gcc/testsuite/ChangeLog\n2006-08-21  Geoffrey Keating  <geoffk@apple.com>\n\n\tPR debug/28692\n\t* gcc.dg/debug/const-1.c: New.\n\t* gcc.dg/debug/const-2.c: New.\n\t* gcc.dg/debug/dwarf2/const-1.c: New.\n\t* gcc.dg/debug/dwarf2/const-2.c: New.\n\t* gcc.dg/debug/dwarf2/const-2b.c: New.\n\nFrom-SVN: r116331", "tree": {"sha": "7bd3281bf5c5f9d7fc4641e7a22befdb48fed4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bd3281bf5c5f9d7fc4641e7a22befdb48fed4a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a23b833613b375031e84fc9c7dcb3b5ab875d42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a23b833613b375031e84fc9c7dcb3b5ab875d42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a23b833613b375031e84fc9c7dcb3b5ab875d42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a23b833613b375031e84fc9c7dcb3b5ab875d42/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e8c38c2de194a8eb5733977325c982838f04390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8c38c2de194a8eb5733977325c982838f04390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e8c38c2de194a8eb5733977325c982838f04390"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "195c92b9929fb93a6d7b748be41ed0805c6251e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a23b833613b375031e84fc9c7dcb3b5ab875d42", "patch": "@@ -1,3 +1,9 @@\n+2006-08-21  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR debug/28692\n+\t* dwarf2out.c (rtl_for_decl_init): Don't try to create RTL for\n+\tcomplex values, nor for generic vector values.\n+\n 2006-08-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/28776"}, {"sha": "76fd7f07f9e82c9df97c42e077e3f947d66f74c3", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9a23b833613b375031e84fc9c7dcb3b5ab875d42", "patch": "@@ -9942,10 +9942,13 @@ rtl_for_decl_init (tree init, tree type)\n \trtl = gen_rtx_CONST_STRING (VOIDmode,\n \t\t\t\t    ggc_strdup (TREE_STRING_POINTER (init)));\n     }\n-  /* Although DWARF could easily handle other kinds of aggregates, we\n-     have no way to represent such values as RTL constants, so skip\n-     those.  */\n-  else if (AGGREGATE_TYPE_P (type))\n+  /* Other aggregates, and complex values, could be represented using\n+     CONCAT: FIXME!  */\n+  else if (AGGREGATE_TYPE_P (type) || TREE_CODE (type) == COMPLEX_TYPE)\n+    ;\n+  /* Vectors only work if their mode is supported by the target.  \n+     FIXME: generic vectors ought to work too.  */\n+  else if (TREE_CODE (type) == VECTOR_TYPE && TYPE_MODE (type) == BLKmode)\n     ;\n   /* If the initializer is something that we know will expand into an\n      immediate RTL constant, expand it now.  We must be careful not to"}, {"sha": "502921ce67946a28587aa4d3f20be10756148ba1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a23b833613b375031e84fc9c7dcb3b5ab875d42", "patch": "@@ -1,3 +1,12 @@\n+2006-08-21  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR debug/28692\n+\t* gcc.dg/debug/const-1.c: New.\n+\t* gcc.dg/debug/const-2.c: New.\n+\t* gcc.dg/debug/dwarf2/const-1.c: New.\n+\t* gcc.dg/debug/dwarf2/const-2.c: New.\n+\t* gcc.dg/debug/dwarf2/const-2b.c: New.\n+\n 2006-08-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/28776"}, {"sha": "bc526612fd406ed891589e7728939bd555bb5393", "filename": "gcc/testsuite/gcc.dg/debug/const-1.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-1.c?ref=9a23b833613b375031e84fc9c7dcb3b5ab875d42", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+typedef float FloatVect __attribute__((__vector_size__(16)));\n+static FloatVect Foo = { 250000000.0, 0.0, 0.0, 0.0 };"}, {"sha": "7b9c24403c90ba7e581123b432098b44384ab912", "filename": "gcc/testsuite/gcc.dg/debug/const-2.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fconst-2.c?ref=9a23b833613b375031e84fc9c7dcb3b5ab875d42", "patch": "@@ -0,0 +1,2 @@\n+/* { dg-do compile } */\n+static __complex__ int x = 3.0;"}, {"sha": "aa20e6d5cdca1a7dcb9dde6ae35194ca86aa17f6", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/const-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-1.c?ref=9a23b833613b375031e84fc9c7dcb3b5ab875d42", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -gdwarf-2 -dA\" } */\n+/* { dg-final { scan-assembler \"DW_AT_const_value\" } } */\n+\n+extern void x();\n+static void (*f)() = x;"}, {"sha": "d3039c61fbc493df3acea3fda047f83b61783352", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/const-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-2.c?ref=9a23b833613b375031e84fc9c7dcb3b5ab875d42", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-options \"-O -gdwarf-2 -dA -maltivec\" } */\n+/* { dg-final { scan-assembler \"DW_AT_const_value\" } } */\n+\n+typedef float FloatVect __attribute__((__vector_size__(16)));\n+static FloatVect Foo = { 250000000.0, 0.0, 0.0, 0.0 };"}, {"sha": "9d577ea77718c82c685fd70a4f758a4915599863", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/const-2b.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a23b833613b375031e84fc9c7dcb3b5ab875d42/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-2b.c?ref=9a23b833613b375031e84fc9c7dcb3b5ab875d42", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target i386*-*-* } } */\n+/* { dg-options \"-O -gdwarf-2 -dA -msse\" } */\n+/* { dg-final { scan-assembler \"DW_AT_const_value\" } } */\n+\n+typedef float FloatVect __attribute__((__vector_size__(16)));\n+static FloatVect Foo = { 250000000.0, 0.0, 0.0, 0.0 };"}]}