{"sha": "6f56d9253f78d537e2af74895512188743519ff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY1NmQ5MjUzZjc4ZDUzN2UyYWY3NDg5NTUxMjE4ODc0MzUxOWZmNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-05-24T12:00:52Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-05-24T12:00:52Z"}, "message": "re PR c++/2184 (using declarations for classes in function templates)\n\ncp:\n\tPR c++/2184\n\t* decl2.c (do_local_using_decl): Push the decls, even in a\n\ttemplate.\ntestsuite:\n\t* g++.old-deja/g++.pt/using1.C: Adjust.\n\t* g++.old-deja/g++.pt/using2.C: New test.\n\nFrom-SVN: r42526", "tree": {"sha": "42a9ab80111c2cda4ddfaf72596e9b69a1a0fedc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42a9ab80111c2cda4ddfaf72596e9b69a1a0fedc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f56d9253f78d537e2af74895512188743519ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f56d9253f78d537e2af74895512188743519ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f56d9253f78d537e2af74895512188743519ff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f56d9253f78d537e2af74895512188743519ff7/comments", "author": null, "committer": null, "parents": [{"sha": "8948cb39720f8843baf5db391eceef189ddf7ec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8948cb39720f8843baf5db391eceef189ddf7ec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8948cb39720f8843baf5db391eceef189ddf7ec3"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "577cf532fa9031b3a108d0dafd8e50572f5d643f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f56d9253f78d537e2af74895512188743519ff7", "patch": "@@ -1,3 +1,9 @@\n+2001-05-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/2184\n+\t* decl2.c (do_local_using_decl): Push the decls, even in a\n+\ttemplate.\n+\n 2001-05-22  Mark Mitchell  <mark@codesourcery.com>\n \n \t* optimize.c (initialize_inlined_parameters): Don't set"}, {"sha": "0245bc0755c97ee7c1178e88aeb86422dd241706", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=6f56d9253f78d537e2af74895512188743519ff7", "patch": "@@ -5136,8 +5136,6 @@ do_local_using_decl (decl)\n   if (building_stmt_tree ()\n       && at_function_scope_p ())\n     add_decl_stmt (decl);\n-  if (processing_template_decl)\n-    return;\n \n   oldval = lookup_name_current_level (name);\n   oldtype = lookup_type_current_level (name);"}, {"sha": "8f74ba35143ed7b0a5cd3568841f0fe261e633ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6f56d9253f78d537e2af74895512188743519ff7", "patch": "@@ -1,3 +1,8 @@\n+2001-05-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.pt/using1.C: Adjust.\n+\t* g++.old-deja/g++.pt/using2.C: New test.\n+\n 2001-05-23  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* gcc.dg/cpp/charconst.c: New tests."}, {"sha": "632fca00a45e82ce51d104f8ca869d49028af30a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/using1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing1.C?ref=6f56d9253f78d537e2af74895512188743519ff7", "patch": "@@ -15,6 +15,8 @@ template <class T> void f()\n \n template void f<float> ();\n \n+int foo (int) { return 0;}\n+\n namespace B\n {\n   int foo (int) { return 1;}\n@@ -28,8 +30,6 @@ namespace B\n   template int baz<float> ();\n };\n \n-int foo (int) { return 0;}\n-\n int main ()\n {\n   return B::baz<float> ();"}, {"sha": "5d47b7527a6bfc2f67acccbc953d265b8e8410cd", "filename": "gcc/testsuite/g++.old-deja/g++.pt/using2.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f56d9253f78d537e2af74895512188743519ff7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing2.C?ref=6f56d9253f78d537e2af74895512188743519ff7", "patch": "@@ -0,0 +1,26 @@\n+// Build don't link:\n+// \n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 22 May 2001 <nathan@codesourcery.com>\n+\n+// Bug 2184. Using decls in templates weren't doing the right thing.\n+\n+namespace N {\n+  template <class T>\n+  class vector {};\n+}\n+\n+void g(const int&) {\n+  using N::vector;\n+  typedef vector<int> V;\n+}\n+\n+template <class J>\n+void f(const J&) {\n+  using N::vector;\n+  typedef vector<int> V;\n+}\n+\n+int main() {\n+  f(0);\n+}"}]}