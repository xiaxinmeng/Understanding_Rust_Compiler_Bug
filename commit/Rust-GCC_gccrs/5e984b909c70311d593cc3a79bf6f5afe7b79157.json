{"sha": "5e984b909c70311d593cc3a79bf6f5afe7b79157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU5ODRiOTA5YzcwMzExZDU5M2NjM2E3OWJmNmY1YWZlN2I3OTE1Nw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-06-01T17:03:22Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-06-01T17:03:22Z"}, "message": "what-big.cc: New.\n\n2007-06-01  Benjamin Kosnik  <bkoz@redhat.com>\n\t\n\t* testsuite/19_diagnostics/logic_error/what-big.cc: New.\n\t* testsuite/19_diagnostics/logic_error/what-3.cc: Same.\n\t* testsuite/19_diagnostics/runtime_error/what-big.cc: Same.\n\t* testsuite/19_diagnostics/runtime_error/what-3.cc: Same.\n\n\t* testsuite/18_support/14493.cc: Break into...\n\t* testsuite/18_support/exception/what.cc: ...this.\n\t* testsuite/18_support/bad_cast/what.cc: ...this.\n\t* testsuite/18_support/bad_alloc/what.cc: ...this.\n\t* testsuite/18_support/bad_typeid/what.cc: ...this.\n\t* testsuite/18_support/bad_exception/what.cc: ...this.\n\n\t* testsuite/19_diagnostics/bad_exception/23591_thread-1.c: Move...\n\t* testsuite/18_support/bad_exception/23591_thread-1.c: ...here.\n\n\t* testsuite/18_support/14026.cc: Move...\n\t* testsuite/18_support/uncaught_exception/14026.cc: ...here.\n\nFrom-SVN: r125267", "tree": {"sha": "2e6d25df053819c91aa4d7a351c24b78ad8aea1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e6d25df053819c91aa4d7a351c24b78ad8aea1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e984b909c70311d593cc3a79bf6f5afe7b79157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e984b909c70311d593cc3a79bf6f5afe7b79157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e984b909c70311d593cc3a79bf6f5afe7b79157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e984b909c70311d593cc3a79bf6f5afe7b79157/comments", "author": null, "committer": null, "parents": [{"sha": "03743286836c9d50ae98ce033d057789cd8eb3f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03743286836c9d50ae98ce033d057789cd8eb3f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03743286836c9d50ae98ce033d057789cd8eb3f0"}], "stats": {"total": 438, "additions": 391, "deletions": 47}, "files": [{"sha": "6507c5f63aafd4bcf76f3e70947580ecc5549b75", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -1,3 +1,23 @@\n+2007-06-01  Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\t* testsuite/19_diagnostics/logic_error/what-big.cc: New.\n+\t* testsuite/19_diagnostics/logic_error/what-3.cc: Same.\n+\t* testsuite/19_diagnostics/runtime_error/what-big.cc: Same.\n+\t* testsuite/19_diagnostics/runtime_error/what-3.cc: Same.\n+\n+\t* testsuite/18_support/14493.cc: Break into...\n+\t* testsuite/18_support/exception/what.cc: ...this.\n+\t* testsuite/18_support/bad_cast/what.cc: ...this.\n+\t* testsuite/18_support/bad_alloc/what.cc: ...this.\n+\t* testsuite/18_support/bad_typeid/what.cc: ...this.\n+\t* testsuite/18_support/bad_exception/what.cc: ...this.\n+\n+\t* testsuite/19_diagnostics/bad_exception/23591_thread-1.c: Move...\n+\t* testsuite/18_support/bad_exception/23591_thread-1.c: ...here.\n+\n+\t* testsuite/18_support/14026.cc: Move...\n+\t* testsuite/18_support/uncaught_exception/14026.cc: ...here.\n+\n 2007-06-01  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/throw_allocator.h (__throw_allocator::allocate):"}, {"sha": "103ac64a9d70ace38f258b111d99a66b47f06382", "filename": "libstdc++-v3/testsuite/18_support/14026.cc", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03743286836c9d50ae98ce033d057789cd8eb3f0/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F14026.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03743286836c9d50ae98ce033d057789cd8eb3f0/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F14026.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F14026.cc?ref=03743286836c9d50ae98ce033d057789cd8eb3f0", "patch": "@@ -1,34 +0,0 @@\n-// PR 14026\n-// 18.6.4 uncaught_exception\n-\n-#include <cstdlib>\n-#include <exception>\n-#include <testsuite_hooks.h>\n-\n-static void\n-no_uncaught ()\n-{\n-  if (std::uncaught_exception ())\n-    abort ();\n-}\n-\n-int\n-main ()\n-{\n-  try\n-    {\n-      throw 1;\n-    }\n-  catch (...)\n-    {\n-      try\n-        {\n-          throw;\n-        }\n-      catch (...)\n-        {\n-          no_uncaught ();\n-        }\n-    }\n-  no_uncaught ();\n-}"}, {"sha": "3beb3bd1c420d86df43a8cc50a9be22d11de74f2", "filename": "libstdc++-v3/testsuite/18_support/bad_alloc/what.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_alloc%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_alloc%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_alloc%2Fwhat.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -0,0 +1,41 @@\n+// 2007-01-30  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <new>\n+#include <typeinfo>\n+#include <exception>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/14493\n+void test01() \n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  bad_alloc ba;\n+  VERIFY( !strcmp(ba.what(), \"std::bad_alloc\") );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "e22495f611de1fc009c8d907a26c7e088884de67", "filename": "libstdc++-v3/testsuite/18_support/bad_cast/what.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_cast%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_cast%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_cast%2Fwhat.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -0,0 +1,41 @@\n+// 2007-01-30  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <new>\n+#include <typeinfo>\n+#include <exception>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/14493\n+void test01() \n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  bad_cast bc;\n+  VERIFY( !strcmp(bc.what(), \"std::bad_cast\") );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "8c953eaed0e9f4207800234b17c7c2ff6e05238a", "filename": "libstdc++-v3/testsuite/18_support/bad_exception/23591_thread-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2F23591_thread-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2F23591_thread-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2F23591_thread-1.c?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "previous_filename": "libstdc++-v3/testsuite/19_diagnostics/bad_exception/23591_thread-1.c"}, {"sha": "a18bafe7787ba62a8dd671e5749bc685e747ca61", "filename": "libstdc++-v3/testsuite/18_support/bad_exception/what.cc", "status": "renamed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_exception%2Fwhat.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -30,18 +30,6 @@ void test01()\n   bool test __attribute__((unused)) = true;\n   using namespace std;\n \n-  bad_alloc ba;\n-  VERIFY( !strcmp(ba.what(), \"std::bad_alloc\") );\n-\n-  bad_cast bc;\n-  VERIFY( !strcmp(bc.what(), \"std::bad_cast\") );\n-\n-  bad_typeid bt;\n-  VERIFY( !strcmp(bt.what(), \"std::bad_typeid\") );\n-\n-  exception e;\n-  VERIFY( !strcmp(e.what(), \"std::exception\") );\n-\n   bad_exception be;\n   VERIFY( !strcmp(be.what(), \"std::bad_exception\") );\n }", "previous_filename": "libstdc++-v3/testsuite/18_support/14493.cc"}, {"sha": "4e8d9a86893f8579d2399ca6efdd2156c53c3edf", "filename": "libstdc++-v3/testsuite/18_support/bad_typeid/what.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_typeid%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_typeid%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fbad_typeid%2Fwhat.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -0,0 +1,41 @@\n+// 2007-01-30  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <new>\n+#include <typeinfo>\n+#include <exception>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/14493\n+void test01() \n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  bad_typeid bt;\n+  VERIFY( !strcmp(bt.what(), \"std::bad_typeid\") );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "d328bb77f1857818aec300b007e6ef1354ca9837", "filename": "libstdc++-v3/testsuite/18_support/exception/what.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2Fwhat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2Fwhat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fexception%2Fwhat.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -0,0 +1,41 @@\n+// 2007-01-30  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <new>\n+#include <typeinfo>\n+#include <exception>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/14493\n+void test01() \n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  exception e;\n+  VERIFY( !strcmp(e.what(), \"std::exception\") );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "d6948906d411e5445830b9a73930a3330b7cf9c5", "filename": "libstdc++-v3/testsuite/18_support/uncaught_exception/14026.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Funcaught_exception%2F14026.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Funcaught_exception%2F14026.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Funcaught_exception%2F14026.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -0,0 +1,54 @@\n+// Copyright (C) 2004, 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// PR 14026\n+// 18.6.4 uncaught_exception\n+\n+#include <cstdlib>\n+#include <exception>\n+#include <testsuite_hooks.h>\n+\n+static void\n+no_uncaught ()\n+{\n+  if (std::uncaught_exception())\n+    abort();\n+}\n+\n+int\n+main()\n+{\n+  try\n+    {\n+      throw 1;\n+    }\n+  catch (...)\n+    {\n+      try\n+        {\n+          throw;\n+        }\n+      catch (...)\n+        {\n+          no_uncaught ();\n+        }\n+    }\n+  no_uncaught();\n+\n+  return 0;\n+}"}, {"sha": "4dbad0d27095c8cf5ce0d7518553517a28b10ecb", "filename": "libstdc++-v3/testsuite/19_diagnostics/logic_error/what-3.cc", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-3.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -0,0 +1,69 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2007\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <string>\n+#include <stdexcept>\n+#include <cstring>\n+#include <testsuite_hooks.h>\n+\n+// test copy ctors, assignment operators, and persistence of member string data\n+// libstdc++/1972\n+// via Greg Bumgardner <bumgard@roguewave.com>\n+void allocate_on_stack(void) \n+{\n+  const size_t num = 512;\n+  __extension__ char array[num];\n+  for (size_t i = 0; i < num; i++) \n+    array[i]=0;\n+}\n+\n+void test04()\n+{\n+  bool test __attribute__((unused)) = true;\n+  const std::string s(\"CA ISO emergency once again:immediate power down\");\n+  const char* strlit1 = \"wish I lived in Palo Alto\";\n+  const char* strlit2 = \"...or Santa Barbara\";\n+  std::logic_error obj1(s);\n+  \n+  // block 01\n+  {\n+    const std::string s2(strlit1);\n+    std::logic_error obj2(s2);\n+    obj1 = obj2;\n+  }\n+  allocate_on_stack();\n+  VERIFY( std::strcmp(strlit1, obj1.what()) == 0 ); \n+\n+  // block 02\n+  {\n+    const std::string s3(strlit2);\n+    std::logic_error obj3 = std::logic_error(s3);\n+    obj1 = obj3;\n+  }\n+  allocate_on_stack();     \n+  VERIFY( std::strcmp(strlit2, obj1.what()) == 0 ); \n+}\n+\n+int main(void)\n+{\n+  test04();\n+  return 0;\n+}"}, {"sha": "681e2a364b18631c021693fd00347a45396daef2", "filename": "libstdc++-v3/testsuite/19_diagnostics/logic_error/what-big.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-big.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-big.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Flogic_error%2Fwhat-big.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -0,0 +1,41 @@\n+// 2007-05-29 Benjamin Kosnik  <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <cstring>\n+#include <string>\n+#include <stdexcept>\n+#include <testsuite_hooks.h>\n+\n+// Can construct and return 10k character error string.\n+void test01()\n+{\n+  typedef std::logic_error test_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  const std::string xxx(10000, 'x');\n+  test_type t(xxx);\n+  VERIFY( std::strcmp(t.what(), xxx.c_str()) == 0 );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "63cb48163228c10c4618aa3f1ceba39fb22d56f2", "filename": "libstdc++-v3/testsuite/19_diagnostics/runtime_error/what-3.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-3.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -26,7 +26,7 @@\n #include <cstring>\n #include <testsuite_hooks.h>\n \n-// test copy ctors and assignment operators\n+// test copy ctors, assignment operators, and persistence of member string data\n // libstdc++/1972\n // via Greg Bumgardner <bumgard@roguewave.com>\n void allocate_on_stack(void) \n@@ -36,6 +36,7 @@ void allocate_on_stack(void)\n   for (size_t i = 0; i < num; i++) \n     array[i]=0;\n }\n+\n void test04()\n {\n   bool test __attribute__((unused)) = true;"}, {"sha": "c0ce964f6f87f2d27c45931908da40285f1e974d", "filename": "libstdc++-v3/testsuite/19_diagnostics/runtime_error/what-big.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-big.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e984b909c70311d593cc3a79bf6f5afe7b79157/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-big.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fruntime_error%2Fwhat-big.cc?ref=5e984b909c70311d593cc3a79bf6f5afe7b79157", "patch": "@@ -0,0 +1,41 @@\n+// 2007-05-29 Benjamin Kosnik  <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <cstring>\n+#include <string>\n+#include <stdexcept>\n+#include <testsuite_hooks.h>\n+\n+// Can construct and return 10k character error string.\n+void test01()\n+{\n+  typedef std::runtime_error test_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  const std::string xxx(10000, 'x');\n+  test_type t(xxx);\n+  VERIFY( std::strcmp(t.what(), xxx.c_str()) == 0 );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}]}