{"sha": "f532ae5aa37c8555dd6a99d8502436509db7930f", "node_id": "C_kwDOANBUbNoAKGY1MzJhZTVhYTM3Yzg1NTVkZDZhOTlkODUwMjQzNjUwOWRiNzkzMGY", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-26T13:44:18Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-27T20:24:49Z"}, "message": "unsafe: Add checks for union field accesses\n\nCo-authored-by: philberty <philip.herron@embecosm.com>", "tree": {"sha": "98895c16750e4816f6420658fcc4758767783607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98895c16750e4816f6420658fcc4758767783607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f532ae5aa37c8555dd6a99d8502436509db7930f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f532ae5aa37c8555dd6a99d8502436509db7930f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f532ae5aa37c8555dd6a99d8502436509db7930f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f532ae5aa37c8555dd6a99d8502436509db7930f/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50ca4b2ba0028945fd1a0aefec739ea99f77e908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ca4b2ba0028945fd1a0aefec739ea99f77e908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ca4b2ba0028945fd1a0aefec739ea99f77e908"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "99f59ac1aafb51b963b24b25df27bd2d7a1b79ef", "filename": "gcc/rust/checks/errors/rust-unsafe-checker.cc", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f532ae5aa37c8555dd6a99d8502436509db7930f/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f532ae5aa37c8555dd6a99d8502436509db7930f/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc?ref=f532ae5aa37c8555dd6a99d8502436509db7930f", "patch": "@@ -262,10 +262,24 @@ UnsafeChecker::visit (MethodCallExpr &expr)\n void\n UnsafeChecker::visit (FieldAccessExpr &expr)\n {\n-  // FIXME: If the receiver is an union, we need to be in an unsafe context to\n-  // access it. Make sure to check.\n-\n   expr.get_receiver_expr ()->accept_vis (*this);\n+\n+  if (is_unsafe_context ())\n+    return;\n+\n+  TyTy::BaseType *receiver_ty;\n+  auto ok = context.lookup_type (\n+    expr.get_receiver_expr ()->get_mappings ().get_hirid (), &receiver_ty);\n+  rust_assert (ok);\n+\n+  if (receiver_ty->get_kind () == TyTy::TypeKind::ADT)\n+    {\n+      auto maybe_union = static_cast<TyTy::ADTType *> (receiver_ty);\n+      if (maybe_union->is_union ())\n+\trust_error_at (\n+\t  expr.get_locus (),\n+\t  \"access to union field requires unsafe function or block\");\n+    }\n }\n \n void"}, {"sha": "fb46c8ffde377d8a076bb16cce5ca5caaf4d421d", "filename": "gcc/testsuite/rust/compile/unsafe9.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f532ae5aa37c8555dd6a99d8502436509db7930f/gcc%2Ftestsuite%2Frust%2Fcompile%2Funsafe9.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f532ae5aa37c8555dd6a99d8502436509db7930f/gcc%2Ftestsuite%2Frust%2Fcompile%2Funsafe9.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Funsafe9.rs?ref=f532ae5aa37c8555dd6a99d8502436509db7930f", "patch": "@@ -0,0 +1,10 @@\n+union U {\n+    a: i32,\n+    b: f32,\n+    c: u8,\n+}\n+\n+fn main() {\n+    let u = U { a: 14 };\n+    let _ = u.a; // { dg-error \"access to union\" }\n+}"}]}