{"sha": "ce63a97b518915b3b6c1221da60af719c7eccd5a", "node_id": "C_kwDOANBUbNoAKGNlNjNhOTdiNTE4OTE1YjNiNmMxMjIxZGE2MGFmNzE5YzdlY2NkNWE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-01-22T18:39:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-10T08:19:28Z"}, "message": "[Ada] Fix style in resolution of expression with actions\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Expression_With_Actions): Fix style in\n\tnested routines.", "tree": {"sha": "4fe54aa19ce4fb3d5a4608ab5e3a68d85ba41807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fe54aa19ce4fb3d5a4608ab5e3a68d85ba41807"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce63a97b518915b3b6c1221da60af719c7eccd5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce63a97b518915b3b6c1221da60af719c7eccd5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce63a97b518915b3b6c1221da60af719c7eccd5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce63a97b518915b3b6c1221da60af719c7eccd5a/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d118bc58f56a7aa0bcd4e0371782e59ffb8cde73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d118bc58f56a7aa0bcd4e0371782e59ffb8cde73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d118bc58f56a7aa0bcd4e0371782e59ffb8cde73"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "a59ffe70be051f29caad882cbec18c533d2dbd27", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce63a97b518915b3b6c1221da60af719c7eccd5a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce63a97b518915b3b6c1221da60af719c7eccd5a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ce63a97b518915b3b6c1221da60af719c7eccd5a", "patch": "@@ -9136,6 +9136,10 @@ package body Sem_Res is\n       --  Expr is an expression with compile-time-known value. This returns the\n       --  literal node that reprsents that value.\n \n+      -------------------\n+      -- OK_For_Static --\n+      -------------------\n+\n       function OK_For_Static (Act : Node_Id) return Boolean is\n       begin\n          case Nkind (Act) is\n@@ -9161,6 +9165,10 @@ package body Sem_Res is\n          return False;\n       end OK_For_Static;\n \n+      -----------------------\n+      -- All_OK_For_Static --\n+      -----------------------\n+\n       function All_OK_For_Static return Boolean is\n          Act : Node_Id := First (Actions (N));\n       begin\n@@ -9175,6 +9183,10 @@ package body Sem_Res is\n          return True;\n       end All_OK_For_Static;\n \n+      -----------------\n+      -- Get_Literal --\n+      -----------------\n+\n       function Get_Literal (Expr : Node_Id) return Node_Id is\n          pragma Assert (Compile_Time_Known_Value (Expr));\n          Result : Node_Id;\n@@ -9198,8 +9210,12 @@ package body Sem_Res is\n          return Result;\n       end Get_Literal;\n \n+      --  Local variables\n+\n       Loc : constant Source_Ptr := Sloc (N);\n \n+   --  Start of processing for Resolve_Expression_With_Actions\n+\n    begin\n       Set_Etype (N, Typ);\n "}]}