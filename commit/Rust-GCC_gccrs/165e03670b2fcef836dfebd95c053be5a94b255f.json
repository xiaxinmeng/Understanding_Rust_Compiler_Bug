{"sha": "165e03670b2fcef836dfebd95c053be5a94b255f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1ZTAzNjcwYjJmY2VmODM2ZGZlYmQ5NWMwNTNiZTVhOTRiMjU1Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-05-13T12:31:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-05-13T12:31:50Z"}, "message": "2002-05-13  Paolo Carlini  <pcarlini@unitus.it>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\n\t* testsuite/22_locale/money_get_members_char.cc\n\t(test01, test02, test04): Use the de_DE@euro named locale\n\tinstead of de_DE to allow for an uniform behaviour with\n\tboth old and Euro-era localedata; tweak some tests.\n\t* testsuite/22_locale/money_get_members_wchar_t.cc\n\t(test01, test02, test04): Likewise.\n\t* testsuite/22_locale/money_put_members_char.cc\n\t(test01, test02, test04): Likewise.\n\t* testsuite/22_locale/money_put_members_wchar_t.cc\n\t(test01, test02, test04): Likewise.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r53420", "tree": {"sha": "c9ae7e00cff75d12017047ea00f63aab5deba333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9ae7e00cff75d12017047ea00f63aab5deba333"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/165e03670b2fcef836dfebd95c053be5a94b255f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165e03670b2fcef836dfebd95c053be5a94b255f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165e03670b2fcef836dfebd95c053be5a94b255f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165e03670b2fcef836dfebd95c053be5a94b255f/comments", "author": null, "committer": null, "parents": [{"sha": "27b4d95a00d074a93da695dccc2e9d0cc6181f72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27b4d95a00d074a93da695dccc2e9d0cc6181f72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27b4d95a00d074a93da695dccc2e9d0cc6181f72"}], "stats": {"total": 82, "additions": 48, "deletions": 34}, "files": [{"sha": "23308e36f012bb3afa9d602cb2574b5769723610", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=165e03670b2fcef836dfebd95c053be5a94b255f", "patch": "@@ -1,3 +1,17 @@\n+2002-05-13  Paolo Carlini  <pcarlini@unitus.it>\n+            Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/22_locale/money_get_members_char.cc\n+\t(test01, test02, test04): Use the de_DE@euro named locale\n+\tinstead of de_DE to allow for an uniform behaviour with\n+\tboth old and Euro-era localedata; tweak some tests.\n+\t* testsuite/22_locale/money_get_members_wchar_t.cc\n+\t(test01, test02, test04): Likewise.\n+\t* testsuite/22_locale/money_put_members_char.cc\n+\t(test01, test02, test04): Likewise.\n+\t* testsuite/22_locale/money_put_members_wchar_t.cc\n+\t(test01, test02, test04): Likewise.\n+\n 2002-05-13  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/22_locale/codecvt_members_char_char.cc"}, {"sha": "1d80e7539f799da2dc1a1ae1cafce6de61607c8f", "filename": "libstdc++-v3/testsuite/22_locale/money_get_members_char.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc?ref=165e03670b2fcef836dfebd95c053be5a94b255f", "patch": "@@ -41,7 +41,7 @@ void test01()\n   locale loc_c = locale::classic();\n   locale loc_hk(\"en_HK\");\n   locale loc_fr(\"fr_FR@euro\");\n-  locale loc_de(\"de_DE\");\n+  locale loc_de(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n   VERIFY( loc_hk != loc_fr );\n   VERIFY( loc_hk != loc_de );\n@@ -122,23 +122,23 @@ void test01()\n   // now try with showbase, to get currency symbol in format\n   iss.setf(ios_base::showbase);\n \n-  iss.str(\"7.200.000.000,00 DEM \");\n+  iss.str(\"7.200.000.000,00 EUR \");\n   iterator_type is_it06(iss);\n   string result6;\n   ios_base::iostate err06 = ios_base::goodbit;\n   mon_get.get(is_it06, end, true, iss, err06, result6);\n   VERIFY( result6 == digits1 );\n   VERIFY( err06 == ios_base::eofbit );\n \n-  iss.str(\"7.200.000.000,00 DEM  \"); // Extra space.\n+  iss.str(\"7.200.000.000,00 EUR  \"); // Extra space.\n   iterator_type is_it07(iss);\n   string result7;\n   ios_base::iostate err07 = ios_base::goodbit;\n   mon_get.get(is_it07, end, true, iss, err07, result7);\n   VERIFY( result7 == digits1 );\n   VERIFY( err07 == ios_base::goodbit );\n \n-  iss.str(\"7.200.000.000,00 DM\"); \n+  iss.str(\"7.200.000.000,00 \\244\"); \n   iterator_type is_it08(iss);\n   string result8;\n   ios_base::iostate err08 = ios_base::goodbit;\n@@ -216,7 +216,7 @@ void test02()\n   locale loc_c = locale::classic();\n   locale loc_hk(\"en_HK\");\n   locale loc_fr(\"fr_FR@euro\");\n-  locale loc_de(\"de_DE\");\n+  locale loc_de(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n   VERIFY( loc_hk != loc_fr );\n   VERIFY( loc_hk != loc_de );\n@@ -324,12 +324,12 @@ void test04()\n {\n #ifdef _GLIBCPP_HAVE_SETENV \n   // Set the global locale to non-\"C\".\n-  std::locale loc_de(\"de_DE\");\n+  std::locale loc_de(\"de_DE@euro\");\n   std::locale::global(loc_de);\n \n-  // Set LANG environment variable to de_DE.\n+  // Set LANG environment variable to de_DE@euro.\n   const char* oldLANG = getenv(\"LANG\");\n-  if (!setenv(\"LANG\", \"de_DE\", 1))\n+  if (!setenv(\"LANG\", \"de_DE@euro\", 1))\n     {\n       test01();\n       test02();"}, {"sha": "3d95d262c70cdbef965cad0a63bcad64dc8e6c35", "filename": "libstdc++-v3/testsuite/22_locale/money_get_members_wchar_t.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc?ref=165e03670b2fcef836dfebd95c053be5a94b255f", "patch": "@@ -42,7 +42,7 @@ void test01()\n   locale loc_c = locale::classic();\n   locale loc_hk(\"en_HK\");\n   locale loc_fr(\"fr_FR@euro\");\n-  locale loc_de(\"de_DE\");\n+  locale loc_de(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n   VERIFY( loc_hk != loc_fr );\n   VERIFY( loc_hk != loc_de );\n@@ -123,23 +123,23 @@ void test01()\n   // now try with showbase, to get currency symbol in format\n   iss.setf(ios_base::showbase);\n \n-  iss.str(L\"7.200.000.000,00 DEM \");\n+  iss.str(L\"7.200.000.000,00 EUR \");\n   iterator_type is_it06(iss);\n   wstring result6;\n   ios_base::iostate err06 = ios_base::goodbit;\n   mon_get.get(is_it06, end, true, iss, err06, result6);\n   VERIFY( result6 == digits1 );\n   VERIFY( err06 == ios_base::eofbit );\n \n-  iss.str(L\"7.200.000.000,00 DEM  \"); // Extra space.\n+  iss.str(L\"7.200.000.000,00 EUR  \"); // Extra space.\n   iterator_type is_it07(iss);\n   wstring result7;\n   ios_base::iostate err07 = ios_base::goodbit;\n   mon_get.get(is_it07, end, true, iss, err07, result7);\n   VERIFY( result7 == digits1 );\n   VERIFY( err07 == ios_base::goodbit );\n \n-  iss.str(L\"7.200.000.000,00 DM\"); \n+  iss.str(L\"7.200.000.000,00 \\x20ac\"); \n   iterator_type is_it08(iss);\n   wstring result8;\n   ios_base::iostate err08 = ios_base::goodbit;\n@@ -218,7 +218,7 @@ void test02()\n   locale loc_c = locale::classic();\n   locale loc_hk(\"en_HK\");\n   locale loc_fr(\"fr_FR@euro\");\n-  locale loc_de(\"de_DE\");\n+  locale loc_de(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n   VERIFY( loc_hk != loc_fr );\n   VERIFY( loc_hk != loc_de );\n@@ -326,12 +326,12 @@ void test04()\n {\n #ifdef _GLIBCPP_HAVE_SETENV \n   // Set the global locale to non-\"C\".\n-  std::locale loc_de(\"de_DE\");\n+  std::locale loc_de(\"de_DE@euro\");\n   std::locale::global(loc_de);\n \n-  // Set LANG environment variable to de_DE.\n+  // Set LANG environment variable to de_DE@euro.\n   const char* oldLANG = getenv(\"LANG\");\n-  if (!setenv(\"LANG\", \"de_DE\", 1))\n+  if (!setenv(\"LANG\", \"de_DE@euro\", 1))\n     {\n       test01();\n       test02();"}, {"sha": "6cae3d79351421ed2b872497ac7d3047baa13046", "filename": "libstdc++-v3/testsuite/22_locale/money_put_members_char.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_char.cc?ref=165e03670b2fcef836dfebd95c053be5a94b255f", "patch": "@@ -41,7 +41,7 @@ void test01()\n   locale loc_c = locale::classic();\n   locale loc_hk(\"en_HK\");\n   locale loc_fr(\"fr_FR@euro\");\n-  locale loc_de(\"de_DE\");\n+  locale loc_de(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n   VERIFY( loc_hk != loc_fr );\n   VERIFY( loc_hk != loc_de );\n@@ -97,12 +97,12 @@ void test01()\n   oss.str(empty);\n   iterator_type os_it03 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n   string result3 = oss.str();\n-  VERIFY( result3 == \"7.200.000.000,00 DEM \");\n+  VERIFY( result3 == \"7.200.000.000,00 EUR \");\n \n   oss.str(empty);\n   iterator_type os_it04 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   string result4 = oss.str();\n-  VERIFY( result4 == \"7.200.000.000,00 DM\");\n+  VERIFY( result4 == \"7.200.000.000,00 \\244\");\n \n   // intl and non-intl versions should be different.\n   VERIFY( result3 != result4 );\n@@ -175,7 +175,7 @@ void test02()\n   locale loc_c = locale::classic();\n   locale loc_hk(\"en_HK\");\n   locale loc_fr(\"fr_FR@euro\");\n-  locale loc_de(\"de_DE\");\n+  locale loc_de(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n   VERIFY( loc_hk != loc_fr );\n   VERIFY( loc_hk != loc_de );\n@@ -228,12 +228,12 @@ void test02()\n   oss.str(empty);\n   iterator_type os_it03 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n   string result3 = oss.str();\n-  VERIFY( result3 == \"7.200.000.000,00 DEM \");\n+  VERIFY( result3 == \"7.200.000.000,00 EUR \");\n \n   oss.str(empty);\n   iterator_type os_it04 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   string result4 = oss.str();\n-  VERIFY( result4 == \"7.200.000.000,00 DM\");\n+  VERIFY( result4 == \"7.200.000.000,00 \\244\");\n \n   // intl and non-intl versions should be different.\n   VERIFY( result3 != result4 );\n@@ -288,12 +288,12 @@ void test04()\n {\n #ifdef _GLIBCPP_HAVE_SETENV \n   // Set the global locale to non-\"C\".\n-  std::locale loc_de(\"de_DE\");\n+  std::locale loc_de(\"de_DE@euro\");\n   std::locale::global(loc_de);\n \n-  // Set LANG environment variable to de_DE.\n+  // Set LANG environment variable to de_DE@euro.\n   const char* oldLANG = getenv(\"LANG\");\n-  if (!setenv(\"LANG\", \"de_DE\", 1))\n+  if (!setenv(\"LANG\", \"de_DE@euro\", 1))\n     {\n       test01();\n       test02();"}, {"sha": "c9132516b022fd47c206086782e71d0a3e9712d9", "filename": "libstdc++-v3/testsuite/22_locale/money_put_members_wchar_t.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/165e03670b2fcef836dfebd95c053be5a94b255f/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put_members_wchar_t.cc?ref=165e03670b2fcef836dfebd95c053be5a94b255f", "patch": "@@ -42,7 +42,7 @@ void test01()\n   locale loc_c = locale::classic();\n   locale loc_hk(\"en_HK\");\n   locale loc_fr(\"fr_FR@euro\");\n-  locale loc_de(\"de_DE\");\n+  locale loc_de(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n   VERIFY( loc_hk != loc_fr );\n   VERIFY( loc_hk != loc_de );\n@@ -97,12 +97,12 @@ void test01()\n   oss.str(empty);\n   iterator_type os_it03 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n   wstring result3 = oss.str();\n-  VERIFY( result3 == L\"7.200.000.000,00 DEM \");\n+  VERIFY( result3 == L\"7.200.000.000,00 EUR \");\n \n   oss.str(empty);\n   iterator_type os_it04 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   wstring result4 = oss.str();\n-  VERIFY( result4 == L\"7.200.000.000,00 DM\");\n+  VERIFY( result4 == L\"7.200.000.000,00 \\x20ac\");\n \n   // intl and non-intl versions should be different.\n   VERIFY( result3 != result4 );\n@@ -175,7 +175,7 @@ void test02()\n   locale loc_c = locale::classic();\n   locale loc_hk(\"en_HK\");\n   locale loc_fr(\"fr_FR@euro\");\n-  locale loc_de(\"de_DE\");\n+  locale loc_de(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n   VERIFY( loc_hk != loc_fr );\n   VERIFY( loc_hk != loc_de );\n@@ -228,12 +228,12 @@ void test02()\n   oss.str(empty);\n   iterator_type os_it03 = mon_put.put(oss.rdbuf(), true, oss, ' ', digits1);\n   wstring result3 = oss.str();\n-  VERIFY( result3 == L\"7.200.000.000,00 DEM \");\n+  VERIFY( result3 == L\"7.200.000.000,00 EUR \");\n \n   oss.str(empty);\n   iterator_type os_it04 = mon_put.put(oss.rdbuf(), false, oss, ' ', digits1);\n   wstring result4 = oss.str();\n-  VERIFY( result4 == L\"7.200.000.000,00 DM\");\n+  VERIFY( result4 == L\"7.200.000.000,00 \\x20ac\");\n \n   // intl and non-intl versions should be different.\n   VERIFY( result3 != result4 );\n@@ -288,12 +288,12 @@ void test04()\n {\n #ifdef _GLIBCPP_HAVE_SETENV \n   // Set the global locale to non-\"C\".\n-  std::locale loc_de(\"de_DE\");\n+  std::locale loc_de(\"de_DE@euro\");\n   std::locale::global(loc_de);\n \n-  // Set LANG environment variable to de_DE.\n+  // Set LANG environment variable to de_DE@euro.\n   const char* oldLANG = getenv(\"LANG\");\n-  if (!setenv(\"LANG\", \"de_DE\", 1))\n+  if (!setenv(\"LANG\", \"de_DE@euro\", 1))\n     {\n       test01();\n       test02();"}]}