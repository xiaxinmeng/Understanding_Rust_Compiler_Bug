{"sha": "2cccceff8b3727cb210faed5d654d861564b1c92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNjY2NlZmY4YjM3MjdjYjIxMGZhZWQ1ZDY1NGQ4NjE1NjRiMWM5Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-12T19:39:00Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-12T19:39:00Z"}, "message": "(process_aux_info_file): Set must_create before jumping to start_over.\n\n(process_aux_info_file): Set must_create before jumping to\nstart_over.  Don't clear must_create at start_over.  Don't test\nsource file mod time for SYSCALLS.\n\nFrom-SVN: r1573", "tree": {"sha": "0d21811345229d1c017205f85a34cce2bcec4532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d21811345229d1c017205f85a34cce2bcec4532"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cccceff8b3727cb210faed5d654d861564b1c92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cccceff8b3727cb210faed5d654d861564b1c92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cccceff8b3727cb210faed5d654d861564b1c92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cccceff8b3727cb210faed5d654d861564b1c92/comments", "author": null, "committer": null, "parents": [{"sha": "467456d0548913eacaa4f0bcca37b34b6c90a657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467456d0548913eacaa4f0bcca37b34b6c90a657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/467456d0548913eacaa4f0bcca37b34b6c90a657"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "eca7413026bfb8ec91cc935711d1d4e21848bd39", "filename": "gcc/protoize.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cccceff8b3727cb210faed5d654d861564b1c92/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cccceff8b3727cb210faed5d654d861564b1c92/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=2cccceff8b3727cb210faed5d654d861564b1c92", "patch": "@@ -2090,12 +2090,14 @@ process_aux_info_file (base_source_filename, keep_it, is_syscalls)\n   /* Check that the aux_info file exists and is readable.  If it does not\n      exist, try to create it (once only).  */\n \n-start_over: ;\n-\n   /* If file doesn't exist, set must_create.\n      Likewise if it exists and we can read it but it is obsolete.\n      Otherwise, report an error.  */\n   must_create = 0;\n+\n+  /* Come here with must_create set to 1 if file is out of date.  */\n+start_over: ;\n+\n   if (my_access (aux_info_filename, R_OK) == -1)\n     {\n       if (errno == ENOENT)\n@@ -2172,20 +2174,26 @@ start_over: ;\n   \n     aux_info_mtime = stat_buf.st_mtime;\n \n-    /* Compare mod time with the .c file; update .X file if obsolete.\n-       The code later on can fail to check the .c file\n-       if it did not directly define any functions.  */\n-  \n-    if (my_stat (base_source_filename, &stat_buf) == -1)\n+    if (!is_syscalls)\n       {\n-        fprintf (stderr, \"%s: can't get status of aux info file `%s': %s\\n\",\n-\t\t pname, shortpath (NULL, base_source_filename),\n-\t\t sys_errlist[errno]);\n-        errors++;\n-        return;\n+\t/* Compare mod time with the .c file; update .X file if obsolete.\n+\t   The code later on can fail to check the .c file\n+\t   if it did not directly define any functions.  */\n+\n+\tif (my_stat (base_source_filename, &stat_buf) == -1)\n+\t  {\n+\t    fprintf (stderr, \"%s: can't get status of aux info file `%s': %s\\n\",\n+\t\t     pname, shortpath (NULL, base_source_filename),\n+\t\t     sys_errlist[errno]);\n+\t    errors++;\n+\t    return;\n+\t  }\n+\tif (stat_buf.st_mtime > aux_info_mtime)\n+\t  {\n+\t    must_create = 1;\n+\t    goto start_over;\n+\t  }\n       }\n-    if (stat_buf.st_mtime > aux_info_mtime)\n-      goto start_over;\n   }\n \n   {"}]}