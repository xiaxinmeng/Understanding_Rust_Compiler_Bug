{"sha": "7a900ebc50d0b561682cdb63fd94a674392d05ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5MDBlYmM1MGQwYjU2MTY4MmNkYjYzZmQ5NGE2NzQzOTJkMDVmZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-01T22:47:09Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-01T22:47:09Z"}, "message": "except.c (output_function_exception_table): Use assemble_align.\n\n        * except.c (output_function_exception_table): Use assemble_align.\n        * varasm.c (assemble_eh_label): Remove.\n        (assemble_eh_align, assemble_eh_integer): Remove.\n\nFrom-SVN: r44561", "tree": {"sha": "e7dcf7ca57c25d98e9dbecc49bb47eb7bf8bdf08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7dcf7ca57c25d98e9dbecc49bb47eb7bf8bdf08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a900ebc50d0b561682cdb63fd94a674392d05ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a900ebc50d0b561682cdb63fd94a674392d05ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a900ebc50d0b561682cdb63fd94a674392d05ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a900ebc50d0b561682cdb63fd94a674392d05ff/comments", "author": null, "committer": null, "parents": [{"sha": "551e8a74ea0b70f44b64d0b3d5702d952a188bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/551e8a74ea0b70f44b64d0b3d5702d952a188bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/551e8a74ea0b70f44b64d0b3d5702d952a188bed"}], "stats": {"total": 81, "additions": 8, "deletions": 73}, "files": [{"sha": "af480ef5e46ca754eedd5a29bede857580702325", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a900ebc50d0b561682cdb63fd94a674392d05ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a900ebc50d0b561682cdb63fd94a674392d05ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a900ebc50d0b561682cdb63fd94a674392d05ff", "patch": "@@ -1,3 +1,9 @@\n+2001-08-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* except.c (output_function_exception_table): Use assemble_align.\n+\t* varasm.c (assemble_eh_label): Remove.\n+\t(assemble_eh_align, assemble_eh_integer): Remove.\n+\n 2001-08-01  Robert Lipe  <robertl@caldera.com>\n \n         * dwarfout.c: Remove reference to README.DWARF."}, {"sha": "e24a901c3c4c0e2ff1e051fd487870ee53463ae3", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a900ebc50d0b561682cdb63fd94a674392d05ff/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a900ebc50d0b561682cdb63fd94a674392d05ff/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=7a900ebc50d0b561682cdb63fd94a674392d05ff", "patch": "@@ -3500,7 +3500,7 @@ output_function_exception_table ()\n #endif\n       tt_format_size = size_of_encoded_value (tt_format);\n \n-      assemble_eh_align (tt_format_size * BITS_PER_UNIT);\n+      assemble_align (tt_format_size * BITS_PER_UNIT);\n     }\n \n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"LLSDA\", funcdef_number);\n@@ -3607,7 +3607,7 @@ output_function_exception_table ()\n \t\t\t (i ? NULL : \"Action record table\"));\n \n   if (have_tt_data)\n-    assemble_eh_align (tt_format_size * BITS_PER_UNIT);\n+    assemble_align (tt_format_size * BITS_PER_UNIT);\n \n   i = VARRAY_ACTIVE_SIZE (cfun->eh->ttype_data);\n   while (i-- > 0)"}, {"sha": "82ad792025058b38a72a3f39ef71a1eff04391fd", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a900ebc50d0b561682cdb63fd94a674392d05ff/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a900ebc50d0b561682cdb63fd94a674392d05ff/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=7a900ebc50d0b561682cdb63fd94a674392d05ff", "patch": "@@ -4764,74 +4764,3 @@ init_varasm_once ()\n   ggc_add_root (&const_str_htab, 1, sizeof const_str_htab,\n \t\tmark_const_str_htab);\n }\n-\n-/* Extra support for EH values.  */\n-void\n-assemble_eh_label (name)\n-     const char *name;\n-{\n-#ifdef ASM_OUTPUT_EH_LABEL\n-  ASM_OUTPUT_EH_LABEL (asm_out_file, name);\n-#else\n-  assemble_label (name);\n-#endif\n-}\n-\n-/* Assemble an alignment pseudo op for an ALIGN-bit boundary.  */\n-\n-void\n-assemble_eh_align (align)\n-     int align;\n-{\n-#ifdef ASM_OUTPUT_EH_ALIGN\n-  if (align > BITS_PER_UNIT)\n-    ASM_OUTPUT_EH_ALIGN (asm_out_file, floor_log2 (align / BITS_PER_UNIT));\n-#else\n-  assemble_align (align);\n-#endif\n-}\n-\n-\n-/* On some platforms, we may want to specify a special mechansim to\n-   output EH data when generating with a function..  */\n-int\n-assemble_eh_integer (x, size, force)\n-     rtx x;\n-     int size;\n-     int force;\n-{\n-\n-  switch (size)\n-    {\n-#ifdef ASM_OUTPUT_EH_CHAR\n-    case 1:\n-      ASM_OUTPUT_EH_CHAR (asm_out_file, x);\n-      return 1;\n-#endif\n-\n-#ifdef ASM_OUTPUT_EH_SHORT\n-    case 2:\n-      ASM_OUTPUT_EH_SHORT (asm_out_file, x);\n-      return 1;\n-#endif\n-\n-#ifdef ASM_OUTPUT_EH_INT\n-    case 4:\n-      ASM_OUTPUT_EH_INT (asm_out_file, x);\n-      return 1;\n-#endif\n-\n-#ifdef ASM_OUTPUT_EH_DOUBLE_INT\n-    case 8:\n-      ASM_OUTPUT_EH_DOUBLE_INT (asm_out_file, x);\n-      return 1;\n-#endif\n-\n-    default:\n-      break;\n-    }\n-  return (assemble_integer (x, size, force));\n-}\n-\n-\n-"}]}