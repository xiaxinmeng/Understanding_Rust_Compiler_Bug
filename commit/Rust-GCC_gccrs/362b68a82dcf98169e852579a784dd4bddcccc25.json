{"sha": "362b68a82dcf98169e852579a784dd4bddcccc25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYyYjY4YTgyZGNmOTgxNjllODUyNTc5YTc4NGRkNGJkZGNjY2MyNQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2001-08-06T22:17:09Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-08-06T22:17:09Z"}, "message": "darwin.h (DOUBLE_INT_ASM_OP): Add whitespace.\n\n\t* config/rs6000/darwin.h (DOUBLE_INT_ASM_OP): Add whitespace.\n\t* config/rs6000/linux64.h (RS6000_MCOUNT): Define.\n\t({SAVE,RESTORE}_FP_{PREFFIX,SUFFIX}): Define.\n\t* config/rs6000/rs6000.h (ASM_OUTPUT_DOUBLE_INT): Remove whitespace.\n\t* config/rs6000/sysv4.h (DOUBLE_INT_ASM_OP): Add whitespace.\n\t* config/rs6000/xcoff.h (DOUBLE_INT_ASM_OP): Add whitespace.\n\nFrom-SVN: r44677", "tree": {"sha": "f941a3402a185f7653d42bca1bd5ae042a845441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f941a3402a185f7653d42bca1bd5ae042a845441"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/362b68a82dcf98169e852579a784dd4bddcccc25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362b68a82dcf98169e852579a784dd4bddcccc25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362b68a82dcf98169e852579a784dd4bddcccc25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362b68a82dcf98169e852579a784dd4bddcccc25/comments", "author": null, "committer": null, "parents": [{"sha": "5edf284040a034015d9ae7ae78c3cfd8939725a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5edf284040a034015d9ae7ae78c3cfd8939725a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5edf284040a034015d9ae7ae78c3cfd8939725a8"}], "stats": {"total": 82, "additions": 44, "deletions": 38}, "files": [{"sha": "2573197914203704f5b7c335b283ddd64caf1b29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=362b68a82dcf98169e852579a784dd4bddcccc25", "patch": "@@ -1,3 +1,12 @@\n+2001-08-06  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/darwin.h (DOUBLE_INT_ASM_OP): Add whitespace.\n+\t* config/rs6000/linux64.h (RS6000_MCOUNT): Define.\n+\t({SAVE,RESTORE}_FP_{PREFFIX,SUFFIX}): Define.\n+\t* config/rs6000/rs6000.h (ASM_OUTPUT_DOUBLE_INT): Remove whitespace.\n+\t* config/rs6000/sysv4.h (DOUBLE_INT_ASM_OP): Add whitespace.\n+\t* config/rs6000/xcoff.h (DOUBLE_INT_ASM_OP): Add whitespace.\n+\n 2001-08-06  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpperror.c (print_containing_files): Moved to line-map.c.\n@@ -848,8 +857,6 @@ Wed Aug  1 20:02:12 CEST 2001 Graham Stott  <grahams@redhat.com>\n \t(SET_ASM_OP): Remove, now defined where needed.\n \t(FUNCTION_PROLOGUE): New macro definition.\n \t(FUNCTION_EPILOGUE): New macro definition.\n-\t(CONST_OK_FOR_LETTER_P): Change N to require that value is\n-\tpositive, too.\n \t(ASM_OPEN_PAREN, ASM_CLOSE_PAREN): New macro definition.\n \n \t* config/rs6000/xcoff.h: New file."}, {"sha": "f7941131575caaaccc55907299e023ee96dc4a34", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=362b68a82dcf98169e852579a784dd4bddcccc25", "patch": "@@ -193,4 +193,4 @@ Boston, MA 02111-1307, USA.  */\n    : MAX ((COMPUTED), (SPECIFIED)))\n /* XXX: Darwin supports neither .quad, or .llong, but it also doesn't\n    support 64 bit powerpc either, so this just keeps things happy. */\n-#define DOUBLE_INT_ASM_OP \".quad\"\n+#define DOUBLE_INT_ASM_OP \"\\t.quad\\t\""}, {"sha": "8808554983a919604c7d853df35c71b4ea7f0d19", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 31, "deletions": 32, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=362b68a82dcf98169e852579a784dd4bddcccc25", "patch": "@@ -21,31 +21,17 @@ Boston, MA 02111-1307, USA.  */\n \n /* Yes!  We are AIX! Err. Wait. We're Linux!. No, wait, we're a\n   combo of both!*/\n-#undef DEFAULT_ABI\n+#undef  DEFAULT_ABI\n #define DEFAULT_ABI ABI_AIX\n \n-#undef TARGET_AIX\n+#undef  TARGET_AIX\n #define TARGET_AIX 1\n \n-#undef TARGET_DEFAULT\n+#undef  TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_POWERPC64 | MASK_64BIT | MASK_NEW_MNEMONICS)\n \n-/* AIX does not have any init/fini or ctor/dtor sections, so create\n-    static constructors and destructors as normal functions.  */\n-/* #define ASM_OUTPUT_CONSTRUCTOR(file, name) */\n-/* #define ASM_OUTPUT_DESTRUCTOR(file, name) */\n #define USER_LABEL_PREFIX  \"\"\n \n-/* Tell the assembler to assume that all undefined names are external.\n-\n-   Don't do this until the fixed IBM assembler is more generally available.\n-   When this becomes permanently defined, the ASM_OUTPUT_EXTERNAL,\n-   ASM_OUTPUT_EXTERNAL_LIBCALL, and RS6000_OUTPUT_BASENAME macros will no\n-   longer be needed.  Also, the extern declaration of mcount in ASM_FILE_START\n-   will no longer be needed.  */\n-\n-/* #define ASM_SPEC \"-u %(asm_cpu)\" */\n-\n /* AIX word-aligns FP doubles but doubleword-aligns 64-bit ints.  */\n #define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n   (TYPE_MODE (TREE_CODE (TREE_TYPE (FIELD)) == ARRAY_TYPE \\\n@@ -65,18 +51,17 @@ Boston, MA 02111-1307, USA.  */\n    : MAX ((COMPUTED), (SPECIFIED)))\n \n /* Indicate that jump tables go in the text section.  */\n-#undef JUMP_TABLES_IN_TEXT_SECTION\n+#undef  JUMP_TABLES_IN_TEXT_SECTION\n #define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* Define cutoff for using external functions to save floating point.  */\n-#undef FP_SAVE_INLINE\n+#undef  FP_SAVE_INLINE\n #define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) == 62 || (FIRST_REG) == 63)\n \n-#undef TARGET_NO_TOC\n-#undef TARGET_TOC\n-\n /* 64-bit PowerPC Linux always has a TOC.  */\n+#undef  TARGET_NO_TOC\n #define TARGET_NO_TOC\t\t0\n+#undef  TARGET_TOC\n #define\tTARGET_TOC\t\t1\n \n /* 64-bit PowerPC Linux always has GPR13 fixed.  */\n@@ -90,6 +75,7 @@ Boston, MA 02111-1307, USA.  */\n #define SETUP_FRAME_ADDRESSES() rs6000_aix_emit_builtin_unwind_init ()\n \n #define PROFILE_HOOK(LABEL)   output_profile_hook (LABEL)\n+\n /* Don't assume anything about the header files. */\n #define NO_IMPLICIT_EXTERN_C\n \n@@ -109,10 +95,10 @@ Boston, MA 02111-1307, USA.  */\n /* The GNU C++ standard library currently requires _GNU_SOURCE being\n    defined on glibc-based systems. This temporary hack accomplishes this,\n    it should go away as soon as libstdc++-v3 has a real fix.  */\n-#undef CPLUSPLUS_CPP_SPEC\n+#undef  CPLUSPLUS_CPP_SPEC\n #define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n \n-#undef LINK_SHLIB_SPEC\n+#undef  LINK_SHLIB_SPEC\n #define LINK_SHLIB_SPEC \"%{shared:-shared} %{!shared: %{static:-static}}\"\n \n #undef\tLIB_DEFAULT_SPEC\n@@ -135,13 +121,13 @@ Boston, MA 02111-1307, USA.  */\n   %{rdynamic:-export-dynamic} \\\n   %{!dynamic-linker:-dynamic-linker /lib/ld.so.1}}}\"\n \n-#undef TOC_SECTION_ASM_OP\n+#undef  TOC_SECTION_ASM_OP\n #define TOC_SECTION_ASM_OP \"\\t.section\\t\\\".toc\\\",\\\"aw\\\"\"\n \n-#undef MINIMAL_TOC_SECTION_ASM_OP\n-#define\tMINIMAL_TOC_SECTION_ASM_OP \"\\t.section\\t\\\".toc1\\\",\\\"aw\\\"\\n\\t.align 3\"\n+#undef  MINIMAL_TOC_SECTION_ASM_OP\n+#define MINIMAL_TOC_SECTION_ASM_OP \"\\t.section\\t\\\".toc1\\\",\\\"aw\\\"\\n\\t.align 3\"\n \n-#undef TARGET_VERSION\n+#undef  TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (PowerPC64 GNU/Linux)\");\n \n /* Must be at least as big as our pointer type.  */\n@@ -157,19 +143,32 @@ Boston, MA 02111-1307, USA.  */\n #define WCHAR_TYPE_SIZE 32\n \n /* Override rs6000.h definition.  */\n-#undef ASM_APP_ON\n+#undef  ASM_APP_ON\n #define ASM_APP_ON \"#APP\\n\"\n \n /* Override rs6000.h definition.  */\n-#undef ASM_APP_OFF\n+#undef  ASM_APP_OFF\n #define ASM_APP_OFF \"#NO_APP\\n\"\n \n /* PowerPC no-op instruction.  */\n-#undef RS6000_CALL_GLUE\n+#undef  RS6000_CALL_GLUE\n #define RS6000_CALL_GLUE \"nop\"\n \n+#undef  RS6000_MCOUNT\n+#define RS6000_MCOUNT \".__mcount\"\n+\n+/* FP save and restore routines.  */\n+#undef  SAVE_FP_PREFIX\n+#define SAVE_FP_PREFIX \"._savef\"\n+#undef  SAVE_FP_SUFFIX\n+#define SAVE_FP_SUFFIX \"\"\n+#undef  RESTORE_FP_PREFIX\n+#define RESTORE_FP_PREFIX \"._restf\"\n+#undef  RESTORE_FP_SUFFIX\n+#define RESTORE_FP_SUFFIX \"\"\n+\n /* Dwarf2 debugging.  */\n-#undef PREFERRED_DEBUGGING_TYPE\n+#undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE  DWARF2_DEBUG\n \n /* This macro gets just the user-specified name"}, {"sha": "8c7ba3369ec8021157f6f0f9f0fe4a6e8a730c9f", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=362b68a82dcf98169e852579a784dd4bddcccc25", "patch": "@@ -2481,7 +2481,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t%s \", DOUBLE_INT_ASM_OP);\t\t\t\\\n+      fprintf (FILE, \"%s\", DOUBLE_INT_ASM_OP);\t\t\t\t\\\n       output_addr_const (FILE, (VALUE));\t\t\t\t\\\n       putc ('\\n', FILE);\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\"}, {"sha": "2851d700f87750b1171027e666177d206157b731", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=362b68a82dcf98169e852579a784dd4bddcccc25", "patch": "@@ -1589,4 +1589,4 @@ ncrtn.o%s\"\n    : DW_EH_PE_absptr)\n \n #define EXCEPTION_SECTION readonly_data_section\n-#define DOUBLE_INT_ASM_OP \".quad\"\n+#define DOUBLE_INT_ASM_OP \"\\t.quad\\t\""}, {"sha": "f7d6c5f39adf5a90801cb6a4ef46f8881ca495ed", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362b68a82dcf98169e852579a784dd4bddcccc25/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=362b68a82dcf98169e852579a784dd4bddcccc25", "patch": "@@ -439,7 +439,7 @@ toc_section ()\t\t\t\t\t\t\\\n   } while (0)\n \n /* Used by definition of ASM_OUTPUT_DOUBLE_INT */\n-#define DOUBLE_INT_ASM_OP \".llong\"\n+#define DOUBLE_INT_ASM_OP \"\\t.llong \"\n \n /* This says how to output an assembler line\n    to define a local common symbol."}]}