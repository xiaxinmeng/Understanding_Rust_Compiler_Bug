{"sha": "6e2a48434dfa017154e1f47cce91aeaacf2dd839", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyYTQ4NDM0ZGZhMDE3MTU0ZTFmNDdjY2U5MWFlYWFjZjJkZDgzOQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-11-18T21:57:54Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-11-18T21:57:54Z"}, "message": "Makefile.in: Merge with src and libgcj.\n\n* Makefile.in: Merge with src and libgcj.\n(ALL_GCC_C, ALL_GCC_CXX): New macros.  Use them as dependencies of\nconfigure-target-<library> when their configure scripts need the C\nor C++ library to have already been built to work properly.\n(do_proto_toplev): Set them to an empty string.\n\nFrom-SVN: r37546", "tree": {"sha": "176f627fb1e3e2c7aee4b77d9b7eb0fab21eac18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/176f627fb1e3e2c7aee4b77d9b7eb0fab21eac18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e2a48434dfa017154e1f47cce91aeaacf2dd839", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2a48434dfa017154e1f47cce91aeaacf2dd839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e2a48434dfa017154e1f47cce91aeaacf2dd839", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2a48434dfa017154e1f47cce91aeaacf2dd839/comments", "author": null, "committer": null, "parents": [{"sha": "ce8e06b1dcfc70f88dc07062c65b0bd968b53394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce8e06b1dcfc70f88dc07062c65b0bd968b53394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce8e06b1dcfc70f88dc07062c65b0bd968b53394"}], "stats": {"total": 94, "additions": 54, "deletions": 40}, "files": [{"sha": "5293c1294a20f7c8454c32f938d725a4eb33770a", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2a48434dfa017154e1f47cce91aeaacf2dd839/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2a48434dfa017154e1f47cce91aeaacf2dd839/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=6e2a48434dfa017154e1f47cce91aeaacf2dd839", "patch": "@@ -1,5 +1,11 @@\n 2000-11-18  Alexandre Oliva  <aoliva@redhat.com>\n \n+\t* Makefile.in: Merge with src and libgcj.\n+\t(ALL_GCC_C, ALL_GCC_CXX): New macros.  Use them as dependencies of\n+\tconfigure-target-<library> when their configure scripts need the C\n+\tor C++ library to have already been built to work properly.\n+\t(do_proto_toplev): Set them to an empty string.\n+\n \t* Makefile.in (HOST_LIB_PATH, TARGET_LIB_PATH): New macros.\n \t(REALLY_SET_LIB_PATH): Use them.\n "}, {"sha": "76cf5825cbd627c469d662e41129eda810610885", "filename": "Makefile.in", "status": "modified", "additions": 48, "deletions": 40, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2a48434dfa017154e1f47cce91aeaacf2dd839/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2a48434dfa017154e1f47cce91aeaacf2dd839/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=6e2a48434dfa017154e1f47cce91aeaacf2dd839", "patch": "@@ -1,7 +1,7 @@\n #\n # Makefile for directory with subdirs to build.\n-#   Copyright (C) 1990, 91, 92, 93, 94, 95, 96, 97, 1998\n-#   Free Software Foundation\n+#   Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n+#   1999, 2000 Free Software Foundation\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -478,6 +478,7 @@ ALL_MODULES = \\\n \tall-bison \\\n \tall-byacc \\\n \tall-bzip2 \\\n+\tall-cgen \\\n \tall-cvssrc \\\n \tall-db \\\n \tall-dejagnu \\\n@@ -556,6 +557,7 @@ CROSS_CHECK_MODULES = \\\n \tcheck-bfd \\\n \tcheck-binutils \\\n \tcheck-bzip2 \\\n+\tcheck-cgen \\\n \tcheck-cvssrc \\\n \tcheck-db \\\n \tcheck-dejagnu \\\n@@ -627,6 +629,7 @@ INSTALL_MODULES = \\\n \tinstall-binutils \\\n \tinstall-bison \\\n \tinstall-byacc \\\n+\tinstall-cgen \\\n \tinstall-cvssrc \\\n \tinstall-db \\\n \tinstall-dejagnu \\\n@@ -828,6 +831,7 @@ CLEAN_MODULES = \\\n \tclean-bison \\\n \tclean-byacc \\\n \tclean-bzip2 \\\n+\tclean-cgen \\\n \tclean-cvssrc \\\n \tclean-db \\\n \tclean-dejagnu \\\n@@ -1544,22 +1548,23 @@ all-bash:\n all-bfd: all-libiberty all-intl\n all-binutils: all-libiberty all-opcodes all-bfd all-flex all-bison all-byacc all-intl\n all-bison: all-texinfo\n-configure-target-boehm-gc: configure-target-newlib configure-target-qthreads\n+configure-target-boehm-gc: $(ALL_GCC_CXX) configure-target-qthreads\n all-target-boehm-gc: configure-target-boehm-gc\n-configure-target-bsp: $(ALL_GCC)\n-all-target-bsp: configure-target-bsp all-gcc all-binutils all-target-newlib\n+configure-target-bsp: $(ALL_GCC_C)\n+all-target-bsp: configure-target-bsp\n all-byacc:\n all-bzip2:\n+all-cgen: all-libiberty\n all-cvssrc:\n-configure-target-cygmon: $(ALL_GCC)\n-all-target-cygmon: configure-target-cygmon all-gas all-ld all-gcc all-target-libiberty all-target-newlib all-target-libio all-target-libstub all-target-bsp\n+configure-target-cygmon: $(ALL_GCC_C)\n+all-target-cygmon: configure-target-cygmon all-target-libiberty all-target-libio all-target-libstub all-target-bsp\n all-db:\n all-dejagnu: all-tcl all-expect all-tk\n all-diff: all-libiberty\n all-emacs:\n all-emacs19: all-bison all-byacc\n all-etc:\n-configure-target-examples: $(ALL_GCC)\n+configure-target-examples: $(ALL_GCC_C)\n all-target-examples: configure-target-examples\n all-expect: all-tcl all-tk\n all-fileutils: all-libiberty\n@@ -1570,13 +1575,15 @@ all-gas: all-libiberty all-opcodes all-bfd all-intl\n all-gash: all-tcl\n all-gawk:\n ALL_GCC = all-gcc\n+ALL_GCC_C = $(ALL_GCC) all-target-newlib all-target-libgloss\n+ALL_GCC_CXX = $(ALL_GCC_C) all-target-libstdc++ all-target-libstdc++-v3\n all-gcc: all-bison all-byacc all-binutils all-gas all-ld all-zlib\n all-bootstrap: all-libiberty all-texinfo all-bison all-byacc all-binutils all-gas all-ld all-zlib\n GDB_TK = all-tk all-tcl all-itcl all-tix all-libgui\n all-gdb: all-libiberty all-opcodes all-bfd all-mmalloc all-readline all-bison all-byacc all-sim $(gdbnlmrequirements) $(GDB_TK)\n all-gettext:\n all-gnuserv:\n-configure-target-gperf: $(ALL_GCC)\n+configure-target-gperf: $(ALL_GCC_C)\n all-target-gperf: configure-target-gperf all-target-libiberty all-target-libstdc++\n all-gprof: all-libiberty all-bfd all-opcodes all-intl\n all-grep: all-libiberty\n@@ -1591,54 +1598,54 @@ all-intl:\n all-ispell: all-emacs19\n all-itcl: all-tcl all-tk all-tcl8.1 all-tk8.1\n all-ld: all-libiberty all-bfd all-opcodes all-bison all-byacc all-flex all-intl\n-configure-target-libg++: $(ALL_GCC) configure-target-librx\n-all-target-libg++: configure-target-libg++ all-gas all-ld all-gcc all-target-libiberty all-target-newlib all-target-libio all-target-librx all-target-libstdc++\n+configure-target-libg++: $(ALL_GCC_CXX) configure-target-librx\n+all-target-libg++: configure-target-libg++ all-target-libiberty all-target-librx\n configure-target-libgloss: $(ALL_GCC)\n all-target-libgloss: configure-target-libgloss configure-target-newlib\n-configure-target-libio: $(ALL_GCC)\n+configure-target-libio: $(ALL_GCC_C)\n all-target-libio: configure-target-libio all-gas all-ld all-gcc all-target-libiberty all-target-newlib\n-check-target-libio:\n+check-target-libio: all-target-libstdc++\n all-libgui: all-tcl all-tk all-tcl8.1 all-tk8.1 all-itcl\n all-libiberty:\n-configure-target-libffi: $(ALL_GCC) \n-configure-target-libjava: $(ALL_GCC) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-newlib configure-target-libffi\n+configure-target-libffi: $(ALL_GCC_C) \n all-target-libffi: configure-target-libffi\n-all-target-libjava: configure-target-libjava all-gcc all-zip all-target-newlib all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n-configure-target-librx: $(ALL_GCC) configure-target-newlib\n+configure-target-libjava: $(ALL_GCC_CXX) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-libffi\n+all-target-libjava: configure-target-libjava all-zip all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n+configure-target-librx: $(ALL_GCC_C)\n all-target-librx: configure-target-librx\n-configure-target-libstdc++: $(ALL_GCC)\n-configure-target-libstdc++-v3: $(ALL_GCC)\n-all-target-libstdc++: configure-target-libstdc++ all-gas all-ld all-gcc all-target-libiberty all-target-newlib all-target-libio\n-all-target-libstdc++-v3: configure-target-libstdc++-v3 all-gas all-ld all-gcc all-target-libiberty all-target-newlib \n-configure-target-libstub: $(ALL_GCC)\n+configure-target-libstdc++: $(ALL_GCC_C)\n+all-target-libstdc++: configure-target-libstdc++ all-target-libiberty all-target-libio\n+configure-target-libstdc++-v3: $(ALL_GCC_C)\n+all-target-libstdc++-v3: configure-target-libstdc++-v3 all-target-libiberty\n+configure-target-libstub: $(ALL_GCC_C)\n all-target-libstub: configure-target-libstub\n all-libtool:\n-configure-target-libf2c: $(ALL_GCC)\n-all-target-libf2c: configure-target-libf2c all-gas all-ld all-gcc all-target-libiberty all-target-newlib\n-configure-target-libchill: $(ALL_GCC)\n-all-target-libchill: configure-target-libchill all-gas all-ld all-gcc all-target-libiberty all-target-newlib\n-configure-target-libobjc: $(ALL_GCC)\n-all-target-libobjc: configure-target-libobjc all-gas all-ld all-gcc all-target-libiberty all-target-newlib\n+configure-target-libf2c: $(ALL_GCC_C)\n+all-target-libf2c: configure-target-libf2c all-target-libiberty\n+configure-target-libchill: $(ALL_GCC_C)\n+all-target-libchill: configure-target-libchill all-target-libiberty\n+configure-target-libobjc: $(ALL_GCC_C)\n+all-target-libobjc: configure-target-libobjc all-target-libiberty\n all-m4: all-libiberty\n all-make: all-libiberty\n all-mmalloc:\n configure-target-newlib: $(ALL_GCC)\n-configure-target-libtermcap: $(ALL_GCC)\n-all-target-newlib: configure-target-newlib all-binutils all-gas all-gcc\n-all-target-libtermcap: configure-target-libtermcap all-binutils all-gas all-gcc\n-all-opcodes: all-bfd all-libiberty\n+all-target-newlib: configure-target-newlib\n+configure-target-libtermcap: $(ALL_GCC_C)\n+all-target-libtermcap: configure-target-libtermcap\n+all-opcodes: all-bfd all-libiberty all-cgen\n all-patch: all-libiberty\n all-perl:\n all-prms: all-libiberty\n-configure-target-qthreads: configure-target-newlib\n+configure-target-qthreads: $(ALL_GCC_C)\n all-target-qthreads: configure-target-qthreads\n all-rcs:\n all-readline:\n all-recode: all-libiberty\n all-sed: all-libiberty\n all-send-pr: all-prms\n all-shellutils:\n-all-sim: all-libiberty all-bfd all-opcodes all-readline\n+all-sim: all-libiberty all-bfd all-opcodes all-readline all-cgen\n all-snavigator: all-tcl all-tk all-itcl all-db all-grep all-libgui\n all-tar: all-libiberty\n all-tcl:\n@@ -1652,15 +1659,15 @@ all-tgas: all-libiberty all-bfd all-opcodes\n all-time:\n all-tix: all-tcl all-tk all-tcl8.1 all-tk8.1\n all-wdiff:\n-all-target-winsup: all-target-newlib all-target-libiberty all-target-libtermcap configure-target-winsup\n-configure-target-winsup: configure-target-newlib\n+configure-target-winsup: $(ALL_GCC_C)\n+all-target-winsup: all-target-libiberty all-target-libtermcap configure-target-winsup\n all-uudecode: all-libiberty\n all-zip:\n all-zlib:\n-configure-target-zlib: $(ALL_GCC)\n+configure-target-zlib: $(ALL_GCC_C)\n all-target-zlib: configure-target-zlib\n-configure-target-libiberty: $(ALL_GCC) configure-target-newlib\n-all-target-libiberty: configure-target-libiberty all-gcc all-ld all-target-newlib\n+configure-target-libiberty: $(ALL_GCC_C)\n+all-target-libiberty: configure-target-libiberty\n all-target: $(ALL_TARGET_MODULES)\n install-target: $(INSTALL_TARGET_MODULES)\n install-gdb: install-tcl install-tk install-itcl install-tix install-libgui\n@@ -1776,7 +1783,8 @@ do-proto-toplev: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n \t#\n \t./configure sun4\n \t[ -z \"$(CONFIGURE_TARGET_MODULES)\" ] \\\n-\t  || $(MAKE) $(CONFIGURE_TARGET_MODULES) ALL_GCC=\"\" \\\n+\t  || $(MAKE) $(CONFIGURE_TARGET_MODULES) \\\n+\t    ALL_GCC=\"\" ALL_GCC_C=\"\" ALL_GCC_CXX=\"\" \\\n \t    CC_FOR_TARGET=\"$(CC)\" CXX_FOR_TARGET=\"$(CXX)\"\n \t# Make links, and run \"make diststuff\" or \"make info\" when needed.\n \trm -rf proto-toplev ; mkdir proto-toplev"}]}