{"sha": "ea8262b0a5b761d391a8866fd1837067f3e0a8ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4MjYyYjBhNWI3NjFkMzkxYTg4NjZmZDE4MzcwNjdmM2UwYThlZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-14T20:20:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-14T20:20:28Z"}, "message": "(gen_lowpart): If gen_lowpart_common fails for a REG, load it into a\npseudo and try again.\n\nFrom-SVN: r10349", "tree": {"sha": "03c55f9b8adead292f668b709145ccc617282630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c55f9b8adead292f668b709145ccc617282630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea8262b0a5b761d391a8866fd1837067f3e0a8ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8262b0a5b761d391a8866fd1837067f3e0a8ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8262b0a5b761d391a8866fd1837067f3e0a8ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8262b0a5b761d391a8866fd1837067f3e0a8ef/comments", "author": null, "committer": null, "parents": [{"sha": "4a368461a5ad25568743718bd8c3b8355bd278de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a368461a5ad25568743718bd8c3b8355bd278de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a368461a5ad25568743718bd8c3b8355bd278de"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "9600f2f63aad1f2fef1b2442d4a1d9644cfbdb39", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8262b0a5b761d391a8866fd1837067f3e0a8ef/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8262b0a5b761d391a8866fd1837067f3e0a8ef/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=ea8262b0a5b761d391a8866fd1837067f3e0a8ef", "patch": "@@ -857,6 +857,13 @@ gen_lowpart (mode, x)\n \n   if (result)\n     return result;\n+  else if (GET_CODE (x) == REG)\n+    {\n+      /* Must be a hard reg that's not valid in MODE.  */\n+      result = gen_lowpart_common (mode, copy_to_reg (x));\n+      if (result == 0)\n+\tabort ();\n+    }\n   else if (GET_CODE (x) == MEM)\n     {\n       /* The only additional case we can do is MEM.  */"}]}