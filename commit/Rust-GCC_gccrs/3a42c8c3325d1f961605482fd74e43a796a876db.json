{"sha": "3a42c8c3325d1f961605482fd74e43a796a876db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E0MmM4YzMzMjVkMWY5NjE2MDU0ODJmZDc0ZTQzYTc5NmE4NzZkYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-13T13:17:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-13T13:17:02Z"}, "message": "(emit_reload_insns): Fix precedence errors.\n\nFrom-SVN: r11255", "tree": {"sha": "9b6ada5b935866d3aecb7a93b43edaf32b435391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b6ada5b935866d3aecb7a93b43edaf32b435391"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a42c8c3325d1f961605482fd74e43a796a876db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a42c8c3325d1f961605482fd74e43a796a876db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a42c8c3325d1f961605482fd74e43a796a876db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a42c8c3325d1f961605482fd74e43a796a876db/comments", "author": null, "committer": null, "parents": [{"sha": "2e53329bbc61314b33495397c4b0f318e6e0d6bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e53329bbc61314b33495397c4b0f318e6e0d6bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e53329bbc61314b33495397c4b0f318e6e0d6bb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "dd4518c8790d81f6f60d4da8b5b91fe676286665", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a42c8c3325d1f961605482fd74e43a796a876db/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a42c8c3325d1f961605482fd74e43a796a876db/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=3a42c8c3325d1f961605482fd74e43a796a876db", "patch": "@@ -6635,9 +6635,9 @@ emit_reload_insns (insn)\n \t  else if (reload_out[r] == 0\n \t\t   && reload_in[r] != 0\n \t\t   && ((GET_CODE (reload_in[r]) == REG\n-\t\t\t&& ! reg_has_output_reload[REGNO (reload_in[r])]\n+\t\t\t&& ! reg_has_output_reload[REGNO (reload_in[r])])\n \t\t       || (GET_CODE (reload_in_reg[r]) == REG\n-\t\t\t   && ! reg_has_output_reload[REGNO (reload_in_reg[r])]))))\n+\t\t\t   && ! reg_has_output_reload[REGNO (reload_in_reg[r])])))\n \t    {\n \t      register int nregno;\n \t      int nnr;"}]}