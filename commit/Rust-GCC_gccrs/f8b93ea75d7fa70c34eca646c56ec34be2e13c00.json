{"sha": "f8b93ea75d7fa70c34eca646c56ec34be2e13c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhiOTNlYTc1ZDdmYTcwYzM0ZWNhNjQ2YzU2ZWMzNGJlMmUxM2MwMA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-12-05T07:08:56Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-12-05T07:08:56Z"}, "message": "parse.y (patch_method_invocation): Pick the correct enclosing context when creating inner class instances.\n\n2000-12-04  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* parse.y (patch_method_invocation): Pick the correct enclosing\n\tcontext when creating inner class instances.\n\tFixes gcj/332.\n\n(http://gcc.gnu.org/ml/gcc-patches/2000-12/msg00217.html)\n\nFrom-SVN: r38026", "tree": {"sha": "c02efcee3b9c0b87bf2c35fd36bd0e799a0bf834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c02efcee3b9c0b87bf2c35fd36bd0e799a0bf834"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8b93ea75d7fa70c34eca646c56ec34be2e13c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8b93ea75d7fa70c34eca646c56ec34be2e13c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8b93ea75d7fa70c34eca646c56ec34be2e13c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8b93ea75d7fa70c34eca646c56ec34be2e13c00/comments", "author": null, "committer": null, "parents": [{"sha": "fad3e66e8e783dfb8a1985ab150e24996b0f8bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fad3e66e8e783dfb8a1985ab150e24996b0f8bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fad3e66e8e783dfb8a1985ab150e24996b0f8bf7"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "69044f8506a0694aefbb97d6d25ae02f512d91da", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b93ea75d7fa70c34eca646c56ec34be2e13c00/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b93ea75d7fa70c34eca646c56ec34be2e13c00/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f8b93ea75d7fa70c34eca646c56ec34be2e13c00", "patch": "@@ -1,3 +1,9 @@\n+2000-12-04  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (patch_method_invocation): Pick the correct enclosing\n+\tcontext when creating inner class instances.\n+\tFixes gcj/332.\n+\n 2000-11-26  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gjavah.c (version), jcf-dump.c (version), jv-scan.c (version):"}, {"sha": "d89ace421cc9e475f8315b924c6b2f4434b5a8db", "filename": "gcc/java/parse.y", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8b93ea75d7fa70c34eca646c56ec34be2e13c00/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8b93ea75d7fa70c34eca646c56ec34be2e13c00/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=f8b93ea75d7fa70c34eca646c56ec34be2e13c00", "patch": "@@ -9997,7 +9997,33 @@ patch_method_invocation (patch, primary, where, is_static, ret_decl)\n \n       /* Secretly pass the current_this/primary as a second argument */\n       if (primary || current_this)\n-\targs = tree_cons (NULL_TREE, (primary ? primary : current_this), args);\n+\t{\n+\t  tree extra_arg;\n+\t  tree this_type = (current_this ?\n+\t\t\t    TREE_TYPE (TREE_TYPE (current_this)) : NULL_TREE);\n+\t  /* Method's (list) enclosing context */\n+\t  tree mec = DECL_CONTEXT (TYPE_NAME (DECL_CONTEXT (list)));\n+\t  /* If we have a primary, use it. */\n+\t  if (primary)\n+\t    extra_arg = primary;\n+\t  /* The current `this' is an inner class but isn't a direct\n+\t     enclosing context for the inner class we're trying to\n+\t     create. Build an access to the proper enclosing context\n+\t     and use it. */\n+\t  else if (current_this && PURE_INNER_CLASS_TYPE_P (this_type)\n+\t\t   && this_type != TREE_TYPE (mec))\n+\t    {\n+\n+\t      extra_arg = build_access_to_thisn (current_class,\n+\t\t\t\t\t\t TREE_TYPE (mec), 0);\n+\t      extra_arg = java_complete_tree (extra_arg);\n+\t    }\n+\t  /* Otherwise, just use the current `this' as an enclosing\n+             context. */\n+\t  else\n+\t    extra_arg = current_this;\n+\t  args = tree_cons (NULL_TREE, extra_arg, args);\n+\t}\n       else\n \targs = tree_cons (NULL_TREE, integer_zero_node, args);\n     }"}]}