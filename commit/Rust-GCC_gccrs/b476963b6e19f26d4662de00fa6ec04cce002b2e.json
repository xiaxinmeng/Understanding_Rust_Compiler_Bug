{"sha": "b476963b6e19f26d4662de00fa6ec04cce002b2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ3Njk2M2I2ZTE5ZjI2ZDQ2NjJkZTAwZmE2ZWMwNGNjZTAwMmIyZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-09-12T07:48:26Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-09-12T07:48:26Z"}, "message": "Fix some whitespace issues in the changelog.\n\nFrom-SVN: r116881", "tree": {"sha": "39839bbf4c7cf3c79800b0009f26c29158272aec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39839bbf4c7cf3c79800b0009f26c29158272aec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b476963b6e19f26d4662de00fa6ec04cce002b2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b476963b6e19f26d4662de00fa6ec04cce002b2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b476963b6e19f26d4662de00fa6ec04cce002b2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b476963b6e19f26d4662de00fa6ec04cce002b2e/comments", "author": null, "committer": null, "parents": [{"sha": "f33a23a09c932af2bcbbdf9adfd435be0faaa001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33a23a09c932af2bcbbdf9adfd435be0faaa001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f33a23a09c932af2bcbbdf9adfd435be0faaa001"}], "stats": {"total": 84, "additions": 42, "deletions": 42}, "files": [{"sha": "c08f4c524cfc9f9c28725e2d84153dd1493ab78f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b476963b6e19f26d4662de00fa6ec04cce002b2e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b476963b6e19f26d4662de00fa6ec04cce002b2e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b476963b6e19f26d4662de00fa6ec04cce002b2e", "patch": "@@ -188,20 +188,20 @@\n \n 2006-08-15  Kyle Galloway  <kgallowa@redhat.com>\n \n-  \t* include/java-interp.h (_Jv_InterpMethod::run_debug): New method.\n-  \t* interpret.cc: Added placeholder for debug variable type info to STORE*\n-  \tmacros.\n-  \t(_Jv_InterpMethod::run_debug): New method.\n-  \t(_Jv_InterpMethod::run_sync_object_debug): New method.\n-  \t(_Jv_InterpMethod::run_sync_class_debug): New method.\n-  \t(_Jv_InterpMethod::run_normal_debug): New method.\n-  \t(_Jv_InterpMethod::run_class_debug): New method.\n-  \t(_Jv_InterpMethod::ncode ()): Changed to select either debug or normal\n-  \tversions of these functions.\n-  \t* interpret-run.cc: New file, holds contents of old \t\n+\t* include/java-interp.h (_Jv_InterpMethod::run_debug): New method.\n+\t* interpret.cc: Added placeholder for debug variable type info to STORE*\n+\tmacros.\n+\t(_Jv_InterpMethod::run_debug): New method.\n+\t(_Jv_InterpMethod::run_sync_object_debug): New method.\n+\t(_Jv_InterpMethod::run_sync_class_debug): New method.\n+\t(_Jv_InterpMethod::run_normal_debug): New method.\n+\t(_Jv_InterpMethod::run_class_debug): New method.\n+\t(_Jv_InterpMethod::ncode ()): Changed to select either debug or normal\n+\tversions of these functions.\n+\t* interpret-run.cc: New file, holds contents of old \t\n \t_Jv_InterpMethod::run method.\n-  \t* stacktrace.cc (_Jv_StackTrace::UnwindTraceFn): Changed to select\n-  \tappropriate function for debug or normal mode.\n+\t* stacktrace.cc (_Jv_StackTrace::UnwindTraceFn): Changed to select\n+\tappropriate function for debug or normal mode.\n \n 2006-08-14  Mark Wielaard  <mark@klomp.org>\n \n@@ -1490,9 +1490,9 @@\n \n 2006-05-25  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n-        * configure.ac: Add sys/rw_lock.h to AC_CHECK_HEADERS.\n-        * configure: Rebuilt.\n-        * include/config.h.in: Likewise.\n+\t* configure.ac: Add sys/rw_lock.h to AC_CHECK_HEADERS.\n+\t* configure: Rebuilt.\n+\t* include/config.h.in: Likewise.\n \t* include/posix.h: If HAVE_SYS_RW_LOCK_H is defined, include\n \t<sys/rw_lock.h>.\n \n@@ -2450,25 +2450,25 @@\n \t(_Jv_FindClassFromSignatureNoException): New method declaration.\n \t* prims.cc:\n \t(_Jv_FindClassFromSignatureNoException): New method.\n-        * gcj/javaprims.h:\n-        (_Jv_equalsUtf8Classname): New method declaration.\n-        (_Jv_isPrimitiveOrDerived): Dito.\n-        * prims.cc:\n+\t* gcj/javaprims.h:\n+\t(_Jv_equalsUtf8Classname): New method declaration.\n+\t(_Jv_isPrimitiveOrDerived): Dito.\n+\t* prims.cc:\n \t(_Jv_equalsUtf8Classnames): New method.\n-        (_Jv_isPrimitiveOrDerived): New method.\n-        * verify.cc:\n-        (ref_intersection::equals): Use new classname comparison method.\n-        (type::compatible): Use new classname comparison method. Added\n-        check whether LHS' type is java.lang.Object .\n-        (type::resolve): Added new optional debug message and simplified\n-        if-expression.\n-        (type::to_array): Added codepath that generates an array type\n-        without resolving the element type.\n+\t(_Jv_isPrimitiveOrDerived): New method.\n+\t* verify.cc:\n+\t(ref_intersection::equals): Use new classname comparison method.\n+\t(type::compatible): Use new classname comparison method. Added\n+\tcheck whether LHS' type is java.lang.Object .\n+\t(type::resolve): Added new optional debug message and simplified\n+\tif-expression.\n+\t(type::to_array): Added codepath that generates an array type\n+\twithout resolving the element type.\n \n 2006-01-31  Mark Wielaard  <mark@klomp.org>\n- \n- \t* NEWS: Add 4.1 updates.\n- \n+\n+\t* NEWS: Add 4.1 updates.\n+\n 2006-01-30  Keith Seitz  <keiths@redhat.com>\n \n \t* include/java-interp.h (insn_index): New declaration.\n@@ -3641,18 +3641,18 @@\n \n 2005-07-14  Andrew Haley  <aph@redhat.com>\n \n-        * gnu/java/net/protocol/file/Connection.java (unquote): New\n-        method.\n-        (connect): Unquote filename.\n-        gnu/java/net/protocol/jar/Connection.java (getInputStream):\n-        Likewise.  \n-        (getJarFile): Likewise.\n+\t* gnu/java/net/protocol/file/Connection.java (unquote): New\n+\tmethod.\n+\t(connect): Unquote filename.\n+\tgnu/java/net/protocol/jar/Connection.java (getInputStream):\n+\tLikewise.  \n+\t(getJarFile): Likewise.\n \n-        * java/net/URLConnection.java (getContentHandler): Guard cast with\n-        instaceof.\n+\t* java/net/URLConnection.java (getContentHandler): Guard cast with\n+\tinstaceof.\n \n-        * java/net/URL.java (URL): If the file part of a spec is absolute,\n-        ignore the file part of its context.\n+\t* java/net/URL.java (URL): If the file part of a spec is absolute,\n+\tignore the file part of its context.\n \n 2005-07-14  Aaron Luchko  <aluchko@redhat.com>\n "}]}