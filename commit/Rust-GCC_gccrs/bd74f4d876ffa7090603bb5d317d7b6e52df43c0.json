{"sha": "bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ3NGY0ZDg3NmZmYTcwOTA2MDNiYjVkMzE3ZDdiNmU1MmRmNDNjMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-16T07:56:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-16T07:56:16Z"}, "message": "re PR c/84190 (double arithmetic on x86 no longer rounds to nearest)\n\n2018-02-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84190\n\t* tree-ssa.c (non_rewritable_mem_ref_base): Do not touch\n\tvolatile accesses if the decl isn't volatile.\n\n\t* g++.dg/torture/pr84190.C: New testcase.\n\nFrom-SVN: r257721", "tree": {"sha": "7b31d1caca27355a4224431eef869f63a0bdf4b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b31d1caca27355a4224431eef869f63a0bdf4b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d78aecf47261c3bb6b03966db5d1db4564e98b1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78aecf47261c3bb6b03966db5d1db4564e98b1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78aecf47261c3bb6b03966db5d1db4564e98b1b"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "8ca7fba1714568428846c91fb655ce70636fc50a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "patch": "@@ -1,3 +1,9 @@\n+2018-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84190\n+\t* tree-ssa.c (non_rewritable_mem_ref_base): Do not touch\n+\tvolatile accesses if the decl isn't volatile.\n+\n 2018-02-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/84314 - ICE with templates and fastcall attribute."}, {"sha": "8c0e0f0d97dd624ee8d8fe058cd2828467279967", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "patch": "@@ -1,3 +1,8 @@\n+2018-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84190\n+\t* g++.dg/torture/pr84190.C: New testcase.\n+\n 2018-02-15  Martin Sebor  <msebor@redhat.com>\n \n \t* gcc.dg/lto/README (dg-lto-warning, dg-lto-message): Document new"}, {"sha": "a7bab9443654bb8a6119f5f3f7d5d6568bf2cf3e", "filename": "gcc/testsuite/g++.dg/torture/pr84190.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr84190.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr84190.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr84190.C?ref=bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do compile }\n+// For slim LTO there's no optimized dump\n+// { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } }\n+// { dg-additional-options \"-fdump-tree-optimized\" }\n+\n+typedef double T;\n+static int equalfn (volatile T* x, volatile T* y);\n+T gx, gy;\n+int main ()\n+{\n+  T x = gx, y = gy;\n+  return equalfn (&x, &y);\n+}\n+static int equalfn (volatile T* x, volatile T* y)\n+{\n+  return (*x == *y);\n+}\n+\n+// There should be exactly two volatile accesses (ignoring clobbers).\n+// { dg-final { scan-tree-dump-times \" ={v} \\[^\\{\\]\" 2 \"optimized\" } }"}, {"sha": "949b951e1aaa98ccda0f769fde392a6809d70bcc", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd74f4d876ffa7090603bb5d317d7b6e52df43c0/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "patch": "@@ -1427,7 +1427,8 @@ non_rewritable_mem_ref_base (tree ref)\n       if (! DECL_P (decl))\n \treturn NULL_TREE;\n       if (! is_gimple_reg_type (TREE_TYPE (base))\n-\t  || VOID_TYPE_P (TREE_TYPE (base)))\n+\t  || VOID_TYPE_P (TREE_TYPE (base))\n+\t  || TREE_THIS_VOLATILE (decl) != TREE_THIS_VOLATILE (base))\n \treturn decl;\n       if ((TREE_CODE (TREE_TYPE (decl)) == VECTOR_TYPE\n \t   || TREE_CODE (TREE_TYPE (decl)) == COMPLEX_TYPE)"}]}