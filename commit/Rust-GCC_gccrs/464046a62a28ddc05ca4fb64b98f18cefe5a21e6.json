{"sha": "464046a62a28ddc05ca4fb64b98f18cefe5a21e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY0MDQ2YTYyYTI4ZGRjMDVjYTRmYjY0Yjk4ZjE4Y2VmZTVhMjFlNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2013-10-24T22:27:53Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2013-10-24T22:27:53Z"}, "message": "re PR rtl-optimization/58542 (Arguments of __atomic_* functions are converted in unsigned mode)\n\nPR rtl/58542\n\n* optabs.c (maybe_emit_atomic_exchange): Use create_input_operand\ninstead of create_convert_operand_to.\n(maybe_emit_sync_lock_test_and_set): Likewise.\n(expand_atomic_compare_and_swap): Likewise.\n(maybe_emit_compare_and_swap_exchange_loop): Don't convert_modes.\n\nFrom-SVN: r204040", "tree": {"sha": "387b0edb45f2da4a20ba0fc0073487e6f0d674a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/387b0edb45f2da4a20ba0fc0073487e6f0d674a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/464046a62a28ddc05ca4fb64b98f18cefe5a21e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/464046a62a28ddc05ca4fb64b98f18cefe5a21e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/464046a62a28ddc05ca4fb64b98f18cefe5a21e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/comments", "author": null, "committer": null, "parents": [{"sha": "bdd833da13457c8f90ad08f7717dab8e7418baa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd833da13457c8f90ad08f7717dab8e7418baa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd833da13457c8f90ad08f7717dab8e7418baa1"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "f6fd14490f2e629b94c80c7945513dc75bf8e10a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=464046a62a28ddc05ca4fb64b98f18cefe5a21e6", "patch": "@@ -1,3 +1,12 @@\n+2013-08-24  Richard Henderson  <rth@twiddle.net>\n+\n+\tPR rtl/58542\n+\t* optabs.c (maybe_emit_atomic_exchange): Use create_input_operand\n+\tinstead of create_convert_operand_to.\n+\t(maybe_emit_sync_lock_test_and_set): Likewise.\n+\t(expand_atomic_compare_and_swap): Likewise.\n+\t(maybe_emit_compare_and_swap_exchange_loop): Don't convert_modes.\n+\n 2013-08-24  Sriraman Tallam  <tmsriram@google.com>\n \n \t* cgraph.c (cgraph_fnver_htab): Move GTY((...)) to be before htab_t."}, {"sha": "a8a7e4fb79253a2c5d74f5b3ce6b9e919abada7e", "filename": "gcc/optabs.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=464046a62a28ddc05ca4fb64b98f18cefe5a21e6", "patch": "@@ -7040,8 +7040,7 @@ maybe_emit_atomic_exchange (rtx target, rtx mem, rtx val, enum memmodel model)\n \n       create_output_operand (&ops[0], target, mode);\n       create_fixed_operand (&ops[1], mem);\n-      /* VAL may have been promoted to a wider mode.  Shrink it if so.  */\n-      create_convert_operand_to (&ops[2], val, mode, true);\n+      create_input_operand (&ops[2], val, mode);\n       create_integer_operand (&ops[3], model);\n       if (maybe_expand_insn (icode, 4, ops))\n \treturn ops[0].value;\n@@ -7080,8 +7079,7 @@ maybe_emit_sync_lock_test_and_set (rtx target, rtx mem, rtx val,\n       struct expand_operand ops[3];\n       create_output_operand (&ops[0], target, mode);\n       create_fixed_operand (&ops[1], mem);\n-      /* VAL may have been promoted to a wider mode.  Shrink it if so.  */\n-      create_convert_operand_to (&ops[2], val, mode, true);\n+      create_input_operand (&ops[2], val, mode);\n       if (maybe_expand_insn (icode, 3, ops))\n \treturn ops[0].value;\n     }\n@@ -7123,8 +7121,6 @@ maybe_emit_compare_and_swap_exchange_loop (rtx target, rtx mem, rtx val)\n     {\n       if (!target || !register_operand (target, mode))\n \ttarget = gen_reg_rtx (mode);\n-      if (GET_MODE (val) != VOIDmode && GET_MODE (val) != mode)\n-\tval = convert_modes (mode, GET_MODE (val), val, 1);\n       if (expand_compare_and_swap_loop (mem, target, val, NULL_RTX))\n \treturn target;\n     }\n@@ -7336,8 +7332,8 @@ expand_atomic_compare_and_swap (rtx *ptarget_bool, rtx *ptarget_oval,\n       create_output_operand (&ops[0], target_bool, bool_mode);\n       create_output_operand (&ops[1], target_oval, mode);\n       create_fixed_operand (&ops[2], mem);\n-      create_convert_operand_to (&ops[3], expected, mode, true);\n-      create_convert_operand_to (&ops[4], desired, mode, true);\n+      create_input_operand (&ops[3], expected, mode);\n+      create_input_operand (&ops[4], desired, mode);\n       create_integer_operand (&ops[5], is_weak);\n       create_integer_operand (&ops[6], succ_model);\n       create_integer_operand (&ops[7], fail_model);\n@@ -7358,8 +7354,8 @@ expand_atomic_compare_and_swap (rtx *ptarget_bool, rtx *ptarget_oval,\n \n       create_output_operand (&ops[0], target_oval, mode);\n       create_fixed_operand (&ops[1], mem);\n-      create_convert_operand_to (&ops[2], expected, mode, true);\n-      create_convert_operand_to (&ops[3], desired, mode, true);\n+      create_input_operand (&ops[2], expected, mode);\n+      create_input_operand (&ops[3], desired, mode);\n       if (!maybe_expand_insn (icode, 4, ops))\n \treturn false;\n "}, {"sha": "6025f46d1b8fbed25b9c5805478e417f296b9dca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=464046a62a28ddc05ca4fb64b98f18cefe5a21e6", "patch": "@@ -1,3 +1,8 @@\n+2013-10-24  Richard Henderson  <rth@redhat.com>\n+\n+\tPR rtl/58542\n+\t* gcc.dg/atomic-store-6.c: New.\n+\n 2013-10-24  Ian Lance Taylor  <iant@google.com>\n \n \t* go.test/go-test.exp (errchk): Combine quoted strings in"}, {"sha": "81499cd716b34e11c0faaa8da98eb8c725480a7b", "filename": "gcc/testsuite/gcc.dg/atomic-store-6.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/464046a62a28ddc05ca4fb64b98f18cefe5a21e6/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-6.c?ref=464046a62a28ddc05ca4fb64b98f18cefe5a21e6", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target sync_int_128_runtime } */\n+/* { dg-options \"-mcx16\" { target { i?86-*-* x86_64-*-* } } } */\n+\n+__int128_t i;\n+\n+int main()\n+{\n+  __atomic_store_16(&i, -1, 0);\n+  if (i != -1)\n+    __builtin_abort();\n+  return 0;\n+}"}]}