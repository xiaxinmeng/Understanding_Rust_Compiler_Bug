{"sha": "e99300f131ee799843c61b63399c16fe14768e5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk5MzAwZjEzMWVlNzk5ODQzYzYxYjYzMzk5YzE2ZmUxNDc2OGU1Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-22T19:44:07Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-22T19:44:07Z"}, "message": "(ASM_OUTPUT_DOUBLE, ASM_OUTPUT_FLOAT):\n\nUse hex if infinite, nan, or minus zero.\n\nFrom-SVN: r4538", "tree": {"sha": "9f7f8b17c9eb88e7774fb29e387074e4514e2cd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f7f8b17c9eb88e7774fb29e387074e4514e2cd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e99300f131ee799843c61b63399c16fe14768e5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e99300f131ee799843c61b63399c16fe14768e5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e99300f131ee799843c61b63399c16fe14768e5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e99300f131ee799843c61b63399c16fe14768e5b/comments", "author": null, "committer": null, "parents": [{"sha": "970491df96aee77d99276e08fb2257b4ca868d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/970491df96aee77d99276e08fb2257b4ca868d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/970491df96aee77d99276e08fb2257b4ca868d43"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "594b9ffc66227620291ff8b6bc2f598db77e3e18", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e99300f131ee799843c61b63399c16fe14768e5b/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e99300f131ee799843c61b63399c16fe14768e5b/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=e99300f131ee799843c61b63399c16fe14768e5b", "patch": "@@ -1467,19 +1467,44 @@ literal_section ()\t\t\t\t\t\t\\\n \n /* This is how to output an assembler line defining a `double' constant.  */\n \n-#define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\\\n-do { char dstr[30];\t\t\t\t\t\\\n-     REAL_VALUE_TO_DECIMAL (VALUE, \"%.20e\", dstr);\t\\\n-     fprintf (FILE, \"\\t.t_floating %s\\n\", dstr);\t\\\n-   } while (0)\n+#define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n+        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n+\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tlong t[2];\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_TARGET_DOUBLE ((VALUE), t);\t\t\t\\\n+\tfprintf (FILE, \"\\t.quad 0x%lx%08lx\\n\",\t\t\t\t\\\n+\t\tt[1] & 0xffffffff, t[0] & 0xffffffff);\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tchar str[30];\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_DECIMAL (VALUE, \"%.20e\", str);\t\t\t\\\n+\tfprintf (FILE, \"\\t.t_floating %s\\n\", str);\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  }\n \n /* This is how to output an assembler line defining a `float' constant.  */\n \n-#define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\\\n-do { char dstr[30];\t\t\t\t\t\\\n-     REAL_VALUE_TO_DECIMAL (VALUE, \"%.20e\", dstr);\t\\\n-     fprintf (FILE, \"\\t.s_floating %s\\n\", dstr);\t\\\n-   } while (0)\n+#define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n+        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n+\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tlong t;\t\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\t\\\n+\tfprintf (FILE, \"\\t.long 0x%lx\\n\", t & 0xffffffff);\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tchar str[30];\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", str);\t\t\t\\\n+\tfprintf (FILE, \"\\t.s_floating %s\\n\", str);\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  }\n   \n /* This is how to output an assembler line defining an `int' constant.  */\n "}]}