{"sha": "10dcf221829e724a85e850057a83f5784c8e341b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkY2YyMjE4MjllNzI0YTg1ZTg1MDA1N2E4M2Y1Nzg0YzhlMzQxYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-17T01:38:24Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-17T01:38:24Z"}, "message": "re PR middle-end/21024 (fold generates a comparison of two operands whose types do not match)\n\n\tPR middle-end/21024\n\t* builtins.c (expand_builtin_strcat): Convert the result of\n\tstrlen to the right type.\n\t* fold-const.c (fold_binary) <PLUS_EXPR>: Use fold_convert to\n\tavoid creating type mismatches.\n\t<GE_EXPR>: Pass op0 and op1 to fold_build2 to avoid creating\n\ttype mismatches.\n\nFrom-SVN: r98244", "tree": {"sha": "38e92bac3ceb99b5ed8ffd6a613872242269dbc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38e92bac3ceb99b5ed8ffd6a613872242269dbc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10dcf221829e724a85e850057a83f5784c8e341b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10dcf221829e724a85e850057a83f5784c8e341b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10dcf221829e724a85e850057a83f5784c8e341b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10dcf221829e724a85e850057a83f5784c8e341b/comments", "author": null, "committer": null, "parents": [{"sha": "eee0d85ef565deb74ed052899524bfef0b9d6fd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee0d85ef565deb74ed052899524bfef0b9d6fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee0d85ef565deb74ed052899524bfef0b9d6fd6"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "57a83b92299cf1ff8705f2bfa3396e800baaa496", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10dcf221829e724a85e850057a83f5784c8e341b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10dcf221829e724a85e850057a83f5784c8e341b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10dcf221829e724a85e850057a83f5784c8e341b", "patch": "@@ -1,3 +1,13 @@\n+2005-04-17  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\tPR middle-end/21024\n+\t* builtins.c (expand_builtin_strcat): Convert the result of\n+\tstrlen to the right type.\n+\t* fold-const.c (fold_binary) <PLUS_EXPR>: Use fold_convert to\n+\tavoid creating type mismatches.\n+\t<GE_EXPR>: Pass op0 and op1 to fold_build2 to avoid creating\n+\ttype mismatches.\n+\n 2005-04-16  Richard Henderson  <rth@redhat.com>\n \n \tPR target/21051"}, {"sha": "33102e08e55f9518161b065d7479397993c4ef41", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10dcf221829e724a85e850057a83f5784c8e341b/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10dcf221829e724a85e850057a83f5784c8e341b/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=10dcf221829e724a85e850057a83f5784c8e341b", "patch": "@@ -3810,7 +3810,8 @@ expand_builtin_strcat (tree arglist, tree type, rtx target, enum machine_mode mo\n \t\tfold (build_function_call_expr (strlen_fn,\n \t\t\t\t\t\tbuild_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t\t dst)));\n-\t      /* Create (dst + strlen (dst)).  */\n+\t      /* Create (dst + (cast) strlen (dst)).  */\n+\t      newdst = fold_convert (TREE_TYPE (dst), newdst);\n \t      newdst = fold (build2 (PLUS_EXPR, TREE_TYPE (dst), dst, newdst));\n \n \t      /* Prepend the new dst argument.  */"}, {"sha": "3899fdac381bbb1c4eddd4e13bef10794f1d6775", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10dcf221829e724a85e850057a83f5784c8e341b/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10dcf221829e724a85e850057a83f5784c8e341b/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=10dcf221829e724a85e850057a83f5784c8e341b", "patch": "@@ -7250,11 +7250,15 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n     case PLUS_EXPR:\n       /* A + (-B) -> A - B */\n       if (TREE_CODE (arg1) == NEGATE_EXPR)\n-\treturn fold_build2 (MINUS_EXPR, type, arg0, TREE_OPERAND (arg1, 0));\n+\treturn fold_build2 (MINUS_EXPR, type,\n+\t\t\t    fold_convert (type, arg0),\n+\t\t\t    fold_convert (type, TREE_OPERAND (arg1, 0)));\n       /* (-A) + B -> B - A */\n       if (TREE_CODE (arg0) == NEGATE_EXPR\n \t  && reorder_operands_p (TREE_OPERAND (arg0, 0), arg1))\n-\treturn fold_build2 (MINUS_EXPR, type, arg1, TREE_OPERAND (arg0, 0));\n+\treturn fold_build2 (MINUS_EXPR, type,\n+\t\t\t    fold_convert (type, arg1),\n+\t\t\t    fold_convert (type, TREE_OPERAND (arg0, 0)));\n       /* Convert ~A + 1 to -A.  */\n       if (INTEGRAL_TYPE_P (type)\n \t  && TREE_CODE (arg0) == BIT_NOT_EXPR\n@@ -7390,7 +7394,7 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t\t\t\t    fold_build2 (PLUS_EXPR, type,\n \t\t\t\t\t\t fold_convert (type, alt0),\n \t\t\t\t\t\t fold_convert (type, alt1)),\n-\t\t\t\t    same);\n+\t\t\t\t    fold_convert (type, same));\n \t    }\n \n \t  /* Try replacing &a[i1] + c * i2 with &a[i1 + i2], if c is step\n@@ -8786,7 +8790,7 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n     case GE_EXPR:\n       /* If one arg is a real or integer constant, put it last.  */\n       if (tree_swap_operands_p (arg0, arg1, true))\n-\treturn fold_build2 (swap_tree_comparison (code), type, arg1, arg0);\n+\treturn fold_build2 (swap_tree_comparison (code), type, op1, op0);\n \n       /* If this is an equality comparison of the address of a non-weak\n \t object against zero, then we know the result.  */"}]}