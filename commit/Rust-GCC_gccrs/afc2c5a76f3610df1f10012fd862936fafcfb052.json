{"sha": "afc2c5a76f3610df1f10012fd862936fafcfb052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjMmM1YTc2ZjM2MTBkZjFmMTAwMTJmZDg2MjkzNmZhZmNmYjA1Mg==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-09-19T11:55:33Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-09-19T11:55:33Z"}, "message": "(sCOND patterns): Don't allow a MEM in the SET_DEST...\n\n(sCOND patterns): Don't allow a MEM in the SET_DEST, because these insns\ncan't have input reloads, and a MEM might need an input address reload.\n\nFrom-SVN: r2163", "tree": {"sha": "3388b5f7fedc9c64dc06b529b9a8bdeacaa28a84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3388b5f7fedc9c64dc06b529b9a8bdeacaa28a84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afc2c5a76f3610df1f10012fd862936fafcfb052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc2c5a76f3610df1f10012fd862936fafcfb052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc2c5a76f3610df1f10012fd862936fafcfb052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc2c5a76f3610df1f10012fd862936fafcfb052/comments", "author": null, "committer": null, "parents": [{"sha": "91594e4329d7b2b70ea5715e560f0e43458d7837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91594e4329d7b2b70ea5715e560f0e43458d7837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91594e4329d7b2b70ea5715e560f0e43458d7837"}], "stats": {"total": 44, "additions": 24, "deletions": 20}, "files": [{"sha": "6bdc9711b2c33458f4c75331fc992ac1eec974bf", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc2c5a76f3610df1f10012fd862936fafcfb052/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc2c5a76f3610df1f10012fd862936fafcfb052/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=afc2c5a76f3610df1f10012fd862936fafcfb052", "patch": "@@ -3028,9 +3028,13 @@\n ;; For all sCOND expanders, also expand the compare or test insn that\n ;; generates cc0.  Generate an equality comparison if `seq' or `sne'.\n \n+;; The 386 sCOND opcodes can write to memory.  But a gcc sCOND insn may\n+;; not have any input reloads.  A MEM write might need an input reload\n+;; for the address of the MEM.  So don't allow MEM as the SET_DEST.\n+\n (define_expand \"seq\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(eq:QI (cc0) (const_int 0)))]\n   \"\"\n   \"\n@@ -3043,7 +3047,7 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(eq:QI (cc0) (const_int 0)))]\n   \"\"\n   \"*\n@@ -3056,7 +3060,7 @@\n \n (define_expand \"sne\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(ne:QI (cc0) (const_int 0)))]\n   \"\"\n   \"\n@@ -3069,7 +3073,7 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(ne:QI (cc0) (const_int 0)))]\n   \"\"\n   \"*\n@@ -3083,13 +3087,13 @@\n \n (define_expand \"sgt\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(gt:QI (cc0) (const_int 0)))]\n   \"\"\n   \"operands[1] = (*i386_compare_gen)(i386_compare_op0, i386_compare_op1);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(gt:QI (cc0) (const_int 0)))]\n   \"\"\n   \"*\n@@ -3102,26 +3106,26 @@\n \n (define_expand \"sgtu\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(gtu:QI (cc0) (const_int 0)))]\n   \"\"\n   \"operands[1] = (*i386_compare_gen)(i386_compare_op0, i386_compare_op1);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(gtu:QI (cc0) (const_int 0)))]\n   \"\"\n   \"* return \\\"seta %0\\\"; \")\n \n (define_expand \"slt\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(lt:QI (cc0) (const_int 0)))]\n   \"\"\n   \"operands[1] = (*i386_compare_gen)(i386_compare_op0, i386_compare_op1);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(lt:QI (cc0) (const_int 0)))]\n   \"\"\n   \"*\n@@ -3134,26 +3138,26 @@\n \n (define_expand \"sltu\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(ltu:QI (cc0) (const_int 0)))]\n   \"\"\n   \"operands[1] = (*i386_compare_gen)(i386_compare_op0, i386_compare_op1);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(ltu:QI (cc0) (const_int 0)))]\n   \"\"\n   \"* return \\\"setb %0\\\"; \")\n \n (define_expand \"sge\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(ge:QI (cc0) (const_int 0)))]\n   \"\"\n   \"operands[1] = (*i386_compare_gen)(i386_compare_op0, i386_compare_op1);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(ge:QI (cc0) (const_int 0)))]\n   \"\"\n   \"*\n@@ -3166,26 +3170,26 @@\n \n (define_expand \"sgeu\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(geu:QI (cc0) (const_int 0)))]\n   \"\"\n   \"operands[1] = (*i386_compare_gen)(i386_compare_op0, i386_compare_op1);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(geu:QI (cc0) (const_int 0)))]\n   \"\"\n   \"* return \\\"setae %0\\\"; \")\n \n (define_expand \"sle\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(le:QI (cc0) (const_int 0)))]\n   \"\"\n   \"operands[1] = (*i386_compare_gen)(i386_compare_op0, i386_compare_op1);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(le:QI (cc0) (const_int 0)))]\n   \"\"\n   \"*\n@@ -3198,13 +3202,13 @@\n \n (define_expand \"sleu\"\n   [(match_dup 1)\n-   (set (match_operand:QI 0 \"general_operand\" \"\")\n+   (set (match_operand:QI 0 \"register_operand\" \"\")\n \t(leu:QI (cc0) (const_int 0)))]\n   \"\"\n   \"operands[1] = (*i386_compare_gen)(i386_compare_op0, i386_compare_op1);\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=qm\")\n+  [(set (match_operand:QI 0 \"register_operand\" \"=q\")\n \t(leu:QI (cc0) (const_int 0)))]\n   \"\"\n   \"* return \\\"setbe %0\\\"; \")"}]}