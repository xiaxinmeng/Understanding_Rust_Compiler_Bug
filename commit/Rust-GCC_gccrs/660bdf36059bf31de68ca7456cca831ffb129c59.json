{"sha": "660bdf36059bf31de68ca7456cca831ffb129c59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYwYmRmMzYwNTliZjMxZGU2OGNhNzQ1NmNjYTgzMWZmYjEyOWM1OQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2002-03-10T19:28:05Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2002-03-10T19:28:05Z"}, "message": "Fix mingw32 cross builds.\n\nFrom-SVN: r50541", "tree": {"sha": "5261cb45494d867be8f5132bededff2f44805e97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5261cb45494d867be8f5132bededff2f44805e97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/660bdf36059bf31de68ca7456cca831ffb129c59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/660bdf36059bf31de68ca7456cca831ffb129c59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/660bdf36059bf31de68ca7456cca831ffb129c59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/660bdf36059bf31de68ca7456cca831ffb129c59/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22d5af9af4190a81cab583189ff2551e6c2f49d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22d5af9af4190a81cab583189ff2551e6c2f49d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22d5af9af4190a81cab583189ff2551e6c2f49d8"}], "stats": {"total": 2420, "additions": 1621, "deletions": 799}, "files": [{"sha": "10db4b48e447b83d94170c5619e1a183c0d521a1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660bdf36059bf31de68ca7456cca831ffb129c59/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660bdf36059bf31de68ca7456cca831ffb129c59/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=660bdf36059bf31de68ca7456cca831ffb129c59", "patch": "@@ -1,3 +1,8 @@\n+2002-03-10  Anthony Green  <green@redhat.com>\n+\n+\t* configure.in: Support cross builds to mingw32 target.\n+\t* configure: Rebuilt.\n+\n 2002-03-09  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/locale_facets.tcc (collate::do_transform):"}, {"sha": "ddb30601d4ab1ba9dfdb5a8546f786eb413b53e9", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1566, "deletions": 763, "changes": 2329, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660bdf36059bf31de68ca7456cca831ffb129c59/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660bdf36059bf31de68ca7456cca831ffb129c59/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=660bdf36059bf31de68ca7456cca831ffb129c59"}, {"sha": "8e1fd3c3695747cb09614a9525fb3b8c04f3bfd0", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 50, "deletions": 36, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/660bdf36059bf31de68ca7456cca831ffb129c59/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/660bdf36059bf31de68ca7456cca831ffb129c59/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=660bdf36059bf31de68ca7456cca831ffb129c59", "patch": "@@ -141,48 +141,62 @@ if test -n \"$with_cross_host\" || test x\"$build\" != x\"$host\"; then\n       AC_DEFINE(HAVE_FREXPF)\n       AC_DEFINE(HAVE_HYPOTF)\n       ;;\n+    *-mingw32*)\n+      AC_CHECK_HEADERS([sys/types.h locale.h float.h])\n+      GLIBCPP_CHECK_LINKER_FEATURES\n+      GLIBCPP_CHECK_COMPLEX_MATH_SUPPORT\n+      GLIBCPP_CHECK_WCHAR_T_SUPPORT\n+      os_include_dir=\"config/os/mingw32\"\n+      is_mingw32=yes;\n+      ;;\n     *)\n       os_include_dir=\"config/os/newlib\"\n       AC_DEFINE(HAVE_HYPOT)\n       ;;\n   esac\n \n-  # GLIBCPP_CHECK_STDLIB_SUPPORT\n-  AC_DEFINE(HAVE_STRTOF)        \n-  AC_DEFINE(HAVE_STRTOLD)        \n-  # AC_FUNC_MMAP\n-  AC_DEFINE(HAVE_MMAP)\n-\n-  AC_DEFINE(HAVE_ACOSF)\n-  AC_DEFINE(HAVE_ASINF)\n-  AC_DEFINE(HAVE_ATAN2F)\n-  AC_DEFINE(HAVE_ATANF)\n-  AC_DEFINE(HAVE_CEILF)\n-  AC_DEFINE(HAVE_COPYSIGN)\n-  AC_DEFINE(HAVE_COPYSIGNF)\n-  AC_DEFINE(HAVE_COSF)\n-  AC_DEFINE(HAVE_COSHF)\n-  AC_DEFINE(HAVE_EXPF)\n-  AC_DEFINE(HAVE_FABSF)\n-  AC_DEFINE(HAVE_FINITE)\n-  AC_DEFINE(HAVE_FINITEF)\n-  AC_DEFINE(HAVE_FLOORF)\n-  AC_DEFINE(HAVE_FMODF)\n-  AC_DEFINE(HAVE_FREXPF)\n-  AC_DEFINE(HAVE_ISINF)\n-  AC_DEFINE(HAVE_ISINFF)\n-  AC_DEFINE(HAVE_ISNAN)\n-  AC_DEFINE(HAVE_ISNANF)\n-  AC_DEFINE(HAVE_LDEXPF)\n-  AC_DEFINE(HAVE_LOG10F)\n-  AC_DEFINE(HAVE_LOGF)\n-  AC_DEFINE(HAVE_MODFF)\n-  AC_DEFINE(HAVE_POWF)\n-  AC_DEFINE(HAVE_SINF)\n-  AC_DEFINE(HAVE_SINHF)\n-  AC_DEFINE(HAVE_SQRTF)\n-  AC_DEFINE(HAVE_TANF)\n-  AC_DEFINE(HAVE_TANHF)\n+  case \"$target_alias\" in\n+    *-mingw32*)\n+      ;;\n+    *)\n+      # GLIBCPP_CHECK_STDLIB_SUPPORT\n+      AC_DEFINE(HAVE_STRTOF)        \n+      AC_DEFINE(HAVE_STRTOLD)        \n+      # AC_FUNC_MMAP\n+      AC_DEFINE(HAVE_MMAP)\n+\n+      AC_DEFINE(HAVE_ACOSF)\n+      AC_DEFINE(HAVE_ASINF)\n+      AC_DEFINE(HAVE_ATAN2F)\n+      AC_DEFINE(HAVE_ATANF)\n+      AC_DEFINE(HAVE_CEILF)\n+      AC_DEFINE(HAVE_COPYSIGN)\n+      AC_DEFINE(HAVE_COPYSIGNF)\n+      AC_DEFINE(HAVE_COSF)\n+      AC_DEFINE(HAVE_COSHF)\n+      AC_DEFINE(HAVE_EXPF)\n+      AC_DEFINE(HAVE_FABSF)\n+      AC_DEFINE(HAVE_FINITE)\n+      AC_DEFINE(HAVE_FINITEF)\n+      AC_DEFINE(HAVE_FLOORF)\n+      AC_DEFINE(HAVE_FMODF)\n+      AC_DEFINE(HAVE_FREXPF)\n+      AC_DEFINE(HAVE_ISINF)\n+      AC_DEFINE(HAVE_ISINFF)\n+      AC_DEFINE(HAVE_ISNAN)\n+      AC_DEFINE(HAVE_ISNANF)\n+      AC_DEFINE(HAVE_LDEXPF)\n+      AC_DEFINE(HAVE_LOG10F)\n+      AC_DEFINE(HAVE_LOGF)\n+      AC_DEFINE(HAVE_MODFF)\n+      AC_DEFINE(HAVE_POWF)\n+      AC_DEFINE(HAVE_SINF)\n+      AC_DEFINE(HAVE_SINHF)\n+      AC_DEFINE(HAVE_SQRTF)\n+      AC_DEFINE(HAVE_TANF)\n+      AC_DEFINE(HAVE_TANHF)\n+      ;;\n+  esac\n \n   # At some point, we should differentiate between architectures\n   # like x86, which have long double versions, and alpha/powerpc/etc.,"}]}