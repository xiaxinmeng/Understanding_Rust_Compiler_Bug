{"sha": "28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg0OTdmM2JkYzc5YzFkY2U0ZDBiMmQ5NTBmNGNkODJiZDZiYzIwYg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2015-02-24T21:52:19Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2015-02-24T21:52:19Z"}, "message": "rl78-protos.h (rl78_split_movsi): Accept a mode as well.\n\n* config/rl78/rl78-protos.h (rl78_split_movsi): Accept a mode as\nwell.\n* config/rl78/rl78-expand.md (movsf): New, same as movsi.\n* config/rl78/rl78.c (rl78_split_movsi): Accept a mode, use it\ninstead of hardcoding SImode.\n\nFrom-SVN: r220951", "tree": {"sha": "6d7caf0fe5542726fd3753582385c72e9d656a07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d7caf0fe5542726fd3753582385c72e9d656a07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/comments", "author": null, "committer": null, "parents": [{"sha": "d7823208f9f8f1dc5f1b57431037a1ec53c7c57a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7823208f9f8f1dc5f1b57431037a1ec53c7c57a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7823208f9f8f1dc5f1b57431037a1ec53c7c57a"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "f1ae5398be55fd5877665d1e565b37600ba48242", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b", "patch": "@@ -1,3 +1,11 @@\n+2015-02-24  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rl78/rl78-protos.h (rl78_split_movsi): Accept a mode as\n+\twell.\n+\t* config/rl78/rl78-expand.md (movsf): New, same as movsi.\n+\t* config/rl78/rl78.c (rl78_split_movsi): Accept a mode, use it\n+\tinstead of hardcoding SImode.\n+\n 2015-02-24  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* omp-low.c (create_omp_child_function): Tag entrypoint"}, {"sha": "0335a4d2a68144669f93d04f25826fcb6524627e", "filename": "gcc/config/rl78/rl78-expand.md", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/gcc%2Fconfig%2Frl78%2Frl78-expand.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/gcc%2Fconfig%2Frl78%2Frl78-expand.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-expand.md?ref=28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b", "patch": "@@ -87,7 +87,21 @@\n \t(match_operand:HI 4 \"general_operand\"))\n    (set (match_operand:HI 3 \"nonimmediate_operand\")\n \t(match_operand:HI 5 \"general_operand\"))]\n-  \"rl78_split_movsi (operands);\"\n+  \"rl78_split_movsi (operands, SImode);\"\n+  [(set_attr \"valloc\" \"op1\")]\n+)\n+\n+(define_insn_and_split \"movsf\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=vYS,v,Wfr\")\n+\t(match_operand:SF 1 \"general_operand\" \"viYS,Wfr,v\"))]\n+  \"\"\n+  \"#\"\n+  \"\"\n+  [(set (match_operand:HI 2 \"nonimmediate_operand\")\n+\t(match_operand:HI 4 \"general_operand\"))\n+   (set (match_operand:HI 3 \"nonimmediate_operand\")\n+\t(match_operand:HI 5 \"general_operand\"))]\n+  \"rl78_split_movsi (operands, SFmode);\"\n   [(set_attr \"valloc\" \"op1\")]\n )\n "}, {"sha": "0e77b8d51f1378b5e102c11b30d3ee95dc02f775", "filename": "gcc/config/rl78/rl78-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/gcc%2Fconfig%2Frl78%2Frl78-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/gcc%2Fconfig%2Frl78%2Frl78-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-protos.h?ref=28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b", "patch": "@@ -21,7 +21,7 @@\n void\t\trl78_emit_eh_epilogue (rtx);\n void\t\trl78_expand_compare (rtx *);\n void\t\trl78_expand_movsi (rtx *);\n-void\t\trl78_split_movsi (rtx *);\n+void\t\trl78_split_movsi (rtx *, enum machine_mode);\n int\t\trl78_force_nonfar_2 (rtx *, rtx (*gen)(rtx,rtx));\n int\t\trl78_force_nonfar_3 (rtx *, rtx (*gen)(rtx,rtx,rtx));\n void\t\trl78_expand_eh_epilogue (rtx);"}, {"sha": "40772dad03fb0caaa165a7ebbf89a21ec18bd385", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=28497f3bdc79c1dce4d0b2d950f4cd82bd6bc20b", "patch": "@@ -506,12 +506,12 @@ rl78_expand_movsi (rtx *operands)\n \n /* Generate code to move an SImode value.  */\n void\n-rl78_split_movsi (rtx *operands)\n+rl78_split_movsi (rtx *operands, enum machine_mode omode)\n {\n   rtx op00, op02, op10, op12;\n \n-  op00 = rl78_subreg (HImode, operands[0], SImode, 0);\n-  op02 = rl78_subreg (HImode, operands[0], SImode, 2);\n+  op00 = rl78_subreg (HImode, operands[0], omode, 0);\n+  op02 = rl78_subreg (HImode, operands[0], omode, 2);\n \n   if (GET_CODE (operands[1]) == CONST\n       || GET_CODE (operands[1]) == SYMBOL_REF)\n@@ -523,8 +523,8 @@ rl78_split_movsi (rtx *operands)\n     }\n   else\n     {\n-      op10 = rl78_subreg (HImode, operands[1], SImode, 0);\n-      op12 = rl78_subreg (HImode, operands[1], SImode, 2);\n+      op10 = rl78_subreg (HImode, operands[1], omode, 0);\n+      op12 = rl78_subreg (HImode, operands[1], omode, 2);\n     }\n \n   if (rtx_equal_p (operands[0], operands[1]))"}]}