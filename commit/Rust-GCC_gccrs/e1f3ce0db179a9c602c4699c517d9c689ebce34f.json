{"sha": "e1f3ce0db179a9c602c4699c517d9c689ebce34f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFmM2NlMGRiMTc5YTljNjAyYzQ2OTljNTE3ZDljNjg5ZWJjZTM0Zg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2011-09-02T15:54:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-02T15:54:16Z"}, "message": "testsuite_allocator.h (tracker_allocator_counter:: allocate): Update allocation count only if allocation succeeded.\n\n2011-09-02  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* testsuite/util/testsuite_allocator.h (tracker_allocator_counter::\n\tallocate): Update allocation count only if allocation succeeded.\n\nFrom-SVN: r178486", "tree": {"sha": "a16b707f9a39d5054afb7799cd7f4550b526706d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a16b707f9a39d5054afb7799cd7f4550b526706d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1f3ce0db179a9c602c4699c517d9c689ebce34f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f3ce0db179a9c602c4699c517d9c689ebce34f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1f3ce0db179a9c602c4699c517d9c689ebce34f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f3ce0db179a9c602c4699c517d9c689ebce34f/comments", "author": null, "committer": null, "parents": [{"sha": "d7da5cc85cdef4207d10e8b79dce79ed12353fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7da5cc85cdef4207d10e8b79dce79ed12353fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7da5cc85cdef4207d10e8b79dce79ed12353fb9"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "5d34b2b419f7efaf73cdd0585e26dbb6b032a972", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3ce0db179a9c602c4699c517d9c689ebce34f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3ce0db179a9c602c4699c517d9c689ebce34f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e1f3ce0db179a9c602c4699c517d9c689ebce34f", "patch": "@@ -1,3 +1,8 @@\n+2011-09-02  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* testsuite/util/testsuite_allocator.h (tracker_allocator_counter::\n+\tallocate): Update allocation count only if allocation succeeded.\n+\n 2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/bitset: Trivial formatting fixes."}, {"sha": "57a5a8ae896e1117f38f7e314cd3ac9e7d2854ce", "filename": "libstdc++-v3/testsuite/util/testsuite_allocator.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f3ce0db179a9c602c4699c517d9c689ebce34f/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f3ce0db179a9c602c4699c517d9c689ebce34f/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h?ref=e1f3ce0db179a9c602c4699c517d9c689ebce34f", "patch": "@@ -37,14 +37,15 @@ namespace __gnu_test\n   {\n   public:\n     typedef std::size_t    size_type; \n-    \n+\n     static void*\n     allocate(size_type blocksize)\n     {\n+      void* p = ::operator new(blocksize);\n       allocationCount_ += blocksize;\n-      return ::operator new(blocksize);\n+      return p;\n     }\n-    \n+\n     static void\n     construct() { constructCount_++; }\n \n@@ -57,19 +58,19 @@ namespace __gnu_test\n       ::operator delete(p);\n       deallocationCount_ += blocksize;\n     }\n-    \n+\n     static size_type\n     get_allocation_count() { return allocationCount_; }\n-    \n+\n     static size_type\n     get_deallocation_count() { return deallocationCount_; }\n-    \n+\n     static int\n     get_construct_count() { return constructCount_; }\n \n     static int\n     get_destruct_count() { return destructCount_; }\n-    \n+\n     static void\n     reset()\n     {"}]}