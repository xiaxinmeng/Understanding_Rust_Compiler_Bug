{"sha": "5f17badb648980275ff4c86b0c207dbd751b00f2", "node_id": "C_kwDOANBUbNoAKDVmMTdiYWRiNjQ4OTgwMjc1ZmY0Yzg2YjBjMjA3ZGJkNzUxYjAwZjI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-09T00:16:47Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-09T00:16:47Z"}, "message": "Daily bump.", "tree": {"sha": "604354784bdcdc8506fe1f85c4f08c1267ae0dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/604354784bdcdc8506fe1f85c4f08c1267ae0dc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f17badb648980275ff4c86b0c207dbd751b00f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f17badb648980275ff4c86b0c207dbd751b00f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f17badb648980275ff4c86b0c207dbd751b00f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f17badb648980275ff4c86b0c207dbd751b00f2/comments", "author": null, "committer": null, "parents": [{"sha": "ef623bb58594958a7959f8f031f65a50eb0e5890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef623bb58594958a7959f8f031f65a50eb0e5890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef623bb58594958a7959f8f031f65a50eb0e5890"}], "stats": {"total": 130, "additions": 129, "deletions": 1}, "files": [{"sha": "36879ec41091144633e8e7a8a7fa35886366b8e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1,3 +1,29 @@\n+2022-08-08  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/106556\n+\t* gimple-range-gori.cc (gori_compute::condexpr_adjust): Use the\n+\t  type of the cond_expr operands being evaluted.\n+\n+2022-08-08  Tom Honermann  <tom@honermann.net>\n+\n+\t* ginclude/stdatomic.h (atomic_char8_t,\n+\tATOMIC_CHAR8_T_LOCK_FREE): New typedef and macro.\n+\n+2022-08-08  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR middle-end/103645\n+\t* gimplify.cc (gimplify_init_constructor): Don't build/add\n+\tgimple assignment of an empty type.\n+\n+2022-08-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/106540\n+\tPR lto/106334\n+\t* dwarf2out.cc (dwarf2out_register_external_die): Restore\n+\toriginal assert.\n+\t* lto-streamer-in.cc (lto_read_tree_1): Use lto_input_tree_1\n+\tto input DECL_INITIAL, avoiding to commit drefs.\n+\n 2022-08-07  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* config/i386/i386.md (*cmp<dwi>_doubleword): Change predicate"}, {"sha": "8bd1173be90b3ce5239dc9cd334c6a8403b5fcab", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1 +1 @@\n-20220808\n+20220809"}, {"sha": "63277a514eb49b3e3229a58616122edbc89448fb", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1,3 +1,17 @@\n+2022-08-08  Tom Honermann  <tom@honermann.net>\n+\n+\tPR preprocessor/106426\n+\t* c-opts.cc (c_common_post_options): Assign cpp_opts->unsigned_utf8char\n+\tsubject to -fchar8_t, -fsigned-char, and/or -funsigned-char.\n+\n+2022-08-08  Tom Honermann  <tom@honermann.net>\n+\n+\t* c-lex.cc (lex_string, lex_charconst): Use char8_t as the type\n+\tof CPP_UTF8CHAR and CPP_UTF8STRING when char8_t support is\n+\tenabled.\n+\t* c-opts.cc (c_common_post_options): Set flag_char8_t if\n+\ttargeting C2x.\n+\n 2022-07-31  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR c++/66290"}, {"sha": "b5ecf9269e64c51c601ed272fd1212e3cb14b4d7", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1,3 +1,11 @@\n+2022-08-08  Tom Honermann  <tom@honermann.net>\n+\n+\t* c-parser.cc (c_parser_string_literal): Use char8_t as the type\n+\tof CPP_UTF8STRING when char8_t support is enabled.\n+\t* c-typeck.cc (digest_init): Allow initialization of an array\n+\tof character type by a string literal with type array of\n+\tchar8_t.\n+\n 2022-08-01  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-typeck.cc (build_c_cast): Quote names of address spaces in"}, {"sha": "0bb74b134c5bf77da5877d3ab3c463957a73583a", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1,3 +1,8 @@\n+2022-08-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/106555\n+\t* d-target.cc (Target::isReturnOnStack): Check for return type size.\n+\n 2022-08-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* dmd/MERGE: Merge upstream dmd d7772a2369."}, {"sha": "19a5303bc1a597ffad0856e7d17b0b18754ea043", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1,3 +1,40 @@\n+2022-08-08  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/106556\n+\t* gfortran.dg/pr106556.f90: New.\n+\n+2022-08-08  Tom Honermann  <tom@honermann.net>\n+\n+\tPR preprocessor/106426\n+\t* g++.dg/ext/char8_t-char-literal-1.C: Check signedness of u8 literals.\n+\t* g++.dg/ext/char8_t-char-literal-2.C: Check signedness of u8 literals.\n+\n+2022-08-08  Tom Honermann  <tom@honermann.net>\n+\n+\t* gcc.dg/atomic/c2x-stdatomic-lockfree-char8_t.c: New test.\n+\t* gcc.dg/atomic/gnu2x-stdatomic-lockfree-char8_t.c: New test.\n+\t* gcc.dg/c11-utf8str-type.c: New test.\n+\t* gcc.dg/c17-utf8str-type.c: New test.\n+\t* gcc.dg/c2x-utf8str-type.c: New test.\n+\t* gcc.dg/c2x-utf8str.c: New test.\n+\t* gcc.dg/gnu2x-utf8str-type.c: New test.\n+\t* gcc.dg/gnu2x-utf8str.c: New test.\n+\n+2022-08-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/106555\n+\t* gdc.dg/imports/pr106555.d: New test.\n+\t* gdc.dg/pr106555.d: New test.\n+\n+2022-08-08  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* gcc.dg/pr87052.c: Update d var to expect nothing.\n+\n+2022-08-08  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* gcc.dg/tree-ssa/pr93776.c: Moved to...\n+\t* gcc.c-torture/compile/pr93776.c: ...here.\n+\n 2022-08-07  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* gcc.target/i386/cmpti2.c: Add -mno-stv to dg-options."}, {"sha": "b7cacf796ae2ad6b8b6cefa07681819770a128ff", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1,3 +1,15 @@\n+2022-08-08  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/102218\n+\t* config/arm/host-config.h (pre_seq_barrier, post_seq_barrier,\n+\tpre_post_seq_barrier): Require barrier on __ATOMIC_SEQ_CST.\n+\n+2022-08-08  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/102218\n+\t* config/aarch64/aarch64-config.h: New file.\n+\t* config/aarch64/host-config.h: New file.\n+\n 2022-06-02  David Malcolm  <dmalcolm@redhat.com>\n \n \t* testsuite/lib/libatomic.exp: Add load_gcc_lib of scansarif.exp."}, {"sha": "259adb97e83102e0cad6dede31b59cc3de613335", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1,3 +1,11 @@\n+2022-08-08  Tom Honermann  <tom@honermann.net>\n+\n+\tPR preprocessor/106426\n+\t* charset.cc (narrow_str_to_charconst): Set signedness of CPP_UTF8CHAR\n+\tliterals based on unsigned_utf8char.\n+\t* include/cpplib.h (cpp_options): Add unsigned_utf8char.\n+\t* init.cc (cpp_create_reader): Initialize unsigned_utf8char.\n+\n 2022-07-15  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/line-map.h (label_text::take_or_copy): Remove."}, {"sha": "4585e01c3cf47783d45856f867c6028adc0b6967", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f17badb648980275ff4c86b0c207dbd751b00f2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f17badb648980275ff4c86b0c207dbd751b00f2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f17badb648980275ff4c86b0c207dbd751b00f2", "patch": "@@ -1,3 +1,21 @@\n+2022-08-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/formatter.h (__singular_value_init): New _Iterator_state enum entry.\n+\t(_Parameter<>(const _Safe_iterator<>&, const char*, _Is_iterator)): Check if iterator\n+\tparameter is value-initialized.\n+\t(_Parameter<>(const _Safe_local_iterator<>&, const char*, _Is_iterator)): Likewise.\n+\t* include/debug/safe_iterator.h (_Safe_iterator<>::_M_value_initialized()): New. Adapt\n+\tchecks.\n+\t* include/debug/safe_local_iterator.h (_Safe_local_iterator<>::_M_value_initialized()): New.\n+\tAdapt checks.\n+\t* src/c++11/debug.cc (_Safe_iterator_base::_M_reset): Do not reset _M_version.\n+\t(print_field(PrintContext&, const _Parameter&, const char*)): Adapt state_names.\n+\t* testsuite/23_containers/deque/debug/iterator1_neg.cc: New test.\n+\t* testsuite/23_containers/deque/debug/iterator2_neg.cc: New test.\n+\t* testsuite/23_containers/forward_list/debug/iterator1_neg.cc: New test.\n+\t* testsuite/23_containers/forward_list/debug/iterator2_neg.cc: New test.\n+\t* testsuite/23_containers/forward_list/debug/iterator3_neg.cc: New test.\n+\n 2022-08-05  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/scope (__cpp_lib_experimental_scope):"}]}