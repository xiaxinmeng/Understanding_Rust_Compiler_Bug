{"sha": "36d421ec4e225557941d0a786acdf23a93d889a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkNDIxZWM0ZTIyNTU1Nzk0MWQwYTc4NmFjZGYyM2E5M2Q4ODlhNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-01-13T20:30:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-01-13T20:30:34Z"}, "message": "Improve documentation of -std option for C++\n\n\t* doc/invoke.texi (C Dialect Options): Adjust -std default for C++.\n\t(C++ Dialect Options): Add cross-reference to -std option.\n\t* doc/standards.texi (C++ Language): Document C++14 support.\n\nFrom-SVN: r232349", "tree": {"sha": "8230062380c1875d07b1bd6eb662cbad7b1e7d2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8230062380c1875d07b1bd6eb662cbad7b1e7d2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36d421ec4e225557941d0a786acdf23a93d889a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d421ec4e225557941d0a786acdf23a93d889a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36d421ec4e225557941d0a786acdf23a93d889a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d421ec4e225557941d0a786acdf23a93d889a6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29176d57e6be3f93551b54bd87ccc92e830a28b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29176d57e6be3f93551b54bd87ccc92e830a28b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29176d57e6be3f93551b54bd87ccc92e830a28b9"}], "stats": {"total": 73, "additions": 52, "deletions": 21}, "files": [{"sha": "f4048fee830272e27adf54ffd221b6ebfd2a0f04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d421ec4e225557941d0a786acdf23a93d889a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d421ec4e225557941d0a786acdf23a93d889a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36d421ec4e225557941d0a786acdf23a93d889a6", "patch": "@@ -1,3 +1,9 @@\n+2016-01-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/invoke.texi (C Dialect Options): Adjust -std default for C++.\n+\t(C++ Dialect Options): Add cross-reference to -std option.\n+\t* doc/standards.texi (C++ Language): Document C++14 support.\n+\n 2016-01-13  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def (BU_FLOAT128_2): Add support"}, {"sha": "207df12022609f724489a347f9d2b29c891005f7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d421ec4e225557941d0a786acdf23a93d889a6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d421ec4e225557941d0a786acdf23a93d889a6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=36d421ec4e225557941d0a786acdf23a93d889a6", "patch": "@@ -1784,8 +1784,7 @@ additional defect reports. Same as @option{-ansi} for C++ code.\n \n @item gnu++98\n @itemx gnu++03\n-GNU dialect of @option{-std=c++98}.  This is the default for\n-C++ code.\n+GNU dialect of @option{-std=c++98}.\n \n @item c++11\n @itemx c++0x\n@@ -1805,6 +1804,7 @@ The name @samp{c++1y} is deprecated.\n @item gnu++14\n @itemx gnu++1y\n GNU dialect of @option{-std=c++14}.\n+This is the default for C++ code.\n The name @samp{gnu++1y} is deprecated.\n \n @item c++1z\n@@ -2132,6 +2132,10 @@ In this example, only @option{-fstrict-enums} is an option meant\n only for C++ programs; you can use the other options with any\n language supported by GCC@.\n \n+Some options for compiling C programs, such as @option{-std}, are also\n+relevant for C++ programs.\n+@xref{C Dialect Options,,Options Controlling C Dialect}.\n+\n Here is a list of options that are @emph{only} for compiling C++ programs:\n \n @table @gcctabopt\n@@ -2317,7 +2321,8 @@ otherwise be invalid, or have different behavior.\n @opindex fno-gnu-keywords\n Do not recognize @code{typeof} as a keyword, so that code can use this\n word as an identifier.  You can use the keyword @code{__typeof__} instead.\n-@option{-ansi} implies @option{-fno-gnu-keywords}.\n+This option is implied by the strict ISO C++ dialects: @option{-ansi},\n+@option{-std=c++98}, @option{-std=c++11}, etc.\n \n @item -fno-implicit-templates\n @opindex fno-implicit-templates"}, {"sha": "e029077663054348c66c912a562685e467442de0", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 38, "deletions": 18, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d421ec4e225557941d0a786acdf23a93d889a6/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d421ec4e225557941d0a786acdf23a93d889a6/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=36d421ec4e225557941d0a786acdf23a93d889a6", "patch": "@@ -105,7 +105,7 @@ standard version were referred to as @dfn{C1X}.)\n By default, GCC provides some extensions to the C language that on\n rare occasions conflict with the C standard.  @xref{C\n Extensions,,Extensions to the C Language Family}.  Use of the\n-@option{-std} options listed above will disable these extensions where\n+@option{-std} options listed above disables these extensions where\n they conflict with the C standard version selected.  You may also\n select an extended version of the C language explicitly with\n @option{-std=gnu90} (for C90 with GNU extensions), @option{-std=gnu99}\n@@ -171,8 +171,8 @@ information concerning the history of C that is available online, see\n \n @section C++ Language\n \n-GCC supports the original ISO C++ standard (1998) and contains\n-experimental support for the second ISO C++ standard (2011).\n+GCC supports the original ISO C++ standard published in 1998,\n+and the 2011 and 2014 revisions.\n \n The original ISO C++ standard was published as the ISO standard (ISO/IEC\n 14882:1998) and amended by a Technical Corrigenda published in 2003\n@@ -187,26 +187,46 @@ warnings).\n \n A revised ISO C++ standard was published in 2011 as ISO/IEC\n 14882:2011, and is referred to as C++11; before its publication it was\n-commonly referred to as C++0x.  C++11 contains several\n-changes to the C++ language, most of which have been implemented in an\n-experimental C++11 mode in GCC@.  For information\n-regarding the C++11 features available in the experimental C++11 mode,\n-see @uref{http://gcc.gnu.org/projects/@/cxx0x.html}. To select this\n-standard in GCC, use the option @option{-std=c++11}; to obtain all the\n-diagnostics required by the standard, you should also specify\n-@option{-pedantic} (or @option{-pedantic-errors} if you want them to\n-be errors rather than warnings).\n+commonly referred to as C++0x.  C++11 contains several changes to the\n+C++ language, all of which have been implemented in GCC@. For details\n+see @uref{https://gcc.gnu.org/projects/@/cxx0x.html}.\n+To select this standard in GCC, use the option @option{-std=c++11}.\n+\n+Another revised ISO C++ standard was published in 2014 as ISO/IEC\n+14882:2014, and is referred to as C++14; before its publication it was\n+sometimes referred to as C++1y.  C++14 contains several further\n+changes to the C++ language, all of which have been implemented in GCC@.\n+For details see @uref{https://gcc.gnu.org/projects/@/cxx1y.html}.\n+To select this standard in GCC, use the option @option{-std=c++14}.\n+\n+GCC also supports the C++ Concepts Technical Specification,\n+ISO/IEC TS 19217:2015, which allows constraints to be defined for templates,\n+allowing template arguments to be checked and for templates to be\n+overloaded or specialized based on the constraints. Support for C++ Concepts\n+is included in an experimental C++1z mode that corresponds to the next\n+revision of the ISO C++ standard, expected to be published in 2017. To enable\n+C++1z support in GCC, use the option @option{-std=c++17} or\n+@option{-std=c++1z}.\n \n More information about the C++ standards is available on the ISO C++\n committee's web site at @uref{http://www.open-std.org/@/jtc1/@/sc22/@/wg21/}.\n \n-By default, GCC provides some extensions to the C++ language; @xref{C++\n+To obtain all the diagnostics required by any of the standard versions\n+described above you should specify @option{-pedantic}\n+or @option{-pedantic-errors}, otherwise GCC will allow some non-ISO C++\n+features as extensions. @xref{Warning Options}.\n+\n+By default, GCC also provides some additional extensions to the C++ language\n+that on rare occasions conflict with the C++ standard.  @xref{C++\n Dialect Options,Options Controlling C++ Dialect}.  Use of the\n-@option{-std} option listed above will disable these extensions.  You\n-may also select an extended version of the C++ language explicitly with\n-@option{-std=gnu++98} (for C++98 with GNU extensions) or\n-@option{-std=gnu++11} (for C++11 with GNU extensions).  The default, if\n-no C++ language dialect options are given, is @option{-std=gnu++98}.\n+@option{-std} options listed above disables these extensions where they\n+they conflict with the C++ standard version selected.  You may also\n+select an extended version of the C++ language explicitly with\n+@option{-std=gnu++98} (for C++98 with GNU extensions), or\n+@option{-std=gnu++11} (for C++11 with GNU extensions), or\n+@option{-std=gnu++14} (for C++14 with GNU extensions), or\n+@option{-std=gnu++1z} (for C++1z with GNU extensions).  The default, if\n+no C++ language dialect options are given, is @option{-std=gnu++14}.\n \n @section Objective-C and Objective-C++ Languages\n @cindex Objective-C"}]}