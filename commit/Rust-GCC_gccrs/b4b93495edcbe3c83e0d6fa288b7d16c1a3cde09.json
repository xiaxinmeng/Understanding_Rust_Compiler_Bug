{"sha": "b4b93495edcbe3c83e0d6fa288b7d16c1a3cde09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRiOTM0OTVlZGNiZTNjODNlMGQ2ZmEyODhiN2QxNmMxYTNjZGUwOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-14T04:20:18Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-14T04:20:18Z"}, "message": "(function_arg, function_arg_advance):\n\nIn default case, handle complex modes much like BLKmode.\n(function_arg_partial_nregs): Likewise.\n\nFrom-SVN: r6085", "tree": {"sha": "9bb3881b053a21e5f8b1c6a7c8ee32618f89789d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bb3881b053a21e5f8b1c6a7c8ee32618f89789d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4b93495edcbe3c83e0d6fa288b7d16c1a3cde09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b93495edcbe3c83e0d6fa288b7d16c1a3cde09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4b93495edcbe3c83e0d6fa288b7d16c1a3cde09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b93495edcbe3c83e0d6fa288b7d16c1a3cde09/comments", "author": null, "committer": null, "parents": [{"sha": "21798cd8151ec356f7b3b8d8fc6395085e5a3e2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21798cd8151ec356f7b3b8d8fc6395085e5a3e2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21798cd8151ec356f7b3b8d8fc6395085e5a3e2d"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "b7a53c2b15b1bbcd0040bd9b08f454a27f0c398e", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b93495edcbe3c83e0d6fa288b7d16c1a3cde09/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b93495edcbe3c83e0d6fa288b7d16c1a3cde09/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=b4b93495edcbe3c83e0d6fa288b7d16c1a3cde09", "patch": "@@ -2504,11 +2504,15 @@ function_arg_advance (cum, mode, type, named)\n   cum->arg_number++;\n   switch (mode)\n     {\n-    default:\n-      error (\"Illegal mode given to function_arg_advance\");\n+    case VOIDmode:\n       break;\n \n-    case VOIDmode:\n+    default:\n+      if (GET_MODE_CLASS (mode) != MODE_COMPLEX_INT\n+\t  && GET_MODE_CLASS (mode) != MODE_COMPLEX_FLOAT)\n+\tabort ();\n+      cum->gp_reg_found = 1;\n+      cum->arg_words += (GET_MODE_SIZE (mode) + 3) / 4;\n       break;\n \n     case BLKmode:\n@@ -2563,10 +2567,6 @@ function_arg (cum, mode, type, named)\n \n   switch (mode)\n     {\n-    default:\n-      error (\"Illegal mode given to function_arg\");\n-      break;\n-\n     case SFmode:\n       if (cum->gp_reg_found || cum->arg_number >= 2)\n \tregbase = GP_ARG_FIRST;\n@@ -2585,6 +2585,12 @@ function_arg (cum, mode, type, named)\n \t\t : FP_ARG_FIRST);\n       break;\n \n+    default:\n+      if (GET_MODE_CLASS (mode) != MODE_COMPLEX_INT\n+\t  && GET_MODE_CLASS (mode) != MODE_COMPLEX_FLOAT)\n+\tabort ();\n+\n+      /* Drops through.  */\n     case BLKmode:\n       if (type != (tree)0 && TYPE_ALIGN (type) > BITS_PER_WORD)\n \tcum->arg_words += (cum->arg_words & 1);\n@@ -2658,9 +2664,16 @@ function_arg_partial_nregs (cum, mode, type, named)\n      tree type;\t\t\t/* type of the argument or 0 if lib support */\n      int named;\t\t\t/* != 0 for normal args, == 0 for ... args */\n {\n-  if (mode == BLKmode && cum->arg_words < MAX_ARGS_IN_REGISTERS)\n+  if ((mode == BLKmode\n+       || GET_MODE_CLASS (mode) != MODE_COMPLEX_INT\n+       || GET_MODE_CLASS (mode) != MODE_COMPLEX_FLOAT)\n+      && cum->arg_words < MAX_ARGS_IN_REGISTERS)\n     {\n-      int words = (int_size_in_bytes (type) + 3) / 4;\n+      int words;\n+      if (mode == BLKmode)\n+\twords = (int_size_in_bytes (type) + 3) / 4;\n+      else\n+\twords = (GET_MODE_SIZE (mode) + 3) / 4;\n \n       if (words + cum->arg_words <= MAX_ARGS_IN_REGISTERS)\n \treturn 0;\t\t/* structure fits in registers */"}]}