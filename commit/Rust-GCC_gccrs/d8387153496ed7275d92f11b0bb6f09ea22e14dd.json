{"sha": "d8387153496ed7275d92f11b0bb6f09ea22e14dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgzODcxNTM0OTZlZDcyNzVkOTJmMTFiMGJiNmYwOWVhMjJlMTRkZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-11-15T14:01:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:01:49Z"}, "message": "sem_aggr.adb (Resolve_Aggregate): An others choice is legal on the rhs of an assignment even if...\n\n2005-11-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Aggregate): An others choice is legal on the\n\trhs of an assignment even if the type is unconstrained, when the\n\tcontext is non-expanding.\n\tIn an inlined body, if the context type is private,\n\tresolve with its full view, which must be a composite type.\n\nFrom-SVN: r106997", "tree": {"sha": "5afb4a98863d45cbc27678a0ba1b942153fc3b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5afb4a98863d45cbc27678a0ba1b942153fc3b95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8387153496ed7275d92f11b0bb6f09ea22e14dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8387153496ed7275d92f11b0bb6f09ea22e14dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8387153496ed7275d92f11b0bb6f09ea22e14dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8387153496ed7275d92f11b0bb6f09ea22e14dd/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a05076ba9dc1601cd22fb0c3364339d8ee6fc10b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05076ba9dc1601cd22fb0c3364339d8ee6fc10b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a05076ba9dc1601cd22fb0c3364339d8ee6fc10b"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "b67a6a85fcb09febf0b581a30c37d15b3938fd8c", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8387153496ed7275d92f11b0bb6f09ea22e14dd/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8387153496ed7275d92f11b0bb6f09ea22e14dd/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=d8387153496ed7275d92f11b0bb6f09ea22e14dd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -979,7 +979,14 @@ package body Sem_Aggr is\n             --  in which the array aggregate occurs. If the context does not\n             --  permit it, or the aggregate type is unconstrained, an others\n             --  choice is not allowed.\n-            --\n+\n+            --  If expansion is disabled (generic context, or semantics-only\n+            --  mode) actual subtypes cannot be constructed, and the type of\n+            --  an object may be its unconstrained nominal type. However, if\n+            --  the context is an assignment, we assume that \"others\" is\n+            --  allowed, because the target of the assignment will have a\n+            --  constrained subtype when fully compiled.\n+\n             --  Note that there is no node for Explicit_Actual_Parameter.\n             --  To test for this context we therefore have to test for node\n             --  N_Parameter_Association which itself appears only if there is a\n@@ -1012,6 +1019,16 @@ package body Sem_Aggr is\n                     Component_Typ  => Component_Type (Typ),\n                     Others_Allowed => True);\n \n+            elsif not Expander_Active\n+              and then Pkind = N_Assignment_Statement\n+            then\n+               Aggr_Resolved :=\n+                 Resolve_Array_Aggregate\n+                   (N,\n+                    Index          => First_Index (Aggr_Typ),\n+                    Index_Constr   => First_Index (Typ),\n+                    Component_Typ  => Component_Type (Typ),\n+                    Others_Allowed => True);\n             else\n                Aggr_Resolved :=\n                  Resolve_Array_Aggregate\n@@ -1031,9 +1048,15 @@ package body Sem_Aggr is\n             Set_Etype (N, Aggr_Subtyp);\n          end Array_Aggregate;\n \n+      elsif Is_Private_Type (Typ)\n+        and then Present (Full_View (Typ))\n+        and then In_Inlined_Body\n+        and then Is_Composite_Type (Full_View (Typ))\n+      then\n+         Resolve (N, Full_View (Typ));\n+\n       else\n          Error_Msg_N (\"illegal context for aggregate\", N);\n-\n       end if;\n \n       --  If we can determine statically that the evaluation of the\n@@ -1889,7 +1912,6 @@ package body Sem_Aggr is\n          Check_Length (Aggr_Low, Aggr_High, Nb_Elements);\n          Check_Length (Index_Typ_Low, Index_Typ_High, Nb_Elements);\n          Check_Length (Index_Base_Low, Index_Base_High, Nb_Elements);\n-\n       end if;\n \n       if Raises_Constraint_Error (Aggr_Low)\n@@ -2312,7 +2334,6 @@ package body Sem_Aggr is\n                     (\"initialization not allowed for limited types\", N);\n                   Explain_Limited_Type (Etype (Compon), Compon);\n                end if;\n-\n             end if;\n          end Check_Non_Limited_Type;\n "}]}