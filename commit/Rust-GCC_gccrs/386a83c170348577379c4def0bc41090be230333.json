{"sha": "386a83c170348577379c4def0bc41090be230333", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg2YTgzYzE3MDM0ODU3NzM3OWM0ZGVmMGJjNDEwOTBiZTIzMDMzMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-05T09:03:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-05T09:03:50Z"}, "message": "re PR bootstrap/89560 (ICE In function 'rtx_def* gen_vec_extract_lo_v64qi(rtx, rtx)')\n\n\tPR bootstrap/89560\n\t* fold-const.c (fold_checksum_tree): Don't use fixed size buffer,\n\tinstead alloca it only when needed with the needed size.\n\n\t* g++.dg/other/pr89560.C: New test.\n\nFrom-SVN: r269386", "tree": {"sha": "f68b8460b2a769abc7e8b4a679c5b72697838172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f68b8460b2a769abc7e8b4a679c5b72697838172"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/386a83c170348577379c4def0bc41090be230333", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386a83c170348577379c4def0bc41090be230333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/386a83c170348577379c4def0bc41090be230333", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386a83c170348577379c4def0bc41090be230333/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea5212b741b5cc751d0d8271a9666c4ad0b4e799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea5212b741b5cc751d0d8271a9666c4ad0b4e799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea5212b741b5cc751d0d8271a9666c4ad0b4e799"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "788ce54da7f982678e6829c1195760ff6c0b274f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386a83c170348577379c4def0bc41090be230333/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386a83c170348577379c4def0bc41090be230333/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=386a83c170348577379c4def0bc41090be230333", "patch": "@@ -1,5 +1,9 @@\n 2019-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR bootstrap/89560\n+\t* fold-const.c (fold_checksum_tree): Don't use fixed size buffer,\n+\tinstead alloca it only when needed with the needed size.\n+\n \tPR tree-optimization/89570\n \t* match.pd (vec_cond into cond_op simplification): Guard with\n \tvectorized_internal_fn_supported_p test and #if GIMPLE."}, {"sha": "571566aa6bca91e20153d7bfa4d6cfcd897cd97b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386a83c170348577379c4def0bc41090be230333/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386a83c170348577379c4def0bc41090be230333/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=386a83c170348577379c4def0bc41090be230333", "patch": "@@ -12112,7 +12112,7 @@ fold_checksum_tree (const_tree expr, struct md5_ctx *ctx,\n {\n   const tree_node **slot;\n   enum tree_code code;\n-  union tree_node buf;\n+  union tree_node *buf;\n   int i, len;\n \n  recursive_label:\n@@ -12127,11 +12127,13 @@ fold_checksum_tree (const_tree expr, struct md5_ctx *ctx,\n       && HAS_DECL_ASSEMBLER_NAME_P (expr))\n     {\n       /* Allow DECL_ASSEMBLER_NAME and symtab_node to be modified.  */\n-      memcpy ((char *) &buf, expr, tree_size (expr));\n-      SET_DECL_ASSEMBLER_NAME ((tree)&buf, NULL);\n-      buf.decl_with_vis.symtab_node = NULL;\n-      buf.base.nowarning_flag = 0;\n-      expr = (tree) &buf;\n+      size_t sz = tree_size (expr);\n+      buf = XALLOCAVAR (union tree_node, sz);\n+      memcpy ((char *) buf, expr, sz);\n+      SET_DECL_ASSEMBLER_NAME ((tree) buf, NULL);\n+      buf->decl_with_vis.symtab_node = NULL;\n+      buf->base.nowarning_flag = 0;\n+      expr = (tree) buf;\n     }\n   else if (TREE_CODE_CLASS (code) == tcc_type\n \t   && (TYPE_POINTER_TO (expr)\n@@ -12143,8 +12145,10 @@ fold_checksum_tree (const_tree expr, struct md5_ctx *ctx,\n     {\n       /* Allow these fields to be modified.  */\n       tree tmp;\n-      memcpy ((char *) &buf, expr, tree_size (expr));\n-      expr = tmp = (tree) &buf;\n+      size_t sz = tree_size (expr);\n+      buf = XALLOCAVAR (union tree_node, sz);\n+      memcpy ((char *) buf, expr, sz);\n+      expr = tmp = (tree) buf;\n       TYPE_CONTAINS_PLACEHOLDER_INTERNAL (tmp) = 0;\n       TYPE_POINTER_TO (tmp) = NULL;\n       TYPE_REFERENCE_TO (tmp) = NULL;\n@@ -12160,9 +12164,11 @@ fold_checksum_tree (const_tree expr, struct md5_ctx *ctx,\n     {\n       /* Allow TREE_NO_WARNING to be set.  Perhaps we shouldn't allow that\n \t and change builtins.c etc. instead - see PR89543.  */\n-      memcpy ((char *) &buf, expr, tree_size (expr));\n-      buf.base.nowarning_flag = 0;\n-      expr = (tree) &buf;\n+      size_t sz = tree_size (expr);\n+      buf = XALLOCAVAR (union tree_node, sz);\n+      memcpy ((char *) buf, expr, sz);\n+      buf->base.nowarning_flag = 0;\n+      expr = (tree) buf;\n     }\n   md5_process_bytes (expr, tree_size (expr), ctx);\n   if (CODE_CONTAINS_STRUCT (code, TS_TYPED))"}, {"sha": "b9bfeced886778c40e05942fcdc94a8b620462dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386a83c170348577379c4def0bc41090be230333/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386a83c170348577379c4def0bc41090be230333/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=386a83c170348577379c4def0bc41090be230333", "patch": "@@ -1,5 +1,8 @@\n 2019-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR bootstrap/89560\n+\t* g++.dg/other/pr89560.C: New test.\n+\n \tPR tree-optimization/89570\n \t* gcc.dg/pr89570.c: New test.\n "}, {"sha": "deb983969d75a1fdac95ce30fbeb6224ecbc7208", "filename": "gcc/testsuite/g++.dg/other/pr89560.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/386a83c170348577379c4def0bc41090be230333/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr89560.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/386a83c170348577379c4def0bc41090be230333/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr89560.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr89560.C?ref=386a83c170348577379c4def0bc41090be230333", "patch": "@@ -0,0 +1,13 @@\n+// PR bootstrap/89560\n+// { dg-do compile }\n+\n+#define TEN(x) x##0, x##1, x##2, x##3, x##4, x##5, x##6, x##7, x##8, x##9,\n+#define HUNDRED(x) TEN(x##0) TEN(x##1) TEN(x##2) TEN(x##3) TEN(x##4) \\\n+\t\t   TEN(x##5) TEN(x##6) TEN(x##7) TEN(x##8) TEN(x##9)\n+int foo (int, ...);\n+\n+int\n+bar ()\n+{\n+  return (foo (HUNDRED (1) 0));\n+}"}]}