{"sha": "2daed0953effbc0bcb3e523a8dd4d0ea2f06cd84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRhZWQwOTUzZWZmYmMwYmNiM2U1MjNhOGRkNGQwZWEyZjA2Y2Q4NA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-21T06:18:59Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-21T06:18:59Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r351", "tree": {"sha": "4214f88b4cc39e0858dee9c4b244d84ae223a4dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4214f88b4cc39e0858dee9c4b244d84ae223a4dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2daed0953effbc0bcb3e523a8dd4d0ea2f06cd84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2daed0953effbc0bcb3e523a8dd4d0ea2f06cd84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2daed0953effbc0bcb3e523a8dd4d0ea2f06cd84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2daed0953effbc0bcb3e523a8dd4d0ea2f06cd84/comments", "author": null, "committer": null, "parents": [{"sha": "9c21a7e7ae7182ca7ac006d245da4622c4af431e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c21a7e7ae7182ca7ac006d245da4622c4af431e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c21a7e7ae7182ca7ac006d245da4622c4af431e"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "28518652f86d1acaa924947051e6c6c22414285d", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2daed0953effbc0bcb3e523a8dd4d0ea2f06cd84/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2daed0953effbc0bcb3e523a8dd4d0ea2f06cd84/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=2daed0953effbc0bcb3e523a8dd4d0ea2f06cd84", "patch": "@@ -1464,12 +1464,14 @@\n   \"\"\n   \"j%C0 %l1\") ; %C0 negates condition\n \f\n-;; Recognize jbs, jlbs, jbc and jlbc instructions.\n+;; Recognize jbs, jlbs, jbc and jlbc instructions.  Note that the operand\n+;; if this insn is SImode in the hardware.  However, if it is memory,\n+;; we use QImode.  So we can't allow the memory address to be indexed.\n \n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else\n-\t (ne (zero_extract:SI (match_operand:QI 0 \"nonimmediate_operand\" \"g,g\")\n+\t (ne (zero_extract:SI (match_operand:QI 0 \"reg_or_nxmem_operand\" \"g,g\")\n \t\t\t      (const_int 1)\n \t\t\t      (match_operand:SI 1 \"general_operand\" \"I,g\"))\n \t     (const_int 0))\n@@ -1483,7 +1485,7 @@\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else\n-\t (eq (zero_extract:SI (match_operand:QI 0 \"nonimmediate_operand\" \"g,g\")\n+\t (eq (zero_extract:SI (match_operand:QI 0 \"reg_or_nxmem_operand\" \"g,g\")\n \t\t\t      (const_int 1)\n \t\t\t      (match_operand:SI 1 \"general_operand\" \"I,g\"))\n \t     (const_int 0))"}]}