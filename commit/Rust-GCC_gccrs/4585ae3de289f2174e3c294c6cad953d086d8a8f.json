{"sha": "4585ae3de289f2174e3c294c6cad953d086d8a8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4NWFlM2RlMjg5ZjIxNzRlM2MyOTRjNmNhZDk1M2QwODZkOGE4Zg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2001-12-22T00:42:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-12-22T00:42:46Z"}, "message": "os_defines.h: Include <sys/_inttypes.h.\n\n        * config/os/hpux/bits/os_defines.h: Include <sys/_inttypes.h.\n        Define strtoll and strtoull.  Provide prototypes for\n        __strtoll and __strtoull.  Define _GLIBCPP_USE_LONG_LONG\n        unconditionally.\n\nFrom-SVN: r48260", "tree": {"sha": "466dfaf8e60d97857a783b501005eec5828af6e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/466dfaf8e60d97857a783b501005eec5828af6e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4585ae3de289f2174e3c294c6cad953d086d8a8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4585ae3de289f2174e3c294c6cad953d086d8a8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4585ae3de289f2174e3c294c6cad953d086d8a8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4585ae3de289f2174e3c294c6cad953d086d8a8f/comments", "author": null, "committer": null, "parents": [{"sha": "415f500c764abd8c051f9c380c9d4adbb6e47759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415f500c764abd8c051f9c380c9d4adbb6e47759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415f500c764abd8c051f9c380c9d4adbb6e47759"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "1332b802117339ca738727ac0e8993e6aca700ca", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4585ae3de289f2174e3c294c6cad953d086d8a8f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4585ae3de289f2174e3c294c6cad953d086d8a8f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4585ae3de289f2174e3c294c6cad953d086d8a8f", "patch": "@@ -1,5 +1,10 @@\n Fri Dec 21 17:35:21 2001  Jeffrey A Law  (law@redhat.com)\n \n+\t* config/os/hpux/bits/os_defines.h: Include <sys/_inttypes.h.\n+\tDefine strtoll and strtoull.  Provide prototypes for\n+\t__strtoll and __strtoull.  Define _GLIBCPP_USE_LONG_LONG\n+\tunconditionally.\n+\n \t* src/locale-inst.cc: Include <bits/std_cstdlib.h>\n \n \t* configure.target: Fix typo in hpux case."}, {"sha": "323c0c66d71be2c01ecbdc822a41c5e065527b07", "filename": "libstdc++-v3/config/os/hpux/bits/os_defines.h", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4585ae3de289f2174e3c294c6cad953d086d8a8f/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4585ae3de289f2174e3c294c6cad953d086d8a8f/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fbits%2Fos_defines.h?ref=4585ae3de289f2174e3c294c6cad953d086d8a8f", "patch": "@@ -43,4 +43,27 @@\n #define __glibcpp_long_bits 64\n #endif\n \n+/* HP-UX, for reasons unknown choose to use a different name for\n+   the string to [unsigned] long long conversion routines.\n+\n+   Furthermore, instead of having the prototypes in stdlib.h like\n+   everyone else, they put them into a non-standard header\n+   <inttypes.h>.  Ugh.\n+\n+   <inttypes.h> defines a variety of things, some of which we \n+   probably do not want.  So we just provide prototypes for\n+   the functions we care about here.\n+\n+   However, to do that, we must include <sys/_inttypes.h> to get\n+   intmax_t and uintmax_t.  Luckily <sys/_inttypes.h> looks a\n+   lot cleaner as far as namespace pollution is concerned. \n+\n+   We also force _GLIBCPP_USE_LONG_LONG here so that we don't have\n+   to bastardize configure to deal with this sillyness.  */\n+#include <sys/_inttypes.h>\n+#define strtoll __strtoll\n+#define strtoull __strtoull\n+extern intmax_t __strtoll (const char *, char**, int);\n+extern uintmax_t __strtoull (const char *, char**, int);\n+#define _GLIBCPP_USE_LONG_LONG 1\n #endif"}]}