{"sha": "d998dd65ec93baa138c10fe1bd11da1ba19b439e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5OGRkNjVlYzkzYmFhMTM4YzEwZmUxYmQxMWRhMWJhMTliNDM5ZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-11-22T19:22:21Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-11-22T19:22:21Z"}, "message": "re PR middle-end/23606 (fold does not fold (type)(a == b) into a == b (with type as the type))\n\n2005-11-22  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/23606\n        * fold-const.c (fold_unary) <case NOP_EXPR, CONVERT_EXPR>: For\n        COMPARISON_CLASS_P and an integral types create create a new\n        expression with the new type and fold that.\n\nFrom-SVN: r107370", "tree": {"sha": "6be3829aae3c9a7f5466fdc27a465d827c850835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6be3829aae3c9a7f5466fdc27a465d827c850835"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d998dd65ec93baa138c10fe1bd11da1ba19b439e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d998dd65ec93baa138c10fe1bd11da1ba19b439e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d998dd65ec93baa138c10fe1bd11da1ba19b439e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d998dd65ec93baa138c10fe1bd11da1ba19b439e/comments", "author": null, "committer": null, "parents": [{"sha": "1c991891912695c2e6f536bb1d453e6fec331504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c991891912695c2e6f536bb1d453e6fec331504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c991891912695c2e6f536bb1d453e6fec331504"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "f16711a73099969fff95b317fb07d641f27fe1da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d998dd65ec93baa138c10fe1bd11da1ba19b439e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d998dd65ec93baa138c10fe1bd11da1ba19b439e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d998dd65ec93baa138c10fe1bd11da1ba19b439e", "patch": "@@ -1,3 +1,10 @@\n+2005-11-22  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/23606\n+\t* fold-const.c (fold_unary) <case NOP_EXPR, CONVERT_EXPR>: For\n+\tCOMPARISON_CLASS_P and an integral types create create a new\n+\texpression with the new type and fold that.\n+\n 2005-11-22  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR target/24988"}, {"sha": "2d750f6c94c17adb4765c4be6ea34aef8ee7fddb", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d998dd65ec93baa138c10fe1bd11da1ba19b439e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d998dd65ec93baa138c10fe1bd11da1ba19b439e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d998dd65ec93baa138c10fe1bd11da1ba19b439e", "patch": "@@ -6771,6 +6771,12 @@ fold_unary (enum tree_code code, tree type, tree op0)\n     case FIX_ROUND_EXPR:\n       if (TREE_TYPE (op0) == type)\n \treturn op0;\n+      \n+      /* If we have (type) (a CMP b) and type is an integal type, return\n+         new expression involving the new type.  */\n+      if (COMPARISON_CLASS_P (op0) && INTEGRAL_TYPE_P (type))\n+\treturn fold_build2 (TREE_CODE (op0), type, TREE_OPERAND (op0, 0),\n+\t\t\t    TREE_OPERAND (op0, 1));\n \n       /* Handle cases of two conversions in a row.  */\n       if (TREE_CODE (op0) == NOP_EXPR"}]}