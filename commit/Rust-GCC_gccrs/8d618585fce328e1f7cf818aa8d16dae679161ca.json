{"sha": "8d618585fce328e1f7cf818aa8d16dae679161ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2MTg1ODVmY2UzMjhlMWY3Y2Y4MThhYThkMTZkYWU2NzkxNjFjYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-16T19:19:12Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-16T19:19:12Z"}, "message": "(get_secondary_mem): Don't save address if it isn't valid.\n\nFrom-SVN: r2886", "tree": {"sha": "752af2f30aa95e4783a7a778c83b00a623d53588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/752af2f30aa95e4783a7a778c83b00a623d53588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d618585fce328e1f7cf818aa8d16dae679161ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d618585fce328e1f7cf818aa8d16dae679161ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d618585fce328e1f7cf818aa8d16dae679161ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d618585fce328e1f7cf818aa8d16dae679161ca/comments", "author": null, "committer": null, "parents": [{"sha": "c8c29f855dffe19d597187293ac21e87d249357f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c29f855dffe19d597187293ac21e87d249357f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c29f855dffe19d597187293ac21e87d249357f"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "f9b0a0ce3c3ac2576d06e291fa467210c7a484a0", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d618585fce328e1f7cf818aa8d16dae679161ca/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d618585fce328e1f7cf818aa8d16dae679161ca/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=8d618585fce328e1f7cf818aa8d16dae679161ca", "patch": "@@ -431,7 +431,12 @@ get_secondary_mem (x, mode)\n   if (! mem_valid)\n     find_reloads_address (mode, NULL_PTR, XEXP (loc, 0), &XEXP (loc, 0), x, 0);\n \n-  secondary_memlocs_elim[(int) mode] = loc;\n+  /* If the address was not valid to begin with, we can not save it, because\n+     there is no guarantee that the reloads needed to make it valid will\n+     occur before every use of this address.  */\n+\n+  else\n+    secondary_memlocs_elim[(int) mode] = loc;\n \n   return loc;\n }"}]}