{"sha": "1c72f460e9e4fce1220e426989226dfeb0db816e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3MmY0NjBlOWU0ZmNlMTIyMGU0MjY5ODkyMjZkZmViMGRiODE2ZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-05T21:45:27Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-05T21:46:46Z"}, "message": "libstdc++: Minor header cleanup in <numeric>\n\nWhen adding new features to <numeric> I included the required headers\nadjacent to the new code. This cleans it up by moving all the includes\nto the start of the file.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/numeric: Move all #include directives to the top\n\tof the header.\n\t* testsuite/26_numerics/gcd/gcd_neg.cc: Adjust dg-error line\n\tnumbers.\n\t* testsuite/26_numerics/lcm/lcm_neg.cc: Likewise.", "tree": {"sha": "7591372ecfb33588126986cb9a475bd418c91dcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7591372ecfb33588126986cb9a475bd418c91dcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c72f460e9e4fce1220e426989226dfeb0db816e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c72f460e9e4fce1220e426989226dfeb0db816e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c72f460e9e4fce1220e426989226dfeb0db816e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c72f460e9e4fce1220e426989226dfeb0db816e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea6da7f50fe2adc3a09fc10a3f437902c40ebff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6da7f50fe2adc3a09fc10a3f437902c40ebff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6da7f50fe2adc3a09fc10a3f437902c40ebff9"}], "stats": {"total": 55, "additions": 25, "deletions": 30}, "files": [{"sha": "af1e7884f6a4e09fb2b0739c1f214f4d8147e1d0", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 17, "deletions": 22, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c72f460e9e4fce1220e426989226dfeb0db816e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c72f460e9e4fce1220e426989226dfeb0db816e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=1c72f460e9e4fce1220e426989226dfeb0db816e", "patch": "@@ -60,12 +60,24 @@\n #include <bits/c++config.h>\n #include <bits/stl_iterator_base_types.h>\n #include <bits/stl_numeric.h>\n-#include <ext/numeric_traits.h>\n \n #ifdef _GLIBCXX_PARALLEL\n # include <parallel/numeric>\n #endif\n \n+#if __cplusplus >= 201402L\n+# include <type_traits>\n+# include <bit>\n+#endif\n+\n+#if __cplusplus >= 201703L\n+# include <bits/stl_function.h>\n+#endif\n+\n+#if __cplusplus > 201703L\n+# include <limits>\n+#endif\n+\n /**\n  * @defgroup numerics Numerics\n  *\n@@ -74,14 +86,11 @@\n  * arrays, generalized numeric algorithms, and mathematical special functions.\n  */\n \n-#if __cplusplus >= 201402L\n-#include <type_traits>\n-#include <bit>\n-\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#if __cplusplus >= 201402L\n namespace __detail\n {\n   // std::abs is not constexpr, doesn't support unsigned integers,\n@@ -181,18 +190,10 @@ namespace __detail\n     }\n \n #endif // C++17\n-\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace std\n-\n #endif // C++14\n \n #if __cplusplus > 201703L\n-#include <limits>\n \n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // midpoint\n # define __cpp_lib_interpolate 201902L\n \n@@ -241,17 +242,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       static_assert( sizeof(_Tp) != 0, \"type must be complete\" );\n       return __a  + (__b - __a) / 2;\n     }\n-_GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace std\n-\n #endif // C++20\n \n-#if __cplusplus > 201402L\n-#include <bits/stl_function.h>\n-\n-namespace std _GLIBCXX_VISIBILITY(default)\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+#if __cplusplus >= 201703L\n \n #if __cplusplus > 201703L\n #define __cpp_lib_constexpr_numeric 201911L\n@@ -720,10 +713,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   // @} group numeric_ops\n+#endif // C++17\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n+#if __cplusplus >= 201703L\n // Parallel STL algorithms\n # if _PSTL_EXECUTION_POLICIES_DEFINED\n // If <execution> has already been included, pull in implementations"}, {"sha": "4294a2c69cee6b8fa09ea4bac66ca46d6d82a77b", "filename": "libstdc++-v3/testsuite/26_numerics/gcd/gcd_neg.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c72f460e9e4fce1220e426989226dfeb0db816e/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c72f460e9e4fce1220e426989226dfeb0db816e/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc?ref=1c72f460e9e4fce1220e426989226dfeb0db816e", "patch": "@@ -46,9 +46,9 @@ test01()\n   std::gcd<const int&, const int&>(0.1, 0.1);   // { dg-error \"from here\" }\n }\n \n-// { dg-error \"must be integers\" \"\" { target *-*-* } 160 }\n-// { dg-error \"must be integers\" \"\" { target *-*-* } 161 }\n-// { dg-error \"must not be bool\" \"\" { target *-*-* } 162 }\n-// { dg-error \"must not be bool\" \"\" { target *-*-* } 163 }\n+// { dg-error \"must be integers\" \"\" { target *-*-* } 169 }\n+// { dg-error \"must be integers\" \"\" { target *-*-* } 170 }\n+// { dg-error \"must not be bool\" \"\" { target *-*-* } 171 }\n+// { dg-error \"must not be bool\" \"\" { target *-*-* } 172 }\n // { dg-prune-output \"deleted function\" }\n // { dg-prune-output \"incomplete type .*make_unsigned\" }"}, {"sha": "114995cf0b9a065bab9a9a77933f198bdf0dfee2", "filename": "libstdc++-v3/testsuite/26_numerics/lcm/lcm_neg.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c72f460e9e4fce1220e426989226dfeb0db816e/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c72f460e9e4fce1220e426989226dfeb0db816e/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc?ref=1c72f460e9e4fce1220e426989226dfeb0db816e", "patch": "@@ -46,9 +46,9 @@ test01()\n   std::lcm<const int&, const int&>(0.1, 0.1);   // { dg-error \"from here\" }\n }\n \n-// { dg-error \"must be integers\" \"\" { target *-*-* } 174 }\n-// { dg-error \"must be integers\" \"\" { target *-*-* } 175 }\n-// { dg-error \"must not be bool\" \"\" { target *-*-* } 176 }\n-// { dg-error \"must not be bool\" \"\" { target *-*-* } 177 }\n+// { dg-error \"must be integers\" \"\" { target *-*-* } 183 }\n+// { dg-error \"must be integers\" \"\" { target *-*-* } 184 }\n+// { dg-error \"must not be bool\" \"\" { target *-*-* } 185 }\n+// { dg-error \"must not be bool\" \"\" { target *-*-* } 186 }\n // { dg-prune-output \"deleted function\" }\n // { dg-prune-output \"incomplete type .*make_unsigned\" }"}]}