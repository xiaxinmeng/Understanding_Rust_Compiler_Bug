{"sha": "ee768d85a8d24907a0ea43f482c873d372190391", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3NjhkODVhOGQyNDkwN2EwZWE0M2Y0ODJjODczZDM3MjE5MDM5MQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-04-24T06:01:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-04-24T06:01:34Z"}, "message": "sse.md (*vec_concatv2sf_sse4_1): Do not allow both input operands in memory.\n\n\t* config/i386/sse.md (*vec_concatv2sf_sse4_1): Do not allow both\n\tinput operands in memory.\n\t(*vec_concatv2si_sse4_1): Ditto.\n\t(*vec_concatv2df): Ditto, except for SSE3 and equal input operands.\n\t(vec_extract_lo_<mode><mask_name>): Change operand 1 predicate to\n\tregister_operand.\n\t(vec_extract_hi_v32hi): Ditto.\n\t(vec_extract_hi_v64hi): Ditto.\n\t(<mask_codefor>avx512f_unpckhpd512<mask_name>): Ditto.\n\nFrom-SVN: r222400", "tree": {"sha": "4b92808a0130b3ab22a99078863982044f8095f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b92808a0130b3ab22a99078863982044f8095f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee768d85a8d24907a0ea43f482c873d372190391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee768d85a8d24907a0ea43f482c873d372190391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee768d85a8d24907a0ea43f482c873d372190391", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee768d85a8d24907a0ea43f482c873d372190391/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8fceae614f031382bc1fa39f94c7d928b5d81f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fceae614f031382bc1fa39f94c7d928b5d81f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fceae614f031382bc1fa39f94c7d928b5d81f4e"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "5cbb130dfb5f5ac57775ff01aed9d803281d978d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee768d85a8d24907a0ea43f482c873d372190391/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee768d85a8d24907a0ea43f482c873d372190391/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee768d85a8d24907a0ea43f482c873d372190391", "patch": "@@ -1,3 +1,15 @@\n+2015-04-24  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (*vec_concatv2sf_sse4_1): Do not allow both\n+\tinput operands in memory.\n+\t(*vec_concatv2si_sse4_1): Ditto.\n+\t(*vec_concatv2df): Ditto, except for SSE3 and equal input operands.\n+\t(vec_extract_lo_<mode><mask_name>): Change operand 1 predicate to\n+\tregister_operand.\n+\t(vec_extract_hi_v32hi): Ditto.\n+\t(vec_extract_hi_v64hi): Ditto.\n+\t(<mask_codefor>avx512f_unpckhpd512<mask_name>): Ditto.\n+\n 2015-04-24  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \t    Steven Bosscher <steven@gcc.gnu.org>\n "}, {"sha": "16db216f51b367c0f98d5f8959777667a9a608ad", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee768d85a8d24907a0ea43f482c873d372190391/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee768d85a8d24907a0ea43f482c873d372190391/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ee768d85a8d24907a0ea43f482c873d372190391", "patch": "@@ -6322,11 +6322,14 @@\n ;; Although insertps takes register source, we prefer\n ;; unpcklps with register source since it is shorter.\n (define_insn \"*vec_concatv2sf_sse4_1\"\n-  [(set (match_operand:V2SF 0 \"register_operand\"     \"=Yr,*x,x,Yr,*x,x,x,*y ,*y\")\n+  [(set (match_operand:V2SF 0 \"register_operand\"\n+\t  \"=Yr,*x,x,Yr,*x,x,x,*y ,*y\")\n \t(vec_concat:V2SF\n-\t  (match_operand:SF 1 \"nonimmediate_operand\" \"  0, 0,x, 0,0, x,m, 0 , m\")\n-\t  (match_operand:SF 2 \"vector_move_operand\"  \" Yr,*x,x, m,m, m,C,*ym, C\")))]\n-  \"TARGET_SSE4_1\"\n+\t  (match_operand:SF 1 \"nonimmediate_operand\"\n+\t  \"  0, 0,x, 0,0, x,m, 0 , m\")\n+\t  (match_operand:SF 2 \"vector_move_operand\"\n+\t  \" Yr,*x,x, m,m, m,C,*ym, C\")))]\n+  \"TARGET_SSE4_1 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    unpcklps\\t{%2, %0|%0, %2}\n    unpcklps\\t{%2, %0|%0, %2}\n@@ -7056,7 +7059,7 @@\n (define_insn \"vec_extract_lo_<mode><mask_name>\"\n   [(set (match_operand:<ssehalfvecmode> 0 \"<store_mask_predicate>\" \"=<store_mask_constraint>\")\n \t(vec_select:<ssehalfvecmode>\n-\t  (match_operand:VI4F_256 1 \"nonimmediate_operand\" \"v\")\n+\t  (match_operand:VI4F_256 1 \"register_operand\" \"v\")\n \t  (parallel [(const_int 0) (const_int 1)\n \t\t     (const_int 2) (const_int 3)])))]\n   \"TARGET_AVX && <mask_avx512vl_condition> && <mask_avx512dq_condition>\"\n@@ -7157,7 +7160,7 @@\n (define_insn \"vec_extract_hi_v32hi\"\n   [(set (match_operand:V16HI 0 \"nonimmediate_operand\" \"=v,m\")\n \t(vec_select:V16HI\n-\t  (match_operand:V32HI 1 \"nonimmediate_operand\" \"v,v\")\n+\t  (match_operand:V32HI 1 \"register_operand\" \"v,v\")\n \t  (parallel [(const_int 16) (const_int 17)\n \t\t     (const_int 18) (const_int 19)\n \t\t     (const_int 20) (const_int 21)\n@@ -7245,7 +7248,7 @@\n (define_insn \"vec_extract_hi_v64qi\"\n   [(set (match_operand:V32QI 0 \"nonimmediate_operand\" \"=v,m\")\n \t(vec_select:V32QI\n-\t  (match_operand:V64QI 1 \"nonimmediate_operand\" \"v,v\")\n+\t  (match_operand:V64QI 1 \"register_operand\" \"v,v\")\n \t  (parallel [(const_int 32) (const_int 33)\n \t\t     (const_int 34) (const_int 35)\n \t\t     (const_int 36) (const_int 37)\n@@ -7345,7 +7348,7 @@\n   [(set (match_operand:V8DF 0 \"register_operand\" \"=v\")\n \t(vec_select:V8DF\n \t  (vec_concat:V16DF\n-\t    (match_operand:V8DF 1 \"nonimmediate_operand\" \"v\")\n+\t    (match_operand:V8DF 1 \"register_operand\" \"v\")\n \t    (match_operand:V8DF 2 \"nonimmediate_operand\" \"vm\"))\n \t  (parallel [(const_int 1) (const_int 9)\n \t\t     (const_int 3) (const_int 11)\n@@ -8507,7 +8510,9 @@\n \t(vec_concat:V2DF\n \t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0,v,m,0,x,m,0,0\")\n \t  (match_operand:DF 2 \"vector_move_operand\"  \" x,v,1,m,m,C,x,m\")))]\n-  \"TARGET_SSE\"\n+  \"TARGET_SSE\n+   && (!(MEM_P (operands[1]) && MEM_P (operands[2]))\n+       || (TARGET_SSE3 && rtx_equal_p (operands[1], operands[2])))\"\n   \"@\n    unpcklpd\\t{%2, %0|%0, %2}\n    vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n@@ -9523,7 +9528,7 @@\n \t(mult:V4DI\n \t  (sign_extend:V4DI\n \t    (vec_select:V4SI\n-\t      (match_operand:V8SI 1 \"nonimmediate_operand\" \"v\")\n+\t      (match_operand:V8SI 1 \"nonimmediate_operand\" \"%v\")\n \t      (parallel [(const_int 0) (const_int 2)\n \t\t\t (const_int 4) (const_int 6)])))\n \t  (sign_extend:V4DI\n@@ -12875,11 +12880,14 @@\n })\n \n (define_insn \"*vec_concatv2si_sse4_1\"\n-  [(set (match_operand:V2SI 0 \"register_operand\"     \"=Yr,*x,x, Yr,*x,x, x, *y,*y\")\n+  [(set (match_operand:V2SI 0 \"register_operand\"\n+\t  \"=Yr,*x,x, Yr,*x,x, x, *y,*y\")\n \t(vec_concat:V2SI\n-\t  (match_operand:SI 1 \"nonimmediate_operand\" \"  0, 0,x,  0,0, x,rm,  0,rm\")\n-\t  (match_operand:SI 2 \"vector_move_operand\"  \" rm,rm,rm,Yr,*x,x, C,*ym, C\")))]\n-  \"TARGET_SSE4_1\"\n+\t  (match_operand:SI 1 \"nonimmediate_operand\"\n+\t  \"  0, 0,x,  0,0, x,rm,  0,rm\")\n+\t  (match_operand:SI 2 \"vector_move_operand\"\n+\t  \" rm,rm,rm,Yr,*x,x, C,*ym, C\")))]\n+  \"TARGET_SSE4_1 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    pinsrd\\t{$1, %2, %0|%0, %2, 1}\n    pinsrd\\t{$1, %2, %0|%0, %2, 1}"}]}