{"sha": "943d631abdd7be623cbf2b870d3d0cfef89f5f26", "node_id": "C_kwDOANBUbNoAKDk0M2Q2MzFhYmRkN2JlNjIzY2JmMmI4NzBkM2QwY2ZlZjg5ZjVmMjY", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2022-02-08T16:36:14Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2022-02-08T18:39:16Z"}, "message": "rs6000: Add support for vmsumcud and vec_msumc\n\n2022-02-08  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000-builtins.def (VMSUMCUD): New.\n\t* config/rs6000/rs6000-overload.def (VEC_MSUMC): New.\n\t* config/rs6000/vsx.md (UNSPEC_VMSUMCUD): New constant.\n\t(vmsumcud): New define_insn.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/vec-msumc.c: New test.", "tree": {"sha": "412c8398e1d4ea85716c65be0f07e542bb765881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/412c8398e1d4ea85716c65be0f07e542bb765881"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/943d631abdd7be623cbf2b870d3d0cfef89f5f26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943d631abdd7be623cbf2b870d3d0cfef89f5f26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943d631abdd7be623cbf2b870d3d0cfef89f5f26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943d631abdd7be623cbf2b870d3d0cfef89f5f26/comments", "author": null, "committer": null, "parents": [{"sha": "be862bf1f612c884597ace4cbfdec972a0bf0eef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be862bf1f612c884597ace4cbfdec972a0bf0eef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be862bf1f612c884597ace4cbfdec972a0bf0eef"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "2d1e63fb20e8e5e85b9f35bd1bcce061f19be8b0", "filename": "gcc/config/rs6000/rs6000-builtins.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943d631abdd7be623cbf2b870d3d0cfef89f5f26/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943d631abdd7be623cbf2b870d3d0cfef89f5f26/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtins.def?ref=943d631abdd7be623cbf2b870d3d0cfef89f5f26", "patch": "@@ -3497,6 +3497,9 @@\n   const signed int __builtin_altivec_vstrihr_p (vss);\n     VSTRIHR_P vstrir_p_v8hi {}\n \n+  const vuq __builtin_vsx_vmsumcud (vull, vull, vuq);\n+    VMSUMCUD vmsumcud {}\n+\n   const signed int __builtin_vsx_xvtlsbb_all_ones (vsc);\n     XVTLSBB_ONES xvtlsbbo {}\n "}, {"sha": "49a6104ddd26f610d2fac1b38b57244f6c8b1419", "filename": "gcc/config/rs6000/rs6000-overload.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943d631abdd7be623cbf2b870d3d0cfef89f5f26/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943d631abdd7be623cbf2b870d3d0cfef89f5f26/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-overload.def?ref=943d631abdd7be623cbf2b870d3d0cfef89f5f26", "patch": "@@ -2456,6 +2456,10 @@\n   vuq __builtin_vec_msum (vull, vull, vuq);\n     VMSUMUDM  VMSUMUDM_U\n \n+[VEC_MSUMC, vec_msumc, __builtin_vec_msumc]\n+  vuq __builtin_vec_msumc (vull, vull, vuq);\n+    VMSUMCUD\n+\n [VEC_MSUMS, vec_msums, __builtin_vec_msums]\n   vui __builtin_vec_msums (vus, vus, vui);\n     VMSUMUHS"}, {"sha": "2f5a2f7828dee81bc50bffa758f0e43358276379", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943d631abdd7be623cbf2b870d3d0cfef89f5f26/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943d631abdd7be623cbf2b870d3d0cfef89f5f26/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=943d631abdd7be623cbf2b870d3d0cfef89f5f26", "patch": "@@ -372,6 +372,7 @@\n    UNSPEC_REPLACE_UN\n    UNSPEC_VDIVES\n    UNSPEC_VDIVEU\n+   UNSPEC_VMSUMCUD\n    UNSPEC_XXEVAL\n    UNSPEC_XXSPLTIW\n    UNSPEC_XXSPLTIDP\n@@ -6620,3 +6621,15 @@\n   emit_move_insn (operands[0], tmp4);\n   DONE;\n })\n+\n+;; vmsumcud\n+(define_insn \"vmsumcud\"\n+[(set (match_operand:V1TI 0 \"register_operand\" \"+v\")\n+      (unspec:V1TI [(match_operand:V2DI 1 \"register_operand\" \"v\")\n+                    (match_operand:V2DI 2 \"register_operand\" \"v\")\n+\t\t    (match_operand:V1TI 3 \"register_operand\" \"v\")]\n+\t\t   UNSPEC_VMSUMCUD))]\n+  \"TARGET_POWER10\"\n+  \"vmsumcud %0,%1,%2,%3\"\n+  [(set_attr \"type\" \"veccomplex\")]\n+)"}, {"sha": "524a2225c6cd68bace497521acff37fa64f6dceb", "filename": "gcc/testsuite/gcc.target/powerpc/vec-msumc.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943d631abdd7be623cbf2b870d3d0cfef89f5f26/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-msumc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943d631abdd7be623cbf2b870d3d0cfef89f5f26/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-msumc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-msumc.c?ref=943d631abdd7be623cbf2b870d3d0cfef89f5f26", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run { target { power10_hw } } } */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-options \"-mdejagnu-cpu=power10 -O2\" } */\n+#include <altivec.h>\n+\n+#define DEBUG 0\n+\n+#if DEBUG\n+#include <stdio.h>\n+#endif\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+  vector unsigned long long arg1, arg2;\n+  vector unsigned __int128 arg3, result, expected;\n+  unsigned __int128 c = (unsigned __int128) (-1); /* 2^128 - 1 */\n+\n+  arg1 = (vector unsigned long long) { 111ULL, 300ULL };\n+  arg2 = (vector unsigned long long) { 700ULL, 222ULL };\n+  arg3 = (vector unsigned __int128) { c };\n+  expected = (vector unsigned __int128) { 1 };\n+\n+  result = vec_msumc (arg1, arg2, arg3);\n+  if (result[0] != expected[0])\n+    {\n+#if DEBUG\n+      printf (\"ERROR, expected %d, result %d\\n\",\n+\t      (unsigned int) expected[0],\n+\t      (unsigned int) result[0]);\n+#else\n+      abort ();\n+#endif\n+    }\n+\n+  return 0;\n+}"}]}