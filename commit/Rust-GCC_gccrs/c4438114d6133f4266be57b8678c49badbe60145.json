{"sha": "c4438114d6133f4266be57b8678c49badbe60145", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ0MzgxMTRkNjEzM2Y0MjY2YmU1N2I4Njc4YzQ5YmFkYmU2MDE0NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-09-16T04:34:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-09-16T04:34:12Z"}, "message": "Handle location wrappers better in warn_logical_operator.\n\nWhen we introduced location wrappers, we added fold_for_warn to warnings\nthat are interested in a constant value, or wrapper-stripping to warnings\nthat are interested in literal constants.  This particular warning is\nlooking for a literal constant, but was wrongly changed to use\nfold_for_warn; this patch makes it strip instead.\n\n\t* c-warn.c (warn_logical_operator): Strip location wrappers.  Don't\n\tfold_for_warn in \"|| mask\" warning.\n\nFrom-SVN: r275743", "tree": {"sha": "11acc18cc58f5e10db7a779340e601f933d64b7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11acc18cc58f5e10db7a779340e601f933d64b7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4438114d6133f4266be57b8678c49badbe60145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4438114d6133f4266be57b8678c49badbe60145", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4438114d6133f4266be57b8678c49badbe60145", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4438114d6133f4266be57b8678c49badbe60145/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27e0979b8b432e5bc109754d4426f49f190b2359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e0979b8b432e5bc109754d4426f49f190b2359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e0979b8b432e5bc109754d4426f49f190b2359"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "93bdf3e07988ec337cb4863143511d83cf0aa97f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4438114d6133f4266be57b8678c49badbe60145/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4438114d6133f4266be57b8678c49badbe60145/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c4438114d6133f4266be57b8678c49badbe60145", "patch": "@@ -1,3 +1,8 @@\n+2019-09-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-warn.c (warn_logical_operator): Strip location wrappers.  Don't\n+\tfold_for_warn in \"|| mask\" warning.\n+\n 2019-09-10  Martin Liska  <mliska@suse.cz>\n \n \t* c.opt: Use newly added WarnRemoved."}, {"sha": "bee5449bcb1690498f95a205afdafdf730d68587", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4438114d6133f4266be57b8678c49badbe60145/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4438114d6133f4266be57b8678c49badbe60145/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=c4438114d6133f4266be57b8678c49badbe60145", "patch": "@@ -208,32 +208,32 @@ warn_logical_operator (location_t location, enum tree_code code, tree type,\n      programmer. That is, an expression such as op && MASK\n      where op should not be any boolean expression, nor a\n      constant, and mask seems to be a non-boolean integer constant.  */\n+  STRIP_ANY_LOCATION_WRAPPER (op_right);\n   if (TREE_CODE (op_right) == CONST_DECL)\n     /* An enumerator counts as a constant.  */\n     op_right = DECL_INITIAL (op_right);\n+  tree stripped_op_left = tree_strip_any_location_wrapper (op_left);\n   if (!truth_value_p (code_left)\n       && INTEGRAL_TYPE_P (TREE_TYPE (op_left))\n-      && !CONSTANT_CLASS_P (op_left)\n-      && !TREE_NO_WARNING (op_left))\n+      && !CONSTANT_CLASS_P (stripped_op_left)\n+      && TREE_CODE (stripped_op_left) != CONST_DECL\n+      && !TREE_NO_WARNING (op_left)\n+      && TREE_CODE (op_right) == INTEGER_CST\n+      && !integer_zerop (op_right)\n+      && !integer_onep (op_right))\n     {\n-      tree folded_op_right = fold_for_warn (op_right);\n-      if (TREE_CODE (folded_op_right) == INTEGER_CST\n-\t  && !integer_zerop (folded_op_right)\n-\t  && !integer_onep (folded_op_right))\n-\t{\n-\t  bool warned;\n-\t  if (or_op)\n-\t    warned\n-\t      = warning_at (location, OPT_Wlogical_op,\n-\t\t\t    \"logical %<or%> applied to non-boolean constant\");\n-\t  else\n-\t    warned\n-\t      = warning_at (location, OPT_Wlogical_op,\n-\t\t\t    \"logical %<and%> applied to non-boolean constant\");\n-\t  if (warned)\n-\t    TREE_NO_WARNING (op_left) = true;\n-\t  return;\n-\t}\n+      bool warned;\n+      if (or_op)\n+\twarned\n+\t  = warning_at (location, OPT_Wlogical_op,\n+\t\t\t\"logical %<or%> applied to non-boolean constant\");\n+      else\n+\twarned\n+\t  = warning_at (location, OPT_Wlogical_op,\n+\t\t\t\"logical %<and%> applied to non-boolean constant\");\n+      if (warned)\n+\tTREE_NO_WARNING (op_left) = true;\n+      return;\n     }\n \n   /* We do not warn for constants because they are typical of macro"}]}