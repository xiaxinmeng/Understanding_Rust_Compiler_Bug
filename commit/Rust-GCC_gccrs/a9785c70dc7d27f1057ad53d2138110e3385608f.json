{"sha": "a9785c70dc7d27f1057ad53d2138110e3385608f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk3ODVjNzBkYzdkMjdmMTA1N2FkNTNkMjEzODExMGUzMzg1NjA4Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-12-12T12:40:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-12-12T12:40:27Z"}, "message": "Add missing blank.\n\nFrom-SVN: r47930", "tree": {"sha": "305b2f01c9be50c570fb520b5e5ae49285bd8eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/305b2f01c9be50c570fb520b5e5ae49285bd8eb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9785c70dc7d27f1057ad53d2138110e3385608f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9785c70dc7d27f1057ad53d2138110e3385608f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9785c70dc7d27f1057ad53d2138110e3385608f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9785c70dc7d27f1057ad53d2138110e3385608f/comments", "author": null, "committer": null, "parents": [{"sha": "ce960d5ae72e259a1852d82f431e13e848bd37fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce960d5ae72e259a1852d82f431e13e848bd37fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce960d5ae72e259a1852d82f431e13e848bd37fe"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2561fc3d69baf27143caa722a05958835fcae42d", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9785c70dc7d27f1057ad53d2138110e3385608f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9785c70dc7d27f1057ad53d2138110e3385608f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a9785c70dc7d27f1057ad53d2138110e3385608f", "patch": "@@ -7356,7 +7356,7 @@ expand_expr (exp, target, tmode, modifier)\n          constant.  */\n     plus_expr:\n       this_optab = ! unsignedp && flag_trapv\n-                   && (GET_MODE_CLASS(mode) == MODE_INT)\n+                   && (GET_MODE_CLASS (mode) == MODE_INT)\n                    ? addv_optab : add_optab;\n \n       /* If we are adding a constant, an RTL_EXPR that is sp, fp, or ap, and"}]}