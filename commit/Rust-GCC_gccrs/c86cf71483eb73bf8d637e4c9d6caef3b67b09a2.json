{"sha": "c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg2Y2Y3MTQ4M2ViNzNiZjhkNjM3ZTRjOWQ2Y2FlZjNiNjdiMDlhMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-06-13T10:02:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T10:02:31Z"}, "message": "lib.ads, [...] (Is_Compiler_Unit): Removed.\n\n2014-06-13  Robert Dewar  <dewar@adacore.com>\n\n\t* lib.ads, lib.adb, lib-writ.adb, lib-load.adb (Is_Compiler_Unit):\n\tRemoved.\n\t* opt.ads (Compiler_Unit): New flag.\n\t* par-ch5.adb (Test_Statement_Required): Call Check_Compiler_Unit\n\tfor null statement sequence (not allowed in compiler unit).\n\t* par-prag.adb (Prag): Handle Compiler_Unit[_Warning] during\n\tparsing.\n\t* restrict.ads, restrict.adb (Check_Compiler_Unit): New version and new\n\tcalling sequence.\n\t* sem_ch11.adb, sem_ch3.adb, sem_ch4.adb: New calling sequence for\n\tCheck_Compiler_Unit.\n\t* sem_ch6.adb (Analyze_Extended_Return_Statement): Call\n\tCheck_Compiler_Unit (this construct is not allowed in compiler\n\tunits).\n\t* sem_prag.adb (Analyze_Pragma, case Compiler_Unit[_Warning]):\n\tSet Opt.Compiler_Unit.\n\nFrom-SVN: r211617", "tree": {"sha": "5763142f34ae94b7103a174f78d7a22414f8261f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5763142f34ae94b7103a174f78d7a22414f8261f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/comments", "author": null, "committer": null, "parents": [{"sha": "65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65ede00530bf84ad6fb7a04f6f1ff92cb5b095d6"}], "stats": {"total": 144, "additions": 94, "deletions": 50}, "files": [{"sha": "595d430cb5317eaffc7ad4dae55a69247a7bd8f6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -1,3 +1,22 @@\n+2014-06-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib.ads, lib.adb, lib-writ.adb, lib-load.adb (Is_Compiler_Unit):\n+\tRemoved.\n+\t* opt.ads (Compiler_Unit): New flag.\n+\t* par-ch5.adb (Test_Statement_Required): Call Check_Compiler_Unit\n+\tfor null statement sequence (not allowed in compiler unit).\n+\t* par-prag.adb (Prag): Handle Compiler_Unit[_Warning] during\n+\tparsing.\n+\t* restrict.ads, restrict.adb (Check_Compiler_Unit): New version and new\n+\tcalling sequence.\n+\t* sem_ch11.adb, sem_ch3.adb, sem_ch4.adb: New calling sequence for\n+\tCheck_Compiler_Unit.\n+\t* sem_ch6.adb (Analyze_Extended_Return_Statement): Call\n+\tCheck_Compiler_Unit (this construct is not allowed in compiler\n+\tunits).\n+\t* sem_prag.adb (Analyze_Pragma, case Compiler_Unit[_Warning]):\n+\tSet Opt.Compiler_Unit.\n+\n 2014-06-13  Geert Bosch  <bosch@adacore.com>\n \n \t* gnat_rm.texi, s-tasinf-solaris.ads, sem_prag.adb, gnat_ugn.texi,"}, {"sha": "eecf2a72498369dfbe382105f18c670a210aaee7", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -216,7 +216,7 @@ package body Lib.Load is\n         Generate_Code     => False,\n         Has_Allocator     => False,\n         Has_RACW          => False,\n-        Is_Compiler_Unit  => False,\n+        Filler            => False,\n         Ident_String      => Empty,\n         Loading           => False,\n         Main_Priority     => Default_Main_Priority,\n@@ -323,7 +323,7 @@ package body Lib.Load is\n            Generate_Code     => False,\n            Has_Allocator     => False,\n            Has_RACW          => False,\n-           Is_Compiler_Unit  => False,\n+           Filler            => False,\n            Ident_String      => Empty,\n            Loading           => True,\n            Main_Priority     => Default_Main_Priority,\n@@ -687,7 +687,7 @@ package body Lib.Load is\n               Generate_Code     => False,\n               Has_Allocator     => False,\n               Has_RACW          => False,\n-              Is_Compiler_Unit  => False,\n+              Filler            => False,\n               Ident_String      => Empty,\n               Loading           => True,\n               Main_Priority     => Default_Main_Priority,"}, {"sha": "f030c51567330d237b71b9992ed480f81663cd2f", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -84,7 +84,7 @@ package body Lib.Writ is\n          Generate_Code     => False,\n          Has_Allocator     => False,\n          Has_RACW          => False,\n-         Is_Compiler_Unit  => False,\n+         Filler            => False,\n          Ident_String      => Empty,\n          Loading           => False,\n          Main_Priority     => -1,\n@@ -142,7 +142,7 @@ package body Lib.Writ is\n         Generate_Code     => False,\n         Has_Allocator     => False,\n         Has_RACW          => False,\n-        Is_Compiler_Unit  => False,\n+        Filler            => False,\n         Ident_String      => Empty,\n         Loading           => False,\n         Main_Priority     => -1,"}, {"sha": "826fcc996838c9fcaa8950d05ba9fb26f8cd1677", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -126,11 +126,6 @@ package body Lib is\n       return Units.Table (U).Has_RACW;\n    end Has_RACW;\n \n-   function Is_Compiler_Unit (U : Unit_Number_Type) return Boolean is\n-   begin\n-      return Units.Table (U).Is_Compiler_Unit;\n-   end Is_Compiler_Unit;\n-\n    function Ident_String (U : Unit_Number_Type) return Node_Id is\n    begin\n       return Units.Table (U).Ident_String;\n@@ -221,14 +216,6 @@ package body Lib is\n       Units.Table (U).Has_RACW := B;\n    end Set_Has_RACW;\n \n-   procedure Set_Is_Compiler_Unit\n-     (U : Unit_Number_Type;\n-      B : Boolean := True)\n-   is\n-   begin\n-      Units.Table (U).Is_Compiler_Unit := B;\n-   end Set_Is_Compiler_Unit;\n-\n    procedure Set_Ident_String (U : Unit_Number_Type; N : Node_Id) is\n    begin\n       Units.Table (U).Ident_String := N;"}, {"sha": "b5499df96f32ba0ff122cd28c4c9c48a29dfebdf", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -326,10 +326,6 @@ package Lib is\n    --      (RACW) object. This is used for controlling generation of the RA\n    --      attribute in the ali file.\n \n-   --    Is_Compiler_Unit\n-   --      A Boolean flag, initially set False by default, set to True if a\n-   --      pragma Compiler_Unit_Warning appears in the unit.\n-\n    --    Ident_String\n    --      N_String_Literal node from a valid pragma Ident that applies to\n    --      this unit. If no Ident pragma applies to the unit, then Empty.\n@@ -415,7 +411,6 @@ package Lib is\n    function Ident_String      (U : Unit_Number_Type) return Node_Id;\n    function Has_Allocator     (U : Unit_Number_Type) return Boolean;\n    function Has_RACW          (U : Unit_Number_Type) return Boolean;\n-   function Is_Compiler_Unit  (U : Unit_Number_Type) return Boolean;\n    function Loading           (U : Unit_Number_Type) return Boolean;\n    function Main_CPU          (U : Unit_Number_Type) return Int;\n    function Main_Priority     (U : Unit_Number_Type) return Int;\n@@ -434,7 +429,6 @@ package Lib is\n    procedure Set_Generate_Code     (U : Unit_Number_Type; B : Boolean := True);\n    procedure Set_Has_RACW          (U : Unit_Number_Type; B : Boolean := True);\n    procedure Set_Has_Allocator     (U : Unit_Number_Type; B : Boolean := True);\n-   procedure Set_Is_Compiler_Unit  (U : Unit_Number_Type; B : Boolean := True);\n    procedure Set_Ident_String      (U : Unit_Number_Type; N : Node_Id);\n    procedure Set_Loading           (U : Unit_Number_Type; B : Boolean := True);\n    procedure Set_Main_CPU          (U : Unit_Number_Type; P : Int);\n@@ -734,7 +728,6 @@ private\n    pragma Inline (Generate_Code);\n    pragma Inline (Has_Allocator);\n    pragma Inline (Has_RACW);\n-   pragma Inline (Is_Compiler_Unit);\n    pragma Inline (Increment_Serial_Number);\n    pragma Inline (Loading);\n    pragma Inline (Main_CPU);\n@@ -774,8 +767,8 @@ private\n       Fatal_Error       : Boolean;\n       Generate_Code     : Boolean;\n       Has_RACW          : Boolean;\n-      Is_Compiler_Unit  : Boolean;\n       Dynamic_Elab      : Boolean;\n+      Filler            : Boolean;\n       Loading           : Boolean;\n       Has_Allocator     : Boolean;\n       OA_Setting        : Character;\n@@ -805,7 +798,7 @@ private\n       Generate_Code     at 57 range 0 ..  7;\n       Has_RACW          at 58 range 0 ..  7;\n       Dynamic_Elab      at 59 range 0 ..  7;\n-      Is_Compiler_Unit  at 60 range 0 ..  7;\n+      Filler            at 60 range 0 ..  7;\n       OA_Setting        at 61 range 0 ..  7;\n       Loading           at 62 range 0 ..  7;\n       Has_Allocator     at 63 range 0 ..  7;"}, {"sha": "cbd1045d822a49620038bb5c1fdbe8a6f88329b4", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -375,6 +375,15 @@ package Opt is\n    --    set to True to delete only the files produced by the compiler but not\n    --    the library files or the executable files.\n \n+   Compiler_Unit : Boolean := False;\n+   --  GNAT1\n+   --  Set True by an occurrence of pragma Compiler_Unit_Warning (or of the\n+   --  obsolete pragma Compiler_Unit) in the main unit. Once set True, stays\n+   --  True, since any units that are with'ed directly or indirectly by\n+   --  a Compiler_Unit_Warning main unit are subject to the same restrictions.\n+   --  Such units really should have their own pragmas, but we do not bother to\n+   --  check for that, so this transitivity provides extra checking.\n+\n    Config_File : Boolean := True;\n    --  GNAT\n    --  Set to False to inhibit reading and processing of gnat.adc file"}, {"sha": "1d5504df922c8f6a0945b06a44385b69e8e41a3a", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -240,6 +240,10 @@ package body Ch5 is\n                    and then Statement_Seen)\n                 or else All_Pragmas)\n             then\n+               --  This Ada 2012 construct not allowed in a compiler unit\n+\n+               Check_Compiler_Unit (\"null statement list\", Token_Ptr);\n+\n                declare\n                   Null_Stm : constant Node_Id :=\n                                Make_Null_Statement (Token_Ptr);"}, {"sha": "61ba85903e8f56a3168a8255fb49747f8e155ee6", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -354,6 +354,22 @@ begin\n             Ada_Version_Pragma := Pragma_Node;\n          end if;\n \n+      ---------------------------\n+      -- Compiler_Unit_Warning --\n+      ---------------------------\n+\n+      --  This pragma must be processed at parse time, since the resulting\n+      --  status may be tested during the parsing of the program.\n+\n+      when Pragma_Compiler_Unit | Pragma_Compiler_Unit_Warning =>\n+         Check_Arg_Count (0);\n+\n+         --  Only recognized in main unit\n+\n+         if Current_Source_Unit = Main_Unit then\n+            Compiler_Unit := True;\n+         end if;\n+\n       -----------\n       -- Debug --\n       -----------\n@@ -1153,8 +1169,6 @@ begin\n            Pragma_CIL_Constructor                |\n            Pragma_Compile_Time_Error             |\n            Pragma_Compile_Time_Warning           |\n-           Pragma_Compiler_Unit                  |\n-           Pragma_Compiler_Unit_Warning          |\n            Pragma_Contract_Cases                 |\n            Pragma_Convention_Identifier          |\n            Pragma_CPP_Class                      |"}, {"sha": "8983f78ee1cb9f4b7f9d29ef49422b367427d604", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -168,10 +168,17 @@ package body Restrict is\n    -- Check_Compiler_Unit --\n    -------------------------\n \n-   procedure Check_Compiler_Unit (N : Node_Id) is\n+   procedure Check_Compiler_Unit (Feature : String; N : Node_Id) is\n    begin\n-      if Is_Compiler_Unit (Get_Source_Unit (N)) then\n-         Error_Msg_N (\"use of construct not allowed in compiler!!??\", N);\n+      if Compiler_Unit then\n+         Error_Msg_N (Feature & \" not allowed in compiler unit!!??\", N);\n+      end if;\n+   end Check_Compiler_Unit;\n+\n+   procedure Check_Compiler_Unit (Feature : String; Loc : Source_Ptr) is\n+   begin\n+      if Compiler_Unit then\n+         Error_Msg (Feature & \" not allowed in compiler unit!!??\", Loc);\n       end if;\n    end Check_Compiler_Unit;\n "}, {"sha": "b6c93f8a7d747f90fd1208f51ee6ad42a629d0f6", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -192,10 +192,15 @@ package Restrict is\n    --  For abort to be allowed, either No_Abort_Statements must be False,\n    --  or Max_Asynchronous_Select_Nesting must be non-zero.\n \n-   procedure Check_Compiler_Unit (N : Node_Id);\n-   --  If unit N is in a unit that has a pragma Compiler_Unit, then a message\n-   --  is posted on node N noting use of a construct that is not permitted in\n-   --  the compiler.\n+   procedure Check_Compiler_Unit (Feature : String; N : Node_Id);\n+   --  If unit N is in a unit that has a pragma Compiler_Unit_Warning, then\n+   --  a message is posted on node N noting use of the given feature is not\n+   --  permitted in the compiler (bootstrap considerations).\n+\n+   procedure Check_Compiler_Unit (Feature : String; Loc : Source_Ptr);\n+   --  If unit N is in a unit that has a pragma Compiler_Unit_Warning, then a\n+   --  message is posted at location Loc noting use of the given feature is not\n+   --  permitted in the compiler (bootstrap considerations).\n \n    procedure Check_Restricted_Unit (U : Unit_Name_Type; N : Node_Id);\n    --  Checks if loading of unit U is prohibited by the setting of some"}, {"sha": "c4a148f0cd5e2cf3961a372ce77ad60737eb1cc6", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -436,7 +436,7 @@ package body Sem_Ch11 is\n \n    begin\n       if Comes_From_Source (N) then\n-         Check_Compiler_Unit (N);\n+         Check_Compiler_Unit (\"raise expression\", N);\n       end if;\n \n       Check_SPARK_Restriction (\"raise expression is not allowed\", N);"}, {"sha": "2748a838d442b779809bd83b9cffe7d6f8869995", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -836,7 +836,7 @@ package body Sem_Ch3 is\n          --  the runtime library but must also be compilable in Ada 95 mode\n          --  (when bootstrapping the compiler).\n \n-         Check_Compiler_Unit (N);\n+         Check_Compiler_Unit (\"anonymous access to subprogram\", N);\n \n          Access_Subprogram_Declaration\n            (T_Name => Anon_Type,"}, {"sha": "52ff590c521a04e530efb57a8f61258da57eb7fa", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -1392,7 +1392,7 @@ package body Sem_Ch4 is\n \n    begin\n       if Comes_From_Source (N) then\n-         Check_Compiler_Unit (N);\n+         Check_Compiler_Unit (\"case expression\", N);\n       end if;\n \n       Analyze_And_Resolve (Expr, Any_Discrete);\n@@ -2077,7 +2077,7 @@ package body Sem_Ch4 is\n       Else_Expr := Next (Then_Expr);\n \n       if Comes_From_Source (N) then\n-         Check_Compiler_Unit (N);\n+         Check_Compiler_Unit (\"if expression\", N);\n       end if;\n \n       Analyze_Expression (Condition);\n@@ -2669,7 +2669,7 @@ package body Sem_Ch4 is\n \n       begin\n          if Comes_From_Source (N) then\n-            Check_Compiler_Unit (N);\n+            Check_Compiler_Unit (\"set membership\", N);\n          end if;\n \n          Analyze (L);\n@@ -7038,7 +7038,7 @@ package body Sem_Ch4 is\n       --  a dereference operation.\n \n       if Comes_From_Source (N) then\n-         Check_Compiler_Unit (N);\n+         Check_Compiler_Unit (\"generalized indexing\", N);\n       end if;\n \n       declare"}, {"sha": "207f70e3107b330685297cb0c1f8e8e95e971488", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -525,6 +525,7 @@ package body Sem_Ch6 is\n \n    procedure Analyze_Extended_Return_Statement (N : Node_Id) is\n    begin\n+      Check_Compiler_Unit (\"extended return statement\", N);\n       Analyze_Return_Statement (N);\n    end Analyze_Extended_Return_Statement;\n "}, {"sha": "279c7333fec5ba74a0cd44b90c8fafa4feed995d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86cf71483eb73bf8d637e4c9d6caef3b67b09a2/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c86cf71483eb73bf8d637e4c9d6caef3b67b09a2", "patch": "@@ -12409,7 +12409,12 @@ package body Sem_Prag is\n          when Pragma_Compiler_Unit | Pragma_Compiler_Unit_Warning =>\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n-            Set_Is_Compiler_Unit (Get_Source_Unit (N));\n+\n+            --  Only recognized in main unit\n+\n+            if Current_Sem_Unit = Main_Unit then\n+               Compiler_Unit := True;\n+            end if;\n \n          -----------------------------\n          -- Complete_Representation --\n@@ -21346,7 +21351,7 @@ package body Sem_Prag is\n \n                   --  Not allowed in compiler units (bootstrap issues)\n \n-                  Check_Compiler_Unit (N);\n+                     Check_Compiler_Unit (\"Reason for pragma Warnings\", N);\n \n                --  No REASON string, set null string as reason\n "}]}