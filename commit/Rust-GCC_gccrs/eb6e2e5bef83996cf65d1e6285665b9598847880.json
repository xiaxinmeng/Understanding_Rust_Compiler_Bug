{"sha": "eb6e2e5bef83996cf65d1e6285665b9598847880", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI2ZTJlNWJlZjgzOTk2Y2Y2NWQxZTYyODU2NjViOTU5ODg0Nzg4MA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-11-06T00:18:37Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-11-06T00:18:37Z"}, "message": "porting.texi: Move...\n\n2001-11-05  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* porting.texi:  Move...\n\t* docs/html/17_intro/porting.texi:  ...to here.\n\t* docs/html/Makefile:  Add rule to rebuild...\n\t* docs/html/17_intro/porting.html:  ...this.  New file.\n\nFrom-SVN: r46797", "tree": {"sha": "b4497e5f083582709218ff5c7f7065202e3b6ebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4497e5f083582709218ff5c7f7065202e3b6ebb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb6e2e5bef83996cf65d1e6285665b9598847880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6e2e5bef83996cf65d1e6285665b9598847880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb6e2e5bef83996cf65d1e6285665b9598847880", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6e2e5bef83996cf65d1e6285665b9598847880/comments", "author": null, "committer": null, "parents": [{"sha": "a12fe13ddb02336f99401401bfd8e85d5bd343bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a12fe13ddb02336f99401401bfd8e85d5bd343bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a12fe13ddb02336f99401401bfd8e85d5bd343bc"}], "stats": {"total": 858, "additions": 857, "deletions": 1}, "files": [{"sha": "293b1315ec11cfe8445aebf14cf59f30ed23d4bb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6e2e5bef83996cf65d1e6285665b9598847880/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6e2e5bef83996cf65d1e6285665b9598847880/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=eb6e2e5bef83996cf65d1e6285665b9598847880", "patch": "@@ -1,3 +1,10 @@\n+2001-11-05  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* porting.texi:  Move...\n+\t* docs/html/17_intro/porting.texi:  ...to here.\n+\t* docs/html/Makefile:  Add rule to rebuild...\n+\t* docs/html/17_intro/porting.html:  ...this.  New file.\n+\n 2001-11-05  Felix Natter  <fnatter@gmx.net>\n \n \t* docs/html/17_intro/porting-howto.xml:  check in v0.9.4"}, {"sha": "b51fa9cdcb55c3e2b8969ed081118cde47a28b61", "filename": "libstdc++-v3/docs/html/17_intro/porting.html", "status": "added", "additions": 841, "deletions": 0, "changes": 841, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6e2e5bef83996cf65d1e6285665b9598847880/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6e2e5bef83996cf65d1e6285665b9598847880/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.html?ref=eb6e2e5bef83996cf65d1e6285665b9598847880", "patch": "@@ -0,0 +1,841 @@\n+<html lang=\"en\">\n+<head>\n+<title>Porting libstdc++-v3</title>\n+<meta http-equiv=\"Content-Type\" content=\"text/html\">\n+<meta name=description content=\"Porting libstdc++-v3\">\n+<meta name=generator content=\"makeinfo 4.0b\">\n+<link href=\"http://texinfo.org/\" rel=generator-home>\n+</head>\n+\n+<body>\n+<p><hr>\n+Node:<a name=\"Top\">Top</a>,\n+Next:<a rel=next href=\"#Operating%20system\">Operating system</a>\n+<br>\n+\n+<h1>Porting libstdc++-v3</h1>\n+\n+<p>This document explains how to port libstdc++-v3 (the GNU C++ library) to\n+a new target.\n+\n+<p>In order to make the GNU C++ library (libstdc++-v3) work with a new\n+target, you must edit some configuration files and provide some new\n+header files.\n+\n+<p>Before you get started, make sure that you have a working C library on\n+your target.  The C library need not precisely comply with any\n+particular standard, but should generally conform to the requirements\n+imposed by the ANSI/ISO standard.\n+\n+<p>In addition, you should try to verify that the C++ compiler generally\n+works.  It is difficult to test the C++ compiler without a working\n+library, but you should at least try some minimal test cases.\n+\n+<p>Here are the primary steps required to port the library:\n+\n+<ul>\n+<li><a href=\"#Operating%20system\">Operating system</a>:     Configuring for your operating system. \n+<li><a href=\"#Character%20types\">Character types</a>:      Implementing character classification. \n+<li><a href=\"#Thread%20safety\">Thread safety</a>:        Implementing atomic operations. \n+<li><a href=\"#Numeric%20limits\">Numeric limits</a>: \tImplementing numeric limits. \n+<li><a href=\"#Libtool\">Libtool</a>:              Using libtool. \n+<li><a href=\"#GNU%20Free%20Documentation%20License\">GNU Free Documentation License</a>:  How you can copy and share this manual. \n+</ul>\n+\n+<p><hr>\n+Node:<a name=\"Operating%20system\">Operating system</a>,\n+Next:<a rel=next href=\"#Character%20types\">Character types</a>,\n+Previous:<a rel=previous href=\"#Top\">Top</a>,\n+Up:<a rel=up href=\"#Top\">Top</a>\n+<br>\n+\n+<h1>Operating system</h1>\n+\n+<p>If you are porting to a new operating-system (as opposed to a new chip\n+using an existing operating system), you will need to create a new\n+directory in the <code>config/os</code> hierarchy.  For example, the IRIX\n+configuration files are all in <code>config/os/irix</code>.  There is no set\n+way to organize the OS configuration directory.  For example,\n+<code>config/os/solaris/solaris-2.6</code> and\n+<code>config/os/solaris/solaris-2.7</code> are used as configuration\n+directories for these two versions of Solaris.  On the other hand, both\n+Solaris 2.7 and Solaris 2.8 use the <code>config/os/solaris/solaris-2.7</code>\n+directory.  The important information is that there needs to be a\n+directory under <code>config/os</code> to store the files for your operating\n+system.\n+\n+<p>You'll have to change the <code>configure.target</code> file to ensure that\n+your new directory is activated.  Look for the switch statement that\n+sets <code>os_include_dir</code>, and add a pattern to handle your operating\n+system.  The switch statement switches on only the OS portion of the\n+standard target triplet; e.g., the <code>solaris2.8</code> in\n+<code>sparc-sun-solaris2.8</code>.\n+\n+<p>The first file to create in this directory, should be called\n+<code>bits/os_defines.h</code>.  This file contains basic macro definitions\n+that are required to allow the C++ library to work with your C library. \n+This file should provide macro definitions for <code>__off_t</code>,\n+<code>__off64_t</code>, and <code>__ssize_t</code>.  Typically, this just looks\n+like:\n+\n+<pre>#define __off_t off_t\n+#define __off64_t off64_t\n+#define __ssize_t ssize_t\n+</pre>\n+\n+<p>You don't have to provide these definitions if your system library\n+already defines these types - but the only library known to provide\n+these types is the GNU C Library, so you will almost certainly have to\n+provide these macros.  Note that this file does not have to include a\n+header file that defines <code>off_t</code>, or the other types; you simply\n+have to provide the macros.\n+\n+<p>In addition, several libstdc++-v3 source files unconditionally define\n+the macro <code>_POSIX_SOURCE</code>.  On many systems, defining this macro\n+causes large portions of the C library header files to be eliminated\n+at preprocessing time.  Therefore, you may have to <code>#undef</code> this\n+macro, or define other macros (like <code>_LARGEFILE_SOURCE</code> or\n+<code>__EXTENSIONS__</code>).  You won't know what macros to define or\n+undefine at this point; you'll have to try compiling the library and\n+seeing what goes wrong.  If you see errors about calling functions\n+that have not been declared, look in your C library headers to see if\n+the functions are declared there, and then figure out what macros you\n+need to define.  You will need to add them to the\n+<code>CPLUSPLUS_CPP_SPEC</code> macro in the GCC configuration file for your\n+target.  It will not work to simply define these macros in\n+<code>os_defines.h</code>.\n+\n+<p>At this time, there are two libstdc++-v3-specific macros which may be\n+defined.  <code>_G_USING_THUNKS</code> may be defined to 0 to express that the\n+port doesn't use thunks (although it is unclear that this is still\n+useful since libio support isn't currently working and the g++ v3 ABI\n+invalidates the assumption that some ports don't use thunks). \n+<code>_GLIBCPP_AVOID_FSEEK</code> may be defined if seeking on an interactive\n+stream (or one hooked to a pipe) is not allowed by the OS.  In this\n+case, getc()/ungetc() will be used at some key locations in the library\n+implementation instead of fseek().  Currently, the code path to avoid\n+fseek() is only enabled when the seek size is 1 character away from the\n+current stream position.  This is known to improve *-unknown-freebsd*\n+and sparc-sun-solaris2.*.\n+\n+<p>Finally, you should bracket the entire file in an include-guard, like\n+this:\n+\n+<pre>#ifndef _GLIBCPP_OS_DEFINES\n+#define _GLIBCPP_OS_DEFINES\n+...\n+#endif\n+</pre>\n+\n+<p>We recommend copying an existing <code>bits/os_defines.h</code> to use as a\n+starting point.\n+\n+<p><hr>\n+Node:<a name=\"Character%20types\">Character types</a>,\n+Next:<a rel=next href=\"#Thread%20safety\">Thread safety</a>,\n+Previous:<a rel=previous href=\"#Operating%20system\">Operating system</a>,\n+Up:<a rel=up href=\"#Top\">Top</a>\n+<br>\n+\n+<h1>Character types</h1>\n+\n+<p>The library requires that you provide three header files to implement\n+character classification, analagous to that provided by the C libraries\n+<code>&lt;ctype.h&gt;</code> header.  You can model these on the files provided in\n+<code>config/os/generic/bits</code>.  However, these files will almost\n+certainly need some modification.\n+\n+<p>The first file to write is <code>bits/ctype_base.h</code>.  This file provides\n+some very basic information about character classification.  The libstdc++-v3\n+library assumes that your C library implements <code>&lt;ctype.h&gt;</code> by using\n+a table (indexed by character code) containing integers, where each of\n+these integers is a bit-mask indicating whether the charcter is\n+upper-case, lower-case, alphabetic, etc.  The <code>bits/ctype_base.h</code>\n+file gives the type of the integer, and the values of the various bit\n+masks.  You will have to peer at your own <code>&lt;ctype.h&gt;</code> to figure out\n+how to define the values required by this file.\n+\n+<p>The <code>bits/ctype_base.h</code> header file does not need include guards. \n+It should contain a single <code>struct</code> definition called\n+<code>ctype_base</code>.  This <code>struct</code> should contain two type\n+declarations, and one enumeration declaration, like this example, taken\n+from the IRIX configuration:\n+\n+<pre>struct ctype_base\n+{\n+  typedef unsigned int \tmask;\n+  typedef int* \t\t__to_type;\n+\n+  enum\n+  {\n+    space = _ISspace,\n+    print = _ISprint,\n+    cntrl = _IScntrl,\n+    upper = _ISupper,\n+    lower = _ISlower,\n+    alpha = _ISalpha,\n+    digit = _ISdigit,\n+    punct = _ISpunct,\n+    xdigit = _ISxdigit,\n+    alnum = _ISalnum,\n+    graph = _ISgraph\n+  };\n+};\n+</pre>\n+\n+<p>The <code>mask</code> type is the type of the elements in the table.  If your\n+C library uses a table to map lower-case numbers to upper-case numbers,\n+and vice versa, you should define <code>__to_type</code> to be the type of the\n+elements in that table.  If you don't mind taking a minor performance\n+penalty, or if your library doesn't implement <code>toupper</code> and\n+<code>tolower</code> in this way, you can pick any pointer-to-integer type,\n+but you must still define the type.\n+\n+<p>The enumeration should give definitions for all the values in the above\n+example, using the values from your native <code>&lt;ctype.h&gt;</code>.  They can\n+be given symbolically (as above), or numerically, if you prefer.  You do\n+not have to include <code>&lt;ctype.h&gt;</code> in this header; it will always be\n+included before <code>bits/ctype_base.h</code> is included.\n+\n+<p>The next file to write is <code>bits/ctype_noninline.h</code>, which also does\n+not require include guards.  This file defines a few member functions\n+that will be included in <code>include/bits/locale_facets.h</code>.  The first\n+function that must be written is the <code>ctype&lt;char&gt;::ctype</code>\n+constructor.  Here is the IRIX example:\n+\n+<pre>ctype&lt;char&gt;::ctype(const mask* __table = 0, bool __del = false,\n+      size_t __refs = 0)\n+  : _Ctype_nois&lt;char&gt;(__refs), _M_del(__table != 0 &amp;&amp; __del),\n+    _M_toupper(NULL),\n+    _M_tolower(NULL),\n+    _M_ctable(NULL),\n+    _M_table(!__table\n+             ? (const mask*) (__libc_attr._ctype_tbl-&gt;_class + 1)\n+             : __table)\n+  { }\n+</pre>\n+\n+<p>There are two parts of this that you might choose to alter. The first,\n+and most important, is the line involving <code>__libc_attr</code>.  That is\n+IRIX system-dependent code that gets the base of the table mapping\n+character codes to attributes.  You need to substitute code that obtains\n+the address of this table on your system.  If you want to use your\n+operating system's tables to map upper-case letters to lower-case, and\n+vice versa, you should initialize <code>_M_toupper</code> and\n+<code>_M_tolower</code> with those tables, in similar fashion.\n+\n+<p>Now, you have to write two functions to convert from upper-case to\n+lower-case, and vice versa.  Here are the IRIX versions:\n+\n+<pre>char\n+ctype&lt;char&gt;::do_toupper(char __c) const\n+{ return _toupper(__c); }\n+\n+char\n+ctype&lt;char&gt;::do_tolower(char __c) const\n+{ return _tolower(__c); }\n+</pre>\n+\n+<p>Your C library provides equivalents to IRIX's <code>_toupper</code> and\n+<code>_tolower</code>.  If you initialized <code>_M_toupper</code> and\n+<code>_M_tolower</code> above, then you could use those tables instead.\n+\n+<p>Finally, you have to provide two utility functions that convert strings\n+of characters.  The versions provided here will always work - but you\n+could use specialized routines for greater performance if you have\n+machinery to do that on your system:\n+\n+<pre>const char*\n+ctype&lt;char&gt;::do_toupper(char* __low, const char* __high) const\n+{\n+  while (__low &lt; __high)\n+    {\n+      *__low = do_toupper(*__low);\n+      ++__low;\n+    }\n+  return __high;\n+}\n+\n+const char*\n+ctype&lt;char&gt;::do_tolower(char* __low, const char* __high) const\n+{\n+  while (__low &lt; __high)\n+    {\n+      *__low = do_tolower(*__low);\n+      ++__low;\n+    }\n+  return __high;\n+}\n+</pre>\n+\n+<p>You must also provide the <code>bits/ctype_inline.h</code> file, which\n+contains a few more functions.  On most systems, you can just copy\n+<code>config/os/generic/ctype_inline.h</code> and use it on your system.\n+\n+<p>In detail, the functions provided test characters for particular\n+properties; they are analagous to the functions like <code>isalpha</code> and\n+<code>islower</code> provided by the C library.\n+\n+<p>The first function is implemented like this on IRIX:\n+\n+<pre>bool\n+ctype&lt;char&gt;::\n+is(mask __m, char __c) const throw()\n+{ return (_M_table)[(unsigned char)(__c)] &amp; __m; }\n+</pre>\n+\n+<p>The <code>_M_table</code> is the table passed in above, in the constructor. \n+This is the table that contains the bitmasks for each character.  The\n+implementation here should work on all systems.\n+\n+<p>The next function is:\n+\n+<pre>const char*\n+ctype&lt;char&gt;::\n+is(const char* __low, const char* __high, mask* __vec) const throw()\n+{\n+  while (__low &lt; __high)\n+    *__vec++ = (_M_table)[(unsigned char)(*__low++)];\n+  return __high;\n+}\n+</pre>\n+\n+<p>This function is similar; it copies the masks for all the characters\n+from <code>__low</code> up until <code>__high</code> into the vector given by\n+<code>__vec</code>.\n+\n+<p>The last two functions again are entirely generic:\n+\n+<pre>const char*\n+ctype&lt;char&gt;::\n+scan_is(mask __m, const char* __low, const char* __high) const throw()\n+{\n+  while (__low &lt; __high &amp;&amp; !this-&gt;is(__m, *__low))\n+    ++__low;\n+  return __low;\n+}\n+\n+const char*\n+ctype&lt;char&gt;::\n+scan_not(mask __m, const char* __low, const char* __high) const throw()\n+{\n+  while (__low &lt; __high &amp;&amp; this-&gt;is(__m, *__low))\n+    ++__low;\n+  return __low;\n+}\n+</pre>\n+\n+<p><hr>\n+Node:<a name=\"Thread%20safety\">Thread safety</a>,\n+Next:<a rel=next href=\"#Numeric%20limits\">Numeric limits</a>,\n+Previous:<a rel=previous href=\"#Character%20types\">Character types</a>,\n+Up:<a rel=up href=\"#Top\">Top</a>\n+<br>\n+\n+<h1>Thread safety</h1>\n+\n+<p>The C++ library string functionality requires a couple of atomic\n+operations to provide thread-safety.  If you don't take any special\n+action, the library will use stub versions of these functions that are\n+not thread-safe.  They will work fine, unless your applications are\n+multi-threaded.\n+\n+<p>If you want to provide custom, safe, versions of these functions, there\n+are two distinct approaches.  One is to provide a version for your CPU,\n+using assembly language constructs.  The other is to use the\n+thread-safety primitives in your operating system.  In either case, you\n+make a file called <code>bits/atomicity.h</code>.\n+\n+<p>If you are using the assembly-language approach, put this code in\n+<code>config/cpu/&lt;chip&gt;/bits/atomicity.h</code>, where chip is the name of\n+your processor.  In that case, edit the switch statement in\n+<code>configure.target</code> to set the <code>cpu_include_dir</code>.  In either\n+case, set the switch statement that sets <code>ATOMICITYH</code> to be the\n+directory containing <code>bits/atomicity.h</code>.\n+\n+<p>With those bits out of the way, you have to actually write\n+<code>bits/atomicity.h</code> itself.  This file should be wrapped in an\n+include guard named <code>_BITS_ATOMICITY_H</code>.  It should define one\n+type, and two functions.\n+\n+<p>The type is <code>_Atomic_word</code>.  Here is the version used on IRIX:\n+\n+<pre>typedef long _Atomic_word;\n+</pre>\n+\n+<p>This type must be a signed integral type supporting atomic operations. \n+If you're using the OS approach, use the same type used by your system's\n+primitives.  Otherwise, use the type for which your CPU provides atomic\n+primitives.\n+\n+<p>Then, you must provide two functions.  The bodies of these functions\n+must be equivalent to those provided here, but using atomic operations:\n+\n+<pre>static inline _Atomic_word\n+__attribute__ ((__unused__))\n+__exchange_and_add (_Atomic_word* __mem, int __val)\n+{\n+  _Atomic_word __result = *__mem;\n+  *__mem += __val;\n+  return __result;\n+}\n+\n+static inline void\n+__attribute__ ((__unused__))\n+__atomic_add (_Atomic_word* __mem, int __val)\n+{\n+  *__mem += __val;\n+}\n+</pre>\n+\n+<p><hr>\n+Node:<a name=\"Numeric%20limits\">Numeric limits</a>,\n+Next:<a rel=next href=\"#Libtool\">Libtool</a>,\n+Previous:<a rel=previous href=\"#Thread%20safety\">Thread safety</a>,\n+Up:<a rel=up href=\"#Top\">Top</a>\n+<br>\n+\n+<h1>Numeric limits</h1>\n+\n+<p>The C++ library requires information about the fundamental data types,\n+such as the minimum and maximum representable values of each type. \n+You can define each of these values individually, but it is usually\n+easiest just to indicate how many bits are used in each of the data\n+types and let the library do the rest.  For information about the\n+macros to define, see the top of <code>include/bits/std_limits.h</code>.\n+\n+<p>If you need to define any macros, you can do so in\n+<code>os_defines.h</code>.  However, if all operating systems for your CPU\n+are likely to use the same values, you can provide a CPU-specific file\n+instead so that you do not have to provide the same definitions for\n+each operating system.  To take that approach, create a new file\n+called <code>limits.h</code> in your CPU configuration directory (e.g.,\n+<code>config/cpu/i386/bits</code>) and then modify <code>configure.target</code>\n+so that <code>LIMITSH</code> is set to the CPU directory (e.g.,\n+<code>config/cpu/i386</code>).  Note that <code>LIMITSH</code> should not include\n+the <code>bits</code> part of the directory name.\n+\n+<p><hr>\n+Node:<a name=\"Libtool\">Libtool</a>,\n+Next:<a rel=next href=\"#GNU%20Free%20Documentation%20License\">GNU Free Documentation License</a>,\n+Previous:<a rel=previous href=\"#Numeric%20limits\">Numeric limits</a>,\n+Up:<a rel=up href=\"#Top\">Top</a>\n+<br>\n+\n+<h1>Libtool</h1>\n+\n+<p>The C++ library is compiled, archived and linked with libtool. \n+Explaining the full workings of libtool is beyond the scope of this\n+document, but there are a few, particular bits that are necessary for\n+porting.\n+\n+<p>Some parts of the libstdc++-v3 library are compiled with the libtool\n+<code>--tags CXX</code> option (the C++ definitions for libtool).  Therefore,\n+<code>ltcf-cxx.sh</code> in the top-level directory needs to have the correct\n+logic to compile and archive objects equivalent to the C version of libtool,\n+<code>ltcf-c.sh</code>.  Some libtool targets have definitions for C but not\n+for C++, or C++ definitions which have not been kept up to date.\n+\n+<p>The C++ run-time library contains initialization code that needs to be\n+run as the library is loaded.  Often, that requires linking in special\n+object files when the C++ library is built as a shared library, or\n+taking other system-specific actions.\n+\n+<p>The libstdc++-v3 library is linked with the C version of libtool, even though it\n+is a C++ library.  Therefore, the C version of libtool needs to ensure\n+that the run-time library initializers are run.  The usual way to do\n+this is to build the library using <code>gcc -shared</code>.\n+\n+<p>If you need to change how the library is linked, look at\n+<code>ltcf-c.sh</code> in the top-level directory.  Find the switch statement\n+that sets <code>archive_cmds</code>.  Here, adjust the setting for your\n+operating system.\n+\n+<p><hr>\n+Node:<a name=\"GNU%20Free%20Documentation%20License\">GNU Free Documentation License</a>,\n+Previous:<a rel=previous href=\"#Libtool\">Libtool</a>,\n+Up:<a rel=up href=\"#Top\">Top</a>\n+<br>\n+\n+<h1>GNU Free Documentation License</h1>\n+\n+<div align=\"center\">Version 1.1, March 2000</div>\n+<pre>Copyright &copy; 2000 Free Software Foundation, Inc.\n+59 Temple Place, Suite 330, Boston, MA  02111-1307, USA\n+\n+Everyone is permitted to copy and distribute verbatim copies\n+of this license document, but changing it is not allowed.\n+</pre>\n+\n+<ol type=1 start=0>\n+</p><li>PREAMBLE\n+\n+<p>The purpose of this License is to make a manual, textbook, or other\n+written document <dfn>free</dfn> in the sense of freedom: to assure everyone\n+the effective freedom to copy and redistribute it, with or without\n+modifying it, either commercially or noncommercially.  Secondarily,\n+this License preserves for the author and publisher a way to get\n+credit for their work, while not being considered responsible for\n+modifications made by others.\n+\n+<p>This License is a kind of \"copyleft\", which means that derivative\n+works of the document must themselves be free in the same sense.  It\n+complements the GNU General Public License, which is a copyleft\n+license designed for free software.\n+\n+<p>We have designed this License in order to use it for manuals for free\n+software, because free software needs free documentation: a free\n+program should come with manuals providing the same freedoms that the\n+software does.  But this License is not limited to software manuals;\n+it can be used for any textual work, regardless of subject matter or\n+whether it is published as a printed book.  We recommend this License\n+principally for works whose purpose is instruction or reference.\n+\n+</p><li>APPLICABILITY AND DEFINITIONS\n+\n+<p>This License applies to any manual or other work that contains a\n+notice placed by the copyright holder saying it can be distributed\n+under the terms of this License.  The \"Document\", below, refers to any\n+such manual or work.  Any member of the public is a licensee, and is\n+addressed as \"you\".\n+\n+<p>A \"Modified Version\" of the Document means any work containing the\n+Document or a portion of it, either copied verbatim, or with\n+modifications and/or translated into another language.\n+\n+<p>A \"Secondary Section\" is a named appendix or a front-matter section of\n+the Document that deals exclusively with the relationship of the\n+publishers or authors of the Document to the Document's overall subject\n+(or to related matters) and contains nothing that could fall directly\n+within that overall subject.  (For example, if the Document is in part a\n+textbook of mathematics, a Secondary Section may not explain any\n+mathematics.)  The relationship could be a matter of historical\n+connection with the subject or with related matters, or of legal,\n+commercial, philosophical, ethical or political position regarding\n+them.\n+\n+<p>The \"Invariant Sections\" are certain Secondary Sections whose titles\n+are designated, as being those of Invariant Sections, in the notice\n+that says that the Document is released under this License.\n+\n+<p>The \"Cover Texts\" are certain short passages of text that are listed,\n+as Front-Cover Texts or Back-Cover Texts, in the notice that says that\n+the Document is released under this License.\n+\n+<p>A \"Transparent\" copy of the Document means a machine-readable copy,\n+represented in a format whose specification is available to the\n+general public, whose contents can be viewed and edited directly and\n+straightforwardly with generic text editors or (for images composed of\n+pixels) generic paint programs or (for drawings) some widely available\n+drawing editor, and that is suitable for input to text formatters or\n+for automatic translation to a variety of formats suitable for input\n+to text formatters.  A copy made in an otherwise Transparent file\n+format whose markup has been designed to thwart or discourage\n+subsequent modification by readers is not Transparent.  A copy that is\n+not \"Transparent\" is called \"Opaque\".\n+\n+<p>Examples of suitable formats for Transparent copies include plain\n+<small>ASCII</small> without markup, Texinfo input format, LaTeX input format,\n+<small>SGML</small> or <small>XML</small> using a publicly available\n+<small>DTD</small>, and standard-conforming simple <small>HTML</small> designed\n+for human modification.  Opaque formats include PostScript,\n+<small>PDF</small>, proprietary formats that can be read and edited only by\n+proprietary word processors, <small>SGML</small> or <small>XML</small> for which\n+the <small>DTD</small> and/or processing tools are not generally available,\n+and the machine-generated <small>HTML</small> produced by some word\n+processors for output purposes only.\n+\n+<p>The \"Title Page\" means, for a printed book, the title page itself,\n+plus such following pages as are needed to hold, legibly, the material\n+this License requires to appear in the title page.  For works in\n+formats which do not have any title page as such, \"Title Page\" means\n+the text near the most prominent appearance of the work's title,\n+preceding the beginning of the body of the text.\n+\n+</p><li>VERBATIM COPYING\n+\n+<p>You may copy and distribute the Document in any medium, either\n+commercially or noncommercially, provided that this License, the\n+copyright notices, and the license notice saying this License applies\n+to the Document are reproduced in all copies, and that you add no other\n+conditions whatsoever to those of this License.  You may not use\n+technical measures to obstruct or control the reading or further\n+copying of the copies you make or distribute.  However, you may accept\n+compensation in exchange for copies.  If you distribute a large enough\n+number of copies you must also follow the conditions in section 3.\n+\n+<p>You may also lend copies, under the same conditions stated above, and\n+you may publicly display copies.\n+\n+</p><li>COPYING IN QUANTITY\n+\n+<p>If you publish printed copies of the Document numbering more than 100,\n+and the Document's license notice requires Cover Texts, you must enclose\n+the copies in covers that carry, clearly and legibly, all these Cover\n+Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on\n+the back cover.  Both covers must also clearly and legibly identify\n+you as the publisher of these copies.  The front cover must present\n+the full title with all words of the title equally prominent and\n+visible.  You may add other material on the covers in addition. \n+Copying with changes limited to the covers, as long as they preserve\n+the title of the Document and satisfy these conditions, can be treated\n+as verbatim copying in other respects.\n+\n+<p>If the required texts for either cover are too voluminous to fit\n+legibly, you should put the first ones listed (as many as fit\n+reasonably) on the actual cover, and continue the rest onto adjacent\n+pages.\n+\n+<p>If you publish or distribute Opaque copies of the Document numbering\n+more than 100, you must either include a machine-readable Transparent\n+copy along with each Opaque copy, or state in or with each Opaque copy\n+a publicly-accessible computer-network location containing a complete\n+Transparent copy of the Document, free of added material, which the\n+general network-using public has access to download anonymously at no\n+charge using public-standard network protocols.  If you use the latter\n+option, you must take reasonably prudent steps, when you begin\n+distribution of Opaque copies in quantity, to ensure that this\n+Transparent copy will remain thus accessible at the stated location\n+until at least one year after the last time you distribute an Opaque\n+copy (directly or through your agents or retailers) of that edition to\n+the public.\n+\n+<p>It is requested, but not required, that you contact the authors of the\n+Document well before redistributing any large number of copies, to give\n+them a chance to provide you with an updated version of the Document.\n+\n+</p><li>MODIFICATIONS\n+\n+<p>You may copy and distribute a Modified Version of the Document under\n+the conditions of sections 2 and 3 above, provided that you release\n+the Modified Version under precisely this License, with the Modified\n+Version filling the role of the Document, thus licensing distribution\n+and modification of the Modified Version to whoever possesses a copy\n+of it.  In addition, you must do these things in the Modified Version:\n+\n+<ol type=A start=1>\n+</p><li>Use in the Title Page (and on the covers, if any) a title distinct\n+from that of the Document, and from those of previous versions\n+(which should, if there were any, be listed in the History section\n+of the Document).  You may use the same title as a previous version\n+if the original publisher of that version gives permission.\n+\n+<li>List on the Title Page, as authors, one or more persons or entities\n+responsible for authorship of the modifications in the Modified\n+Version, together with at least five of the principal authors of the\n+Document (all of its principal authors, if it has less than five).\n+\n+<li>State on the Title page the name of the publisher of the\n+Modified Version, as the publisher.\n+\n+<li>Preserve all the copyright notices of the Document.\n+\n+<li>Add an appropriate copyright notice for your modifications\n+adjacent to the other copyright notices.\n+\n+<li>Include, immediately after the copyright notices, a license notice\n+giving the public permission to use the Modified Version under the\n+terms of this License, in the form shown in the Addendum below.\n+\n+<li>Preserve in that license notice the full lists of Invariant Sections\n+and required Cover Texts given in the Document's license notice.\n+\n+<li>Include an unaltered copy of this License.\n+\n+<li>Preserve the section entitled \"History\", and its title, and add to\n+it an item stating at least the title, year, new authors, and\n+publisher of the Modified Version as given on the Title Page.  If\n+there is no section entitled \"History\" in the Document, create one\n+stating the title, year, authors, and publisher of the Document as\n+given on its Title Page, then add an item describing the Modified\n+Version as stated in the previous sentence.\n+\n+<li>Preserve the network location, if any, given in the Document for\n+public access to a Transparent copy of the Document, and likewise\n+the network locations given in the Document for previous versions\n+it was based on.  These may be placed in the \"History\" section. \n+You may omit a network location for a work that was published at\n+least four years before the Document itself, or if the original\n+publisher of the version it refers to gives permission.\n+\n+<li>In any section entitled \"Acknowledgments\" or \"Dedications\",\n+preserve the section's title, and preserve in the section all the\n+substance and tone of each of the contributor acknowledgments\n+and/or dedications given therein.\n+\n+<li>Preserve all the Invariant Sections of the Document,\n+unaltered in their text and in their titles.  Section numbers\n+or the equivalent are not considered part of the section titles.\n+\n+<li>Delete any section entitled \"Endorsements\".  Such a section\n+may not be included in the Modified Version.\n+\n+<li>Do not retitle any existing section as \"Endorsements\"\n+or to conflict in title with any Invariant Section.\n+</ol>\n+\n+<p>If the Modified Version includes new front-matter sections or\n+appendices that qualify as Secondary Sections and contain no material\n+copied from the Document, you may at your option designate some or all\n+of these sections as invariant.  To do this, add their titles to the\n+list of Invariant Sections in the Modified Version's license notice. \n+These titles must be distinct from any other section titles.\n+\n+<p>You may add a section entitled \"Endorsements\", provided it contains\n+nothing but endorsements of your Modified Version by various\n+parties--for example, statements of peer review or that the text has\n+been approved by an organization as the authoritative definition of a\n+standard.\n+\n+<p>You may add a passage of up to five words as a Front-Cover Text, and a\n+passage of up to 25 words as a Back-Cover Text, to the end of the list\n+of Cover Texts in the Modified Version.  Only one passage of\n+Front-Cover Text and one of Back-Cover Text may be added by (or\n+through arrangements made by) any one entity.  If the Document already\n+includes a cover text for the same cover, previously added by you or\n+by arrangement made by the same entity you are acting on behalf of,\n+you may not add another; but you may replace the old one, on explicit\n+permission from the previous publisher that added the old one.\n+\n+<p>The author(s) and publisher(s) of the Document do not by this License\n+give permission to use their names for publicity for or to assert or\n+imply endorsement of any Modified Version.\n+\n+</p><li>COMBINING DOCUMENTS\n+\n+<p>You may combine the Document with other documents released under this\n+License, under the terms defined in section 4 above for modified\n+versions, provided that you include in the combination all of the\n+Invariant Sections of all of the original documents, unmodified, and\n+list them all as Invariant Sections of your combined work in its\n+license notice.\n+\n+<p>The combined work need only contain one copy of this License, and\n+multiple identical Invariant Sections may be replaced with a single\n+copy.  If there are multiple Invariant Sections with the same name but\n+different contents, make the title of each such section unique by\n+adding at the end of it, in parentheses, the name of the original\n+author or publisher of that section if known, or else a unique number. \n+Make the same adjustment to the section titles in the list of\n+Invariant Sections in the license notice of the combined work.\n+\n+<p>In the combination, you must combine any sections entitled \"History\"\n+in the various original documents, forming one section entitled\n+\"History\"; likewise combine any sections entitled \"Acknowledgments\",\n+and any sections entitled \"Dedications\".  You must delete all sections\n+entitled \"Endorsements.\"\n+\n+</p><li>COLLECTIONS OF DOCUMENTS\n+\n+<p>You may make a collection consisting of the Document and other documents\n+released under this License, and replace the individual copies of this\n+License in the various documents with a single copy that is included in\n+the collection, provided that you follow the rules of this License for\n+verbatim copying of each of the documents in all other respects.\n+\n+<p>You may extract a single document from such a collection, and distribute\n+it individually under this License, provided you insert a copy of this\n+License into the extracted document, and follow this License in all\n+other respects regarding verbatim copying of that document.\n+\n+</p><li>AGGREGATION WITH INDEPENDENT WORKS\n+\n+<p>A compilation of the Document or its derivatives with other separate\n+and independent documents or works, in or on a volume of a storage or\n+distribution medium, does not as a whole count as a Modified Version\n+of the Document, provided no compilation copyright is claimed for the\n+compilation.  Such a compilation is called an \"aggregate\", and this\n+License does not apply to the other self-contained works thus compiled\n+with the Document, on account of their being thus compiled, if they\n+are not themselves derivative works of the Document.\n+\n+<p>If the Cover Text requirement of section 3 is applicable to these\n+copies of the Document, then if the Document is less than one quarter\n+of the entire aggregate, the Document's Cover Texts may be placed on\n+covers that surround only the Document within the aggregate. \n+Otherwise they must appear on covers around the whole aggregate.\n+\n+</p><li>TRANSLATION\n+\n+<p>Translation is considered a kind of modification, so you may\n+distribute translations of the Document under the terms of section 4. \n+Replacing Invariant Sections with translations requires special\n+permission from their copyright holders, but you may include\n+translations of some or all Invariant Sections in addition to the\n+original versions of these Invariant Sections.  You may include a\n+translation of this License provided that you also include the\n+original English version of this License.  In case of a disagreement\n+between the translation and the original English version of this\n+License, the original English version will prevail.\n+\n+</p><li>TERMINATION\n+\n+<p>You may not copy, modify, sublicense, or distribute the Document except\n+as expressly provided for under this License.  Any other attempt to\n+copy, modify, sublicense or distribute the Document is void, and will\n+automatically terminate your rights under this License.  However,\n+parties who have received copies, or rights, from you under this\n+License will not have their licenses terminated so long as such\n+parties remain in full compliance.\n+\n+</p><li>FUTURE REVISIONS OF THIS LICENSE\n+\n+<p>The Free Software Foundation may publish new, revised versions\n+of the GNU Free Documentation License from time to time.  Such new\n+versions will be similar in spirit to the present version, but may\n+differ in detail to address new problems or concerns.  See\n+<a href=\"http://www.gnu.org/copyleft/\">http://www.gnu.org/copyleft/</a>.\n+\n+<p>Each version of the License is given a distinguishing version number. \n+If the Document specifies that a particular numbered version of this\n+License \"or any later version\" applies to it, you have the option of\n+following the terms and conditions either of that specified version or\n+of any later version that has been published (not as a draft) by the\n+Free Software Foundation.  If the Document does not specify a version\n+number of this License, you may choose any version ever published (not\n+as a draft) by the Free Software Foundation.\n+</ol>\n+\n+<h2>ADDENDUM: How to use this License for your documents</h2>\n+\n+<p>To use this License in a document you have written, include a copy of\n+the License in the document and put the following copyright and\n+license notices just after the title page:\n+\n+<pre>  Copyright (C)  <var>year</var>  <var>your name</var>.\n+  Permission is granted to copy, distribute and/or modify this document\n+  under the terms of the GNU Free Documentation License, Version 1.1\n+  or any later version published by the Free Software Foundation;\n+  with the Invariant Sections being <var>list their titles</var>, with the\n+  Front-Cover Texts being <var>list</var>, and with the Back-Cover Texts being <var>list</var>.\n+  A copy of the license is included in the section entitled ``GNU\n+  Free Documentation License''.\n+</pre>\n+\n+<p>If you have no Invariant Sections, write \"with no Invariant Sections\"\n+instead of saying which ones are invariant.  If you have no\n+Front-Cover Texts, write \"no Front-Cover Texts\" instead of\n+\"Front-Cover Texts being <var>list</var>\"; likewise for Back-Cover Texts.\n+\n+<p>If your document contains nontrivial examples of program code, we\n+recommend releasing these examples in parallel under your choice of\n+free software license, such as the GNU General Public License,\n+to permit their use in free software.\n+\n+\n+<h1>Table of Contents</h1>\n+<ul>\n+<li><a href=\"#Top\">Porting libstdc++-v3</a>\n+<li><a href=\"#Operating%20system\">Operating system</a>\n+<li><a href=\"#Character%20types\">Character types</a>\n+<li><a href=\"#Thread%20safety\">Thread safety</a>\n+<li><a href=\"#Numeric%20limits\">Numeric limits</a>\n+<li><a href=\"#Libtool\">Libtool</a>\n+<li><a href=\"#GNU%20Free%20Documentation%20License\">GNU Free Documentation License</a>\n+<ul>\n+<li><a href=\"#GNU%20Free%20Documentation%20License\">ADDENDUM: How to use this License for your documents</a>\n+</ul>\n+</ul>\n+\n+</body></html>\n+"}, {"sha": "9114806b63f580422444635be7b0120587b80f1f", "filename": "libstdc++-v3/docs/html/17_intro/porting.texi", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6e2e5bef83996cf65d1e6285665b9598847880/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6e2e5bef83996cf65d1e6285665b9598847880/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi?ref=eb6e2e5bef83996cf65d1e6285665b9598847880", "previous_filename": "libstdc++-v3/porting.texi"}, {"sha": "df46f74d7a27d58f58f8e6075e880154ae1855f9", "filename": "libstdc++-v3/docs/html/Makefile", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6e2e5bef83996cf65d1e6285665b9598847880/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6e2e5bef83996cf65d1e6285665b9598847880/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile?ref=eb6e2e5bef83996cf65d1e6285665b9598847880", "patch": "@@ -1,5 +1,13 @@\n \n+MAKEINFO=makeinfo\n+INC=../../../gcc/doc/include\n+\n+all: faq/index.txt 17_intro/porting.html\n+\n \n faq/index.txt: faq/index.html\n-\tlynx -dump faq/index.html | sed \"s%file://localhost`pwd`%..%\" > $@\n+\tlynx -dump $< | sed \"s%file://localhost`pwd`%..%\" > $@\n+\n+17_intro/porting.html: 17_intro/porting.texi\n+\t${MAKEINFO} -I ${INC} --html --no-split $< -o $@\n "}]}