{"sha": "c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdjYjk5Zjg4NWQyZDZkNTIwZWY4ZmYwZmYzNWUwMTU4ZjJjNjI2NA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-03-16T20:29:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-11T09:53:41Z"}, "message": "[Ada] Remove a dubious optimization for Object Specific Data dispatching\n\n2020-06-11  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* exp_disp.adb: Minor reformatting.\n\t* exp_aggr.adb (Is_Static_Dispatch_Table_Aggregate): Recognize\n\taggregates of the Ada.Tags.Object_Specific_Data type as static.\n\t* sem_aggr.adb (Check_Static_Discriminated_Subtype): Deconstruct\n\tand do not call it from Build_Constrained_Itype.", "tree": {"sha": "c9230d289d80f53d984c534514408fbf1e6760e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9230d289d80f53d984c534514408fbf1e6760e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dc5653584ca84f7d396dd2aa8b65070a1c1f7e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc5653584ca84f7d396dd2aa8b65070a1c1f7e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc5653584ca84f7d396dd2aa8b65070a1c1f7e1"}], "stats": {"total": 73, "additions": 4, "deletions": 69}, "files": [{"sha": "ced0d70629df77c3587d2f6867797a377118ef21", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264", "patch": "@@ -7790,6 +7790,9 @@ package body Exp_Aggr is\n                     or else\n                   Typ = RTE (RE_Tag_Table)\n                     or else\n+                  (RTE_Available (RE_Object_Specific_Data)\n+                     and then Typ = RTE (RE_Object_Specific_Data))\n+                    or else\n                   (RTE_Available (RE_Interface_Data)\n                      and then Typ = RTE (RE_Interface_Data))\n                     or else"}, {"sha": "b8cbd4a227500bc769ff6a0c4945a3dbc2479452", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264", "patch": "@@ -4348,7 +4348,7 @@ package body Exp_Disp is\n                     Attribute_Name => Name_Alignment)));\n \n             --  In secondary dispatch tables the Typeinfo component contains\n-            --  the address of the Object Specific Data (see a-tags.ads)\n+            --  the address of the Object Specific Data (see a-tags.ads).\n \n             Append_To (DT_Aggr_List,\n               Make_Attribute_Reference (Loc,"}, {"sha": "505ddfe2d5985ea767f0be17146aca0e283deb05", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=c7cb99f885d2d6d520ef8ff0ff35e0158f2c6264", "patch": "@@ -226,12 +226,6 @@ package body Sem_Aggr is\n    --  misspelling of one of the components of the Assoc_List. This is called\n    --  by Resolve_Aggr_Expr after producing an invalid component error message.\n \n-   procedure Check_Static_Discriminated_Subtype (T : Entity_Id; V : Node_Id);\n-   --  An optimization: determine whether a discriminated subtype has a static\n-   --  constraint, and contains array components whose length is also static,\n-   --  either because they are constrained by the discriminant, or because the\n-   --  original component bounds are static.\n-\n    -----------------------------------------------------\n    -- Subprograms used for ARRAY AGGREGATE Processing --\n    -----------------------------------------------------\n@@ -722,66 +716,6 @@ package body Sem_Aggr is\n       end if;\n    end Check_Expr_OK_In_Limited_Aggregate;\n \n-   ----------------------------------------\n-   -- Check_Static_Discriminated_Subtype --\n-   ----------------------------------------\n-\n-   procedure Check_Static_Discriminated_Subtype (T : Entity_Id; V : Node_Id) is\n-      Disc : constant Entity_Id := First_Discriminant (T);\n-      Comp : Entity_Id;\n-      Ind  : Entity_Id;\n-\n-   begin\n-      if Has_Record_Rep_Clause (T) then\n-         return;\n-\n-      elsif Present (Next_Discriminant (Disc)) then\n-         return;\n-\n-      elsif Nkind (V) /= N_Integer_Literal then\n-         return;\n-      end if;\n-\n-      Comp := First_Component (T);\n-      while Present (Comp) loop\n-         if Is_Scalar_Type (Etype (Comp)) then\n-            null;\n-\n-         elsif Is_Private_Type (Etype (Comp))\n-           and then Present (Full_View (Etype (Comp)))\n-           and then Is_Scalar_Type (Full_View (Etype (Comp)))\n-         then\n-            null;\n-\n-         elsif Is_Array_Type (Etype (Comp)) then\n-            if Is_Bit_Packed_Array (Etype (Comp)) then\n-               return;\n-            end if;\n-\n-            Ind := First_Index (Etype (Comp));\n-            while Present (Ind) loop\n-               if Nkind (Ind) /= N_Range\n-                 or else Nkind (Low_Bound (Ind))  /= N_Integer_Literal\n-                 or else Nkind (High_Bound (Ind)) /= N_Integer_Literal\n-               then\n-                  return;\n-               end if;\n-\n-               Next_Index (Ind);\n-            end loop;\n-\n-         else\n-            return;\n-         end if;\n-\n-         Next_Component (Comp);\n-      end loop;\n-\n-      --  On exit, all components have statically known sizes\n-\n-      Set_Size_Known_At_Compile_Time (T);\n-   end Check_Static_Discriminated_Subtype;\n-\n    -------------------------\n    -- Is_Others_Aggregate --\n    -------------------------\n@@ -4509,8 +4443,6 @@ package body Sem_Aggr is\n             Analyze (Subtyp_Decl, Suppress => All_Checks);\n \n             Set_Etype (N, Def_Id);\n-            Check_Static_Discriminated_Subtype\n-              (Def_Id, Expression (First (New_Assoc_List)));\n          end Build_Constrained_Itype;\n \n       else"}]}