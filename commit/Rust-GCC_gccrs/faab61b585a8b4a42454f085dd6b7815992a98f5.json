{"sha": "faab61b585a8b4a42454f085dd6b7815992a98f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFhYjYxYjU4NWE4YjRhNDI0NTRmMDg1ZGQ2Yjc4MTU5OTJhOThmNQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-11-15T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-11-15T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "d88ff5a679d4fda46b19836fa311e0690be9c53d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d88ff5a679d4fda46b19836fa311e0690be9c53d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faab61b585a8b4a42454f085dd6b7815992a98f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faab61b585a8b4a42454f085dd6b7815992a98f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faab61b585a8b4a42454f085dd6b7815992a98f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faab61b585a8b4a42454f085dd6b7815992a98f5/comments", "author": null, "committer": null, "parents": [{"sha": "406b452dc0e1254684365e3cec026258a39ba6c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406b452dc0e1254684365e3cec026258a39ba6c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/406b452dc0e1254684365e3cec026258a39ba6c1"}], "stats": {"total": 119, "additions": 118, "deletions": 1}, "files": [{"sha": "91b1ba8bba4b1b1111dbf4969b1bf3a7e8c7b72d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faab61b585a8b4a42454f085dd6b7815992a98f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faab61b585a8b4a42454f085dd6b7815992a98f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=faab61b585a8b4a42454f085dd6b7815992a98f5", "patch": "@@ -1,3 +1,73 @@\n+2020-11-14  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gimple.c: Include ipa-modref-tree.h and ipa-modref.h.\n+\t(gimple_call_arg_flags): Use modref to determine flags.\n+\t* ipa-modref.c: Include gimple-ssa.h, tree-phinodes.h,\n+\ttree-ssa-operands.h, stringpool.h and tree-ssanames.h.\n+\t(analyze_ssa_name_flags): Declare.\n+\t(modref_summary::useful_p): Summary is also useful if arg flags are\n+\tknown.\n+\t(dump_eaf_flags): New function.\n+\t(modref_summary::dump): Use it.\n+\t(get_modref_function_summary): Be read for current_function_decl\n+\tbeing NULL.\n+\t(memory_access_to): New function.\n+\t(deref_flags): New function.\n+\t(call_lhs_flags): New function.\n+\t(analyze_parms): New function.\n+\t(analyze_function): Use it.\n+\t* ipa-modref.h (struct modref_summary): Add arg_flags.\n+\t* doc/invoke.texi (ipa-modref-max-depth): Document.\n+\t* params.opt (ipa-modref-max-depth): New param.\n+\n+2020-11-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/97599\n+\t* dwarf2out.c (gen_subprogram_die): Call\n+\tgen_unspecified_parameters_die even if not early dwarf, but only\n+\tif subr_die is a newly created DIE.\n+\n+2020-11-14  Monk Chiang  <monk.chiang@sifive.com>\n+\n+\tPR target/97682\n+\t* config/riscv/riscv.h (RISCV_PROLOGUE_TEMP_REGNUM): Change register\n+\tto t0.\n+\t(RISCV_CALL_ADDRESS_TEMP_REGNUM): New Marco, define t1 register.\n+\t(RISCV_CALL_ADDRESS_TEMP): Use it for call instructions.\n+\t* config/riscv/riscv.c (riscv_legitimize_call_address): Use\n+\tRISCV_CALL_ADDRESS_TEMP.\n+\t(riscv_compute_frame_info): Change temporary register to t0 form t1.\n+\t(riscv_trampoline_init): Adjust comment.\n+\n+2020-11-14  Jim Wilson  <jimw@sifive.com>\n+\t    cooper.joshua  <cooper.joshua@linux.alibaba.com>\n+\n+\t* config/riscv/riscv.c (riscv_asan_shadow_offset): New.\n+\t(TARGET_ASAN_SHADOW_OFFSET): New.\n+\t* doc/tm.texi: Regenerated.\n+\t* target.def (asan_shadow_offset); Mention that it can return zero.\n+\t* toplev.c (process_options): Check for and handle zero return from\n+\ttargetm.asan_shadow_offset call.\n+\n+2020-11-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimplify.c (gimplify_omp_for): Add OMP_CLAUSE_ALLOCATE_ALLOCATOR\n+\tdecls as firstprivate on task clauses even when allocate clause\n+\tdecl is not lastprivate.\n+\t* omp-low.c (install_var_field): Don't dereference omp_is_reference\n+\ttypes if mask is 33 rather than 1.\n+\t(scan_sharing_clauses): Populate allocate_map even for task\n+\tconstructs.  For now remove it back for variables mentioned in\n+\treduction and in_reduction clauses on task/taskloop constructs\n+\tor on VLA task firstprivates.  For firstprivate on task construct,\n+\tinstall the var field into field_map with by_ref and 33 instead\n+\tof false and 1 if mentioned in allocate clause.\n+\t(lower_private_allocate): Set TREE_THIS_NOTRAP on the created\n+\tMEM_REF.\n+\t(lower_rec_input_clauses): Handle allocate for task firstprivatized\n+\tnon-VLA variables.\n+\t(create_task_copyfn): Likewise.\n+\n 2020-11-13  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-alias.c (ao_ref_base_alias_ptr_type): Remove accidental"}, {"sha": "bd9040325d24698657a372ddb673f350db0a4d90", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faab61b585a8b4a42454f085dd6b7815992a98f5/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faab61b585a8b4a42454f085dd6b7815992a98f5/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=faab61b585a8b4a42454f085dd6b7815992a98f5", "patch": "@@ -1 +1 @@\n-20201114\n+20201115"}, {"sha": "6eaddc4822fc0f03ac95b3a8e5d187462a76878a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faab61b585a8b4a42454f085dd6b7815992a98f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faab61b585a8b4a42454f085dd6b7815992a98f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=faab61b585a8b4a42454f085dd6b7815992a98f5", "patch": "@@ -1,3 +1,37 @@\n+2020-11-14  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* objc.dg/pr23214.m: Use Object as the root object before\n+\tDarwin12 (and NSObject after).\n+\n+2020-11-14  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/torture/pta-ptrarith-1.c: Escape parameters.\n+\n+2020-11-14  Matthew Glazar  <strager.nds@gmail.com>\n+\n+\t* lib/scanasm.exp (dg-scan): Extract file globbing code ...\n+\t(dg_glob_remote): ... into this new procedure.\n+\t(scan-assembler-symbol-section): Define.\n+\t(scan-symbol-section): Define.\n+\t* g++.dg/gomp/tls-5.C: Add symbol section test.\n+\t* g++.dg/opt/const4.C: Likewise.\n+\t* gcc.dg/20021029-1.c: Likewise.\n+\t* gcc.dg/array-quals-1.c: Likewise.\n+\t* gcc.dg/darwin-sections.c: Likewise.\n+\t* gcc.dg/pr25376.c: Likewise.\n+\t* gcc.test-framework/test-framework.exp: Load scanasm and test .S files.\n+\t* gcc.test-framework/dg-scan-symbol-section-1-exp-F.S: New test.\n+\t* gcc.test-framework/dg-scan-symbol-section-2-exp-F.S: New test.\n+\t* gcc.test-framework/dg-scan-symbol-section-3-exp-F.S: New test.\n+\t* gcc.test-framework/dg-scan-symbol-section-exp-P.S: New test.\n+\n+2020-11-14  Monk Chiang  <monk.chiang@sifive.com>\n+\n+\tPR target/97682\n+\t* g++.target/riscv/pr97682.C: New test.\n+\t* gcc.target/riscv/interrupt-3.c: Check register for t0.\n+\t* gcc.target/riscv/interrupt-4.c: Likewise.\n+\n 2020-11-13  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/binary-constants-2.c, gcc.dg/binary-constants-3.c,"}, {"sha": "59557b91a16f51f2a42c013f96f2c3a7bf73ea60", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faab61b585a8b4a42454f085dd6b7815992a98f5/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faab61b585a8b4a42454f085dd6b7815992a98f5/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=faab61b585a8b4a42454f085dd6b7815992a98f5", "patch": "@@ -1,3 +1,16 @@\n+2020-11-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c-c++-common/allocate-1.c (struct S): New type.\n+\t(foo): Add tests for non-VLA private and firstprivate clauses on\n+\tomp task.\n+\t(bar): Likewise.  Remove taking of address from private/firstprivate\n+\tvariables.\n+\t* testsuite/libgomp.c++/allocate-1.C (struct S): New type.\n+\t(foo): Add p, q, px and s arguments.  Add tests for array reductions\n+\tand for non-VLA private and firstprivate clauses on omp task.\n+\t(bar): Removed.\n+\t(main): Adjust foo caller.  Don't call bar.\n+\n 2020-11-13  Gerg\u00f6 Barany  <gergo@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n "}]}