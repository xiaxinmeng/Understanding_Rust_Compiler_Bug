{"sha": "dfc1ea414e0cebccfcffc771ebcefa3d24c9754c", "node_id": "C_kwDOANBUbNoAKGRmYzFlYTQxNGUwY2ViY2NmY2ZmYzc3MWViY2VmYTNkMjRjOTc1NGM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-22T17:39:43Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-22T17:45:46Z"}, "message": "libstdc++: Replace std::isdigit and std::isxdigit in <format> [PR107817]\n\nThese functions aren't usable in constant expressions. Provide our own\nimplementations, based on __from_chars_alnum_to_val from <charconv>.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/107817\n\t* include/std/charconv (__from_chars_alnum_to_val): Add\n\tconstexpr for C++20.\n\t* include/std/format (__is_digit, __is_xdigit): New functions.\n\t(_Spec::_S_parse_width_or_precision): Use __is_digit.\n\t(__formatter_fp::parse): Use __is_xdigit.", "tree": {"sha": "4f4c71e5bc3a9a76616a0c545f549998fc961186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f4c71e5bc3a9a76616a0c545f549998fc961186"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfc1ea414e0cebccfcffc771ebcefa3d24c9754c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc1ea414e0cebccfcffc771ebcefa3d24c9754c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfc1ea414e0cebccfcffc771ebcefa3d24c9754c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc1ea414e0cebccfcffc771ebcefa3d24c9754c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b859736bb1e707778627b2e58ef6088e475a54c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b859736bb1e707778627b2e58ef6088e475a54c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b859736bb1e707778627b2e58ef6088e475a54c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "8b2acc5bf8df6562d887a083fd4f02c36a37ce60", "filename": "libstdc++-v3/include/std/charconv", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc1ea414e0cebccfcffc771ebcefa3d24c9754c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc1ea414e0cebccfcffc771ebcefa3d24c9754c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv?ref=dfc1ea414e0cebccfcffc771ebcefa3d24c9754c", "patch": "@@ -454,7 +454,7 @@ namespace __detail\n   // If _DecOnly is false: if the character is an alphanumeric digit, then\n   // return its corresponding base-36 value, otherwise return a value >= 127.\n   template<bool _DecOnly = false>\n-    _GLIBCXX23_CONSTEXPR unsigned char\n+    _GLIBCXX20_CONSTEXPR unsigned char\n     __from_chars_alnum_to_val(unsigned char __c)\n     {\n       if _GLIBCXX17_CONSTEXPR (_DecOnly)"}, {"sha": "23ffbdabed8bc7f7d968eb97c107a5a3b22c0fdf", "filename": "libstdc++-v3/include/std/format", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc1ea414e0cebccfcffc771ebcefa3d24c9754c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc1ea414e0cebccfcffc771ebcefa3d24c9754c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat?ref=dfc1ea414e0cebccfcffc771ebcefa3d24c9754c", "patch": "@@ -358,6 +358,12 @@ namespace __format\n     size_t\n     __int_from_arg(const basic_format_arg<_Context>& __arg);\n \n+  constexpr bool __is_digit(char __c)\n+  { return std::__detail::__from_chars_alnum_to_val(__c) < 10; }\n+\n+  constexpr bool __is_xdigit(char __c)\n+  { return std::__detail::__from_chars_alnum_to_val(__c) < 16; }\n+\n   template<typename _CharT>\n     struct _Spec\n     {\n@@ -469,7 +475,7 @@ namespace __format\n \t\t\t\t  unsigned short& __val, bool& __arg_id,\n \t\t\t\t  basic_format_parse_context<_CharT>& __pc)\n       {\n-\tif (std::isdigit(*__first))\n+\tif (__format::__is_digit(*__first))\n \t  {\n \t    auto [__v, __ptr] = __format::__parse_integer(__first, __last);\n \t    if (!__ptr)\n@@ -1537,7 +1543,7 @@ namespace __format\n \n \t      if (__trailing_zeros)\n \t\t{\n-\t\t  if (!std::isxdigit(__s[0]))\n+\t\t  if (!__format::__is_xdigit(__s[0]))\n \t\t    --__sigfigs;\n \t\t  __z = __prec - __sigfigs;\n \t\t}\n@@ -1627,7 +1633,7 @@ namespace __format\n \t\t{\n \t\t  __fill_char = _CharT('0');\n \t\t  // Write sign before zero filling.\n-\t\t  if (!std::isxdigit(__narrow_str[0]))\n+\t\t  if (!__format::__is_xdigit(__narrow_str[0]))\n \t\t    {\n \t\t      *__out++ = __str[0];\n \t\t      __str.remove_prefix(1);"}]}