{"sha": "4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRlOWM1M2YwMjhiZGY2NGUxYmU5MmZkMzgwZWMwNmQzNGNmMjdmOA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-11-05T13:01:06Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-11-05T13:01:06Z"}, "message": "re PR tree-optimization/58958 (Wrong aliasing info for variable index)\n\n2013-11-05  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/58958\ngcc/\n\t* tree-ssa-alias.c (ao_ref_init_from_ptr_and_size): Use\n\tget_addr_base_and_unit_offset instead of get_ref_base_and_extent.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/pr58958.c: New file.\n\nFrom-SVN: r204389", "tree": {"sha": "aaed23be2dd6d03f4b9a00f3939fd2912009199e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaed23be2dd6d03f4b9a00f3939fd2912009199e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75081240d0d199603e08ca73bb99bc1045af2c4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75081240d0d199603e08ca73bb99bc1045af2c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75081240d0d199603e08ca73bb99bc1045af2c4a"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "4b639e03bda00fb09e2ba999dc1c78ed6298383e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "patch": "@@ -1,3 +1,9 @@\n+2013-11-05  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/58958\n+\t* tree-ssa-alias.c (ao_ref_init_from_ptr_and_size): Use\n+\tget_addr_base_and_unit_offset instead of get_ref_base_and_extent.\n+\n 2013-11-05  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* tree-ssa-alias.h (ranges_overlap_p): Handle negative offsets."}, {"sha": "b33fcad60da01400bceae04b5c262de5cef65ff3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "patch": "@@ -1,3 +1,8 @@\n+2013-11-05  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/58958\n+\t* gcc.dg/tree-ssa/pr58958.c: New file.\n+\n 2013-11-05  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/tree-ssa/alias-26.c: New file."}, {"sha": "faf377fb87ec42175cb813337552e72a2cce85c9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr58958.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr58958.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr58958.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr58958.c?ref=4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+double a[10];\n+int f(int n){\n+  a[3]=9;\n+  __builtin_memset(&a[n],3,sizeof(double));\n+  return a[3]==9;\n+}\n+\n+/* { dg-final { scan-tree-dump \" == 9\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "278599591e6be3adc0a74c83f098d5fdcbdf46ec", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de9c53f028bdf64e1be92fd380ec06d34cf27f8/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=4de9c53f028bdf64e1be92fd380ec06d34cf27f8", "patch": "@@ -566,7 +566,7 @@ ao_ref_alias_set (ao_ref *ref)\n void\n ao_ref_init_from_ptr_and_size (ao_ref *ref, tree ptr, tree size)\n {\n-  HOST_WIDE_INT t1, t2, extra_offset = 0;\n+  HOST_WIDE_INT t, extra_offset = 0;\n   ref->ref = NULL_TREE;\n   if (TREE_CODE (ptr) == SSA_NAME)\n     {\n@@ -585,8 +585,17 @@ ao_ref_init_from_ptr_and_size (ao_ref *ref, tree ptr, tree size)\n     }\n \n   if (TREE_CODE (ptr) == ADDR_EXPR)\n-    ref->base = get_ref_base_and_extent (TREE_OPERAND (ptr, 0),\n-\t\t\t\t\t &ref->offset, &t1, &t2);\n+    {\n+      ref->base = get_addr_base_and_unit_offset (TREE_OPERAND (ptr, 0), &t);\n+      if (ref->base)\n+\tref->offset = BITS_PER_UNIT * t;\n+      else\n+\t{\n+\t  size = NULL_TREE;\n+\t  ref->offset = 0;\n+\t  ref->base = get_base_address (TREE_OPERAND (ptr, 0));\n+\t}\n+    }\n   else\n     {\n       ref->base = build2 (MEM_REF, char_type_node,"}]}