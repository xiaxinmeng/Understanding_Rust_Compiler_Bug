{"sha": "3794967f34fc5ff4645a74cd7fc661ecb02af336", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc5NDk2N2YzNGZjNWZmNDY0NWE3NGNkN2ZjNjYxZWNiMDJhZjMzNg==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-07-15T00:54:21Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2001-07-15T00:54:21Z"}, "message": "* pa.md: Remove unused constraints from define_split's.\n\nFrom-SVN: r44010", "tree": {"sha": "621b2b8e3f44943382bbc40a7066b7740b2f4daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/621b2b8e3f44943382bbc40a7066b7740b2f4daa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3794967f34fc5ff4645a74cd7fc661ecb02af336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3794967f34fc5ff4645a74cd7fc661ecb02af336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3794967f34fc5ff4645a74cd7fc661ecb02af336", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3794967f34fc5ff4645a74cd7fc661ecb02af336/comments", "author": null, "committer": null, "parents": [{"sha": "35cbdf6fefe1ceb2b824856874337b7ee47662e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35cbdf6fefe1ceb2b824856874337b7ee47662e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35cbdf6fefe1ceb2b824856874337b7ee47662e5"}], "stats": {"total": 92, "additions": 48, "deletions": 44}, "files": [{"sha": "bc3a2250a72f740332d0215e37a8ca94b29cfcef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3794967f34fc5ff4645a74cd7fc661ecb02af336/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3794967f34fc5ff4645a74cd7fc661ecb02af336/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3794967f34fc5ff4645a74cd7fc661ecb02af336", "patch": "@@ -1,3 +1,7 @@\n+2001-07-14  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa.md: Remove unused constraints from define_split's.\n+\n 2001-04-14  Richard Henderson  <rth@redhat.com>\n \n \t* ifcvt.c (find_cond_trap): Test for exit block."}, {"sha": "b0698845ecf40856100c9c025e7b20c4febe391c", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3794967f34fc5ff4645a74cd7fc661ecb02af336/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3794967f34fc5ff4645a74cd7fc661ecb02af336/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=3794967f34fc5ff4645a74cd7fc661ecb02af336", "patch": "@@ -4804,11 +4804,11 @@\n ;; We want to split this up during scheduling since we want both insns\n ;; to schedule independently.\n (define_split\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t\t  (match_operand:DF 2 \"register_operand\" \"f\"))\n-\t\t (match_operand:DF 3 \"register_operand\" \"f\")))\n-   (set (match_operand:DF 4 \"register_operand\" \"=&f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(plus:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"\")\n+\t\t\t  (match_operand:DF 2 \"register_operand\" \"\"))\n+\t\t (match_operand:DF 3 \"register_operand\" \"\")))\n+   (set (match_operand:DF 4 \"register_operand\" \"\")\n \t(mult:DF (match_dup 1) (match_dup 2)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 4) (mult:DF (match_dup 1) (match_dup 2)))\n@@ -4833,11 +4833,11 @@\n ;; We want to split this up during scheduling since we want both insns\n ;; to schedule independently.\n (define_split\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t\t  (match_operand:SF 2 \"register_operand\" \"f\"))\n-\t\t (match_operand:SF 3 \"register_operand\" \"f\")))\n-   (set (match_operand:SF 4 \"register_operand\" \"=&f\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(plus:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"\")\n+\t\t\t  (match_operand:SF 2 \"register_operand\" \"\"))\n+\t\t (match_operand:SF 3 \"register_operand\" \"\")))\n+   (set (match_operand:SF 4 \"register_operand\" \"\")\n \t(mult:SF (match_dup 1) (match_dup 2)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 4) (mult:SF (match_dup 1) (match_dup 2)))\n@@ -4879,10 +4879,10 @@\n    (set_attr \"length\" \"8\")])\n \n (define_split\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(neg:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t\t (match_operand:DF 2 \"register_operand\" \"f\"))))\n-   (set (match_operand:DF 3 \"register_operand\" \"=&f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(neg:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"\")\n+\t\t\t (match_operand:DF 2 \"register_operand\" \"\"))))\n+   (set (match_operand:DF 3 \"register_operand\" \"\")\n \t(mult:DF (match_dup 1) (match_dup 2)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 3) (mult:DF (match_dup 1) (match_dup 2)))\n@@ -4903,10 +4903,10 @@\n    (set_attr \"length\" \"8\")])\n \n (define_split\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(neg:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t\t (match_operand:SF 2 \"register_operand\" \"f\"))))\n-   (set (match_operand:SF 3 \"register_operand\" \"=&f\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(neg:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"\")\n+\t\t\t (match_operand:SF 2 \"register_operand\" \"\"))))\n+   (set (match_operand:SF 3 \"register_operand\" \"\")\n \t(mult:SF (match_dup 1) (match_dup 2)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 3) (mult:SF (match_dup 1) (match_dup 2)))\n@@ -4949,11 +4949,11 @@\n    (set_attr \"length\" \"8\")])\n \n (define_split\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(plus:DF (neg:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t\t\t  (match_operand:DF 2 \"register_operand\" \"f\")))\n-\t\t (match_operand:DF 3 \"register_operand\" \"f\")))\n-   (set (match_operand:DF 4 \"register_operand\" \"=&f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(plus:DF (neg:DF (mult:DF (match_operand:DF 1 \"register_operand\" \"\")\n+\t\t\t\t  (match_operand:DF 2 \"register_operand\" \"\")))\n+\t\t (match_operand:DF 3 \"register_operand\" \"\")))\n+   (set (match_operand:DF 4 \"register_operand\" \"\")\n \t(mult:DF (match_dup 1) (match_dup 2)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 4) (mult:DF (match_dup 1) (match_dup 2)))\n@@ -4976,11 +4976,11 @@\n    (set_attr \"length\" \"8\")])\n \n (define_split\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(plus:SF (neg:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t\t\t  (match_operand:SF 2 \"register_operand\" \"f\")))\n-\t\t (match_operand:SF 3 \"register_operand\" \"f\")))\n-   (set (match_operand:SF 4 \"register_operand\" \"=&f\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(plus:SF (neg:SF (mult:SF (match_operand:SF 1 \"register_operand\" \"\")\n+\t\t\t\t  (match_operand:SF 2 \"register_operand\" \"\")))\n+\t\t (match_operand:SF 3 \"register_operand\" \"\")))\n+   (set (match_operand:SF 4 \"register_operand\" \"\")\n \t(mult:SF (match_dup 1) (match_dup 2)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 4) (mult:SF (match_dup 1) (match_dup 2)))\n@@ -5003,11 +5003,11 @@\n    (set_attr \"length\" \"8\")])\n \n (define_split\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 3 \"register_operand\" \"f\")\n-\t\t  (mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t\t   (match_operand:DF 2 \"register_operand\" \"f\"))))\n-   (set (match_operand:DF 4 \"register_operand\" \"=&f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(minus:DF (match_operand:DF 3 \"register_operand\" \"\")\n+\t\t  (mult:DF (match_operand:DF 1 \"register_operand\" \"\")\n+\t\t\t   (match_operand:DF 2 \"register_operand\" \"\"))))\n+   (set (match_operand:DF 4 \"register_operand\" \"\")\n \t(mult:DF (match_dup 1) (match_dup 2)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 4) (mult:DF (match_dup 1) (match_dup 2)))\n@@ -5030,11 +5030,11 @@\n    (set_attr \"length\" \"8\")])\n \n (define_split\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(minus:SF (match_operand:SF 3 \"register_operand\" \"f\")\n-\t\t  (mult:SF (match_operand:SF 1 \"register_operand\" \"f\")\n-\t\t\t   (match_operand:SF 2 \"register_operand\" \"f\"))))\n-   (set (match_operand:SF 4 \"register_operand\" \"=&f\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(minus:SF (match_operand:SF 3 \"register_operand\" \"\")\n+\t\t  (mult:SF (match_operand:SF 1 \"register_operand\" \"\")\n+\t\t\t   (match_operand:SF 2 \"register_operand\" \"\"))))\n+   (set (match_operand:SF 4 \"register_operand\" \"\")\n \t(mult:SF (match_dup 1) (match_dup 2)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 4) (mult:SF (match_dup 1) (match_dup 2)))\n@@ -5053,9 +5053,9 @@\n    (set_attr \"length\" \"8\")])\n \n (define_split\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(neg:DF (abs:DF (match_operand:DF 1 \"register_operand\" \"f\"))))\n-   (set (match_operand:DF 2 \"register_operand\" \"=&f\") (abs:DF (match_dup 1)))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(neg:DF (abs:DF (match_operand:DF 1 \"register_operand\" \"\"))))\n+   (set (match_operand:DF 2 \"register_operand\" \"\") (abs:DF (match_dup 1)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 2) (abs:DF (match_dup 1)))\n    (set (match_dup 0) (neg:DF (abs:DF (match_dup 1))))]\n@@ -5072,9 +5072,9 @@\n    (set_attr \"length\" \"8\")])\n \n (define_split\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(neg:SF (abs:SF (match_operand:SF 1 \"register_operand\" \"f\"))))\n-   (set (match_operand:SF 2 \"register_operand\" \"=&f\") (abs:SF (match_dup 1)))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(neg:SF (abs:SF (match_operand:SF 1 \"register_operand\" \"\"))))\n+   (set (match_operand:SF 2 \"register_operand\" \"\") (abs:SF (match_dup 1)))]\n   \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n   [(set (match_dup 2) (abs:SF (match_dup 1)))\n    (set (match_dup 0) (neg:SF (abs:SF (match_dup 1))))]"}]}