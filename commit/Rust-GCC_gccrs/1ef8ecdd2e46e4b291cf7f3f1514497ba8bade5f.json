{"sha": "1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVmOGVjZGQyZTQ2ZTRiMjkxY2Y3ZjNmMTUxNDQ5N2JhOGJhZGU1Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-07-10T19:20:51Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-07-10T19:20:51Z"}, "message": "utility (identity, [...]): Add.\n\n2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/std/utility (identity, move, forward): Add.\n\t* testsuite/20_util/move/requirements/explicit_instantiation.cc: New.\n\t* testsuite/20_util/move/1.cc: New.\n\t* testsuite/20_util/identity/value.cc: New.\n\t* testsuite/20_util/identity/requirements/typedefs.cc: New.\n\t* testsuite/20_util/identity/requirements/explicit_instantiation.cc:\n\tNew.\n\t* testsuite/20_util/forward/requirements/explicit_instantiation.cc:\n\tNew.\n\t* testsuite/20_util/forward/1.cc: New.\n\t* testsuite/20_util/forward/1_neg.cc: New.\n\nFrom-SVN: r126522", "tree": {"sha": "f4e614a9174ed22bd1027cb39b83a85600334af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4e614a9174ed22bd1027cb39b83a85600334af5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/comments", "author": null, "committer": null, "parents": [{"sha": "333f4a405220572c1714b26a8ded9ee1e22050a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/333f4a405220572c1714b26a8ded9ee1e22050a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/333f4a405220572c1714b26a8ded9ee1e22050a6"}], "stats": {"total": 354, "additions": 354, "deletions": 0}, "files": [{"sha": "b7e3a433ecc5b19cdcba23d61dabe1b3d3040e10", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -1,3 +1,17 @@\n+2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/std/utility (identity, move, forward): Add.\n+\t* testsuite/20_util/move/requirements/explicit_instantiation.cc: New.\n+\t* testsuite/20_util/move/1.cc: New.\n+\t* testsuite/20_util/identity/value.cc: New.\n+\t* testsuite/20_util/identity/requirements/typedefs.cc: New.\n+\t* testsuite/20_util/identity/requirements/explicit_instantiation.cc:\n+\tNew.\n+\t* testsuite/20_util/forward/requirements/explicit_instantiation.cc:\n+\tNew.\n+\t* testsuite/20_util/forward/1.cc: New.\n+\t* testsuite/20_util/forward/1_neg.cc: New.\n+\t\n 2007-07-09  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/27_io/ios_base/failure/what-1.cc: Include <stdexcept>."}, {"sha": "1d2b501b5a2628c3cc0374c5264b7a3f6a0291ae", "filename": "libstdc++-v3/testsuite/20_util/forward/1.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2F1.cc?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <memory>\n+#include <utility>\n+\n+template<class T, class A1, class A2>\n+  std::shared_ptr<T>\n+  factory(A1&& a1, A2&& a2)\n+  {\n+    return std::shared_ptr<T>(new T(std::forward<A1>(a1),\n+\t\t\t\t    std::forward<A2>(a2)));\n+  }\n+\n+struct A\n+{\n+  A(int&, const double&);\n+};\n+\n+void g()\n+{\n+  int i = 2;\n+  std::shared_ptr<A> sp1 = factory<A>(i, 1.414);\n+}"}, {"sha": "67598e2315ae4d6a1a256ee0fe3569cc5f1a08ec", "filename": "libstdc++-v3/testsuite/20_util/forward/1_neg.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2F1_neg.cc?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <memory>\n+#include <utility>\n+\n+template<class T, class A1, class A2>\n+  std::shared_ptr<T>\n+  factory(A1&& a1, A2&& a2)\n+  {\n+    return std::shared_ptr<T>(new T(std::forward<A1>(a1),\n+\t\t\t\t    std::forward<A2>(a2))); // { dg-error \"no matching function\" }\n+  }\n+\n+struct A\n+{\n+  A(int&, const double&);\n+};\n+\n+void g()\n+{\n+  std::shared_ptr<A> sp1 = factory<A>(2, 1.414); // { dg-error \"instantiated from here\" }\n+}\n+\n+// { dg-excess-errors \"\" }"}, {"sha": "ea86327c4490252a9227c9cf62d5ccef4fd99df0", "filename": "libstdc++-v3/testsuite/20_util/forward/requirements/explicit_instantiation.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Frequirements%2Fexplicit_instantiation.cc?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing utility with NO OTHER INCLUDES.\n+\n+#include <utility>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template test_type&& forward(std::identity<test_type>::type&&);\n+}"}, {"sha": "5da92d9105be25bb2385de9fce3b9870595cfb28", "filename": "libstdc++-v3/testsuite/20_util/identity/requirements/explicit_instantiation.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Frequirements%2Fexplicit_instantiation.cc?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing utility with NO OTHER INCLUDES.\n+\n+#include <utility>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct decay<test_type>;\n+}"}, {"sha": "5642167b3b6e3d321bf68204f5a4836e73d86edb", "filename": "libstdc++-v3/testsuite/20_util/identity/requirements/typedefs.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Frequirements%2Ftypedefs.cc?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// \n+// NB: This file is for testing utility with NO OTHER INCLUDES.\n+\n+#include <utility>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::identity<int>                  test_type;\n+  typedef test_type::type                     type;\n+}"}, {"sha": "54a49a515717e2526906b75c116e17f996d0568d", "filename": "libstdc++-v3/testsuite/20_util/identity/value.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fidentity%2Fvalue.cc?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -0,0 +1,48 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <utility>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::identity;\n+  using std::is_same;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (is_same<identity<int>::type, int>::value) );\n+  VERIFY( (is_same<identity<int&>::type, int&>::value) );\n+  VERIFY( (is_same<identity<int&&>::type, int&&>::value) );\n+  VERIFY( (is_same<identity<int*>::type, int*>::value) );\n+  VERIFY( (is_same<identity<ClassType&&>::type, ClassType&&>::value) );\n+  VERIFY( (is_same<identity<ClassType>::type, ClassType>::value) );\n+  VERIFY( (is_same<identity<int(int)>::type, int(int)>::value) );\n+  VERIFY( (is_same<identity<void>::type, void>::value) );\n+  VERIFY( (is_same<identity<const void>::type, const void>::value) );  \n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "7ff7fbefbbcc604b24dc6002898123673898da74", "filename": "libstdc++-v3/testsuite/20_util/move/1.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove%2F1.cc?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <memory>\n+#include <utility>\n+\n+template<class T, class A1>\n+  std::shared_ptr<T>\n+  factory(A1&& a1)\n+  {\n+    return std::shared_ptr<T>(new T(std::forward<A1>(a1)));\n+  }\n+\n+struct A\n+{\n+  A();\n+  A(const A&);\n+  A(A&&);\n+};\n+\n+void g()\n+{\n+  A a;\n+  std::shared_ptr<A> sp1 = factory<A>(a);\n+  std::shared_ptr<A> sp2 = factory<A>(std::move(a));\n+}"}, {"sha": "a5d58ffde5a9cbeed1c567b784a469fc71402a1c", "filename": "libstdc++-v3/testsuite/20_util/move/requirements/explicit_instantiation.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmove%2Frequirements%2Fexplicit_instantiation.cc?ref=1ef8ecdd2e46e4b291cf7f3f1514497ba8bade5f", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// NB: This file is for testing utility with NO OTHER INCLUDES.\n+\n+#include <utility>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template std::remove_reference<test_type>::type&& move(test_type&&);\n+}"}]}