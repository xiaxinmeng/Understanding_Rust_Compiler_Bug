{"sha": "f861ed8b29a5eb6164d1ddbcfbb6232dddae713f", "node_id": "C_kwDOANBUbNoAKGY4NjFlZDhiMjlhNWViNjE2NGQxZGRiY2ZiYjYyMzJkZGRhZTcxM2Y", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-08-31T21:35:15Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-11-15T16:57:54Z"}, "message": "Use 'location_hash' for 'gcc/diagnostic-spec.h:nowarn_map'\n\nInstead of hard-coded '0'/'UINT_MAX', we now use the 'RESERVED_LOCATION_P'\nvalues 'UNKNOWN_LOCATION'/'BUILTINS_LOCATION' as spare values for\n'Empty'/'Deleted', and generally simplify the code.\n\n\tgcc/\n\t* diagnostic-spec.h (typedef xint_hash_t)\n\t(typedef xint_hash_map_t): Replace with...\n\t(typedef nowarn_map_t): ... this.\n\t(nowarn_map): Adjust.\n\t* diagnostic-spec.c (nowarn_map, suppress_warning_at): Likewise.", "tree": {"sha": "45828755f57b256a48feada408ba90b1733b42ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45828755f57b256a48feada408ba90b1733b42ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f861ed8b29a5eb6164d1ddbcfbb6232dddae713f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f861ed8b29a5eb6164d1ddbcfbb6232dddae713f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f861ed8b29a5eb6164d1ddbcfbb6232dddae713f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f861ed8b29a5eb6164d1ddbcfbb6232dddae713f/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcebd05720540e257b520737de6e087a328c1f8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcebd05720540e257b520737de6e087a328c1f8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcebd05720540e257b520737de6e087a328c1f8b"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "d1e563d19baccdbcdbff7a7d54f27d17488c53fd", "filename": "gcc/diagnostic-spec.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f861ed8b29a5eb6164d1ddbcfbb6232dddae713f/gcc%2Fdiagnostic-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f861ed8b29a5eb6164d1ddbcfbb6232dddae713f/gcc%2Fdiagnostic-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-spec.c?ref=f861ed8b29a5eb6164d1ddbcfbb6232dddae713f", "patch": "@@ -107,7 +107,7 @@ nowarn_spec_t::nowarn_spec_t (opt_code opt)\n \n /* A mapping from a 'location_t' to the warning spec set for it.  */\n \n-GTY(()) xint_hash_map_t *nowarn_map;\n+GTY(()) nowarn_map_t *nowarn_map;\n \n /* Return the no-warning disposition for location LOC and option OPT\n    or for all/any otions by default.  */\n@@ -163,7 +163,7 @@ suppress_warning_at (location_t loc, opt_code opt /* = all_warnings */,\n     return false;\n \n   if (!nowarn_map)\n-    nowarn_map = xint_hash_map_t::create_ggc (32);\n+    nowarn_map = nowarn_map_t::create_ggc (32);\n \n   nowarn_map->put (loc, optspec);\n   return true;"}, {"sha": "368b75f32548ac4f774d7a521cbe703261853b78", "filename": "gcc/diagnostic-spec.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f861ed8b29a5eb6164d1ddbcfbb6232dddae713f/gcc%2Fdiagnostic-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f861ed8b29a5eb6164d1ddbcfbb6232dddae713f/gcc%2Fdiagnostic-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-spec.h?ref=f861ed8b29a5eb6164d1ddbcfbb6232dddae713f", "patch": "@@ -130,14 +130,9 @@ operator!= (const nowarn_spec_t &lhs, const nowarn_spec_t &rhs)\n   return !(lhs == rhs);\n }\n \n-/* Per PR103157 \"'gengtype': 'typedef' causing infinite-recursion code to be\n-   generated\", don't use\n-       typedef int_hash<location_t, 0, UINT_MAX> xint_hash_t;\n-   here.  */\n-struct xint_hash_t : int_hash<location_t, 0, UINT_MAX> {};\n-typedef hash_map<xint_hash_t, nowarn_spec_t> xint_hash_map_t;\n+typedef hash_map<location_hash, nowarn_spec_t> nowarn_map_t;\n \n /* A mapping from a 'location_t' to the warning spec set for it.  */\n-extern GTY(()) xint_hash_map_t *nowarn_map;\n+extern GTY(()) nowarn_map_t *nowarn_map;\n \n #endif // DIAGNOSTIC_SPEC_H_INCLUDED"}]}