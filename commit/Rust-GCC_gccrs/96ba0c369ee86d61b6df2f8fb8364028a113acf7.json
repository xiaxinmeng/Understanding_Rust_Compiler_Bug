{"sha": "96ba0c369ee86d61b6df2f8fb8364028a113acf7", "node_id": "C_kwDOANBUbNoAKDk2YmEwYzM2OWVlODZkNjFiNmRmMmY4ZmI4MzY0MDI4YTExM2FjZjc", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-10-29T08:16:18Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-10-29T12:10:45Z"}, "message": "Restore RTL alias analysis for hard frame pointer\n\nThe change:\n\n\t2021-07-28  Bin Cheng  <bin.cheng@linux.alibaba.com>\n\n\talias.c (init_alias_analysis): Don't skip prologue/epilogue.\n\nbroke the alias analysis for the hard frame pointer (when it is used as a\nframe pointer, i.e. when the frame pointer is not eliminated) described in\nthe large comment at the top of the file, because static_reg_base_value is\nset for it and, consequently, new_reg_base_value too.\n\nWhen the instruction saving the stack pointer into the hard frame pointer in\nthe prologue is processed, it is viewed as a second set of the hard frame\npointer and to a different value by record_set, which then proceeds to reset\nnew_reg_base_value to 0 and the game is over.\n\ngcc/\n\t* alias.cc (init_alias_analysis): Do not record sets to the hard\n\tframe pointer if the frame pointer has not been eliminated.", "tree": {"sha": "40918ab8225545cac6614d7e2368ad399f8654e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40918ab8225545cac6614d7e2368ad399f8654e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96ba0c369ee86d61b6df2f8fb8364028a113acf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96ba0c369ee86d61b6df2f8fb8364028a113acf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96ba0c369ee86d61b6df2f8fb8364028a113acf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96ba0c369ee86d61b6df2f8fb8364028a113acf7/comments", "author": null, "committer": null, "parents": [{"sha": "7e7ebe3e350fde90fe49ab41ce3b92a811bb6370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7ebe3e350fde90fe49ab41ce3b92a811bb6370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7ebe3e350fde90fe49ab41ce3b92a811bb6370"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "c62837dd854fb4e693eeafea9033b38ca9010b7a", "filename": "gcc/alias.cc", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96ba0c369ee86d61b6df2f8fb8364028a113acf7/gcc%2Falias.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96ba0c369ee86d61b6df2f8fb8364028a113acf7/gcc%2Falias.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.cc?ref=96ba0c369ee86d61b6df2f8fb8364028a113acf7", "patch": "@@ -3369,6 +3369,10 @@ memory_modified_in_insn_p (const_rtx mem, const_rtx insn)\n void\n init_alias_analysis (void)\n {\n+  const bool frame_pointer_eliminated\n+    = reload_completed\n+      && !frame_pointer_needed\n+      && targetm.can_eliminate (FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM);\n   unsigned int maxreg = max_reg_num ();\n   int changed, pass;\n   int i;\n@@ -3446,12 +3450,8 @@ init_alias_analysis (void)\n       for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n \tif (static_reg_base_value[i]\n \t    /* Don't treat the hard frame pointer as special if we\n-\t       eliminated the frame pointer to the stack pointer instead.  */\n-\t    && !(i == HARD_FRAME_POINTER_REGNUM\n-\t\t && reload_completed\n-\t\t && !frame_pointer_needed\n-\t\t && targetm.can_eliminate (FRAME_POINTER_REGNUM,\n-\t\t\t\t\t   STACK_POINTER_REGNUM)))\n+\t       eliminated the frame pointer to the stack pointer.  */\n+\t    && !(i == HARD_FRAME_POINTER_REGNUM && frame_pointer_eliminated))\n \t  {\n \t    new_reg_base_value[i] = static_reg_base_value[i];\n \t    bitmap_set_bit (reg_seen, i);\n@@ -3467,10 +3467,15 @@ init_alias_analysis (void)\n \t\t{\n \t\t  rtx note, set;\n \n+\t\t  /* Treat the hard frame pointer as special unless we\n+\t\t     eliminated the frame pointer to the stack pointer.  */\n+\t\t  if (!frame_pointer_eliminated\n+\t\t      && modified_in_p (hard_frame_pointer_rtx, insn))\n+\t\t    continue;\n+\n \t\t  /* If this insn has a noalias note, process it,  Otherwise,\n \t\t     scan for sets.  A simple set will have no side effects\n \t\t     which could change the base value of any other register.  */\n-\n \t\t  if (GET_CODE (PATTERN (insn)) == SET\n \t\t      && REG_NOTES (insn) != 0\n \t\t      && find_reg_note (insn, REG_NOALIAS, NULL_RTX))"}]}