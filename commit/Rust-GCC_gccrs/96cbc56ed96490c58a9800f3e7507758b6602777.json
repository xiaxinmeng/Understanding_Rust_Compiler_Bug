{"sha": "96cbc56ed96490c58a9800f3e7507758b6602777", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZjYmM1NmVkOTY0OTBjNThhOTgwMGYzZTc1MDc3NThiNjYwMjc3Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-02-20T21:31:38Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-02-20T21:31:38Z"}, "message": "PR c++/93801 - False -Wmismatched-tags upon redundant typename\n\ngcc/cp/ChangeLog:\n\n\tPR c++/93801\n\t* parser.c (cp_parser_check_class_key): Only handle true C++ class-keys.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/93801\n\t* g++.dg/warn/Wredundant-tags-3.C: New test.", "tree": {"sha": "fc3c8cafecf114fbdd5c822a94ba6d89f45c6bb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc3c8cafecf114fbdd5c822a94ba6d89f45c6bb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96cbc56ed96490c58a9800f3e7507758b6602777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cbc56ed96490c58a9800f3e7507758b6602777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96cbc56ed96490c58a9800f3e7507758b6602777", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cbc56ed96490c58a9800f3e7507758b6602777/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7004e09db1e2a940ed6ad7578187d47d7ea7c773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7004e09db1e2a940ed6ad7578187d47d7ea7c773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7004e09db1e2a940ed6ad7578187d47d7ea7c773"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "fd603438d5ad4a168e8826cf00ccad86dc1152e2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96cbc56ed96490c58a9800f3e7507758b6602777/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96cbc56ed96490c58a9800f3e7507758b6602777/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=96cbc56ed96490c58a9800f3e7507758b6602777", "patch": "@@ -1,3 +1,8 @@\n+2020-02-20  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/93801\n+\t* parser.c (cp_parser_check_class_key): Only handle true C++ class-keys.\n+\n 2020-02-20  Martin Liska  <mliska@suse.cz>\n \n \tPR translation/93841"}, {"sha": "ee534b5db213244dda5afbe1d65504a795833f1e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96cbc56ed96490c58a9800f3e7507758b6602777/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96cbc56ed96490c58a9800f3e7507758b6602777/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=96cbc56ed96490c58a9800f3e7507758b6602777", "patch": "@@ -30995,6 +30995,13 @@ cp_parser_check_class_key (cp_parser *parser, location_t key_loc,\n   tree decl = cp_parser_lookup_name_simple (parser, name, input_location);\n   pop_deferring_access_checks ();\n \n+  /* Only consider the true class-keys below and ignore typename_type,\n+     etc. that are not C++ class-keys.  */\n+  if (class_key != class_type\n+      && class_key != record_type\n+      && class_key != union_type)\n+    return;\n+\n   /* The class-key is redundant for uses of the CLASS_TYPE that are\n      neither definitions of it nor declarations, and for which name\n      lookup returns just the type itself.  */"}, {"sha": "216bac92df5933fcb2d4d885ce6c78c786e7f02f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96cbc56ed96490c58a9800f3e7507758b6602777/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96cbc56ed96490c58a9800f3e7507758b6602777/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96cbc56ed96490c58a9800f3e7507758b6602777", "patch": "@@ -1,3 +1,8 @@\n+2020-02-20  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/93801\n+\t* g++.dg/warn/Wredundant-tags-3.C: New test.\n+\n 2020-02-20  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/93828"}, {"sha": "7b30e949d0c76392e85c003efebf5407f022a91b", "filename": "gcc/testsuite/g++.dg/warn/Wredundant-tags-3.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96cbc56ed96490c58a9800f3e7507758b6602777/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWredundant-tags-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96cbc56ed96490c58a9800f3e7507758b6602777/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWredundant-tags-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWredundant-tags-3.C?ref=96cbc56ed96490c58a9800f3e7507758b6602777", "patch": "@@ -0,0 +1,45 @@\n+/* PR c++/93801 - False -Wmismatched-tags upon redundant typename\n+   { dg-do compile }\n+   { dg-options \"-Wall -Wredundant-tags\" } */\n+\n+namespace N\n+{\n+  class C { };\n+  enum E { };\n+  struct S { };\n+  union U { };\n+\n+  template <int> class TC { };\n+  template <int> struct TS { };\n+  template <int> union TU { };\n+}\n+\n+N::C c1;\n+typename N::C c2;     // { dg-bogus \"-Wredundant-tags\" }\n+class N::C c3;        // { dg-warning \"-Wredundant-tags\" }\n+\n+N::E e1;\n+typename N::E e2;     // { dg-bogus \"-Wredundant-tags\" }\n+enum N::E e3;         // { dg-warning \"-Wredundant-tags\" }\n+\n+N::S s1;\n+typename N::S s2;     // { dg-bogus \"-Wredundant-tags\" }\n+struct N::S s3;       // { dg-warning \"-Wredundant-tags\" }\n+\n+N::U u1;\n+typename N::U u2;     // { dg-bogus \"-Wredundant-tags\" }\n+                      // { dg-bogus \"'class' tag used in naming 'union N::U\" \"pr93809\" { xfail *-*-*} .-1 }\n+union N::U u3;        // { dg-warning \"-Wredundant-tags\" }\n+\n+\n+typedef N::TC<0> TC0;\n+typedef typename N::TC<0> TC0;\n+typedef class N::TC<0> TC0;   // { dg-warning \"-Wredundant-tags\" \"pr93809\" { xfail *-*-*} .-1 }\n+\n+typedef N::TS<0> TS0;\n+typedef typename N::TS<0> TS0;\n+typedef struct N::TS<0> TS0;  // { dg-warning \"-Wredundant-tags\" \"pr93809\" { xfail *-*-*} .-1 }\n+\n+typedef N::TS<0> TS0;\n+typedef typename N::TS<0> TS0;\n+typedef struct N::TS<0> TS0;  // { dg-warning \"-Wredundant-tags\" \"pr93809\" { xfail *-*-*} .-1 }"}]}