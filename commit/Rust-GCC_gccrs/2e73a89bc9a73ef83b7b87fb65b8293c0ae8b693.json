{"sha": "2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU3M2E4OWJjOWE3M2VmODNiN2I4N2ZiNjViODI5M2MwYWU4YjY5Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-01-23T07:46:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-23T07:46:05Z"}, "message": "re PR c++/83918 ([c++17] ICE on constexpr eval of datatype involving function and variadic template)\n\n\tPR c++/83918\n\t* tree.c (maybe_wrap_with_location): Use NON_LVALUE_EXPR rather than\n\tVIEW_CONVERT_EXPR to wrap CONST_DECLs.\n\n\t* g++.dg/cpp1z/pr83918.C: New test.\n\nFrom-SVN: r256972", "tree": {"sha": "a57d36153388b50d5bdc27beb742519a3a6836b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a57d36153388b50d5bdc27beb742519a3a6836b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38ad6f8a440f7594b9cea5fb999078035ee36a57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ad6f8a440f7594b9cea5fb999078035ee36a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ad6f8a440f7594b9cea5fb999078035ee36a57"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "a1307e34b5091ab1dde2714b832b29bf1795d2ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693", "patch": "@@ -1,3 +1,9 @@\n+2018-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/83918\n+\t* tree.c (maybe_wrap_with_location): Use NON_LVALUE_EXPR rather than\n+\tVIEW_CONVERT_EXPR to wrap CONST_DECLs.\n+\n 2018-01-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/83957"}, {"sha": "d22af7ab9270eb3abb7db1e593be942b38a01cc2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693", "patch": "@@ -1,3 +1,8 @@\n+2018-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/83918\n+\t* g++.dg/cpp1z/pr83918.C: New test.\n+\n 2018-01-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/83957"}, {"sha": "d4fe82631edf9e4729be125da91a02735f80fbb1", "filename": "gcc/testsuite/g++.dg/cpp1z/pr83918.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr83918.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr83918.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr83918.C?ref=2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/83918\n+// { dg-do compile }\n+// { dg-options \"-std=c++17\" }\n+\n+constexpr unsigned\n+foo (unsigned x, unsigned y)\n+{\n+  return x > y ? x : y;\n+}\n+\n+template <typename, typename> struct A;\n+template <auto ...> struct B;\n+template <auto S, auto ... T, auto U, auto ... V>\n+struct A <B <S, T...>, B <U, V...>>\n+{\n+  enum : unsigned\n+  {\n+    u = foo (sizeof (S), sizeof (U)),\n+    v = A <B <T...>, B <V...>>::w,\n+    w = foo (u, v)\n+  };\n+};\n+\n+template <>\n+struct A <B <>, B <>>\n+{\n+  enum : unsigned { w = 0 };\n+};\n+\n+constexpr static const auto v { A <B <1,2,3,4,5,6,7,8,9>,\n+\t\t\t\t   B <9,8,7,6,5,4,3,2,1>>::w };\n+static_assert (v == sizeof (int));"}, {"sha": "452d3855a77fc8e4d997035dc5be8160ebc64f26", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2e73a89bc9a73ef83b7b87fb65b8293c0ae8b693", "patch": "@@ -14085,8 +14085,10 @@ maybe_wrap_with_location (tree expr, location_t loc)\n   if (EXCEPTIONAL_CLASS_P (expr))\n     return expr;\n \n-  tree_code code = (CONSTANT_CLASS_P (expr) && TREE_CODE (expr) != STRING_CST\n-\t\t    ? NON_LVALUE_EXPR : VIEW_CONVERT_EXPR);\n+  tree_code code\n+    = (((CONSTANT_CLASS_P (expr) && TREE_CODE (expr) != STRING_CST)\n+\t|| (TREE_CODE (expr) == CONST_DECL && !TREE_STATIC (expr)))\n+       ? NON_LVALUE_EXPR : VIEW_CONVERT_EXPR);\n   tree wrapper = build1_loc (loc, code, TREE_TYPE (expr), expr);\n   /* Mark this node as being a wrapper.  */\n   EXPR_LOCATION_WRAPPER_P (wrapper) = 1;"}]}