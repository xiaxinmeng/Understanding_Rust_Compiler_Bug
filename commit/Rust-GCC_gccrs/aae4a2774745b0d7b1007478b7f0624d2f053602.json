{"sha": "aae4a2774745b0d7b1007478b7f0624d2f053602", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFlNGEyNzc0NzQ1YjBkN2IxMDA3NDc4YjdmMDYyNGQyZjA1MzYwMg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-12-23T19:54:09Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-12-23T19:54:09Z"}, "message": "re PR c++/17413 (local classes as template argument)\n\n\tPR c++/17413\n\t* pt.c (check_instantiated_args): Remove bogus SFINAE code.\n\n\tPR c++/17413\n\t* g++.dg/template/local4.C: New test.\n\t* g++.dg/template/crash19.C: Add dg-error marker.\n\nFrom-SVN: r92562", "tree": {"sha": "c64e1164a075daef52ee73abf59500f11de6bcad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c64e1164a075daef52ee73abf59500f11de6bcad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aae4a2774745b0d7b1007478b7f0624d2f053602", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aae4a2774745b0d7b1007478b7f0624d2f053602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aae4a2774745b0d7b1007478b7f0624d2f053602", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aae4a2774745b0d7b1007478b7f0624d2f053602/comments", "author": null, "committer": null, "parents": [{"sha": "3316f968992e9ffe9e8fc4e9ec8441b406d0e7ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3316f968992e9ffe9e8fc4e9ec8441b406d0e7ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3316f968992e9ffe9e8fc4e9ec8441b406d0e7ee"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "04ec9463dd95c2ff0f0474c59249b6946a542ffb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aae4a2774745b0d7b1007478b7f0624d2f053602", "patch": "@@ -1,5 +1,8 @@\n 2004-12-23  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/17413\n+\t* pt.c (check_instantiated_args): Remove bogus SFINAE code.\n+\n \t* cvt.c (convert_to_void): Fix typo in comment.\n \n 2004-12-23  Alexandre Oliva  <aoliva@redhat.com>"}, {"sha": "bbe892e416ee61299584d95d8641bb07093aa2bb", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=aae4a2774745b0d7b1007478b7f0624d2f053602", "patch": "@@ -8926,9 +8926,7 @@ check_instantiated_args (tree tmpl, tree args, tsubst_flags_t complain)\n \n \t  if (nt)\n \t    {\n-\t      if (!(complain & tf_error))\n-\t\t/*OK*/;\n-\t      else if (TYPE_ANONYMOUS_P (nt))\n+\t      if (TYPE_ANONYMOUS_P (nt))\n \t\terror (\"%qT uses anonymous type\", t);\n \t      else\n \t\terror (\"%qT uses local type %qT\", t, nt);"}, {"sha": "a7f4c7f4222e1eeb754b1a60cf5617b3375fc9e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aae4a2774745b0d7b1007478b7f0624d2f053602", "patch": "@@ -1,5 +1,9 @@\n 2004-12-23  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/17413\n+\t* g++.dg/template/local4.C: New test.\n+\t* g++.dg/template/crash19.C: Add dg-error marker.\n+\n \t* g++.dg/template/crash31.C: Correct embedded PR number.\n \n 2004-12-23  Mark Mitchell  <mark@codesourcery.com>"}, {"sha": "59b4140c578b20b6031d5753b9dccdeae353e0d9", "filename": "gcc/testsuite/g++.dg/template/crash19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash19.C?ref=aae4a2774745b0d7b1007478b7f0624d2f053602", "patch": "@@ -9,7 +9,7 @@ template <class T>\n struct X { \n     enum { SIXTY_FOUR=64 }; \n     struct node {\n-      unsigned char *ptr[sizeof(T)*SIXTY_FOUR];\n+      unsigned char *ptr[sizeof(T)*SIXTY_FOUR]; // { dg-error \"\" }\n         void d() {}\n     };\n     node *head; "}, {"sha": "53a51982161f705cf3d8e38b214da118a8bb6b8a", "filename": "gcc/testsuite/g++.dg/template/local4.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aae4a2774745b0d7b1007478b7f0624d2f053602/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C?ref=aae4a2774745b0d7b1007478b7f0624d2f053602", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/17413\n+\n+template <typename T> void foo() {}\n+\n+int main () {\n+  struct S {};\n+  // We do not simply use \"local|match\" on line 10 because we want to\n+  // make sure that \"local\" appears.\n+  // { dg-error \"local\" \"\" { target *-*-* } 10 }\n+  foo<S> (); // { dg-error \"match\" } \n+}"}]}