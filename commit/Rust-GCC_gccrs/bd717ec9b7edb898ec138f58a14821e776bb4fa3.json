{"sha": "bd717ec9b7edb898ec138f58a14821e776bb4fa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ3MTdlYzliN2VkYjg5OGVjMTM4ZjU4YTE0ODIxZTc3NmJiNGZhMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T10:47:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T10:47:29Z"}, "message": "Minor code cleanups.\n\nFrom-SVN: r235125", "tree": {"sha": "ab847034983158c671f1897fe7841249ad6a0eeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab847034983158c671f1897fe7841249ad6a0eeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd717ec9b7edb898ec138f58a14821e776bb4fa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd717ec9b7edb898ec138f58a14821e776bb4fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd717ec9b7edb898ec138f58a14821e776bb4fa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd717ec9b7edb898ec138f58a14821e776bb4fa3/comments", "author": null, "committer": null, "parents": [{"sha": "87feba051d2870479fab45d2a8671bc4e6d7817f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87feba051d2870479fab45d2a8671bc4e6d7817f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87feba051d2870479fab45d2a8671bc4e6d7817f"}], "stats": {"total": 76, "additions": 36, "deletions": 40}, "files": [{"sha": "4224d66033e9e2b876ce4e0238f6350a489eb7bd", "filename": "gcc/ada/a-exetim-mingw.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd717ec9b7edb898ec138f58a14821e776bb4fa3/gcc%2Fada%2Fa-exetim-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd717ec9b7edb898ec138f58a14821e776bb4fa3/gcc%2Fada%2Fa-exetim-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-mingw.ads?ref=bd717ec9b7edb898ec138f58a14821e776bb4fa3", "patch": "@@ -41,7 +41,6 @@ with Ada.Real_Time;\n package Ada.Execution_Time with\n   SPARK_Mode\n is\n-\n    type CPU_Time is private;\n \n    CPU_Time_First : constant CPU_Time;"}, {"sha": "4657336e726bba1efc277243e9674787bfc6b068", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd717ec9b7edb898ec138f58a14821e776bb4fa3/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd717ec9b7edb898ec138f58a14821e776bb4fa3/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=bd717ec9b7edb898ec138f58a14821e776bb4fa3", "patch": "@@ -4446,8 +4446,8 @@ package body Sem_Aggr is\n \n                               Comp_Elmt := First_Elmt (Components);\n                               while Present (Comp_Elmt) loop\n-                                 if\n-                                   Ekind (Node (Comp_Elmt)) /= E_Discriminant\n+                                 if Ekind (Node (Comp_Elmt)) /=\n+                                      E_Discriminant\n                                  then\n                                     Process_Component (Node (Comp_Elmt));\n                                  end if;\n@@ -4599,8 +4599,8 @@ package body Sem_Aggr is\n \n                elsif Others_Box = 1 and then Warn_On_Redundant_Constructs then\n                   Error_Msg_N (\"others choice is redundant?\", Box_Node);\n-                  Error_Msg_N (\"\\previous choices cover all components?\",\n-                     Box_Node);\n+                  Error_Msg_N\n+                    (\"\\previous choices cover all components?\", Box_Node);\n                end if;\n \n                exit Verification;"}, {"sha": "d7264ec977d96d2343c83bd832dddc9f35c1631d", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 30, "deletions": 32, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd717ec9b7edb898ec138f58a14821e776bb4fa3/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd717ec9b7edb898ec138f58a14821e776bb4fa3/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=bd717ec9b7edb898ec138f58a14821e776bb4fa3", "patch": "@@ -4108,6 +4108,9 @@ package body Sem_Ch4 is\n       --  conformant. If the parent node is not analyzed yet it may be an\n       --  indexed component rather than a function call.\n \n+      function Has_Dereference (Nod : Node_Id) return Boolean;\n+      --  Check whether prefix includes a dereference at any level\n+\n       --------------------------------\n       -- Find_Component_In_Instance --\n       --------------------------------\n@@ -4209,6 +4212,23 @@ package body Sem_Ch4 is\n          return True;\n       end Has_Mode_Conformant_Spec;\n \n+      ---------------------\n+      -- Has_Dereference --\n+      ---------------------\n+\n+      function Has_Dereference (Nod : Node_Id) return Boolean is\n+      begin\n+         if Nkind (Nod) = N_Explicit_Dereference then\n+            return True;\n+\n+         elsif Nkind_In (Nod, N_Indexed_Component, N_Selected_Component) then\n+            return Has_Dereference (Prefix (Nod));\n+\n+         else\n+            return False;\n+         end if;\n+      end Has_Dereference;\n+\n    --  Start of processing for Analyze_Selected_Component\n \n    begin\n@@ -4663,38 +4683,16 @@ package body Sem_Ch4 is\n          --  This is legal if prefix is an access to such type and there is\n          --  a dereference, or is a component with a dereferenced prefix.\n \n-         if In_Scope and then not Is_Entity_Name (Name) then\n-            declare\n-\n-               function Has_Dereference (N : Node_Id) return Boolean;\n-               --  Check whether prefix includes a dereference at any level.\n-\n-               ---------------------\n-               -- Has_Dereference --\n-               ---------------------\n-\n-               function Has_Dereference (N : Node_Id) return Boolean is\n-               begin\n-                  if Nkind (N) = N_Explicit_Dereference then\n-                     return True;\n-                  elsif\n-                    Nkind_In (N, N_Selected_Component, N_Indexed_Component)\n-                  then\n-                     return Has_Dereference (Prefix (N));\n-                  else\n-                     return False;\n-                  end if;\n-               end Has_Dereference;\n-\n-            begin\n-               if not Has_Dereference (Name) then\n-                  Error_Msg_NE (\"invalid reference to internal operation \"\n-                     & \"of some object of type &\", N, Type_To_Use);\n-                  Set_Entity (Sel, Any_Id);\n-                  Set_Etype  (Sel, Any_Type);\n-                  return;\n-               end if;\n-            end;\n+         if In_Scope\n+           and then not Is_Entity_Name (Name)\n+           and then not Has_Dereference (Name)\n+         then\n+            Error_Msg_NE\n+              (\"invalid reference to internal operation of some object of \"\n+               & \"type &\", N, Type_To_Use);\n+            Set_Entity (Sel, Any_Id);\n+            Set_Etype  (Sel, Any_Type);\n+            return;\n          end if;\n \n          --  If there is no visible entity with the given name or none of the"}, {"sha": "09f9ac8858d08d1bcd54c5b96bdafd4e402b6384", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd717ec9b7edb898ec138f58a14821e776bb4fa3/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd717ec9b7edb898ec138f58a14821e776bb4fa3/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=bd717ec9b7edb898ec138f58a14821e776bb4fa3", "patch": "@@ -1145,9 +1145,8 @@ package body Sem_Warn is\n                     and then not Is_Imported (E1)\n                   then\n                      Error_Msg_N\n-                       (\"?k?& is not modified, \" &\n-                          \"consider pragma Export for volatile variable!\",\n-                        E1);\n+                       (\"?k?& is not modified, consider pragma Export for \"\n+                        & \"volatile variable!\", E1);\n \n                   --  Another special case, Exception_Occurrence, this catches\n                   --  the case of exception choice (and a bit more too, but not"}]}