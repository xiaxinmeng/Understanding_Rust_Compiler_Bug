{"sha": "52bf7d5d090f026c1e72949f6556b392fdd839ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJiZjdkNWQwOTBmMDI2YzFlNzI5NDlmNjU1NmIzOTJmZGQ4MzllYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-10-26T23:48:58Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-10-26T23:48:58Z"}, "message": "error.c (dump_decl): Deal with TEMPLATE_DECLs that are VAR_DECLs.\n\n\t* error.c (dump_decl): Deal with TEMPLATE_DECLs that are\n\tVAR_DECLs.  Handle vtables whose DECL_CONTEXT is not a type.\n\t* class.c (finish_struct_1): Use build_cplus_array_type to build\n\tarray types.\n\t* decl.c (init_decl_processing): Likewise.\n\t* except.c (expand_end_eh_spec): Likewise.\n\t* search.c (expand_upcast_fixups): Simplify very slightly.\n\nFrom-SVN: r23359", "tree": {"sha": "fa8101d9dcabb5f1cf651dceaf682d01104640fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa8101d9dcabb5f1cf651dceaf682d01104640fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52bf7d5d090f026c1e72949f6556b392fdd839ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52bf7d5d090f026c1e72949f6556b392fdd839ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52bf7d5d090f026c1e72949f6556b392fdd839ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52bf7d5d090f026c1e72949f6556b392fdd839ec/comments", "author": null, "committer": null, "parents": [{"sha": "ad3ef78e25a7f3ec042403fe1f353226f3962477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3ef78e25a7f3ec042403fe1f353226f3962477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad3ef78e25a7f3ec042403fe1f353226f3962477"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "8c3123b393554fa2e7d234e7f9cbd1816f4273d4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=52bf7d5d090f026c1e72949f6556b392fdd839ec", "patch": "@@ -1,3 +1,14 @@\n+1998-10-26  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* error.c (dump_decl): Deal with TEMPLATE_DECLs that are\n+\tVAR_DECLs.  Handle vtables whose DECL_CONTEXT is not a type.\n+\n+\t* class.c (finish_struct_1): Use build_cplus_array_type to build\n+\tarray types.\n+\t* decl.c (init_decl_processing): Likewise.\n+\t* except.c (expand_end_eh_spec): Likewise.\n+\t* search.c (expand_upcast_fixups): Simplify very slightly.\n+\t\n 1998-10-26  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (grokdeclarator): Complain about a variable using"}, {"sha": "6245700de6ea780f3816d17565a808af87b2c66e", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=52bf7d5d090f026c1e72949f6556b392fdd839ec", "patch": "@@ -4155,7 +4155,7 @@ finish_struct_1 (t, warn_anon)\n     {\n       /* Use size_int so values are memoized in common cases.  */\n       tree itype = build_index_type (size_int (has_virtual));\n-      tree atype = build_array_type (vtable_entry_type, itype);\n+      tree atype = build_cplus_array_type (vtable_entry_type, itype);\n \n       layout_type (atype);\n "}, {"sha": "87b8d5081121505bb9508bd6955238b5d18e7527", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=52bf7d5d090f026c1e72949f6556b392fdd839ec", "patch": "@@ -6208,7 +6208,7 @@ init_decl_processing ()\n   record_builtin_type (RID_MAX, VTBL_PTR_TYPE, vtable_entry_type);\n \n   vtbl_type_node\n-    = build_array_type (vtable_entry_type, NULL_TREE);\n+    = build_cplus_array_type (vtable_entry_type, NULL_TREE);\n   layout_type (vtbl_type_node);\n   vtbl_type_node = build_qualified_type (vtbl_type_node, TYPE_QUAL_CONST);\n   record_builtin_type (RID_MAX, NULL_PTR, vtbl_type_node);"}, {"sha": "bd7d178879eb39a3695ae0e576fd2dc7d4981ccf", "filename": "gcc/cp/error.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=52bf7d5d090f026c1e72949f6556b392fdd839ec", "patch": "@@ -729,7 +729,13 @@ dump_decl (t, v)\n       if (DECL_NAME (t) && VTABLE_NAME_P (DECL_NAME (t)))\n \t{\n \t  OB_PUTS (\"vtable for \");\n-\t  dump_type (DECL_CONTEXT (t), v);\n+\t  if (TYPE_P (DECL_CONTEXT (t)))\n+\t    dump_type (DECL_CONTEXT (t), v);\n+\t  else\n+\t    /* This case can arise with -fno-vtable-thunks.  See\n+\t       expand_upcast_fixups.  It's not clear what to print\n+\t       here.  */\n+\t    OB_PUTS (\"{unknown type}\");\n \t  break;\n \t}\n       /* else fall through */\n@@ -863,6 +869,8 @@ dump_decl (t, v)\n \n \tif (TREE_CODE (DECL_TEMPLATE_RESULT (t)) == TYPE_DECL)\n \t  dump_type (TREE_TYPE (t), v);\n+\telse if (TREE_CODE (DECL_TEMPLATE_RESULT (t)) == VAR_DECL)\n+\t  dump_decl (DECL_TEMPLATE_RESULT (t), v);\n \telse if (TREE_TYPE (t) == NULL_TREE)\n \t   my_friendly_abort (353);\n \telse switch (NEXT_CODE (t))"}, {"sha": "2d069dac6fd290343690327bb741c493b3209795", "filename": "gcc/cp/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=52bf7d5d090f026c1e72949f6556b392fdd839ec", "patch": "@@ -774,7 +774,7 @@ expand_end_eh_spec (raises)\n   TREE_HAS_CONSTRUCTOR (types) = 1;\n \n   /* We can't pass the CONSTRUCTOR directly, so stick it in a variable.  */\n-  tmp = build_array_type (const_ptr_type_node, NULL_TREE);\n+  tmp = build_cplus_array_type (const_ptr_type_node, NULL_TREE);\n   decl = build_decl (VAR_DECL, NULL_TREE, tmp);\n   DECL_ARTIFICIAL (decl) = 1;\n   DECL_INITIAL (decl) = types;"}, {"sha": "c49fd2268d49df4f6209ee5ae5c326cd7b34bfb8", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bf7d5d090f026c1e72949f6556b392fdd839ec/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=52bf7d5d090f026c1e72949f6556b392fdd839ec", "patch": "@@ -2542,7 +2542,7 @@ expand_upcast_fixups (binfo, addr, orig_addr, vbase, vbase_addr, t,\n \t      /* Dup it if it isn't in local scope yet.  */\n \t      nvtbl = build_decl\n \t\t(VAR_DECL, DECL_NAME (vtbl),\n-\t\t TYPE_MAIN_VARIANT (TREE_TYPE (BINFO_VTABLE (binfo))));\n+\t\t TYPE_MAIN_VARIANT (TREE_TYPE (vtbl)));\n \t      DECL_ALIGN (nvtbl) = MAX (TYPE_ALIGN (double_type_node),\n \t\t\t\t\tDECL_ALIGN (nvtbl));\n \t      TREE_READONLY (nvtbl) = 0;"}]}