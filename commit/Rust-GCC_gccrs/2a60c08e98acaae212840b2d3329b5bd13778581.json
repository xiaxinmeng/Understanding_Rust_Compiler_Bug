{"sha": "2a60c08e98acaae212840b2d3329b5bd13778581", "node_id": "C_kwDOANBUbNoAKDJhNjBjMDhlOThhY2FhZTIxMjg0MGIyZDMzMjliNWJkMTM3Nzg1ODE", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-12-10T11:01:22Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-06T17:11:42Z"}, "message": "[Ada] Warn on subtype declaration of null range\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Range): Warn on null range, unless we are\n\tinside a generic unit or an instance thereof.\n\t* sem_ch3.adb (Analyze_Subtype_Indication): Minor: avoid double\n\tnegative.", "tree": {"sha": "2b00cc1deb87a7f7e19d77777f72e98726150e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b00cc1deb87a7f7e19d77777f72e98726150e5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a60c08e98acaae212840b2d3329b5bd13778581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a60c08e98acaae212840b2d3329b5bd13778581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a60c08e98acaae212840b2d3329b5bd13778581", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a60c08e98acaae212840b2d3329b5bd13778581/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1871f2cb3cef93485a11057b1bb9aff2c68dd512", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1871f2cb3cef93485a11057b1bb9aff2c68dd512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1871f2cb3cef93485a11057b1bb9aff2c68dd512"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "ce5f4536a26365be77d9b8cc823c81832f60afa6", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a60c08e98acaae212840b2d3329b5bd13778581/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a60c08e98acaae212840b2d3329b5bd13778581/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=2a60c08e98acaae212840b2d3329b5bd13778581", "patch": "@@ -6048,13 +6048,13 @@ package body Sem_Ch3 is\n    begin\n       Analyze (T);\n \n-      if R /= Error then\n+      if R = Error then\n+         Set_Error_Posted (R);\n+         Set_Error_Posted (T);\n+      else\n          Analyze (R);\n          Set_Etype (N, Etype (R));\n          Resolve (R, Entity (T));\n-      else\n-         Set_Error_Posted (R);\n-         Set_Error_Posted (T);\n       end if;\n    end Analyze_Subtype_Indication;\n "}, {"sha": "44b041431c82d6258301c08c6c48c189495836c5", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a60c08e98acaae212840b2d3329b5bd13778581/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a60c08e98acaae212840b2d3329b5bd13778581/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=2a60c08e98acaae212840b2d3329b5bd13778581", "patch": "@@ -10754,6 +10754,30 @@ package body Sem_Res is\n             Fold_Uint (H, Expr_Value (H), Static => True);\n          end if;\n       end if;\n+\n+      --  If we have a compile-time-known null range, we warn, because that is\n+      --  likely to be a mistake. (Dynamic null ranges make sense, but often\n+      --  compile-time-known ones do not.) Warn only if this is in a subtype\n+      --  declaration. We do this here, rather than while analyzing a subtype\n+      --  declaration, in case we decide to expand the cases. We do not want to\n+      --  warn in all cases, because some are idiomatic, such as an empty\n+      --  aggregate (1 .. 0 => <>).\n+\n+      --  We don't warn in generics or their instances, because there might be\n+      --  some instances where the range is null, and some where it is not,\n+      --  which would lead to false alarms.\n+\n+      if not (Inside_A_Generic or In_Instance)\n+        and then Comes_From_Source (N)\n+        and then Compile_Time_Compare\n+          (Low_Bound (N), High_Bound (N), Assume_Valid => True) = GT\n+        and then Nkind (Parent (N)) = N_Range_Constraint\n+        and then Nkind (Parent (Parent (N))) = N_Subtype_Indication\n+        and then Nkind (Parent (Parent (Parent (N)))) = N_Subtype_Declaration\n+        and then Is_OK_Static_Range (N)\n+      then\n+         Error_Msg_N (\"null range??\", N);\n+      end if;\n    end Resolve_Range;\n \n    --------------------------"}]}