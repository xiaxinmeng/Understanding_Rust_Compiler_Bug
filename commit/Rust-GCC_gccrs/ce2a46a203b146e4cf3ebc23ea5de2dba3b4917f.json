{"sha": "ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UyYTQ2YTIwM2IxNDZlNGNmM2ViYzIzZWE1ZGUyZGJhM2I0OTE3Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-06-14T10:49:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-06-14T10:49:36Z"}, "message": "locale_facets.tcc (time_get<>::_M_extract_name): Don't use the 'magic number' 10 in the computation of __minlen...\n\n2004-06-14  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (time_get<>::_M_extract_name):\n\tDon't use the 'magic number' 10 in the computation of __minlen;\n\tnever access __name past __minlen; in the loop over __i3, don't\n\tdecrease __nmatches and increase __i3 at once, only either of\n\tthe two; tidy.\n\nFrom-SVN: r83088", "tree": {"sha": "5d8566d75eac68ad234ef33b527b79800c71a59a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d8566d75eac68ad234ef33b527b79800c71a59a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f/comments", "author": null, "committer": null, "parents": [{"sha": "93ae5495f56f08b888269b8fcf175cc7df8f1322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ae5495f56f08b888269b8fcf175cc7df8f1322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93ae5495f56f08b888269b8fcf175cc7df8f1322"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "899ce98f55631b8e4aadb24537a67fc753c07762", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f", "patch": "@@ -1,3 +1,11 @@\n+2004-06-14  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (time_get<>::_M_extract_name):\n+\tDon't use the 'magic number' 10 in the computation of __minlen;\n+\tnever access __name past __minlen; in the loop over __i3, don't\n+\tdecrease __nmatches and increase __i3 at once, only either of\n+\tthe two; tidy.\n+\n 2004-06-13  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (time_get<>::do_get_time,"}, {"sha": "0c181cf3601e94b8ef5b64496cdcbd8afd592133", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f", "patch": "@@ -2002,35 +2002,30 @@ namespace std\n       while (__nmatches > 1)\n \t{\n \t  // Find smallest matching string.\n-\t  size_t __minlen = 10;\n-\t  for (size_t __i2 = 0; __i2 < __nmatches; ++__i2)\n+\t  size_t __minlen = __traits_type::length(__names[__matches[0]]);\n+\t  for (size_t __i2 = 1; __i2 < __nmatches; ++__i2)\n \t    __minlen = std::min(__minlen,\n \t\t\t      __traits_type::length(__names[__matches[__i2]]));\n+\t  ++__pos;\n \t  ++__beg;\n \t  if (__pos < __minlen && __beg != __end)\n-\t    {\n-\t      ++__pos;\n-\t      for (size_t __i3 = 0; __i3 < __nmatches; ++__i3)\n-\t\t{\n-\t\t  __name = __names[__matches[__i3]];\n-\t\t  if (__name[__pos] != *__beg)\n-\t\t    __matches[__i3] = __matches[--__nmatches];\n-\t\t}\n-\t    }\n+\t    for (size_t __i3 = 0; __i3 < __nmatches;)\n+\t      {\n+\t\t__name = __names[__matches[__i3]];\n+\t\tif (__name[__pos] != *__beg)\n+\t\t  __matches[__i3] = __matches[--__nmatches];\n+\t\telse\n+\t\t  ++__i3;\n+\t      }\n \t  else\n \t    break;\n \t}\n \n       if (__nmatches == 1)\n \t{\n-\t  // If there was only one match, the first compare is redundant.\n-\t  if (__pos == 0)\n-\t    {\n-\t      ++__pos;\n-\t      ++__beg;\n-\t    }\n-\n \t  // Make sure found name is completely extracted.\n+\t  ++__pos;\n+\t  ++__beg;\n \t  __name = __names[__matches[0]];\n \t  const size_t __len = __traits_type::length(__name);\n \t  while (__pos < __len && __beg != __end && __name[__pos] == *__beg)"}]}