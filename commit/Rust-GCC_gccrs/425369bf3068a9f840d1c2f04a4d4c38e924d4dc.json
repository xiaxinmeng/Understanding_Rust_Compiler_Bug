{"sha": "425369bf3068a9f840d1c2f04a4d4c38e924d4dc", "node_id": "C_kwDOANBUbNoAKDQyNTM2OWJmMzA2OGE5Zjg0MGQxYzJmMDRhNGQ0YzM4ZTkyNGQ0ZGM", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-17T21:04:26Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-17T21:04:26Z"}, "message": "Fix modref summary streaming\n\nFixes bug in streaming in modref access tree that now cause a failure\nof gamess benchmark.  The bug is quite old (present in GCC11 release) but it\nneeds quite interesting series of events to manifest. In particular\n 1) At lto time ISRA turns some parameters passed by reference to scalar\n 2) At lto time modref computes summaries for old parameters and then updates\n    them but does so quite stupidly believing that the load from parameters\n    are now unkonwn loads (rather than optimized out).\n    This renders summary not very useful since it thinks every memory aliasing\n    int is now accssed (as opposed as parameter dereference)\n 3) At stream in we notice too early that summary is useless, set every_access\n    flag and drop the list.  However while reading rest of the summary we\n    overwrite the flag back to 0 which makes us to lose part of summary.\n 4) right selection of partitions needs to be done to avoid late modref from\n    recalculating and thus fixing the summary.\n\nThis patch fixes the stream in bug, however we also should fix updating of\nsummaries.\n\ngcc/ChangeLog:\n\n2021-11-17  Jan Hubicka  <hubicka@ucw.cz>\n\n\tPR ipa/103246\n\t* ipa-modref.c (read_modref_records): Fix streaminig in of every_access\n\tflag.", "tree": {"sha": "a5dcb79130425eae75cf594b5a331189c3a56268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5dcb79130425eae75cf594b5a331189c3a56268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/425369bf3068a9f840d1c2f04a4d4c38e924d4dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425369bf3068a9f840d1c2f04a4d4c38e924d4dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/425369bf3068a9f840d1c2f04a4d4c38e924d4dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425369bf3068a9f840d1c2f04a4d4c38e924d4dc/comments", "author": null, "committer": null, "parents": [{"sha": "69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c94f0589d44590b4556e9e6f07d0bc293cd0e496", "filename": "gcc/ipa-modref.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/425369bf3068a9f840d1c2f04a4d4c38e924d4dc/gcc%2Fipa-modref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/425369bf3068a9f840d1c2f04a4d4c38e924d4dc/gcc%2Fipa-modref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref.c?ref=425369bf3068a9f840d1c2f04a4d4c38e924d4dc", "patch": "@@ -3460,10 +3460,10 @@ read_modref_records (lto_input_block *ib, struct data_in *data_in,\n \t  size_t every_access = streamer_read_uhwi (ib);\n \t  size_t naccesses = streamer_read_uhwi (ib);\n \n-\t  if (nolto_ref_node)\n-\t    nolto_ref_node->every_access = every_access;\n-\t  if (lto_ref_node)\n-\t    lto_ref_node->every_access = every_access;\n+\t  if (nolto_ref_node && every_access)\n+\t    nolto_ref_node->collapse ();\n+\t  if (lto_ref_node && every_access)\n+\t    lto_ref_node->collapse ();\n \n \t  for (size_t k = 0; k < naccesses; k++)\n \t    {"}]}