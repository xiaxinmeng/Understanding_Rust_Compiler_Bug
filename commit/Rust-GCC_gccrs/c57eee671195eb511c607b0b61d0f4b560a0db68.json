{"sha": "c57eee671195eb511c607b0b61d0f4b560a0db68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU3ZWVlNjcxMTk1ZWI1MTFjNjA3YjBiNjFkMGY0YjU2MGEwZGI2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-28T18:04:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-28T18:04:48Z"}, "message": "(LEGITIMATE_PIC_OPERAND): Allow SYMBOL_REF_FLAG symref.\n\nFrom-SVN: r10409", "tree": {"sha": "eba5e506799c1f45c6f250c72e970fcc2ec272d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eba5e506799c1f45c6f250c72e970fcc2ec272d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c57eee671195eb511c607b0b61d0f4b560a0db68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57eee671195eb511c607b0b61d0f4b560a0db68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c57eee671195eb511c607b0b61d0f4b560a0db68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57eee671195eb511c607b0b61d0f4b560a0db68/comments", "author": null, "committer": null, "parents": [{"sha": "d9832fd253ac2556b41919567daba72470f4043a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9832fd253ac2556b41919567daba72470f4043a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9832fd253ac2556b41919567daba72470f4043a"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "3b8c3c4f27c864e62b600792a315e5255c00fa22", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c57eee671195eb511c607b0b61d0f4b560a0db68/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c57eee671195eb511c607b0b61d0f4b560a0db68/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=c57eee671195eb511c607b0b61d0f4b560a0db68", "patch": "@@ -1080,10 +1080,12 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n    that X satisfies CONSTANT_P or is a CONST_DOUBLE.  */\n \n #define LEGITIMATE_PIC_OPERAND_P(X)\t\\\n-  (! symbolic_operand (X, VOIDmode)\t\t\t\t\\\n-   && ! (GET_CODE (X) == CONST_DOUBLE && CONST_DOUBLE_MEM (X)\t\\\n-\t && GET_CODE (CONST_DOUBLE_MEM (X)) == MEM\t\t\\\n-\t && symbolic_operand (XEXP (CONST_DOUBLE_MEM (X), 0), VOIDmode)))\n+  ((! symbolic_operand (X, VOIDmode)\t\t\t\t\\\n+    && ! (GET_CODE (X) == CONST_DOUBLE && CONST_DOUBLE_MEM (X)\t\\\n+\t  && GET_CODE (CONST_DOUBLE_MEM (X)) == MEM\t\t\\\n+\t  && symbolic_operand (XEXP (CONST_DOUBLE_MEM (X), 0),\t\\\n+\t\t\t       VOIDmode)))\t\t\t\\\n+   || (GET_CODE (X) == SYMBOL_REF && SYMBOL_REF_FLAG (X)))\n \n /* The macros REG_OK_FOR..._P assume that the arg is a REG rtx\n    and check its validity for a certain class."}]}