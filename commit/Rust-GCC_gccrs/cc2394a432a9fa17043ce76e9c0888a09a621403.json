{"sha": "cc2394a432a9fa17043ce76e9c0888a09a621403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MyMzk0YTQzMmE5ZmExNzA0M2NlNzZlOWMwODg4YTA5YTYyMTQwMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-24T21:15:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-24T21:15:04Z"}, "message": "(call): Rework to use macro version of jsr.\n\nFrom-SVN: r7967", "tree": {"sha": "b86015c478bc907735d0eee04fad2c384059b6a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b86015c478bc907735d0eee04fad2c384059b6a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc2394a432a9fa17043ce76e9c0888a09a621403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2394a432a9fa17043ce76e9c0888a09a621403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc2394a432a9fa17043ce76e9c0888a09a621403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2394a432a9fa17043ce76e9c0888a09a621403/comments", "author": null, "committer": null, "parents": [{"sha": "6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bcf5f0a608196b46fdeaf74e3c6f8b1d35d622e"}], "stats": {"total": 78, "additions": 35, "deletions": 43}, "files": [{"sha": "39792d860308bb27502dc12d22bedce24c3351bb", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 35, "deletions": 43, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2394a432a9fa17043ce76e9c0888a09a621403/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2394a432a9fa17043ce76e9c0888a09a621403/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=cc2394a432a9fa17043ce76e9c0888a09a621403", "patch": "@@ -2406,28 +2406,31 @@\n ;; Here are the CALL and unconditional branch insns.\n \n (define_expand \"call\"\n-  [(parallel [(call (mem:DI (match_dup 2))\n+  [(parallel [(call (mem:DI (match_operand 0 \"\" \"\"))\n \t\t    (match_operand 1 \"\" \"\"))\n-\t      (use (match_operand:DI 0 \"\" \"\"))\n+\t      (clobber (reg:DI 27))\n \t      (clobber (reg:DI 26))])]\n   \"\"\n   \"\n { if (GET_CODE (operands[0]) != MEM)\n     abort ();\n-  operands[0] = XEXP (operands[0], 0);\n \n-  operands[2] = gen_rtx (REG, DImode, 27);\n-  emit_move_insn (operands[2], operands[0]);\n+  operands[0] = XEXP (operands[0], 0);\n \n-  if (GET_CODE (operands[0]) != SYMBOL_REF)\n-    operands[0] = const0_rtx;\n+  if (GET_CODE (operands[0]) != SYMBOL_REF\n+      && ! (GET_CODE (operands[0]) == REG && REGNO (operands[0]) == 27))\n+    {\n+      rtx tem = gen_rtx (REG, DImode, 27);\n+      emit_move_insn (tem, operands[0]);\n+      operands[0] = tem;\n+    }\n }\")\n \n (define_expand \"call_value\"\n   [(parallel [(set (match_operand 0 \"\" \"\")\n-\t\t   (call (mem:DI (match_dup 3))\n+\t\t   (call (mem:DI (match_operand 1 \"\" \"\"))\n \t\t\t (match_operand 2 \"\" \"\")))\n-\t      (use (match_operand:DI 1 \"\" \"\"))\n+\t      (clobber (reg:DI 27))\n \t      (clobber (reg:DI 26))])]\n   \"\"\n   \"\n@@ -2436,50 +2439,39 @@\n \n   operands[1] = XEXP (operands[1], 0);\n \n-  operands[3] = gen_rtx (REG, DImode, 27);\n-  emit_move_insn (operands[3], operands[1]);\n-\n-  if (GET_CODE (operands[1]) != SYMBOL_REF)\n-    operands[1] = const0_rtx;\n+  if (GET_CODE (operands[1]) != SYMBOL_REF\n+      && ! (GET_CODE (operands[1]) == REG && REGNO (operands[1]) == 27))\n+    {\n+      rtx tem = gen_rtx (REG, DImode, 27);\n+      emit_move_insn (tem, operands[1]);\n+      operands[1] = tem;\n+    }\n }\")\n \n (define_insn \"\"\n-  [(call (mem:DI (reg:DI 27))\n-\t (match_operand 0 \"\" \"\"))\n-   (use (match_operand:DI 1 \"\" \"\"))\n+  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"r,R,i\"))\n+\t (match_operand 1 \"\" \"\"))\n+   (clobber (reg:DI 27))\n    (clobber (reg:DI 26))]\n   \"\"\n-  \"jsr $26,($27),%1\\;ldgp $29,0($26)\"\n-  [(set_attr \"type\" \"jsr\")])\n-      \n-(define_insn \"\"\n-  [(set (match_operand 0 \"register_operand\" \"=rf\")\n-\t(call (mem:DI (reg:DI 27))\n-\t      (match_operand 1 \"\" \"\")))\n-   (use (match_operand:DI 2 \"\" \"\"))\n-   (clobber (reg:DI 26))]\n-  \"\"\n-  \"jsr $26,($27),%2\\;ldgp $29,0($26)\"\n-  [(set_attr \"type\" \"jsr\")])\n-\n-(define_insn \"\"\n-  [(call (mem:DI (match_operand 1 \"current_file_function_operand\" \"i\"))\n-\t (match_operand 0 \"\" \"\"))\n-   (use (match_dup 1))\n-   (clobber (reg:DI 26))]\n-  \"\"\n-  \"bsr $26,%1..ng\"\n-  [(set_attr \"type\" \"ibr\")])\n+  \"@\n+   jsr $26,($27),0\\;ldgp $29,0($26)\n+   bsr $26,%0..ng\n+   jsr $26,%0\\;ldgp $29,0($26)\"\n+  [(set_attr \"type\" \"jsr,jsr,ibr\")])\n       \n (define_insn \"\"\n-  [(set (match_operand 0 \"register_operand\" \"=rf\")\n-\t(call (mem:DI (match_operand 1 \"current_file_function_operand\" \"i\"))\n+  [(set (match_operand 0 \"register_operand\" \"=rf,rf,rf\")\n+\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,R,i\"))\n \t      (match_operand 2 \"\" \"\")))\n-   (use (match_dup 1))\n+   (clobber (reg:DI 27))\n    (clobber (reg:DI 26))]\n   \"\"\n-  \"bsr $26,%1..ng\"\n-  [(set_attr \"type\" \"ibr\")])\n+  \"@\n+   jsr $26,($27),0\\;ldgp $29,0($26)\n+   bsr $26,%1..ng\n+   jsr $26,%1\\;ldgp $29,0($26)\"\n+  [(set_attr \"type\" \"jsr,jsr,ibr\")])\n \n ;; Call subroutine returning any type.\n "}]}