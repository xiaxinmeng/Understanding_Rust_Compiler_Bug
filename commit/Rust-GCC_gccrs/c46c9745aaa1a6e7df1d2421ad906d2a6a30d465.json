{"sha": "c46c9745aaa1a6e7df1d2421ad906d2a6a30d465", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ2Yzk3NDVhYWExYTZlN2RmMWQyNDIxYWQ5MDZkMmE2YTMwZDQ2NQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-03-18T23:48:50Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-03-18T23:48:50Z"}, "message": "PR tree-optimization/89720 - Spurious -Warray-bounds warning on a range with max < min\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/89720\n\t* tree-vrp.c (vrp_prop::check_mem_ref): Treat range with max < min\n\tmore conservatively, the same as anti-range.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/89720\n\t* gcc.dg/Warray-bounds-42.c: New test.\n\nFrom-SVN: r269785", "tree": {"sha": "1e375010fc08fedcfa5a5fce2bf640b561071291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e375010fc08fedcfa5a5fce2bf640b561071291"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eea4e2ff0a3f5e7f37df204c070cc5d9ef339e6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eea4e2ff0a3f5e7f37df204c070cc5d9ef339e6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eea4e2ff0a3f5e7f37df204c070cc5d9ef339e6e"}], "stats": {"total": 70, "additions": 51, "deletions": 19}, "files": [{"sha": "e0df9e02d7cd3f13ea056180eb0fd93c9c50aceb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c46c9745aaa1a6e7df1d2421ad906d2a6a30d465", "patch": "@@ -1,3 +1,9 @@\n+2019-03-18  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/89720\n+\t* tree-vrp.c (vrp_prop::check_mem_ref): Treat range with max < min\n+\tmore conservatively, the same as anti-range.\n+\n 2019-03-18  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/88945"}, {"sha": "97bfd50c5ed8723351c6fb01a1a4b9c20be3ac90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c46c9745aaa1a6e7df1d2421ad906d2a6a30d465", "patch": "@@ -1,3 +1,8 @@\n+2019-03-18  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/89720\n+\t* gcc.dg/Warray-bounds-42.c: New test.\n+\n 2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c++/89630"}, {"sha": "005e1459dfa34edfb57f781542f8605d9c7946ce", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-42.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-42.c?ref=c46c9745aaa1a6e7df1d2421ad906d2a6a30d465", "patch": "@@ -0,0 +1,26 @@\n+/* PR tree-optimization/89720 - Spurious -Warray-bounds warning on a range\n+   with max < min\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+void f (char*, int);\n+\n+#if __SIZEOF_POINTER__ == 8\n+\n+void g (__INT64_TYPE__ i)\n+{\n+  char a[65536] = \"\";\n+  char *p = a + (i & (__INT64_TYPE__)0xffffffff3fffffffLL);\n+  f (p, *(p - 6));            /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+}\n+\n+#elif __SIZEOF_POINTER__ == 4\n+\n+void h (__INT32_TYPE__ i)\n+{\n+  char a[65536] = \"\";\n+  char *p = a + (i & (__INT32_TYPE__)0x8fffffffLL);\n+  f (p, *(p - 6));            /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+}\n+\n+#endif"}, {"sha": "0a172719e5dfbaf8e5e5bfda5a059b8e96b05e54", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c46c9745aaa1a6e7df1d2421ad906d2a6a30d465/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=c46c9745aaa1a6e7df1d2421ad906d2a6a30d465", "patch": "@@ -4546,9 +4546,9 @@ vrp_prop::check_mem_ref (location_t location, tree ref,\n   const value_range *vr = NULL;\n \n   /* Determine the offsets and increment OFFRANGE for the bounds of each.\n-     The loop computes the the range of the final offset for expressions\n-     such as (A + i0 + ... + iN)[CSTOFF] where i0 through iN are SSA_NAMEs\n-     in some range.  */\n+     The loop computes the range of the final offset for expressions such\n+     as (A + i0 + ... + iN)[CSTOFF] where i0 through iN are SSA_NAMEs in\n+     some range.  */\n   while (TREE_CODE (arg) == SSA_NAME)\n     {\n       gimple *def = SSA_NAME_DEF_STMT (arg);\n@@ -4583,26 +4583,21 @@ vrp_prop::check_mem_ref (location_t location, tree ref,\n \n       if (vr->kind () == VR_RANGE)\n \t{\n-\t  if (tree_int_cst_lt (vr->min (), vr->max ()))\n+\t  offset_int min\n+\t    = wi::to_offset (fold_convert (ptrdiff_type_node, vr->min ()));\n+\t  offset_int max\n+\t    = wi::to_offset (fold_convert (ptrdiff_type_node, vr->max ()));\n+\t  if (min < max)\n \t    {\n-\t      offset_int min\n-\t\t= wi::to_offset (fold_convert (ptrdiff_type_node, vr->min ()));\n-\t      offset_int max\n-\t\t= wi::to_offset (fold_convert (ptrdiff_type_node, vr->max ()));\n-\t      if (min < max)\n-\t\t{\n-\t\t  offrange[0] += min;\n-\t\t  offrange[1] += max;\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  offrange[0] += max;\n-\t\t  offrange[1] += min;\n-\t\t}\n+\t      offrange[0] += min;\n+\t      offrange[1] += max;\n \t    }\n \t  else\n \t    {\n-\t      /* Conservatively add [-MAXOBJSIZE -1, MAXOBJSIZE]\n+\t      /* When MIN >= MAX, the offset is effectively in a union\n+\t\t of two ranges: [-MAXOBJSIZE -1, MAX] and [MIN, MAXOBJSIZE].\n+\t\t Since there is no way to represent such a range across\n+\t\t additions, conservatively add [-MAXOBJSIZE -1, MAXOBJSIZE]\n \t\t to OFFRANGE.  */\n \t      offrange[0] += arrbounds[0];\n \t      offrange[1] += arrbounds[1];"}]}