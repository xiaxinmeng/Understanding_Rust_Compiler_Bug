{"sha": "4430130d282ddb77373e716376b66bf4c007bbfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQzMDEzMGQyODJkZGI3NzM3M2U3MTYzNzZiNjZiZjRjMDA3YmJmYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-05-08T10:03:39Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-05-08T10:03:39Z"}, "message": "re PR c++/70563 (SFINAE fails when trying invalid template instantiation)\n\n2018-05-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/70563\n\t* g++.dg/cpp0x/sfinae62.C: New.\n\nFrom-SVN: r260030", "tree": {"sha": "855dfec1f557b5a26db731a56268bb2bae9541c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/855dfec1f557b5a26db731a56268bb2bae9541c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4430130d282ddb77373e716376b66bf4c007bbfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4430130d282ddb77373e716376b66bf4c007bbfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4430130d282ddb77373e716376b66bf4c007bbfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4430130d282ddb77373e716376b66bf4c007bbfa/comments", "author": null, "committer": null, "parents": [{"sha": "f22d79731aa17d6bab7f843fb146a00f67e0bdbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22d79731aa17d6bab7f843fb146a00f67e0bdbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22d79731aa17d6bab7f843fb146a00f67e0bdbe"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "d5126b3eb6daf7aaeaf588af07f31ef7e0505d31", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4430130d282ddb77373e716376b66bf4c007bbfa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4430130d282ddb77373e716376b66bf4c007bbfa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4430130d282ddb77373e716376b66bf4c007bbfa", "patch": "@@ -1,3 +1,8 @@\n+2018-05-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/70563\n+\t* g++.dg/cpp0x/sfinae62.C: New.\n+\n 2018-05-08  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.target/aarch64/sve/vcond_6.c (LOOP): Unconditionally"}, {"sha": "7bde64c9f4dd91ef3386034c413ec62dd7d64d3f", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae62.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4430130d282ddb77373e716376b66bf4c007bbfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae62.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4430130d282ddb77373e716376b66bf4c007bbfa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae62.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae62.C?ref=4430130d282ddb77373e716376b66bf4c007bbfa", "patch": "@@ -0,0 +1,41 @@\n+// PR c++/70563\n+// { dg-do compile { target c++11 } }\n+\n+template<typename... T> using void_t = void;\n+\n+template<typename T> struct TemporaryBindObject\n+{\n+};\n+\n+struct MyTrueType\n+{\n+ static constexpr bool value = true;\n+};\n+\n+struct MyFalseType\n+{\n+ static constexpr bool value = false;\n+};\n+\n+template<template<typename...> class Dest> struct TestValidBind\n+{\n+ template<typename T, typename = void_t<>> struct toTypesOf : MyFalseType\n+ {};\n+ template<template<typename...> class Src, typename... Ts> struct toTypesOf<Src<Ts...>, void_t<Dest<Ts...,float>>> : MyTrueType\n+ {};\n+};\n+\n+template<typename T> struct OneParamStruct\n+{\n+};\n+template<typename T1, typename T2> struct TwoParamStruct\n+{\n+};\n+\n+using tmp = TemporaryBindObject<int>;\n+\n+int main()\n+{\n+ bool value1 = TestValidBind<TwoParamStruct>::toTypesOf<TemporaryBindObject<int>>::value;\n+ bool value2 = TestValidBind<OneParamStruct>::toTypesOf<TemporaryBindObject<int>>::value;\n+}"}]}