{"sha": "ba77f7bad0f0898454cdef193a24a825cbc3f953", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3N2Y3YmFkMGYwODk4NDU0Y2RlZjE5M2EyNGE4MjVjYmMzZjk1Mw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-03-24T16:31:57Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-03-24T16:31:57Z"}, "message": "re PR fortran/42651 (Functions with result: Wrongly accepts attributes to function name)\n\n2018-03-24  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/42651\n\t* decl.c (check_function_name): Improved error message\n\t(gfc_match_volatile, gfc_match_asynchronous) Use check_function_name.\n\n2018-03-24  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/42651\n\t* gfortran.dg/pr42651.f90: New test.\n\t* gfortran.dg/func_result_7.f90: Update error message.\n\nFrom-SVN: r258834", "tree": {"sha": "a609378fc75c2514232a66dfea13745b5218ac55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a609378fc75c2514232a66dfea13745b5218ac55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba77f7bad0f0898454cdef193a24a825cbc3f953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba77f7bad0f0898454cdef193a24a825cbc3f953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba77f7bad0f0898454cdef193a24a825cbc3f953", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba77f7bad0f0898454cdef193a24a825cbc3f953/comments", "author": null, "committer": null, "parents": [{"sha": "a199d5e74bf37ee4306c70a03c6c58f9935d54c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a199d5e74bf37ee4306c70a03c6c58f9935d54c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a199d5e74bf37ee4306c70a03c6c58f9935d54c3"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "2cf32f3a41526f99a7935d02812e9cc038527eff", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ba77f7bad0f0898454cdef193a24a825cbc3f953", "patch": "@@ -1,3 +1,9 @@\n+2018-03-24  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/42651\n+\t* decl.c (check_function_name): Improved error message\n+\t(gfc_match_volatile, gfc_match_asynchronous) Use check_function_name.\n+\n 2018-03-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/84922"}, {"sha": "dce9dd2d6df428d5445230432e7ec9607a59e9ff", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=ba77f7bad0f0898454cdef193a24a825cbc3f953", "patch": "@@ -2253,7 +2253,9 @@ check_function_name (char *name)\n \t  && strcmp (block->result->name, \"ppr@\") != 0\n \t  && strcmp (block->name, name) == 0)\n \t{\n-\t  gfc_error (\"Function name %qs not allowed at %C\", name);\n+\t  gfc_error (\"RESULT variable %qs at %L prohibits FUNCTION name %qs at %C \"\n+\t\t     \"from appearing in a specification statement\",\n+\t\t     block->result->name, &block->result->declared_at, name);\n \t  return false;\n \t}\n     }\n@@ -9102,6 +9104,7 @@ match\n gfc_match_volatile (void)\n {\n   gfc_symbol *sym;\n+  char *name;\n   match m;\n \n   if (!gfc_notify_std (GFC_STD_F2003, \"VOLATILE statement at %C\"))\n@@ -9123,6 +9126,10 @@ gfc_match_volatile (void)\n       switch (m)\n \t{\n \tcase MATCH_YES:\n+\t  name = XCNEWVAR (char, strlen (sym->name) + 1);\n+\t  strcpy (name, sym->name);\n+\t  if (!check_function_name (name))\n+\t    return MATCH_ERROR;\n \t  /* F2008, C560+C561. VOLATILE for host-/use-associated variable or\n \t     for variable in a BLOCK which is defined outside of the BLOCK.  */\n \t  if (sym->ns != gfc_current_ns && sym->attr.codimension)\n@@ -9161,6 +9168,7 @@ match\n gfc_match_asynchronous (void)\n {\n   gfc_symbol *sym;\n+  char *name;\n   match m;\n \n   if (!gfc_notify_std (GFC_STD_F2003, \"ASYNCHRONOUS statement at %C\"))\n@@ -9182,6 +9190,10 @@ gfc_match_asynchronous (void)\n       switch (m)\n \t{\n \tcase MATCH_YES:\n+\t  name = XCNEWVAR (char, strlen (sym->name) + 1);\n+\t  strcpy (name, sym->name);\n+\t  if (!check_function_name (name))\n+\t    return MATCH_ERROR;\n \t  if (!gfc_add_asynchronous (&sym->attr, sym->name, &gfc_current_locus))\n \t    return MATCH_ERROR;\n \t  goto next_item;"}, {"sha": "962711c286884ef7c7d57897a219d0ff0c3a8cbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba77f7bad0f0898454cdef193a24a825cbc3f953", "patch": "@@ -1,3 +1,9 @@\n+2018-03-24  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/42651\n+\t* gfortran.dg/pr42651.f90: New test.\n+\t* gfortran.dg/func_result_7.f90: Update error message.\n+\n 2018-03-24  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR tree-optimization/84005"}, {"sha": "027a97878ba173b9ef88e9a898ba151fe13053cc", "filename": "gcc/testsuite/gfortran.dg/func_result_7.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_7.f90?ref=ba77f7bad0f0898454cdef193a24a825cbc3f953", "patch": "@@ -4,8 +4,8 @@\n !\n ! Contributed by Vittorio Zecca <zeccav@gmail.com>\n \n-function fun() result(f)\n-  pointer fun       ! { dg-error \"not allowed\" }\n-  dimension fun(1)  ! { dg-error \"not allowed\" }\n+function fun() result(f)  ! { dg-error \"RESULT variable\" } \n+  pointer fun             ! { dg-error \"RESULT variable\" }\n+  dimension fun(1)        ! { dg-error \"RESULT variable\" }\n   f=0\n end"}, {"sha": "f13a641b3b71febbf450cb36352fba72a8a4a54c", "filename": "gcc/testsuite/gfortran.dg/pr42651.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42651.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba77f7bad0f0898454cdef193a24a825cbc3f953/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42651.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42651.f90?ref=ba77f7bad0f0898454cdef193a24a825cbc3f953", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+! PR fortran/42651\n+integer function func()\n+  asynchronous :: func\n+  integer, asynchronous:: b\n+  allocatable :: c\n+  volatile :: func\n+  type t\n+    sequence\n+    integer :: i = 5\n+  end type t\n+end function func\n+\n+function func2() result(res) ! { dg-error \" RESULT variable\" }\n+  volatile res\n+  asynchronous res\n+  target func2            ! { dg-error \" RESULT variable\" }\n+  volatile func2          ! { dg-error \" RESULT variable\" }\n+  asynchronous func2      ! { dg-error \" RESULT variable\" }\n+  allocatable func2       ! { dg-error \" RESULT variable\" }\n+  dimension func2(2)      ! { dg-error \" RESULT variable\" }\n+  codimension func2[*]    ! { dg-error \" RESULT variable\" }\n+  contiguous func2        ! { dg-error \" RESULT variable\" }\n+end function func2 "}]}