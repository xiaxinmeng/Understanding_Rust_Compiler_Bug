{"sha": "8157303b1e8961a18aa8779a99aea6a7d8dc7116", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE1NzMwM2IxZTg5NjFhMThhYTg3NzlhOTlhZWE2YTdkOGRjNzExNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-05-03T17:55:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-05-03T17:55:26Z"}, "message": "re PR preprocessor/6489 (tradcpp0 fails on line ending with '\\r\\n')\n\n\tPR preprocessor/6489\n\t* tradcpp.c (fixup_newlines): New.\n\t(main, finclude): Use it.\n\nFrom-SVN: r53103", "tree": {"sha": "dbe5b094a244905e054685be52116a6381e25201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbe5b094a244905e054685be52116a6381e25201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8157303b1e8961a18aa8779a99aea6a7d8dc7116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8157303b1e8961a18aa8779a99aea6a7d8dc7116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8157303b1e8961a18aa8779a99aea6a7d8dc7116", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8157303b1e8961a18aa8779a99aea6a7d8dc7116/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66319f5cad7b88171aa276f018b7dce645b7788f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66319f5cad7b88171aa276f018b7dce645b7788f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66319f5cad7b88171aa276f018b7dce645b7788f"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "cac408130e5c70fea0dc83c1d22b6f4f8f26bbe0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8157303b1e8961a18aa8779a99aea6a7d8dc7116/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8157303b1e8961a18aa8779a99aea6a7d8dc7116/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8157303b1e8961a18aa8779a99aea6a7d8dc7116", "patch": "@@ -1,3 +1,9 @@\n+2002-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/6489\n+\t* tradcpp.c (fixup_newlines): New.\n+\t(main, finclude): Use it.\n+\n 2002-05-03  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/elf64.h (UNIQUE_SECTION): Use mips_unique_section."}, {"sha": "6381c2dc4e437191aa5b3858b9c87d7b8231e507", "filename": "gcc/tradcpp.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8157303b1e8961a18aa8779a99aea6a7d8dc7116/gcc%2Ftradcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8157303b1e8961a18aa8779a99aea6a7d8dc7116/gcc%2Ftradcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.c?ref=8157303b1e8961a18aa8779a99aea6a7d8dc7116", "patch": "@@ -430,6 +430,7 @@ static void grow_outbuf \tPARAMS ((FILE_BUF *, int));\n static int handle_directive \tPARAMS ((FILE_BUF *, FILE_BUF *));\n static void process_include\tPARAMS ((struct file_name_list *,\n \t\t\t\t\t const U_CHAR *, int, int, FILE_BUF *));\n+static void fixup_newlines\tPARAMS ((FILE_BUF *));\n static void finclude\t\tPARAMS ((int, const char *,\n \t\t\t\t\t struct file_name_list *, FILE_BUF *));\n static void init_dependency_output PARAMS ((void));\n@@ -952,6 +953,7 @@ main (argc, argv)\n   }\n   fp->bufp = fp->buf;\n   fp->if_stack = if_stack;\n+  fixup_newlines (fp);\n \n   /* Make sure data ends with a newline.  And put a null after it.  */\n \n@@ -2594,6 +2596,42 @@ process_include (stackp, fbeg, flen, system_header_p, op)\n   }\n }\n \n+/* Replace all CR NL, NL CR and CR sequences with NL.  */\n+\n+static void\n+fixup_newlines (FILE_BUF *fp)\n+{\n+  U_CHAR *p, *q, *end;\n+\n+  if (fp->length <= 0)\n+    return;\n+\n+  end = fp->buf + fp->length;\n+  *end = '\\r';\n+  p = (U_CHAR *) strchr ((const char *) fp->buf, '\\r');\n+  *end = '\\0';\n+  if (p == end)\n+    return;\n+\n+  if (p > fp->buf && p[-1] == '\\n')\n+    p--;\n+  q = p;\n+  while (p < end)\n+    switch (*p)\n+      {\n+      default:\n+\t*q++ = *p++;\n+\tbreak;\n+      case '\\n':\n+      case '\\r':\n+\tp += 1 + (p[0] + p[1] == '\\n' + '\\r');\n+\t*q++ = '\\n';\n+\tbreak;\n+      }\n+\n+  fp->length = q - fp->buf;\n+}\n+\n /* Process the contents of include file FNAME, already open on descriptor F,\n    with output to OP.  */\n \n@@ -2668,6 +2706,7 @@ finclude (f, fname, nhd, op)\n     fp->length = st_size;\n   }\n   close (f);\n+  fixup_newlines (fp);\n \n   /* Make sure data ends with a newline.  And put a null after it.  */\n "}]}