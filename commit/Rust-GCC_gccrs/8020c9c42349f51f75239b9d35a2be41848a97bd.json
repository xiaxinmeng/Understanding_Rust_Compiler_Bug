{"sha": "8020c9c42349f51f75239b9d35a2be41848a97bd", "node_id": "C_kwDOANBUbNoAKDgwMjBjOWM0MjM0OWY1MWY3NTIzOWI5ZDM1YTJiZTQxODQ4YTk3YmQ", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2023-02-27T21:10:01Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2023-02-27T21:10:01Z"}, "message": "i386: Do not constrain fmod and remainder patterns with flag_finite_math_only [PR108922]\n\nAccording to Intel ISA manual, fprem and fprem1 return NaN when invalid\narithmetic exception is generated. This is documented in Table 8-10 of the\nISA manual and makes these two instructions fully IEEE compatible.\n\nThe reverted patch was based on the data from table 3-30 and 3-31 of the\nIntel ISA manual, where results in case of st(0) being infinity or\nst(1) being 0 are not specified.\n\n2023-02-27  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\tPR target/108922\n\tRevert:\n\t* config/i386/i386.md (fmodxf3): Enable for flag_finite_math_only only.\n\t(fmod<mode>3): Ditto.\n\t(fpremxf4_i387): Ditto.\n\t(reminderxf3): Ditto.\n\t(reminder<mode>3): Ditto.\n\t(fprem1xf4_i387): Ditto.", "tree": {"sha": "79b76fd7234177800d5fd7959bf7d37f0c82b282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79b76fd7234177800d5fd7959bf7d37f0c82b282"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8020c9c42349f51f75239b9d35a2be41848a97bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8020c9c42349f51f75239b9d35a2be41848a97bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8020c9c42349f51f75239b9d35a2be41848a97bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8020c9c42349f51f75239b9d35a2be41848a97bd/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab76d71179be6e4e09ee3d5b7e8fa4265717a34c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab76d71179be6e4e09ee3d5b7e8fa4265717a34c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab76d71179be6e4e09ee3d5b7e8fa4265717a34c"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "ed689b044c3449f9115dd9c4d5fc342eec0b2d56", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8020c9c42349f51f75239b9d35a2be41848a97bd/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8020c9c42349f51f75239b9d35a2be41848a97bd/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=8020c9c42349f51f75239b9d35a2be41848a97bd", "patch": "@@ -19527,8 +19527,7 @@\n    (set (reg:CCFP FPSR_REG)\n \t(unspec:CCFP [(match_dup 2) (match_dup 3)]\n \t\t     UNSPEC_C2_FLAG))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n   \"fprem\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"znver1_decode\" \"vector\")\n@@ -19538,8 +19537,7 @@\n   [(use (match_operand:XF 0 \"register_operand\"))\n    (use (match_operand:XF 1 \"general_operand\"))\n    (use (match_operand:XF 2 \"general_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx_code_label *label = gen_label_rtx ();\n \n@@ -19562,8 +19560,7 @@\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n    (use (match_operand:MODEF 1 \"general_operand\"))\n    (use (match_operand:MODEF 2 \"general_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx (*gen_truncxf) (rtx, rtx);\n \n@@ -19602,8 +19599,7 @@\n    (set (reg:CCFP FPSR_REG)\n \t(unspec:CCFP [(match_dup 2) (match_dup 3)]\n \t\t     UNSPEC_C2_FLAG))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n   \"fprem1\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"znver1_decode\" \"vector\")\n@@ -19613,8 +19609,7 @@\n   [(use (match_operand:XF 0 \"register_operand\"))\n    (use (match_operand:XF 1 \"general_operand\"))\n    (use (match_operand:XF 2 \"general_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx_code_label *label = gen_label_rtx ();\n \n@@ -19637,8 +19632,7 @@\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n    (use (match_operand:MODEF 1 \"general_operand\"))\n    (use (match_operand:MODEF 2 \"general_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_finite_math_only\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n {\n   rtx (*gen_truncxf) (rtx, rtx);\n "}]}