{"sha": "9861b0c9d63ef866cf7e5b99ffc528f978ca66e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg2MWIwYzlkNjNlZjg2NmNmN2U1Yjk5ZmZjNTI4Zjk3OGNhNjZlMg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2000-08-22T19:27:31Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2000-08-22T19:27:31Z"}, "message": "aix.h (ASM_DECLARE_FUNCTION_NAME): Call named_section() or text_section() as appropriate instead of emitting text...\n\n\t* aix.h (ASM_DECLARE_FUNCTION_NAME): Call named_section() or\n        text_section() as appropriate instead of emitting text csect\n\tpseudo-op directly.\n\t(TEXT_SECTION_ASM_OP): Only require default 32-bit alignment.\n\t(UNIQUE_SECTION): Define macro.\n\t(ASM_OUTPUT_SECTION_NAME): Define macro.\n\t* rs6000.c (rs6000_override_options): Disable -ffunction-sections\n        on AIX if debugging and -fdata-sections always.\n\nFrom-SVN: r35886", "tree": {"sha": "66183ff44fa21fe4077829d8dfc76e821ceec710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66183ff44fa21fe4077829d8dfc76e821ceec710"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2/comments", "author": null, "committer": null, "parents": [{"sha": "180ca3a1bbfbadb7e3a819f8c1a9bad962dbaa3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/180ca3a1bbfbadb7e3a819f8c1a9bad962dbaa3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/180ca3a1bbfbadb7e3a819f8c1a9bad962dbaa3c"}], "stats": {"total": 68, "additions": 58, "deletions": 10}, "files": [{"sha": "fe8bbb4b9042435ca2d77b5148f844e7ac19ca36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9861b0c9d63ef866cf7e5b99ffc528f978ca66e2", "patch": "@@ -1,4 +1,15 @@\n-2000-08-22 Steven King <sxking@uswest.net>\n+2000-08-22  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* aix.h (ASM_DECLARE_FUNCTION_NAME): Call named_section() or\n+        text_section() as appropriate instead of emitting text csect\n+\tpseudo-op directly.\n+\t(TEXT_SECTION_ASM_OP): Only require default 32-bit alignment.\n+\t(UNIQUE_SECTION): Define macro.\n+\t(ASM_OUTPUT_SECTION_NAME): Define macro.\n+\t* rs6000.c (rs6000_override_options): Disable -ffunction-sections\n+        on AIX if debugging and -fdata-sections always.\n+\n+2000-08-22  Steven King  <sxking@uswest.net>\n \n \t* config/float-i386.h (LDBL_EPSILON): Remove __convert_long_double\n \tmachinery.\n@@ -214,7 +225,7 @@ Mon Aug 21 07:41:12 2000  Jeffrey A Law  (law@cygnus.com)\n \t* cppinit.c (cpp_init): Set global flag when called.\n \t(cpp_reader_init): Bomb out if cpp_init hasn't been called.\n \n-Sun Aug 20 01:41:35 MSD 2000 Dennis Chernoivanov <cdi@sparc.spb.su>\n+Sun Aug 20 01:41:35 2000  Dennis Chernoivanov  <cdi@sparc.spb.su>\n \n         * cpplex.c (cpp_scan_buffer): Move `output_line_command' just\n         before `process_directive' so that newlines won't be missed"}, {"sha": "3487efff195a254a671ef271edf51b02152ea7f3", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=9861b0c9d63ef866cf7e5b99ffc528f978ca66e2", "patch": "@@ -408,8 +408,12 @@ toc_section ()\t\t\t\t\t\t\\\n   fputs (TARGET_32BIT ? \"\\t.long .\" : \"\\t.llong .\", FILE);\t\\\n   RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n   fputs (\", TOC[tc0], 0\\n\", FILE);\t\t\t\t\\\n-  fputs (TARGET_32BIT\t\t\t\t\t\t\\\n-\t ? \"\\t.csect .text[PR]\\n.\" : \"\\t.csect .text[PR],3\\n.\", FILE); \\\n+  in_section = no_section;\t\t\t\t\t\\\n+  if (flag_function_sections)\t\t\t\t\t\\\n+    named_section ((DECL), (char *) 0, 0);\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\\\n+    text_section();\t\t\t\t\t\t\\\n+  putc ('.', FILE);\t\t\t\t\t\t\\\n   RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n   fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n   if (write_symbols == XCOFF_DEBUG)\t\t\t\t\\\n@@ -525,23 +529,43 @@ toc_section ()\t\t\t\t\t\t\\\n   fprintf ((FILE), \"\\t.vbyte\\t2,0x%x\", (unsigned) (VALUE))\n \n #define ASM_OUTPUT_DWARF_OFFSET4(FILE, LABEL)\t\\\n- ASM_OUTPUT_DWARF_ADDR_VAR (FILE, LABEL, 4)\n+  ASM_OUTPUT_DWARF_ADDR_VAR (FILE, LABEL, 4)\n \n #define ASM_OUTPUT_DWARF_OFFSET(FILE, LABEL)\t\t\t\\\n- ASM_OUTPUT_DWARF_ADDR_VAR (FILE, LABEL, DWARF_OFFSET_SIZE)\n+  ASM_OUTPUT_DWARF_ADDR_VAR (FILE, LABEL, DWARF_OFFSET_SIZE)\n \n /* dwarf2out keys off this, but we don't have to have a real definition.  */\n #define UNALIGNED_INT_ASM_OP bite_me\n \n-/* Output before instructions.\n-   Text section for 64-bit target may contain 64-bit address jump table.  */\n-#define TEXT_SECTION_ASM_OP (TARGET_32BIT \\\n-                             ? \"\\t.csect .text[PR]\" : \"\\t.csect .text[PR],3\")\n+/* Output before instructions.  */\n+#define TEXT_SECTION_ASM_OP \"\\t.csect .text[PR]\"\n \n /* Output before writable data.\n    Align entire section to BIGGEST_ALIGNMENT.  */\n #define DATA_SECTION_ASM_OP \"\\t.csect .data[RW],3\"\n \n+/* Define unique section name -- functions only.  */\n+#define UNIQUE_SECTION(DECL,RELOC)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    int len;\t\t\t\t\t\t\\\n+    const char *name;\t\t\t\t\t\\\n+    char *string;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+    if (TREE_CODE (DECL) == FUNCTION_DECL) {\t\t\\\n+      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL)); \\\n+      len = strlen (name) + 5;\t\t\t\t\\\n+      string = alloca (len) + 1;\t\t\t\\\n+      sprintf (string, \".%s[PR]\", name);\t\t\\\n+      DECL_SECTION_NAME (DECL) = build_string (len, string); \\\n+    }\t\t\t\t\t\t\t\\\n+  } while (0)\n+\n+#define ASM_OUTPUT_SECTION_NAME(ASM_OUT_FILE,DECL,NAME,RELOC)\t\\\n+  do { fputs (\"\\t.csect \", ASM_OUT_FILE);\t\t\t\\\n+       fputs (TREE_STRING_POINTER (DECL_SECTION_NAME (DECL)), ASM_OUT_FILE); \\\n+       putc ('\\n', ASM_OUT_FILE);\t\t\t\t\\\n+  } while (0)\n+\n /* __throw will restore its own return address to be the same as the\n    return address of the function that the throw is being made to.\n    This is unfortunate, because we want to check the original"}, {"sha": "9e4c11f23e3b0bfac72ea4748fddde6c31742f0e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9861b0c9d63ef866cf7e5b99ffc528f978ca66e2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9861b0c9d63ef866cf7e5b99ffc528f978ca66e2", "patch": "@@ -361,6 +361,19 @@ rs6000_override_options (default_cpu)\n       flag_pic = 0;\n     }\n \n+  if (flag_function_sections && (write_symbols != NO_DEBUG)\n+      && (DEFAULT_ABI == ABI_AIX))\n+    {\n+      warning (\"-ffunction-sections disabled on AIX when debugging\");\n+      flag_function_sections = 0;\n+    }\n+\n+  if (flag_data_sections && (DEFAULT_ABI == ABI_AIX))\n+    {\n+      warning (\"-fdata-sections not supported on AIX\");\n+      flag_data_sections = 0;\n+    }\n+\n   /* Set debug flags */\n   if (rs6000_debug_name)\n     {"}]}