{"sha": "7e665d18088d627471f61fd2917f98ff17fccf4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U2NjVkMTgwODhkNjI3NDcxZjYxZmQyOTE3Zjk4ZmYxN2ZjY2Y0Yg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2006-06-19T08:01:56Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2006-06-19T08:01:56Z"}, "message": "s390.md (\"doloop_si64\", [...]): Add a new alternative to the constraint strings.\n\n2006-06-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.md (\"doloop_si64\", \"doloop_si31\", \"doloop_di\"): \n\tAdd a new alternative to the constraint strings. Add move of\n\toperand 1 to 3 to the splitter definition.\n\t(\"doloop_si_long\"): Second contraint alternative removed.\n\nFrom-SVN: r114767", "tree": {"sha": "e0dcc326b53e7a730a7a7d0d7a93fc7f9242686e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0dcc326b53e7a730a7a7d0d7a93fc7f9242686e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e665d18088d627471f61fd2917f98ff17fccf4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e665d18088d627471f61fd2917f98ff17fccf4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e665d18088d627471f61fd2917f98ff17fccf4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e665d18088d627471f61fd2917f98ff17fccf4b/comments", "author": null, "committer": null, "parents": [{"sha": "9b7e4f4ff8d6daf711224a406dbf0368c314d1f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7e4f4ff8d6daf711224a406dbf0368c314d1f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7e4f4ff8d6daf711224a406dbf0368c314d1f6"}], "stats": {"total": 42, "additions": 26, "deletions": 16}, "files": [{"sha": "2c7c65a6d9f999e4358df79d3bd68e622c94c962", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e665d18088d627471f61fd2917f98ff17fccf4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e665d18088d627471f61fd2917f98ff17fccf4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e665d18088d627471f61fd2917f98ff17fccf4b", "patch": "@@ -1,3 +1,10 @@\n+2006-06-19  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"doloop_si64\", \"doloop_si31\", \"doloop_di\"): \n+\tAdd a new alternative to the constraint strings. Add move of\n+\toperand 1 to 3 to the splitter definition.\n+\t(\"doloop_si_long\"): Second contraint alternative removed.\n+\n 2006-06-08  Anatoly Sokolov <aesok@post.ru>\n \n \t* config/avr/avr.h (avr_have_movw_lpmx_p): Declare."}, {"sha": "d6443e0877175c73b4e3b75bc4bd28f5f647535a", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e665d18088d627471f61fd2917f98ff17fccf4b/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e665d18088d627471f61fd2917f98ff17fccf4b/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=7e665d18088d627471f61fd2917f98ff17fccf4b", "patch": "@@ -6779,13 +6779,13 @@\n (define_insn_and_split \"doloop_si64\"\n   [(set (pc)\n         (if_then_else\n-          (ne (match_operand:SI 1 \"register_operand\" \"d,d\")\n+          (ne (match_operand:SI 1 \"register_operand\" \"d,d,d\")\n               (const_int 1))\n           (label_ref (match_operand 0 \"\" \"\"))\n           (pc)))\n-   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n+   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,?X,?X\")\n         (plus:SI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:SI 3 \"=X,&1\"))\n+   (clobber (match_scratch:SI 3 \"=X,&1,&?d\"))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n {\n@@ -6799,7 +6799,8 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(parallel [(set (reg:CCAN CC_REGNUM)\n+  [(set (match_dup 3) (match_dup 1))\n+   (parallel [(set (reg:CCAN CC_REGNUM)\n                    (compare:CCAN (plus:SI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:SI (match_dup 3) (const_int -1)))])\n@@ -6817,13 +6818,13 @@\n (define_insn_and_split \"doloop_si31\"\n   [(set (pc)\n         (if_then_else\n-          (ne (match_operand:SI 1 \"register_operand\" \"d,d\")\n+          (ne (match_operand:SI 1 \"register_operand\" \"d,d,d\")\n               (const_int 1))\n           (label_ref (match_operand 0 \"\" \"\"))\n           (pc)))\n-   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n+   (set (match_operand:SI 2 \"nonimmediate_operand\" \"=1,?X,?X\")\n         (plus:SI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:SI 3 \"=X,&1\"))\n+   (clobber (match_scratch:SI 3 \"=X,&1,&?d\"))\n    (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_CPU_ZARCH\"\n {\n@@ -6837,7 +6838,8 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(parallel [(set (reg:CCAN CC_REGNUM)\n+  [(set (match_dup 3) (match_dup 1))\n+   (parallel [(set (reg:CCAN CC_REGNUM)\n                    (compare:CCAN (plus:SI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:SI (match_dup 3) (const_int -1)))])\n@@ -6858,13 +6860,13 @@\n (define_insn \"*doloop_si_long\"\n   [(set (pc)\n         (if_then_else\n-          (ne (match_operand:SI 1 \"register_operand\" \"d,d\")\n+          (ne (match_operand:SI 1 \"register_operand\" \"d\")\n               (const_int 1))\n-          (match_operand 0 \"address_operand\" \"U,U\")\n+          (match_operand 0 \"address_operand\" \"U\")\n           (pc)))\n-   (set (match_operand:SI 2 \"register_operand\" \"=1,?*m*d\")\n+   (set (match_operand:SI 2 \"register_operand\" \"=1\")\n         (plus:SI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:SI 3 \"=X,&1\"))\n+   (clobber (match_scratch:SI 3 \"=X\"))\n    (clobber (reg:CC CC_REGNUM))]\n   \"!TARGET_CPU_ZARCH\"\n {\n@@ -6882,13 +6884,13 @@\n (define_insn_and_split \"doloop_di\"\n   [(set (pc)\n         (if_then_else\n-          (ne (match_operand:DI 1 \"register_operand\" \"d,d\")\n+          (ne (match_operand:DI 1 \"register_operand\" \"d,d,d\")\n               (const_int 1))\n           (label_ref (match_operand 0 \"\" \"\"))\n           (pc)))\n-   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,?*m*d\")\n+   (set (match_operand:DI 2 \"nonimmediate_operand\" \"=1,?X,?X\")\n         (plus:DI (match_dup 1) (const_int -1)))\n-   (clobber (match_scratch:DI 3 \"=X,&1\"))\n+   (clobber (match_scratch:DI 3 \"=X,&1,&?d\"))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_64BIT\"\n {\n@@ -6902,7 +6904,8 @@\n   \"&& reload_completed\n    && (! REG_P (operands[2])\n        || ! rtx_equal_p (operands[1], operands[2]))\"\n-  [(parallel [(set (reg:CCAN CC_REGNUM)\n+  [(set (match_dup 3) (match_dup 1))\n+   (parallel [(set (reg:CCAN CC_REGNUM)\n                    (compare:CCAN (plus:DI (match_dup 3) (const_int -1))\n                                  (const_int 0)))\n               (set (match_dup 3) (plus:DI (match_dup 3) (const_int -1)))])"}]}