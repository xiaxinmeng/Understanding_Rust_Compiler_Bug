{"sha": "6e957ac87070df04868f1f6197671b6cbe2259d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU5NTdhYzg3MDcwZGYwNDg2OGYxZjYxOTc2NzFiNmNiZTIyNTlkMg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-08-02T06:10:29Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-08-02T06:10:29Z"}, "message": "2009-08-02  Paolo Bonzini  <bonzini@gnu.org\n\n\t* explow.c (promote_function_mode): Remove assert.\n\t* config/sh/sh.c (sh_promote_function_mode): Declare.\n\nFrom-SVN: r150344", "tree": {"sha": "4d882102439539ff87e05d92518bcadb8d37cf0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d882102439539ff87e05d92518bcadb8d37cf0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e957ac87070df04868f1f6197671b6cbe2259d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e957ac87070df04868f1f6197671b6cbe2259d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e957ac87070df04868f1f6197671b6cbe2259d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e957ac87070df04868f1f6197671b6cbe2259d2/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02095c5014adb3c04d3164819ebf953f85ccdb70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02095c5014adb3c04d3164819ebf953f85ccdb70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02095c5014adb3c04d3164819ebf953f85ccdb70"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "7766e91b7cfff84ed288e836041a7f0769cf6f97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e957ac87070df04868f1f6197671b6cbe2259d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e957ac87070df04868f1f6197671b6cbe2259d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e957ac87070df04868f1f6197671b6cbe2259d2", "patch": "@@ -1,14 +1,19 @@\n+2009-08-02  Paolo Bonzini  <bonzini@gnu.org\n+\n+\t* explow.c (promote_function_mode): Remove assert.\n+\t* config/sh/sh.c (sh_promote_function_mode): Declare.\n+\n 2009-08-01  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n-\t* pa.c (pa_promote_function_mode): Declare.  Change to static.\n-\tFix promote_mode call.\n+\t* config/pa/pa.c (pa_promote_function_mode): Declare.\n+\tChange to static.  Fix promote_mode call.\n \n \t* gthr-dce.h (CONST_CAST2): Define if not defined.\n \t(__gthread_setspecific): Use CONST_CAST2 to fix warning.\n \n \t* config.gcc (hppa[12]*-*-hpux10*): Add stdint support.\n \n-2009-04-17  Paolo Bonzini  <bonzini@gnu.org>\n+2009-08-01  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* expr.c (store_constructor): Use promote_decl_mode.  Remove\n \tnow write-only variable unsignedp."}, {"sha": "60bb86566e17cb59045039959a586af8efc95bd2", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e957ac87070df04868f1f6197671b6cbe2259d2/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e957ac87070df04868f1f6197671b6cbe2259d2/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=6e957ac87070df04868f1f6197671b6cbe2259d2", "patch": "@@ -257,6 +257,9 @@ static bool sh_pretend_outgoing_varargs_named (CUMULATIVE_ARGS *);\n static tree sh_build_builtin_va_list (void);\n static void sh_va_start (tree, rtx);\n static tree sh_gimplify_va_arg_expr (tree, tree, gimple_seq *, gimple_seq *);\n+static enum machine_mode sh_promote_function_mode (const_tree type, enum machine_mode,\n+\t\t\t\t\t\t   int *punsignedp, const_tree funtype,\n+\t\t\t\t\t\t   int for_return);\n static bool sh_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t  const_tree, bool);\n static bool sh_callee_copies (CUMULATIVE_ARGS *, enum machine_mode,\n@@ -7894,7 +7897,7 @@ sh_dwarf_register_span (rtx reg)\n \t\t\t\t\t      DBX_REGISTER_NUMBER (regno))));\n }\n \n-enum machine_mode\n+static enum machine_mode\n sh_promote_function_mode (const_tree type, enum machine_mode mode,\n \t\t\t  int *punsignedp, const_tree funtype, int for_return)\n {"}, {"sha": "32397bcbbf9c2800c099402258582b347fcd5ca9", "filename": "gcc/explow.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e957ac87070df04868f1f6197671b6cbe2259d2/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e957ac87070df04868f1f6197671b6cbe2259d2/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=6e957ac87070df04868f1f6197671b6cbe2259d2", "patch": "@@ -760,7 +760,6 @@ enum machine_mode\n promote_function_mode (const_tree type, enum machine_mode mode, int *punsignedp,\n \t\t       const_tree funtype, int for_return)\n {\n-  gcc_assert (GET_MODE_CLASS (mode) != MODE_COMPLEX_INT);\n   switch (TREE_CODE (type))\n     {\n     case INTEGER_TYPE:   case ENUMERAL_TYPE:   case BOOLEAN_TYPE:"}]}