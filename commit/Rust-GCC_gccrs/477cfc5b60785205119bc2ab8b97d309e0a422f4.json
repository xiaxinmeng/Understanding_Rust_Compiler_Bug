{"sha": "477cfc5b60785205119bc2ab8b97d309e0a422f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc3Y2ZjNWI2MDc4NTIwNTExOWJjMmFiOGI5N2QzMDllMGE0MjJmNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-29T14:01:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-29T14:01:21Z"}, "message": "[multiple changes]\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* atree.ads, atree.adb (Node30): New function.\n\t(Set_Node30): New procedure.\n\t(Num_Extension_Nodes): Change to 5 (activate new fields/flags).\n\t* atree.h: Add macros for Field30 and Node30.\n\t* einfo.ads, einfo.adb: Move some fields to avoid duplexing.\n\t* treepr.adb (Print_Entity_Information): Print fields 30-35.\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Interface): Consider to\n\tbe a violation of No_Obsolescent_Features even in Ada 95. Also\n\tgenerates a warning in -gnatwj mode.\n\t(Analyze_Pragma, case Interface_Name): Generates a warning in -gnatwj\n\tmode.\n\t* gnat_ugn.texi: Additional documentation on -gnatwj and pragma\n\tInterface[_Name].\n\n2013-01-29  Vincent Celier  <celier@adacore.com>\n\n\t* snames.ads-tmpl: Add new standard name Trailing_Switches.\n\n2013-01-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_disp.adb (Check_Controlling_Type): If a designated type T\n\tof an anonymous access type is a limited view of a tagged type,\n\tit can be a controlling type only if the subprogram is in the\n\tsame scope as T.\n\n2013-01-29  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb: Use the project where the config pragmas file is\n\tdeclared to get its path.\n\n2013-01-29  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb: New attribute Linker'Trailing_Switches.\n\nFrom-SVN: r195535", "tree": {"sha": "c97baf59573b2e4562047b821947b9c984abb702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c97baf59573b2e4562047b821947b9c984abb702"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/477cfc5b60785205119bc2ab8b97d309e0a422f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477cfc5b60785205119bc2ab8b97d309e0a422f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/477cfc5b60785205119bc2ab8b97d309e0a422f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477cfc5b60785205119bc2ab8b97d309e0a422f4/comments", "author": null, "committer": null, "parents": [{"sha": "656e11a924eb4555d6c5650d6fa8d5ae2049cc44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656e11a924eb4555d6c5650d6fa8d5ae2049cc44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/656e11a924eb4555d6c5650d6fa8d5ae2049cc44"}], "stats": {"total": 292, "additions": 249, "deletions": 43}, "files": [{"sha": "dd2645469847a0b5a90c9c594e5524c052dbf2ff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -1,3 +1,42 @@\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* atree.ads, atree.adb (Node30): New function.\n+\t(Set_Node30): New procedure.\n+\t(Num_Extension_Nodes): Change to 5 (activate new fields/flags).\n+\t* atree.h: Add macros for Field30 and Node30.\n+\t* einfo.ads, einfo.adb: Move some fields to avoid duplexing.\n+\t* treepr.adb (Print_Entity_Information): Print fields 30-35.\n+\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Interface): Consider to\n+\tbe a violation of No_Obsolescent_Features even in Ada 95. Also\n+\tgenerates a warning in -gnatwj mode.\n+\t(Analyze_Pragma, case Interface_Name): Generates a warning in -gnatwj\n+\tmode.\n+\t* gnat_ugn.texi: Additional documentation on -gnatwj and pragma\n+\tInterface[_Name].\n+\n+2013-01-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* snames.ads-tmpl: Add new standard name Trailing_Switches.\n+\n+2013-01-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_disp.adb (Check_Controlling_Type): If a designated type T\n+\tof an anonymous access type is a limited view of a tagged type,\n+\tit can be a controlling type only if the subprogram is in the\n+\tsame scope as T.\n+\n+2013-01-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb: Use the project where the config pragmas file is\n+\tdeclared to get its path.\n+\n+2013-01-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: New attribute Linker'Trailing_Switches.\n+\n 2013-01-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (gnat_to_gnu) <N_Expression_With_Actions>: Do"}, {"sha": "b287b57302d231abb62ed823c4bede182a36cb84", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -522,7 +522,7 @@ package body Atree is\n    --  entries in this table. Normal programs won't use it at all.\n \n    type Paren_Count_Entry is record\n-      Nod   : Node_Id;\n+      Nod : Node_Id;\n       --  The node to which this count applies\n \n       Count : Nat range 3 .. Nat'Last;\n@@ -2520,6 +2520,12 @@ package body Atree is\n          return Node_Id (Nodes.Table (N + 4).Field11);\n       end Node29;\n \n+      function Node30 (N : Node_Id) return Node_Id is\n+      begin\n+         pragma Assert (Nkind (N) in N_Entity);\n+         return Node_Id (Nodes.Table (N + 5).Field6);\n+      end Node30;\n+\n       function List1 (N : Node_Id) return List_Id is\n       begin\n          pragma Assert (N <= Nodes.Last);\n@@ -5219,6 +5225,12 @@ package body Atree is\n          Nodes.Table (N + 4).Field11 := Union_Id (Val);\n       end Set_Node29;\n \n+      procedure Set_Node30 (N : Node_Id; Val : Node_Id) is\n+      begin\n+         pragma Assert (Nkind (N) in N_Entity);\n+         Nodes.Table (N + 5).Field6 := Union_Id (Val);\n+      end Set_Node30;\n+\n       procedure Set_List1 (N : Node_Id; Val : List_Id) is\n       begin\n          pragma Assert (N <= Nodes.Last);"}, {"sha": "fc60293d65ba65e6b3ad2cea4d353032384a28e4", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -69,12 +69,13 @@ package Atree is\n    -- Size of Entities --\n    ----------------------\n \n-   --  Currently entities are composed of 5 sequentially allocated 32-byte\n+   --  Currently entities are composed of 6 sequentially allocated 32-byte\n    --  nodes, considered as a single record. The following definition gives\n    --  the number of extension nodes.\n \n-   Num_Extension_Nodes : Int := 4;\n-   --  This value is increased by one if debug flag -gnatd.N is set\n+   Num_Extension_Nodes : Int := 5;\n+   --  This value is increased by one if debug flag -gnatd.N is set. This is\n+   --  for testing performance impact of adding a new extension node.\n \n    ----------------------------------------\n    -- Definitions of Fields in Tree Node --\n@@ -1167,6 +1168,9 @@ package Atree is\n       function Node29 (N : Node_Id) return Node_Id;\n       pragma Inline (Node29);\n \n+      function Node30 (N : Node_Id) return Node_Id;\n+      pragma Inline (Node30);\n+\n       function List1 (N : Node_Id) return List_Id;\n       pragma Inline (List1);\n \n@@ -2446,6 +2450,9 @@ package Atree is\n       procedure Set_Node29 (N : Node_Id; Val : Node_Id);\n       pragma Inline (Set_Node29);\n \n+      procedure Set_Node30 (N : Node_Id; Val : Node_Id);\n+      pragma Inline (Set_Node30);\n+\n       procedure Set_List1 (N : Node_Id; Val : List_Id);\n       pragma Inline (Set_List1);\n "}, {"sha": "7d88c4d102c890dd02717fd2efe788eab056d97c", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2012, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -387,6 +387,7 @@ extern Node_Id Current_Error_Node;\n #define Field27(N)    (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.field9)\n #define Field28(N)    (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.field10)\n #define Field29(N)    (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.X.field11)\n+#define Field30(N)    (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.field6)\n \n #define Node1(N)      Field1  (N)\n #define Node2(N)      Field2  (N)\n@@ -417,6 +418,7 @@ extern Node_Id Current_Error_Node;\n #define Node27(N)     Field27 (N)\n #define Node28(N)     Field28 (N)\n #define Node29(N)     Field29 (N)\n+#define Node30(N)     Field30 (N)\n \n #define List1(N)      Field1  (N)\n #define List2(N)      Field2  (N)"}, {"sha": "6d87f98510b9167fd8568d9f0ef27e3bbc1fba1a", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 90, "deletions": 26, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -108,7 +108,6 @@ package body Einfo is\n    --    Esize                           Uint12\n    --    Next_Inlined_Subprogram         Node12\n \n-   --    Corresponding_Equality          Node13\n    --    Component_Clause                Node13\n    --    Elaboration_Entity              Node13\n    --    Extra_Accessibility             Node13\n@@ -232,7 +231,6 @@ package body Einfo is\n    --    Overridden_Operation            Node26\n    --    Package_Instantiation           Node26\n    --    Relative_Deadline_Variable      Node26\n-   --    Static_Initialization           Node26\n \n    --    Current_Use_Clause              Node27\n    --    Related_Type                    Node27\n@@ -244,7 +242,8 @@ package body Einfo is\n \n    --    Subprograms_For_Type            Node29\n \n-   --    (unused)                        Node30\n+   --    Corresponding_Equality          Node30\n+   --    Static_Initialization           Node30\n \n    --    (unused)                        Node31\n \n@@ -863,7 +862,7 @@ package body Einfo is\n         (Ekind (Id) = E_Function\n           and then not Comes_From_Source (Id)\n           and then Chars (Id) = Name_Op_Ne);\n-      return Node13 (Id);\n+      return Node30 (Id);\n    end Corresponding_Equality;\n \n    function Corresponding_Protected_Entry (Id : E) return E is\n@@ -2862,7 +2861,7 @@ package body Einfo is\n    begin\n       pragma Assert\n         (Ekind (Id) = E_Procedure and then not Is_Dispatching_Operation (Id));\n-      return Node26 (Id);\n+      return Node30 (Id);\n    end Static_Initialization;\n \n    function Stored_Constraint (Id : E) return L is\n@@ -3391,7 +3390,7 @@ package body Einfo is\n         (Ekind (Id) = E_Function\n           and then not Comes_From_Source (Id)\n           and then Chars (Id) = Name_Op_Ne);\n-      Set_Node13 (Id, V);\n+      Set_Node30 (Id, V);\n    end Set_Corresponding_Equality;\n \n    procedure Set_Corresponding_Protected_Entry (Id : E; V : E) is\n@@ -5469,7 +5468,7 @@ package body Einfo is\n    begin\n       pragma Assert\n         (Ekind (Id) = E_Procedure and then not Is_Dispatching_Operation (Id));\n-      Set_Node26 (Id, V);\n+      Set_Node30 (Id, V);\n    end Set_Static_Initialization;\n \n    procedure Set_Stored_Constraint (Id : E; V : L) is\n@@ -8221,18 +8220,7 @@ package body Einfo is\n             Write_Str (\"Component_Clause\");\n \n          when E_Function                                   =>\n-            if not Comes_From_Source (Id)\n-                 and then\n-               Chars (Id) = Name_Op_Ne\n-            then\n-               Write_Str (\"Corresponding_Equality\");\n-\n-            elsif Comes_From_Source (Id) then\n-               Write_Str (\"Elaboration_Entity\");\n-\n-            else\n-               Write_Str (\"Field13??\");\n-            end if;\n+            Write_Str (\"Elaboration_Entity\");\n \n          when E_Procedure                                  |\n               E_Package                                    |\n@@ -8879,13 +8867,7 @@ package body Einfo is\n \n          when E_Procedure                                  |\n               E_Function                                   =>\n-            if Ekind (Id) = E_Procedure\n-              and then not Is_Dispatching_Operation (Id)\n-            then\n-               Write_Str (\"Static_Initialization\");\n-            else\n-               Write_Str (\"Overridden_Operation\");\n-            end if;\n+            Write_Str (\"Overridden_Operation\");\n \n          when others                                       =>\n             Write_Str (\"Field26??\");\n@@ -8942,6 +8924,10 @@ package body Einfo is\n       end case;\n    end Write_Field28_Name;\n \n+   ------------------------\n+   -- Write_Field29_Name --\n+   ------------------------\n+\n    procedure Write_Field29_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n@@ -8953,6 +8939,84 @@ package body Einfo is\n       end case;\n    end Write_Field29_Name;\n \n+   ------------------------\n+   -- Write_Field30_Name --\n+   ------------------------\n+\n+   procedure Write_Field30_Name (Id : Entity_Id) is\n+   begin\n+      case Ekind (Id) is\n+         when E_Function                                   =>\n+            Write_Str (\"Corresponding_Equality\");\n+\n+         when E_Procedure                                  =>\n+            Write_Str (\"Static_Initialization\");\n+\n+         when others                                       =>\n+            Write_Str (\"Field30??\");\n+      end case;\n+   end Write_Field30_Name;\n+\n+   ------------------------\n+   -- Write_Field31_Name --\n+   ------------------------\n+\n+   procedure Write_Field31_Name (Id : Entity_Id) is\n+   begin\n+      case Ekind (Id) is\n+         when others                                       =>\n+            Write_Str (\"Field31??\");\n+      end case;\n+   end Write_Field31_Name;\n+\n+   ------------------------\n+   -- Write_Field32_Name --\n+   ------------------------\n+\n+   procedure Write_Field32_Name (Id : Entity_Id) is\n+   begin\n+      case Ekind (Id) is\n+         when others                                       =>\n+            Write_Str (\"Field32??\");\n+      end case;\n+   end Write_Field32_Name;\n+\n+   ------------------------\n+   -- Write_Field33_Name --\n+   ------------------------\n+\n+   procedure Write_Field33_Name (Id : Entity_Id) is\n+   begin\n+      case Ekind (Id) is\n+         when others                                       =>\n+            Write_Str (\"Field33??\");\n+      end case;\n+   end Write_Field33_Name;\n+\n+   ------------------------\n+   -- Write_Field34_Name --\n+   ------------------------\n+\n+   procedure Write_Field34_Name (Id : Entity_Id) is\n+   begin\n+      case Ekind (Id) is\n+         when others                                       =>\n+            Write_Str (\"Field34??\");\n+      end case;\n+   end Write_Field34_Name;\n+\n+   ------------------------\n+   -- Write_Field35_Name --\n+   ------------------------\n+\n+   procedure Write_Field35_Name (Id : Entity_Id) is\n+   begin\n+      case Ekind (Id) is\n+         when others                                       =>\n+            Write_Str (\"Field35??\");\n+      end case;\n+   end Write_Field35_Name;\n+\n    -------------------------\n    -- Iterator Procedures --\n    -------------------------"}, {"sha": "1266a3deb80c813d041aca1e865ee66589177746", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -659,7 +659,7 @@ package Einfo is\n --       used to constrain a discriminant of the parent type. Points to the\n --       corresponding discriminant in the parent type. Otherwise it is Empty.\n \n---    Corresponding_Equality (Node13)\n+--    Corresponding_Equality (Node30)\n --       Defined in function entities for implicit inequality operators.\n --       Denotes the explicit or derived equality operation that creates\n --       the implicit inequality. Note that this field is not present in\n@@ -3746,7 +3746,7 @@ package Einfo is\n --       all types declared in the package, and that a warning must be emitted\n --       for those types to which static initialization is not available.\n \n---    Static_Initialization (Node26)\n+--    Static_Initialization (Node30)\n --       Defined in initialization procedures for types whose objects can be\n --       initialized statically. The value of this attribute is a positional\n --       aggregate whose components are compile-time static values. Used\n@@ -5310,8 +5310,7 @@ package Einfo is\n    --    Handler_Records                     (List10)   (non-generic case only)\n    --    Protected_Body_Subprogram           (Node11)\n    --    Next_Inlined_Subprogram             (Node12)\n-   --    Corresponding_Equality              (Node13)   (implicit /= only)\n-   --    Elaboration_Entity                  (Node13)   (all other cases)\n+   --    Elaboration_Entity                  (Node13)   (not implicit /=)\n    --    First_Optional_Parameter            (Node14)   (non-generic case only)\n    --    DT_Position                         (Uint15)\n    --    DTC_Entity                          (Node16)\n@@ -5331,6 +5330,7 @@ package Einfo is\n    --    Wrapped_Entity                      (Node27)   (non-generic case only)\n    --    Extra_Formals                       (Node28)\n    --    Subprograms_For_Type                (Node29)\n+   --    Corresponding_Equality              (Node30)   (implicit /= only)\n    --    Body_Needed_For_SAL                 (Flag40)\n    --    Elaboration_Entity_Required         (Flag174)\n    --    Default_Expressions_Processed       (Flag108)\n@@ -5596,10 +5596,10 @@ package Einfo is\n    --    Protection_Object                   (Node23)   (for concurrent kind)\n    --    Contract                            (Node24)\n    --    Interface_Alias                     (Node25)\n-   --    Static_Initialization               (Node26)   (init_proc only)\n    --    Overridden_Operation                (Node26)   (never for init proc)\n    --    Wrapped_Entity                      (Node27)   (non-generic case only)\n    --    Extra_Formals                       (Node28)\n+   --    Static_Initialization               (Node30)   (init_proc only)\n    --    Body_Needed_For_SAL                 (Flag40)\n    --    Delay_Cleanups                      (Flag114)\n    --    Discard_Names                       (Flag88)\n@@ -7357,6 +7357,12 @@ package Einfo is\n    procedure Write_Field27_Name (Id : Entity_Id);\n    procedure Write_Field28_Name (Id : Entity_Id);\n    procedure Write_Field29_Name (Id : Entity_Id);\n+   procedure Write_Field30_Name (Id : Entity_Id);\n+   procedure Write_Field31_Name (Id : Entity_Id);\n+   procedure Write_Field32_Name (Id : Entity_Id);\n+   procedure Write_Field33_Name (Id : Entity_Id);\n+   procedure Write_Field34_Name (Id : Entity_Id);\n+   procedure Write_Field35_Name (Id : Entity_Id);\n    --  These routines are used in Treepr to output a nice symbolic name for\n    --  the given field, depending on the Ekind. No blanks or end of lines are\n    --  output, just the characters of the field name."}, {"sha": "b109b69e122e0faceed11854d088a2ff3cef1695", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -5523,7 +5523,9 @@ In addition to the above cases, warnings are also generated for\n GNAT features that have been provided in past versions but which\n have been superseded (typically by features in the new Ada standard).\n For example, @code{pragma Ravenscar} will be flagged since its\n-function is replaced by @code{pragma Profile(Ravenscar)}.\n+function is replaced by @code{pragma Profile(Ravenscar)}, and\n+@code{pragma Interface_Name} will be flagged since its function\n+is replaced by @code{pragma Import}.\n \n Note that this warning option functions differently from the\n restriction @code{No_Obsolescent_Features} in two respects."}, {"sha": "ce690e567b49ce11ce887f8a9fe3870042582799", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -2366,8 +2366,9 @@ begin\n                      then\n                         declare\n                            Path : constant String :=\n-                             Absolute_Path\n-                               (Path_Name_Type (Variable.Value), Project);\n+                                    Absolute_Path\n+                                      (Path_Name_Type (Variable.Value),\n+                                       Variable.Project);\n                         begin\n                            Add_To_Carg_Switches\n                              (new String'(\"-gnatec=\" & Path));\n@@ -2411,8 +2412,9 @@ begin\n                         then\n                            declare\n                               Path : constant String :=\n-                                Absolute_Path\n-                                  (Path_Name_Type (Variable.Value), Project);\n+                                       Absolute_Path\n+                                         (Path_Name_Type (Variable.Value),\n+                                          Variable.Project);\n                            begin\n                               Add_To_Carg_Switches\n                                 (new String'(\"-gnatec=\" & Path));"}, {"sha": "b575edaa105dad3bf4fe7339586d7cd119bc91bc", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -265,6 +265,7 @@ package body Prj.Attr is\n    \"Ladefault_switches#\" &\n    \"LcOleading_switches#\" &\n    \"LcOswitches#\" &\n+   \"LcOtrailing_switches#\" &\n    \"LVlinker_options#\" &\n    \"SVmap_file_option#\" &\n "}, {"sha": "757e0ee732b5daa2a14f7864f70e5ab971576236", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -332,6 +332,7 @@ package body Sem_Disp is\n \n          elsif From_With_Type (Designated_Type (T))\n            and then Present (Non_Limited_View (Designated_Type (T)))\n+           and then Scope (Designated_Type (T)) = Scope (Subp)\n          then\n             if Is_First_Subtype (Non_Limited_View (Designated_Type (T))) then\n                Tagged_Type := Non_Limited_View (Designated_Type (T));"}, {"sha": "8d8735596fe21762a956e9ff5371584eda5fb45d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -11095,11 +11095,19 @@ package body Sem_Prag is\n             Process_Import_Or_Interface;\n \n             --  In Ada 2005, the permission to use Interface (a reserved word)\n-            --  as a pragma name is considered an obsolescent feature.\n+            --  as a pragma name is considered an obsolescent feature, and this\n+            --  pragma was already obsolescent in Ada 95.\n \n-            if Ada_Version >= Ada_2005 then\n+            if Ada_Version >= Ada_95 then\n                Check_Restriction\n                  (No_Obsolescent_Features, Pragma_Identifier (N));\n+\n+               if Warn_On_Obsolescent_Feature then\n+                  Error_Msg_N\n+                    (\"pragma Interface is an obsolescent feature?j?\", N);\n+                  Error_Msg_N\n+                    (\"|use pragma Import instead?j?\", N);\n+               end if;\n             end if;\n \n          --------------------\n@@ -11126,6 +11134,19 @@ package body Sem_Prag is\n             Id := Get_Pragma_Arg (Arg1);\n             Analyze (Id);\n \n+            --  This is obsolete from Ada 95 on, but it is an implementation\n+            --  defined pragma, so we do not consider that it violates the\n+            --  restriction (No_Obsolescent_Features).\n+\n+            if Ada_Version >= Ada_95 then\n+               if Warn_On_Obsolescent_Feature then\n+                  Error_Msg_N\n+                    (\"pragma Interface_Name is an obsolescent feature?j?\", N);\n+                  Error_Msg_N\n+                    (\"|use pragma Import instead?j?\", N);\n+               end if;\n+            end if;\n+\n             if not Is_Entity_Name (Id) then\n                Error_Pragma_Arg\n                  (\"first argument for pragma% must be entity name\", Arg1);"}, {"sha": "e84cce2385e5d5a9ab147e0d2f47ba31e13891c6", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -1343,6 +1343,7 @@ package Snames is\n    Name_Toolchain_Description              : constant Name_Id := N + $;\n    Name_Toolchain_Version                  : constant Name_Id := N + $;\n    Name_Trailing_Required_Switches         : constant Name_Id := N + $;\n+   Name_Trailing_Switches                  : constant Name_Id := N + $;\n    Name_Runtime_Library_Dir                : constant Name_Id := N + $;\n    Name_Runtime_Source_Dir                 : constant Name_Id := N + $;\n "}, {"sha": "64dbf2dd5369d659af80f684e801f45f236b64ff", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/477cfc5b60785205119bc2ab8b97d309e0a422f4/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=477cfc5b60785205119bc2ab8b97d309e0a422f4", "patch": "@@ -687,6 +687,54 @@ package body Treepr is\n          Print_Eol;\n       end if;\n \n+      if Field_Present (Field30 (Ent)) then\n+         Print_Str (Prefix);\n+         Write_Field30_Name (Ent);\n+         Write_Str (\" = \");\n+         Print_Field (Field30 (Ent));\n+         Print_Eol;\n+      end if;\n+\n+      if Field_Present (Field31 (Ent)) then\n+         Print_Str (Prefix);\n+         Write_Field31_Name (Ent);\n+         Write_Str (\" = \");\n+         Print_Field (Field31 (Ent));\n+         Print_Eol;\n+      end if;\n+\n+      if Field_Present (Field32 (Ent)) then\n+         Print_Str (Prefix);\n+         Write_Field32_Name (Ent);\n+         Write_Str (\" = \");\n+         Print_Field (Field32 (Ent));\n+         Print_Eol;\n+      end if;\n+\n+      if Field_Present (Field33 (Ent)) then\n+         Print_Str (Prefix);\n+         Write_Field33_Name (Ent);\n+         Write_Str (\" = \");\n+         Print_Field (Field33 (Ent));\n+         Print_Eol;\n+      end if;\n+\n+      if Field_Present (Field34 (Ent)) then\n+         Print_Str (Prefix);\n+         Write_Field34_Name (Ent);\n+         Write_Str (\" = \");\n+         Print_Field (Field34 (Ent));\n+         Print_Eol;\n+      end if;\n+\n+      if Field_Present (Field35 (Ent)) then\n+         Print_Str (Prefix);\n+         Write_Field35_Name (Ent);\n+         Write_Str (\" = \");\n+         Print_Field (Field35 (Ent));\n+         Print_Eol;\n+      end if;\n+\n       Write_Entity_Flags (Ent, Prefix);\n    end Print_Entity_Info;\n "}]}