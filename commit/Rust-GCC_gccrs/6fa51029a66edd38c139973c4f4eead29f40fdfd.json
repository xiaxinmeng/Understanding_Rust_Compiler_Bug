{"sha": "6fa51029a66edd38c139973c4f4eead29f40fdfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZhNTEwMjlhNjZlZGQzOGMxMzk5NzNjNGY0ZWVhZDI5ZjQwZmRmZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-03-28T01:44:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-03-28T01:44:33Z"}, "message": "(expand_call, store_one_arg): Don't set KEEP in calls to\nassign_stack_temp.\n\nFrom-SVN: r9235", "tree": {"sha": "041aa6c9285130d7462a9672da528de00a3965cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/041aa6c9285130d7462a9672da528de00a3965cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fa51029a66edd38c139973c4f4eead29f40fdfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa51029a66edd38c139973c4f4eead29f40fdfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa51029a66edd38c139973c4f4eead29f40fdfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa51029a66edd38c139973c4f4eead29f40fdfd/comments", "author": null, "committer": null, "parents": [{"sha": "225b8835c4d7b07c3701aae5c49d6ac01c02773e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225b8835c4d7b07c3701aae5c49d6ac01c02773e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225b8835c4d7b07c3701aae5c49d6ac01c02773e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c0912cc952ceaa1938f257bc4ff6cca74ddbb900", "filename": "gcc/calls.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa51029a66edd38c139973c4f4eead29f40fdfd/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa51029a66edd38c139973c4f4eead29f40fdfd/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=6fa51029a66edd38c139973c4f4eead29f40fdfd", "patch": "@@ -1071,7 +1071,7 @@ expand_call (exp, target, ignore)\n \t      else\n \t\t{\n \t\t  int size = int_size_in_bytes (type);\n-\t\t  copy = assign_stack_temp (TYPE_MODE (type), size, 1);\n+\t\t  copy = assign_stack_temp (TYPE_MODE (type), size, 0);\n \t\t}\n \n \t      MEM_IN_STRUCT_P (copy) = AGGREGATE_TYPE_P (type);\n@@ -1699,7 +1699,7 @@ expand_call (exp, target, ignore)\n \t\t\t\t\t    ));\n       if (save_mode == BLKmode)\n \t{\n-\t  save_area = assign_stack_temp (BLKmode, num_to_save, 1);\n+\t  save_area = assign_stack_temp (BLKmode, num_to_save, 0);\n \t  MEM_IN_STRUCT_P (save_area) = 0;\n \t  emit_block_move (validize_mem (save_area), stack_area,\n \t\t\t   GEN_INT (num_to_save),\n@@ -2971,7 +2971,7 @@ store_one_arg (arg, argblock, may_be_alloca, variable_size, fndecl,\n \t  if (save_mode == BLKmode)\n \t    {\n \t      arg->save_area = assign_stack_temp (BLKmode,\n-\t\t\t\t\t\t  arg->size.constant, 1);\n+\t\t\t\t\t\t  arg->size.constant, 0);\n \t      MEM_IN_STRUCT_P (arg->save_area)\n \t\t= AGGREGATE_TYPE_P (TREE_TYPE (arg->tree_value));\n \t      preserve_temp_slots (arg->save_area);"}]}