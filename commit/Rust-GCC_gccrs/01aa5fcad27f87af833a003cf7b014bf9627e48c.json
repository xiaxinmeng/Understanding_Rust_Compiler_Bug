{"sha": "01aa5fcad27f87af833a003cf7b014bf9627e48c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFhYTVmY2FkMjdmODdhZjgzM2EwMDNjZjdiMDE0YmY5NjI3ZTQ4Yw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-04T05:01:22Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-04T05:23:42Z"}, "message": "Adjust vrp_evaluate_conditional for irange API.\n\ngcc/ChangeLog:\n\n\t* vr-values.c (simplify_using_ranges::vrp_evaluate_conditional): Adjust\n\tfor irange API.", "tree": {"sha": "8d5ea5e4f1bd3258379d6392ae99a058703b6540", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d5ea5e4f1bd3258379d6392ae99a058703b6540"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01aa5fcad27f87af833a003cf7b014bf9627e48c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01aa5fcad27f87af833a003cf7b014bf9627e48c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01aa5fcad27f87af833a003cf7b014bf9627e48c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01aa5fcad27f87af833a003cf7b014bf9627e48c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5220219922c41dd574de83f3334b2ca5db9a722d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5220219922c41dd574de83f3334b2ca5db9a722d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5220219922c41dd574de83f3334b2ca5db9a722d"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "90ba8fca246bb4b008c74ee379f544cef3fe3648", "filename": "gcc/vr-values.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01aa5fcad27f87af833a003cf7b014bf9627e48c/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01aa5fcad27f87af833a003cf7b014bf9627e48c/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=01aa5fcad27f87af833a003cf7b014bf9627e48c", "patch": "@@ -2495,11 +2495,7 @@ simplify_using_ranges::vrp_evaluate_conditional (tree_code code, tree op0,\n       tree type = TREE_TYPE (op0);\n       const value_range_equiv *vr0 = get_value_range (op0);\n \n-      if (vr0->kind () == VR_RANGE\n-\t  && INTEGRAL_TYPE_P (type)\n-\t  && vrp_val_is_min (vr0->min ())\n-\t  && vrp_val_is_max (vr0->max ())\n-\t  && is_gimple_min_invariant (op1))\n+      if (vr0->varying_p () && INTEGRAL_TYPE_P (type))\n \t{\n \t  location_t location;\n "}]}