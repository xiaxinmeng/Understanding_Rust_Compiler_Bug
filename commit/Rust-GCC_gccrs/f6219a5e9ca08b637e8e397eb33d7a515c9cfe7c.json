{"sha": "f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyMTlhNWU5Y2EwOGI2MzdlOGUzOTdlYjMzZDdhNTE1YzljZmU3Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-11-02T09:50:35Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-11-02T09:50:35Z"}, "message": "re PR rtl-optimization/17104 (Non-optimal code generation for bitfield initialization)\n\n.:\tPR rtl-optimization/17104\n\t* config/rs6000/rs6000.c (rs6000_emit_move): Don't wrap small\n\tloads in zero_extend.\ntestsuite:\n\tPR rtl-optimization/17104\n\t* gcc.dg/ppc-bitfield1.c: New.\n\nFrom-SVN: r89980", "tree": {"sha": "df1c00985a513be97fbf90a16bf07e08d4171ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df1c00985a513be97fbf90a16bf07e08d4171ee5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/comments", "author": null, "committer": null, "parents": [{"sha": "8f49f0f1992ab332579431968f56d32bca636ce1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f49f0f1992ab332579431968f56d32bca636ce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f49f0f1992ab332579431968f56d32bca636ce1"}], "stats": {"total": 96, "additions": 80, "deletions": 16}, "files": [{"sha": "f581d1a9a8816e8c90e7955fbb819ce77a1bb721", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c", "patch": "@@ -1,3 +1,9 @@\n+2004-11-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR rtl-optimization/17104\n+\t* config/rs6000/rs6000.c (rs6000_emit_move): Don't wrap small\n+\tloads in zero_extend.\n+\n 2004-11-02  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR debug/18242"}, {"sha": "2b3178cccae677bf5f9e98b35cc1fae033a5ad39", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c", "patch": "@@ -4264,22 +4264,8 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n       return;\n     }\n \n-  if (!no_new_pseudos)\n-    {\n-      if (GET_CODE (operands[1]) == MEM && optimize > 0\n-\t  && (mode == QImode || mode == HImode || mode == SImode)\n-\t  && GET_MODE_SIZE (mode) < GET_MODE_SIZE (word_mode))\n-\t{\n-\t  rtx reg = gen_reg_rtx (word_mode);\n-\n-\t  emit_insn (gen_rtx_SET (word_mode, reg,\n-\t\t\t\t  gen_rtx_ZERO_EXTEND (word_mode,\n-\t\t\t\t\t\t       operands[1])));\n-\t  operands[1] = gen_lowpart (mode, reg);\n-\t}\n-      if (GET_CODE (operands[0]) != REG)\n-\toperands[1] = force_reg (mode, operands[1]);\n-    }\n+  if (!no_new_pseudos && GET_CODE (operands[0]) != REG)\n+    operands[1] = force_reg (mode, operands[1]);\n \n   if (mode == SFmode && ! TARGET_POWERPC\n       && TARGET_HARD_FLOAT && TARGET_FPRS"}, {"sha": "296b5c689bd938e8d4c6de09921d4e1b7aec0c23", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c", "patch": "@@ -1,3 +1,8 @@\n+2004-11-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR rtl-optimization/17104\n+\t* gcc.dg/ppc-bitfield1.c: New.\n+\n 2004-11-01  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* gcc.dg/uninit-H.c (ASM): Define to \"$sp\" on MIPS targets."}, {"sha": "c4b73a7f5d545d749a56f52675a3900008073413", "filename": "gcc/testsuite/gcc.dg/ppc-bitfield1.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-bitfield1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-bitfield1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fppc-bitfield1.c?ref=f6219a5e9ca08b637e8e397eb33d7a515c9cfe7c", "patch": "@@ -0,0 +1,67 @@\n+/* { dg-do compile { target powerpc64-*-* } } */\n+/* { dg-options \"-m64 -O2\" } */\n+\n+/* { dg-final { scan-assembler-not \"rlwinm \\[0-9\\]+,\\[0-9\\]+,\\[0-9\\]+,1,31\"  } } */\n+/* { dg-final { scan-assembler-not \"rlwinm \\[0-9\\]+,\\[0-9\\]+,\\[0-9\\]+,0xffffffff\" } } */\n+\n+/* Origin:Pete Steinmetz <steinmtz@us.ibm.com> */\n+\n+/* PR 17104 many sign extends added.  */\n+\n+struct {\n+ int f1 : 1;\n+ int f2 : 1;\n+ int f3 : 1;\n+ int f4 : 1;\n+ int f5 : 1;\n+ int f6 : 1;\n+ int f7 : 1;\n+ int f8 : 1;\n+ int f9 : 1;\n+ int f10 : 1;\n+ int f11 : 1;\n+ int f12 : 1;\n+ int f13 : 1;\n+ int f14 : 1;\n+ int f15 : 1;\n+ int f16 : 1;\n+ int f17 : 2;\n+ int f18 : 2;\n+ int f19 : 2;\n+ int f20 : 2;\n+ int f21 : 2;\n+ int f22 : 2;\n+ int f23 : 2;\n+ int f24 : 2;\n+ } s;\n+\n+void foo ()\n+{\n+\n+    s.f1 = 0;\n+    s.f2 = 0;\n+    s.f3 = 0;\n+    s.f4 = 0;\n+    s.f5 = 0;\n+    s.f6 = 0;\n+    s.f7 = 0;\n+    s.f8 = 0;\n+    s.f9 = 0;\n+    s.f10 = 0;\n+    s.f11 = 0;\n+    s.f12 = 0;\n+    s.f13 = 0;\n+    s.f14 = 0;\n+    s.f15 = 0;\n+    s.f16 = 0;\n+    s.f17 = 0;\n+    s.f18 = 0;\n+    s.f19 = 0;\n+    s.f20 = 0;\n+    s.f21 = 0;\n+    s.f22 = 0;\n+    s.f23 = 0;\n+    s.f24 = 0;\n+\n+}\n+"}]}