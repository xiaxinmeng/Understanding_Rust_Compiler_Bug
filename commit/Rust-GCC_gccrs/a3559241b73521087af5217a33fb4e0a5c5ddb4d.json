{"sha": "a3559241b73521087af5217a33fb4e0a5c5ddb4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM1NTkyNDFiNzM1MjEwODdhZjUyMTdhMzNmYjRlMGE1YzVkZGI0ZA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2018-12-03T15:49:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-03T15:49:37Z"}, "message": "[Ada] Spelling fixes and minor reformatting\n\n2018-12-03  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb, libgnarl/s-taasde.adb, libgnarl/s-taenca.adb,\n\tlibgnarl/s-tarest.adb, libgnarl/s-tasini.adb,\n\tlibgnarl/s-taskin.ads, libgnarl/s-tasren.adb,\n\tlibgnarl/s-tassta.adb, libgnarl/s-tasuti.adb: Spelling fixes and\n\tminor reformatting.\n\nFrom-SVN: r266756", "tree": {"sha": "8451fe9c397d7b1b573b77d987f26af97df52ec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8451fe9c397d7b1b573b77d987f26af97df52ec2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3559241b73521087af5217a33fb4e0a5c5ddb4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3559241b73521087af5217a33fb4e0a5c5ddb4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3559241b73521087af5217a33fb4e0a5c5ddb4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3559241b73521087af5217a33fb4e0a5c5ddb4d/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a1838cda7a0b88905580cc174ecd84960b7d957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1838cda7a0b88905580cc174ecd84960b7d957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1838cda7a0b88905580cc174ecd84960b7d957"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "73627f078f7f80d11f5c95c3c2baa2dbb55bd489", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -1,3 +1,11 @@\n+2018-12-03  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch3.adb, libgnarl/s-taasde.adb, libgnarl/s-taenca.adb,\n+\tlibgnarl/s-tarest.adb, libgnarl/s-tasini.adb,\n+\tlibgnarl/s-taskin.ads, libgnarl/s-tasren.adb,\n+\tlibgnarl/s-tassta.adb, libgnarl/s-tasuti.adb: Spelling fixes and\n+\tminor reformatting.\n+\n 2018-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_aggr.adb (Convert_To_Positional): Use"}, {"sha": "22ea00663cee73afd5b7440980e68d19312908dc", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -6589,7 +6589,7 @@ package body Exp_Ch3 is\n \n             --  An aggregate that must be built in place is not resolved and\n             --  expanded until the enclosing construct is expanded. This will\n-            --  happen when the aggregqte is limited and the declared object\n+            --  happen when the aggregate is limited and the declared object\n             --  has a following address clause.\n \n             if Is_Limited_Type (Typ) and then not Analyzed (Expr) then"}, {"sha": "ae2eecaed1de686f1ad392bbeb80e70df2643141", "filename": "gcc/ada/libgnarl/s-taasde.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-taasde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-taasde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taasde.adb?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -106,7 +106,7 @@ package body System.Tasking.Async_Delays is\n \n    begin\n       --  A delay block level of Level_No_Pending_Abort indicates the delay\n-      --  has been cancelled. If the delay has already been canceled, there is\n+      --  has been canceled. If the delay has already been canceled, there is\n       --  nothing more to be done.\n \n       if D.Level = Level_No_Pending_Abort then\n@@ -181,8 +181,8 @@ package body System.Tasking.Async_Delays is\n \n    --  Allocate a queue element for the wakeup time T and put it in the\n    --  queue in wakeup time order.  Assume we are on an asynchronous\n-   --  select statement with delay trigger.  Put the calling task to\n-   --  sleep until either the delay expires or is cancelled.\n+   --  select statement with delay trigger. Put the calling task to\n+   --  sleep until either the delay expires or is canceled.\n \n    --  We use one entry call record for this delay, since we have\n    --  to increment the ATC nesting level, but since it is not a"}, {"sha": "9073f4531133e27247d1648fa15eb4652e13bd55", "filename": "gcc/ada/libgnarl/s-taenca.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-taenca.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-taenca.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taenca.adb?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -615,7 +615,7 @@ package body System.Tasking.Entry_Calls is\n       Call    : Entry_Call_Link)\n    is\n    begin\n-      pragma Assert (Self_ID.ATC_Nesting_Level > Level_No_ATC_Occuring);\n+      pragma Assert (Self_ID.ATC_Nesting_Level > Level_No_ATC_Occurring);\n       pragma Assert (Call.Mode = Asynchronous_Call);\n \n       STPO.Write_Lock (Self_ID);"}, {"sha": "f3db81ec6c4957a6990b3e2841615a9001bde3c4", "filename": "gcc/ada/libgnarl/s-tarest.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tarest.adb?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -563,7 +563,7 @@ package body System.Tasking.Restricted.Stages is\n       end if;\n \n       --  Only the first element of the Entry_Calls array is used when the\n-      --  Ravenscar Profile is active as no asynchronous transfer of control\n+      --  Ravenscar Profile is active, as no asynchronous transfer of control\n       --  is allowed.\n \n       Created_Task.Entry_Calls (Created_Task.Entry_Calls'First) :="}, {"sha": "3512682f9acb80f68bed53f1ebbcf28cfee9f0b0", "filename": "gcc/ada/libgnarl/s-tasini.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -440,9 +440,9 @@ package body System.Tasking.Initialization is\n             when Activating\n                | Runnable\n             =>\n-               if T.ATC_Nesting_Level > Level_No_ATC_Occuring then\n+               if T.ATC_Nesting_Level > Level_No_ATC_Occurring then\n                   --  This scenario occurs when an asynchronous protected entry\n-                  --  call is canceld during a requeue with abort.\n+                  --  call is canceled during a requeue with abort.\n \n                   T.Entry_Calls\n                     (T.ATC_Nesting_Level).Cancellation_Attempted := True;\n@@ -467,7 +467,7 @@ package body System.Tasking.Initialization is\n                Wakeup (T, T.Common.State);\n \n             when Entry_Caller_Sleep  =>\n-               pragma Assert (T.ATC_Nesting_Level > Level_No_ATC_Occuring);\n+               pragma Assert (T.ATC_Nesting_Level > Level_No_ATC_Occurring);\n \n                T.Entry_Calls\n                  (T.ATC_Nesting_Level).Cancellation_Attempted := True;"}, {"sha": "657d24743b8fc72872db5114c93888be4add86f9", "filename": "gcc/ada/libgnarl/s-taskin.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -826,19 +826,19 @@ package System.Tasking is\n    --  ATC_Level of a task that has \"completed\". A task reaches the completed\n    --  state after an abort, exception propagation, or normal exit.\n \n-   Level_No_ATC_Occuring : constant ATC_Level_Base := 0;\n+   Level_No_ATC_Occurring : constant ATC_Level_Base := 0;\n    --  ATC_Level of a task not executing a entry call or an asynchronous\n    --  select statement.\n \n    Level_No_Pending_Abort : constant ATC_Level_Base := ATC_Level_Base'Last;\n    --  ATC_Level when there is no pending abort\n \n    subtype ATC_Level is ATC_Level_Base range\n-     Level_No_ATC_Occuring .. Level_No_Pending_Abort - 1;\n+     Level_No_ATC_Occurring .. Level_No_Pending_Abort - 1;\n    --  Nested ATC_Levels valid during the execution of a task\n \n    subtype ATC_Level_Index is ATC_Level range\n-     Level_No_ATC_Occuring + 1 .. ATC_Level'Last;\n+     Level_No_ATC_Occurring + 1 .. ATC_Level'Last;\n    --  ATC_Levels valid when a task is executing an entry call or asynchronous\n    --  task control statements.\n \n@@ -1101,7 +1101,7 @@ package System.Tasking is\n \n       --  Beginning of counts\n \n-      ATC_Nesting_Level : ATC_Level := Level_No_ATC_Occuring;\n+      ATC_Nesting_Level : ATC_Level := Level_No_ATC_Occurring;\n       --  The dynamic level of ATC nesting (currently executing nested\n       --  asynchronous select statements) in this task.\n "}, {"sha": "a7b285f15874bcb87ea512f277b2c403a4f67651", "filename": "gcc/ada/libgnarl/s-tasren.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -206,7 +206,7 @@ package body System.Tasking.Rendezvous is\n          if Self_Id.Common.Call /= null then\n             Caller := Self_Id.Common.Call.Self;\n \n-            pragma Assert (Caller.ATC_Nesting_Level > Level_No_ATC_Occuring);\n+            pragma Assert (Caller.ATC_Nesting_Level > Level_No_ATC_Occurring);\n \n             Uninterpreted_Data :=\n               Caller.Entry_Calls (Caller.ATC_Nesting_Level).Uninterpreted_Data;"}, {"sha": "171baed4e1edfcdfac70b85dcb88366b14a3af9c", "filename": "gcc/ada/libgnarl/s-tassta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -1982,7 +1982,7 @@ package body System.Tasking.Stages is\n            Self_ID.Master_Of_Task .. Self_ID.Master_Of_Task + 3);\n       pragma Assert (Self_ID.Common.Wait_Count = 0);\n       pragma Assert (Self_ID.Open_Accepts = null);\n-      pragma Assert (Self_ID.ATC_Nesting_Level = Level_No_ATC_Occuring);\n+      pragma Assert (Self_ID.ATC_Nesting_Level = Level_No_ATC_Occurring);\n \n       pragma Debug (Debug.Trace (Self_ID, \"V_Complete_Task\", 'C'));\n "}, {"sha": "58dc86f4ec47c5f6991d5c73b4c7c2eada71aa41", "filename": "gcc/ada/libgnarl/s-tasuti.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tasuti.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3559241b73521087af5217a33fb4e0a5c5ddb4d/gcc%2Fada%2Flibgnarl%2Fs-tasuti.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasuti.adb?ref=a3559241b73521087af5217a33fb4e0a5c5ddb4d", "patch": "@@ -206,7 +206,7 @@ package body System.Tasking.Utilities is\n \n    procedure Exit_One_ATC_Level (Self_ID : Task_Id) is\n    begin\n-      pragma Assert (Self_ID.ATC_Nesting_Level > Level_No_ATC_Occuring);\n+      pragma Assert (Self_ID.ATC_Nesting_Level > Level_No_ATC_Occurring);\n \n       Self_ID.ATC_Nesting_Level := Self_ID.ATC_Nesting_Level - 1;\n "}]}