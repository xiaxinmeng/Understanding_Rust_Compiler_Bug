{"sha": "fa1fabcbbce4ec891b5856ebd994384c6635736b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmExZmFiY2JiY2U0ZWM4OTFiNTg1NmViZDk5NDM4NGM2NjM1NzM2Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-12-09T10:00:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-12-09T10:00:25Z"}, "message": "rtl.h (invalid_mode_change_p): Adjust prototype.\n\n2010-12-09  Richard Guenther  <rguenther@suse.de>\n\n\t* rtl.h (invalid_mode_change_p): Adjust prototype.\n\t* reginfo.c (invalid_mode_change_p): Remove from argument.\n\t* ira-costs.c (print_allocno_costs): Adjust callers.\n\t(find_costs_and_classes): Likewise.\n\n2010-12-09  Richard Guenther  <rguenther@suse.de>\n\n\t* ira.c (ira): Do not call finish_subregs_of_mode.\n\t* ira-costs.c (finish_costs): Call finish_subregs_of_mode.\n\nFrom-SVN: r167631", "tree": {"sha": "8004babdc793f99c4704ed369b977399b980bd34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8004babdc793f99c4704ed369b977399b980bd34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa1fabcbbce4ec891b5856ebd994384c6635736b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1fabcbbce4ec891b5856ebd994384c6635736b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa1fabcbbce4ec891b5856ebd994384c6635736b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1fabcbbce4ec891b5856ebd994384c6635736b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27037b5f7d05ec826b4931d87d4e9a68f680e62f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27037b5f7d05ec826b4931d87d4e9a68f680e62f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27037b5f7d05ec826b4931d87d4e9a68f680e62f"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "f4338c0f3eb737625154cc059bb281939ca0230b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa1fabcbbce4ec891b5856ebd994384c6635736b", "patch": "@@ -1,3 +1,15 @@\n+2010-12-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* ira.c (ira): Do not call finish_subregs_of_mode.\n+\t* ira-costs.c (finish_costs): Call finish_subregs_of_mode.\n+\n+2010-12-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* rtl.h (invalid_mode_change_p): Adjust prototype.\n+\t* reginfo.c (invalid_mode_change_p): Remove from argument.\n+\t* ira-costs.c (print_allocno_costs): Adjust callers.\n+\t(find_costs_and_classes): Likewise.\n+\n 2010-12-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/s390/s390.md (*mov<mode>cc): Change lgoc and stgoc to"}, {"sha": "2329613ffa8d614ddfb9e0927a43bc90ea04f987", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=fa1fabcbbce4ec891b5856ebd994384c6635736b", "patch": "@@ -1093,8 +1093,7 @@ print_allocno_costs (FILE *f)\n \t      && (! in_inc_dec[i] || ! forbidden_inc_dec_class[rclass])\n #endif\n #ifdef CANNOT_CHANGE_MODE_CLASS\n-\t      && ! invalid_mode_change_p (regno, (enum reg_class) rclass,\n-\t\t\t\t\t  PSEUDO_REGNO_MODE (regno))\n+\t      && ! invalid_mode_change_p (regno, (enum reg_class) rclass)\n #endif\n \t      )\n \t    {\n@@ -1131,8 +1130,7 @@ print_pseudo_costs (FILE *f)\n \t      && (! in_inc_dec[regno] || ! forbidden_inc_dec_class[rclass])\n #endif\n #ifdef CANNOT_CHANGE_MODE_CLASS\n-\t      && ! invalid_mode_change_p (regno, (enum reg_class) rclass,\n-\t\t\t\t\t  PSEUDO_REGNO_MODE (regno))\n+\t      && ! invalid_mode_change_p (regno, (enum reg_class) rclass)\n #endif\n \t      )\n \t    fprintf (f, \" %s:%d\", reg_class_names[rclass],\n@@ -1336,8 +1334,7 @@ find_costs_and_classes (FILE *dump_file)\n \t\t  || (inc_dec_p && forbidden_inc_dec_class[rclass])\n #endif\n #ifdef CANNOT_CHANGE_MODE_CLASS\n-\t\t  || invalid_mode_change_p (i, (enum reg_class) rclass,\n-\t\t\t\t\t    PSEUDO_REGNO_MODE (i))\n+\t\t  || invalid_mode_change_p (i, (enum reg_class) rclass)\n #endif\n \t\t  )\n \t\tcontinue;\n@@ -1412,8 +1409,7 @@ find_costs_and_classes (FILE *dump_file)\n \t\t\t  || (inc_dec_p && forbidden_inc_dec_class[rclass])\n #endif\n #ifdef CANNOT_CHANGE_MODE_CLASS\n-\t\t\t  || invalid_mode_change_p (i, (enum reg_class) rclass,\n-\t\t\t\t\t\t    PSEUDO_REGNO_MODE (i))\n+\t\t\t  || invalid_mode_change_p (i, (enum reg_class) rclass)\n #endif\n \t\t\t  )\n \t\t\t;\n@@ -1699,6 +1695,7 @@ init_costs (void)\n static void\n finish_costs (void)\n {\n+  finish_subregs_of_mode ();\n   ira_free (regno_equiv_gains);\n   ira_free (regno_cover_class);\n   ira_free (pref_buffer);"}, {"sha": "6db1fba5a6f22624761a2374afd5eabaa8c6ef83", "filename": "gcc/ira.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=fa1fabcbbce4ec891b5856ebd994384c6635736b", "patch": "@@ -3279,8 +3279,6 @@ ira (FILE *f)\n \n   reload_completed = !reload (get_insns (), ira_conflicts_p);\n \n-  finish_subregs_of_mode ();\n-\n   timevar_pop (TV_RELOAD);\n \n   timevar_push (TV_IRA);"}, {"sha": "dd2376b0c94d79e952ed8260509afa481018327a", "filename": "gcc/reginfo.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=fa1fabcbbce4ec891b5856ebd994384c6635736b", "patch": "@@ -1338,12 +1338,12 @@ init_subregs_of_mode (void)\n    mode.  */\n bool\n invalid_mode_change_p (unsigned int regno,\n-\t\t       enum reg_class rclass ATTRIBUTE_UNUSED,\n-\t\t       enum machine_mode from)\n+\t\t       enum reg_class rclass ATTRIBUTE_UNUSED)\n {\n   struct subregs_of_mode_node dummy, *node;\n   unsigned int to;\n   unsigned char mask;\n+  enum machine_mode from = PSEUDO_REGNO_MODE (regno);\n \n   gcc_assert (subregs_of_mode);\n   dummy.block = regno & -8;"}, {"sha": "bb482baf5f62bd2d51c948c35051181236cdefac", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa1fabcbbce4ec891b5856ebd994384c6635736b/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=fa1fabcbbce4ec891b5856ebd994384c6635736b", "patch": "@@ -2455,8 +2455,7 @@ extern void init_reg_sets (void);\n extern void regclass (rtx, int);\n extern void reg_scan (rtx, unsigned int);\n extern void fix_register (const char *, int, int);\n-extern bool invalid_mode_change_p (unsigned int, enum reg_class,\n-\t\t\t\t   enum machine_mode);\n+extern bool invalid_mode_change_p (unsigned int, enum reg_class);\n \n /* In reorg.c */\n extern void dbr_schedule (rtx);"}]}