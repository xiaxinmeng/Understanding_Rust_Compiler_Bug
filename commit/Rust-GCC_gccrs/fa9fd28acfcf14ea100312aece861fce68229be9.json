{"sha": "fa9fd28acfcf14ea100312aece861fce68229be9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5ZmQyOGFjZmNmMTRlYTEwMDMxMmFlY2U4NjFmY2U2ODIyOWJlOQ==", "commit": {"author": {"name": "Rask Ingemann Lambertsen", "email": "rask@sygehus.dk", "date": "2007-06-19T17:35:16Z"}, "committer": {"name": "Rask Ingemann Lambertsen", "email": "rask@gcc.gnu.org", "date": "2007-06-19T17:35:16Z"}, "message": "re PR target/32335 (libgcc build failure, ICE in cselib_record_set, at cselib.c:1508)\n\n2007-06-19  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n\n\tPR target/32335\n\t* config/m32c/m32c.c: Include dataflow header file.\n\t(m32c_emit_prologue): Adjust for prologue insn change.\n\t* config/m32c/prologue.md (prologue_enter_16): Only modify SP_REGNO\n\tonce inside a PARALLEL. Assume frame size passed in operand 0\n\tincludes space to save the fb register.\n\t(prologue_enter_24): Likewise.\n\t(epilogue_exitd): Only modify SP_REGNO once inside a PARALLEL.\n\nFrom-SVN: r125853", "tree": {"sha": "404e07f9c20e9994c1acdea4a020e6e48df35a44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/404e07f9c20e9994c1acdea4a020e6e48df35a44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa9fd28acfcf14ea100312aece861fce68229be9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9fd28acfcf14ea100312aece861fce68229be9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9fd28acfcf14ea100312aece861fce68229be9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9fd28acfcf14ea100312aece861fce68229be9/comments", "author": null, "committer": null, "parents": [{"sha": "21d09454a90bf8c367ce4aa8a7a385fe2780562a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d09454a90bf8c367ce4aa8a7a385fe2780562a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21d09454a90bf8c367ce4aa8a7a385fe2780562a"}], "stats": {"total": 44, "additions": 32, "deletions": 12}, "files": [{"sha": "3bf6aba6043b22368439a650e741202b979661de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9fd28acfcf14ea100312aece861fce68229be9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9fd28acfcf14ea100312aece861fce68229be9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa9fd28acfcf14ea100312aece861fce68229be9", "patch": "@@ -1,3 +1,14 @@\n+2007-06-19  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n+\n+\tPR target/32335\n+\t* config/m32c/m32c.c: Include dataflow header file.\n+\t(m32c_emit_prologue): Adjust for prologue insn change.\n+\t* config/m32c/prologue.md (prologue_enter_16): Only modify SP_REGNO\n+\tonce inside a PARALLEL. Assume frame size passed in operand 0\n+\tincludes space to save the fb register.\n+\t(prologue_enter_24): Likewise.\n+\t(epilogue_exitd): Only modify SP_REGNO once inside a PARALLEL.\n+\n 2007-06-19  David Daney  <ddaney@avtrex.com\n \n \tPR target/32313"}, {"sha": "097c3a3a83d5b9608a5127db90174ea9a41f1b8c", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9fd28acfcf14ea100312aece861fce68229be9/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9fd28acfcf14ea100312aece861fce68229be9/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=fa9fd28acfcf14ea100312aece861fce68229be9", "patch": "@@ -49,6 +49,7 @@\n #include \"tm_p.h\"\n #include \"langhooks.h\"\n #include \"tree-gimple.h\"\n+#include \"df.h\"\n \n /* Prototypes */\n \n@@ -3977,8 +3978,8 @@ m32c_emit_prologue (void)\n   if (cfun->machine->use_rts == 0)\n     F (emit_insn (m32c_all_frame_related\n \t\t  (TARGET_A16\n-\t\t   ? gen_prologue_enter_16 (GEN_INT (frame_size))\n-\t\t   : gen_prologue_enter_24 (GEN_INT (frame_size)))));\n+\t\t   ? gen_prologue_enter_16 (GEN_INT (frame_size + 2))\n+\t\t   : gen_prologue_enter_24 (GEN_INT (frame_size + 4)))));\n \n   if (extra_frame_size)\n     {"}, {"sha": "81d35a1c965f12925e51edcc078bc6d56be5e899", "filename": "gcc/config/m32c/prologue.md", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9fd28acfcf14ea100312aece861fce68229be9/gcc%2Fconfig%2Fm32c%2Fprologue.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9fd28acfcf14ea100312aece861fce68229be9/gcc%2Fconfig%2Fm32c%2Fprologue.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fprologue.md?ref=fa9fd28acfcf14ea100312aece861fce68229be9", "patch": "@@ -1,5 +1,5 @@\n ;; Machine Descriptions for R8C/M16C/M32C\n-;; Copyright (C) 2005\n+;; Copyright (C) 2005, 2007\n ;; Free Software Foundation, Inc.\n ;; Contributed by Red Hat.\n ;;\n@@ -33,7 +33,7 @@\n \n ; We assume dwarf2out will process each set in sequence.\n (define_insn \"prologue_enter_16\"\n-  [(set (mem:HI (pre_dec:HI (reg:HI SP_REGNO)))\n+  [(set (mem:HI (plus:HI (reg:HI SP_REGNO) (const_int -2)))\n \t(reg:HI FB_REGNO))\n    (set (reg:HI FB_REGNO)\n \t(reg:HI SP_REGNO))\n@@ -42,12 +42,17 @@\n \t           (match_operand 0 \"const_int_operand\" \"i\")))\n    ]\n   \"TARGET_A16\"\n-  \"enter\\t%0\"\n+  {\n+    /* This is due to binutils bug gas/4659.  */\n+    if (INTVAL (operands[0]) == 2)\n+      return \"enter\\t#0\";\n+    return \"enter\\t%0-2\";\n+  }\n   [(set_attr \"flags\" \"x\")]\n   )\n \n (define_insn \"prologue_enter_24\"\n-  [(set (mem:SI (pre_dec:PSI (reg:PSI SP_REGNO)))\n+  [(set (mem:SI (plus:PSI (reg:PSI SP_REGNO) (const_int -4)))\n \t(reg:SI FB_REGNO))\n    (set (reg:PSI FB_REGNO)\n \t(reg:PSI SP_REGNO))\n@@ -56,7 +61,12 @@\n \t           (match_operand 0 \"const_int_operand\" \"i\")))\n    ]\n   \"TARGET_A24\"\n-  \"enter\\t%0\"\n+  {\n+    /* This is due to binutils bug gas/4659.  */\n+    if (INTVAL (operands[0]) == 4)\n+      return \"enter\\t#0\";\n+    return \"enter\\t%0-4\";\n+  }\n   [(set_attr \"flags\" \"x\")]\n   )\n \n@@ -94,12 +104,10 @@\n \n (define_insn \"epilogue_exitd\"\n   [(set (reg:PSI SP_REGNO)\n-\t(reg:PSI FB_REGNO))\n-   (set (reg:PSI FB_REGNO)\n-\t(mem:PSI (reg:PSI SP_REGNO)))\n-   (set (reg:PSI SP_REGNO)\n-\t(plus:PSI (reg:PSI SP_REGNO)\n+\t(plus:PSI (reg:PSI FB_REGNO)\n \t      (match_operand 0 \"const_int_operand\" \"i\")))\n+   (set (reg:PSI FB_REGNO)\n+\t(mem:PSI (reg:PSI FB_REGNO)))\n    (return)\n    ]\n   \"\""}]}