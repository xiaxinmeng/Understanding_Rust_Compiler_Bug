{"sha": "5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZmOWFiOWJhMzI2MjBhZDg1NWUyMWVjM2EwMTU2YjUyYmJiMWFhOA==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2015-04-13T05:22:09Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2015-04-13T05:22:09Z"}, "message": "Add missing test case\n\n2015-04-13  Terry Guo  <terry.guo@arm.com>\n\n        PR target/65710\n        * gcc.target/arm/pr65710.c: New.\n\nFrom-SVN: r222037", "tree": {"sha": "e07790932d3b7ef9958ae0b654f18069908766a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e07790932d3b7ef9958ae0b654f18069908766a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8/comments", "author": null, "committer": null, "parents": [{"sha": "b801e1afc9cac4bf347382fddf311a8c7d3ba141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b801e1afc9cac4bf347382fddf311a8c7d3ba141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b801e1afc9cac4bf347382fddf311a8c7d3ba141"}], "stats": {"total": 123, "additions": 123, "deletions": 0}, "files": [{"sha": "5b0cdc34de8d321d2036461dc8194432ca3f5c87", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8", "patch": "@@ -1,3 +1,8 @@\n+2015-04-13  Terry Guo  <terry.guo@arm.com>\n+\n+\tPR target/65710\n+\t* gcc.target/arm/pr65710.c: New.\n+\n 2015-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/65747"}, {"sha": "139bc6414aa62c57004ec2e02f5f7f5082e6e330", "filename": "gcc/testsuite/gcc.target/arm/pr65710.c", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr65710.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr65710.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr65710.c?ref=5ff9ab9ba32620ad855e21ec3a0156b52bbb1aa8", "patch": "@@ -0,0 +1,118 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv6-m -mthumb -O3 -w -mfloat-abi=soft\" } */\n+\n+struct ST {\n+  char *buffer;\n+  int used;\n+};\n+\n+struct ST *h;\n+\n+enum { no_op, duplicate, pop_failure_jump, dummy_failure_jump };\n+\n+typedef struct {\n+  unsigned pointer;\n+} byte_fail_stack_elt_t;\n+\n+typedef struct { unsigned avail; } byte_fail_stack_type;\n+\n+typedef union {\n+  byte_fail_stack_elt_t word;\n+  struct {\n+    unsigned match_null_string_p : 2;\n+    unsigned is_active : 1;\n+    unsigned ever_matched_something : 1;\n+  } bits;\n+} byte_register_info_type;\n+\n+static int a;\n+int b = 0;\n+int c, e, f;\n+int *d, *g;\n+\n+int\n+byte_re_match_2_internal_size2(const int p2, int p3, const int p4) {\n+  int i, p;\n+  char *j;\n+  char k, l, m, n = h;\n+  byte_fail_stack_type o;\n+  byte_fail_stack_elt_t *q;\n+  unsigned int s = (unsigned int)h;\n+  long t, u;\n+  char **v, *w, **x, **y, **t1;\n+  byte_register_info_type *z, *t2 = __builtin_alloca(s);\n+  x = __builtin_alloca(s);\n+  y = __builtin_alloca(s);\n+  z = __builtin_alloca(sizeof(byte_register_info_type));\n+  k = p4 + byte_re_match_2_internal_size2;\n+  if (p3)\n+    f = p4;\n+  for (;;) {\n+    if (h == h->used) {\n+      g = f;\n+      if (o.avail) {\n+        b = 1;\n+        for (; i < s; i++)\n+          t1[i] = w;\n+        goto fail;\n+      }\n+      e = 30 > s;\n+      d = p4;\n+      d[s] = 1;\n+      return;\n+    }\n+    switch (*h->buffer++) {\n+    case no_op:\n+      while (m && n ?: *g)\n+        ;\n+      y[*h->buffer] = z[*h->buffer].bits.match_null_string_p ? w == &a ?: w : w;\n+      w = g;\n+      if (t) {\n+        char r = h;\n+        while (r && z[r].bits.is_active)\n+          r--;\n+        if (r == 0)\n+          ;\n+        else\n+          u = r;\n+      }\n+      switch (*j++)\n+      case dummy_failure_jump:\n+      i = j;\n+      if (i)\n+        if (z[*h->buffer].bits.ever_matched_something) {\n+          unsigned r;\n+          z[*h->buffer].bits.ever_matched_something = r = *h->buffer;\n+          for (; r + *(h->buffer + 1); r++) {\n+            v = x[r];\n+            w[r] = y[r];\n+          }\n+        }\n+      break;\n+    case duplicate: {\n+      char *t3 = p2 + p3;\n+      if (t3)\n+        break;\n+    }\n+      if ((p3 ?: p4) == k)\n+        goto fail;\n+    case pop_failure_jump:\n+      for (; c; c--)\n+        t2[c].word = q[o.avail];\n+      char t4;\n+      q = t4 = __builtin_allocamemcpy(t4 ?: (p <<= 1));\n+    }\n+    continue;\n+  fail : {\n+    unsigned t5;\n+    t = q;\n+    t5 = u;\n+    for (; t5 >= t; t5--)\n+      v[t5] = q[--o.avail].pointer;\n+    switch (*h->buffer)\n+    case pop_failure_jump:\n+    goto fail;\n+  }\n+    m = &l;\n+  }\n+}"}]}