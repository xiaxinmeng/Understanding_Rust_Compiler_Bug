{"sha": "7320a4b5193d7edfe9eb2266b910c2e088b52b20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMyMGE0YjUxOTNkN2VkZmU5ZWIyMjY2YjkxMGMyZTA4OGI1MmIyMA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2016-06-22T09:09:27Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2016-06-22T09:09:27Z"}, "message": "Handle gas/gld --compress-debug-sections=type\n\n\t* configure.ac (gcc_cv_as_compress_debug): Remove\n\t--compress-debug-sections as extra as switch.\n\tHandle gas --compress-debug-sections=type.\n\t(gcc_cv_ld_compess_debug): Remove bogus ld_date check.\n\tHandle gld --compress-debug-sections=type.\n\t* configure: Regenerate.\n\nFrom-SVN: r237680", "tree": {"sha": "a2dc90c3c9924a6db3bbb6847e2524a86315e8bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2dc90c3c9924a6db3bbb6847e2524a86315e8bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7320a4b5193d7edfe9eb2266b910c2e088b52b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7320a4b5193d7edfe9eb2266b910c2e088b52b20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7320a4b5193d7edfe9eb2266b910c2e088b52b20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7320a4b5193d7edfe9eb2266b910c2e088b52b20/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fb570c42b9485e6667a13ecb53ff436eb055f88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb570c42b9485e6667a13ecb53ff436eb055f88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb570c42b9485e6667a13ecb53ff436eb055f88"}], "stats": {"total": 81, "additions": 55, "deletions": 26}, "files": [{"sha": "88693a4ec0ec7067bb4bc24a5f7c224500e7b795", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7320a4b5193d7edfe9eb2266b910c2e088b52b20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7320a4b5193d7edfe9eb2266b910c2e088b52b20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7320a4b5193d7edfe9eb2266b910c2e088b52b20", "patch": "@@ -9,6 +9,15 @@\n \tcortex-a73.cortex-a35 and cortex-a73.cortex-a53 arguments to\n \t-mcpu and -mtune.\n \n+2016-06-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (gcc_cv_as_compress_debug): Remove\n+\t--compress-debug-sections as extra as switch.\n+\tHandle gas --compress-debug-sections=type.\n+\t(gcc_cv_ld_compess_debug): Remove bogus ld_date check.\n+\tHandle gld --compress-debug-sections=type.\n+\t* configure: Regenerate.\n+\n 2016-06-21  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* bb-reorder.c (pass_partition_blocks::gate): Update comment."}, {"sha": "bfd2b8c64f5614b75556f9c6164b4113c3b3b5ec", "filename": "gcc/configure", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7320a4b5193d7edfe9eb2266b910c2e088b52b20/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7320a4b5193d7edfe9eb2266b910c2e088b52b20/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=7320a4b5193d7edfe9eb2266b910c2e088b52b20", "patch": "@@ -27516,7 +27516,7 @@ else\n   gcc_cv_as_compress_debug=no\n   if test x$gcc_cv_as != x; then\n     $as_echo '' > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags --compress-debug-sections -o conftest.o conftest.s >&5'\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -27528,15 +27528,22 @@ else\n    if $gcc_cv_as --compress-debug-sections -o conftest.o conftest.s 2>&1 | grep -i warning > /dev/null\n    then\n      gcc_cv_as_compress_debug=0\n+   # Since binutils 2.26, gas supports --compress-debug-sections=type,\n+   # defaulting to the ELF gABI format.\n+   elif $gcc_cv_as --compress-debug-sections=zlib-gnu -o conftest.o conftest.s > /dev/null 2>&1\n+   then\n+     gcc_cv_as_compress_debug=2\n+     gcc_cv_as_compress_debug_option=\"--compress-debug-sections\"\n+     gcc_cv_as_no_compress_debug_option=\"--nocompress-debug-sections\"\n+   # Before binutils 2.26, gas only supported --compress-debug-options and\n+   # emitted the traditional GNU format.\n    elif $gcc_cv_as --compress-debug-sections -o conftest.o conftest.s > /dev/null 2>&1\n    then\n      gcc_cv_as_compress_debug=1\n      gcc_cv_as_compress_debug_option=\"--compress-debug-sections\"\n      gcc_cv_as_no_compress_debug_option=\"--nocompress-debug-sections\"\n    else\n      gcc_cv_as_compress_debug=0\n-   # FIXME: Future gas versions will support ELF gABI style via\n-   # --compress-debug-sections[=type].\n    fi\n     else\n       echo \"configure: failed program was\" >&5\n@@ -28040,27 +28047,30 @@ $as_echo \"$gcc_cv_ld_eh_gc_sections_bug\" >&6; }\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker for compressed debug sections\" >&5\n $as_echo_n \"checking linker for compressed debug sections... \" >&6; }\n # gold/gld support compressed debug sections since binutils 2.19/2.21\n+# In binutils 2.26, gld gained support for the ELF gABI format.\n if test $in_tree_ld = yes ; then\n   gcc_cv_ld_compress_debug=0\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 19 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n      && test $in_tree_ld_is_elf = yes && test $ld_is_gold = yes; then\n     gcc_cv_ld_compress_debug=2\n     gcc_cv_ld_compress_debug_option=\"--compress-debug-sections\"\n+  elif test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 26 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n+     && test $in_tree_ld_is_elf = yes && test $ld_is_gold = no; then\n+    gcc_cv_ld_compress_debug=3\n+    gcc_cv_ld_compress_debug_option=\"--compress-debug-sections\"\n   elif test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 21 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n      && test $in_tree_ld_is_elf = yes; then\n     gcc_cv_ld_compress_debug=1\n   fi\n elif echo \"$ld_ver\" | grep GNU > /dev/null; then\n-  gcc_cv_ld_compress_debug=1\n-  if test 0\"$ld_date\" -lt 20050308; then\n-    if test -n \"$ld_date\"; then\n-      # If there was date string, but was earlier than 2005-03-08, fail\n-      gcc_cv_ld_compress_debug=0\n-    elif test \"$ld_vers_major\" -lt 2; then\n-      gcc_cv_ld_compress_debug=0\n-    elif test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -lt 21; then\n-      gcc_cv_ld_compress_debug=0\n-    fi\n+  if test \"$ld_vers_major\" -lt 2 \\\n+     || test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -lt 21; then\n+    gcc_cv_ld_compress_debug=0\n+  elif test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -lt 26; then\n+    gcc_cv_ld_compress_debug=1\n+  else\n+    gcc_cv_ld_compress_debug=3\n+    gcc_cv_ld_compress_debug_option=\"--compress-debug-sections\"\n   fi\n   if test $ld_is_gold = yes; then\n     gcc_cv_ld_compress_debug=2"}, {"sha": "fabd48e5a2588efdd291a644e583a3952b410bad", "filename": "gcc/configure.ac", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7320a4b5193d7edfe9eb2266b910c2e088b52b20/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7320a4b5193d7edfe9eb2266b910c2e088b52b20/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=7320a4b5193d7edfe9eb2266b910c2e088b52b20", "patch": "@@ -4729,21 +4729,28 @@ if test x\"$insn\" != x; then\n fi\n \n gcc_GAS_CHECK_FEATURE([compressed debug sections],\n-  gcc_cv_as_compress_debug,,[--compress-debug-sections],,\n+  gcc_cv_as_compress_debug,,,,\n   [# gas compiled without zlib cannot compress debug sections and warns\n    # about it, but still exits successfully.  So check for this, too.\n    if $gcc_cv_as --compress-debug-sections -o conftest.o conftest.s 2>&1 | grep -i warning > /dev/null\n    then\n      gcc_cv_as_compress_debug=0\n+   # Since binutils 2.26, gas supports --compress-debug-sections=type,\n+   # defaulting to the ELF gABI format.\n+   elif $gcc_cv_as --compress-debug-sections=zlib-gnu -o conftest.o conftest.s > /dev/null 2>&1\n+   then\n+     gcc_cv_as_compress_debug=2\n+     gcc_cv_as_compress_debug_option=\"--compress-debug-sections\"\n+     gcc_cv_as_no_compress_debug_option=\"--nocompress-debug-sections\"\n+   # Before binutils 2.26, gas only supported --compress-debug-options and\n+   # emitted the traditional GNU format.\n    elif $gcc_cv_as --compress-debug-sections -o conftest.o conftest.s > /dev/null 2>&1\n    then\n      gcc_cv_as_compress_debug=1\n      gcc_cv_as_compress_debug_option=\"--compress-debug-sections\"\n      gcc_cv_as_no_compress_debug_option=\"--nocompress-debug-sections\"\n    else\n      gcc_cv_as_compress_debug=0\n-   # FIXME: Future gas versions will support ELF gABI style via\n-   # --compress-debug-sections[=type].\n    fi])\n AC_DEFINE_UNQUOTED(HAVE_AS_COMPRESS_DEBUG, $gcc_cv_as_compress_debug,\n [Define to the level of your assembler's compressed debug section support.])\n@@ -5118,27 +5125,30 @@ AC_MSG_RESULT($gcc_cv_ld_eh_gc_sections_bug)\n \n AC_MSG_CHECKING(linker for compressed debug sections)\n # gold/gld support compressed debug sections since binutils 2.19/2.21\n+# In binutils 2.26, gld gained support for the ELF gABI format.\n if test $in_tree_ld = yes ; then\n   gcc_cv_ld_compress_debug=0\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 19 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n      && test $in_tree_ld_is_elf = yes && test $ld_is_gold = yes; then\n     gcc_cv_ld_compress_debug=2\n     gcc_cv_ld_compress_debug_option=\"--compress-debug-sections\"\n+  elif test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 26 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n+     && test $in_tree_ld_is_elf = yes && test $ld_is_gold = no; then\n+    gcc_cv_ld_compress_debug=3\n+    gcc_cv_ld_compress_debug_option=\"--compress-debug-sections\"\n   elif test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 21 -o \"$gcc_cv_gld_major_version\" -gt 2 \\\n      && test $in_tree_ld_is_elf = yes; then\n     gcc_cv_ld_compress_debug=1\n   fi\n elif echo \"$ld_ver\" | grep GNU > /dev/null; then\n-  gcc_cv_ld_compress_debug=1\n-  if test 0\"$ld_date\" -lt 20050308; then\n-    if test -n \"$ld_date\"; then\n-      # If there was date string, but was earlier than 2005-03-08, fail\n-      gcc_cv_ld_compress_debug=0\n-    elif test \"$ld_vers_major\" -lt 2; then\n-      gcc_cv_ld_compress_debug=0\n-    elif test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -lt 21; then\n-      gcc_cv_ld_compress_debug=0\n-    fi\n+  if test \"$ld_vers_major\" -lt 2 \\\n+     || test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -lt 21; then\n+    gcc_cv_ld_compress_debug=0\n+  elif test \"$ld_vers_major\" -eq 2 -a \"$ld_vers_minor\" -lt 26; then\n+    gcc_cv_ld_compress_debug=1\n+  else\n+    gcc_cv_ld_compress_debug=3\n+    gcc_cv_ld_compress_debug_option=\"--compress-debug-sections\"\n   fi\n   if test $ld_is_gold = yes; then\n     gcc_cv_ld_compress_debug=2"}]}