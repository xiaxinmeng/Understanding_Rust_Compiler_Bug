{"sha": "8571ff0ae0922bee292161c7fd61dd127d26a4ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU3MWZmMGFlMDkyMmJlZTI5MjE2MWM3ZmQ2MWRkMTI3ZDI2YTRlZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-23T12:15:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-24T08:43:10Z"}, "message": "Adjust inner loop cost scaling\n\nThis makes use of the estimated number of iterations of the inner loop\nto limit --param vect-inner-loop-cost-factor scaling.  It also reduces\nthe maximum value of vect-inner-loop-cost-factor to 10000 making it\nless likely to cause overflow of costs.\n\n2021-08-23  Richard Biener  <rguenther@suse.de>\n\n\t* doc/invoke.texi (vect-inner-loop-cost-factor): Adjust.\n\t* params.opt (--param vect-inner-loop-cost-factor): Adjust\n\tmaximum value.\n\t* tree-vect-loop.c (vect_analyze_loop_form): Initialize\n\tinner_loop_cost_factor to the minimum of the estimated number\n\tof iterations of the inner loop and vect-inner-loop-cost-factor.", "tree": {"sha": "25c1e6eb9607cdee669da09dc52235477056c557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25c1e6eb9607cdee669da09dc52235477056c557"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8571ff0ae0922bee292161c7fd61dd127d26a4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8571ff0ae0922bee292161c7fd61dd127d26a4ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8571ff0ae0922bee292161c7fd61dd127d26a4ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8571ff0ae0922bee292161c7fd61dd127d26a4ed/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0deabebedd16c9519bfb1dfbff303c2d9bd701ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0deabebedd16c9519bfb1dfbff303c2d9bd701ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0deabebedd16c9519bfb1dfbff303c2d9bd701ee"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "a9d56fecf4eb35501a54039ddf38df78c3be8c73", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8571ff0ae0922bee292161c7fd61dd127d26a4ed/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8571ff0ae0922bee292161c7fd61dd127d26a4ed/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8571ff0ae0922bee292161c7fd61dd127d26a4ed", "patch": "@@ -14386,9 +14386,10 @@ The parameter only has an effect on targets that support partial\n vector loads and stores.\n \n @item vect-inner-loop-cost-factor\n-The factor which the loop vectorizer applies to the cost of statements\n-in an inner loop relative to the loop being vectorized.  The default\n-value is 50.\n+The maximum factor which the loop vectorizer applies to the cost of statements\n+in an inner loop relative to the loop being vectorized.  The factor applied\n+is the maximum of the estimated number of iterations of the inner loop and\n+this parameter.  The default value of this parameter is 50.\n \n @item avoid-fma-max-bits\n Maximum number of bits for which we avoid creating FMAs."}, {"sha": "f414dc1a61cfa9d5b9ded75e96560fc1f73041a5", "filename": "gcc/params.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8571ff0ae0922bee292161c7fd61dd127d26a4ed/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8571ff0ae0922bee292161c7fd61dd127d26a4ed/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=8571ff0ae0922bee292161c7fd61dd127d26a4ed", "patch": "@@ -1114,7 +1114,7 @@ Common Joined UInteger Var(param_vect_partial_vector_usage) Init(2) IntegerRange\n Controls how loop vectorizer uses partial vectors.  0 means never, 1 means only for loops whose need to iterate can be removed, 2 means for all loops.  The default value is 2.\n \n -param=vect-inner-loop-cost-factor=\n-Common Joined UInteger Var(param_vect_inner_loop_cost_factor) Init(50) IntegerRange(1, 999999) Param Optimization\n-The factor which the loop vectorizer applies to the cost of statements in an inner loop relative to the loop being vectorized.\n+Common Joined UInteger Var(param_vect_inner_loop_cost_factor) Init(50) IntegerRange(1, 10000) Param Optimization\n+The maximum factor which the loop vectorizer applies to the cost of statements in an inner loop relative to the loop being vectorized.\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "0c8d992624b59ddd056aff594738305d6be5afa8", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8571ff0ae0922bee292161c7fd61dd127d26a4ed/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8571ff0ae0922bee292161c7fd61dd127d26a4ed/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=8571ff0ae0922bee292161c7fd61dd127d26a4ed", "patch": "@@ -1519,6 +1519,13 @@ vect_analyze_loop_form (class loop *loop, vec_info_shared *shared)\n       stmt_vec_info inner_loop_cond_info\n \t= loop_vinfo->lookup_stmt (inner_loop_cond);\n       STMT_VINFO_TYPE (inner_loop_cond_info) = loop_exit_ctrl_vec_info_type;\n+      /* If we have an estimate on the number of iterations of the inner\n+\t loop use that to limit the scale for costing, otherwise use\n+\t --param vect-inner-loop-cost-factor literally.  */\n+      widest_int nit;\n+      if (estimated_stmt_executions (loop->inner, &nit))\n+\tLOOP_VINFO_INNER_LOOP_COST_FACTOR (loop_vinfo)\n+\t  = wi::smin (nit, param_vect_inner_loop_cost_factor).to_uhwi ();\n     }\n \n   gcc_assert (!loop->aux);"}]}