{"sha": "0067ba052b976431c49d6a86f2c9ede9938efcdf", "node_id": "C_kwDOANBUbNoAKDAwNjdiYTA1MmI5NzY0MzFjNDlkNmE4NmYyYzllZGU5OTM4ZWZjZGY", "commit": {"author": {"name": "Lulu Cheng", "email": "chenglulu@loongson.cn", "date": "2022-09-07T03:25:45Z"}, "committer": {"name": "Lulu Cheng", "email": "chenglulu@loongson.cn", "date": "2022-09-07T08:53:10Z"}, "message": "LoongArch: Fix pr106828 by define hook TARGET_ASAN_SHADOW_OFFSET in loongarch backend [PR106828].\n\ngcc/ChangeLog:\n\n\tPR target/106828\n\t* config/loongarch/loongarch.cc (loongarch_asan_shadow_offset): New.\n\t(TARGET_ASAN_SHADOW_OFFSET): New.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/106828\n\t* g++.target/loongarch/pr106828.C: New test.", "tree": {"sha": "a5c1857d623a4a8a823641220ea79e64832b62e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5c1857d623a4a8a823641220ea79e64832b62e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0067ba052b976431c49d6a86f2c9ede9938efcdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0067ba052b976431c49d6a86f2c9ede9938efcdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0067ba052b976431c49d6a86f2c9ede9938efcdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0067ba052b976431c49d6a86f2c9ede9938efcdf/comments", "author": {"login": "chenglulu326", "id": 88083425, "node_id": "MDQ6VXNlcjg4MDgzNDI1", "avatar_url": "https://avatars.githubusercontent.com/u/88083425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenglulu326", "html_url": "https://github.com/chenglulu326", "followers_url": "https://api.github.com/users/chenglulu326/followers", "following_url": "https://api.github.com/users/chenglulu326/following{/other_user}", "gists_url": "https://api.github.com/users/chenglulu326/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenglulu326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenglulu326/subscriptions", "organizations_url": "https://api.github.com/users/chenglulu326/orgs", "repos_url": "https://api.github.com/users/chenglulu326/repos", "events_url": "https://api.github.com/users/chenglulu326/events{/privacy}", "received_events_url": "https://api.github.com/users/chenglulu326/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenglulu326", "id": 88083425, "node_id": "MDQ6VXNlcjg4MDgzNDI1", "avatar_url": "https://avatars.githubusercontent.com/u/88083425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenglulu326", "html_url": "https://github.com/chenglulu326", "followers_url": "https://api.github.com/users/chenglulu326/followers", "following_url": "https://api.github.com/users/chenglulu326/following{/other_user}", "gists_url": "https://api.github.com/users/chenglulu326/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenglulu326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenglulu326/subscriptions", "organizations_url": "https://api.github.com/users/chenglulu326/orgs", "repos_url": "https://api.github.com/users/chenglulu326/repos", "events_url": "https://api.github.com/users/chenglulu326/events{/privacy}", "received_events_url": "https://api.github.com/users/chenglulu326/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e90af965e5c858ba02c0cdfbac35d0a19da1c2f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90af965e5c858ba02c0cdfbac35d0a19da1c2f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e90af965e5c858ba02c0cdfbac35d0a19da1c2f6"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "98c0e26cdb9444cf2449a3087fc5888c31270c1c", "filename": "gcc/config/loongarch/loongarch.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0067ba052b976431c49d6a86f2c9ede9938efcdf/gcc%2Fconfig%2Floongarch%2Floongarch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0067ba052b976431c49d6a86f2c9ede9938efcdf/gcc%2Fconfig%2Floongarch%2Floongarch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Floongarch%2Floongarch.cc?ref=0067ba052b976431c49d6a86f2c9ede9938efcdf", "patch": "@@ -6466,6 +6466,16 @@ loongarch_use_anchors_for_symbol_p (const_rtx symbol)\n   return default_use_anchors_for_symbol_p (symbol);\n }\n \n+/* Implement the TARGET_ASAN_SHADOW_OFFSET hook.  */\n+\n+static unsigned HOST_WIDE_INT\n+loongarch_asan_shadow_offset (void)\n+{\n+  /* We only have libsanitizer support for LOONGARCH64 at present.\n+     This value is taken from the file libsanitizer/asan/asan_mappint.h.  */\n+  return TARGET_64BIT ? (HOST_WIDE_INT_1 << 46) : 0;\n+}\n+\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.half\\t\"\n@@ -6660,6 +6670,9 @@ loongarch_use_anchors_for_symbol_p (const_rtx symbol)\n #undef  TARGET_USE_ANCHORS_FOR_SYMBOL_P\n #define TARGET_USE_ANCHORS_FOR_SYMBOL_P loongarch_use_anchors_for_symbol_p\n \n+#undef TARGET_ASAN_SHADOW_OFFSET\n+#define TARGET_ASAN_SHADOW_OFFSET loongarch_asan_shadow_offset\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-loongarch.h\""}, {"sha": "190c1db715f4faa57e8cf03aaa2230a8f4d08529", "filename": "gcc/testsuite/g++.target/loongarch/pr106828.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0067ba052b976431c49d6a86f2c9ede9938efcdf/gcc%2Ftestsuite%2Fg%2B%2B.target%2Floongarch%2Fpr106828.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0067ba052b976431c49d6a86f2c9ede9938efcdf/gcc%2Ftestsuite%2Fg%2B%2B.target%2Floongarch%2Fpr106828.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Floongarch%2Fpr106828.C?ref=0067ba052b976431c49d6a86f2c9ede9938efcdf", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do-preprocess } */\n+/* { dg-options \"-mabi=lp64d -fsanitize=address\" } */\n+\n+/* Tests whether the compiler supports compile option '-fsanitize=address'.  */"}]}