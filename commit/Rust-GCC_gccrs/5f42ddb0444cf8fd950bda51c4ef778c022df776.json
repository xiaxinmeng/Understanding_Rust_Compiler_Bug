{"sha": "5f42ddb0444cf8fd950bda51c4ef778c022df776", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY0MmRkYjA0NDRjZjhmZDk1MGJkYTUxYzRlZjc3OGMwMjJkZjc3Ng==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-03-12T02:06:20Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-03-12T02:06:20Z"}, "message": "Make-lang.in (fortran-warn): Set to $(STRICT_WARN) -Wno-error.\n\n\t* Make-lang.in (fortran-warn): Set to $(STRICT_WARN) -Wno-error.\n\t* decl.c, trans.c: Don't use C++ style comments.\n\t* gfortran.h (sym_flavor, procedure_type, sym_intent, gfc_access,\n\tifsrc): Give names to enums and use ENUM_BITFIELD.\n\t(gfc_access): Remove trailing comma.\n\nFrom-SVN: r96323", "tree": {"sha": "211678949600d13d75ce903a10a8964a00395144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/211678949600d13d75ce903a10a8964a00395144"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f42ddb0444cf8fd950bda51c4ef778c022df776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f42ddb0444cf8fd950bda51c4ef778c022df776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f42ddb0444cf8fd950bda51c4ef778c022df776", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f42ddb0444cf8fd950bda51c4ef778c022df776/comments", "author": null, "committer": null, "parents": [{"sha": "c6c81aa6868813dd147789d9ad510f3bee13e409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c81aa6868813dd147789d9ad510f3bee13e409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c81aa6868813dd147789d9ad510f3bee13e409"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "63b9cd1ccbf155c01b0b7cdbd78c75cf24201777", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5f42ddb0444cf8fd950bda51c4ef778c022df776", "patch": "@@ -1,3 +1,11 @@\n+2005-03-11  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Make-lang.in (fortran-warn): Set to $(STRICT_WARN) -Wno-error.\n+\t* decl.c, trans.c: Don't use C++ style comments.\n+\t* gfortran.h (sym_flavor, procedure_type, sym_intent, gfc_access,\n+\tifsrc): Give names to enums and use ENUM_BITFIELD.\n+\t(gfc_access): Remove trailing comma.\n+\n 2005-03-05  Steven G. Kargl  <kargls@comcast.net>\n \n \tPR 19936"}, {"sha": "9bb34faba51a8e37aebfe559f4bf6ca52e69f3c2", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=5f42ddb0444cf8fd950bda51c4ef778c022df776", "patch": "@@ -48,14 +48,8 @@ GFORTRAN_CROSS_NAME := $(shell echo gfortran|sed '$(program_transform_cross_name\n \n #^L\n \n-# This is in addition to the warning flags defined by default.\n-# You can use it to enable/disable warnings globally or for specific\n-# files, e.g.\n-# fortran-warn = -Wno-strict-prototypes\n-# fortran/arith.o-warn = -Wno-error\n-#\n-# We don't need these cheats, everything builds fine with all warnings\n-# enabled and -Werror.\n+# Use strict warnings for this front end.\n+fortran-warn = $(STRICT_WARN) -Wno-error\n \n # These are the groups of object files we have.  The F95_PARSER_OBJS are\n # all the front end files, the F95_OBJS are the files for the translation"}, {"sha": "45978c04ddf0918a14b1d3c907b7f8608140a5a5", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=5f42ddb0444cf8fd950bda51c4ef778c022df776", "patch": "@@ -186,7 +186,7 @@ var_element (gfc_data_variable * new)\n       return MATCH_ERROR;\n     }\n \n-#if 0 // TODO: Find out where to move this message\n+#if 0 /* TODO: Find out where to move this message */\n   if (sym->attr.in_common)\n     /* See if sym is in the blank common block.  */\n     for (t = &sym->ns->blank_common; t; t = t->common_next)"}, {"sha": "8be1eb6f25276e7a7604c9d67bef40c99b29eb49", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=5f42ddb0444cf8fd950bda51c4ef778c022df776", "patch": "@@ -218,35 +218,35 @@ interface_type;\n \n /* Symbol flavors: these are all mutually exclusive.\n    10 elements = 4 bits.  */\n-typedef enum\n+typedef enum sym_flavor\n {\n   FL_UNKNOWN = 0, FL_PROGRAM, FL_BLOCK_DATA, FL_MODULE, FL_VARIABLE,\n   FL_PARAMETER, FL_LABEL, FL_PROCEDURE, FL_DERIVED, FL_NAMELIST\n }\n sym_flavor;\n \n /* Procedure types.  7 elements = 3 bits.  */\n-typedef enum\n+typedef enum procedure_type\n { PROC_UNKNOWN, PROC_MODULE, PROC_INTERNAL, PROC_DUMMY,\n   PROC_INTRINSIC, PROC_ST_FUNCTION, PROC_EXTERNAL\n }\n procedure_type;\n \n /* Intent types.  */\n-typedef enum\n+typedef enum sym_intent\n { INTENT_UNKNOWN = 0, INTENT_IN, INTENT_OUT, INTENT_INOUT\n }\n sym_intent;\n \n /* Access types.  */\n-typedef enum\n-{ ACCESS_UNKNOWN = 0, ACCESS_PUBLIC, ACCESS_PRIVATE, \n+typedef enum gfc_access\n+{ ACCESS_UNKNOWN = 0, ACCESS_PUBLIC, ACCESS_PRIVATE\n }\n gfc_access;\n \n /* Flags to keep track of where an interface came from.\n    4 elements = 2 bits.  */\n-typedef enum\n+typedef enum ifsrc\n { IFSRC_UNKNOWN = 0, IFSRC_DECL, IFSRC_IFBODY, IFSRC_USAGE\n }\n ifsrc;\n@@ -431,12 +431,12 @@ typedef struct\n   unsigned referenced:1;\n \n   /* Mutually exclusive multibit attributes.  */\n-  gfc_access access:2;\n-  sym_intent intent:2;\n-  sym_flavor flavor:4;\n-  ifsrc if_source:2;\n+  ENUM_BITFIELD (gfc_access) access:2;\n+  ENUM_BITFIELD (sym_intent) intent:2;\n+  ENUM_BITFIELD (sym_flavor) flavor:4;\n+  ENUM_BITFIELD (ifsrc) if_source:2;\n \n-  procedure_type proc:3;\n+  ENUM_BITFIELD (procedure_type) proc:3;\n \n }\n symbol_attribute;"}, {"sha": "8c9d342c5c2b34b14004c241f31359c99b281a41", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f42ddb0444cf8fd950bda51c4ef778c022df776/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=5f42ddb0444cf8fd950bda51c4ef778c022df776", "patch": "@@ -437,7 +437,7 @@ gfc_get_backend_locus (locus * loc)\n {\n   loc->lb = gfc_getmem (sizeof (gfc_linebuf));    \n #ifdef USE_MAPPED_LOCATION\n-  loc->lb->location = input_location; // FIXME adjust??\n+  loc->lb->location = input_location; /* FIXME adjust?? */\n #else\n   loc->lb->linenum = input_line - 1;\n #endif"}]}