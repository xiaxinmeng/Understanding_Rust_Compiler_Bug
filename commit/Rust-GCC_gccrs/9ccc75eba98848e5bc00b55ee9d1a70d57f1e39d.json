{"sha": "9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "node_id": "C_kwDOANBUbNoAKDljY2M3NWViYTk4ODQ4ZTViYzAwYjU1ZWU5ZDFhNzBkNTdmMWUzOWQ", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2022-06-23T20:52:33Z"}, "committer": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2022-06-24T14:20:02Z"}, "message": "[PATCH,RS6000 4/5] Replace MASK_<xxxx> with OPTION_MASK_<xxxx>\n\nThis replaces the MASK_<xxxx> references with OPTION_MASK_<xxxx>\nand removes the now unused defines.\n\nThis patch removes the defines for\nMASK_ALTIVEC, MASK_CMPB, MASK_CRYPTO, MASK_DFP,\nMASK_DIRECT_MOVE, MASK_DLMZB, MASK_EABI, MASK_FLOAT128_KEYWORD,\nMASK_FLOAT128_HW, MASK_FPRND, MASK_P8_FUSION, MASK_HARD_FLOAT,\nMASK_HTM, MASK_MFCRF, MASK_MMA, MASK_MULHW, MASK_MULTIPLE,\nMASK_NO_UPDATE.\n\ngcc/\n\t* config/rs6000/aix71.h (TARGET_DEFAULT): Replace MASK_MFCRF with\n\tOPTION_MASK_MFCRF.\n\t* config/rs6000/darwin.h (TARGET_DEFAULT): Replace MASK_MULTIPLE with\n\tOPTION_MASK_MULTIPLE.\n\t* config/rs6000/darwin64-biarch.h (TARGET_DEFAULT): Same.\n\t* config/rs6000/default64.h (TARGET_DEFAULT): Replace MASK_MFCRF with\n\tOPTION_MASK_MFCRF.\n\t* config/rs6000/eabi.h (TARGET_DEFAULT): Replace MASK_EABI with\n\tOPTION_MASK_EABI.\n\t* config/rs6000/eabialtivec.h (TARGET_DEFAULT): Same.\n\t* config/rs6000/linuxaltivec.h (TARGET_DEFAULT): Replace\n\tMASK_ALTIVEC with OPTION_MASK_ALTIVEC.\n\t* config/rs6000/rs6000-cpus.def (MASK_ALTIVEC, MASK_CMPB,\n\tMASK_CRYPTO, MASK_DFP, MASK_DIRECT_MOVE, MASK_DLMZB, MASK_EABI,\n\tMASK_FLOAT128_KEYWORD, MASK_FLOAT128_HW, MASK_FPRND,\n\tMASK_P8_FUSION, MASK_HARD_FLOAT, MASK_HTM, MASK_ISEL, MASK_MFCRF,\n\tMASK_MMA, MASK_MULHW, MASK_MULTIPLE, MASK_NO_UPDATE):\n\tReplace with\n\tOPTION_MASK_ALTIVEC, OPTION_MASK_CMPB, OPTION_MASK_CRYPTO,\n\tOPTION_MASK_DFP, OPTION_MASK_DIRECT_MOVE, OPTION_MASK_DLMZB,\n\tOPTION_MASK_EABI, OPTION_MASK_FLOAT128_KEYWORD,\n\tOPTION_MASK_FLOAT128_HW, OPTION_MASK_FPRND, OPTION_MASK_P8_FUSION,\n\tOPTION_MASK_HARD_FLOAT, OPTION_MASK_HTM, OPTION_MASK_ISEL,\n\tOPTION_MASK_MFCRF, OPTION_MASK_MMA, OPTION_MASK_MULHW,\n\tOPTION_MASK_MULTIPLE, OPTION_MASK_NO_UPDATE.\n\t* config/rs6000/rs6000.cc (rs6000_darwin_file_start): Replace\n\tMASK_MFCRF, MASK_ALTIVEC with OPTION_MASK_MFCRF, OPTION_MASK_ALTIVEC.\n\t* config/rs6000/rs6000.h (TARGET_DEFAULT): Replace MASK_MULTIPLE\n\twith OPTION_MASK_MULTIPLE.\n\t(MASK_ALTIVEC, MASK_CMPB, MASK_CRYPTO, MASK_DFP,\n\tMASK_DIRECT_MOVE, MASK_DLMZB, MASK_EABI, MASK_FLOAT128_KEYWORD,\n\tMASK_FLOAT128_HW, MASK_FPRND, MASK_P8_FUSION, MASK_HARD_FLOAT,\n\tMASK_HTM, MASK_ISEL, MASK_MFCRF, MASK_MMA, MASK_MULHW,\n\tMASK_MULTIPLE, MASK_NO_UPDATE): Delete.\n\t* config/rs6000/vxworks.h (TARGET_DEFAULT): Replace MASK_EABI\n\twith OPTION_MASK_EABI.", "tree": {"sha": "1dff7d301a01f54c042d966bb74697ec0b76e5a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dff7d301a01f54c042d966bb74697ec0b76e5a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5c117e9f38d5f147a31f137706afbc55b12828f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c117e9f38d5f147a31f137706afbc55b12828f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5c117e9f38d5f147a31f137706afbc55b12828f"}], "stats": {"total": 126, "additions": 59, "deletions": 67}, "files": [{"sha": "3f7e6e380ca85786abb64df4bcc48509f931110a", "filename": "gcc/config/rs6000/aix71.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Faix71.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Faix71.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix71.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -137,9 +137,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef  TARGET_DEFAULT\n #ifdef RS6000_BI_ARCH\n-#define TARGET_DEFAULT (MASK_PPC_GPOPT | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POWERPC64 | MASK_64BIT)\n+#define TARGET_DEFAULT (MASK_PPC_GPOPT | MASK_PPC_GFXOPT \\\n+\t\t\t| OPTION_MASK_MFCRF | MASK_POWERPC64 | MASK_64BIT)\n #else\n-#define TARGET_DEFAULT (MASK_PPC_GPOPT | MASK_PPC_GFXOPT | MASK_MFCRF)\n+#define TARGET_DEFAULT (MASK_PPC_GPOPT | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF)\n #endif\n \n #undef  PROCESSOR_DEFAULT"}, {"sha": "ec02022c6a9f19deb606b3cedaefc8b221d77577", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -367,7 +367,7 @@\n    default as well.  */\n \n #undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_MULTIPLE | MASK_PPC_GFXOPT)\n+#define TARGET_DEFAULT (OPTION_MASK_MULTIPLE | MASK_PPC_GFXOPT)\n \n /* Darwin always uses IBM long double, never IEEE long double.  */\n #undef  TARGET_IEEEQUAD"}, {"sha": "a53e567f8b73f61a061ba08472ef5ea9899733d2", "filename": "gcc/config/rs6000/darwin64-biarch.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin64-biarch.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -21,7 +21,7 @@\n \n #undef  TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC64 | MASK_64BIT \\\n-\t\t\t| MASK_MULTIPLE | MASK_PPC_GFXOPT)\n+\t\t\t| OPTION_MASK_MULTIPLE | MASK_PPC_GFXOPT)\n \n #undef DARWIN_ARCH_SPEC\n #define DARWIN_ARCH_SPEC \"%{m32:ppc;:ppc64}\""}, {"sha": "f3a81404eff3795a9228c2d0c93aa0311322f4ee", "filename": "gcc/config/rs6000/default64.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Fdefault64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Fdefault64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdefault64.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -24,12 +24,14 @@ along with GCC; see the file COPYING3.  If not see\n \n #if (TARGET_DEFAULT & MASK_LITTLE_ENDIAN)\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (ISA_2_7_MASKS_SERVER | MASK_POWERPC64 | MASK_64BIT | MASK_LITTLE_ENDIAN)\n+#define TARGET_DEFAULT (ISA_2_7_MASKS_SERVER | MASK_POWERPC64 | MASK_64BIT \\\n+\t\t\t| MASK_LITTLE_ENDIAN)\n #undef ASM_DEFAULT_SPEC\n #define ASM_DEFAULT_SPEC \"-mpower8\"\n #else\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_PPC_GFXOPT | MASK_PPC_GPOPT | MASK_MFCRF | MASK_POWERPC64 | MASK_64BIT)\n+#define TARGET_DEFAULT (MASK_PPC_GFXOPT | MASK_PPC_GPOPT \\\n+\t\t\t| OPTION_MASK_MFCRF | MASK_POWERPC64 | MASK_64BIT)\n #undef ASM_DEFAULT_SPEC\n #define ASM_DEFAULT_SPEC \"-mpower4\"\n #endif"}, {"sha": "367de7bc2700bc2ef197597e364800b53b915fe5", "filename": "gcc/config/rs6000/eabi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Feabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Feabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -21,7 +21,7 @@\n \n /* Add -meabi to target flags.  */\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT MASK_EABI\n+#define TARGET_DEFAULT OPTION_MASK_EABI\n \n /* Invoke an initializer function to set up the GOT.  */\n #define NAME__MAIN \"__eabi\""}, {"sha": "23cef799a045251234afd9e9c45eba1dbb935310", "filename": "gcc/config/rs6000/eabialtivec.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Feabialtivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Feabialtivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabialtivec.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -21,7 +21,7 @@\n \n /* Add -meabi and -maltivec to target flags.  */\n #undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_EABI | MASK_ALTIVEC)\n+#define TARGET_DEFAULT (OPTION_MASK_EABI | OPTION_MASK_ALTIVEC)\n \n #undef\tASM_DEFAULT_EXTRA\n #define\tASM_DEFAULT_EXTRA \" %{!mvsx:%{!maltivec:%{!no-maltivec:-maltivec}}}\""}, {"sha": "55bae1188369b5fcf2e12b032fe76649c45b3247", "filename": "gcc/config/rs6000/linuxaltivec.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -22,10 +22,10 @@\n /* Override rs6000.h and sysv4.h definition.  */\n #if (TARGET_DEFAULT & MASK_LITTLE_ENDIAN)\n #undef\tTARGET_DEFAULT\n-#define\tTARGET_DEFAULT (MASK_ALTIVEC | MASK_LITTLE_ENDIAN)\n+#define\tTARGET_DEFAULT (OPTION_MASK_ALTIVEC | MASK_LITTLE_ENDIAN)\n #else\n #undef\tTARGET_DEFAULT\n-#define\tTARGET_DEFAULT MASK_ALTIVEC\n+#define\tTARGET_DEFAULT OPTION_MASK_ALTIVEC\n #endif\n \n #undef\tASM_DEFAULT_EXTRA"}, {"sha": "7d226493dc545ea83ca36aa0648ac3907453b71b", "filename": "gcc/config/rs6000/rs6000-cpus.def", "status": "modified", "additions": 42, "deletions": 34, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -178,20 +178,25 @@\n \n RS6000_CPU (\"401\", PROCESSOR_PPC403, MASK_SOFT_FLOAT)\n RS6000_CPU (\"403\", PROCESSOR_PPC403, MASK_SOFT_FLOAT | MASK_STRICT_ALIGN)\n-RS6000_CPU (\"405\", PROCESSOR_PPC405, MASK_SOFT_FLOAT | MASK_MULHW | MASK_DLMZB)\n-RS6000_CPU (\"405fp\", PROCESSOR_PPC405, MASK_MULHW | MASK_DLMZB)\n-RS6000_CPU (\"440\", PROCESSOR_PPC440, MASK_SOFT_FLOAT | MASK_MULHW | MASK_DLMZB)\n-RS6000_CPU (\"440fp\", PROCESSOR_PPC440, MASK_MULHW | MASK_DLMZB)\n-RS6000_CPU (\"464\", PROCESSOR_PPC440, MASK_SOFT_FLOAT | MASK_MULHW | MASK_DLMZB)\n-RS6000_CPU (\"464fp\", PROCESSOR_PPC440, MASK_MULHW | MASK_DLMZB)\n-RS6000_CPU (\"476\", PROCESSOR_PPC476,\n-\t    MASK_SOFT_FLOAT | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POPCNTB\n-\t    | MASK_FPRND | MASK_CMPB | MASK_MULHW | MASK_DLMZB)\n+RS6000_CPU (\"405\", PROCESSOR_PPC405, MASK_SOFT_FLOAT | OPTION_MASK_MULHW\n+\t    | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"405fp\", PROCESSOR_PPC405, OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"440\", PROCESSOR_PPC440, MASK_SOFT_FLOAT | OPTION_MASK_MULHW\n+\t   | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"440fp\", PROCESSOR_PPC440, OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"464\", PROCESSOR_PPC440, MASK_SOFT_FLOAT | OPTION_MASK_MULHW\n+\t   | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"464fp\", PROCESSOR_PPC440, OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n+RS6000_CPU (\"476\", PROCESSOR_PPC476, MASK_SOFT_FLOAT | MASK_PPC_GFXOPT\n+\t    | OPTION_MASK_MFCRF | MASK_POPCNTB\n+\t    | OPTION_MASK_FPRND | OPTION_MASK_CMPB | OPTION_MASK_MULHW\n+\t    | OPTION_MASK_DLMZB)\n RS6000_CPU (\"476fp\", PROCESSOR_PPC476,\n-\t    MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POPCNTB | MASK_FPRND\n-\t    | MASK_CMPB | MASK_MULHW | MASK_DLMZB)\n+\t    MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB\n+\t    | OPTION_MASK_FPRND\n+\t    | OPTION_MASK_CMPB | OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n RS6000_CPU (\"505\", PROCESSOR_MPCCORE, 0)\n-RS6000_CPU (\"601\", PROCESSOR_PPC601, MASK_MULTIPLE)\n+RS6000_CPU (\"601\", PROCESSOR_PPC601, OPTION_MASK_MULTIPLE)\n RS6000_CPU (\"602\", PROCESSOR_PPC603, MASK_PPC_GFXOPT)\n RS6000_CPU (\"603\", PROCESSOR_PPC603, MASK_PPC_GFXOPT)\n RS6000_CPU (\"603e\", PROCESSOR_PPC603, MASK_PPC_GFXOPT)\n@@ -206,44 +211,47 @@ RS6000_CPU (\"750\", PROCESSOR_PPC750, MASK_PPC_GFXOPT)\n RS6000_CPU (\"801\", PROCESSOR_MPCCORE, MASK_SOFT_FLOAT)\n RS6000_CPU (\"821\", PROCESSOR_MPCCORE, MASK_SOFT_FLOAT)\n RS6000_CPU (\"823\", PROCESSOR_MPCCORE, MASK_SOFT_FLOAT)\n-RS6000_CPU (\"8540\", PROCESSOR_PPC8540, MASK_STRICT_ALIGN | MASK_ISEL)\n-RS6000_CPU (\"8548\", PROCESSOR_PPC8548, MASK_STRICT_ALIGN | MASK_ISEL)\n+RS6000_CPU (\"8540\", PROCESSOR_PPC8540, MASK_STRICT_ALIGN | OPTION_MASK_ISEL)\n+RS6000_CPU (\"8548\", PROCESSOR_PPC8548, MASK_STRICT_ALIGN | OPTION_MASK_ISEL)\n RS6000_CPU (\"a2\", PROCESSOR_PPCA2,\n-\t    MASK_PPC_GFXOPT | MASK_POWERPC64 | MASK_POPCNTB | MASK_CMPB\n-\t    | MASK_NO_UPDATE)\n+\t    MASK_PPC_GFXOPT | MASK_POWERPC64 | MASK_POPCNTB | OPTION_MASK_CMPB\n+\t    | OPTION_MASK_NO_UPDATE)\n RS6000_CPU (\"e300c2\", PROCESSOR_PPCE300C2, MASK_SOFT_FLOAT)\n RS6000_CPU (\"e300c3\", PROCESSOR_PPCE300C3, 0)\n-RS6000_CPU (\"e500mc\", PROCESSOR_PPCE500MC, MASK_PPC_GFXOPT | MASK_ISEL)\n+RS6000_CPU (\"e500mc\", PROCESSOR_PPCE500MC, MASK_PPC_GFXOPT | OPTION_MASK_ISEL)\n RS6000_CPU (\"e500mc64\", PROCESSOR_PPCE500MC64,\n-\t    MASK_POWERPC64 | MASK_PPC_GFXOPT | MASK_ISEL)\n+\t    MASK_POWERPC64 | MASK_PPC_GFXOPT | OPTION_MASK_ISEL)\n RS6000_CPU (\"e5500\", PROCESSOR_PPCE5500,\n-\t    MASK_POWERPC64 | MASK_PPC_GFXOPT | MASK_ISEL)\n+\t    MASK_POWERPC64 | MASK_PPC_GFXOPT | OPTION_MASK_ISEL)\n RS6000_CPU (\"e6500\", PROCESSOR_PPCE6500, POWERPC_7400_MASK | MASK_POWERPC64\n-\t    | MASK_MFCRF | MASK_ISEL)\n+\t    | OPTION_MASK_MFCRF | OPTION_MASK_ISEL)\n RS6000_CPU (\"860\", PROCESSOR_MPCCORE, MASK_SOFT_FLOAT)\n-RS6000_CPU (\"970\", PROCESSOR_POWER4,\n-\t    POWERPC_7400_MASK | MASK_PPC_GPOPT | MASK_MFCRF | MASK_POWERPC64)\n-RS6000_CPU (\"cell\", PROCESSOR_CELL,\n-\t    POWERPC_7400_MASK  | MASK_PPC_GPOPT | MASK_MFCRF | MASK_POWERPC64)\n+RS6000_CPU (\"970\", PROCESSOR_POWER4, POWERPC_7400_MASK | MASK_PPC_GPOPT\n+\t    | OPTION_MASK_MFCRF | MASK_POWERPC64)\n+RS6000_CPU (\"cell\", PROCESSOR_CELL, POWERPC_7400_MASK  | MASK_PPC_GPOPT\n+\t    | OPTION_MASK_MFCRF | MASK_POWERPC64)\n RS6000_CPU (\"ec603e\", PROCESSOR_PPC603, MASK_SOFT_FLOAT)\n RS6000_CPU (\"G3\", PROCESSOR_PPC750, MASK_PPC_GFXOPT)\n RS6000_CPU (\"G4\",  PROCESSOR_PPC7450, POWERPC_7400_MASK)\n-RS6000_CPU (\"G5\", PROCESSOR_POWER4,\n-\t    POWERPC_7400_MASK | MASK_PPC_GPOPT | MASK_MFCRF | MASK_POWERPC64)\n-RS6000_CPU (\"titan\", PROCESSOR_TITAN, MASK_MULHW | MASK_DLMZB)\n+RS6000_CPU (\"G5\", PROCESSOR_POWER4, POWERPC_7400_MASK | MASK_PPC_GPOPT\n+\t    | OPTION_MASK_MFCRF | MASK_POWERPC64)\n+RS6000_CPU (\"titan\", PROCESSOR_TITAN, OPTION_MASK_MULHW | OPTION_MASK_DLMZB)\n RS6000_CPU (\"power3\", PROCESSOR_PPC630, MASK_PPC_GFXOPT | MASK_POWERPC64)\n RS6000_CPU (\"power4\", PROCESSOR_POWER4, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | MASK_MFCRF)\n+\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF)\n RS6000_CPU (\"power5\", PROCESSOR_POWER5, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POPCNTB)\n+\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB)\n RS6000_CPU (\"power5+\", PROCESSOR_POWER5, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POPCNTB | MASK_FPRND)\n+\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB\n+\t    | OPTION_MASK_FPRND)\n RS6000_CPU (\"power6\", PROCESSOR_POWER6, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POPCNTB | MASK_FPRND\n-\t    | MASK_CMPB | MASK_DFP | MASK_RECIP_PRECISION)\n+\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB\n+\t    | OPTION_MASK_FPRND | OPTION_MASK_CMPB | OPTION_MASK_DFP\n+\t    | MASK_RECIP_PRECISION)\n RS6000_CPU (\"power6x\", PROCESSOR_POWER6, MASK_POWERPC64 | MASK_PPC_GPOPT\n-\t    | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POPCNTB | MASK_FPRND\n-\t    | MASK_CMPB | MASK_DFP | MASK_RECIP_PRECISION)\n+\t    | MASK_PPC_GFXOPT | OPTION_MASK_MFCRF | MASK_POPCNTB\n+\t    | OPTION_MASK_FPRND | OPTION_MASK_CMPB | OPTION_MASK_DFP\n+\t    | MASK_RECIP_PRECISION)\n RS6000_CPU (\"power7\", PROCESSOR_POWER7, MASK_POWERPC64 | ISA_2_6_MASKS_SERVER)\n RS6000_CPU (\"power8\", PROCESSOR_POWER8, MASK_POWERPC64 | ISA_2_7_MASKS_SERVER\n \t    | OPTION_MASK_HTM)"}, {"sha": "bf99348be920ec4edbe4f075b4cd5352c8afe000", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -20732,11 +20732,11 @@ rs6000_darwin_file_start (void)\n     HOST_WIDE_INT if_set;\n   } mapping[] = {\n     { \"ppc64\", \"ppc64\", MASK_64BIT },\n-    { \"970\", \"ppc970\", MASK_PPC_GPOPT | MASK_MFCRF | MASK_POWERPC64 },\n+    { \"970\", \"ppc970\", MASK_PPC_GPOPT | OPTION_MASK_MFCRF | MASK_POWERPC64 },\n     { \"power4\", \"ppc970\", 0 },\n     { \"G5\", \"ppc970\", 0 },\n     { \"7450\", \"ppc7450\", 0 },\n-    { \"7400\", \"ppc7400\", MASK_ALTIVEC },\n+    { \"7400\", \"ppc7400\", OPTION_MASK_ALTIVEC },\n     { \"G4\", \"ppc7400\", 0 },\n     { \"750\", \"ppc750\", 0 },\n     { \"740\", \"ppc750\", 0 },"}, {"sha": "4d180bd95e5992d12acae889d1cd83a94cbdda97", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -279,7 +279,7 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n     /* The option machinery will define this.  */\n #endif\n \n-#define TARGET_DEFAULT (MASK_MULTIPLE)\n+#define TARGET_DEFAULT (OPTION_MASK_MULTIPLE)\n \n /* Define generic processor types based upon current deployment.  */\n #define PROCESSOR_COMMON    PROCESSOR_PPC601\n@@ -508,25 +508,6 @@ extern int rs6000_vector_align[];\n    machinery creates OPTION_MASK_<xxx> instead of MASK_<xxx>.  The MASK_<xxxx>\n    options that have not yet been replaced by their OPTION_MASK_<xxx>\n    equivalents are defined here.  */\n-#define MASK_ALTIVEC\t\t\tOPTION_MASK_ALTIVEC\n-#define MASK_CMPB\t\t\tOPTION_MASK_CMPB\n-#define MASK_CRYPTO\t\t\tOPTION_MASK_CRYPTO\n-#define MASK_DFP\t\t\tOPTION_MASK_DFP\n-#define MASK_DIRECT_MOVE\t\tOPTION_MASK_DIRECT_MOVE\n-#define MASK_DLMZB\t\t\tOPTION_MASK_DLMZB\n-#define MASK_EABI\t\t\tOPTION_MASK_EABI\n-#define MASK_FLOAT128_KEYWORD\t\tOPTION_MASK_FLOAT128_KEYWORD\n-#define MASK_FLOAT128_HW\t\tOPTION_MASK_FLOAT128_HW\n-#define MASK_FPRND\t\t\tOPTION_MASK_FPRND\n-#define MASK_P8_FUSION\t\t\tOPTION_MASK_P8_FUSION\n-#define MASK_HARD_FLOAT\t\t\tOPTION_MASK_HARD_FLOAT\n-#define MASK_HTM\t\t\tOPTION_MASK_HTM\n-#define MASK_ISEL\t\t\tOPTION_MASK_ISEL\n-#define MASK_MFCRF\t\t\tOPTION_MASK_MFCRF\n-#define MASK_MMA\t\t\tOPTION_MASK_MMA\n-#define MASK_MULHW\t\t\tOPTION_MASK_MULHW\n-#define MASK_MULTIPLE\t\t\tOPTION_MASK_MULTIPLE\n-#define MASK_NO_UPDATE\t\t\tOPTION_MASK_NO_UPDATE\n #define MASK_P8_VECTOR\t\t\tOPTION_MASK_P8_VECTOR\n #define MASK_P9_VECTOR\t\t\tOPTION_MASK_P9_VECTOR\n #define MASK_P9_MISC\t\t\tOPTION_MASK_P9_MISC"}, {"sha": "6f11de6c57923ea79a146a992f61651c14b01e03", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=9ccc75eba98848e5bc00b55ee9d1a70d57f1e39d", "patch": "@@ -227,7 +227,7 @@ along with GCC; see the file COPYING3.  If not see\n #define LINK_SPEC VXWORKS_LINK_SPEC \" \" VXWORKS_RELAX_LINK_SPEC\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_EABI | MASK_STRICT_ALIGN)\n+#define TARGET_DEFAULT (OPTION_MASK_EABI | MASK_STRICT_ALIGN)\n \n #undef PROCESSOR_DEFAULT\n #define PROCESSOR_DEFAULT PROCESSOR_PPC604"}]}