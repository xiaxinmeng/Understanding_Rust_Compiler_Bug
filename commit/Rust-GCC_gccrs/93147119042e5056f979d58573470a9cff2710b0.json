{"sha": "93147119042e5056f979d58573470a9cff2710b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMxNDcxMTkwNDJlNTA1NmY5NzlkNTg1NzM0NzBhOWNmZjI3MTBiMA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2006-11-20T12:35:47Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2006-11-20T12:35:47Z"}, "message": "bfin.md (call_symbol, [...]): Allow these patterns if TARGET_LEAF_ID_SHARED_LIBRARY.\n\n\t* config/bfin/bfin.md (call_symbol, call_value_symbol, sibcall_symbol,\n\tsibcall_value_symbol): Allow these patterns if\n\tTARGET_LEAF_ID_SHARED_LIBRARY.\n\t* config/bfin/bfin.c (bfin_expand_call): Allow them here as well.\n\t(override_options): Turn on id shared library flags if -msep-data,\n\tbut disallow the combination of these options on the command line.\n\t* config/bfin/bfin.h (TARGET_LEAF_ID_SHARED_LIBRARY, MASK_SEP_DATA\n\tMASK_LEAF_ID_SHARED_LIBRARY, TARGET_SEP_DATA): New macros.\n\t(DRIVER_SELF_SPECS): -mleaf-id-shared-library implies\n\t-mid-shared-library.\n\t(TARGET_SWITCHES): Add -mleaf-id-shared-library and -msep-data.\n\t* doc/invoke.texi (Blackfin Options): Document new switches.\n\nFrom-SVN: r119012", "tree": {"sha": "063c50288c18fa68a3248dcdd6f9663aafa3c878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/063c50288c18fa68a3248dcdd6f9663aafa3c878"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93147119042e5056f979d58573470a9cff2710b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93147119042e5056f979d58573470a9cff2710b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93147119042e5056f979d58573470a9cff2710b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93147119042e5056f979d58573470a9cff2710b0/comments", "author": null, "committer": null, "parents": [{"sha": "d6f6753efec42c63c32b0e0cfa1e9944a2e9ac4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6f6753efec42c63c32b0e0cfa1e9944a2e9ac4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6f6753efec42c63c32b0e0cfa1e9944a2e9ac4a"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "e1822130709511f521efa926287dd0cc09df29c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93147119042e5056f979d58573470a9cff2710b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93147119042e5056f979d58573470a9cff2710b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93147119042e5056f979d58573470a9cff2710b0", "patch": "@@ -12,6 +12,19 @@\n \tfunctions.\n \t(TARGET_CANNOT_FORCE_CONST_MEM): New macro.\n \n+\t* config/bfin/bfin.md (call_symbol, call_value_symbol, sibcall_symbol,\n+\tsibcall_value_symbol): Allow these patterns if\n+\tTARGET_LEAF_ID_SHARED_LIBRARY.\n+\t* config/bfin/bfin.c (bfin_expand_call): Allow them here as well.\n+\t(override_options): Turn on id shared library flags if -msep-data,\n+\tbut disallow the combination of these options on the command line.\n+\t* config/bfin/bfin.h (TARGET_LEAF_ID_SHARED_LIBRARY, MASK_SEP_DATA\n+\tMASK_LEAF_ID_SHARED_LIBRARY, TARGET_SEP_DATA): New macros.\n+\t(DRIVER_SELF_SPECS): -mleaf-id-shared-library implies\n+\t-mid-shared-library.\n+\t(TARGET_SWITCHES): Add -mleaf-id-shared-library and -msep-data.\n+\t* doc/invoke.texi (Blackfin Options): Document new switches.\n+\n 2006-11-19  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR rtl-opt/29879"}, {"sha": "6238690d9c2b34f58aea5fed467fa9f4c7b4ae16", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=93147119042e5056f979d58573470a9cff2710b0", "patch": "@@ -948,6 +948,7 @@ bfin_expand_prologue (void)\n   do_link (spreg, frame_size, false);\n \n   if (TARGET_ID_SHARED_LIBRARY\n+      && !TARGET_SEP_DATA\n       && (current_function_uses_pic_offset_table\n \t  || !current_function_is_leaf))\n     bfin_load_pic_reg (pic_offset_table_rtx);\n@@ -1780,7 +1781,7 @@ bfin_expand_call (rtx retval, rtx fnaddr, rtx callarg1, rtx cookie, int sibcall)\n   else if ((!register_no_elim_operand (callee, Pmode)\n \t    && GET_CODE (callee) != SYMBOL_REF)\n \t   || (GET_CODE (callee) == SYMBOL_REF\n-\t       && (flag_pic\n+\t       && ((TARGET_ID_SHARED_LIBRARY && !TARGET_LEAF_ID_SHARED_LIBRARY)\n \t\t   || bfin_longcall_p (callee, INTVAL (cookie)))))\n     {\n       callee = copy_to_mode_reg (Pmode, callee);\n@@ -2007,6 +2008,14 @@ override_options (void)\n   if (TARGET_ID_SHARED_LIBRARY && TARGET_FDPIC)\n       error (\"ID shared libraries and FD-PIC mode can't be used together.\");\n \n+  /* Don't allow the user to specify -mid-shared-library and -msep-data\n+     together, as it makes little sense from a user's point of view...  */\n+  if (TARGET_SEP_DATA && TARGET_ID_SHARED_LIBRARY)\n+    error (\"cannot specify both -msep-data and -mid-shared-library\");\n+  /* ... internally, however, it's nearly the same.  */\n+  if (TARGET_SEP_DATA)\n+    target_flags |= MASK_ID_SHARED_LIBRARY | MASK_LEAF_ID_SHARED_LIBRARY;\n+\n   /* There is no single unaligned SI op for PIC code.  Sometimes we\n      need to use \".4byte\" and sometimes we need to use \".picptr\".\n      See bfin_assemble_integer for details.  */"}, {"sha": "69e60bbfd7168081fe09ec8c02dd169c5b654541", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=93147119042e5056f979d58573470a9cff2710b0", "patch": "@@ -51,6 +51,7 @@ extern int target_flags;\n #endif\n \n #define DRIVER_SELF_SPECS SUBTARGET_DRIVER_SELF_SPECS\t\"\\\n+ %{mleaf-id-shared-library:%{!mid-shared-library:-mid-shared-library}} \\\n  %{mfdpic:%{!fpic:%{!fpie:%{!fPIC:%{!fPIE:\\\n    \t    %{!fno-pic:%{!fno-pie:%{!fno-PIC:%{!fno-PIE:-fpie}}}}}}}}} \\\n \""}, {"sha": "e509d0353ad829dc57a86b7408773f737315255e", "filename": "gcc/config/bfin/bfin.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Fbfin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Fbfin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.md?ref=93147119042e5056f979d58573470a9cff2710b0", "patch": "@@ -1771,7 +1771,7 @@\n \t (match_operand 1 \"general_operand\" \"g\"))\n    (use (match_operand 2 \"\" \"\"))]\n   \"! SIBLING_CALL_P (insn)\n-   && !TARGET_ID_SHARED_LIBRARY\n+   && (!TARGET_ID_SHARED_LIBRARY || TARGET_LEAF_ID_SHARED_LIBRARY)\n    && GET_CODE (operands[0]) == SYMBOL_REF\n    && !bfin_longcall_p (operands[0], INTVAL (operands[2]))\"\n   \"call %0;\"\n@@ -1784,7 +1784,7 @@\n    (use (match_operand 2 \"\" \"\"))\n    (return)]\n   \"SIBLING_CALL_P (insn)\n-   && !TARGET_ID_SHARED_LIBRARY\n+   && (!TARGET_ID_SHARED_LIBRARY || TARGET_LEAF_ID_SHARED_LIBRARY)\n    && GET_CODE (operands[0]) == SYMBOL_REF\n    && !bfin_longcall_p (operands[0], INTVAL (operands[2]))\"\n   \"jump.l %0;\"\n@@ -1797,7 +1797,7 @@\n \t      (match_operand 2 \"general_operand\" \"g\")))\n    (use (match_operand 3 \"\" \"\"))]\n   \"! SIBLING_CALL_P (insn)\n-   && !TARGET_ID_SHARED_LIBRARY\n+   && (!TARGET_ID_SHARED_LIBRARY || TARGET_LEAF_ID_SHARED_LIBRARY)\n    && GET_CODE (operands[1]) == SYMBOL_REF\n    && !bfin_longcall_p (operands[1], INTVAL (operands[3]))\"\n   \"call %1;\"\n@@ -1811,7 +1811,7 @@\n    (use (match_operand 3 \"\" \"\"))\n    (return)]\n   \"SIBLING_CALL_P (insn)\n-   && !TARGET_ID_SHARED_LIBRARY\n+   && (!TARGET_ID_SHARED_LIBRARY || TARGET_LEAF_ID_SHARED_LIBRARY)\n    && GET_CODE (operands[1]) == SYMBOL_REF\n    && !bfin_longcall_p (operands[1], INTVAL (operands[3]))\"\n   \"jump.l %1;\""}, {"sha": "5b53fecac6bd91a0e6a2ea26500eff7ca7b2ec17", "filename": "gcc/config/bfin/bfin.opt", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.opt?ref=93147119042e5056f979d58573470a9cff2710b0", "patch": "@@ -40,10 +40,19 @@ mid-shared-library\n Target Report Mask(ID_SHARED_LIBRARY)\n Enabled ID based shared library\n \n+mleaf-id-shared-library\n+Target Report Mask(LEAF_ID_SHARED_LIBRARY)\n+Generate code that won't be linked against any other ID shared libraries,\n+but may be used as a shared library.\n+\n mshared-library-id=\n Target RejectNegative Joined UInteger Var(bfin_library_id)\n ID of shared library to build\n \n+msep-data\n+Target Report Mask(SEP_DATA)\n+Enable separate data segment\n+\n mlong-calls\n Target Report Mask(LONG_CALLS)\n Avoid generating pc-relative calls; use indirection"}, {"sha": "5f40318518f2720150176f39ba4d4192e753a36e", "filename": "gcc/config/bfin/t-bfin-elf", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93147119042e5056f979d58573470a9cff2710b0/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf?ref=93147119042e5056f979d58573470a9cff2710b0", "patch": "@@ -22,10 +22,12 @@ GCC_CFLAGS += -N\n CRTSTUFF_T_CFLAGS = -fpic\n TARGET_LIBGCC2_CFLAGS = -fpic\n \n-MULTILIB_OPTIONS=mid-shared-library mfdpic\n+MULTILIB_OPTIONS=mid-shared-library mleaf-id-shared-library\n+MULTILIB_OPTIONS+=msep-data mfdpic\n MULTILIB_DEFAULTS=\n MULTILIB_DIRNAMES=\n-MULTILIB_EXCEPTIONS=mid-shared-library/mfdpic\n+MULTILIB_EXCEPTIONS=mid-shared-library*/mfdpic mleaf-id-shared-library*\n+MULTILIB_EXCEPTIONS+=*msep-data*\n \n # Assemble startup files.\n $(T)crti.o: $(srcdir)/config/bfin/crti.s $(GCC_PASSES)"}]}