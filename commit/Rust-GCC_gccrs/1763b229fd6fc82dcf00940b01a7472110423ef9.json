{"sha": "1763b229fd6fc82dcf00940b01a7472110423ef9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc2M2IyMjlmZDZmYzgyZGNmMDA5NDBiMDFhNzQ3MjExMDQyM2VmOQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-03-04T15:39:20Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-03-04T15:39:20Z"}, "message": "Add missing \\ before return inside string.\n\nFrom-SVN: r3627", "tree": {"sha": "ca3d5f049d5c746379cb3e4ab54d6e7354c6c964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca3d5f049d5c746379cb3e4ab54d6e7354c6c964"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1763b229fd6fc82dcf00940b01a7472110423ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1763b229fd6fc82dcf00940b01a7472110423ef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1763b229fd6fc82dcf00940b01a7472110423ef9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1763b229fd6fc82dcf00940b01a7472110423ef9/comments", "author": null, "committer": null, "parents": [{"sha": "b29e212cdd1a8e97c82a56b7702083cf8a07011a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29e212cdd1a8e97c82a56b7702083cf8a07011a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29e212cdd1a8e97c82a56b7702083cf8a07011a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3c7e466eb97dd3c2cc5c3dd6653cd3d93ffdcb8b", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1763b229fd6fc82dcf00940b01a7472110423ef9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1763b229fd6fc82dcf00940b01a7472110423ef9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=1763b229fd6fc82dcf00940b01a7472110423ef9", "patch": "@@ -576,7 +576,7 @@ static int n_default_compilers\n #ifdef LINK_LIBGCC_SPECIAL_1\n /* Have gcc do the search for libgcc.a, but generate -L options as usual.  */\n static char *link_command_spec = \"\\\n-%{!fsyntax-only:\n+%{!fsyntax-only: \\\n  %{!c:%{!M:%{!MM:%{!E:%{!S:ld %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n \t\t\t%{r} %{s} %{T*} %{t} %{u*} %{x} %{z}\\\n \t\t\t%{!A:%{!nostdlib:%S}} %{static:}\\\n@@ -585,15 +585,15 @@ static char *link_command_spec = \"\\\n #ifdef LINK_LIBGCC_SPECIAL\n /* Have gcc do the search for libgcc.a, and don't generate -L options.  */\n static char *link_command_spec = \"\\\n-%{!fsyntax-only:\n+%{!fsyntax-only: \\\n  %{!c:%{!M:%{!MM:%{!E:%{!S:ld %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n \t\t\t%{r} %{s} %{T*} %{t} %{u*} %{x} %{z}\\\n \t\t\t%{!A:%{!nostdlib:%S}} %{static:}\\\n \t\t\t%{L*} %o %{!nostdlib:libgcc.a%s %L libgcc.a%s %{!A:%E}}\\n }}}}}}\";\n #else\n /* Use -L and have the linker do the search for -lgcc.  */\n static char *link_command_spec = \"\\\n-%{!fsyntax-only:\n+%{!fsyntax-only: \\\n  %{!c:%{!M:%{!MM:%{!E:%{!S:ld %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n \t\t\t%{r} %{s} %{T*} %{t} %{u*} %{x} %{z}\\\n \t\t\t%{!A:%{!nostdlib:%S}} %{static:}\\"}]}