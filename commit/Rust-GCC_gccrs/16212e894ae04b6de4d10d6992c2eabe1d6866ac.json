{"sha": "16212e894ae04b6de4d10d6992c2eabe1d6866ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYyMTJlODk0YWUwNGI2ZGU0ZDEwZDY5OTJjMmVhYmUxZDY4NjZhYw==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2009-04-20T09:37:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T09:37:30Z"}, "message": "sem_elim.ads (Check_For_Eliminated_Subprogram): New procedure for checking for references to eliminated subprograms that should...\n\n2009-04-20  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_elim.ads (Check_For_Eliminated_Subprogram): New procedure for\n\tchecking for references to eliminated subprograms that should be\n\tflagged.\n\t(Eliminate_Error_Message): Update comment to say \"references\" rather\n\tthan \"calls\" (since attribute cases are handled here as well).\n\n\t* sem_elim.adb (Check_For_Eliminated_Subprogram): New procedure for\n\tchecking for references to eliminated subprograms that should be\n\tflagged.  Add with and use of Sem and Sem_Util.\n\n\t* sem_res.adb (Resolve_Call): Reject calls to eliminated subprograms.\n\tAdd with and use of Sem_Elim.\n\n\t* sem_attr.adb (Analyze_Access_Attribute): Reject access attributes\n\tapplied to eliminated subprograms.\n\t(Analyze_Attribute): Reject 'Address and 'Code_Address applied to\n\teliminated subprograms.\n\tAdd with and use of Sem_Elim.\n\n\t* sem_disp.adb (Check_Dispatching_Call): Remove error check for calls\n\tto eliminated subprograms, now handled during Resolve_Call.\n\tRemove with and use of Sem_Elim.\n\n\t* exp_disp.adb (Make_DT): Get Ultimate_Alias of primitive before\n\ttesting Is_Eliminated, for proper handling of primitive derived from\n\teliminated subprograms.\n\nFrom-SVN: r146385", "tree": {"sha": "067b6fb3d3db09d6874a82087fceda2ef195ae17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/067b6fb3d3db09d6874a82087fceda2ef195ae17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16212e894ae04b6de4d10d6992c2eabe1d6866ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16212e894ae04b6de4d10d6992c2eabe1d6866ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16212e894ae04b6de4d10d6992c2eabe1d6866ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16212e894ae04b6de4d10d6992c2eabe1d6866ac/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89"}], "stats": {"total": 80, "additions": 63, "deletions": 17}, "files": [{"sha": "2a6f3473a9b8ff70aef6802d8c6e7ec38de2e0be", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=16212e894ae04b6de4d10d6992c2eabe1d6866ac", "patch": "@@ -5160,22 +5160,19 @@ package body Exp_Disp is\n                while Present (Prim_Elmt) loop\n                   Prim := Node (Prim_Elmt);\n \n+                  --  Retrieve the ultimate alias of the primitive for proper\n+                  --  handling of renamings and eliminated primitives.\n+\n+                  E := Ultimate_Alias (Prim);\n+\n                   if Is_Imported (Prim)\n                     or else Present (Interface_Alias (Prim))\n                     or else Is_Predefined_Dispatching_Operation (Prim)\n-                    or else Is_Eliminated (Prim)\n+                    or else Is_Eliminated (E)\n                   then\n                      null;\n \n                   else\n-                     --  Traverse the list of aliased entities to handle\n-                     --  renamings of predefined primitives.\n-\n-                     E := Prim;\n-                     while Present (Alias (E)) loop\n-                        E := Alias (E);\n-                     end loop;\n-\n                      if not Is_Predefined_Dispatching_Operation (E)\n                        and then not Is_Abstract_Subprogram (E)\n                        and then not Present (Interface_Alias (E))"}, {"sha": "3e8311b60970b5d5a2c69a92799c34c7a3d84498", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=16212e894ae04b6de4d10d6992c2eabe1d6866ac", "patch": "@@ -51,6 +51,7 @@ with Sem_Cat;  use Sem_Cat;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Dist; use Sem_Dist;\n+with Sem_Elim; use Sem_Elim;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n with Sem_Type; use Sem_Type;\n@@ -573,6 +574,10 @@ package body Sem_Attr is\n                Error_Attr (\"attribute% cannot be applied to a subprogram\", P);\n             end if;\n \n+            --  Issue an error if the prefix denotes an eliminated subprogram\n+\n+            Check_For_Eliminated_Subprogram (P, Entity (P));\n+\n             --  Build the appropriate subprogram type\n \n             Build_Access_Subprogram_Type (P);\n@@ -2076,6 +2081,11 @@ package body Sem_Attr is\n                         Error_Msg_N\n                          (\"cannot take Address of intrinsic subprogram\", N);\n                      end if;\n+\n+                  --  Issue an error if prefix denotes an eliminated subprogram\n+\n+                  else\n+                     Check_For_Eliminated_Subprogram (P, Ent);\n                   end if;\n \n                elsif Is_Object (Ent)\n@@ -2516,6 +2526,11 @@ package body Sem_Attr is\n          then\n             Error_Attr (\"invalid prefix for % attribute\", P);\n             Set_Address_Taken (Entity (P));\n+\n+         --  Issue an error if the prefix denotes an eliminated subprogram\n+\n+         else\n+            Check_For_Eliminated_Subprogram (P, Entity (P));\n          end if;\n \n          Set_Etype (N, RTE (RE_Address));"}, {"sha": "576ecbc701c64d61e6d70e1c9ea02cf1fc0a6e3b", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=16212e894ae04b6de4d10d6992c2eabe1d6866ac", "patch": "@@ -44,7 +44,6 @@ with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;\n-with Sem_Elim; use Sem_Elim;\n with Sem_Eval; use Sem_Eval;\n with Sem_Type; use Sem_Type;\n with Sem_Util; use Sem_Util;\n@@ -486,10 +485,6 @@ package body Sem_Disp is\n             Set_Controlling_Argument (N, Control);\n             Check_Restriction (No_Dispatching_Calls, N);\n \n-            if Is_Eliminated (Ultimate_Alias (Subp_Entity)) then\n-               Eliminate_Error_Msg (N, Ultimate_Alias (Subp_Entity));\n-            end if;\n-\n          --  If there is a statically tagged actual and a tag-indeterminate\n          --  call to a function of the ancestor (such as that provided by a\n          --  default), then treat this as a dispatching call and propagate"}, {"sha": "ddcb32b8fc594aa0a9dab98b6608641bbfd635cc", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=16212e894ae04b6de4d10d6992c2eabe1d6866ac", "patch": "@@ -28,7 +28,9 @@ with Einfo;    use Einfo;\n with Errout;   use Errout;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n+with Sem;      use Sem;\n with Sem_Prag; use Sem_Prag;\n+with Sem_Util; use Sem_Util;\n with Sinput;   use Sinput;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n@@ -662,6 +664,30 @@ package body Sem_Elim is\n       return;\n    end Check_Eliminated;\n \n+   -------------------------------------\n+   -- Check_For_Eliminated_Subprogram --\n+   -------------------------------------\n+\n+   procedure Check_For_Eliminated_Subprogram (N : Node_Id; S : Entity_Id) is\n+      Ultimate_Subp  : constant Entity_Id := Ultimate_Alias (S);\n+      Enclosing_Subp : Entity_Id;\n+\n+   begin\n+      if Is_Eliminated (Ultimate_Subp) and then not Inside_A_Generic then\n+\n+         Enclosing_Subp := Current_Subprogram;\n+         while Present (Enclosing_Subp) loop\n+            if Is_Eliminated (Enclosing_Subp) then\n+               return;\n+            end if;\n+\n+            Enclosing_Subp := Enclosing_Subprogram (Enclosing_Subp);\n+         end loop;\n+\n+         Eliminate_Error_Msg (N, Ultimate_Subp);\n+      end if;\n+   end Check_For_Eliminated_Subprogram;\n+\n    -------------------------\n    -- Eliminate_Error_Msg --\n    -------------------------"}, {"sha": "9bb1596336d55628c2cd1f381093b489817e44b6", "filename": "gcc/ada/sem_elim.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_elim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_elim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.ads?ref=16212e894ae04b6de4d10d6992c2eabe1d6866ac", "patch": "@@ -52,9 +52,17 @@ package Sem_Elim is\n    --  Checks if entity E is eliminated, and if so sets the Is_Eliminated\n    --  flag on the given entity.\n \n+   procedure Check_For_Eliminated_Subprogram (N : Node_Id; S : Entity_Id);\n+   --  Check that the subprogram S (or its ultimate parent in the case of a\n+   --  derived subprogram or renaming) has not been eliminated. An error will\n+   --  be flagged if the subprogram has been eliminated, unless the node N\n+   --  occurs within an eliminated subprogram or within a generic unit. The\n+   --  error will be posted on N.\n+\n    procedure Eliminate_Error_Msg (N : Node_Id; E : Entity_Id);\n-   --  Called by the front-end and back-end on encountering a call to an\n-   --  eliminated subprogram. N is the node for the call, and E is the\n-   --  entity of the subprogram being eliminated.\n+   --  Called by the front-end and back-end on encountering a reference to an\n+   --  eliminated subprogram. N is the node for the reference (such as occurs\n+   --  in a call or attribute), and E is the entity of the subprogram that has\n+   --  been eliminated.\n \n end Sem_Elim;"}, {"sha": "e166954e3901726197833e366bba93bf2a95c0f2", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16212e894ae04b6de4d10d6992c2eabe1d6866ac/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=16212e894ae04b6de4d10d6992c2eabe1d6866ac", "patch": "@@ -60,6 +60,7 @@ with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch13; use Sem_Ch13;\n with Sem_Disp; use Sem_Disp;\n with Sem_Dist; use Sem_Dist;\n+with Sem_Elim; use Sem_Elim;\n with Sem_Elab; use Sem_Elab;\n with Sem_Eval; use Sem_Eval;\n with Sem_Intr; use Sem_Intr;\n@@ -5255,6 +5256,10 @@ package body Sem_Res is\n          Check_Potentially_Blocking_Operation (N);\n       end if;\n \n+      --  Issue an error for a call to an eliminated subprogram\n+\n+      Check_For_Eliminated_Subprogram (Subp, Nam);\n+\n       --  All done, evaluate call and deal with elaboration issues\n \n       Eval_Call (N);"}]}