{"sha": "5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2MmE1MGRkOGM3MTE2ZGYwYWQxODJjZTY3OTJkZmVlYjBmNzJhYQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-03-30T21:34:41Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-03-30T21:34:41Z"}, "message": "tree.def (FILE_TYPE): Removed.\n\ngcc:\n\t* tree.def (FILE_TYPE): Removed.\n\t* typeclass.h (enum type_class): Removed file_type_class.\n\t* dwarf2out.c (is_base_type): Updated.\n\t(gen_type_die): Likewise.\n\t* dbxout.c (dbxout_type): Updated.\n\t* builtins.c (type_to_class): Updated.\n\t* tree.c (type_contains_placeholder_1): Updated.\n\t* config/sparc/sparc.c (sparc_type_code): Updated.\n\t* config/ia64/ia64.c (hfa_element_mode): Updated.\n\t* expr.c (count_type_elements): Updated.\n\t* stor-layout.c (layout_type): Updated.\n\t* tree-inline.c (remap_type): Updated.\n\t* tree-pretty-print.c (dump_generic_node): Updated.\ngcc/java:\n\t* decl.c (gnat_substitute_in_type): Don't handle FILE_TYPE.\n\nFrom-SVN: r97282", "tree": {"sha": "a32675b4b0676ecaf92e279e2a53b3c5bc54c1b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a32675b4b0676ecaf92e279e2a53b3c5bc54c1b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/comments", "author": null, "committer": null, "parents": [{"sha": "b131a44e3d148ee2ff71280e3e2542b87a40d2bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b131a44e3d148ee2ff71280e3e2542b87a40d2bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b131a44e3d148ee2ff71280e3e2542b87a40d2bd"}], "stats": {"total": 61, "additions": 24, "deletions": 37}, "files": [{"sha": "2adae1617e3e601c0831d994ef5a2345fd868864", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -1,3 +1,19 @@\n+2005-03-30  Tom Tromey  <tromey@redhat.com>\n+\n+\t* tree.def (FILE_TYPE): Removed.\n+\t* typeclass.h (enum type_class): Removed file_type_class.\n+\t* dwarf2out.c (is_base_type): Updated.\n+\t(gen_type_die): Likewise.\n+\t* dbxout.c (dbxout_type): Updated.\n+\t* builtins.c (type_to_class): Updated.\n+\t* tree.c (type_contains_placeholder_1): Updated.\n+\t* config/sparc/sparc.c (sparc_type_code): Updated.\n+\t* config/ia64/ia64.c (hfa_element_mode): Updated.\n+\t* expr.c (count_type_elements): Updated.\n+\t* stor-layout.c (layout_type): Updated.\n+\t* tree-inline.c (remap_type): Updated.\n+\t* tree-pretty-print.c (dump_generic_node): Updated.\n+\n 2005-03-30 Fariborz Jahanian <fjahanian@apple.com>\n \n \t* builtins.c (expand_builtin_powi): Fix mode of"}, {"sha": "035d8313366a9a7a511b8f07eb884f673b416981", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -1,3 +1,7 @@\n+2005-03-30  Tom Tromey  <tromey@redhat.com>\n+\n+\t* decl.c (gnat_substitute_in_type): Don't handle FILE_TYPE.\n+\n 2005-03-30  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n \n \t* adaint.c (_gnat_set_close_on_exec): Mark parameters unused."}, {"sha": "5f53e19e797fa4202c79c9b8dea3bf0c9c35af30", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -6402,7 +6402,6 @@ gnat_substitute_in_type (tree t, tree f, tree r)\n \n     case OFFSET_TYPE:\n     case METHOD_TYPE:\n-    case FILE_TYPE:\n     case FUNCTION_TYPE:\n     case LANG_TYPE:\n       /* Don't know how to do these yet.  */"}, {"sha": "56bdc873df345f3a967e6866505b4ef5e97a355c", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -1478,7 +1478,6 @@ type_to_class (tree type)\n     case QUAL_UNION_TYPE:  return union_type_class;\n     case ARRAY_TYPE:\t   return (TYPE_STRING_FLAG (type)\n \t\t\t\t   ? string_type_class : array_type_class);\n-    case FILE_TYPE:\t   return file_type_class;\n     case LANG_TYPE:\t   return lang_type_class;\n     default:\t\t   return no_type_class;\n     }"}, {"sha": "3d15f4036327801472ad3d50a5f57cbc15e7d0a8", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -3348,7 +3348,7 @@ hfa_element_mode (tree type, bool nested)\n     case VOID_TYPE:\tcase INTEGER_TYPE:\tcase ENUMERAL_TYPE:\n     case BOOLEAN_TYPE:\tcase CHAR_TYPE:\t\tcase POINTER_TYPE:\n     case OFFSET_TYPE:\tcase REFERENCE_TYPE:\tcase METHOD_TYPE:\n-    case FILE_TYPE:\tcase LANG_TYPE:\t\tcase FUNCTION_TYPE:\n+    case LANG_TYPE:\t\tcase FUNCTION_TYPE:\n       return VOIDmode;\n \n       /* Fortran complex types are supposed to be HFAs, so we need to handle"}, {"sha": "6823915097a5e7dda7e4b07e06f6f222b1d608ea", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -7727,7 +7727,6 @@ sparc_type_code (register tree type)\n \tcase VECTOR_TYPE:\n \tcase CHAR_TYPE:\t\t/* GNU Pascal CHAR type.  Not used in C.  */\n \tcase BOOLEAN_TYPE:\t/* GNU Fortran BOOLEAN type.  */\n-\tcase FILE_TYPE:\t\t/* GNU Pascal FILE type.  */\n \tcase LANG_TYPE:\t\t/* ? */\n \t  return qualifiers;\n   "}, {"sha": "92538b8ce1079ac8be5d8d1186fb13fa15a2be12", "filename": "gcc/dbxout.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -1932,11 +1932,6 @@ dbxout_type (tree type, int full)\n \tstabstr_S (\"eFalse:0,True:1,;\");\n       break;\n \n-    case FILE_TYPE:\n-      stabstr_C ('d');\n-      dbxout_type (TREE_TYPE (type), 0);\n-      break;\n-\n     case COMPLEX_TYPE:\n       /* Differs from the REAL_TYPE by its new data type number.\n \t R3 is NF_COMPLEX.  We don't try to use any of the other NF_*"}, {"sha": "63356629e070df8ff3dbf7d6e23334b763a446de", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -8016,7 +8016,6 @@ is_base_type (tree type)\n     case METHOD_TYPE:\n     case POINTER_TYPE:\n     case REFERENCE_TYPE:\n-    case FILE_TYPE:\n     case OFFSET_TYPE:\n     case LANG_TYPE:\n     case VECTOR_TYPE:\n@@ -12110,12 +12109,6 @@ gen_type_die (tree type, dw_die_ref context_die)\n       gen_ptr_to_mbr_type_die (type, context_die);\n       break;\n \n-    case FILE_TYPE:\n-      gen_type_die (TREE_TYPE (type), context_die);\n-      /* No way to represent these in Dwarf yet!  */\n-      gcc_unreachable ();\n-      break;\n-\n     case FUNCTION_TYPE:\n       /* Force out return type (in case it wasn't forced out already).  */\n       gen_type_die (TREE_TYPE (type), context_die);"}, {"sha": "c2a6e7db9a79db47726a1c0da0d99a469cd28a9a", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -4522,7 +4522,6 @@ count_type_elements (tree type)\n \n     case VOID_TYPE:\n     case METHOD_TYPE:\n-    case FILE_TYPE:\n     case FUNCTION_TYPE:\n     case LANG_TYPE:\n     default:"}, {"sha": "25420e0d5ed5b0e8658757c30f61d9155415476f", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -1759,14 +1759,6 @@ layout_type (tree type)\n       }\n       break;\n \n-    case FILE_TYPE:\n-      /* The size may vary in different languages, so the language front end\n-\t should fill in the size.  */\n-      TYPE_ALIGN (type) = BIGGEST_ALIGNMENT;\n-      TYPE_USER_ALIGN (type) = 0;\n-      TYPE_MODE  (type) = BLKmode;\n-      break;\n-\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "88bef203862a6a3c8ba63ee89166b6f8e6e567ce", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -321,7 +321,6 @@ remap_type (tree type, inline_data *id)\n       walk_tree (&TYPE_FIELDS (new), copy_body_r, id, NULL);\n       break;\n \n-    case FILE_TYPE:\n     case OFFSET_TYPE:\n     default:\n       /* Shouldn't have been thought variable sized.  */"}, {"sha": "743e1592e4de08c0dd42e227b414f0920fec86d7", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -1,5 +1,5 @@\n /* Pretty formatting of GENERIC trees in C syntax.\n-   Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n    Adapted from c-pretty-print.c by Diego Novillo <dnovillo@redhat.com>\n \n This file is part of GCC.\n@@ -441,10 +441,6 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n       pp_string (buffer, \"::\");\n       break;\n \n-    case FILE_TYPE:\n-      NIY;\n-      break;\n-\n     case ARRAY_TYPE:\n       {\n \ttree tmp;"}, {"sha": "a4969a0ae519f5cf2cf91cd6ad7fc21860379e54", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -1908,7 +1908,6 @@ type_contains_placeholder_1 (tree type)\n     case OFFSET_TYPE:\n     case REFERENCE_TYPE:\n     case METHOD_TYPE:\n-    case FILE_TYPE:\n     case FUNCTION_TYPE:\n     case VECTOR_TYPE:\n       return false;"}, {"sha": "08e28068167a79084683f7a1f9fd7a0a701c859f", "filename": "gcc/tree.def", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -254,9 +254,6 @@ DEFTREECODE (FUNCTION_TYPE, \"function_type\", tcc_type, 0)\n    includes the hidden argument for \"self\".  */\n DEFTREECODE (METHOD_TYPE, \"method_type\", tcc_type, 0)\n \n-/* Used for Pascal; details not determined right now.  */\n-DEFTREECODE (FILE_TYPE, \"file_type\", tcc_type, 0)\n-\n /* This is a language-specific kind of type.\n    Its meaning is defined by the language front end.\n    layout_type does not know how to lay this out,"}, {"sha": "a4e15703b77f462114ecc12396096615d7bc1158", "filename": "gcc/typeclass.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftypeclass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5662a50dd8c7116df0ad182ce6792dfeeb0f72aa/gcc%2Ftypeclass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftypeclass.h?ref=5662a50dd8c7116df0ad182ce6792dfeeb0f72aa", "patch": "@@ -1,5 +1,5 @@\n /* Type class enum\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -39,7 +39,7 @@ enum type_class\n   real_type_class, complex_type_class,\n   function_type_class, method_type_class,\n   record_type_class, union_type_class,\n-  array_type_class, string_type_class, file_type_class,\n+  array_type_class, string_type_class,\n   lang_type_class\n };\n "}]}