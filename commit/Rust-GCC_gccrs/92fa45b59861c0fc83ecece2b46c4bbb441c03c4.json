{"sha": "92fa45b59861c0fc83ecece2b46c4bbb441c03c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJmYTQ1YjU5ODYxYzBmYzgzZWNlY2UyYjQ2YzRiYmI0NDFjMDNjNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2016-07-11T15:13:56Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-07-11T15:13:56Z"}, "message": "Don't convert TImode in debug insn\n\nWhen converting V1TImode register in debug insn, check if it has been\nconverted to TImode already.\n\ngcc/\n\n\tPR target/71801\n\t* config/i386/i386.c (timode_scalar_chain::fix_debug_reg_uses):\n\tDon't convert TImode in debug insn.\n\ngcc/testsuite/\n\n\tPR target/71801\n\t* gcc.target/i386/pr71801.c: New test.\n\nFrom-SVN: r238211", "tree": {"sha": "9ad245d068d8cf1e90dbc6e05ec25b4ff6c60b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ad245d068d8cf1e90dbc6e05ec25b4ff6c60b21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92fa45b59861c0fc83ecece2b46c4bbb441c03c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92fa45b59861c0fc83ecece2b46c4bbb441c03c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92fa45b59861c0fc83ecece2b46c4bbb441c03c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25b75a48d2a2d0a4d65708da7402f238a10da115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b75a48d2a2d0a4d65708da7402f238a10da115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25b75a48d2a2d0a4d65708da7402f238a10da115"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "40e34dd884c27b06420d1af36dfeb6545c0101a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92fa45b59861c0fc83ecece2b46c4bbb441c03c4", "patch": "@@ -1,3 +1,9 @@\n+2016-07-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/71801\n+\t* config/i386/i386.c (timode_scalar_chain::fix_debug_reg_uses):\n+\tDon't convert TImode in debug insn.\n+\n 2016-07-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tConvert TYPE_ALIGN_OK to a TYPE_LANG_FLAG."}, {"sha": "d190bef52999dfbc6b39cfa41d8208689479abb7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=92fa45b59861c0fc83ecece2b46c4bbb441c03c4", "patch": "@@ -3814,6 +3814,9 @@ timode_scalar_chain::fix_debug_reg_uses (rtx reg)\n \t    continue;\n \t  gcc_assert (GET_CODE (val) == VAR_LOCATION);\n \t  rtx loc = PAT_VAR_LOCATION_LOC (val);\n+\t  /* It may have been converted to TImode already.  */\n+\t  if (GET_MODE (loc) == TImode)\n+\t    continue;\n \t  gcc_assert (REG_P (loc)\n \t\t      && GET_MODE (loc) == V1TImode);\n \t  /* Convert V1TImode register, which has been updated by a SET"}, {"sha": "4bfbba596fdfbc9669a1352f5168ff0d8171c146", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92fa45b59861c0fc83ecece2b46c4bbb441c03c4", "patch": "@@ -1,3 +1,8 @@\n+2016-07-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/71801\n+\t* gcc.target/i386/pr71801.c: New test.\n+\n 2016-07-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71816"}, {"sha": "6c87522f31d508d5f095a98a944441b8cf323d5f", "filename": "gcc/testsuite/gcc.target/i386/pr71801.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71801.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92fa45b59861c0fc83ecece2b46c4bbb441c03c4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71801.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71801.c?ref=92fa45b59861c0fc83ecece2b46c4bbb441c03c4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+\n+struct {\n+  char uuid[16];\n+} c;\n+struct {\n+  int s_uuid[6];\n+} a, b;\n+int bar (void);\n+static int get_label_uuid(char *p1) {\n+  __builtin_memcpy(p1, a.s_uuid, sizeof(a));\n+  if (bar())\n+    __builtin_memcpy(p1, b.s_uuid, sizeof(b));\n+  return 0;\n+}\n+void uuidcache_addentry(char *p1) { __builtin_memcpy(&c, p1, sizeof(c)); }\n+void uuidcache_init() {\n+  char d[1];\n+  get_label_uuid(d);\n+  uuidcache_addentry(d);\n+}"}]}