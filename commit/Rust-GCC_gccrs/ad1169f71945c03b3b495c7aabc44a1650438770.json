{"sha": "ad1169f71945c03b3b495c7aabc44a1650438770", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQxMTY5ZjcxOTQ1YzAzYjNiNDk1YzdhYWJjNDRhMTY1MDQzODc3MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-06-04T11:16:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-06-04T11:16:03Z"}, "message": "new\n\nFrom-SVN: r20226", "tree": {"sha": "b0be63aaf6a84e795cee009021ab9d0c30d82c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0be63aaf6a84e795cee009021ab9d0c30d82c83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad1169f71945c03b3b495c7aabc44a1650438770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1169f71945c03b3b495c7aabc44a1650438770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1169f71945c03b3b495c7aabc44a1650438770", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1169f71945c03b3b495c7aabc44a1650438770/comments", "author": null, "committer": null, "parents": [{"sha": "a835e351374fc5a3c9f0758ba98ab8ea44763e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a835e351374fc5a3c9f0758ba98ab8ea44763e21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a835e351374fc5a3c9f0758ba98ab8ea44763e21"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "c9df60cc976eeb1140736a984334b5202a07ca21", "filename": "gcc/testsuite/g++.old-deja/g++.ns/koenig2.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig2.C?ref=ad1169f71945c03b3b495c7aabc44a1650438770", "patch": "@@ -0,0 +1,9 @@\n+//Build don't link:\n+//Check association of {error} for Koenig lookup\n+class QString { };\n+int foo()\n+{\n+\tQString bar;\n+\tif (bar == __null ) {\n+    }\n+}"}, {"sha": "e039df695575b6b56d2121684092bba362eb0c35", "filename": "gcc/testsuite/g++.old-deja/g++.ns/koenig3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig3.C?ref=ad1169f71945c03b3b495c7aabc44a1650438770", "patch": "@@ -0,0 +1,21 @@\n+//Check association of member pointer in overload resolution.\n+struct A {\n+\tint m_val;\n+\tfriend int operator ->* (A & other, int A::*pm)\n+\t\t{ return 31; }\n+};\n+\n+int A::*pi = & A::m_val;\n+\n+int\n+main(void)\n+{\n+\tA c;\n+\tc.m_val = 42;\n+\tint j = c ->* pi;\n+\n+\tif (j == 31)\n+\t\treturn 0;\n+\telse\n+\t\treturn 1;\n+}\t"}, {"sha": "e179f313d1c823218dde9e88ed25bbd6e00330cf", "filename": "gcc/testsuite/g++.old-deja/g++.ns/using3.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing3.C?ref=ad1169f71945c03b3b495c7aabc44a1650438770", "patch": "@@ -0,0 +1,14 @@\n+typedef\tunsigned int atypedef;\n+struct astruct{};\n+void afunction();\n+void aovlfunction();\n+void aovlfunction(int);\n+int avariable;\n+\n+namespace foo {\n+  using ::atypedef;\n+  using ::astruct;\n+  using ::afunction;\n+  using ::aovlfunction;\n+  using ::avariable;\n+}"}, {"sha": "6861c4d30f876401595f73691ec772a937b5cfd3", "filename": "gcc/testsuite/g++.old-deja/g++.other/new2.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fnew2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fnew2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fnew2.C?ref=ad1169f71945c03b3b495c7aabc44a1650438770", "patch": "@@ -0,0 +1,22 @@\n+//Build don't link:\n+typedef unsigned int size_t;\n+void *operator new(size_t, unsigned int);\n+\n+struct X{\n+  X();\n+  X(int);\n+};\n+\n+\n+void f(X *x = new X);          // ERROR -\n+\n+void f(X *x = new X(4));       // ERROR -\n+\n+void f(X *x = new X[4]);       // ERROR -\n+\n+void f(X *x = new (3) X(6));   // ERROR -\n+\n+void f(X *x = new (2) X[10]);  // ERROR -\n+\n+void f(X *x = new X[10][5]);   // ERROR -\n+"}, {"sha": "b3040acb0f58604faa871a5dc3cdc267bafa9ddd", "filename": "gcc/testsuite/g++.old-deja/g++.pt/static3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1169f71945c03b3b495c7aabc44a1650438770/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic3.C?ref=ad1169f71945c03b3b495c7aabc44a1650438770", "patch": "@@ -0,0 +1,12 @@\n+template<class T>\n+struct A {\n+  static T arr[5];\n+};\n+\n+template <class T>\n+T A<T>::arr[5] = { 0, 1, 2, 3, 4 };\n+\n+main ()\n+{\n+  return A<int>::arr[0];\n+}"}]}