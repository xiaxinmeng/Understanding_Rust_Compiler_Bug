{"sha": "6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwNmUwZTgyMmRiOTZiNzFjODBlMjY4MjYwZDJiNGI0YzFiYzFmNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-26T11:12:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-26T11:12:03Z"}, "message": "re PR target/69442 (wrong code with -Og and 64bit modulo @ armv7a)\n\n\tPR target/69442\n\t* combine.c (combine_instructions): For REG_EQUAL note with\n\tSET_DEST being ZERO_EXTRACT, also temporarily set SET_DEST\n\tto the underlying register.\n\t* doc/rtl.texi (REG_EQUAL): Document the behavior of\n\tREG_EQUAL/REG_EQUIV notes if SET_DEST is ZERO_EXTRACT.\n\n\t* gcc.dg/pr69442.c: New test.\n\nFrom-SVN: r232819", "tree": {"sha": "13dabb40608100e7283aa3ad638031f8b5807728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13dabb40608100e7283aa3ad638031f8b5807728"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b96824c4848d33c8cc9b574ce29da98464feaabb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96824c4848d33c8cc9b574ce29da98464feaabb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96824c4848d33c8cc9b574ce29da98464feaabb"}], "stats": {"total": 58, "additions": 51, "deletions": 7}, "files": [{"sha": "17f9b2b8217e720b65176947dab04cfffe200617", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "patch": "@@ -1,3 +1,12 @@\n+2016-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/69442\n+\t* combine.c (combine_instructions): For REG_EQUAL note with\n+\tSET_DEST being ZERO_EXTRACT, also temporarily set SET_DEST\n+\tto the underlying register.\n+\t* doc/rtl.texi (REG_EQUAL): Document the behavior of\n+\tREG_EQUAL/REG_EQUIV notes if SET_DEST is ZERO_EXTRACT.\n+\n 2016-01-26  Roger Ferrer Ib\u00e1\u00f1ez  <rofirrim@gmail.com>\n \n \tPR target/67896"}, {"sha": "858552ddc3f8fbbd0fb68b7bc4533a20b6c791d4", "filename": "gcc/combine.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "patch": "@@ -1454,15 +1454,21 @@ combine_instructions (rtx_insn *f, unsigned int nregs)\n \t\t  && ! unmentioned_reg_p (note, SET_SRC (set))\n \t\t  && (GET_MODE (note) == VOIDmode\n \t\t      ? SCALAR_INT_MODE_P (GET_MODE (SET_DEST (set)))\n-\t\t      : GET_MODE (SET_DEST (set)) == GET_MODE (note)))\n+\t\t      : (GET_MODE (SET_DEST (set)) == GET_MODE (note)\n+\t\t\t && (GET_CODE (SET_DEST (set)) != ZERO_EXTRACT\n+\t\t\t     || (GET_MODE (XEXP (SET_DEST (set), 0))\n+\t\t\t\t == GET_MODE (note))))))\n \t\t{\n \t\t  /* Temporarily replace the set's source with the\n \t\t     contents of the REG_EQUAL note.  The insn will\n \t\t     be deleted or recognized by try_combine.  */\n-\t\t  rtx orig = SET_SRC (set);\n+\t\t  rtx orig_src = SET_SRC (set);\n+\t\t  rtx orig_dest = SET_DEST (set);\n+\t\t  if (GET_CODE (SET_DEST (set)) == ZERO_EXTRACT)\n+\t\t    SET_DEST (set) = XEXP (SET_DEST (set), 0);\n \t\t  SET_SRC (set) = note;\n \t\t  i2mod = temp;\n-\t\t  i2mod_old_rhs = copy_rtx (orig);\n+\t\t  i2mod_old_rhs = copy_rtx (orig_src);\n \t\t  i2mod_new_rhs = copy_rtx (note);\n \t\t  next = try_combine (insn, i2mod, NULL, NULL,\n \t\t\t\t      &new_direct_jump_p,\n@@ -1473,7 +1479,8 @@ combine_instructions (rtx_insn *f, unsigned int nregs)\n \t\t      statistics_counter_event (cfun, \"insn-with-note combine\", 1);\n \t\t      goto retry;\n \t\t    }\n-\t\t  SET_SRC (set) = orig;\n+\t\t  SET_SRC (set) = orig_src;\n+\t\t  SET_DEST (set) = orig_dest;\n \t\t}\n \t    }\n "}, {"sha": "1b3f47e35736cda0092bcbe8248558651b80d96b", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "patch": "@@ -3915,9 +3915,9 @@ indicates that that register will be equal to @var{op} at run time; the\n scope of this equivalence differs between the two types of notes.  The\n value which the insn explicitly copies into the register may look\n different from @var{op}, but they will be equal at run time.  If the\n-output of the single @code{set} is a @code{strict_low_part} expression,\n-the note refers to the register that is contained in @code{SUBREG_REG}\n-of the @code{subreg} expression.\n+output of the single @code{set} is a @code{strict_low_part} or\n+@code{zero_extract} expression, the note refers to the register that\n+is contained in its first operand.\n \n For @code{REG_EQUIV}, the register is equivalent to @var{op} throughout\n the entire function, and could validly be replaced in all its"}, {"sha": "67bc4e4cf5764a8a0b327c2391eab0c8b220d17d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "patch": "@@ -1,3 +1,8 @@\n+2016-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/69442\n+\t* gcc.dg/pr69442.c: New test.\n+\n 2016-01-26  Roger Ferrer Ib\u00e1\u00f1ez  <rofirrim@gmail.com>\n \n \tPR target/67896"}, {"sha": "ee75f92951a432f9f4706462d17251634bc4677d", "filename": "gcc/testsuite/gcc.dg/pr69442.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69442.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c06e0e822db96b71c80e268260d2b4b4c1bc1f5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69442.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69442.c?ref=6c06e0e822db96b71c80e268260d2b4b4c1bc1f5", "patch": "@@ -0,0 +1,23 @@\n+/* PR target/69442 */\n+/* { dg-do run } */\n+/* { dg-options \"-Og\" } */\n+\n+unsigned long long __attribute__ ((noinline, noclone))\n+foo (unsigned int x, unsigned long long y)\n+{\n+  x |= 0xffff;\n+  y -= 0xffULL;\n+  y %= 0xffff0000ffffffe7ULL;\n+  return x + y;\n+}\n+\n+int\n+main ()\n+{\n+  if (sizeof (unsigned long long) * __CHAR_BIT__ != 64)\n+    return 0;\n+\n+  if (foo (0, 0) != 0xffff0000ff19ULL)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}