{"sha": "422d0fb02b54499db4147cd9f65e7fe01ecf36b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIyZDBmYjAyYjU0NDk5ZGI0MTQ3Y2Q5ZjY1ZTdmZTAxZWNmMzZiMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-03-17T21:58:49Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-17T21:58:49Z"}, "message": "flow.c (compute_immediate_dominators): New function.\n\n        * flow.c (compute_immediate_dominators): New function.\n        * basic-block.h (compute_immediate_dominators): Declare it.\n\nFrom-SVN: r25831", "tree": {"sha": "c43c997d7221f644b3d173ec09c04ce2bf156966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c43c997d7221f644b3d173ec09c04ce2bf156966"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/422d0fb02b54499db4147cd9f65e7fe01ecf36b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/422d0fb02b54499db4147cd9f65e7fe01ecf36b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/422d0fb02b54499db4147cd9f65e7fe01ecf36b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/422d0fb02b54499db4147cd9f65e7fe01ecf36b2/comments", "author": null, "committer": null, "parents": [{"sha": "e41753123bcf8495387918dfc6d8b20d4297bd31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41753123bcf8495387918dfc6d8b20d4297bd31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41753123bcf8495387918dfc6d8b20d4297bd31"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "50681b290408b724fdec5f9fa342a17ce2b45ca4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/422d0fb02b54499db4147cd9f65e7fe01ecf36b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/422d0fb02b54499db4147cd9f65e7fe01ecf36b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=422d0fb02b54499db4147cd9f65e7fe01ecf36b2", "patch": "@@ -23,6 +23,9 @@ Wed Mar 17 18:20:24 1999  David S. Miller  <davem@redhat.com>\n \n Wed Mar 17 14:51:19 1999  Richard Henderson  <rth@cygnus.com>\n \n+\t* flow.c (compute_immediate_dominators): New function.\n+\t* basic-block.h (compute_immediate_dominators): Declare it.\n+\n \t* alpha.h (HARD_REGNO_MODE_OK): Allow only 4 and 8 byte unit modes\n \tin FP regs.\n \t(MODES_TIEABLE_P): Define asymmetricly wrt modes illegal in FP regs."}, {"sha": "378577f1753950b2ebf1195bc6c158cb4696bed6", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/422d0fb02b54499db4147cd9f65e7fe01ecf36b2/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/422d0fb02b54499db4147cd9f65e7fe01ecf36b2/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=422d0fb02b54499db4147cd9f65e7fe01ecf36b2", "patch": "@@ -249,3 +249,4 @@ extern void compute_preds_succs\t\tPROTO ((int_list_ptr *, int_list_ptr *,\n extern void compute_dominators\t\tPROTO ((sbitmap *, sbitmap *,\n \t\t\t\t\t\tint_list_ptr *,\n \t\t\t\t\t\tint_list_ptr *));\n+extern void compute_immediate_dominators\tPROTO ((int *, sbitmap *));"}, {"sha": "267529639313fae3f1b919b8e5c3b4fa3aba44bc", "filename": "gcc/flow.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/422d0fb02b54499db4147cd9f65e7fe01ecf36b2/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/422d0fb02b54499db4147cd9f65e7fe01ecf36b2/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=422d0fb02b54499db4147cd9f65e7fe01ecf36b2", "patch": "@@ -4560,6 +4560,46 @@ compute_dominators (dominators, post_dominators, s_preds, s_succs)\n   free (temp_bitmap);\n }\n \n+/* Given DOMINATORS, compute the immediate dominators into IDOM.  */\n+\n+void\n+compute_immediate_dominators (idom, dominators)\n+     int *idom;\n+     sbitmap *dominators;\n+{\n+  sbitmap *tmp;\n+  int b;\n+\n+  tmp = sbitmap_vector_alloc (n_basic_blocks, n_basic_blocks);\n+\n+  /* Begin with tmp(n) = dom(n) - { n }.  */\n+  for (b = n_basic_blocks; --b >= 0; )\n+    {\n+      sbitmap_copy (tmp[b], dominators[b]);\n+      RESET_BIT (tmp[b], b);\n+    }\n+\n+  /* Subtract out all of our dominator's dominators.  */\n+  for (b = n_basic_blocks; --b >= 0; )\n+    {\n+      sbitmap tmp_b = tmp[b];\n+      int s;\n+\n+      for (s = n_basic_blocks; --s >= 0; )\n+\tif (TEST_BIT (tmp_b, s))\n+\t  sbitmap_difference (tmp_b, tmp_b, tmp[s]);\n+    }\n+\n+  /* Find the one bit set in the bitmap and put it in the output array.  */\n+  for (b = n_basic_blocks; --b >= 0; )\n+    {\n+      int t;\n+      EXECUTE_IF_SET_IN_SBITMAP (tmp[b], 0, t, { idom[b] = t; });\n+    }\n+\n+  sbitmap_vector_free (tmp);\n+}\n+\n /* Count for a single SET rtx, X.  */\n \n static void"}]}