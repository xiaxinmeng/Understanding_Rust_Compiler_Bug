{"sha": "aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWExYjBmOGNjNzM5OWUyNzZhMmZlOTU0NWZlZTVkNGFmMWM2Y2NkOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-01-29T04:18:00Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-01-29T04:18:00Z"}, "message": "cccp.c (eprint_string): Constify a char*.\n\n        * cccp.c (eprint_string): Constify a char*.\n        (notice): Likewise.  Use PVPROTO not VPROTO, add ATTRIBUTE_PRINTF_1.\n        (vnotice): Constify a char*.\n        (error): Likewise.  Use PVPROTO not VPROTO, add ATTRIBUTE_PRINTF_1.\n        (verror): Constify a char*.\n        (warning): Likewise.  Use PVPROTO not VPROTO, add ATTRIBUTE_PRINTF_1.\n        (vwarning): Constify a char*.\n        (error_with_line): Likewise.  Use PVPROTO not VPROTO, add\n        ATTRIBUTE_PRINTF_2.\n        (verror_with_line): Constify a char*.\n        (vwarning_with_line): Likewise.\n        (warning_with_line): Likewise.  Use PVPROTO not VPROTO, add\n        ATTRIBUTE_PRINTF_2.\n        (pedwarn): Constify a char*.  Use PVPROTO not VPROTO, add\n        ATTRIBUTE_PRINTF_1.\n        (pedwarn_with_line): Likewise with ATTRIBUTE_PRINTF_2.\n        (pedwarn_with_file_and_line): Likewise with ATTRIBUTE_PRINTF_4.\n        Also correct typo in parameter name declaration.\n        (make_assertion): Constify a char*.\n        (quote_string_for_make): Likewise.\n        (deps_output): Likewise.\n        (fatal): Likewise.  Use PVPROTO not VPROTO, add\n        ATTRIBUTE_PRINTF_1.  Use ATTRIBUTE_NORETURN not an explicit\n        \"__attribute__ ((noreturn))\".\n        (fancy_abort): Likewise for ATTRIBUTE_NORETURN.\n        (pfatal_with_name): Likewise.\n        (pipe_closed): Likewise.\n        (memory_full): Likewise.\n\nFrom-SVN: r24902", "tree": {"sha": "f92baf70cce21c385d0fa852e769d7bb1228e86a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f92baf70cce21c385d0fa852e769d7bb1228e86a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8/comments", "author": null, "committer": null, "parents": [{"sha": "61646a9769db0e88ef5a5b89acb4cb62aa784077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61646a9769db0e88ef5a5b89acb4cb62aa784077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61646a9769db0e88ef5a5b89acb4cb62aa784077"}], "stats": {"total": 159, "additions": 95, "deletions": 64}, "files": [{"sha": "1c67575a5c3c9dddf9ede27076a735381095605f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8", "patch": "@@ -1,3 +1,34 @@\n+Fri Jan 29 07:10:27 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* cccp.c (eprint_string): Constify a char*.\n+\t(notice): Likewise.  Use PVPROTO not VPROTO, add ATTRIBUTE_PRINTF_1.\n+\t(vnotice): Constify a char*.\n+\t(error): Likewise.  Use PVPROTO not VPROTO, add ATTRIBUTE_PRINTF_1.\n+\t(verror): Constify a char*.\n+\t(warning): Likewise.  Use PVPROTO not VPROTO, add ATTRIBUTE_PRINTF_1.\n+\t(vwarning): Constify a char*.\n+\t(error_with_line): Likewise.  Use PVPROTO not VPROTO, add\n+\tATTRIBUTE_PRINTF_2.\n+\t(verror_with_line): Constify a char*.\n+\t(vwarning_with_line): Likewise.\n+\t(warning_with_line): Likewise.  Use PVPROTO not VPROTO, add\n+\tATTRIBUTE_PRINTF_2.\n+\t(pedwarn): Constify a char*.  Use PVPROTO not VPROTO, add\n+\tATTRIBUTE_PRINTF_1.\n+\t(pedwarn_with_line): Likewise with ATTRIBUTE_PRINTF_2.\n+\t(pedwarn_with_file_and_line): Likewise with ATTRIBUTE_PRINTF_4.\n+\tAlso correct typo in parameter name declaration.\n+\t(make_assertion): Constify a char*.\n+\t(quote_string_for_make): Likewise.\n+\t(deps_output): Likewise.\n+\t(fatal): Likewise.  Use PVPROTO not VPROTO, add\n+\tATTRIBUTE_PRINTF_1.  Use ATTRIBUTE_NORETURN not an explicit\n+\t\"__attribute__ ((noreturn))\".\n+\t(fancy_abort): Likewise for ATTRIBUTE_NORETURN.\n+\t(pfatal_with_name): Likewise.\n+\t(pipe_closed): Likewise.\n+\t(memory_full): Likewise.\n+\n Fri Jan 29 00:14:55 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* loop.c (strength_reduce): Grow set_in_loop / n_times_set /"}, {"sha": "3c78f811fd8a14653489ff315d7c0b524dd2fa20", "filename": "gcc/cccp.c", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=aa1b0f8cc7399e276a2fe9545fee5d4af1c6ccd8", "patch": "@@ -894,7 +894,7 @@ static int ignore_srcdir;\n \f\n static int safe_read PROTO((int, char *, int));\n static void safe_write PROTO((int, char *, int));\n-static void eprint_string PROTO((char *, size_t));\n+static void eprint_string PROTO((const char *, size_t));\n \n int main PROTO((int, char **));\n \n@@ -985,20 +985,20 @@ static int discard_comments PROTO((U_CHAR *, int, int));\n static int change_newlines PROTO((U_CHAR *, int));\n \n static char *my_strerror PROTO((int));\n-static void notice VPROTO((char *, ...));\n-static void vnotice PROTO((char *, va_list));\n-void error VPROTO((char *, ...));\n-void verror PROTO((char *, va_list));\n+static void notice PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+static void vnotice PROTO((const char *, va_list));\n+void error PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+void verror PROTO((const char *, va_list));\n static void error_from_errno PROTO((char *));\n-void warning VPROTO((char *, ...));\n-static void vwarning PROTO((char *, va_list));\n-static void error_with_line VPROTO((int, char *, ...));\n-static void verror_with_line PROTO((int, char *, va_list));\n-static void vwarning_with_line PROTO((int, char *, va_list));\n-static void warning_with_line VPROTO((int, char *, ...));\n-void pedwarn VPROTO((char *, ...));\n-void pedwarn_with_line VPROTO((int, char *, ...));\n-static void pedwarn_with_file_and_line VPROTO((char *, size_t, int, char *, ...));\n+void warning PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+static void vwarning PROTO((const char *, va_list));\n+static void error_with_line PVPROTO((int, const char *, ...)) ATTRIBUTE_PRINTF_2;\n+static void verror_with_line PROTO((int, const char *, va_list));\n+static void vwarning_with_line PROTO((int, const char *, va_list));\n+static void warning_with_line PVPROTO((int, const char *, ...)) ATTRIBUTE_PRINTF_2;\n+void pedwarn PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+void pedwarn_with_line PVPROTO((int, const char *, ...)) ATTRIBUTE_PRINTF_2;\n+static void pedwarn_with_file_and_line PVPROTO((const char *, size_t, int, const char *, ...)) ATTRIBUTE_PRINTF_4;\n static void pedwarn_strange_white_space PROTO((int));\n \n static void print_containing_files PROTO((void));\n@@ -1022,21 +1022,21 @@ static void initialize_builtins PROTO((FILE_BUF *, FILE_BUF *));\n static void make_definition PROTO((char *));\n static void make_undef PROTO((char *, FILE_BUF *));\n \n-static void make_assertion PROTO((char *, char *));\n+static void make_assertion PROTO((const char *, const char *));\n \n static struct file_name_list *new_include_prefix PROTO((struct file_name_list *, const char *, const char *, const char *));\n static void append_include_chain PROTO((struct file_name_list *, struct file_name_list *));\n \n-static int quote_string_for_make PROTO((char *, char *));\n-static void deps_output PROTO((char *, int));\n+static int quote_string_for_make PROTO((char *, const char *));\n+static void deps_output PROTO((const char *, int));\n \n-static void fatal VPROTO((char *, ...)) __attribute__ ((noreturn));\n-void fancy_abort PROTO((void)) __attribute__ ((noreturn));\n+static void fatal PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void fancy_abort PROTO((void)) ATTRIBUTE_NORETURN;\n static void perror_with_name PROTO((char *));\n-static void pfatal_with_name PROTO((char *)) __attribute__ ((noreturn));\n-static void pipe_closed PROTO((int)) __attribute__ ((noreturn));\n+static void pfatal_with_name PROTO((char *)) ATTRIBUTE_NORETURN;\n+static void pipe_closed PROTO((int)) ATTRIBUTE_NORETURN;\n \n-static void memory_full PROTO((void)) __attribute__ ((noreturn));\n+static void memory_full PROTO((void)) ATTRIBUTE_NORETURN;\n static void print_help PROTO((void));\n \f\n /* Read LEN bytes at PTR from descriptor DESC, for file FILENAME,\n@@ -1118,7 +1118,7 @@ safe_write (desc, ptr, len)\n \n static void\n eprint_string (string, length)\n-     char *string;\n+     const char *string;\n      size_t length;\n {\n   size_t segment_length;\n@@ -9369,17 +9369,17 @@ my_strerror (errnum)\n /* notice - output message to stderr */\n \n static void\n-notice VPROTO ((char * msgid, ...))\n+notice VPROTO ((const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n-  char * msgid;\n+  const char * msgid;\n #endif\n   va_list args;\n \n   VA_START (args, msgid);\n \n #ifndef ANSI_PROTOTYPES\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n  \n   vnotice (msgid, args);\n@@ -9388,7 +9388,7 @@ notice VPROTO ((char * msgid, ...))\n \n static void\n vnotice (msgid, args)\n-     char *msgid;\n+     const char *msgid;\n      va_list args;\n {\n   vfprintf (stderr, _(msgid), args);\n@@ -9397,17 +9397,17 @@ vnotice (msgid, args)\n /* error - print error message and increment count of errors.  */\n \n void\n-error VPROTO ((char * msgid, ...))\n+error VPROTO ((const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n-  char * msgid;\n+  const char * msgid;\n #endif\n   va_list args;\n \n   VA_START (args, msgid);\n \n #ifndef ANSI_PROTOTYPES\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n  \n   verror (msgid, args);\n@@ -9416,7 +9416,7 @@ error VPROTO ((char * msgid, ...))\n \n void\n verror (msgid, args)\n-     char *msgid;\n+     const char *msgid;\n      va_list args;\n {\n   int i;\n@@ -9470,17 +9470,17 @@ error_from_errno (name)\n /* Print error message but don't count it.  */\n \n void\n-warning VPROTO ((char * msgid, ...))\n+warning VPROTO ((const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n-  char * msgid;\n+  const char * msgid;\n #endif\n   va_list args;\n \n   VA_START (args, msgid);\n \n #ifndef ANSI_PROTOTYPES\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n \n   vwarning (msgid, args);\n@@ -9489,7 +9489,7 @@ warning VPROTO ((char * msgid, ...))\n \n static void\n vwarning (msgid, args)\n-     char *msgid;\n+     const char *msgid;\n      va_list args;\n {\n   int i;\n@@ -9519,19 +9519,19 @@ vwarning (msgid, args)\n }\n \n static void\n-error_with_line VPROTO ((int line, char * msgid, ...))\n+error_with_line VPROTO ((int line, const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   int line;\n-  char * msgid;\n+  const char * msgid;\n #endif\n   va_list args;\n \n   VA_START (args, msgid);\n \n #ifndef ANSI_PROTOTYPES\n   line = va_arg (args, int);\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n \n   verror_with_line (line, msgid, args);\n@@ -9542,7 +9542,7 @@ error_with_line VPROTO ((int line, char * msgid, ...))\n static void\n verror_with_line (line, msgid, args)\n      int line;\n-     char *msgid;\n+     const char *msgid;\n      va_list args;\n {\n   int i;\n@@ -9566,19 +9566,19 @@ verror_with_line (line, msgid, args)\n }\n \n static void\n-warning_with_line VPROTO ((int line, char * msgid, ...))\n+warning_with_line VPROTO ((int line, const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   int line;\n-  char * msgid;\n+  const char * msgid;\n #endif\n   va_list args;\n \n   VA_START (args, msgid);\n \n #ifndef ANSI_PROTOTYPES\n   line = va_arg (args, int);\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n \n   vwarning_with_line (line, msgid, args);\n@@ -9588,7 +9588,7 @@ warning_with_line VPROTO ((int line, char * msgid, ...))\n static void\n vwarning_with_line (line, msgid, args)\n      int line;\n-     char *msgid;\n+     const char *msgid;\n      va_list args;\n {\n   int i;\n@@ -9620,17 +9620,17 @@ vwarning_with_line (line, msgid, args)\n /* Print an error message and maybe count it.  */\n \n void\n-pedwarn VPROTO ((char * msgid, ...))\n+pedwarn VPROTO ((const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n-  char * msgid;\n+  const char * msgid;\n #endif\n   va_list args;\n \n   VA_START (args, msgid);\n \n #ifndef ANSI_PROTOTYPES\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n \n   if (pedantic_errors)\n@@ -9641,19 +9641,19 @@ pedwarn VPROTO ((char * msgid, ...))\n }\n \n void\n-pedwarn_with_line VPROTO ((int line, char * msgid, ...))\n+pedwarn_with_line VPROTO ((int line, const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   int line;\n-  char * msgid;\n+  const char * msgid;\n #endif\n   va_list args;\n \n   VA_START (args, msgid);\n \n #ifndef ANSI_PROTOTYPES\n   line = va_arg (args, int);\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n \n   if (pedantic_errors)\n@@ -9667,14 +9667,14 @@ pedwarn_with_line VPROTO ((int line, char * msgid, ...))\n    giving specified file name and line number, not current.  */\n \n static void\n-pedwarn_with_file_and_line VPROTO ((char *file, size_t file_len, int line,\n-\t\t\t\t    char * msgid, ...))\n+pedwarn_with_file_and_line VPROTO ((const char *file, size_t file_len, int line,\n+\t\t\t\t    const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n-  char *file;\n+  const char *file;\n   size_t file_len;\n   int line;\n-  char * msg;\n+  const char * msgid;\n #endif\n   va_list args;\n \n@@ -9684,10 +9684,10 @@ pedwarn_with_file_and_line VPROTO ((char *file, size_t file_len, int line,\n   VA_START (args, msgid);\n  \n #ifndef ANSI_PROTOTYPES\n-  file = va_arg (args, char *);\n+  file = va_arg (args, const char *);\n   file_len = va_arg (args, size_t);\n   line = va_arg (args, int);\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n  \n   if (file) {\n@@ -10419,8 +10419,8 @@ make_undef (str, op)\n \n static void\n make_assertion (option, str)\n-     char *option;\n-     char *str;\n+     const char *option;\n+     const char *str;\n {\n   FILE_BUF *ip;\n   struct directive *kt;\n@@ -10615,9 +10615,9 @@ append_include_chain (first, last)\n static int\n quote_string_for_make (dst, src)\n      char *dst;\n-     char *src;\n+     const char *src;\n {\n-  char *p = src;\n+  const char *p = src;\n   int i = 0;\n   for (;;)\n     {\n@@ -10634,7 +10634,7 @@ quote_string_for_make (dst, src)\n \t       preceded by 2N backslashes represents N backslashes at\n \t       the end of a file name; and backslashes in other\n \t       contexts should not be doubled.  */\n-\t    char *q;\n+\t    const char *q;\n \t    for (q = p - 1; src < q && q[-1] == '\\\\';  q--)\n \t      {\n \t\tif (dst)\n@@ -10677,7 +10677,7 @@ quote_string_for_make (dst, src)\n \n static void\n deps_output (string, spacer)\n-     char *string;\n+     const char *string;\n      int spacer;\n {\n   int size = quote_string_for_make ((char *) 0, string);\n@@ -10716,18 +10716,18 @@ deps_output (string, spacer)\n }\n \f\n static void\n-fatal VPROTO ((char * msgid, ...))\n+fatal VPROTO ((const char * msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n-  char * msgid;\n+  const char * msgid;\n #endif\n   va_list args;\n \n   fprintf (stderr, \"%s: \", progname);\n   VA_START (args, msgid);\n \n #ifndef ANSI_PROTOTYPES\n-  msgid = va_arg (args, char *);\n+  msgid = va_arg (args, const char *);\n #endif\n   vnotice (msgid, args);\n   va_end (args);"}]}