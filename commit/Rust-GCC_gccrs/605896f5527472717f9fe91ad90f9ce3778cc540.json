{"sha": "605896f5527472717f9fe91ad90f9ce3778cc540", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA1ODk2ZjU1Mjc0NzI3MTdmOWZlOTFhZDkwZjljZTM3NzhjYzU0MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-03-25T11:59:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-03-25T11:59:19Z"}, "message": "passes.c (init_optimization_passes): Add FRE pass after early SRA.\n\n2011-03-25  Richard Guenther  <rguenther@suse.de>\n\n\t* passes.c (init_optimization_passes): Add FRE pass after\n\tearly SRA.\n\n\t* g++.dg/tree-ssa/pr41186.C: Scan the appropriate FRE dump.\n\t* g++.dg/tree-ssa/pr8781.C: Likewise.\n\t* gcc.dg/ipa/ipa-pta-13.c: Likewise.\n\t* gcc.dg/ipa/ipa-pta-3.c: Likewise.\n\t* gcc.dg/ipa/ipa-pta-4.c: Likewise.\n\t* gcc.dg/tree-ssa/20041122-1.c: Likewise.\n\t* gcc.dg/tree-ssa/alias-18.c: Likewise.\n\t* gcc.dg/tree-ssa/foldstring-1.c: Likewise.\n\t* gcc.dg/tree-ssa/forwprop-10.c: Likewise.\n\t* gcc.dg/tree-ssa/forwprop-9.c: Likewise.\n\t* gcc.dg/tree-ssa/fre-vce-1.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre6.c: Likewise.\n\t* gcc.dg/tree-ssa/pr21574.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-dom-cse-1.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-1.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-11.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-12.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-13.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-14.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-15.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-16.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-17.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-18.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-19.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-21.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-22.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-23.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-24.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-25.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-26.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-27.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-3.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-4.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-5.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-6.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-7.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-8.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-9.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-10.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-26.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-7.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-8.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-9.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-sccvn-1.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-sccvn-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-sccvn-3.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-sccvn-4.c: Likewise.\n\t* gcc.dg/tree-ssa/struct-aliasing-1.c: Likewise.\n\t* gcc.dg/tree-ssa/struct-aliasing-2.c: Likewise.\n\t* c-c++-common/pr46562-2.c: Likewise.\n\t* gfortran.dg/pr42108.f90: Likewise.\n\t* gcc.dg/torture/pta-structcopy-1.c: Scan ealias dump, force\n\tfoo to be inlined even at -O1.\n\t* gcc.dg/tree-ssa/ssa-dce-4.c: Disable FRE.\n\t* gcc.dg/ipa/ipa-pta-14.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-fre-1.c: Adjust.\n\t* gcc.dg/matrix/matrix.exp: Disable FRE.\n\nFrom-SVN: r171450", "tree": {"sha": "1872a4a1b8b92d7e2f7eb6735d0c8d146bb1d86a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1872a4a1b8b92d7e2f7eb6735d0c8d146bb1d86a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/605896f5527472717f9fe91ad90f9ce3778cc540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/605896f5527472717f9fe91ad90f9ce3778cc540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/605896f5527472717f9fe91ad90f9ce3778cc540", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/605896f5527472717f9fe91ad90f9ce3778cc540/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7baa7c1308787e9b4b0c89bcaeeae33b7c81ad9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7baa7c1308787e9b4b0c89bcaeeae33b7c81ad9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7baa7c1308787e9b4b0c89bcaeeae33b7c81ad9f"}], "stats": {"total": 430, "additions": 250, "deletions": 180}, "files": [{"sha": "15b5b0c167a816c04010569633229aabf3eeab78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,3 +1,8 @@\n+2011-03-25  Richard Guenther  <rguenther@suse.de>\n+\n+\t* passes.c (init_optimization_passes): Add FRE pass after\n+\tearly SRA.\n+\n 2011-03-25  Bernd Schmidt  <bernds@codesourcery.com>\n \t    Andrew Stubbs  <ams@codesourcery.com>\n "}, {"sha": "852b655e7c6c475c6c03f427bea624d81af8f560", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -762,6 +762,7 @@ init_optimization_passes (void)\n \t     locals into SSA form if possible.  */\n \t  NEXT_PASS (pass_build_ealias);\n \t  NEXT_PASS (pass_sra_early);\n+\t  NEXT_PASS (pass_fre);\n \t  NEXT_PASS (pass_copy_prop);\n \t  NEXT_PASS (pass_merge_phi);\n \t  NEXT_PASS (pass_cd_dce);"}, {"sha": "539fc12f790f3774ba20ff906cf87cd83499ecf9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,3 +1,64 @@\n+2011-03-25  Richard Guenther  <rguenther@suse.de>\n+ \n+\t* g++.dg/tree-ssa/pr41186.C: Scan the appropriate FRE dump.\n+\t* g++.dg/tree-ssa/pr8781.C: Likewise.\n+\t* gcc.dg/ipa/ipa-pta-13.c: Likewise.\n+\t* gcc.dg/ipa/ipa-pta-3.c: Likewise.\n+\t* gcc.dg/ipa/ipa-pta-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/20041122-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/alias-18.c: Likewise.\n+\t* gcc.dg/tree-ssa/foldstring-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/forwprop-10.c: Likewise.\n+\t* gcc.dg/tree-ssa/forwprop-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/fre-vce-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre6.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr21574.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-dom-cse-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-11.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-12.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-13.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-14.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-15.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-16.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-17.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-18.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-19.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-21.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-22.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-23.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-24.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-25.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-26.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-27.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-6.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-7.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-8.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-10.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-26.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-7.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-8.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-sccvn-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-sccvn-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-sccvn-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-sccvn-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/struct-aliasing-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/struct-aliasing-2.c: Likewise.\n+\t* c-c++-common/pr46562-2.c: Likewise.\n+\t* gfortran.dg/pr42108.f90: Likewise.\n+\t* gcc.dg/torture/pta-structcopy-1.c: Scan ealias dump, force\n+\tfoo to be inlined even at -O1.\n+\t* gcc.dg/tree-ssa/ssa-dce-4.c: Disable FRE.\n+\t* gcc.dg/ipa/ipa-pta-14.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-1.c: Adjust.\n+\t* gcc.dg/matrix/matrix.exp: Disable FRE.\n+\n 2011-03-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/48204"}, {"sha": "45bf5cf71957ebe16a78d586de6fe1e3dae2cec9", "filename": "gcc/testsuite/c-c++-common/pr46562-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr46562-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr46562-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr46562-2.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-ccp -fno-tree-forwprop -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fno-tree-ccp -fno-tree-forwprop -fdump-tree-fre1\" } */\n \n static const int a[4] = {};\n int foo(void)\n@@ -9,5 +9,5 @@ int foo(void)\n   return *p;\n }\n \n-/* { dg-final { scan-tree-dump \"= 0;\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"= 0;\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "8739ae9e6d5f74d304084fec48ac45ce2451c1cd", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr41186.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr41186.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr41186.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr41186.C?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n struct Foo {\n   Foo() {};\n@@ -29,7 +29,7 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced b1.b with 1\" \"fre\" } } */\n-/* { dg-final { scan-tree-dump \"Replaced b1.i with 0\" \"fre\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump \"Replaced b1.f with 1\" \"fre\" { xfail *-*-* } } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced b1.b with 1\" \"fre1\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced b1.i with 0\" \"fre1\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump \"Replaced b1.f with 1\" \"fre1\" { xfail *-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "fc5f44394d9b42ae36d21ff27ae52c2d69d7ddce", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr8781.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr8781.C?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n int f();\n \n@@ -24,5 +24,5 @@ int x()\n \n /* We should optimize this to a direct call.  */\n \n-/* { dg-final { scan-tree-dump \"Replacing call target with f\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replacing call target with f\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "0f46e984bce61cedbf4b410f473bfb7a850ba077", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-pta-13.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-13.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-options \"-O2 -fipa-pta -fdump-ipa-pta-details -fdump-tree-fre\" } */\n+/* { dg-options \"-O2 -fipa-pta -fdump-ipa-pta-details -fdump-tree-fre2\" } */\n \n static int x, y;\n \n@@ -54,9 +54,9 @@ int main()\n   local_address_taken (&y);\n   /* As we are computing flow- and context-insensitive we may not\n      CSE the load of x here.  */\n-  /* { dg-final { scan-tree-dump \" = x;\" \"fre\" } } */\n+  /* { dg-final { scan-tree-dump \" = x;\" \"fre2\" } } */\n   return x;\n }\n \n /* { dg-final { cleanup-ipa-dump \"pta\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre2\" } } */"}, {"sha": "e8abc3244a0640d97b1305a2f293b4178827d470", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-pta-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-14.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fipa-pta -fno-tree-sra -fdump-ipa-pta-details\" } */\n+/* { dg-options \"-O2 -fipa-pta -fno-tree-fre -fno-tree-sra -fdump-ipa-pta-details\" } */\n \n struct X {\n     int i;"}, {"sha": "ce9393cb0724f545151518f9786ce68c5b79c836", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-pta-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-3.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fipa-pta -fdump-ipa-pta-details -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O2 -fipa-pta -fdump-ipa-pta-details -fdump-tree-fre2-details\" } */\n \n static int __attribute__((noinline,noclone))\n foo (int *p, int *q)\n@@ -23,6 +23,6 @@ int main()\n \n /* { dg-final { scan-ipa-dump \"foo.arg0 = &a\" \"pta\" } } */\n /* { dg-final { scan-ipa-dump \"foo.arg1 = &b\" \"pta\" } } */\n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_1\\\\\\(D\\\\\\) with 1\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_1\\\\\\(D\\\\\\) with 1\" \"fre2\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre2\" } } */\n /* { dg-final { cleanup-ipa-dump \"pta\" } } */"}, {"sha": "32e1e4fbc4911826538b0ae181b39174cb1d7dd7", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-pta-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-4.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fipa-pta -fdump-ipa-pta-details -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O2 -fipa-pta -fdump-ipa-pta-details -fdump-tree-fre2-details\" } */\n \n int a, b;\n \n@@ -28,6 +28,6 @@ int main()\n \n /* { dg-final { scan-ipa-dump \"foo.arg0 = &a\" \"pta\" } } */\n /* { dg-final { scan-ipa-dump \"foo.arg1 = &b\" \"pta\" } } */\n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_1\\\\\\(D\\\\\\) with 1\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_1\\\\\\(D\\\\\\) with 1\" \"fre2\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre2\" } } */\n /* { dg-final { cleanup-ipa-dump \"pta\" } } */"}, {"sha": "aae1988314328aadb3de9cd1960d7f5c004ad7d2", "filename": "gcc/testsuite/gcc.dg/matrix/matrix.exp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmatrix%2Fmatrix.exp?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -20,7 +20,7 @@\n load_lib gcc-dg.exp\n load_lib target-supports.exp\n \n-set DEFAULT_MATCFLAGS \"-O3 -fipa-matrix-reorg -fdump-ipa-matrix-reorg -fwhole-program\"\n+set DEFAULT_MATCFLAGS \"-O3 -fipa-matrix-reorg -fdump-ipa-matrix-reorg -fwhole-program -fno-tree-fre\"\n \n # Initialize `dg'.\n dg-init\n@@ -52,8 +52,8 @@ load_lib profopt.exp\n # These are globals used by profopt-execute.  The first is options\n # needed to generate profile data, the second is options to use the\n # profile data.\n-set profile_option \"-fprofile-generate -O3\"\n-set feedback_option \"-fprofile-use -fipa-matrix-reorg -fdump-ipa-matrix-reorg -O3 -fwhole-program\"\n+set profile_option \"-fprofile-generate -O3 -fno-tree-fre\"\n+set feedback_option \"-fprofile-use -fipa-matrix-reorg -fdump-ipa-matrix-reorg -O3 -fwhole-program -fno-tree-fre\"\n \n foreach src [lsort [glob -nocomplain $srcdir/$subdir/transpose-*.c]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "5dc041b0eddbbd312d4111415ef54ca449299d1d", "filename": "gcc/testsuite/gcc.dg/torture/pta-structcopy-1.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpta-structcopy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpta-structcopy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpta-structcopy-1.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-fno-tree-sra -fdump-tree-alias\" } */\n+/* { dg-options \"-fdump-tree-ealias\" } */\n /* { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n struct X\n@@ -12,10 +12,11 @@ struct X\n     } y;\n };\n int i;\n-static int\n+static int __attribute__((always_inline))\n foo (struct X *x)\n {\n   struct Y y = x->y;\n+  /* In the inlined instance the dereferenced pointer needs to point to i.  */\n   *y.p = 0;\n   i = 1;\n   return *y.p;\n@@ -30,5 +31,5 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"points-to vars: { i }\" \"alias\" } } */\n-/* { dg-final { cleanup-tree-dump \"alias\" } } */\n+/* { dg-final { scan-tree-dump \"points-to vars: { i }\" \"ealias\" } } */\n+/* { dg-final { cleanup-tree-dump \"ealias\" } } */"}, {"sha": "5e6828b6f4f21efaa24cdb7dbdb16894b19844eb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20041122-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041122-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041122-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20041122-1.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fstrict-aliasing -fdump-tree-fre\" } */\n+/* { dg-options \"-O1 -fstrict-aliasing -fdump-tree-fre1\" } */\n \n __extension__ typedef __SIZE_TYPE__ size_t;\n extern void *xmalloc (size_t) __attribute__ ((__malloc__));\n@@ -34,5 +34,5 @@ find_unreachable_blocks (void)\n    able to determine that modifying e->dest->flags does not\n    modify e or e->dest if we can assert strict-aliasing rules.\n    The net result is that we only need one load of e->dest.  */\n-/* { dg-final { scan-tree-dump-times \"->dest\" 1 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"->dest\" 1 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "69c2e23c915776cf8243e46151fc6aed7c74970d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-18.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-18.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-fre-details -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1-details -fdump-tree-optimized\" } */\n \n struct A {\n   int i;\n@@ -76,15 +76,15 @@ int test8 (struct A *p, int *q)\n   return *q;\n }\n \n-/* { dg-final { scan-tree-dump \"with 0\" \"fre\" } } */\n-/* { dg-final { scan-tree-dump \"with 1\" \"fre\" } } */\n-/* { dg-final { scan-tree-dump \"with 3\" \"fre\" } } */\n-/* { dg-final { scan-tree-dump \"with 4\" \"fre\" } } */\n-/* { dg-final { scan-tree-dump \"with 5\" \"fre\" } } */\n-/* { dg-final { scan-tree-dump \"with 8\" \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"with 0\" \"fre1\" } } */\n+/* { dg-final { scan-tree-dump \"with 1\" \"fre1\" } } */\n+/* { dg-final { scan-tree-dump \"with 3\" \"fre1\" } } */\n+/* { dg-final { scan-tree-dump \"with 4\" \"fre1\" } } */\n+/* { dg-final { scan-tree-dump \"with 5\" \"fre1\" } } */\n+/* { dg-final { scan-tree-dump \"with 8\" \"fre1\" } } */\n /* { dg-final { scan-tree-dump-not \"return 2;\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"return 6;\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"return 7;\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-not \"return -1;\" \"optimized\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "3cfe44d1bd252cb2d786b71be6549e100026d558", "filename": "gcc/testsuite/gcc.dg/tree-ssa/foldstring-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldstring-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldstring-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffoldstring-1.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-fre\" } */\n+/* { dg-options \"-O1 -fdump-tree-fre1\" } */\n \n void\n arf ()\n {\n   if (\"\"[0] == 0)\n     blah ();\n }\n-/* { dg-final { scan-tree-dump-times \"= 0;\" 1 \"fre\"} } */ \n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"= 0;\" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "5ca8060c8b333cfd87b241741d1525118dc7f5cd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-10.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n int b;\n unsigned a;\n@@ -18,5 +18,5 @@ void test2(void)\n    conversion to int.  FRE should then be able to replace\n    the rhs of the store to b by 1.  */\n \n-/* { dg-final { scan-tree-dump \"Replaced\\[^\\\\n\\]*with 1\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced\\[^\\\\n\\]*with 1\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "d02a62d3d34ff4b2ef8ef754f80f869411a39511", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-9.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-9.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-optimized -fdump-tree-fre -W -Wall -fno-early-inlining\" } */\n+/* { dg-options \"-O1 -fdump-tree-optimized -fdump-tree-fre1 -W -Wall -fno-early-inlining\" } */\n \n int b;\n unsigned a;\n@@ -16,6 +16,6 @@ void f(void)\n /* We should have converted the assignments to two = 1.  FRE does this.  */\n \n /* { dg-final { scan-tree-dump-times \" = 1\" 2 \"optimized\"} } */\n-/* { dg-final { scan-tree-dump-not \" = a;\" \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-not \" = a;\" \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "c6c142b4eafce6d45022e8d769ca7fd016314a80", "filename": "gcc/testsuite/gcc.dg/tree-ssa/fre-vce-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-options \"-O2 -fdump-tree-fre -w\" } */\n-/* { dg-options \"-O2 -fdump-tree-fre -w -msse\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fdump-tree-fre1 -w\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1 -w -msse\" { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-do compile } */\n #define vector __attribute__((vector_size(sizeof(int)*4) ))\n struct s { vector int i; };\n@@ -32,6 +32,6 @@ void a2 (struct s1 sv, int i)\n   g(&sv, *(float*)&sv.i);\n }\n \n-/* { dg-final { scan-tree-dump-times \"sv_\\[0-9\\]\\\\\\(D\\\\\\)->i\" 2 \"fre\" } } */\n-/* { dg-final { scan-tree-dump-times \"sv.i\" 2 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"sv_\\[0-9\\]\\\\\\(D\\\\\\)->i\" 2 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \"sv.i\" 2 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "6fc2a57a9f2b190247b2ff10e4aa99d394e5a19f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre6.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre6.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-pre-stats -fdump-tree-fre\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -fdump-tree-fre1\" } */\n #include <stddef.h>\n \n union tree_node;\n@@ -73,8 +73,8 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-not \"= unexpanded_var_list;\" \"fre\" } } */\n+/* { dg-final { scan-tree-dump-not \"= unexpanded_var_list;\" \"fre1\" } } */\n /* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"pre\" } } */\n /* { dg-final { scan-tree-dump-times \"Insertions: 2\" 1 \"pre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */\n /* { dg-final { cleanup-tree-dump \"pre\" } } */"}, {"sha": "dcfa131510ccaf19786094781271f64cbcba89be", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21574.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21574.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21574.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21574.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n int\n foo (int *p)\n@@ -9,5 +9,5 @@ foo (int *p)\n }\n \n /* The store to *p should be propagated to the load statement.  */\n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_.\\\\\\(D\\\\\\) with 0\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\*p_.\\\\\\(D\\\\\\) with 0\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "261880cc240856012397e2cf8cf2fa08c28ff1a0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dce-4.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dce-4.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+/* { dg-options \"-O -fno-tree-fre -fdump-tree-cddce1\" } */\n \n int foo(int b)\n {\n@@ -14,5 +14,7 @@ int foo(int b)\n   return a[2] + b;\n }\n \n+/* Verify DCE removes all accesses to a but the last store and the\n+   read from a[2].  */\n /* { dg-final { scan-tree-dump-times \"a\\\\\\[\\[^\\n\\]\\\\\\]\" 2 \"cddce1\" } } */\n /* { dg-final { cleanup-tree-dump \"cddce1\" } } */"}, {"sha": "70a905819cd4a18d6a29a2b4a146039a08940353", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-cse-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-cse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-cse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-cse-1.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1-details\" } */\n int t(int a) __attribute__ ((const));\n void q (void);\n void\n@@ -12,5 +12,5 @@ threading(int a,int b)\n \t}\n }\n /* We should thread the jump twice and eliminate it.  */\n-/* { dg-final { scan-tree-dump-times \"Replaced.* t \" 1 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Replaced.* t \" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "2c859d5e850969497e9fc657ebce167898f759f4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-1.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n /* From PR27090.  */\n \n@@ -11,5 +11,5 @@ int f(int *a)\n   return *c + t;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\*a_\\[^\\n\\].*with t_\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\*c_\\[^\\n\\].*with t_\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "7bef07caff668c154e98a17a324494bb4a255144", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-11.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-11.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n struct\n {\n@@ -22,5 +22,5 @@ foo (int y)\n   return (x);\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced S\\\\\\[5\\\\\\].x with 4\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced S\\\\\\[5\\\\\\].x with 4\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "7bef07caff668c154e98a17a324494bb4a255144", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-12.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-12.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n struct\n {\n@@ -22,5 +22,5 @@ foo (int y)\n   return (x);\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced S\\\\\\[5\\\\\\].x with 4\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced S\\\\\\[5\\\\\\].x with 4\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "cfb72b8bcc5559f7e2525f07efeaf338559140a6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-13.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-13.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fstrict-aliasing -fno-tree-sra -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fstrict-aliasing -fno-tree-sra -fdump-tree-fre1-details\" } */\n \n /* Should be optimized, propagating &a into (*p)[i].  */\n \n@@ -23,5 +23,5 @@ void foo(double (*q)[4], struct Foo *tmp1)\n     }\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced tmp1_.\\\\\\(D\\\\\\)->data with &a\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced tmp1_.\\\\\\(D\\\\\\)->data with &a\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "2b677d5b598a9300f62b7f5fd6dc044ce3548750", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-14.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-14.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1-details\" } */\n \n /* Should be optimized, propagating &a into (*p)[i].  */\n \n@@ -27,5 +27,5 @@ void foo(double (*q)[4])\n   bar(a);\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced tmp1.data with &a\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced tmp1.data with &a\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "f24d0f6ab64bfcb862f296d71613fb65ed01473d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-15.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-15.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1-details\" } */\n \n /* Should be optimized, propagating &a into (*p)[i].  */\n \n@@ -26,5 +26,5 @@ void foo(double (*q)[4])\n   bar(a);\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "fa5f3719a251fb11fd4b4f6fe5044336119ef5a8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-16.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n \n /* FRE should be able to combine i and j and perform simplification\n    on the condition.  */\n@@ -14,5 +14,5 @@ int foo(int b, int c)\n     link_error ();\n }\n \n-/* { dg-final { scan-tree-dump-not \"link_error\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-not \"link_error\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "01f57ed7e5cd5e529445f7cd04c62ad086a7cfe9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-17.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-17.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details -fno-tree-sra\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details -fno-tree-sra\" } */\n \n struct Bar {\n   int dom;\n@@ -18,6 +18,6 @@ int foo(int i, int j, int k)\n   return f.doms[0LL].dom;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced f.doms\\\\\\[0\\\\\\].dom with i_\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced f.doms\\\\\\[0\\\\\\].dom with i_\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */\n "}, {"sha": "986fe0781ae754a33940017d4cdd82d50d1beed5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-18.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-18.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n \n struct a\n {\n@@ -24,5 +24,5 @@ int f(struct a *c)\n \n /* We should have CSEd the load from c->a.  */\n \n-/* { dg-final { scan-tree-dump-times \"c_.*\\\\\\.a\" 1 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"c_.*\\\\\\.a\" 1 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "c121832de63c5c33312c83b1966034ccaa5c244f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-19.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-19.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n \n struct a\n {\n@@ -27,5 +27,5 @@ int f(struct a *c)\n \n /* We should have CSEd the load from c->a.  */\n \n-/* { dg-final { scan-tree-dump-times \"c_.*\\\\\\.a\" 1 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"c_.*\\\\\\.a\" 1 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "9bf9525d50251dcf0add5ae53920fec4ebf0fad7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-2.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n /* From PR14287.  */\n \n@@ -14,5 +14,5 @@ foo (long a)\n   h = c;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(short int\\\\\\) c_.*with b_\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\(short int\\\\\\) c_.*with b_\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "219c0a926a63c65657e8f40db57552905977a0ea", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-21.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-21.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n \n struct f {\n   float a;\n@@ -22,5 +22,5 @@ void g(void)\n   h(a1, b, c, d);\n }\n \n-/* { dg-final { scan-tree-dump-not \"a\\\\\\.? = \" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-not \"a\\\\\\.? = \" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "3504d1041e9f67ced6999a0588a86554dbaa6738", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-22.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-22.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n \n int i;\n int foo (void)\n@@ -11,5 +11,5 @@ int foo (void)\n \n /* We should eliminate the redundant load of i.  */\n \n-/* { dg-final { scan-tree-dump-not \"= i;\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-not \"= i;\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "f21360824cdf2ae1303519a6014cf42e66972756", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-23.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-23.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n \n int f(int t, int a, int b)\n {\n@@ -17,5 +17,5 @@ int f(int t, int a, int b)\n   return c+d;\n }\n \n-/* { dg-final { scan-tree-dump-times \"PHI\" 1 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"PHI\" 1 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "c683218799df50ee9b61c35e63dbf6fb4739e147", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-24.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-24.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1\" } */\n \n int foo(void)\n {\n@@ -30,5 +30,5 @@ int bazzoo (void)\n   return b.i;\n }\n \n-/* { dg-final { scan-tree-dump-times \"= 0;\" 5 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"= 0;\" 5 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "e7723f9bc35b664bd8cb1d8d79dbafc9957efb04", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-25.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-25.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1\" } */\n \n struct X { int i; int j; };\n void bar (struct X *);\n@@ -14,5 +14,5 @@ int foo (struct X *p)\n \n /* We should optimize this to return 0.  */\n \n-/* { dg-final { scan-tree-dump \"= 0;\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"= 0;\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "81d9ea0fa8ed81e859b52e90646b3835111be46b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-26.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-26.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1-details\" } */\n \n union U {\n   float f;\n@@ -15,5 +15,5 @@ int foo (union U *p)\n }\n \n /* avr has 16 bit int and 32 bit float */\n-/* { dg-final { scan-tree-dump \"Replaced u.i with 0 in\" \"fre\" {xfail avr-*-* } } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced u.i with 0 in\" \"fre1\" {xfail avr-*-* } } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "ba0710171f2a38c4f3be81a56d0af2b5de01aeff", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-27.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-27.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n int *q;\n void __attribute__((noinline))\n@@ -21,5 +21,5 @@ int foo(int which_p)\n   return x;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced x with 0\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced x with 0\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "e68c9eb7bc43f92e01cbb47e2d0927e9e6390612", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -6,7 +6,7 @@\n    When the condition is true, we distribute \"(int) (a + b)\" as\n    \"(int) a + (int) b\", otherwise we keep the original.  */\n /* { dg-do compile { target { { ! mips64 } && { ! spu-*-* } } } } */\n-/* { dg-options \"-O -fwrapv -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fwrapv -fdump-tree-fre1-details\" } */\n \n /* From PR14844.  */\n \n@@ -18,5 +18,5 @@ foo (int a, int b)\n   return aa + bb;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(int\\\\\\) aa_.*with a_\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\(int\\\\\\) aa_.*with a_\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "b69b3f654d1fb77f53ce10b4f99b39ddeb5b04e2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-4.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,7 +1,7 @@\n /* If the target returns false for TARGET_PROMOTE_PROTOTYPES, then there\n    will be no casts for FRE to eliminate and the test will fail.  */\n /* { dg-do compile { target i?86-*-* x86_64-*-* hppa*-*-* mips*-*-* m68k*-*-* } } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n /* From PR21608.  */\n \n@@ -11,5 +11,5 @@ char bar(char f)\n         return wrap(f);\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(char\\\\\\) .*with \" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\(char\\\\\\) .*with \" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "2685d91b12e68d021430c33797373877c7cd8b5b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-5.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-5.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n /* From PR19792.  */\n \n@@ -10,5 +10,5 @@ bar (unsigned int t)\n   return a == t;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced \\\\\\(unsigned int\\\\\\) a_.*with t_\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced \\\\\\(unsigned int\\\\\\) a_.*with t_\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "65883cd14bdd23fbbceffaea80cb1f30bf505c5f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-6.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-6.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n  int i; int foo(void) { i = 2; int j = i * 2; int k = i + 2; return j == k; }\n-/* { dg-final { scan-tree-dump-times \"Replaced \" 5 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Replaced \" 5 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "a758efe5dda540e3e759f31ba2fca87545e062aa", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-7.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-details -fdump-tree-optimized\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1-details -fdump-tree-optimized\" } */\n #if (__SIZEOF_INT__ == __SIZEOF_FLOAT__)\n typedef int intflt;\n #elif (__SIZEOF_LONG__ == __SIZEOF_FLOAT__)\n@@ -29,10 +29,10 @@ intflt foo(intflt j)\n   return a.u.k;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Inserted pretmp\" 1 \"fre\" } } */\n-/* { dg-final { scan-tree-dump-times \"Replaced a.u.f with pretmp\" 3 \"fre\" } } */\n-/* { dg-final { scan-tree-dump-times \"Replaced a.u.k with j\" 1 \"fre\" } } */\n-/* { dg-final { scan-tree-dump \"= VIEW_CONVERT_EXPR<float>\\\\\\(j_\" \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Inserted pretmp\" 1 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Replaced a.u.f with pretmp\" 3 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Replaced a.u.k with j\" 1 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump \"= VIEW_CONVERT_EXPR<float>\\\\\\(j_\" \"fre1\" } } */\n /* { dg-final { scan-tree-dump \"return j\" \"optimized\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "d6ab2ef247f811c5c339ddcfbcfd3c2977c13f48", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1-details\" } */\n #if (__SIZEOF_INT__ == __SIZEOF_FLOAT__)\n typedef int intflt;\n #elif (__SIZEOF_LONG__ == __SIZEOF_FLOAT__)\n@@ -28,6 +28,6 @@ intflt foo(int i, int b)\n     }\n }\n \n-/* { dg-final { scan-tree-dump-times \"Replaced u.f with pretmp\" 2 \"fre\" } } */\n-/* { dg-final { scan-tree-dump-times \"Inserted pretmp\" 2 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Replaced u.f with pretmp\" 2 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Inserted pretmp\" 2 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "57c6d4b5be7f7aa3d6d6dd7ccad4c569df63a17a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-9.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-9.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre1-stats\" } */\n \n union loc {\n     unsigned reg;\n@@ -23,6 +23,6 @@ void __frame_state_for1 (volatile char *state_in)\n     }\n }\n \n-/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 2 \"fre\" } } */\n-/* { dg-final { scan-tree-dump-times \"Insertions: 1\" 2 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 2 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Insertions: 1\" 2 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "8cb1bebde43b1da970d24c09ed3356f180468bea", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-10.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre-stats\" } */\n-/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre-stats -fno-finite-math-only\" { target sh*-*-* } } */\n+/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre1-stats\" } */\n+/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre1-stats -fno-finite-math-only\" { target sh*-*-* } } */\n double cos (double);\n void link_error();\n void f(double a)\n@@ -11,5 +11,5 @@ void f(double a)\n     link_error();\n }\n \n-/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "7342c3361a83389f4265be2c13fe64d0df36b8e9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-26.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-26.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n \n typedef union\n {\n@@ -23,5 +23,5 @@ void foo(SA* pResult, SB* method, SC* self)\n     pResult->data = pResult->data;\n }\n \n-/* { dg-final { scan-tree-dump \"Deleted redundant store\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Deleted redundant store\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "bc7ca4e68e40b24858a0e73a9c96d3e7a1443a0a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-7.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-7.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre1-stats\" } */\n int\n foo (int *array)\n {\n@@ -8,5 +8,5 @@ foo (int *array)\n       return 0;\n }\n /* We should eliminate one load.  */\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "f08ef7fde60040a75088453180adfe78c47fa836", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-8.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre1-stats\" } */\n struct s {\n       int *n;\n };\n@@ -19,5 +19,5 @@ foo (__SIZE_TYPE__ i, struct s *array)\n /* We should eliminate two address calculations, and one load.  */\n /* We used to eliminate a cast but that was before POINTER_PLUS_EXPR\n    was added.  */\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 3\" 1 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 3\" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "4f88624ae19cd4da247b3bbcbf80f4315e9c004d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-9.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-9.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O2 -fno-tree-dominator-opts -fdump-tree-fre1-stats\" } */\n int\n foo (unsigned long a)\n {\n@@ -9,5 +9,5 @@ foo (unsigned long a)\n     return 1;\n   return 0;\n }\n-/* { dg-final { scan-tree-dump-times \"return 0;\" 0 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"return 0;\" 0 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "0cb027222fb4bab03fa4e6a3b3fd7076d8e7e18e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sccvn-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-1.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1-stats\" } */\n \n void vnum_test8(int *data) \n { \n@@ -17,5 +17,5 @@ void vnum_test8(int *data)\n   } \n } \n /* We should eliminate m - n, and set n = n + k into n = m. */\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 3\" 1 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 3\" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "b4c3c14a26516427a10ab42f61c7a21e4a19e5ce", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sccvn-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-2.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1-stats\" } */\n \n int vnum_test8(int *data) \n { \n@@ -21,5 +21,5 @@ int vnum_test8(int *data)\n } \n /* We should eliminate m - n, and set n = n + k into n = m, and\n    set p to 0 */\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 4\" 1 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 4\" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "fb266bb5417c783b6b0e9b4594f322dd8b0985d3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sccvn-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-3.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1-stats\" } */\n int main(int argc, char **argv)\n {\n   int *p;\n@@ -11,5 +11,5 @@ int main(int argc, char **argv)\n   return result;\n }\n /* We should eliminate result = *p by saying it has the value 2.  */\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "7f0a932973722d594372ed88b7f0464dc068176b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sccvn-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-4.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1-stats\" } */\n \n int vnum_test8(int *data) \n { \n@@ -23,5 +23,5 @@ int vnum_test8(int *data)\n } \n /* We should eliminate m - n, n + k, set data[5] = 0, eliminate the\n    address arithmetic for data[5], and set p = 0.\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 5\" 1 \"fre\"} } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 5\" 1 \"fre1\"} } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "495b7ba114e46ea6b6e84d8e7b381fadee9c060a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/struct-aliasing-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstruct-aliasing-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstruct-aliasing-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstruct-aliasing-1.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1-details\" } */\n \n struct S { float f; };\n int __attribute__((noinline))\n@@ -11,5 +11,5 @@ foo (float *r, struct S *p)\n   return i + *q;\n }\n \n-/* { dg-final { scan-tree-dump \"Replaced\\[^\\n\\]*with i_.\" \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump \"Replaced\\[^\\n\\]*with i_.\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "c348bdfe25b26b2d82761bc3a0700a20135f57e2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/struct-aliasing-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstruct-aliasing-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstruct-aliasing-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstruct-aliasing-2.c?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-fre\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1\" } */\n \n struct S { unsigned f; };\n \n@@ -14,6 +14,6 @@ foo ( struct S *p)\n \n /* There should only be one load of p->f because fwprop can change\n    *(int *)&p->f into just (int)p->f.  */\n-/* { dg-final { scan-tree-dump-times \"= \\[^\\n\\]*p_.\\\\\\(D\\\\\\)\" 1 \"fre\" } } */\n-/* { dg-final { cleanup-tree-dump \"fre\" } } */\n+/* { dg-final { scan-tree-dump-times \"= \\[^\\n\\]*p_.\\\\\\(D\\\\\\)\" 1 \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */\n "}, {"sha": "9a0a2532a78764635c4cf400a3a2fa487e41f493", "filename": "gcc/testsuite/gfortran.dg/pr42108.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605896f5527472717f9fe91ad90f9ce3778cc540/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90?ref=605896f5527472717f9fe91ad90f9ce3778cc540", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-O2 -fdump-tree-fre\" }\n+! { dg-options \"-O2 -fdump-tree-fre1\" }\n \n subroutine  eval(foo1,foo2,foo3,foo4,x,n,nnd)\n   implicit real*8 (a-h,o-z)\n@@ -23,5 +23,5 @@ end subroutine eval\n \n ! There should be only one load from n left\n \n-! { dg-final { scan-tree-dump-times \"\\\\*n_\" 1 \"fre\" } }\n-! { dg-final { cleanup-tree-dump \"fre\" } }\n+! { dg-final { scan-tree-dump-times \"\\\\*n_\" 1 \"fre1\" } }\n+! { dg-final { cleanup-tree-dump \"fre1\" } }"}]}