{"sha": "979c67a51051015451cf264cd7e1b19d780ca569", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc5YzY3YTUxMDUxMDE1NDUxY2YyNjRjZDdlMWIxOWQ3ODBjYTU2OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-02-15T08:12:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-02-15T08:12:02Z"}, "message": "i386.h (CLEAR_RATIO): Use MIN macro.\n\n\t* config/i386/i386.h (CLEAR_RATIO): Use MIN macro.\n\t(WIDEST_HARDWARE_FP_SIZE): Use LONG_DOUBLE_TYPE_SIZE define.\n\t* config/i386/darwin.h (PREFERRED_STACK_BOUNDARY): Use MAX macro\n\tand STACK_BOUNDARY define.\n\nFrom-SVN: r132333", "tree": {"sha": "8a8fb00d4fc3921c8caf5ccdeb7a33458be15a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8fb00d4fc3921c8caf5ccdeb7a33458be15a2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/979c67a51051015451cf264cd7e1b19d780ca569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979c67a51051015451cf264cd7e1b19d780ca569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/979c67a51051015451cf264cd7e1b19d780ca569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979c67a51051015451cf264cd7e1b19d780ca569/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a1f75881be4d133d2334707c26779bd72a4ecce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a1f75881be4d133d2334707c26779bd72a4ecce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a1f75881be4d133d2334707c26779bd72a4ecce"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "5e03e4998eb978f362dc6167d0caad1353f81a32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/979c67a51051015451cf264cd7e1b19d780ca569/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/979c67a51051015451cf264cd7e1b19d780ca569/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=979c67a51051015451cf264cd7e1b19d780ca569", "patch": "@@ -1,3 +1,10 @@\n+2008-02-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (CLEAR_RATIO): Use MIN macro.\n+\t(WIDEST_HARDWARE_FP_SIZE): Use LONG_DOUBLE_TYPE_SIZE define.\n+\t* config/i386/darwin.h (PREFERRED_STACK_BOUNDARY): Use MAX macro\n+\tand STACK_BOUNDARY define.\n+\n 2008-02-14  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR preprocessor/35061"}, {"sha": "6001f64b42a3ac74d32b8464ff49564cee50e75e", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/979c67a51051015451cf264cd7e1b19d780ca569/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/979c67a51051015451cf264cd7e1b19d780ca569/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=979c67a51051015451cf264cd7e1b19d780ca569", "patch": "@@ -81,9 +81,8 @@ along with GCC; see the file COPYING3.  If not see\n    than 128 bits for Darwin, but it's easier to up the alignment if\n    it's below the minimum.  */\n #undef PREFERRED_STACK_BOUNDARY\n-#define PREFERRED_STACK_BOUNDARY (ix86_preferred_stack_boundary > 128\t\\\n-\t\t\t\t  ? ix86_preferred_stack_boundary\t\\\n-\t\t\t\t  : 128)\n+#define PREFERRED_STACK_BOUNDARY\t\t\t\\\n+  MAX (STACK_BOUNDARY, ix86_preferred_stack_boundary)\n \n /* We want -fPIC by default, unless we're using -static to compile for\n    the kernel or some such.  */"}, {"sha": "78d6f10ca9b31b34eb3364e5f400688a9d1724fa", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/979c67a51051015451cf264cd7e1b19d780ca569/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/979c67a51051015451cf264cd7e1b19d780ca569/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=979c67a51051015451cf264cd7e1b19d780ca569", "patch": "@@ -21969,7 +21969,7 @@ ix86_register_move_cost (enum machine_mode mode, enum reg_class class1,\n        where integer modes in MMX/SSE registers are not tieable\n        because of missing QImode and HImode moves to, from or between\n        MMX/SSE registers.  */\n-    return MAX (ix86_cost->mmxsse_to_integer, 8);\n+    return MAX (8, ix86_cost->mmxsse_to_integer);\n \n   if (MAYBE_FLOAT_CLASS_P (class1))\n     return ix86_cost->fp_move;"}, {"sha": "fedac5643a4a8901a02414d1442b53e7a4c95b3b", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/979c67a51051015451cf264cd7e1b19d780ca569/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/979c67a51051015451cf264cd7e1b19d780ca569/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=979c67a51051015451cf264cd7e1b19d780ca569", "patch": "@@ -745,11 +745,6 @@ enum target_cpu_default\n   { \"cc1_cpu\",  CC1_CPU_SPEC },\t\t\t\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \f\n-/* target machine storage layout */\n-\n-#define LONG_DOUBLE_TYPE_SIZE 80\n-\n-#define WIDEST_HARDWARE_FP_SIZE 80\n \n /* Set the value of FLT_EVAL_METHOD in float.h.  When using only the\n    FPU, assume that the fpcw is set to extended precision; when using\n@@ -759,12 +754,17 @@ enum target_cpu_default\n #define TARGET_FLT_EVAL_METHOD \\\n   (TARGET_MIX_SSE_I387 ? -1 : TARGET_SSE_MATH ? 0 : 2)\n \n+/* target machine storage layout */\n+\n #define SHORT_TYPE_SIZE 16\n #define INT_TYPE_SIZE 32\n #define FLOAT_TYPE_SIZE 32\n #define LONG_TYPE_SIZE BITS_PER_WORD\n #define DOUBLE_TYPE_SIZE 64\n #define LONG_LONG_TYPE_SIZE 64\n+#define LONG_DOUBLE_TYPE_SIZE 80\n+\n+#define WIDEST_HARDWARE_FP_SIZE LONG_DOUBLE_TYPE_SIZE\n \n #if defined (TARGET_BI_ARCH) || TARGET_64BIT_DEFAULT\n #define MAX_BITS_PER_WORD 64\n@@ -1782,7 +1782,7 @@ typedef struct ix86_args {\n    All other eliminations are valid.  */\n \n #define CAN_ELIMINATE(FROM, TO) \\\n-  ((TO) == STACK_POINTER_REGNUM ? ! frame_pointer_needed : 1)\n+  ((TO) == STACK_POINTER_REGNUM ? !frame_pointer_needed : 1)\n \n /* Define the offset between two registers, one to be eliminated, and the other\n    its replacement, at the start of a routine.  */\n@@ -1985,8 +1985,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* If a clear memory operation would take CLEAR_RATIO or more simple\n    move-instruction sequences, we will do a clrmem or libcall instead.  */\n \n-#define CLEAR_RATIO (optimize_size ? 2 \\\n-\t\t     : ix86_cost->move_ratio > 6 ? 6 : ix86_cost->move_ratio)\n+#define CLEAR_RATIO (optimize_size ? 2 : MIN (6, ix86_cost->move_ratio))\n \n /* Define if shifts truncate the shift count\n    which implies one can omit a sign-extension or zero-extension"}]}