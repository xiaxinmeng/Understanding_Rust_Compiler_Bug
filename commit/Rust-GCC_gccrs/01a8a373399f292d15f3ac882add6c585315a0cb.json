{"sha": "01a8a373399f292d15f3ac882add6c585315a0cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFhOGEzNzMzOTlmMjkyZDE1ZjNhYzg4MmFkZDZjNTg1MzE1YTBjYg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-11-29T05:51:51Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-11-29T05:51:51Z"}, "message": "rs6000: Testcases for rl*i*\n\nThese testcases test that we generate the expected code for all of the\nrl*i* instructions, that is, rotate-and-mask and rotate-and-mask-insert\nfor immediate rotation counts.  All the testcases do rotate, shift left,\nas well as shift right; if that results in an instruction that does not\nexist the testcases generate a multiplication instead, so that we can\ndetect if this is handled properly.\n\nMany 32-bit instructions zero-extend their result properly in 64-bit\nmode, but the rs6000 port does not yet know.  These testcases test the\nstatus quo, so they will need updating when ever we handle this.\n\n\ngcc/testsuite/\n\t* gcc.target/powerpc/rldic-0.c: New testcase.\n\t* gcc.target/powerpc/rldic-1.c: New testcase.\n\t* gcc.target/powerpc/rldic-2.c: New testcase.\n\t* gcc.target/powerpc/rldicl-0.c: New testcase.\n\t* gcc.target/powerpc/rldicl-1.c: New testcase.\n\t* gcc.target/powerpc/rldicl-2.c: New testcase.\n\t* gcc.target/powerpc/rldicr-0.c: New testcase.\n\t* gcc.target/powerpc/rldicr-1.c: New testcase.\n\t* gcc.target/powerpc/rldicr-2.c: New testcase.\n\t* gcc.target/powerpc/rldicx.h: New file.\n\t* gcc.target/powerpc/rldimi-0.c: New testcase.\n\t* gcc.target/powerpc/rldimi-1.c: New testcase.\n\t* gcc.target/powerpc/rldimi-2.c: New testcase.\n\t* gcc.target/powerpc/rldimi.h: New file.\n\t* gcc.target/powerpc/rlwimi-0.c: New testcase.\n\t* gcc.target/powerpc/rlwimi-1.c: New testcase.\n\t* gcc.target/powerpc/rlwimi-2.c: New testcase.\n\t* gcc.target/powerpc/rlwimi.h: New file.\n\t* gcc.target/powerpc/rlwinm-0.c: New testcase.\n\t* gcc.target/powerpc/rlwinm-1.c: New testcase.\n\t* gcc.target/powerpc/rlwinm-2.c: New testcase.\n\t* gcc.target/powerpc/rlwinm.h: New file.\n\nFrom-SVN: r242951", "tree": {"sha": "684ce65515a5774707eab3eff41edf7185a420b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/684ce65515a5774707eab3eff41edf7185a420b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01a8a373399f292d15f3ac882add6c585315a0cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a8a373399f292d15f3ac882add6c585315a0cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01a8a373399f292d15f3ac882add6c585315a0cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a8a373399f292d15f3ac882add6c585315a0cb/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "452385a7205e963d02890bae566ba523a977c877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/452385a7205e963d02890bae566ba523a977c877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/452385a7205e963d02890bae566ba523a977c877"}], "stats": {"total": 736, "additions": 736, "deletions": 0}, "files": [{"sha": "b325e2c9d58cee53501cc4e77bedd536159c1f99", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -1,3 +1,28 @@\n+2016-11-29  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/rldic-0.c: New testcase.\n+\t* gcc.target/powerpc/rldic-1.c: New testcase.\n+\t* gcc.target/powerpc/rldic-2.c: New testcase.\n+\t* gcc.target/powerpc/rldicl-0.c: New testcase.\n+\t* gcc.target/powerpc/rldicl-1.c: New testcase.\n+\t* gcc.target/powerpc/rldicl-2.c: New testcase.\n+\t* gcc.target/powerpc/rldicr-0.c: New testcase.\n+\t* gcc.target/powerpc/rldicr-1.c: New testcase.\n+\t* gcc.target/powerpc/rldicr-2.c: New testcase.\n+\t* gcc.target/powerpc/rldicx.h: New file.\n+\t* gcc.target/powerpc/rldimi-0.c: New testcase.\n+\t* gcc.target/powerpc/rldimi-1.c: New testcase.\n+\t* gcc.target/powerpc/rldimi-2.c: New testcase.\n+\t* gcc.target/powerpc/rldimi.h: New file.\n+\t* gcc.target/powerpc/rlwimi-0.c: New testcase.\n+\t* gcc.target/powerpc/rlwimi-1.c: New testcase.\n+\t* gcc.target/powerpc/rlwimi-2.c: New testcase.\n+\t* gcc.target/powerpc/rlwimi.h: New file.\n+\t* gcc.target/powerpc/rlwinm-0.c: New testcase.\n+\t* gcc.target/powerpc/rlwinm-1.c: New testcase.\n+\t* gcc.target/powerpc/rlwinm-2.c: New testcase.\n+\t* gcc.target/powerpc/rlwinm.h: New file.\n+\n 2016-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/78540"}, {"sha": "ba789f6c674a8de3f98cb25a70190f1c219d5d11", "filename": "gcc/testsuite/gcc.target/powerpc/rldic-0.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-0.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 870 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rotldi} 27 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 2 } } */\n+\n+\n+#define CC\n+#define SL\n+#define SR\n+\n+#include \"rldicx.h\""}, {"sha": "cf93a5aa6aef7c717c4f2422b110aa3c2bf89a81", "filename": "gcc/testsuite/gcc.target/powerpc/rldic-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-1.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 415 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+sldi} 29 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 2 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 453 } } */\n+\n+\n+#define CC\n+#define SL\n+\n+#include \"rldicx.h\""}, {"sha": "ea77f7677267e7dc54bd0b5677d42f7b932d879e", "filename": "gcc/testsuite/gcc.target/powerpc/rldic-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldic-2.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 27 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 2 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 870 } } */\n+\n+\n+#define CC\n+#define SR\n+\n+#include \"rldicx.h\""}, {"sha": "087d427672df2029139a38f15a40011ad22e8878", "filename": "gcc/testsuite/gcc.target/powerpc/rldicl-0.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-0.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 841 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rotldi} 29 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+srdi} 27 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 2 } } */\n+\n+\n+#define CL\n+#define SL\n+#define SR\n+\n+#include \"rldicx.h\""}, {"sha": "3ed0b8061e61cc0cf7d65a2ae6d1f13476051dd8", "filename": "gcc/testsuite/gcc.target/powerpc/rldicl-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-1.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 27 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 2 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 870 } } */\n+\n+\n+#define CL\n+#define SL\n+\n+#include \"rldicx.h\""}, {"sha": "a1f7dfcce4edb0312ec6e22a7569b9fa3dd2d3de", "filename": "gcc/testsuite/gcc.target/powerpc/rldicl-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicl-2.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 453 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+srdi} 27 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 2 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 417 } } */\n+\n+\n+#define CL\n+#define SR\n+\n+#include \"rldicx.h\""}, {"sha": "180e71259af97d3a9f38bcbc6db61ef099240f09", "filename": "gcc/testsuite/gcc.target/powerpc/rldicr-0.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-0.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 870 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rotldi} 29 } } */\n+\n+\n+#define CR\n+#define SL\n+#define SR\n+\n+#include \"rldicx.h\""}, {"sha": "803ba31dea2ea71725d325a1cdfe2f6ae7075341", "filename": "gcc/testsuite/gcc.target/powerpc/rldicr-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-1.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 423 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+sldi} 23 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 453 } } */\n+\n+\n+#define CR\n+#define SL\n+\n+#include \"rldicx.h\""}, {"sha": "01f2fb6bbad089787501f81c5649e6ec5b67fbe0", "filename": "gcc/testsuite/gcc.target/powerpc/rldicr-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicr-2.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 1799 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 900 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 29 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 870 } } */\n+\n+\n+#define CR\n+#define SR\n+\n+#include \"rldicx.h\""}, {"sha": "8413ea5ead44501fb6ea3a028f8a4b7a65e27f4a", "filename": "gcc/testsuite/gcc.target/powerpc/rldicx.h", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldicx.h?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,117 @@\n+typedef unsigned int u32;\n+typedef unsigned long long u64;\n+\n+static inline u64 rot(u64 x, u32 n, u32 mb, u32 me)\n+{\n+\tu64 y = x;\n+\n+\tif (n)\n+\t\tx = 0\n+#ifdef SL\n+\t\t| (x << n)\n+#endif\n+#ifdef SR\n+\t\t| (x >> (64 - n))\n+#endif\n+\t\t;\n+\n+\tu64 s = -1;\n+\tif (n)\n+\t\ts = 0\n+#ifdef SL\n+\t\t| (s << n)\n+#endif\n+#ifdef SR\n+\t\t| (s >> (64 - n))\n+#endif\n+\t\t;\n+\n+\tu64 mask = 0;\n+\tmask += 1ULL << (63 - mb);\n+\tmask += 1ULL << (63 - mb);\n+\tmask -= 1ULL << (63 - me);\n+\tmask -= (mb > me);\n+\n+\tif (mask & ~s)\n+\t\treturn 12345*y;\n+\n+\treturn x & mask;\n+}\n+\n+#ifdef CC\n+#define X2(N,B) \\\n+u64 f_##N##_##B(u64 x) { return rot(x,N,B,63-N); }\n+#endif\n+#ifdef CL\n+#define X2(N,B) \\\n+u64 f_##N##_##B(u64 x) { return rot(x,N,B,63); }\n+#endif\n+#ifdef CR\n+#define X2(N,E) \\\n+u64 f_##N##_##E(u64 x) { return rot(x,N,0,E); }\n+#endif\n+\n+#define X1(N) \\\n+X2(N,0) \\\n+X2(N,1) \\\n+X2(N,2) \\\n+X2(N,7) \\\n+X2(N,8) \\\n+X2(N,9) \\\n+X2(N,15) \\\n+X2(N,16) \\\n+X2(N,17) \\\n+X2(N,23) \\\n+X2(N,24) \\\n+X2(N,25) \\\n+X2(N,29) \\\n+X2(N,30) \\\n+X2(N,31) \\\n+X2(N,32) \\\n+X2(N,33) \\\n+X2(N,34) \\\n+X2(N,39) \\\n+X2(N,40) \\\n+X2(N,41) \\\n+X2(N,47) \\\n+X2(N,48) \\\n+X2(N,49) \\\n+X2(N,55) \\\n+X2(N,56) \\\n+X2(N,57) \\\n+X2(N,61) \\\n+X2(N,62) \\\n+X2(N,63)\n+#define X() \\\n+X1(0) \\\n+X1(1) \\\n+X1(2) \\\n+X1(7) \\\n+X1(8) \\\n+X1(9) \\\n+X1(15) \\\n+X1(16) \\\n+X1(17) \\\n+X1(23) \\\n+X1(24) \\\n+X1(25) \\\n+X1(29) \\\n+X1(30) \\\n+X1(31) \\\n+X1(32) \\\n+X1(33) \\\n+X1(34) \\\n+X1(39) \\\n+X1(40) \\\n+X1(41) \\\n+X1(47) \\\n+X1(48) \\\n+X1(49) \\\n+X1(55) \\\n+X1(56) \\\n+X1(57) \\\n+X1(61) \\\n+X1(62) \\\n+X1(63)\n+\n+X()"}, {"sha": "80a67ecd20c8af3efbb59fdfb2121c4264d30305", "filename": "gcc/testsuite/gcc.target/powerpc/rldimi-0.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-0.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 4471 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 1800 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 873 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldimi} 1744 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rotldi} 54 } } */\n+\n+\n+#define SL\n+#define SR\n+\n+#include \"rldimi.h\""}, {"sha": "b6fece7aec87ef844181fa8e32e9c3fc8542a1ad", "filename": "gcc/testsuite/gcc.target/powerpc/rldimi-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-1.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 4045 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 1800 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 447 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldimi} 892 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 906 } } */\n+\n+\n+#define SL\n+\n+#include \"rldimi.h\""}, {"sha": "acea28d56323bbc17f54b476f1a843c0a538bf38", "filename": "gcc/testsuite/gcc.target/powerpc/rldimi-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi-2.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 3628 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 1800 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 30 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldimi} 58 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 1740 } } */\n+\n+\n+#define SR\n+\n+#include \"rldimi.h\""}, {"sha": "169428423c528c1b26cd72bd1e75b8ec48e98878", "filename": "gcc/testsuite/gcc.target/powerpc/rldimi.h", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frldimi.h?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,106 @@\n+typedef unsigned int u32;\n+typedef unsigned long long u64;\n+\n+static inline u64 rot_insert(u64 x, u64 y, u32 n, u32 mb, u32 me)\n+{\n+\tif (n)\n+\t\tx = 0\n+#ifdef SL\n+\t\t| (x << n)\n+#endif\n+#ifdef SR\n+\t\t| (x >> (64 - n))\n+#endif\n+\t\t;\n+\n+\tu64 s = -1;\n+\tif (n)\n+\t\ts = 0\n+#ifdef SL\n+\t\t| (s << n)\n+#endif\n+#ifdef SR\n+\t\t| (s >> (64 - n))\n+#endif\n+\t\t;\n+\n+\tu64 mask = 0;\n+\tmask += 1ULL << (63 - mb);\n+\tmask += 1ULL << (63 - mb);\n+\tmask -= 1ULL << (63 - me);\n+\tmask -= (mb > me);\n+\n+\tif (mask & ~s)\n+\t\treturn 12345*y;\n+\n+\treturn (x & mask) | (y & ~mask);\n+}\n+\n+#define X2(N,B) \\\n+u64 f_##N##_##B(u64 x, u64 y) { return rot_insert(x,y,N,B,63-N); } \\\n+u64 g_##N##_##B(u64 x, u64 y) { return rot_insert(y,x,N,B,63-N); }\n+\n+#define X1(N) \\\n+X2(N,0) \\\n+X2(N,1) \\\n+X2(N,2) \\\n+X2(N,7) \\\n+X2(N,8) \\\n+X2(N,9) \\\n+X2(N,15) \\\n+X2(N,16) \\\n+X2(N,17) \\\n+X2(N,23) \\\n+X2(N,24) \\\n+X2(N,25) \\\n+X2(N,29) \\\n+X2(N,30) \\\n+X2(N,31) \\\n+X2(N,32) \\\n+X2(N,33) \\\n+X2(N,34) \\\n+X2(N,39) \\\n+X2(N,40) \\\n+X2(N,41) \\\n+X2(N,47) \\\n+X2(N,48) \\\n+X2(N,49) \\\n+X2(N,55) \\\n+X2(N,56) \\\n+X2(N,57) \\\n+X2(N,61) \\\n+X2(N,62) \\\n+X2(N,63)\n+#define X() \\\n+X1(0) \\\n+X1(1) \\\n+X1(2) \\\n+X1(7) \\\n+X1(8) \\\n+X1(9) \\\n+X1(15) \\\n+X1(16) \\\n+X1(17) \\\n+X1(23) \\\n+X1(24) \\\n+X1(25) \\\n+X1(29) \\\n+X1(30) \\\n+X1(31) \\\n+X1(32) \\\n+X1(33) \\\n+X1(34) \\\n+X1(39) \\\n+X1(40) \\\n+X1(41) \\\n+X1(47) \\\n+X1(48) \\\n+X1(49) \\\n+X1(55) \\\n+X1(56) \\\n+X1(57) \\\n+X1(61) \\\n+X1(62) \\\n+X1(63)\n+\n+X()"}, {"sha": "961be1999014ed18d021f69edb01bf82bebcce82", "filename": "gcc/testsuite/gcc.target/powerpc/rlwimi-0.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-0.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 16485 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 19909 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 6750 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 3007 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 11 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldicl} 6420 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwimi} 6420 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldimi} 310 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwimi} 6110 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rotlwi} 308 } } */\n+\n+\n+#define SL\n+#define SR\n+\n+#include \"rlwimi.h\""}, {"sha": "e2c607b1d456d3e941e5c1b0f6694dd7450c49fa", "filename": "gcc/testsuite/gcc.target/powerpc/rlwimi-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-1.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 13977 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 20217 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 6750 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 499 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 11 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldicl} 6728 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwimi} 1404 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldimi} 134 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwimi} 1270 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 5324 } } */\n+\n+\n+#define SL\n+\n+#include \"rlwimi.h\""}, {"sha": "62344a95aa01ea3f3a0fde011c021557af2d3a5a", "filename": "gcc/testsuite/gcc.target/powerpc/rlwimi-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi-2.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 14121 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 20217 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 6750 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 643 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mr} 11 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldicl} 6728 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwimi} 1692 } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 5036 } } */\n+\n+\n+#define SR\n+\n+#include \"rlwimi.h\""}, {"sha": "c944e2a4b885e6048099952fa7d180367b1b4199", "filename": "gcc/testsuite/gcc.target/powerpc/rlwimi.h", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwimi.h?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,91 @@\n+typedef unsigned int u32;\n+\n+static inline u32 rot_insert(u32 x, u32 y, u32 n, u32 mb, u32 me)\n+{\n+\tif (n)\n+\t\tx = 0\n+#ifdef SL\n+\t\t| (x << n)\n+#endif\n+#ifdef SR\n+\t\t| (x >> (32 - n))\n+#endif\n+\t\t;\n+\n+\tu32 s = -1;\n+\tif (n)\n+\t\ts = 0\n+#ifdef SL\n+\t\t| (s << n)\n+#endif\n+#ifdef SR\n+\t\t| (s >> (32 - n))\n+#endif\n+\t\t;\n+\n+\tu32 mask = 0;\n+\tmask += 1U << (31 - mb);\n+\tmask += 1U << (31 - mb);\n+\tmask -= 1U << (31 - me);\n+\tmask -= (mb > me);\n+\n+\tif (mask & ~s)\n+\t\treturn 12345*y;\n+\n+\treturn (x & mask) | (y & ~mask);\n+}\n+\n+#define X3(N,B,E) \\\n+u32 f_##N##_##B##_##E(u32 x, u32 y) { return rot_insert(x,y,N,B,E); } \\\n+u32 g_##N##_##B##_##E(u32 x, u32 y) { return rot_insert(y,x,N,B,E); }\n+\n+#define X2(N,B) \\\n+X3(N,B,0) \\\n+X3(N,B,1) \\\n+X3(N,B,2) \\\n+X3(N,B,7) \\\n+X3(N,B,8) \\\n+X3(N,B,9) \\\n+X3(N,B,15) \\\n+X3(N,B,16) \\\n+X3(N,B,17) \\\n+X3(N,B,23) \\\n+X3(N,B,24) \\\n+X3(N,B,25) \\\n+X3(N,B,29) \\\n+X3(N,B,30) \\\n+X3(N,B,31)\n+#define X1(N) \\\n+X2(N,0) \\\n+X2(N,1) \\\n+X2(N,2) \\\n+X2(N,7) \\\n+X2(N,8) \\\n+X2(N,9) \\\n+X2(N,15) \\\n+X2(N,16) \\\n+X2(N,17) \\\n+X2(N,23) \\\n+X2(N,24) \\\n+X2(N,25) \\\n+X2(N,29) \\\n+X2(N,30) \\\n+X2(N,31)\n+#define X() \\\n+X1(0) \\\n+X1(1) \\\n+X1(2) \\\n+X1(7) \\\n+X1(8) \\\n+X1(9) \\\n+X1(15) \\\n+X1(16) \\\n+X1(17) \\\n+X1(23) \\\n+X1(24) \\\n+X1(25) \\\n+X1(29) \\\n+X1(30) \\\n+X1(31)\n+\n+X()"}, {"sha": "2940b62796a45a187c8afbe70b1f16f18c9cb835", "filename": "gcc/testsuite/gcc.target/powerpc/rlwinm-0.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-0.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 6739 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 9730 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 3375 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldicl} 3095 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 3197 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 3094 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rotlwi} 154 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+srwi} 13 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+srdi} 12 { target lp64 } } } */\n+\n+\n+#define SL\n+#define SR\n+\n+#include \"rlwinm.h\""}, {"sha": "0fc08a623907f87664d7e65d2ab6f3e6d0e972e1", "filename": "gcc/testsuite/gcc.target/powerpc/rlwinm-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-1.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 6739 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 9606 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 3375 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 2946 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 691 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 622 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+slwi} 11 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+slwi} 1 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 2662 { target ilp32 } } } */\n+\n+\n+#define SL\n+\n+#include \"rlwinm.h\""}, {"sha": "4087ac06c2a1df7bb09e41d91fa72c381ac193e0", "filename": "gcc/testsuite/gcc.target/powerpc/rlwinm-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm-2.c?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 6739 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+[a-z]} 9466 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+blr} 3375 } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rldic} 2840 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 833 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+rlwinm} 721 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+srwi} 13 { target ilp32 } } } */\n+/* { dg-final { scan-assembler-times {(?n)^\\s+srdi} 12 { target lp64 } } } */\n+\n+/* { dg-final { scan-assembler-times {(?n)^\\s+mulli} 2518 } } */\n+\n+\n+#define SR\n+\n+#include \"rlwinm.h\""}, {"sha": "d1220e02207135a4f12b4b2e1ef97a57698ed35d", "filename": "gcc/testsuite/gcc.target/powerpc/rlwinm.h", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a8a373399f292d15f3ac882add6c585315a0cb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frlwinm.h?ref=01a8a373399f292d15f3ac882add6c585315a0cb", "patch": "@@ -0,0 +1,92 @@\n+typedef unsigned int u32;\n+\n+static inline u32 rot(u32 x, u32 n, u32 mb, u32 me)\n+{\n+\tu32 y = x;\n+\n+\tif (n)\n+\t\tx = 0\n+#ifdef SL\n+\t\t| (x << n)\n+#endif\n+#ifdef SR\n+\t\t| (x >> (32 - n))\n+#endif\n+\t\t;\n+\n+\tu32 s = -1;\n+\tif (n)\n+\t\ts = 0\n+#ifdef SL\n+\t\t| (s << n)\n+#endif\n+#ifdef SR\n+\t\t| (s >> (32 - n))\n+#endif\n+\t\t;\n+\n+\tu32 mask = 0;\n+\tmask += 1U << (31 - mb);\n+\tmask += 1U << (31 - mb);\n+\tmask -= 1U << (31 - me);\n+\tmask -= (mb > me);\n+\n+\tif (mask & ~s)\n+\t\treturn 12345*y;\n+\n+\treturn x & mask;\n+}\n+\n+#define X3(N,B,E) \\\n+u32 f_##N##_##B##_##E(u32 x) { return rot(x,N,B,E); } \\\n+\n+#define X2(N,B) \\\n+X3(N,B,0) \\\n+X3(N,B,1) \\\n+X3(N,B,2) \\\n+X3(N,B,7) \\\n+X3(N,B,8) \\\n+X3(N,B,9) \\\n+X3(N,B,15) \\\n+X3(N,B,16) \\\n+X3(N,B,17) \\\n+X3(N,B,23) \\\n+X3(N,B,24) \\\n+X3(N,B,25) \\\n+X3(N,B,29) \\\n+X3(N,B,30) \\\n+X3(N,B,31)\n+#define X1(N) \\\n+X2(N,0) \\\n+X2(N,1) \\\n+X2(N,2) \\\n+X2(N,7) \\\n+X2(N,8) \\\n+X2(N,9) \\\n+X2(N,15) \\\n+X2(N,16) \\\n+X2(N,17) \\\n+X2(N,23) \\\n+X2(N,24) \\\n+X2(N,25) \\\n+X2(N,29) \\\n+X2(N,30) \\\n+X2(N,31)\n+#define X() \\\n+X1(0) \\\n+X1(1) \\\n+X1(2) \\\n+X1(7) \\\n+X1(8) \\\n+X1(9) \\\n+X1(15) \\\n+X1(16) \\\n+X1(17) \\\n+X1(23) \\\n+X1(24) \\\n+X1(25) \\\n+X1(29) \\\n+X1(30) \\\n+X1(31)\n+\n+X()"}]}