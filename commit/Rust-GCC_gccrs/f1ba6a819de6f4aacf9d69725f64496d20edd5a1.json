{"sha": "f1ba6a819de6f4aacf9d69725f64496d20edd5a1", "node_id": "C_kwDOANBUbNoAKGYxYmE2YTgxOWRlNmY0YWFjZjlkNjk3MjVmNjQ0OTZkMjBlZGQ1YTE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-29T08:20:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-29T08:20:29Z"}, "message": "gimple-fold: Preserve location in gimple_fold_builtin_memset\n\nAs mentioned yesterday, gimple_fold_builtin_memset doesn't preserve\nlocus which means e.g. the -Wstringop-overflow warnings are emitted as:\nIn function 'test_max':\ncc1: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]\nThe function emits up to 2 new statements, but the latter (asgn) is added\nthrough gsi_replace and therefore the locus is copied over from the call.\nBut store is emitted before the call and optionally the call removed\nafterwards, so locus needs to be copied over manually.\n\n2021-10-29  Jakub Jelinek  <jakub@redhat.com>\n\n\t* gimple-fold.c (gimple_fold_builtin_memset): Copy over location from\n\tcall to store.\n\n\t* gcc.dg/Wstringop-overflow-62.c: Adjust expected diagnostics.", "tree": {"sha": "27bc21a1517537e9c1e2e62e2b30e6aad573e226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27bc21a1517537e9c1e2e62e2b30e6aad573e226"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1ba6a819de6f4aacf9d69725f64496d20edd5a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ba6a819de6f4aacf9d69725f64496d20edd5a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ba6a819de6f4aacf9d69725f64496d20edd5a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ba6a819de6f4aacf9d69725f64496d20edd5a1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cd2a27a1c910421b31fd72dea726d838c1a39e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd2a27a1c910421b31fd72dea726d838c1a39e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cd2a27a1c910421b31fd72dea726d838c1a39e9"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "6e25a7c05dbe57602dab540f68c423d1d20df204", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ba6a819de6f4aacf9d69725f64496d20edd5a1/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ba6a819de6f4aacf9d69725f64496d20edd5a1/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=f1ba6a819de6f4aacf9d69725f64496d20edd5a1", "patch": "@@ -1505,6 +1505,7 @@ gimple_fold_builtin_memset (gimple_stmt_iterator *gsi, tree c, tree len)\n   var = fold_build2 (MEM_REF, etype, dest, build_int_cst (ptr_type_node, 0));\n   gimple *store = gimple_build_assign (var, build_int_cst_type (etype, cval));\n   gimple_move_vops (store, stmt);\n+  gimple_set_location (store, gimple_location (stmt));\n   gsi_insert_before (gsi, store, GSI_SAME_STMT);\n   if (gimple_call_lhs (stmt))\n     {"}, {"sha": "ea19aa85905b79412c868ae7dd437344841fdf96", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-62.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ba6a819de6f4aacf9d69725f64496d20edd5a1/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-62.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ba6a819de6f4aacf9d69725f64496d20edd5a1/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-62.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-62.c?ref=f1ba6a819de6f4aacf9d69725f64496d20edd5a1", "patch": "@@ -223,7 +223,7 @@ void test_max (void)\n \n     char *q = MAX (pi, pj);\n \n-    memset (q, 0, 1);         // { dg-warning \"writing 1 byte into a region of size 0 \" \"\" { target *-*-* } 0 }\n+    memset (q, 0, 1);         // { dg-warning \"writing 1 byte into a region of size 0 \" }\n     memset (q, 0, 2);         // { dg-warning \"writing 2 bytes into a region of size 0 \" }\n   }\n \n@@ -345,7 +345,7 @@ void test_max (void)\n        not reflected in the determaxed offset).  */\n     char *q = MAX (p1, p2);\n \n-    memset (q, 0, 1);\n+    memset (q, 0, 1);         // { dg-warning \"writing 1 byte into a region of size 0 \" }\n   }\n \n   {"}]}