{"sha": "03fd2f60926c3730ff269a7aa9b05985ccf54273", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNmZDJmNjA5MjZjMzczMGZmMjY5YTdhYTliMDU5ODVjY2Y1NDI3Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-12-09T23:02:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-12-09T23:02:18Z"}, "message": "re PR libstdc++/59427 (Opening with ios::in | ios::app does not allow appending)\n\n2013-12-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/59427\n\t* include/bits/fstream.tcc (basic_filebuf<>::overflow,\n\tbasic_filebuf<>::xsputn): Per lwg/596, ios_base::app implies\n\tios_base:out.\n\t* include/std/fstream (basic_filebuf<>::_M_set_buffer): Likewise.\n\t* testsuite/27_io/basic_filebuf/sputc/char/59427.cc: New.\n\t* testsuite/27_io/basic_filebuf/sputn/char/59427.cc: Likewise.\n\nFrom-SVN: r205837", "tree": {"sha": "211332ea49f0a2c35da093cec00b3333cffe71c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/211332ea49f0a2c35da093cec00b3333cffe71c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03fd2f60926c3730ff269a7aa9b05985ccf54273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fd2f60926c3730ff269a7aa9b05985ccf54273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03fd2f60926c3730ff269a7aa9b05985ccf54273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fd2f60926c3730ff269a7aa9b05985ccf54273/comments", "author": null, "committer": null, "parents": [{"sha": "f0c6059cdcd8686feb7a3f1cabf6f2f690573a05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c6059cdcd8686feb7a3f1cabf6f2f690573a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c6059cdcd8686feb7a3f1cabf6f2f690573a05"}], "stats": {"total": 99, "additions": 95, "deletions": 4}, "files": [{"sha": "a9f6075897b0cf378c6e1e9611f5e0ae7199664d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=03fd2f60926c3730ff269a7aa9b05985ccf54273", "patch": "@@ -1,3 +1,13 @@\n+2013-12-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/59427\n+\t* include/bits/fstream.tcc (basic_filebuf<>::overflow,\n+\tbasic_filebuf<>::xsputn): Per lwg/596, ios_base::app implies\n+\tios_base:out.\n+\t* include/std/fstream (basic_filebuf<>::_M_set_buffer): Likewise.\n+\t* testsuite/27_io/basic_filebuf/sputc/char/59427.cc: New.\n+\t* testsuite/27_io/basic_filebuf/sputn/char/59427.cc: Likewise.\n+\n 2013-12-09  Renlin Li <Renlin.Li@arm.com>\n \n \t* testsuite/20_util/hash/chi2_quality.cc: Change -DSAMPLES=30000."}, {"sha": "04debe547199f84a66492fe2b67cb2170af2270b", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=03fd2f60926c3730ff269a7aa9b05985ccf54273", "patch": "@@ -423,7 +423,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       int_type __ret = traits_type::eof();\n       const bool __testeof = traits_type::eq_int_type(__c, __ret);\n-      const bool __testout = _M_mode & ios_base::out;\n+      const bool __testout = (_M_mode & ios_base::out\n+\t\t\t      || _M_mode & ios_base::app);\n       if (__testout)\n \t{\n           if (_M_reading)\n@@ -640,7 +641,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Optimization in the always_noconv() case, to be generalized in the\n       // future: when __n is sufficiently large we write directly instead of\n       // using the buffer.\n-      const bool __testout = _M_mode & ios_base::out;\n+      const bool __testout = (_M_mode & ios_base::out\n+\t\t\t      || _M_mode & ios_base::app);\n       if (__check_facet(_M_codecvt).always_noconv()\n  \t   && __testout && !_M_reading)\n \t{"}, {"sha": "ce27eb61a080e5721a53557d815356069250d86e", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=03fd2f60926c3730ff269a7aa9b05985ccf54273", "patch": "@@ -397,8 +397,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _M_set_buffer(streamsize __off)\n       {\n  \tconst bool __testin = _M_mode & ios_base::in;\n- \tconst bool __testout = _M_mode & ios_base::out;\n-\t\n+ \tconst bool __testout = (_M_mode & ios_base::out\n+\t\t\t\t|| _M_mode & ios_base::app);\n+\n \tif (__testin && __off > 0)\n \t  this->setg(_M_buf, _M_buf, _M_buf + __off);\n \telse"}, {"sha": "9638c6c8e9cee21bdc4e4dd7e4bb1b919f275a09", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/59427.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputc%2Fchar%2F59427.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputc%2Fchar%2F59427.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputc%2Fchar%2F59427.cc?ref=03fd2f60926c3730ff269a7aa9b05985ccf54273", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-require-fileio \"\" }\n+\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/59427\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  filebuf a_f;\n+  VERIFY( a_f.open(\"tmp_59427_sputc\", ios_base::in | ios_base::app) );\n+  VERIFY( 'a' == a_f.sputc('a')  );\n+  VERIFY( a_f.close() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "ed1ef42dd63d9ef02260a14d1adb94f74403ad54", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/59427.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputn%2Fchar%2F59427.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fd2f60926c3730ff269a7aa9b05985ccf54273/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputn%2Fchar%2F59427.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputn%2Fchar%2F59427.cc?ref=03fd2f60926c3730ff269a7aa9b05985ccf54273", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-require-fileio \"\" }\n+\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/59427\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  filebuf a_f;\n+  VERIFY( a_f.open(\"tmp_59427_sputn\", ios_base::in | ios_base::app) );\n+  VERIFY( 5 == a_f.sputn(\"abcde\", 5)  );\n+  VERIFY( a_f.close() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}