{"sha": "2da05a5bb89789c27a0babe8693a2561937217f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRhMDVhNWJiODk3ODljMjdhMGJhYmU4NjkzYTI1NjE5MzcyMTdmNg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-08-19T21:09:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-19T21:09:22Z"}, "message": "configure.in: Turn on haifa by default for the PA.\n\n        * configure.in: Turn on haifa by default for the PA.\n        * configure: Rebuilt.\n        * pa.c (override_options): Accept -mschedule=7200 option.\n        (pa_adjust_cost): No longer need to scale costs for newer\n        processors.\n        * pa.h (enum processor_type): Add PROCESSOR_7200.\n        * pa.md: Revamp scheduling parameters to work better with\n        haifa.  Add scheduling parameters for the 7200.\n\nFrom-SVN: r14850", "tree": {"sha": "dc0f90b70c34b54f0aed90ab4f8233b2b29924a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc0f90b70c34b54f0aed90ab4f8233b2b29924a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2da05a5bb89789c27a0babe8693a2561937217f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da05a5bb89789c27a0babe8693a2561937217f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2da05a5bb89789c27a0babe8693a2561937217f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da05a5bb89789c27a0babe8693a2561937217f6/comments", "author": null, "committer": null, "parents": [{"sha": "4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b"}], "stats": {"total": 211, "additions": 172, "deletions": 39}, "files": [{"sha": "cb3b086572fc521d869d04213e2d547e4771a43e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2da05a5bb89789c27a0babe8693a2561937217f6", "patch": "@@ -1,5 +1,14 @@\n Tue Aug 19 09:34:57 1997  Jeffrey A Law  (law@cygnus.com)\n \n+\t* configure.in: Turn on haifa by default for the PA.\n+\t* configure: Rebuilt.\n+\t* pa.c (override_options): Accept -mschedule=7200 option.\n+\t(pa_adjust_cost): No longer need to scale costs for newer\n+\tprocessors.\n+\t* pa.h (enum processor_type): Add PROCESSOR_7200.\n+\t* pa.md: Revamp scheduling parameters to work better with\n+\thaifa.  Add scheduling parameters for the 7200.\n+\n \t* haifa-sched.c (move_insn): Reemit notes for SCHED_GROUP_P\n \tinsns too.\n \t(schedule_block): When adjusting basic_block_{head,end}, account"}, {"sha": "93f7c1d21bee999fa5ced3f641083700cd096d6e", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=2da05a5bb89789c27a0babe8693a2561937217f6", "patch": "@@ -99,9 +99,14 @@ override_options ()\n       pa_cpu_string = \"7100LC\";\n       pa_cpu = PROCESSOR_7100LC;\n     }\n+  else if (! strcmp (pa_cpu_string, \"7200\"))\n+    {\n+      pa_cpu_string = \"7200\";\n+      pa_cpu = PROCESSOR_7200;\n+    }\n   else\n     {\n-      warning (\"Unknown -mschedule= option (%s).\\nValid options are 700, 7100 and 7100LC\\n\", pa_cpu_string);\n+      warning (\"Unknown -mschedule= option (%s).\\nValid options are 700, 7100 and 7100LC and 7200\\n\", pa_cpu_string);\n     }\n \n   if (flag_pic && TARGET_PORTABLE_RUNTIME)\n@@ -3260,8 +3265,8 @@ pa_adjust_cost (insn, link, dep_insn, cost)\n \t\t{\n \t\tcase TYPE_FPLOAD:\n \t\t  /* This cost 3 cycles, not 2 as the md says for the\n-\t\t     700 and 7100.  Note scaling of cost for 7100.  */\n-\t\t  return cost + (pa_cpu == PROCESSOR_700) ? 1 : 2;\n+\t\t     700 and 7100.  */\n+\t\t  return cost + 1;\n \n \t\tcase TYPE_FPALU:\n \t\tcase TYPE_FPMULSGL:\n@@ -3272,7 +3277,7 @@ pa_adjust_cost (insn, link, dep_insn, cost)\n \t\tcase TYPE_FPSQRTDBL:\n \t\t  /* In these important cases, we save one cycle compared to\n \t\t     when flop instruction feed each other.  */\n-\t\t  return cost - (pa_cpu == PROCESSOR_700) ? 1 : 2;\n+\t\t  return cost - 1;\n \n \t\tdefault:\n \t\t  return cost;\n@@ -3320,7 +3325,7 @@ pa_adjust_cost (insn, link, dep_insn, cost)\n \t\t     preceding arithmetic operation has finished if\n \t\t     the target of the fpload is any of the sources\n \t\t     (or destination) of the arithmetic operation.  */\n-\t\t  return cost - (pa_cpu == PROCESSOR_700) ? 1 : 2;\n+\t\t  return cost - 1;\n \n \t\tdefault:\n \t\t  return 0;\n@@ -3355,7 +3360,7 @@ pa_adjust_cost (insn, link, dep_insn, cost)\n \t\t     preceding divide or sqrt operation has finished if\n \t\t     the target of the ALU flop is any of the sources\n \t\t     (or destination) of the divide or sqrt operation.  */\n-\t\t  return cost - (pa_cpu == PROCESSOR_700) ? 2 : 4;\n+\t\t  return cost - 2;\n \n \t\tdefault:\n \t\t  return 0;\n@@ -3401,7 +3406,7 @@ pa_adjust_cost (insn, link, dep_insn, cost)\n \t\t     preceding arithmetic operation has finished if\n \t\t     the target of the fpload is the destination of the\n \t\t     arithmetic operation.  */\n-\t\t  return cost - (pa_cpu == PROCESSOR_700) ? 1 : 2;\n+\t\t  return cost - 1;\n \n \t\tdefault:\n \t\t  return 0;\n@@ -3436,7 +3441,7 @@ pa_adjust_cost (insn, link, dep_insn, cost)\n \t\t     preceding divide or sqrt operation has finished if\n \t\t     the target of the ALU flop is also the target of\n \t\t     of the divide or sqrt operation.  */\n-\t\t  return cost - (pa_cpu == PROCESSOR_700) ? 2 : 4;\n+\t\t  return cost - 2;\n \n \t\tdefault:\n \t\t  return 0;"}, {"sha": "1f5e900907f573db663390ec2cf6523cc0f9ac7b", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=2da05a5bb89789c27a0babe8693a2561937217f6", "patch": "@@ -39,6 +39,7 @@ enum processor_type\n   PROCESSOR_700,\n   PROCESSOR_7100,\n   PROCESSOR_7100LC,\n+  PROCESSOR_7200\n };\n \n #define pa_cpu_attr ((enum attr_cpu)pa_cpu)"}, {"sha": "df71400502d96ca81f1bdcc6841acd97be42223c", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 41, "deletions": 31, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=2da05a5bb89789c27a0babe8693a2561937217f6", "patch": "@@ -44,7 +44,7 @@\n ;;\n ;; FIXME: Add 800 scheduling for completeness?\n \n-(define_attr \"cpu\" \"700,7100,7100LC\" (const (symbol_ref \"pa_cpu_attr\")))\n+(define_attr \"cpu\" \"700,7100,7100LC,7200\" (const (symbol_ref \"pa_cpu_attr\")))\n \n ;; Length (in # of insns).\n (define_attr \"length\" \"\"\n@@ -213,20 +213,17 @@\n ;; floating point computations with non-floating point computations (fp loads\n ;; and stores are not fp computations).\n ;;\n-;; As with the alpha we multiply the ready delay by two to encourage\n-;; schedules which will allow the 7100/7150 to dual issue as many instructions\n-;; as possible.\n \n ;; Memory. Disregarding Cache misses, memory loads take two cycles; stores also\n ;; take two cycles, during which no Dcache operations should be scheduled.\n ;; Any special cases are handled in pa_adjust_cost.  The 7100, 7150 and 7100LC\n ;; all have the same memory characteristics if one disregards cache misses.\n (define_function_unit \"pa7100memory\" 1 0\n   (and (eq_attr \"type\" \"load,fpload\")\n-       (eq_attr \"cpu\" \"7100,7100LC\")) 4 0)\n+       (eq_attr \"cpu\" \"7100,7100LC\")) 2 0)\n (define_function_unit \"pa7100memory\" 1 0 \n   (and (eq_attr \"type\" \"store,fpstore\")\n-       (eq_attr \"cpu\" \"7100,7100LC\")) 4 4)\n+       (eq_attr \"cpu\" \"7100,7100LC\")) 2 2)\n \n ;; The 7100/7150 has three floating-point units: ALU, MUL, and DIV.\n ;; Timings:\n@@ -249,29 +246,29 @@\n \n (define_function_unit \"pa7100fp_alu\" 1 0\n   (and (eq_attr \"type\" \"fpcc,fpalu\")\n-       (eq_attr \"cpu\" \"7100\")) 4 2)\n+       (eq_attr \"cpu\" \"7100\")) 2 1)\n (define_function_unit \"pa7100fp_mpy\" 1 0\n   (and (eq_attr \"type\" \"fpmulsgl,fpmuldbl\")\n-       (eq_attr \"cpu\" \"7100\")) 4 2)\n+       (eq_attr \"cpu\" \"7100\")) 2 1)\n (define_function_unit \"pa7100fp_div\" 1 0\n   (and (eq_attr \"type\" \"fpdivsgl,fpsqrtsgl\")\n-       (eq_attr \"cpu\" \"7100\")) 16 16)\n+       (eq_attr \"cpu\" \"7100\")) 8 8)\n (define_function_unit \"pa7100fp_div\" 1 0\n   (and (eq_attr \"type\" \"fpdivdbl,fpsqrtdbl\")\n-       (eq_attr \"cpu\" \"7100\")) 30 30)\n+       (eq_attr \"cpu\" \"7100\")) 15 15)\n \n ;; To encourage dual issue we define function units corresponding to\n ;; the instructions which can be dual issued.    This is a rather crude\n ;; approximation, the \"pa7100nonflop\" test in particular could be refined.\n (define_function_unit \"pa7100flop\" 1 1\n   (and\n     (eq_attr \"type\" \"fpcc,fpalu,fpmulsgl,fpmuldbl,fpdivsgl,fpsqrtsgl,fpdivdbl,fpsqrtdbl\")\n-    (eq_attr \"cpu\" \"7100,7100LC\")) 2 2)\n+    (eq_attr \"cpu\" \"7100\")) 1 1)\n \n (define_function_unit \"pa7100nonflop\" 1 1\n   (and\n     (eq_attr \"type\" \"!fpcc,fpalu,fpmulsgl,fpmuldbl,fpdivsgl,fpsqrtsgl,fpdivdbl,fpsqrtdbl\")\n-    (eq_attr \"cpu\" \"7100\")) 2 2)\n+    (eq_attr \"cpu\" \"7100\")) 1 1)\n \n \n ;; Memory subsystem works just like 7100/7150 (except for cache miss times which\n@@ -305,41 +302,54 @@\n \n (define_function_unit \"pa7100LCfp_alu\" 1 0\n   (and (eq_attr \"type\" \"fpcc,fpalu\")\n-       (eq_attr \"cpu\" \"7100LC\")) 4 2)\n+       (eq_attr \"cpu\" \"7100LC,7200\")) 2 1)\n (define_function_unit \"pa7100LCfp_mpy\" 1 0\n   (and (eq_attr \"type\" \"fpmulsgl\")\n-       (eq_attr \"cpu\" \"7100LC\")) 4 2)\n+       (eq_attr \"cpu\" \"7100LC,7200\")) 2 1)\n (define_function_unit \"pa7100LCfp_mpy\" 1 0\n   (and (eq_attr \"type\" \"fpmuldbl\")\n-       (eq_attr \"cpu\" \"7100LC\")) 6 4)\n+       (eq_attr \"cpu\" \"7100LC,7200\")) 3 2)\n (define_function_unit \"pa7100LCfp_div\" 1 0\n   (and (eq_attr \"type\" \"fpdivsgl,fpsqrtsgl\")\n-       (eq_attr \"cpu\" \"7100LC\")) 16 16)\n+       (eq_attr \"cpu\" \"7100LC,7200\")) 8 8)\n (define_function_unit \"pa7100LCfp_div\" 1 0\n   (and (eq_attr \"type\" \"fpdivdbl,fpsqrtdbl\")\n-       (eq_attr \"cpu\" \"7100LC\")) 30 30)\n+       (eq_attr \"cpu\" \"7100LC,7200\")) 15 15)\n \n ;; Define the various functional units for dual-issue.\n-;; The 7100LC shares the generic \"flop\" unit specification with the 7100/7150.\n \n-;; The 7100LC has two basic integer which allow dual issue of most integer\n-;; instructions.  This needs further refinement to deal with the nullify,\n-;; carry/borrow possible the ldw/ldw stw/stw special dual issue cases, and\n-;; of course it needs to know about hte 2nd alu.\n-(define_function_unit \"pa7100LCnonflop\" 1 1\n+;; There's only one floating point unit.\n+(define_function_unit \"pa7100LCflop\" 1 1\n   (and\n-    (eq_attr \"type\" \"!fpcc,fpalu,fpmulsgl,fpmuldbl,fpdivsgl,fpsqrtsgl,fpdivdbl,fpsqrtdbl,load,fpload,store,fpstore,shift,nullshift\")\n-    (eq_attr \"cpu\" \"7100LC\")) 2 2)\n+    (eq_attr \"type\" \"fpcc,fpalu,fpmulsgl,fpmuldbl,fpdivsgl,fpsqrtsgl,fpdivdbl,fpsqrtdbl\")\n+    (eq_attr \"cpu\" \"7100LC,7200\")) 1 1)\n \n-(define_function_unit \"pa7100LCshifter\" 1 1\n+;; Shifts and memory ops actually execute in one of the integer\n+;; ALUs, but we can't really model that.\n+(define_function_unit \"pa7100LCshiftmem\" 1 1\n   (and\n-    (eq_attr \"type\" \"shift,nullshift\")\n-    (eq_attr \"cpu\" \"7100LC\")) 2 2)\n+    (eq_attr \"type\" \"shift,nullshift,load,fpload,store,fpstore\")\n+    (eq_attr \"cpu\" \"7100LC,7200\")) 1 1)\n \n-(define_function_unit \"pa7100LCmem\" 1 1\n+;; We have two basic ALUs.\n+(define_function_unit \"pa7100LCalu\" 2 2\n   (and\n-    (eq_attr \"type\" \"load,fpload,store,fpstore\")\n-    (eq_attr \"cpu\" \"7100LC\")) 2 2)\n+    (eq_attr \"type\" \"!fpcc,fpalu,fpmulsgl,fpmuldbl,fpdivsgl,fpsqrtsgl,fpdivdbl,fpsqrtdbl,load,fpload,store,fpstore,shift,nullshift\")\n+   (eq_attr \"cpu\" \"7100LC,7200\")) 1 1)\n+\n+;; I don't have complete information on the PA7200; however, most of\n+;; what I've heard makes it look like a 7100LC without the store-store\n+;; penalty.  So that's how we'll model it.\n+\n+;; Memory. Disregarding Cache misses, memory loads and stores take\n+;; two cycles.  Any special cases are handled in pa_adjust_cost.\n+(define_function_unit \"pa7200memory\" 1 0\n+  (and (eq_attr \"type\" \"load,fpload,store,fpstore\")\n+       (eq_attr \"cpu\" \"7200\")) 2 0)\n+\n+;; I don't have detailed information on the PA7200 FP pipeline, so I\n+;; treat it just like the 7100LC pipeline.\n+;; Similarly for the multi-issue fake units.\n \n \f\n ;; Compare instructions."}, {"sha": "95ec01ef129046c088de045da0d240ccd24841f4", "filename": "gcc/configure", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2da05a5bb89789c27a0babe8693a2561937217f6", "patch": "@@ -1790,36 +1790,57 @@ for machine in $build $host $target; do\n \t\tfloat_format=i32\n \t\t;;\n \thppa1.1-*-pro*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"pa/pa-pro.h ${tm_file} pa/pa-pro-end.h libgloss.h\"\n \t\txm_file=pa/xm-papro.h\n \t\ttmake_file=pa/t-pro\n \t\t;;\n \thppa1.1-*-osf*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-osf.h\"\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in\n \t\t;;\n \thppa1.1-*-rtems*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"pa/pa-pro.h ${tm_file} pa/pa-pro-end.h libgloss.h pa/rtems.h\"\n \t\txm_file=pa/xm-papro.h\n \t\ttmake_file=pa/t-pro\n \t\t;;\n \thppa1.0-*-osf*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-osf.h\"\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in\n \t\t;;\n \thppa1.1-*-bsd*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in\n \t\t;;\n \thppa1.0-*-bsd*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in\n \t\t;;\n \thppa1.0-*-hpux7*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"pa/pa-oldas.h ${tm_file} pa/pa-hpux7.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -1831,6 +1852,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hpux8.0[0-2]*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -1844,6 +1868,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hpux8.0[0-2]*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -1858,6 +1885,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hpux8*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -1870,6 +1900,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hpux8*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -1881,6 +1914,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hpux10*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hpux10.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -1893,6 +1929,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hpux10*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hpux10.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -1904,6 +1943,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hpux*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hpux9.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -1916,6 +1958,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hpux*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hpux9.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -1927,6 +1972,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hiux*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hiux.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -1939,6 +1987,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hiux*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hiux.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -1950,6 +2001,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa*-*-lites*)\n+\t\tif [ x$enable_haifa != xno ]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in"}, {"sha": "e906ae90b30053eab8d5530b0f5ebafa51832422", "filename": "gcc/configure.in", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da05a5bb89789c27a0babe8693a2561937217f6/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=2da05a5bb89789c27a0babe8693a2561937217f6", "patch": "@@ -456,36 +456,57 @@ for machine in $build $host $target; do\n \t\tfloat_format=i32\n \t\t;;\n \thppa1.1-*-pro*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"pa/pa-pro.h ${tm_file} pa/pa-pro-end.h libgloss.h\"\n \t\txm_file=pa/xm-papro.h\n \t\ttmake_file=pa/t-pro\n \t\t;;\n \thppa1.1-*-osf*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-osf.h\"\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in\n \t\t;;\n \thppa1.1-*-rtems*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"pa/pa-pro.h ${tm_file} pa/pa-pro-end.h libgloss.h pa/rtems.h\"\n \t\txm_file=pa/xm-papro.h\n \t\ttmake_file=pa/t-pro\n \t\t;;\n \thppa1.0-*-osf*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-osf.h\"\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in\n \t\t;;\n \thppa1.1-*-bsd*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in\n \t\t;;\n \thppa1.0-*-bsd*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in\n \t\t;;\n \thppa1.0-*-hpux7*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"pa/pa-oldas.h ${tm_file} pa/pa-hpux7.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -497,6 +518,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hpux8.0[[0-2]]*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -510,6 +534,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hpux8.0[[0-2]]*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -524,6 +551,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hpux8*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -536,6 +566,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hpux8*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -547,6 +580,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hpux10*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hpux10.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -559,6 +595,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hpux10*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hpux10.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -570,6 +609,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hpux*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hpux9.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -582,6 +624,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hpux*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hpux9.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -593,6 +638,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.1-*-hiux*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hiux.h\"\n \t\txm_file=pa/xm-pahpux.h\n@@ -605,6 +653,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa1.0-*-hiux*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttm_file=\"${tm_file} pa/pa-hpux.h pa/pa-hiux.h\"\n \t\txm_file=pa/xm-pahpux.h\n \t\txmake_file=pa/x-pa-hpux\n@@ -616,6 +667,9 @@ for machine in $build $host $target; do\n \t\tuse_collect2=yes\n \t\t;;\n \thppa*-*-lites*)\n+\t\tif [[ x$enable_haifa != xno ]]; then\n+\t\t\tenable_haifa=yes\n+\t\tfi\n \t\ttarget_cpu_default=1\n \t\tuse_collect2=yes\n \t\tfixincludes=Makefile.in"}]}