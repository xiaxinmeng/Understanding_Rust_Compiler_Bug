{"sha": "89b7d5e1898644c9bfd7012181f18cc4523e29cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliN2Q1ZTE4OTg2NDRjOWJmZDcwMTIxODFmMThjYzQ1MjNlMjljYw==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2009-01-12T19:28:58Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2009-01-12T19:28:58Z"}, "message": "simd1.C: Ignore irrelevant warning.\n\n\t* g++.dg/conversion/simd1.C: Ignore irrelevant warning.\n\t* g++.dg/ext/attribute-test-1.C: Likewise.\n\t* g++.dg/ext/attribute-test-2.C: Likewise.\n\t* g++.dg/ext/attribute-test-3.C: Likewise.\n\t* g++.dg/ext/attribute-test-4.C: Likewise.\n\nCo-Authored-By: Nathan Froyd <froydnj@codesourcery.com>\n\nFrom-SVN: r143304", "tree": {"sha": "5c389c94d377a7bb83b893252a5e6b544d1f07f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c389c94d377a7bb83b893252a5e6b544d1f07f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b7d5e1898644c9bfd7012181f18cc4523e29cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b7d5e1898644c9bfd7012181f18cc4523e29cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b7d5e1898644c9bfd7012181f18cc4523e29cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b7d5e1898644c9bfd7012181f18cc4523e29cc/comments", "author": null, "committer": null, "parents": [{"sha": "3b9c1abd29ba5fe93ba4bcae18c8d324657f5dcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9c1abd29ba5fe93ba4bcae18c8d324657f5dcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b9c1abd29ba5fe93ba4bcae18c8d324657f5dcb"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "3a54a665a58741e9d7e27eb4b62bfcae8fe2d099", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89b7d5e1898644c9bfd7012181f18cc4523e29cc", "patch": "@@ -1,3 +1,12 @@\n+2009-01-12  Daniel Jacobowitz  <dan@codesourcery.com>\n+\t    Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* g++.dg/conversion/simd1.C: Ignore irrelevant warning.\n+\t* g++.dg/ext/attribute-test-1.C: Likewise.\n+\t* g++.dg/ext/attribute-test-2.C: Likewise.\n+\t* g++.dg/ext/attribute-test-3.C: Likewise.\n+\t* g++.dg/ext/attribute-test-4.C: Likewise.\n+\n 2009-01-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/unchecked_convert3.adb: New test."}, {"sha": "56be6f47ca96e95e72e459ec521c0b520cdbe8a4", "filename": "gcc/testsuite/g++.dg/conversion/simd1.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C?ref=89b7d5e1898644c9bfd7012181f18cc4523e29cc", "patch": "@@ -6,7 +6,6 @@\n #define vector __attribute__((vector_size(16)))\n \n vector signed int vld (int a1, const vector signed int *a2) { return *a2; } /* { dg-message \"vld\" } */\n-/* { dg-warning \"vector returned by ref\" \"\" { target { powerpc*-*-linux* && ilp32 } }  8 } */\n vector signed short vld (int a1, const vector signed short *a2) { return *a2; } /* { dg-message \"vld\" } */\n \n extern int i;\n@@ -21,3 +20,6 @@ void foo ()\n   vss = vld(i, vssp);\n   vss = vld(i, cvssp);\n }\n+\n+/* Ignore a warning that is irrelevant to the purpose of this test.  */\n+/* { dg-prune-output \".*GCC vector returned by reference.*\" } */"}, {"sha": "7df68930fc4f6efd3253b28ab6c93cc9d056a33c", "filename": "gcc/testsuite/g++.dg/ext/attribute-test-1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-1.C?ref=89b7d5e1898644c9bfd7012181f18cc4523e29cc", "patch": "@@ -7,7 +7,7 @@ extern \"C\" void abort();\n #define vector __attribute__((vector_size(16)))\n \n struct Constants {\n-   inline vector unsigned int deadbeef(void) const { // { dg-warning \"vector returned by ref\" \"\" { target { powerpc*-*-linux* && ilp32 } } }\n+   inline vector unsigned int deadbeef(void) const {\n        return (vector unsigned int){0xdeadbeef, 0xabababab, 0x55555555, 0x12345678};\n    };\n };\n@@ -34,4 +34,5 @@ int main()\n   return 0;\n }\n \n-\n+/* Ignore a warning that is irrelevant to the purpose of this test.  */\n+/* { dg-prune-output \".*GCC vector returned by reference.*\" } */"}, {"sha": "cb3cb24671f926e38c3b8343e5ec6022707d667d", "filename": "gcc/testsuite/g++.dg/ext/attribute-test-2.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-2.C?ref=89b7d5e1898644c9bfd7012181f18cc4523e29cc", "patch": "@@ -11,7 +11,7 @@ class vector_holder\n    char __attribute__((vector_size(16))) vec;\n    char __attribute__((vector_size(16))) vec1;\n public:\n-   operator __attribute__((vector_size(16))) short (void) { // { dg-warning \"vector returned by ref\" \"\" { target { powerpc*-*-linux* && ilp32 } } }\n+   operator __attribute__((vector_size(16))) short (void) {\n      return (__attribute__((vector_size(16))) short) vec;\n    }\n \n@@ -47,3 +47,6 @@ int main()\n \n   return 0;\n }\n+\n+/* Ignore a warning that is irrelevant to the purpose of this test.  */\n+/* { dg-prune-output \".*GCC vector returned by reference.*\" } */"}, {"sha": "050cbb4ed39f507005a934fce2e24f3acc092ff3", "filename": "gcc/testsuite/g++.dg/ext/attribute-test-3.C", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-3.C?ref=89b7d5e1898644c9bfd7012181f18cc4523e29cc", "patch": "@@ -23,7 +23,7 @@ class Star\n \tfriend vector float fTest(const Star &);\n };\n \n-vector float Star::foo() const  // { dg-warning \"vector returned by ref\" \"\" { target { powerpc*-*-linux* && ilp32 } } }\n+vector float Star::foo() const\n {\n     return data.v;\n }\n@@ -50,6 +50,5 @@ int main() {\n   return 0;\n }\n \n-\n-  \n-\n+/* Ignore a warning that is irrelevant to the purpose of this test.  */\n+/* { dg-prune-output \".*GCC vector returned by reference.*\" } */"}, {"sha": "4783ee8a4068d5c11d759215c4112bc8bdb734b9", "filename": "gcc/testsuite/g++.dg/ext/attribute-test-4.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b7d5e1898644c9bfd7012181f18cc4523e29cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattribute-test-4.C?ref=89b7d5e1898644c9bfd7012181f18cc4523e29cc", "patch": "@@ -23,7 +23,7 @@ class Star\n \tfriend vector float fTest();\n };\n \n-vector float Star::foo()   // { dg-warning \"vector returned by ref\" \"\" { target { powerpc*-*-linux* && ilp32 } } }\n+vector float Star::foo()\n {\n     return data.v;\n }\n@@ -46,3 +46,6 @@ int main() {\n        abort();\n   return 0;\n }\n+\n+/* Ignore a warning that is irrelevant to the purpose of this test.  */\n+/* { dg-prune-output \".*GCC vector returned by reference.*\" } */"}]}