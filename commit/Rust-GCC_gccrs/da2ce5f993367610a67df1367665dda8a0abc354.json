{"sha": "da2ce5f993367610a67df1367665dda8a0abc354", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEyY2U1Zjk5MzM2NzYxMGE2N2RmMTM2NzY2NWRkYThhMGFiYzM1NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-03-21T11:42:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-03-21T11:42:22Z"}, "message": "re PR tree-optimization/80122 (__builtin_va_arg_pack() and __builtin_va_arg_pack_len() does not work correctly)\n\n2017-03-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80122\n\t* tree-inline.c (copy_bb): Do not expans va-arg packs or\n\tva_arg_pack_len when the inlined call stmt requires pack\n\texpansion itself.\n\t* tree-inline.h (struct copy_body_data): Make call_stmt a gcall *.\n\n\t* gcc.dg/torture/pr80122.c: New testcase.\n\nFrom-SVN: r246313", "tree": {"sha": "6c14e5dc64408db56178bba818a5fdef94d174eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c14e5dc64408db56178bba818a5fdef94d174eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da2ce5f993367610a67df1367665dda8a0abc354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da2ce5f993367610a67df1367665dda8a0abc354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da2ce5f993367610a67df1367665dda8a0abc354", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da2ce5f993367610a67df1367665dda8a0abc354/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c00ae2406531c22960650d2d2b0687b71fde52b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c00ae2406531c22960650d2d2b0687b71fde52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c00ae2406531c22960650d2d2b0687b71fde52b"}], "stats": {"total": 75, "additions": 71, "deletions": 4}, "files": [{"sha": "f48f6d39aac127a5098e438c201919c75b94a3c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da2ce5f993367610a67df1367665dda8a0abc354", "patch": "@@ -1,3 +1,11 @@\n+2017-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80122\n+\t* tree-inline.c (copy_bb): Do not expans va-arg packs or\n+\tva_arg_pack_len when the inlined call stmt requires pack\n+\texpansion itself.\n+\t* tree-inline.h (struct copy_body_data): Make call_stmt a gcall *.\n+\n 2017-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/78158"}, {"sha": "68705a7de064ce2ec4a796d6a307446a043976a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da2ce5f993367610a67df1367665dda8a0abc354", "patch": "@@ -1,3 +1,8 @@\n+2017-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80122\n+\t* gcc.dg/torture/pr80122.c: New testcase.\n+\n 2017-03-21  Toma Tabacu  <toma.tabacu@imgtec.com>\n \n \t* gcc.dg/pic-2.c: Skip for MIPS."}, {"sha": "a76d756c32e2a45c8bd8a0e338cce213ca141631", "filename": "gcc/testsuite/gcc.dg/torture/pr80122.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80122.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80122.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80122.c?ref=da2ce5f993367610a67df1367665dda8a0abc354", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do run } */\n+\n+#define __GNU_ALWAYS_INLINE inline __attribute__(( __always_inline__))\n+\n+#define DEVT_ALL    0\n+\n+#define CMD_ABI_DEVICES 100\n+\n+static __GNU_ALWAYS_INLINE int\n+send_msg_to_gm_w_dev_t(int msg_type, unsigned int dev_msg_type,\n+\t\t       int devt, ...)\n+{\n+  char s[256];\n+  int nArgs = __builtin_va_arg_pack_len();\n+  if (nArgs != 2)\n+    __builtin_abort ();\n+  __builtin_sprintf (s, \"%d\", __builtin_va_arg_pack ());\n+  if (__builtin_strcmp (s, \"99\") != 0)\n+    __builtin_abort ();\n+  /* do something with nArgs and ... */ \n+  return 0;\n+}\n+\n+static __GNU_ALWAYS_INLINE int\n+send_msg_to_gm(int msg_type, unsigned int dev_msg_type,\n+\t       ...)\n+{\n+  int nArgs = __builtin_va_arg_pack_len();\n+  if (nArgs != 2)\n+    __builtin_abort ();\n+  return send_msg_to_gm_w_dev_t(msg_type, dev_msg_type,\n+\t\t\t\tDEVT_ALL, __builtin_va_arg_pack()); \n+}\n+\n+static __GNU_ALWAYS_INLINE int\n+send_enable(unsigned int dev_msg_type, ...)\n+{\n+  int nArgs = __builtin_va_arg_pack_len();\n+  if (nArgs != 2)\n+    __builtin_abort ();\n+  return send_msg_to_gm(CMD_ABI_DEVICES, dev_msg_type,  __builtin_va_arg_pack());\n+}\n+\n+int \n+main(void)\n+{\n+  int mode = 99;\n+\n+  send_enable(1, mode, sizeof(mode));\n+\n+  return 0;\n+}"}, {"sha": "6b6d489f6ca49631a0e31fe47e0b13313ca2e5a1", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=da2ce5f993367610a67df1367665dda8a0abc354", "patch": "@@ -1860,7 +1860,8 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t  call_stmt = dyn_cast <gcall *> (stmt);\n \t  if (call_stmt\n \t      && gimple_call_va_arg_pack_p (call_stmt)\n-\t      && id->call_stmt)\n+\t      && id->call_stmt\n+\t      && ! gimple_call_va_arg_pack_p (id->call_stmt))\n \t    {\n \t      /* __builtin_va_arg_pack () should be replaced by\n \t\t all arguments corresponding to ... in the caller.  */\n@@ -1940,7 +1941,8 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t\t   && id->call_stmt\n \t\t   && (decl = gimple_call_fndecl (stmt))\n \t\t   && DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL\n-\t\t   && DECL_FUNCTION_CODE (decl) == BUILT_IN_VA_ARG_PACK_LEN)\n+\t\t   && DECL_FUNCTION_CODE (decl) == BUILT_IN_VA_ARG_PACK_LEN\n+\t\t   && ! gimple_call_va_arg_pack_p (id->call_stmt))\n \t    {\n \t      /* __builtin_va_arg_pack_len () should be replaced by\n \t\t the number of anonymous arguments.  */\n@@ -4584,7 +4586,7 @@ expand_call_inline (basic_block bb, gimple *stmt, copy_body_data *id)\n   /* Record the function we are about to inline.  */\n   id->src_fn = fn;\n   id->src_cfun = DECL_STRUCT_FUNCTION (fn);\n-  id->call_stmt = stmt;\n+  id->call_stmt = call_stmt;\n \n   /* If the src function contains an IFN_VA_ARG, then so will the dst\n      function after inlining.  Likewise for IFN_GOMP_USE_SIMT.  */"}, {"sha": "88b3286374555969ea228da94058ffe81cde5698", "filename": "gcc/tree-inline.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2Ftree-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da2ce5f993367610a67df1367665dda8a0abc354/gcc%2Ftree-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.h?ref=da2ce5f993367610a67df1367665dda8a0abc354", "patch": "@@ -81,7 +81,7 @@ struct copy_body_data\n \n   /* GIMPLE_CALL if va arg parameter packs should be expanded or NULL\n      is not.  */\n-  gimple *call_stmt;\n+  gcall *call_stmt;\n \n   /* Exception landing pad the inlined call lies in.  */\n   int eh_lp_nr;"}]}