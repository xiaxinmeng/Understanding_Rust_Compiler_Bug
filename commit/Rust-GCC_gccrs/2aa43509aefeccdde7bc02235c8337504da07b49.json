{"sha": "2aa43509aefeccdde7bc02235c8337504da07b49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhNDM1MDlhZWZlY2NkZGU3YmMwMjIzNWM4MzM3NTA0ZGEwN2I0OQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2008-04-24T14:21:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-04-24T14:21:45Z"}, "message": "re PR tree-optimization/36034 (wrong code vectorizing unrolled inner loop (SLP))\n\n2008-04-24  Ira Rosen  <irar@il.ibm.com>\n\tRichard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/36034\n\t* tree-vect-analyze.c (vect_analyze_group_access): SLP is\n\tincapable of dealing with loads with gaps.\n\n\t* gcc.c-torture/execute/pr36034-1.c: New testcase.\n\t* gcc.c-torture/execute/pr36034-2.c: Likewise.\n\nCo-Authored-By: Richard Guenther <rguenther@suse.de>\n\nFrom-SVN: r134628", "tree": {"sha": "20f5645c1cf1e8266945a05d8e0fa57a1f2e0129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20f5645c1cf1e8266945a05d8e0fa57a1f2e0129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aa43509aefeccdde7bc02235c8337504da07b49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa43509aefeccdde7bc02235c8337504da07b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aa43509aefeccdde7bc02235c8337504da07b49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa43509aefeccdde7bc02235c8337504da07b49/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22a812674cef168628bcf4760ef8faba4bb4cdb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a812674cef168628bcf4760ef8faba4bb4cdb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a812674cef168628bcf4760ef8faba4bb4cdb0"}], "stats": {"total": 91, "additions": 87, "deletions": 4}, "files": [{"sha": "e28f020a48a7825f874b46d6f21709f1817634f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2aa43509aefeccdde7bc02235c8337504da07b49", "patch": "@@ -1,3 +1,10 @@\n+2008-04-24  Ira Rosen  <irar@il.ibm.com>\n+\tRichard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36034\n+\t* tree-vect-analyze.c (vect_analyze_group_access): SLP is\n+\tincapable of dealing with loads with gaps.\n+\n 2008-04-24  Rafael Espindola  <espindola@google.com>\n \n \t* tree-flow.h (vrp_evaluate_conditional): Change signature."}, {"sha": "fa3768efc2e8e0bbe2f4c3e4e4b05b5c976f656a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2aa43509aefeccdde7bc02235c8337504da07b49", "patch": "@@ -1,3 +1,10 @@\n+2008-04-24  Ira Rosen  <irar@il.ibm.com>\n+\tRichard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36034\n+\t* gcc.c-torture/execute/pr36034-1.c: New testcase.\n+\t* gcc.c-torture/execute/pr36034-2.c: Likewise.\n+\n 2008-04-24  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/concat_length.adb: New test."}, {"sha": "eddec57cdb6dfb31d6623edeb1a269acc8376f87", "filename": "gcc/testsuite/gcc.c-torture/execute/pr36034-1.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36034-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36034-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36034-1.c?ref=2aa43509aefeccdde7bc02235c8337504da07b49", "patch": "@@ -0,0 +1,32 @@\n+double x[5][10] = { { 10, 11, 12, 13, 14, 15, -1, -1, -1, -1 },\n+                    { 21, 22, 23, 24, 25, 26, -1, -1, -1, -1 },\n+                    { 32, 33, 34, 35, 36, 37, -1, -1, -1, -1 },\n+                    { 43, 44, 45, 46, 47, 48, -1, -1, -1, -1 },\n+                    { 54, 55, 56, 57, 58, 59, -1, -1, -1, -1 } };\n+double tmp[5][6];\n+\n+void __attribute__((noinline))\n+test (void)\n+{ \n+  int i, j;\n+  for (i = 0; i < 5; ++i)\n+    {\n+      tmp[i][0] = x[i][0];\n+      tmp[i][1] = x[i][1];\n+      tmp[i][2] = x[i][2];\n+      tmp[i][3] = x[i][3];\n+      tmp[i][4] = x[i][4];\n+      tmp[i][5] = x[i][5];\n+    }\n+}\n+extern void abort (void);\n+int main()\n+{\n+  int i, j;\n+  test();\n+  for (i = 0; i < 5; ++i)\n+    for (j = 0; j < 6; ++j)\n+      if (tmp[i][j] == -1)\n+        abort ();\n+  return 0;\n+}"}, {"sha": "10abb791bbb11e0c9c9fe8cc9423843624d7bb1b", "filename": "gcc/testsuite/gcc.c-torture/execute/pr36034-2.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36034-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36034-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36034-2.c?ref=2aa43509aefeccdde7bc02235c8337504da07b49", "patch": "@@ -0,0 +1,32 @@\n+double x[50] = { 10, 11, 12, 13, 14, 15, -1, -1, -1, -1,\n+                 21, 22, 23, 24, 25, 26, -1, -1, -1, -1,\n+                 32, 33, 34, 35, 36, 37, -1, -1, -1, -1,\n+                 43, 44, 45, 46, 47, 48, -1, -1, -1, -1,\n+                 54, 55, 56, 57, 58, 59, -1, -1, -1, -1 };\n+double tmp[30];\n+\n+void __attribute__((noinline))\n+test (void)\n+{\n+  int i, j;\n+  for (i = 0; i < 5; ++i)\n+    {\n+      tmp[i*6] = x[i*10];\n+      tmp[i*6+1] = x[i*10+1];\n+      tmp[i*6+2] = x[i*10+2];\n+      tmp[i*6+3] = x[i*10+3];\n+      tmp[i*6+4] = x[i*10+4];\n+      tmp[i*6+5] = x[i*10+5];\n+    }\n+}\n+extern void abort (void);\n+int main()\n+{\n+  int i, j;\n+  test();\n+  for (i = 0; i < 5; ++i)\n+    for (j = 0; j < 6; ++j)\n+      if (tmp[i*6+j] == -1)\n+        abort ();\n+  return 0;\n+}"}, {"sha": "729ad799822d421fced80e731024da1115014a9f", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa43509aefeccdde7bc02235c8337504da07b49/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=2aa43509aefeccdde7bc02235c8337504da07b49", "patch": "@@ -2228,11 +2228,16 @@ vect_analyze_group_access (struct data_reference *dr)\n \n       /* Check that the size of the interleaving is equal to STEP for stores,\n          i.e., that there are no gaps.  */\n-      if (!DR_IS_READ (dr) && dr_step != count_in_bytes)\n+      if (dr_step != count_in_bytes)\n         {\n-          if (vect_print_dump_info (REPORT_DETAILS))\n-            fprintf (vect_dump, \"interleaved store with gaps\");\n-          return false;\n+          if (DR_IS_READ (dr))\n+            slp_impossible = true;\n+          else\n+            {\n+              if (vect_print_dump_info (REPORT_DETAILS))\n+                fprintf (vect_dump, \"interleaved store with gaps\");\n+              return false;\n+            }\n         }\n \n       /* Check that STEP is a multiple of type size.  */"}]}