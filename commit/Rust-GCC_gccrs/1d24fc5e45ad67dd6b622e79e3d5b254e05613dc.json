{"sha": "1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQyNGZjNWU0NWFkNjdkZDZiNjIyZTc5ZTNkNWIyNTRlMDU2MTNkYw==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-06-25T09:00:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-25T09:00:52Z"}, "message": "fmap.ads, [...] (Source_Data.Get_Object): Field removed, since it can be computed efficiently from the other fields.\n\n2009-06-25  Emmanuel Briot  <briot@adacore.com>\n\n\t* fmap.ads, make.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb,\n\tprj-env.ads (Source_Data.Get_Object): Field removed, since it can be\n\tcomputed efficiently from the other fields.\n\t(Object_To_Global_Archive): New subprogram\n\t(Create_Mapping): Remove unneeded call to Remove_Forbidden_File_Name.\n\t(Override_Kind): Fix handling of separates in Ada.\n\t(Create_Mapping_File): Remove duplicate code\n\t(Naming_Data.Implementation_Exception, Specification_Exception):\n\tfield removed, since never used.\n\t(Naming_Data.Specs, .Bodies): field removed, since this is only\n\tused while processing the project and is not needed once the tree\n\tis in memory. This brings Naming_Data and Lang_Naming_Data\n\tcloser (same content now, but different use still).\n\nFrom-SVN: r148934", "tree": {"sha": "4c88206f35556d7b538fc30d6ef08065a3ef9f42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c88206f35556d7b538fc30d6ef08065a3ef9f42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f2eeab7a7bf4562ba1ed32e51c879c756fb3193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2eeab7a7bf4562ba1ed32e51c879c756fb3193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f2eeab7a7bf4562ba1ed32e51c879c756fb3193"}], "stats": {"total": 402, "additions": 155, "deletions": 247}, "files": [{"sha": "03f594b852d3b4dac5d057fdfb45dd1b9eb15ca4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "patch": "@@ -1,3 +1,19 @@\n+2009-06-25  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* fmap.ads, make.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb,\n+\tprj-env.ads (Source_Data.Get_Object): Field removed, since it can be\n+\tcomputed efficiently from the other fields.\n+\t(Object_To_Global_Archive): New subprogram\n+\t(Create_Mapping): Remove unneeded call to Remove_Forbidden_File_Name.\n+\t(Override_Kind): Fix handling of separates in Ada.\n+\t(Create_Mapping_File): Remove duplicate code\n+\t(Naming_Data.Implementation_Exception, Specification_Exception):\n+\tfield removed, since never used.\n+\t(Naming_Data.Specs, .Bodies): field removed, since this is only\n+\tused while processing the project and is not needed once the tree\n+\tis in memory. This brings Naming_Data and Lang_Naming_Data\n+\tcloser (same content now, but different use still).\n+\n 2009-06-25  Pascal Obry  <obry@adacore.com>\n \n \t* sem_ch4.adb: Minor reformatting."}, {"sha": "fb781ce3041762a96a073d88e4dd1edbf1e4a176", "filename": "gcc/ada/fmap.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Ffmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Ffmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.ads?ref=1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "patch": "@@ -31,6 +31,7 @@\n --  following:\n --  For each source file, there are three lines in the mapping file:\n --    Unit name with %b or %s added depending on whether it is a body or a spec\n+--              This line is omitted for file-based languages\n --    File name\n --    Path name (set to '/' if the file should be ignored in fact, ie for\n --               a Locally_Removed_File in a project)"}, {"sha": "8b1dbd50859573a611da4a433e01eae3e8ec2107", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "patch": "@@ -6643,7 +6643,7 @@ package body Make is\n          Prj.Env.Create_Mapping_File\n            (Project,\n             In_Tree  => Project_Tree,\n-            Language => No_Name,\n+            Language => Name_Ada,\n             Name     => Data.Mapping_File_Names\n                           (Data.Last_Mapping_File_Names));\n "}, {"sha": "2659fe40b8952fdce196ad71ea39bb4ed57e2906", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 75, "deletions": 176, "changes": 251, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "patch": "@@ -758,10 +758,6 @@ package body Prj.Env is\n             if Data.Locally_Removed then\n                Fmap.Add_Forbidden_File_Name (Data.File);\n             else\n-               --  Put back the file in case it was excluded in an extended\n-               --  project\n-               Fmap.Remove_Forbidden_File_Name (Data.File);\n-\n                Fmap.Add_To_File_Map\n                  (Unit_Name => Unit_Name_Type (Data.Unit.Name),\n                   File_Name => Data.File,\n@@ -779,33 +775,18 @@ package body Prj.Env is\n \n    procedure Create_Mapping_File\n      (Project  : Project_Id;\n-      Language : Name_Id := No_Name;\n+      Language : Name_Id;\n       In_Tree  : Project_Tree_Ref;\n       Name     : out Path_Name_Type)\n    is\n       File   : File_Descriptor := Invalid_FD;\n       Status : Boolean;\n \n-      Present : Project_Boolean_Htable.Instance;\n-      --  For each project in the closure of Project, the corresponding flag\n-      --  will be set to True.\n-\n-      Source : Source_Id;\n-      Suffix : File_Name_Type;\n-      Unit   : Unit_Index;\n-      Data   : Source_Id;\n-      Iter   : Source_Iterator;\n-\n       procedure Put_Name_Buffer;\n       --  Put the line contained in the Name_Buffer in the mapping file\n \n-      procedure Put_Data (Spec : Boolean);\n-      --  Put the mapping of the spec or body contained in Data in the file\n-      --  (3 lines).\n-\n-      procedure Recursive_Flag (Prj : Project_Id);\n-      --  Set the flags corresponding to Prj, the projects it imports\n-      --  (directly or indirectly) or extends to True. Call itself recursively.\n+      procedure Process (Project : Project_Id; State : in out Integer);\n+      --  Generate the mapping file for Project (not recursively)\n \n       ---------\n       -- Put --\n@@ -819,81 +800,97 @@ package body Prj.Env is\n          Name_Buffer (Name_Len) := ASCII.LF;\n          Last := Write (File, Name_Buffer (1)'Address, Name_Len);\n \n+         if Current_Verbosity = High then\n+            Write_Str (\"Mapping file: \" & Name_Buffer (1 .. Name_Len));\n+         end if;\n+\n          if Last /= Name_Len then\n             Prj.Com.Fail (\"Disk full, cannot write mapping file\");\n          end if;\n       end Put_Name_Buffer;\n \n-      --------------\n-      -- Put_Data --\n-      --------------\n-\n-      procedure Put_Data (Spec : Boolean) is\n-      begin\n-         --  Line with the unit name\n-\n-         Get_Name_String (Unit.Name);\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := '%';\n-         Name_Len := Name_Len + 1;\n-\n-         if Spec then\n-            Name_Buffer (Name_Len) := 's';\n-         else\n-            Name_Buffer (Name_Len) := 'b';\n-         end if;\n-\n-         Put_Name_Buffer;\n+      -------------\n+      -- Process --\n+      -------------\n \n-         --  Line with the file name\n+      procedure Process (Project : Project_Id; State : in out Integer) is\n+         pragma Unreferenced (State);\n+         Source : Source_Id;\n+         Suffix : File_Name_Type;\n+         Iter   : Source_Iterator;\n \n-         Get_Name_String (Data.File);\n-         Put_Name_Buffer;\n+      begin\n+         Iter := For_Each_Source (In_Tree, Project, Language => Language);\n \n-         --  Line with the path name\n+         loop\n+            Source := Prj.Element (Iter);\n+            exit when Source = No_Source;\n \n-         if Data.Locally_Removed then\n-            Name_Len := 1;\n-            Name_Buffer (1 .. Name_Len) := \"/\";\n-         else\n-            Get_Name_String (Data.Path.Name);\n-         end if;\n+            if Source.Replaced_By = No_Source\n+              and then Source.Path.Name /= No_Path\n+              and then\n+                (Source.Language.Config.Kind = File_Based\n+                 or else Source.Unit /= No_Unit_Index)\n+            then\n+               if Source.Unit /= No_Unit_Index then\n+                  Get_Name_String (Source.Unit.Name);\n+\n+                  if Get_Mode = Ada_Only then\n+                     --  ??? Mapping_Spec_Suffix could be set in the case of\n+                     --  gnatmake as well\n+                     Name_Len := Name_Len + 1;\n+                     Name_Buffer (Name_Len) := '%';\n+                     Name_Len := Name_Len + 1;\n+\n+                     if Source.Kind = Spec then\n+                        Name_Buffer (Name_Len) := 's';\n+                     else\n+                        Name_Buffer (Name_Len) := 'b';\n+                     end if;\n+                  else\n+                     case Source.Kind is\n+                        when Spec =>\n+                           Suffix :=\n+                             Source.Language.Config.Mapping_Spec_Suffix;\n+                        when Impl | Sep =>\n+                           Suffix :=\n+                             Source.Language.Config.Mapping_Body_Suffix;\n+                     end case;\n+\n+                     if Suffix /= No_File then\n+                        Add_Str_To_Name_Buffer\n+                          (Get_Name_String (Suffix));\n+                     end if;\n+                  end if;\n \n-         Put_Name_Buffer;\n-      end Put_Data;\n+                  Put_Name_Buffer;\n+               end if;\n \n-      --------------------\n-      -- Recursive_Flag --\n-      --------------------\n+               Get_Name_String (Source.File);\n+               Put_Name_Buffer;\n \n-      procedure Recursive_Flag (Prj : Project_Id) is\n-         Imported : Project_List;\n+               if Source.Locally_Removed then\n+                  Name_Len := 1;\n+                  Name_Buffer (1) := '/';\n+               else\n+                  Get_Name_String (Source.Path.Name);\n+               end if;\n \n-      begin\n-         --  Nothing to do for non existent project or project that has already\n-         --  been flagged.\n+               Put_Name_Buffer;\n+            end if;\n \n-         if Prj /= No_Project\n-           and then not Project_Boolean_Htable.Get (Present, Prj)\n-         then\n-            Project_Boolean_Htable.Set (Present, Prj, True);\n+            Next (Iter);\n+         end loop;\n+      end Process;\n \n-            Imported := Prj.Imported_Projects;\n-            while Imported /= null loop\n-               Recursive_Flag (Imported.Project);\n-               Imported := Imported.Next;\n-            end loop;\n+      procedure For_Every_Imported_Project is new\n+        For_Every_Project_Imported (State => Integer, Action => Process);\n \n-            Recursive_Flag (Prj.Extends);\n-         end if;\n-      end Recursive_Flag;\n+      Dummy : Integer := 0;\n \n    --  Start of processing for Create_Mapping_File\n \n    begin\n-      --  Flag the necessary projects\n-\n-      Recursive_Flag (Project);\n \n       --  Create the temporary file\n \n@@ -912,103 +909,7 @@ package body Prj.Env is\n          end if;\n       end if;\n \n-      if Language = No_Name then\n-         if In_Tree.Private_Part.Fill_Mapping_File then\n-            Unit := Units_Htable.Get_First (In_Tree.Units_HT);\n-            while Unit /= null loop\n-               --  Case of unit has a valid name\n-\n-               if Unit.Name /= No_Name then\n-                  Data := Unit.File_Names (Spec);\n-\n-                  --  If there is a spec, put it mapping in the file if it is\n-                  --  from a project in the closure of Project.\n-\n-                  if Data /= No_Source\n-                    and then Project_Boolean_Htable.Get (Present, Data.Project)\n-                  then\n-                     Put_Data (Spec => True);\n-                  end if;\n-\n-                  Data := Unit.File_Names (Impl);\n-\n-                  --  If there is a body (or subunit) put its mapping in the\n-                  --  file if it is from a project in the closure of Project.\n-\n-                  if Data /= No_Source\n-                    and then Project_Boolean_Htable.Get (Present, Data.Project)\n-                  then\n-                     Put_Data (Spec => False);\n-                  end if;\n-               end if;\n-\n-               Unit := Units_Htable.Get_Next (In_Tree.Units_HT);\n-            end loop;\n-         end if;\n-\n-      --  If language is defined\n-\n-      else\n-         --  For all source of the Language of all projects in the closure\n-\n-         declare\n-            P : Project_List;\n-\n-         begin\n-            P := In_Tree.Projects;\n-            while P /= null loop\n-               if Project_Boolean_Htable.Get (Present, P.Project) then\n-\n-                  Iter := For_Each_Source (In_Tree, P.Project);\n-                  loop\n-                     Source := Prj.Element (Iter);\n-                     exit when Source = No_Source;\n-\n-                     if Source.Language.Name = Language\n-                       and then Source.Replaced_By = No_Source\n-                       and then Source.Path.Name /= No_Path\n-                     then\n-                        if Source.Unit /= No_Unit_Index then\n-                           Get_Name_String (Source.Unit.Name);\n-\n-                           if Source.Kind = Spec then\n-                              Suffix :=\n-                                Source.Language.Config.Mapping_Spec_Suffix;\n-                           else\n-                              Suffix :=\n-                                Source.Language.Config.Mapping_Body_Suffix;\n-                           end if;\n-\n-                           if Suffix /= No_File then\n-                              Add_Str_To_Name_Buffer\n-                                (Get_Name_String (Suffix));\n-                           end if;\n-\n-                           Put_Name_Buffer;\n-                        end if;\n-\n-                        Get_Name_String (Source.File);\n-                        Put_Name_Buffer;\n-\n-                        if Source.Locally_Removed then\n-                           Name_Len := 1;\n-                           Name_Buffer (1 .. Name_Len) := \"/\";\n-                        else\n-                           Get_Name_String (Source.Path.Name);\n-                        end if;\n-\n-                        Put_Name_Buffer;\n-                     end if;\n-\n-                     Next (Iter);\n-                  end loop;\n-               end if;\n-\n-               P := P.Next;\n-            end loop;\n-         end;\n-      end if;\n-\n+      For_Every_Imported_Project (Project, Dummy);\n       GNAT.OS_Lib.Close (File, Status);\n \n       if not Status then\n@@ -1019,8 +920,6 @@ package body Prj.Env is\n \n          Prj.Com.Fail (\"disk full, could not write mapping file\");\n       end if;\n-\n-      Project_Boolean_Htable.Reset (Present);\n    end Create_Mapping_File;\n \n    --------------------------"}, {"sha": "a41df8ca8286d0e0a5d22fb70fff94702d0856e9", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "patch": "@@ -41,17 +41,13 @@ package Prj.Env is\n \n    procedure Create_Mapping_File\n      (Project  : Project_Id;\n-      Language : Name_Id := No_Name;\n+      Language : Name_Id;\n       In_Tree  : Project_Tree_Ref;\n       Name     : out Path_Name_Type);\n    --  Create a temporary mapping file for project Project. For each source or\n    --  template of Language in the Project, put the mapping of its file\n    --  name and path name in this file.\n    --\n-   --  This function either looks at all the source files for the specified\n-   --  language in the project, or if Language is set to No_Name, at all\n-   --  units in the project.\n-   --\n    --  Implementation note: we pass a language name, not a language_index here,\n    --  since the latter would have to match exactly the index of that language\n    --  for the specified project, and that is not information available in"}, {"sha": "4793ad2678bbbbec372dd25e24d38bd9f48fcd38", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "patch": "@@ -277,9 +277,14 @@ package body Prj.Nmsc is\n    procedure Check_Naming_Schemes\n      (Project        : Project_Id;\n       In_Tree        : Project_Tree_Ref;\n-      Is_Config_File : Boolean);\n+      Is_Config_File : Boolean;\n+      Bodies         : out Array_Element_Id;\n+      Specs          : out Array_Element_Id);\n    --  Check the naming scheme part of Data.\n    --  Is_Config_File should be True if Project is a config file (.cgpr)\n+   --  This also returns the naming scheme exceptions for unit-based\n+   --  languages (Bodies and Specs are associative arrays mapping individual\n+   --  unit names to source file names).\n \n    procedure Check_Configuration\n      (Project                   : Project_Id;\n@@ -831,6 +836,8 @@ package body Prj.Nmsc is\n       Compiler_Driver_Mandatory : Boolean;\n       Allow_Duplicate_Basenames : Boolean)\n    is\n+      Specs : Array_Element_Id;\n+      Bodies : Array_Element_Id;\n       Extending : Boolean := False;\n \n    begin\n@@ -908,13 +915,11 @@ package body Prj.Nmsc is\n \n       Extending := Project.Extends /= No_Project;\n \n-      Check_Naming_Schemes (Project, In_Tree, Is_Config_File);\n+      Check_Naming_Schemes (Project, In_Tree, Is_Config_File, Bodies, Specs);\n \n       if Get_Mode = Ada_Only then\n-         Prepare_Ada_Naming_Exceptions\n-           (Project.Naming.Bodies, In_Tree, Impl);\n-         Prepare_Ada_Naming_Exceptions\n-           (Project.Naming.Specs, In_Tree, Spec);\n+         Prepare_Ada_Naming_Exceptions (Bodies, In_Tree, Impl);\n+         Prepare_Ada_Naming_Exceptions (Specs, In_Tree, Spec);\n       end if;\n \n       --  Find the sources\n@@ -929,11 +934,11 @@ package body Prj.Nmsc is\n             --  of this project file.\n \n             Warn_If_Not_Sources\n-              (Project, In_Tree, Project.Naming.Bodies,\n+              (Project, In_Tree, Bodies,\n                Specs     => False,\n                Extending => Extending);\n             Warn_If_Not_Sources\n-              (Project, In_Tree, Project.Naming.Specs,\n+              (Project, In_Tree, Specs,\n                Specs     => True,\n                Extending => Extending);\n \n@@ -2700,7 +2705,9 @@ package body Prj.Nmsc is\n    procedure Check_Naming_Schemes\n      (Project        : Project_Id;\n       In_Tree        : Project_Tree_Ref;\n-      Is_Config_File : Boolean)\n+      Is_Config_File : Boolean;\n+      Bodies         : out Array_Element_Id;\n+      Specs          : out Array_Element_Id)\n    is\n       Naming_Id : constant Package_Id :=\n                    Util.Value_Of (Name_Naming, Project.Decl.Packages, In_Tree);\n@@ -3163,20 +3170,18 @@ package body Prj.Nmsc is\n             Separate_Suffix => Project.Naming.Separate_Suffix,\n             Sep_Suffix_Loc  => Sep_Suffix_Loc);\n \n-         Project.Naming.Bodies :=\n-           Util.Value_Of (Name_Body, Naming.Decl.Arrays, In_Tree);\n+         Bodies := Util.Value_Of (Name_Body, Naming.Decl.Arrays, In_Tree);\n \n-         if Project.Naming.Bodies /= No_Array_Element then\n+         if Bodies /= No_Array_Element then\n             Check_And_Normalize_Unit_Names\n-              (Project, In_Tree, Project.Naming.Bodies, \"Naming.Bodies\");\n+              (Project, In_Tree, Bodies, \"Naming.Bodies\");\n          end if;\n \n-         Project.Naming.Specs :=\n-           Util.Value_Of (Name_Spec, Naming.Decl.Arrays, In_Tree);\n+         Specs := Util.Value_Of (Name_Spec, Naming.Decl.Arrays, In_Tree);\n \n-         if Project.Naming.Specs /= No_Array_Element then\n+         if Specs /= No_Array_Element then\n             Check_And_Normalize_Unit_Names\n-              (Project, In_Tree, Project.Naming.Specs, \"Naming.Specs\");\n+              (Project, In_Tree, Specs, \"Naming.Specs\");\n          end if;\n \n          --  Check Spec_Suffix\n@@ -3374,6 +3379,9 @@ package body Prj.Nmsc is\n    --  Start of processing for Check_Naming_Schemes\n \n    begin\n+      Specs := No_Array_Element;\n+      Bodies := No_Array_Element;\n+\n       --  No Naming package or parsing a configuration file? nothing to do\n \n       if Naming_Id /= No_Package and not Is_Config_File then\n@@ -4229,20 +4237,6 @@ package body Prj.Nmsc is\n                Project.Naming.Body_Suffix := Impl_Suffixs;\n             end if;\n          end;\n-\n-         --  Get the exceptions, if any\n-\n-         Project.Naming.Specification_Exceptions :=\n-           Util.Value_Of\n-             (Name_Specification_Exceptions,\n-              In_Arrays => Naming.Decl.Arrays,\n-              In_Tree   => In_Tree);\n-\n-         Project.Naming.Implementation_Exceptions :=\n-           Util.Value_Of\n-             (Name_Implementation_Exceptions,\n-              In_Arrays => Naming.Decl.Arrays,\n-              In_Tree   => In_Tree);\n       end if;\n    end Check_Package_Naming;\n \n@@ -7324,16 +7318,22 @@ package body Prj.Nmsc is\n    -------------------\n \n    procedure Override_Kind (Source : Source_Id; Kind : Source_Kind) is\n-      Unit : constant Unit_Index := Source.Unit;\n    begin\n-      --  Remove reference in the unit, if necessary\n+      --  If the file was previously already associated with a unit, change it\n \n-      if Unit /= null\n+      if Source.Unit /= null\n         and then Source.Kind in Spec_Or_Body\n-        and then Unit.File_Names (Source.Kind) /= null\n+        and then Source.Unit.File_Names (Source.Kind) /= null\n       then\n-         Unit.File_Names (Source.Kind).Unit := No_Unit_Index;\n-         Unit.File_Names (Source.Kind) := null;\n+         --  If we had another file referencing the same unit (for instance it\n+         --  was in an extended project), that source file is in fact invisible\n+         --  from now on, and in particular doesn't belong to the same unit\n+\n+         if Source.Unit.File_Names (Source.Kind) /= Source then\n+            Source.Unit.File_Names (Source.Kind).Unit := No_Unit_Index;\n+         end if;\n+\n+         Source.Unit.File_Names (Source.Kind) := null;\n       end if;\n \n       Source.Kind := Kind;"}, {"sha": "e66182fc9f421c6bd1d3346b27af00a85fa201c7", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "patch": "@@ -73,11 +73,7 @@ package body Prj is\n                         Casing                    => All_Lower_Case,\n                         Spec_Suffix               => No_Array_Element,\n                         Body_Suffix               => No_Array_Element,\n-                        Separate_Suffix           => No_File,\n-                        Specs                     => No_Array_Element,\n-                        Bodies                    => No_Array_Element,\n-                        Specification_Exceptions  => No_Array_Element,\n-                        Implementation_Exceptions => No_Array_Element);\n+                        Separate_Suffix           => No_File);\n \n    Project_Empty : constant Project_Data :=\n                      (Qualifier                      => Unspecified,\n@@ -1455,6 +1451,19 @@ package body Prj is\n         and then not Source.Locally_Removed;\n    end Is_Compilable;\n \n+   ------------------------------\n+   -- Object_To_Global_Archive --\n+   ------------------------------\n+\n+   function Object_To_Global_Archive (Source : Source_Id) return Boolean is\n+   begin\n+      return Source.Language.Config.Kind = File_Based\n+        and then Source.Kind = Impl\n+        and then Source.Language.Config.Objects_Linked\n+        and then Is_Compilable (Source)\n+        and then Source.Language.Config.Object_Generated;\n+   end Object_To_Global_Archive;\n+\n    ----------------------------\n    -- Get_Language_From_Name --\n    ----------------------------"}, {"sha": "8c564f8de3f540c02984176982c1addc18b51e3a", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 10, "deletions": 23, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d24fc5e45ad67dd6b622e79e3d5b254e05613dc/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=1d24fc5e45ad67dd6b622e79e3d5b254e05613dc", "patch": "@@ -399,6 +399,12 @@ package Prj is\n    --  Return True if we know how to compile Source (i.e. if a compiler is\n    --  defined). This doesn't indicate whether the source should be compiled.\n \n+   function Object_To_Global_Archive (Source : Source_Id) return Boolean;\n+   pragma Inline (Object_To_Global_Archive);\n+   --  Return True if the object file should be put in the global archive.\n+   --  This is for Ada, when only the closure of a main needs to be\n+   --  (re)compiled.\n+\n    function Other_Part (Source : Source_Id) return Source_Id;\n    pragma Inline (Other_Part);\n    --  Source ID for the other part, if any: for a spec, indicates its body;\n@@ -662,7 +668,10 @@ package Prj is\n       --  Kind of the source: spec, body or subunit\n \n       Unit                   : Unit_Index          := No_Unit_Index;\n-      --  Name of the unit, if language is unit based\n+      --  Name of the unit, if language is unit based. This is only set for\n+      --  those finles that are part of the compilation set (for instance a\n+      --  file in an extended project that is overridden will not have this\n+      --  field set).\n \n       Index                  : Int                 := 0;\n       --  Index of the source in a multi unit source file (the same Source_Data\n@@ -673,11 +682,6 @@ package Prj is\n       Locally_Removed        : Boolean             := False;\n       --  True if the source has been \"excluded\"\n \n-      Get_Object             : Boolean             := False;\n-      --  Indicates that the object of the source should be put in the global\n-      --  archive. This is for Ada, when only the closure of a main needs to\n-      --  be compiled/recompiled.\n-\n       Replaced_By            : Source_Id           := No_Source;\n \n       File                   : File_Name_Type      := No_File;\n@@ -747,7 +751,6 @@ package Prj is\n                        Unit                   => No_Unit_Index,\n                        Index                  => 0,\n                        Locally_Removed        => False,\n-                       Get_Object             => False,\n                        Replaced_By            => No_Source,\n                        File                   => No_File,\n                        Display_File           => No_File,\n@@ -848,22 +851,6 @@ package Prj is\n       Separate_Suffix : File_Name_Type := No_File;\n       --  String to append to unit name for source file name of an Ada subunit\n \n-      Specs : Array_Element_Id := No_Array_Element;\n-      --  An associative array mapping individual specs to source file names\n-      --  This is specific to unit-based languages.\n-\n-      Bodies : Array_Element_Id := No_Array_Element;\n-      --  An associative array mapping individual bodies to source file names\n-      --  This is specific to unit-based languages.\n-\n-      Specification_Exceptions : Array_Element_Id := No_Array_Element;\n-      --  An associative array listing spec file names that do not have the\n-      --  spec suffix. Not used by Ada. Indexed by programming language name.\n-\n-      Implementation_Exceptions : Array_Element_Id := No_Array_Element;\n-      --  An associative array listing body file names that do not have the\n-      --  body suffix. Not used by Ada. Indexed by programming language name.\n-\n    end record;\n \n    function Spec_Suffix_Of"}]}