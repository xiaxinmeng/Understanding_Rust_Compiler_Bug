{"sha": "c1b52c0ef6eeb91b5326eee18bb2652e3f732162", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFiNTJjMGVmNmVlYjkxYjUzMjZlZWUxOGJiMjY1MmUzZjczMjE2Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-09-12T13:28:37Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-09-12T13:28:37Z"}, "message": "Make more use of in_hard_reg_set_p\n\nAn upcoming patch will convert hard_regno_nregs into an inline\nfunction, which in turn allows hard_regno_nregs to be used as the\nname of a targetm field.  This patch rewrites a use that can use\nin_hard_reg_set_p instead.\n\n2017-09-12  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* ira-costs.c (record_operand_costs): Use in_hard_reg_set_p\n\tinstead of hard_regno_nregs.\n\nFrom-SVN: r252013", "tree": {"sha": "c04b3abede6f4595566e4d3e30cd4ddcc6d6aa53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c04b3abede6f4595566e4d3e30cd4ddcc6d6aa53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1b52c0ef6eeb91b5326eee18bb2652e3f732162", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b52c0ef6eeb91b5326eee18bb2652e3f732162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b52c0ef6eeb91b5326eee18bb2652e3f732162", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b52c0ef6eeb91b5326eee18bb2652e3f732162/comments", "author": null, "committer": null, "parents": [{"sha": "4edd6298d853890dca6a30cfdf209e3e89a2a533", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4edd6298d853890dca6a30cfdf209e3e89a2a533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4edd6298d853890dca6a30cfdf209e3e89a2a533"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "cc2e3ee73472d2462c19c3c52331e8e33b6b050a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b52c0ef6eeb91b5326eee18bb2652e3f732162/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b52c0ef6eeb91b5326eee18bb2652e3f732162/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1b52c0ef6eeb91b5326eee18bb2652e3f732162", "patch": "@@ -1,3 +1,8 @@\n+2017-09-12  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* ira-costs.c (record_operand_costs): Use in_hard_reg_set_p\n+\tinstead of hard_regno_nregs.\n+\n 2017-09-12  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* config/aarch64/aarch64.c (aarch64_hard_regno_mode_ok): Use"}, {"sha": "714bdbd8c708a8fd1e39e040e108581686340b91", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b52c0ef6eeb91b5326eee18bb2652e3f732162/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b52c0ef6eeb91b5326eee18bb2652e3f732162/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=c1b52c0ef6eeb91b5326eee18bb2652e3f732162", "patch": "@@ -1386,7 +1386,7 @@ record_operand_costs (rtx_insn *insn, enum reg_class *pref)\n \t  cost_classes_t cost_classes_ptr = regno_cost_classes[regno];\n \t  enum reg_class *cost_classes = cost_classes_ptr->classes;\n \t  reg_class_t rclass;\n-\t  int k, nr;\n+\t  int k;\n \n \t  i = regno == (int) REGNO (src) ? 1 : 0;\n \t  for (k = cost_classes_ptr->num - 1; k >= 0; k--)\n@@ -1398,18 +1398,9 @@ record_operand_costs (rtx_insn *insn, enum reg_class *pref)\n \t\t{\n \t\t  if (reg_class_size[rclass] == 1)\n \t\t    op_costs[i]->cost[k] = -frequency;\n-\t\t  else\n-\t\t    {\n-\t\t      for (nr = 0;\n-\t\t\t   nr < hard_regno_nregs[other_regno][mode];\n-\t\t\t   nr++)\n-\t\t\tif (! TEST_HARD_REG_BIT (reg_class_contents[rclass],\n-\t\t\t\t\t\t other_regno + nr))\n-\t\t\t  break;\n-\t\t      \n-\t\t      if (nr == hard_regno_nregs[other_regno][mode])\n-\t\t\top_costs[i]->cost[k] = -frequency;\n-\t\t    }\n+\t\t  else if (in_hard_reg_set_p (reg_class_contents[rclass],\n+\t\t\t\t\t      mode, other_regno))\n+\t\t    op_costs[i]->cost[k] = -frequency;\n \t\t}\n \t    }\n \t}"}]}