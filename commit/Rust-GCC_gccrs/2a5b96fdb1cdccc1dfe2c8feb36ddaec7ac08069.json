{"sha": "2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE1Yjk2ZmRiMWNkY2NjMWRmZTJjOGZlYjM2ZGRhZWM3YWMwODA2OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2000-04-27T14:13:48Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-04-27T14:13:48Z"}, "message": "expr.c (store_expr): Use clear_storage instead of direct memset libcall.\n\n\t* expr.c (store_expr): Use clear_storage instead of direct memset\n\tlibcall.\n\nFrom-SVN: r33484", "tree": {"sha": "457e538cbad868c1a66850e6c9b2be338a4339f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/457e538cbad868c1a66850e6c9b2be338a4339f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069/comments", "author": null, "committer": null, "parents": [{"sha": "6d844225475f369c544da9102d808b915d71d4d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d844225475f369c544da9102d808b915d71d4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d844225475f369c544da9102d808b915d71d4d9"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "e2063af643bf77ba05ae91277311e567eae15015", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069", "patch": "@@ -1,3 +1,8 @@\n+Thu Apr 27 16:11:00 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n+\n+\t* expr.c (store_expr): Use clear_storage instead of direct memset\n+\tlibcall.\n+\n Thu Apr 27 10:36:51 2000  Alexandre Oliva  <aoliva@cygnus.com>\n \n \t* config/mn10300/mn10300.c (mn10300_address_cost): Test"}, {"sha": "a0b8465cab8ed813b5287d2ca8a12f82cc75dd9a", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069", "patch": "@@ -3933,6 +3933,7 @@ store_expr (exp, target, want_value)\n \t\t= size_binop (MIN_EXPR,\n \t\t\t      make_tree (sizetype, size),\n \t\t\t      size_int (TREE_STRING_LENGTH (exp)));\n+\t      int align = TYPE_ALIGN (TREE_TYPE (exp));\n \t      rtx copy_size_rtx = expand_expr (copy_size, NULL_RTX,\n \t\t\t\t\t       VOIDmode, 0);\n \t      rtx label = 0;\n@@ -3951,6 +3952,9 @@ store_expr (exp, target, want_value)\n \t\t{\n \t\t  addr = plus_constant (addr, TREE_STRING_LENGTH (exp));\n \t\t  size = plus_constant (size, - TREE_STRING_LENGTH (exp));\n+\t\t  align = MIN (align, (BITS_PER_UNIT\n+\t\t\t\t       * (INTVAL (copy_size_rtx)\n+\t\t\t\t\t  & - INTVAL (copy_size_rtx))));\n \t\t}\n \t      else\n \t\t{\n@@ -3963,10 +3967,12 @@ store_expr (exp, target, want_value)\n \t\t\t\t       copy_size_rtx, NULL_RTX, 0,\n \t\t\t\t       OPTAB_LIB_WIDEN);\n \n+\t\t  align = BITS_PER_UNIT;\n \t\t  label = gen_label_rtx ();\n \t\t  emit_cmp_and_jump_insns (size, const0_rtx, LT, NULL_RTX,\n \t\t\t\t\t   GET_MODE (size), 0, 0, label);\n \t\t}\n+\t      align = MIN (align, expr_align (copy_size));\n \n \t      if (size != const0_rtx)\n \t\t{\n@@ -3977,22 +3983,7 @@ store_expr (exp, target, want_value)\n \t\t\t\t       size, TYPE_MODE (sizetype),\n  \t\t\t\t       GEN_INT (MEMORY_USE_WO), \n \t\t\t\t       TYPE_MODE (integer_type_node));\n-#ifdef TARGET_MEM_FUNCTIONS\n-\t\t  emit_library_call (memset_libfunc, 0, VOIDmode, 3,\n-\t\t\t\t     addr, ptr_mode,\n-\t\t\t\t     const0_rtx, TYPE_MODE (integer_type_node),\n-\t\t\t\t     convert_to_mode (TYPE_MODE (sizetype),\n-\t\t\t\t\t\t      size,\n-\t\t\t\t\t\t      TREE_UNSIGNED (sizetype)),\n-\t\t\t\t     TYPE_MODE (sizetype));\n-#else\n-\t\t  emit_library_call (bzero_libfunc, 0, VOIDmode, 2,\n-\t\t\t\t     addr, ptr_mode,\n-\t\t\t\t     convert_to_mode (TYPE_MODE (integer_type_node),\n-\t\t\t\t\t\t      size,\n-\t\t\t\t\t\t      TREE_UNSIGNED (integer_type_node)),\n-\t\t\t\t     TYPE_MODE (integer_type_node));\n-#endif\n+\t\t  clear_storage (gen_rtx_MEM (BLKmode, addr), size, align);\n \t\t}\n \n \t      if (label)"}]}