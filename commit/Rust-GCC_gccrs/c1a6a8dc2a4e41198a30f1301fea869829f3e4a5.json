{"sha": "c1a6a8dc2a4e41198a30f1301fea869829f3e4a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhNmE4ZGMyYTRlNDExOThhMzBmMTMwMWZlYTg2OTgyOWYzZTRhNQ==", "commit": {"author": {"name": "Sam Steingold", "email": "sds@gnu.org", "date": "2001-08-21T17:10:22Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-08-21T17:10:22Z"}, "message": "tradcpp.c (rescan): define obufp_before_macroname before RECACHE\n\n\t* tradcpp.c (rescan): define obufp_before_macroname before RECACHE\n\t(RECACHE): keep obufp_before_macroname up to date\n\nFrom-SVN: r45082", "tree": {"sha": "6b5c6057d1b2f370ac492761834bc106bbc308d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b5c6057d1b2f370ac492761834bc106bbc308d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1a6a8dc2a4e41198a30f1301fea869829f3e4a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a6a8dc2a4e41198a30f1301fea869829f3e4a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1a6a8dc2a4e41198a30f1301fea869829f3e4a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a6a8dc2a4e41198a30f1301fea869829f3e4a5/comments", "author": {"login": "sam-s", "id": 1596894, "node_id": "MDQ6VXNlcjE1OTY4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1596894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-s", "html_url": "https://github.com/sam-s", "followers_url": "https://api.github.com/users/sam-s/followers", "following_url": "https://api.github.com/users/sam-s/following{/other_user}", "gists_url": "https://api.github.com/users/sam-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-s/subscriptions", "organizations_url": "https://api.github.com/users/sam-s/orgs", "repos_url": "https://api.github.com/users/sam-s/repos", "events_url": "https://api.github.com/users/sam-s/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-s/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1c45ae429aa876cc41aa5a90fc4dc41dba43b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c45ae429aa876cc41aa5a90fc4dc41dba43b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c45ae429aa876cc41aa5a90fc4dc41dba43b90"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "77de236bf7a54c8ec3691be99c9967453059edc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a6a8dc2a4e41198a30f1301fea869829f3e4a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a6a8dc2a4e41198a30f1301fea869829f3e4a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1a6a8dc2a4e41198a30f1301fea869829f3e4a5", "patch": "@@ -1,3 +1,8 @@\n+2001-08-21  Sam Steingold  <sds@gnu.org>\n+\n+\t* tradcpp.c (rescan): define obufp_before_macroname before RECACHE\n+\t(RECACHE): keep obufp_before_macroname up to date\n+\n 2001-08-21  Zack Weinberg  <zackw@panix.com>\n \n \t* stmt.c: Don't include insn-codes.h."}, {"sha": "7d5e11050ec89af195772a3b2d6ce8a301cc794a", "filename": "gcc/tradcpp.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a6a8dc2a4e41198a30f1301fea869829f3e4a5/gcc%2Ftradcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a6a8dc2a4e41198a30f1301fea869829f3e4a5/gcc%2Ftradcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.c?ref=c1a6a8dc2a4e41198a30f1301fea869829f3e4a5", "patch": "@@ -1220,6 +1220,9 @@ rescan (op, output_marks)\n   /* Record position of last `real' newline.  */\n   U_CHAR *beg_of_line;\n \n+  /* This has to be a global bacause of RECACHE.  */\n+  U_CHAR *obufp_before_macroname = NULL;\n+\n /* Pop the innermost input stack level, assuming it is a macro expansion.  */\n \n #define POPMACRO \\\n@@ -1237,6 +1240,7 @@ do { ip = &instack[indepth];\t\t\\\n      op->bufp = obp;\t\t\t\\\n      check_expand (op, limit - ibp);\t\\\n      beg_of_line = 0;\t\t\t\\\n+     obufp_before_macroname += op->bufp - obp;  \\\n      obp = op->bufp; } while (0)\n \n   if (no_output && instack[indepth].fname != 0)\n@@ -1647,7 +1651,8 @@ do { ip = &instack[indepth];\t\t\\\n \t     hp = hp->next) {\n \n \t  if (hp->length == ident_length) {\n-\t    U_CHAR *obufp_before_macroname;\n+\t    /* obufp_before_macroname is used only in this block,\n+               but it has to be global because of RECACHE.  */\n \t    int op_lineno_before_macroname;\n \t    register int i = ident_length;\n \t    register U_CHAR *p = hp->name;"}]}