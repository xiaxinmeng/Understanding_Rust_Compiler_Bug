{"sha": "126e660935733b9141a2bc23dec3ed25fa339310", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI2ZTY2MDkzNTczM2I5MTQxYTJiYzIzZGVjM2VkMjVmYTMzOTMxMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-21T17:57:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-21T17:57:34Z"}, "message": "re PR c/42544 (Bad codegen with signed short cast to unsigned int, then promoted to unsigned long long)\n\n\tPR c/42544\n\tPR c/48197\n\t* c-common.c (shorten_compare): If primopN is first sign-extended\n\tto opN and then zero-extended to result type, set primopN to opN.\n\n\t* gcc.c-torture/execute/pr42544.c: New test.\n\t* gcc.c-torture/execute/pr48197.c: New test.\n\nFrom-SVN: r171252", "tree": {"sha": "a599d6407fcac6fa3c455a61f9abe5fc1d927338", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a599d6407fcac6fa3c455a61f9abe5fc1d927338"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/126e660935733b9141a2bc23dec3ed25fa339310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126e660935733b9141a2bc23dec3ed25fa339310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/126e660935733b9141a2bc23dec3ed25fa339310", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126e660935733b9141a2bc23dec3ed25fa339310/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dfd55f55b725d4e20f18e2824b7193d7ffd8715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dfd55f55b725d4e20f18e2824b7193d7ffd8715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dfd55f55b725d4e20f18e2824b7193d7ffd8715"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "7296dec723bb7054af2103f7421620972931c848", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=126e660935733b9141a2bc23dec3ed25fa339310", "patch": "@@ -1,3 +1,10 @@\n+2011-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/42544\n+\tPR c/48197\n+\t* c-common.c (shorten_compare): If primopN is first sign-extended\n+\tto opN and then zero-extended to result type, set primopN to opN.\n+\n 2011-03-21  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* config/arm/unwind-arm.c (__gnu_unwind_pr_common): Correct test"}, {"sha": "33af3d82eae98fc196500e7d4b1f74301878369e", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=126e660935733b9141a2bc23dec3ed25fa339310", "patch": "@@ -3301,6 +3301,20 @@ shorten_compare (tree *op0_ptr, tree *op1_ptr, tree *restype_ptr,\n   primop0 = get_narrower (op0, &unsignedp0);\n   primop1 = get_narrower (op1, &unsignedp1);\n \n+  /* If primopN is first sign-extended from primopN's precision to opN's\n+     precision, then zero-extended from opN's precision to\n+     *restype_ptr precision, shortenings might be invalid.  */\n+  if (TYPE_PRECISION (TREE_TYPE (primop0)) < TYPE_PRECISION (TREE_TYPE (op0))\n+      && TYPE_PRECISION (TREE_TYPE (op0)) < TYPE_PRECISION (*restype_ptr)\n+      && !unsignedp0\n+      && TYPE_UNSIGNED (TREE_TYPE (op0)))\n+    primop0 = op0;\n+  if (TYPE_PRECISION (TREE_TYPE (primop1)) < TYPE_PRECISION (TREE_TYPE (op1))\n+      && TYPE_PRECISION (TREE_TYPE (op1)) < TYPE_PRECISION (*restype_ptr)\n+      && !unsignedp1\n+      && TYPE_UNSIGNED (TREE_TYPE (op1)))\n+    primop1 = op1;\n+\n   /* Handle the case that OP0 does not *contain* a conversion\n      but it *requires* conversion to FINAL_TYPE.  */\n "}, {"sha": "cc8d1458ebce0c2a7d07fa4b7b15b0fcdd35c7fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=126e660935733b9141a2bc23dec3ed25fa339310", "patch": "@@ -1,3 +1,10 @@\n+2011-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/42544\n+\tPR c/48197\n+\t* gcc.c-torture/execute/pr42544.c: New test.\n+\t* gcc.c-torture/execute/pr48197.c: New test.\n+\n 2011-03-21  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR preprocessor/48192"}, {"sha": "c5951b06a1766fbb0e5c99758b4ae60472979328", "filename": "gcc/testsuite/gcc.c-torture/execute/pr42544.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42544.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42544.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42544.c?ref=126e660935733b9141a2bc23dec3ed25fa339310", "patch": "@@ -0,0 +1,14 @@\n+/* PR c/42544 */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+  signed short s = -1;\n+  if (sizeof (long long) == sizeof (unsigned int))\n+    return 0;\n+  if ((unsigned int) s >= 0x100000000ULL)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "37812c07b0cc98d5f7bdae65f1067957acdbcfbf", "filename": "gcc/testsuite/gcc.c-torture/execute/pr48197.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48197.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126e660935733b9141a2bc23dec3ed25fa339310/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48197.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48197.c?ref=126e660935733b9141a2bc23dec3ed25fa339310", "patch": "@@ -0,0 +1,25 @@\n+/* PR c/48197 */\n+\n+extern void abort (void);\n+static int y = 0x8000;\n+\n+int\n+main ()\n+{\n+  unsigned int x = (short)y;\n+  if (sizeof (0LL) == sizeof (0U))\n+    return 0;\n+  if (0LL > (0U ^ (short)-0x8000))\n+    abort ();\n+  if (0LL > (0U ^ x))\n+    abort ();\n+  if (0LL > (0U ^ (short)y))\n+    abort ();\n+  if ((0U ^ (short)-0x8000) < 0LL)\n+    abort ();\n+  if ((0U ^ x) < 0LL)\n+    abort ();\n+  if ((0U ^ (short)y) < 0LL)\n+    abort ();\n+  return 0;\n+}"}]}