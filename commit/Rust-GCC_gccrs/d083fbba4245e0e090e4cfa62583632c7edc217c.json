{"sha": "d083fbba4245e0e090e4cfa62583632c7edc217c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA4M2ZiYmE0MjQ1ZTBlMDkwZTRjZmE2MjU4MzYzMmM3ZWRjMjE3Yw==", "commit": {"author": {"name": "Michael Eager", "email": "eager@eagercon.com", "date": "2009-05-04T15:48:59Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2009-05-04T15:48:59Z"}, "message": "Add TARGET_SINGLE_FLOAT check.\n\nFrom-SVN: r147104", "tree": {"sha": "6f5a6dfa19e113c68c3cb361275283dd028915f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f5a6dfa19e113c68c3cb361275283dd028915f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d083fbba4245e0e090e4cfa62583632c7edc217c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d083fbba4245e0e090e4cfa62583632c7edc217c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d083fbba4245e0e090e4cfa62583632c7edc217c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d083fbba4245e0e090e4cfa62583632c7edc217c/comments", "author": {"login": "eagerm", "id": 945532, "node_id": "MDQ6VXNlcjk0NTUzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/945532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagerm", "html_url": "https://github.com/eagerm", "followers_url": "https://api.github.com/users/eagerm/followers", "following_url": "https://api.github.com/users/eagerm/following{/other_user}", "gists_url": "https://api.github.com/users/eagerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagerm/subscriptions", "organizations_url": "https://api.github.com/users/eagerm/orgs", "repos_url": "https://api.github.com/users/eagerm/repos", "events_url": "https://api.github.com/users/eagerm/events{/privacy}", "received_events_url": "https://api.github.com/users/eagerm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffef121932a2522684893c009a966d1cb43123e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffef121932a2522684893c009a966d1cb43123e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffef121932a2522684893c009a966d1cb43123e2"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "d634330de3d094faff457f32f2add2f01b1f9156", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d083fbba4245e0e090e4cfa62583632c7edc217c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d083fbba4245e0e090e4cfa62583632c7edc217c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d083fbba4245e0e090e4cfa62583632c7edc217c", "patch": "@@ -1,3 +1,8 @@\n+2009-05-04  Michael Eager <eager@eagercon.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_libcall_value): Add\n+\tTARGET_SINGLE_FLOAT check.\n+\n 2009-05-04  Michael Eager <eager@eagercon.com>\n \n \t* config/rs6000/xilinx.h: Add CPP_SPEC for -mxilinx-fpu options."}, {"sha": "c168b19935d2784face6c118cf530a3b49bb3376", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d083fbba4245e0e090e4cfa62583632c7edc217c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d083fbba4245e0e090e4cfa62583632c7edc217c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d083fbba4245e0e090e4cfa62583632c7edc217c", "patch": "@@ -22630,7 +22630,8 @@ rs6000_libcall_value (enum machine_mode mode)\n     /* _Decimal128 must use an even/odd register pair.  */\n     regno = (mode == TDmode) ? FP_ARG_RETURN + 1 : FP_ARG_RETURN;\n   else if (SCALAR_FLOAT_MODE_P (mode)\n-\t   && TARGET_HARD_FLOAT && TARGET_FPRS)\n+\t   && TARGET_HARD_FLOAT && TARGET_FPRS\n+           && ((TARGET_SINGLE_FLOAT && mode == SFmode) || TARGET_DOUBLE_FLOAT))\n     regno = FP_ARG_RETURN;\n   else if (ALTIVEC_VECTOR_MODE (mode)\n \t   && TARGET_ALTIVEC && TARGET_ALTIVEC_ABI)"}]}