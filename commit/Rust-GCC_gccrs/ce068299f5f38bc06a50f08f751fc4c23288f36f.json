{"sha": "ce068299f5f38bc06a50f08f751fc4c23288f36f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UwNjgyOTlmNWYzOGJjMDZhNTBmMDhmNzUxZmM0YzIzMjg4ZjM2Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-06-02T21:13:55Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-06-02T21:13:55Z"}, "message": "tree-cfg.c (tree_find_edge_insert_loc): Allow inserting before return_stmt.\n\n\t* tree-cfg.c (tree_find_edge_insert_loc):  Allow inserting before\n\treturn_stmt.\n\nFrom-SVN: r82586", "tree": {"sha": "f0824776b9bc1f6d3abf7f05e0e3cb8bf1fef7e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0824776b9bc1f6d3abf7f05e0e3cb8bf1fef7e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce068299f5f38bc06a50f08f751fc4c23288f36f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce068299f5f38bc06a50f08f751fc4c23288f36f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce068299f5f38bc06a50f08f751fc4c23288f36f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce068299f5f38bc06a50f08f751fc4c23288f36f/comments", "author": null, "committer": null, "parents": [{"sha": "415c974c0bd00f130e7795c3342bad4e3f014c6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415c974c0bd00f130e7795c3342bad4e3f014c6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415c974c0bd00f130e7795c3342bad4e3f014c6e"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "b851e51b2663b118f239eebd00dd2b4a60376b01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce068299f5f38bc06a50f08f751fc4c23288f36f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce068299f5f38bc06a50f08f751fc4c23288f36f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce068299f5f38bc06a50f08f751fc4c23288f36f", "patch": "@@ -1,3 +1,8 @@\n+2004-06-02  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-cfg.c (tree_find_edge_insert_loc):  Allow inserting before\n+\treturn_stmt.\n+\n 2004-06-02  Jason Merrill  <jason@redhat.com>\n \n \t* Makefile.in (TAGS): Don't mess with c-parse.[ch]."}, {"sha": "21277d86bf2920b9e7fc8179938c2ef92d4556c5", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce068299f5f38bc06a50f08f751fc4c23288f36f/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce068299f5f38bc06a50f08f751fc4c23288f36f/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=ce068299f5f38bc06a50f08f751fc4c23288f36f", "patch": "@@ -2931,6 +2931,22 @@ tree_find_edge_insert_loc (edge e, block_stmt_iterator *bsi)\n       tmp = bsi_stmt (*bsi);\n       if (!stmt_ends_bb_p (tmp))\n \treturn true;\n+\n+      /* Insert code just before returning the value.  We may need to decompose\n+         the return in the case it contains non-trivial operand.  */\n+      if (TREE_CODE (tmp) == RETURN_EXPR)\n+        {\n+\t  tree op = TREE_OPERAND (tmp, 0);\n+\t  if (!is_gimple_val (op))\n+\t    {\n+\t      if (TREE_CODE (op) != MODIFY_EXPR)\n+\t\tabort ();\n+\t      bsi_insert_before (bsi, op, BSI_NEW_STMT);\n+\t      TREE_OPERAND (tmp, 0) = TREE_OPERAND (op, 0);\n+\t    }\n+\t  bsi_prev (bsi);\n+\t  return true;\n+        }\n     }\n \n   /* Otherwise, create a new basic block, and split this edge.  */"}]}