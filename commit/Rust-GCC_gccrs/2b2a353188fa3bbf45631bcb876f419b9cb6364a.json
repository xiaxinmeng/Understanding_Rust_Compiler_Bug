{"sha": "2b2a353188fa3bbf45631bcb876f419b9cb6364a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIyYTM1MzE4OGZhM2JiZjQ1NjMxYmNiODc2ZjQxOWI5Y2I2MzY0YQ==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1998-04-08T23:30:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-08T23:30:28Z"}, "message": "lex.c (finput): New variable.\n\n        * lex.c (finput): New variable.\n        (init_cpp_parse):  Renamed from init_parse.\n        (init_parse): Handle !USE_CPPLIB.  Call init_cpp_parse when finished.\n        (finish_parse): New function.\n        * cp-tree.h (init_lex, init_parse): Remove declarations.\n\nFrom-SVN: r19065", "tree": {"sha": "4c6f1001a285baef44ed1273a597720746493d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c6f1001a285baef44ed1273a597720746493d2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b2a353188fa3bbf45631bcb876f419b9cb6364a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b2a353188fa3bbf45631bcb876f419b9cb6364a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b2a353188fa3bbf45631bcb876f419b9cb6364a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b2a353188fa3bbf45631bcb876f419b9cb6364a/comments", "author": null, "committer": null, "parents": [{"sha": "77f77701a5cfcced3afcab79f8b6a81e7a968c71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f77701a5cfcced3afcab79f8b6a81e7a968c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f77701a5cfcced3afcab79f8b6a81e7a968c71"}], "stats": {"total": 81, "additions": 59, "deletions": 22}, "files": [{"sha": "64f5a592cb1ee8d06c6a50d992083c7f8462579e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2a353188fa3bbf45631bcb876f419b9cb6364a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2a353188fa3bbf45631bcb876f419b9cb6364a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2b2a353188fa3bbf45631bcb876f419b9cb6364a", "patch": "@@ -1,3 +1,11 @@\n+Thu Apr  9 00:18:44 1998  Dave Brolley  (brolley@cygnus.com)\n+\n+\t* lex.c (finput): New variable.\n+\t(init_cpp_parse):  Renamed from init_parse.\n+\t(init_parse): Handle !USE_CPPLIB.  Call init_cpp_parse when finished.\n+\t(finish_parse): New function.\n+\t* cp-tree.h (init_lex, init_parse): Remove declarations.\n+\n Mon Apr  6 02:25:05 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* call.c (build_call): Still evaluate the actual argument."}, {"sha": "3da7f89178a50e1004e847d2a684b044c8e87dc9", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2a353188fa3bbf45631bcb876f419b9cb6364a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2a353188fa3bbf45631bcb876f419b9cb6364a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2b2a353188fa3bbf45631bcb876f419b9cb6364a", "patch": "@@ -2345,9 +2345,7 @@ extern void init_filename_times\t\t\tPROTO((void));\n #if 0\n extern void reinit_lang_specific\t\tPROTO((void));\n #endif\n-extern void init_lex\t\t\t\tPROTO((void));\n extern void reinit_parse_for_function\t\tPROTO((void));\n-extern int *init_parse\t\t\t\tPROTO((void));\n extern void print_parse_statistics\t\tPROTO((void));\n extern void extract_interface_info\t\tPROTO((void));\n extern void do_pending_inlines\t\t\tPROTO((void));"}, {"sha": "60333008db4551cd102ad40788cc12fd76325b13", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 50, "deletions": 19, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2a353188fa3bbf45631bcb876f419b9cb6364a/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2a353188fa3bbf45631bcb876f419b9cb6364a/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=2b2a353188fa3bbf45631bcb876f419b9cb6364a", "patch": "@@ -108,6 +108,9 @@ file_name_nondirectory (x)\n struct obstack inline_text_obstack;\n char *inline_text_firstobj;\n \n+#if !USE_CPPLIB\n+FILE *finput;\n+#endif\n int end_of_file;\n \n /* Pending language change.\n@@ -425,7 +428,7 @@ init_filename_times ()\n \n /* Change by Bryan Boreham, Kewill, Thu Jul 27 09:46:05 1989.\n    Stuck this hack in to get the files open correctly; this is called\n-   in place of init_lex if we are an unexec'd binary.    */\n+   in place of init_parse if we are an unexec'd binary.    */\n \n #if 0\n void\n@@ -436,14 +439,48 @@ reinit_lang_specific ()\n }\n #endif\n \n+static int *\n+init_cpp_parse ()\n+{\n+#ifdef GATHER_STATISTICS\n+#ifdef REDUCE_LENGTH\n+  reduce_count = (int *)malloc (sizeof (int) * (REDUCE_LENGTH + 1));\n+  bzero (reduce_count, sizeof (int) * (REDUCE_LENGTH + 1));\n+  reduce_count += 1;\n+  token_count = (int *)malloc (sizeof (int) * (TOKEN_LENGTH + 1));\n+  bzero (token_count, sizeof (int) * (TOKEN_LENGTH + 1));\n+  token_count += 1;\n+#endif\n+#endif\n+  return token_count;\n+}\n+\n void\n-init_lex ()\n+init_parse (filename)\n+     char *filename;\n {\n   extern int flag_no_gnu_keywords;\n   extern int flag_operator_names;\n \n   int i;\n \n+#if !USE_CPPLIB\n+  /* Open input file.  */\n+  if (filename == 0 || !strcmp (filename, \"-\"))\n+    {\n+      finput = stdin;\n+      filename = \"stdin\";\n+    }\n+  else\n+    finput = fopen (filename, \"r\");\n+  if (finput == 0)\n+    pfatal_with_name (filename);\n+\n+#ifdef IO_BUFFER_SIZE\n+  setvbuf (finput, (char *) xmalloc (IO_BUFFER_SIZE), _IOFBF, IO_BUFFER_SIZE);\n+#endif\n+#endif /* !USE_CPPLIB */\n+\n   /* Initialize the lookahead machinery.  */\n   init_spew ();\n \n@@ -851,10 +888,20 @@ init_lex ()\n       UNSET_RESERVED_WORD (\"xor_eq\");\n     }\n \n-  token_count = init_parse ();\n+  token_count = init_cpp_parse ();\n   interface_unknown = 1;\n }\n \n+void\n+finish_parse ()\n+{\n+#if USE_CPPLIB\n+  cpp_finish (&parse_in);\n+#else\n+  fclose (finput);\n+#endif\n+}\n+\n void\n reinit_parse_for_function ()\n {\n@@ -922,22 +969,6 @@ int *token_count;\n #define TOKEN_LENGTH (256 + sizeof (yytname) / sizeof (yytname[0]))\n #endif\n \n-int *\n-init_parse ()\n-{\n-#ifdef GATHER_STATISTICS\n-#ifdef REDUCE_LENGTH\n-  reduce_count = (int *)malloc (sizeof (int) * (REDUCE_LENGTH + 1));\n-  bzero (reduce_count, sizeof (int) * (REDUCE_LENGTH + 1));\n-  reduce_count += 1;\n-  token_count = (int *)malloc (sizeof (int) * (TOKEN_LENGTH + 1));\n-  bzero (token_count, sizeof (int) * (TOKEN_LENGTH + 1));\n-  token_count += 1;\n-#endif\n-#endif\n-  return token_count;\n-}\n-\n #ifdef GATHER_STATISTICS\n #ifdef REDUCE_LENGTH\n void"}, {"sha": "ceee4e66d1339aa25b61be492f0e2194a188fc3a", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b2a353188fa3bbf45631bcb876f419b9cb6364a/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b2a353188fa3bbf45631bcb876f419b9cb6364a/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=2b2a353188fa3bbf45631bcb876f419b9cb6364a", "patch": "@@ -69,7 +69,7 @@ static unsigned int yylex_ctr = 0;\n static int debug_yychar ();\n #endif\n \n-/* Initialize token_obstack. Called once, from init_lex.  */\n+/* Initialize token_obstack. Called once, from init_parse.  */\n \n void\n init_spew ()"}]}