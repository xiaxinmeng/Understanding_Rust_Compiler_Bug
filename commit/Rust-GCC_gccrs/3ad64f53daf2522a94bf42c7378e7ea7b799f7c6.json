{"sha": "3ad64f53daf2522a94bf42c7378e7ea7b799f7c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkNjRmNTNkYWYyNTIyYTk0YmY0MmM3Mzc4ZTdlYTdiNzk5ZjdjNg==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2012-05-02T16:55:19Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-05-02T16:55:19Z"}, "message": "Properly initialize cpp_context in destringize_and_run\n\ndestringize_and_run forgets to initialize all the fields of the\ncpp_context that it pushes.  Later _cpp_pop_context then gets confused\nwhen it accesses context->tokens_kind via the call to macro_of_context\non context->prev.\n\nThe first hunk of this patch is the real obvious fix.  The second hunk\nis just an assert that I am adding to err on the safe side.\n\nTested by on x86_64-unknown-linux-gnu against trunk by running the\ntest gcc.dg/gomp/macro-4.c under Valgrind, and bootstrapped.\n\nlibcpp/\n\n\t* directives.c (destringize_and_run): Properly initialize the new\n\tcontext.\n\t* macro.c (_cpp_pop_context): Assert that we shouldn't try to pop\n\tthe initial base context, which has the same life time as the\n\tcurrent instance of cpp_file.\n\nFrom-SVN: r187054", "tree": {"sha": "eca8487b03f6e48b0470d9df650fe3ac37959625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eca8487b03f6e48b0470d9df650fe3ac37959625"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6/comments", "author": null, "committer": null, "parents": [{"sha": "355a76735231beec33c140af2d9e6adca486225c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355a76735231beec33c140af2d9e6adca486225c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/355a76735231beec33c140af2d9e6adca486225c"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "7365c4e7beb7aae1ee825142d2d2e80561992dd0", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=3ad64f53daf2522a94bf42c7378e7ea7b799f7c6", "patch": "@@ -1,3 +1,12 @@\n+2012-05-02  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tProperly initialize cpp_context in destringize_and_run\n+\t* directives.c (destringize_and_run): Properly initialize the new\n+\tcontext.\n+\t* macro.c (_cpp_pop_context): Assert that we shouldn't try to pop\n+\tthe initial base context, which has the same life time as the\n+\tcurrent instance of cpp_file.\n+\n 2012-04-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \t    Dodji Seketeli  <dodji@seketeli.org>\n "}, {"sha": "e46280e46b0466534ceb4b754d20ecfdab0fab3e", "filename": "libcpp/directives.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=3ad64f53daf2522a94bf42c7378e7ea7b799f7c6", "patch": "@@ -1741,10 +1741,7 @@ destringize_and_run (cpp_reader *pfile, const cpp_string *in)\n   saved_cur_token = pfile->cur_token;\n   saved_cur_run = pfile->cur_run;\n \n-  pfile->context = XNEW (cpp_context);\n-  pfile->context->c.macro = 0;\n-  pfile->context->prev = 0;\n-  pfile->context->next = 0;\n+  pfile->context = XCNEW (cpp_context);\n \n   /* Inline run_directive, since we need to delay the _cpp_pop_buffer\n      until we've read all of the tokens that we want.  */"}, {"sha": "c4e2a23c56bd2d56aed6619f61abf6445c535293", "filename": "libcpp/macro.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad64f53daf2522a94bf42c7378e7ea7b799f7c6/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=3ad64f53daf2522a94bf42c7378e7ea7b799f7c6", "patch": "@@ -2152,6 +2152,10 @@ _cpp_pop_context (cpp_reader *pfile)\n {\n   cpp_context *context = pfile->context;\n \n+  /* We should not be popping the base context.  */\n+  if (context == &pfile->base_context)\n+    abort ();\n+\n   if (context->c.macro)\n     {\n       cpp_hashnode *macro;"}]}