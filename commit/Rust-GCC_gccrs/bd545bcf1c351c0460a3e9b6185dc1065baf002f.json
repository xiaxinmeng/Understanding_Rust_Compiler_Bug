{"sha": "bd545bcf1c351c0460a3e9b6185dc1065baf002f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ1NDViY2YxYzM1MWMwNDYwYTNlOWI2MTg1ZGMxMDY1YmFmMDAyZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-02-25T16:57:39Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-02-25T16:57:39Z"}, "message": "Do not gather mem stats in run_exit_handles (PR\n\n\tPR middle-end/69919\n\t* alloc-pool.c (after_memory_report): New variable.\n\t* alloc-pool.h (base_pool_allocator ::release): Do not use\n\tthe infrastructure if after_memory_report.\n\t* toplev.c (toplev::main): Mark after memory report.\n\nFrom-SVN: r233722", "tree": {"sha": "ae7953ecabcf41b831608122c46292ebbe7c921d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae7953ecabcf41b831608122c46292ebbe7c921d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd545bcf1c351c0460a3e9b6185dc1065baf002f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd545bcf1c351c0460a3e9b6185dc1065baf002f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd545bcf1c351c0460a3e9b6185dc1065baf002f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd545bcf1c351c0460a3e9b6185dc1065baf002f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd28a34f33a84524d8c61fbf23d88d1158c579a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd28a34f33a84524d8c61fbf23d88d1158c579a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd28a34f33a84524d8c61fbf23d88d1158c579a7"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "0414e0970130dbcc7e913e3485adac758b1a7b62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd545bcf1c351c0460a3e9b6185dc1065baf002f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd545bcf1c351c0460a3e9b6185dc1065baf002f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd545bcf1c351c0460a3e9b6185dc1065baf002f", "patch": "@@ -1,3 +1,11 @@\n+2016-02-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/69919\n+\t* alloc-pool.c (after_memory_report): New variable.\n+\t* alloc-pool.h (base_pool_allocator ::release): Do not use\n+\tthe infrastructure if after_memory_report.\n+\t* toplev.c (toplev::main): Mark after memory report.\n+\n 2016-02-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/48795"}, {"sha": "43d06f62153f6033ca5048a96ad8ed5c7e5d73b7", "filename": "gcc/alloc-pool.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd545bcf1c351c0460a3e9b6185dc1065baf002f/gcc%2Falloc-pool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd545bcf1c351c0460a3e9b6185dc1065baf002f/gcc%2Falloc-pool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falloc-pool.c?ref=bd545bcf1c351c0460a3e9b6185dc1065baf002f", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n \n ALLOC_POOL_ID_TYPE last_id;\n mem_alloc_description<pool_usage> pool_allocator_usage;\n+bool after_memory_report = false;\n \n /* Output per-alloc_pool memory usage statistics.  */\n void"}, {"sha": "3ead1015d7122df7811dce53b7bc00c396c05279", "filename": "gcc/alloc-pool.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd545bcf1c351c0460a3e9b6185dc1065baf002f/gcc%2Falloc-pool.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd545bcf1c351c0460a3e9b6185dc1065baf002f/gcc%2Falloc-pool.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falloc-pool.h?ref=bd545bcf1c351c0460a3e9b6185dc1065baf002f", "patch": "@@ -25,6 +25,9 @@ along with GCC; see the file COPYING3.  If not see\n \n extern void dump_alloc_pool_statistics (void);\n \n+/* Flag indicates whether memory statistics are gathered any longer.  */\n+extern bool after_memory_report;\n+\n typedef unsigned long ALLOC_POOL_ID_TYPE;\n \n /* Last used ID.  */\n@@ -306,7 +309,7 @@ base_pool_allocator <TBlockAllocator>::release ()\n       TBlockAllocator::release (block);\n     }\n \n-  if (GATHER_STATISTICS)\n+  if (GATHER_STATISTICS && !after_memory_report)\n     {\n       pool_allocator_usage.release_instance_overhead\n \t(this, (m_elts_allocated - m_elts_free) * m_elt_size);"}, {"sha": "c480bfc8bd220f33e2bf56266e685950f310c252", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd545bcf1c351c0460a3e9b6185dc1065baf002f/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd545bcf1c351c0460a3e9b6185dc1065baf002f/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=bd545bcf1c351c0460a3e9b6185dc1065baf002f", "patch": "@@ -2107,6 +2107,9 @@ toplev::main (int argc, char **argv)\n \n   finalize_plugins ();\n   location_adhoc_data_fini (line_table);\n+\n+  after_memory_report = true;\n+\n   if (seen_error () || werrorcount)\n     return (FATAL_EXIT_CODE);\n "}]}