{"sha": "4265801ba08846319f84c3648f825fb76085f595", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2NTgwMWJhMDg4NDYzMTlmODRjMzY0OGY4MjVmYjc2MDg1ZjU5NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-05-12T21:35:37Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-05-12T21:35:37Z"}, "message": "function.c (requires_stack_frame_p): If the function can throw non-call exceptions...\n\n\t* function.c (requires_stack_frame_p): If the function can throw\n\tnon-call exceptions, return true if the insn can throw internally.\n\nFrom-SVN: r187429", "tree": {"sha": "1e2f7f7fa85efcdd3543f687f7985306339dea16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e2f7f7fa85efcdd3543f687f7985306339dea16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4265801ba08846319f84c3648f825fb76085f595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4265801ba08846319f84c3648f825fb76085f595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4265801ba08846319f84c3648f825fb76085f595", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4265801ba08846319f84c3648f825fb76085f595/comments", "author": null, "committer": null, "parents": [{"sha": "4ce5754013932cc0072b0393e254c4b9bca317ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce5754013932cc0072b0393e254c4b9bca317ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce5754013932cc0072b0393e254c4b9bca317ce"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "355ae3a049e1bf6a07626fdb64c037299c5900b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4265801ba08846319f84c3648f825fb76085f595/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4265801ba08846319f84c3648f825fb76085f595/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4265801ba08846319f84c3648f825fb76085f595", "patch": "@@ -1,3 +1,8 @@\n+2012-05-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* function.c (requires_stack_frame_p): If the function can throw\n+\tnon-call exceptions, return true if the insn can throw internally.\n+\n 2012-05-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* doc/generic.texi: Rename TYPE_PTRMEM_P to TYPE_PTRDATAMEM_P."}, {"sha": "00c55a16a62a42078055629b5dfe07c5dd57e86c", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4265801ba08846319f84c3648f825fb76085f595/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4265801ba08846319f84c3648f825fb76085f595/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=4265801ba08846319f84c3648f825fb76085f595", "patch": "@@ -5316,6 +5316,10 @@ requires_stack_frame_p (rtx insn, HARD_REG_SET prologue_used,\n   if (CALL_P (insn))\n     return !SIBLING_CALL_P (insn);\n \n+  /* We need a frame to get the unique CFA expected by the unwinder.  */\n+  if (cfun->can_throw_non_call_exceptions && can_throw_internal (insn))\n+    return true;\n+\n   CLEAR_HARD_REG_SET (hardregs);\n   for (df_rec = DF_INSN_DEFS (insn); *df_rec; df_rec++)\n     {"}, {"sha": "2869ef23e1f55c86dd69ccd6d23ec3fe37c47557", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4265801ba08846319f84c3648f825fb76085f595/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4265801ba08846319f84c3648f825fb76085f595/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4265801ba08846319f84c3648f825fb76085f595", "patch": "@@ -1,3 +1,7 @@\n+2012-05-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/null_pointer_deref3.adb: New test.\n+\n 2012-05-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/49110"}, {"sha": "f92242e7e6795c0e15970918535a02a4980b1e14", "filename": "gcc/testsuite/gnat.dg/null_pointer_deref3.adb", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4265801ba08846319f84c3648f825fb76085f595/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4265801ba08846319f84c3648f825fb76085f595/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fnull_pointer_deref3.adb?ref=4265801ba08846319f84c3648f825fb76085f595", "patch": "@@ -0,0 +1,24 @@\n+-- { dg-do run }\n+-- { dg-options \"-O -gnatp\" }\n+\n+-- This test requires architecture- and OS-specific support code for unwinding\n+-- through signal frames (typically located in *-unwind.h) to pass.  Feel free\n+-- to disable it if this code hasn't been implemented yet.\n+\n+procedure Null_Pointer_Deref3 is\n+\n+   procedure Leaf is\n+      type Int_Ptr is access all Integer;\n+      function n return Int_Ptr is\n+      begin return null; end;\n+\n+      Data : Int_Ptr := n;\n+   begin\n+      Data.all := 0;\n+   end;\n+\n+begin\n+   Leaf;\n+exception\n+   when others => null;\n+end;"}]}