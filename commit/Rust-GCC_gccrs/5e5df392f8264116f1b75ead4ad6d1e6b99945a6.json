{"sha": "5e5df392f8264116f1b75ead4ad6d1e6b99945a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU1ZGYzOTJmODI2NDExNmYxYjc1ZWFkNGFkNmQxZTZiOTk5NDVhNg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2013-02-25T11:50:25Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2013-02-25T11:50:25Z"}, "message": "re PR rtl-optimization/56131 (gcc.dg/pr56035.c ICEs gcc on sparc-linux)\n\n2013-02-25  Tom de Vries  <tom@codesourcery.com>\n\n\tPR rtl-optimization/56131\n\t* insn-notes.def (INSN_NOTE_BASIC_BLOCK): Update comment.\n\t* cfgrtl.c (delete_insn): Don't reorder NOTE_INSN_DELETED_LABEL and\n\tNOTE_INSN_BASIC_BLOCK if BLOCK_FOR_INSN == NULL.\n\nFrom-SVN: r196255", "tree": {"sha": "b5cc77bdb6a9aa017f4449f30d95a3ef88801dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5cc77bdb6a9aa017f4449f30d95a3ef88801dea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e5df392f8264116f1b75ead4ad6d1e6b99945a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e5df392f8264116f1b75ead4ad6d1e6b99945a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e5df392f8264116f1b75ead4ad6d1e6b99945a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e5df392f8264116f1b75ead4ad6d1e6b99945a6/comments", "author": null, "committer": null, "parents": [{"sha": "3fdb53c1ea5e52f1db57f20ed22dbe0081da7017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fdb53c1ea5e52f1db57f20ed22dbe0081da7017"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "2d81aa5ceaf4a12b1f5aeac546f45a5266f0b825", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5df392f8264116f1b75ead4ad6d1e6b99945a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5df392f8264116f1b75ead4ad6d1e6b99945a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e5df392f8264116f1b75ead4ad6d1e6b99945a6", "patch": "@@ -1,3 +1,10 @@\n+2013-02-25  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR rtl-optimization/56131\n+\t* insn-notes.def (INSN_NOTE_BASIC_BLOCK): Update comment.\n+\t* cfgrtl.c (delete_insn): Don't reorder NOTE_INSN_DELETED_LABEL and\n+\tNOTE_INSN_BASIC_BLOCK if BLOCK_FOR_INSN == NULL.\n+\n 2013-02-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* doc/invoke.texi (-fsanitize=): Move from optimization"}, {"sha": "ec1ba9ad71c86af49e814a12d7958d3c2bbc75ef", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5df392f8264116f1b75ead4ad6d1e6b99945a6/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5df392f8264116f1b75ead4ad6d1e6b99945a6/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=5e5df392f8264116f1b75ead4ad6d1e6b99945a6", "patch": "@@ -135,7 +135,7 @@ delete_insn (rtx insn)\n       if (! can_delete_label_p (insn))\n \t{\n \t  const char *name = LABEL_NAME (insn);\n-\t  basic_block bb, label_bb = BLOCK_FOR_INSN (insn);\n+\t  basic_block bb = BLOCK_FOR_INSN (insn);\n \t  rtx bb_note = NEXT_INSN (insn);\n \n \t  really_delete = false;\n@@ -144,15 +144,13 @@ delete_insn (rtx insn)\n \t  NOTE_DELETED_LABEL_NAME (insn) = name;\n \n \t  /* If the note following the label starts a basic block, and the\n-\t     label is a member of the same basic block, interchange the two.\n-\t     If the label is not marked with a bb, assume it's the same bb.  */\n+\t     label is a member of the same basic block, interchange the two.  */\n \t  if (bb_note != NULL_RTX\n \t      && NOTE_INSN_BASIC_BLOCK_P (bb_note)\n-\t      && (label_bb == NOTE_BASIC_BLOCK (bb_note)\n-\t\t  || label_bb == NULL))\n+\t      && bb != NULL\n+\t      && bb == BLOCK_FOR_INSN (bb_note))\n \t    {\n \t      reorder_insns_nobb (insn, insn, bb_note);\n-\t      bb = NOTE_BASIC_BLOCK (bb_note);\n \t      BB_HEAD (bb) = bb_note;\n \t      if (BB_END (bb) == bb_note)\n \t\tBB_END (bb) = insn;"}, {"sha": "1a9883cefe035e89390175333aa8960f6774864c", "filename": "gcc/insn-notes.def", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5df392f8264116f1b75ead4ad6d1e6b99945a6/gcc%2Finsn-notes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5df392f8264116f1b75ead4ad6d1e6b99945a6/gcc%2Finsn-notes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finsn-notes.def?ref=5e5df392f8264116f1b75ead4ad6d1e6b99945a6", "patch": "@@ -70,7 +70,9 @@ INSN_NOTE (CALL_ARG_LOCATION)\n \n /* Record the struct for the following basic block.  Uses\n    NOTE_BASIC_BLOCK.  FIXME: Redundant with the basic block pointer\n-   now included in every insn.  */\n+   now included in every insn.  NOTE: If there's no CFG anymore, in other words,\n+   if BLOCK_FOR_INSN () == NULL, NOTE_BASIC_BLOCK cannot be considered reliable\n+   anymore.  */\n INSN_NOTE (BASIC_BLOCK)\n \n /* Mark the inflection point in the instruction stream where we switch"}]}