{"sha": "f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA2Y2FmZGY0YmNiOWE5MWI5OWM0ZDhiZDA1OGM2MmJmY2NkZTRiMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-06-04T22:09:43Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-06-04T22:09:43Z"}, "message": "* jcf-write.c (perform_relocations): Optmize a goto to a goto.\n\nFrom-SVN: r54264", "tree": {"sha": "dfd466d2608e3f1aa9a7cbd415ee7b23dbb6e9d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfd466d2608e3f1aa9a7cbd415ee7b23dbb6e9d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3/comments", "author": null, "committer": null, "parents": [{"sha": "0bb5f0e400a976f0346f2cfc9a7416abbda92cf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bb5f0e400a976f0346f2cfc9a7416abbda92cf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bb5f0e400a976f0346f2cfc9a7416abbda92cf5"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "10a4746a8d095c6468afd8d5ad6993ccc6af516d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3", "patch": "@@ -1,3 +1,7 @@\n+2002-06-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jcf-write.c (perform_relocations): Optmize a goto to a goto.\n+\n 2002-06-04  Michael Koch  <konqueror@gmx.de>\n \n \t* gcj.texi (Input Options): Fixed typo."}, {"sha": "f419e9f7ad388f100c25cda12432f2ba4824e808", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=f06cafdf4bcb9a91b99c4d8bd058c62bfccde4b3", "patch": "@@ -2677,6 +2677,37 @@ perform_relocations (state)\n \t  shrink += 3;\n \t}\n \n+      /* Optimize GOTO L; ... L: GOTO X by changing the first goto to\n+\t jump directly to X.  We're careful here to avoid an infinite\n+\t loop if the `goto's themselves form one.  We do this\n+\t optimization because we can generate a goto-to-goto for some\n+\t try/finally blocks.  */\n+      while (reloc != NULL\n+\t     && reloc->kind == OPCODE_goto_w\n+\t     && reloc->label != block\n+\t     && reloc->label->v.chunk->data != NULL\n+\t     && reloc->label->v.chunk->data[0] == OPCODE_goto)\n+\t{\n+\t  /* Find the reloc for the first instruction of the\n+\t     destination block.  */\n+\t  struct jcf_relocation *first_reloc;\n+\t  for (first_reloc = reloc->label->u.relocations;\n+\t       first_reloc;\n+\t       first_reloc = first_reloc->next)\n+\t    {\n+\t      if (first_reloc->offset == 1\n+\t\t  && first_reloc->kind == OPCODE_goto_w)\n+\t\t{\n+\t\t  reloc->label = first_reloc->label;\n+\t\t  break;\n+\t\t}\n+\t    }\n+\n+\t  /* If we didn't do anything, exit the loop.  */\n+\t  if (first_reloc == NULL)\n+\t    break;\n+\t}\n+\n       for (reloc = block->u.relocations;  reloc != NULL;  reloc = reloc->next)\n \t{\n \t  if (reloc->kind == SWITCH_ALIGN_RELOC)"}]}