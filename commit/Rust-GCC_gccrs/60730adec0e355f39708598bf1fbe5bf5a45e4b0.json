{"sha": "60730adec0e355f39708598bf1fbe5bf5a45e4b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA3MzBhZGVjMGUzNTVmMzk3MDg1OThiZjFmYmU1YmY1YTQ1ZTRiMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-07-06T20:38:37Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-07-06T20:38:37Z"}, "message": "mips.h (TARGET_CPU_CPP_BUILTINS): Check mips_base_mips16 instead of TARGET_MIPS16.\n\ngcc/\n\t* config/mips/mips.h (TARGET_CPU_CPP_BUILTINS): Check\n\tmips_base_mips16 instead of TARGET_MIPS16.\n\t(mips_base_mips16): Declare.\n\t* config/mips/mips.c (mips_base_mips16): Make global.\n\t(was_mips16_p): Remove GTY marker.\n\t(was_mips16_pch_p): New variable.\n\t(mips_set_mips16_mode): Check both was_mips16_p and was_mips16_pch_p.\n\t(mips_override_options): Force to non-MIPS16 mode initially.\n\tDo not complain about MIPS16 PIC incompatibilities here.\n\tOnly allow -mgpopt if -mexplicit-relocs is in force for\n\tnon-MIPS16 code.\n\ngcc/testsuite/\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-1.c: Expect the\n\tmacros to be defined for MIPS16 too.\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-2.c: Likewise.\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-3.c: New test.\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-4.c: Likewise.\n\nFrom-SVN: r137539", "tree": {"sha": "f03c135a579c497dca50215e06931157bb00a33a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f03c135a579c497dca50215e06931157bb00a33a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60730adec0e355f39708598bf1fbe5bf5a45e4b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60730adec0e355f39708598bf1fbe5bf5a45e4b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60730adec0e355f39708598bf1fbe5bf5a45e4b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60730adec0e355f39708598bf1fbe5bf5a45e4b0/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bba09b5aaca1e4ebaeccb827233b1b4299cbf859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bba09b5aaca1e4ebaeccb827233b1b4299cbf859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bba09b5aaca1e4ebaeccb827233b1b4299cbf859"}], "stats": {"total": 125, "additions": 100, "deletions": 25}, "files": [{"sha": "2ecbb96b1cc458c9eef86617e24c6a40f4da452a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60730adec0e355f39708598bf1fbe5bf5a45e4b0", "patch": "@@ -1,3 +1,17 @@\n+2008-07-06  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.h (TARGET_CPU_CPP_BUILTINS): Check\n+\tmips_base_mips16 instead of TARGET_MIPS16.\n+\t(mips_base_mips16): Declare.\n+\t* config/mips/mips.c (mips_base_mips16): Make global.\n+\t(was_mips16_p): Remove GTY marker.\n+\t(was_mips16_pch_p): New variable.\n+\t(mips_set_mips16_mode): Check both was_mips16_p and was_mips16_pch_p.\n+\t(mips_override_options): Force to non-MIPS16 mode initially.\n+\tDo not complain about MIPS16 PIC incompatibilities here.\n+\tOnly allow -mgpopt if -mexplicit-relocs is in force for\n+\tnon-MIPS16 code.\n+\n 2008-07-06  Andreas Tobler  <a.tobler@schweiz.org>\n \n \t* configure.ac: Check for caddr_t, define to char * if not defined."}, {"sha": "e8d51bcd40e0bb3208020fa5fbcfc5f3fcb0d6fc", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=60730adec0e355f39708598bf1fbe5bf5a45e4b0", "patch": "@@ -442,7 +442,7 @@ const struct mips_rtx_cost_data *mips_cost;\n static int mips_base_target_flags;\n \n /* True if MIPS16 is the default mode.  */\n-static bool mips_base_mips16;\n+bool mips_base_mips16;\n \n /* The ambient values of other global variables.  */\n static int mips_base_delayed_branch; /* flag_delayed_branch */\n@@ -12333,16 +12333,23 @@ mips_output_mi_thunk (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n }\n \f\n /* The last argument passed to mips_set_mips16_mode, or negative if the\n-   function hasn't been called yet.  */\n-static GTY(()) int was_mips16_p = -1;\n+   function hasn't been called yet.\n+\n+   There are two copies of this information.  One is saved and restored\n+   by the PCH process while the other is specific to this compiler\n+   invocation.  The information calculated by mips_set_mips16_mode\n+   is invalid unless the two variables are the same.  */\n+static int was_mips16_p = -1;\n+static GTY(()) int was_mips16_pch_p = -1;\n \n /* Set up the target-dependent global state so that it matches the\n    current function's ISA mode.  */\n \n static void\n mips_set_mips16_mode (int mips16_p)\n {\n-  if (mips16_p == was_mips16_p)\n+  if (mips16_p == was_mips16_p\n+      && mips16_p == was_mips16_pch_p)\n     return;\n \n   /* Restore base settings of various flags.  */\n@@ -12417,11 +12424,12 @@ mips_set_mips16_mode (int mips16_p)\n   /* (Re)initialize MIPS target internals for new ISA.  */\n   mips_init_relocs ();\n \n-  if (was_mips16_p >= 0)\n+  if (was_mips16_p >= 0 || was_mips16_pch_p >= 0)\n     /* Reinitialize target-dependent state.  */\n     target_reinit ();\n \n   was_mips16_p = mips16_p;\n+  was_mips16_pch_p = mips16_p;\n }\n \n /* Implement TARGET_SET_CURRENT_FUNCTION.  Decide whether the current\n@@ -12627,6 +12635,10 @@ mips_override_options (void)\n {\n   int i, start, regno, mode;\n \n+  /* Process flags as though we were generating non-MIPS16 code.  */\n+  mips_base_mips16 = TARGET_MIPS16;\n+  target_flags &= ~MASK_MIPS16;\n+\n #ifdef SUBTARGET_OVERRIDE_OPTIONS\n   SUBTARGET_OVERRIDE_OPTIONS;\n #endif\n@@ -12772,14 +12784,6 @@ mips_override_options (void)\n       target_flags &= ~MASK_ABICALLS;\n     }\n \n-  /* MIPS16 cannot generate PIC yet.  */\n-  if (TARGET_MIPS16 && (flag_pic || TARGET_ABICALLS))\n-    {\n-      sorry (\"MIPS16 PIC\");\n-      target_flags &= ~MASK_ABICALLS;\n-      flag_pic = flag_pie = flag_shlib = 0;\n-    }\n-\n   if (TARGET_ABICALLS)\n     /* We need to set flag_pic for executables as well as DSOs\n        because we may reference symbols that are not defined in\n@@ -12807,7 +12811,7 @@ mips_override_options (void)\n     {\n       if (!TARGET_GPOPT)\n \t{\n-\t  if (!TARGET_MIPS16 && !TARGET_EXPLICIT_RELOCS)\n+\t  if (!TARGET_EXPLICIT_RELOCS)\n \t    error (\"%<-mno-gpopt%> needs %<-mexplicit-relocs%>\");\n \n \t  TARGET_LOCAL_SDATA = false;\n@@ -12911,7 +12915,6 @@ mips_override_options (void)\n     target_flags |= MASK_FIX_R4400;\n \n   /* Save base state of options.  */\n-  mips_base_mips16 = TARGET_MIPS16;\n   mips_base_target_flags = target_flags;\n   mips_base_delayed_branch = flag_delayed_branch;\n   mips_base_schedule_insns = flag_schedule_insns;\n@@ -12921,8 +12924,11 @@ mips_override_options (void)\n   mips_base_align_jumps = align_jumps;\n   mips_base_align_functions = align_functions;\n \n-  /* Now select the ISA mode.  */\n-  mips_set_mips16_mode (mips_base_mips16);\n+  /* Now select the ISA mode.\n+\n+     Do all CPP-sensitive stuff in non-MIPS16 mode; we'll switch to\n+     MIPS16 mode afterwards if need be.  */\n+  mips_set_mips16_mode (false);\n \n   /* We call dbr_schedule from within mips_reorg.  */\n   flag_delayed_branch = 0;"}, {"sha": "8518a86233bac2805fd3b4ef7a1df1ba637a6883", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=60730adec0e355f39708598bf1fbe5bf5a45e4b0", "patch": "@@ -390,7 +390,7 @@ enum mips_code_readable_setting {\n       else\t\t\t\t\t\t\t\t\\\n \tbuiltin_define (\"__mips_fpr=32\");\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-      if (TARGET_MIPS16)\t\t\t\t\t\t\\\n+      if (mips_base_mips16)\t\t\t\t\t\t\\\n \tbuiltin_define (\"__mips16\");\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       if (TARGET_MIPS3D)\t\t\t\t\t\t\\\n@@ -3232,6 +3232,7 @@ extern int mips_abi;\t\t\t/* which ABI to use */\n extern const struct mips_cpu_info *mips_arch_info;\n extern const struct mips_cpu_info *mips_tune_info;\n extern const struct mips_rtx_cost_data *mips_cost;\n+extern bool mips_base_mips16;\n extern enum mips_code_readable_setting mips_code_readable;\n #endif\n "}, {"sha": "841f216c136e9cccbb0b818d1e5bd991b75c347f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60730adec0e355f39708598bf1fbe5bf5a45e4b0", "patch": "@@ -1,3 +1,11 @@\n+2008-07-06  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-1.c: Expect the\n+\tmacros to be defined for MIPS16 too.\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-2.c: Likewise.\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-3.c: New test.\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-4.c: Likewise.\n+\n 2008-07-06  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/pta-callused.c: Adjust testcase."}, {"sha": "c12d08e05214c18e329a4b638c981d1bb8bdb764", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c?ref=60730adec0e355f39708598bf1fbe5bf5a45e4b0", "patch": "@@ -1,15 +1,15 @@\n /* { dg-do preprocess } */\n /* { dg-mips-options \"-mips2\" } */\n \n-#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1) == defined (__mips16)\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n #error nonono\n #endif\n \n-#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2) == defined (__mips16)\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n #error nonono\n #endif\n \n-#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4) == defined (__mips16)\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n #error nonono\n #endif\n "}, {"sha": "eaae78017542b7e68e78dc88222b9d8222cd72e0", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c?ref=60730adec0e355f39708598bf1fbe5bf5a45e4b0", "patch": "@@ -1,19 +1,19 @@\n /* { dg-do preprocess } */\n /* { dg-mips-options \"-mgp64\" } */\n \n-#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1) == defined (__mips16)\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n #error nonono\n #endif\n \n-#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2) == defined (__mips16)\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n #error nonono\n #endif\n \n-#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4) == defined (__mips16)\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n #error nonono\n #endif\n \n-#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8) == defined (__mips16)\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n #error nonono\n #endif\n "}, {"sha": "faf50fc69ca1cafc01abcba3012c8665844fb823", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-3.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-3.c?ref=60730adec0e355f39708598bf1fbe5bf5a45e4b0", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do preprocess { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips2 -mips16\" } */\n+/* { dg-add-options mips16_attribute } */\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#error nonono\n+#endif"}, {"sha": "b53f4b05b61081e3adb6f51c71a679476e191105", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-4.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60730adec0e355f39708598bf1fbe5bf5a45e4b0/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-4.c?ref=60730adec0e355f39708598bf1fbe5bf5a45e4b0", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do preprocess { target mips16_attribute } } */\n+/* { dg-mips-options \"-mgp64 -mips16\" } */\n+/* { dg-add-options mips16_attribute } */\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#error nonono\n+#endif"}]}