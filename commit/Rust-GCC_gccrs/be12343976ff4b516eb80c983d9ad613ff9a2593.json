{"sha": "be12343976ff4b516eb80c983d9ad613ff9a2593", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUxMjM0Mzk3NmZmNGI1MTZlYjgwYzk4M2Q5YWQ2MTNmZjlhMjU5Mw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-09-23T06:43:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-09-23T06:43:56Z"}, "message": "re PR c/39779 (ICE shifting byte to the right with constant > 7FFFFFFF)\n\n\tPR c/39779\n\t* c-typeck.c (build_binary_op) <short_shift>: Check that integer\n\tconstant is more than zero.\n\ntestsuite/ChangeLog:\n\n\tPR c/39779\n\t* gcc.c-torture/compile/pr39779.c: New test.\n\nFrom-SVN: r152058", "tree": {"sha": "15e99879c42bf7c05a952c82b854878e4a17c80d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15e99879c42bf7c05a952c82b854878e4a17c80d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be12343976ff4b516eb80c983d9ad613ff9a2593", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be12343976ff4b516eb80c983d9ad613ff9a2593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be12343976ff4b516eb80c983d9ad613ff9a2593", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be12343976ff4b516eb80c983d9ad613ff9a2593/comments", "author": null, "committer": null, "parents": [{"sha": "d57c0139831d98f97ee0ea892b5cf4e728ecf508", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d57c0139831d98f97ee0ea892b5cf4e728ecf508", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d57c0139831d98f97ee0ea892b5cf4e728ecf508"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "4ee5b375167421cc6de620a5dbf436258c3c9ecf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be12343976ff4b516eb80c983d9ad613ff9a2593/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be12343976ff4b516eb80c983d9ad613ff9a2593/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be12343976ff4b516eb80c983d9ad613ff9a2593", "patch": "@@ -1,3 +1,9 @@\n+2009-09-23 Uros Bizjak <ubizjak@gmail.com>\n+\n+\tPR c/39779\n+\t* c-typeck.c (build_binary_op) <short_shift>: Check that integer\n+\tconstant is more than zero.\n+\n 2009-09-23  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/40473\n@@ -10,13 +16,13 @@\n \t* doc/install.texi (*-*-freebsd*): Add proper format codes.\n \n 2009-09-22  Basile Starynkevitch  <basile@starynkevitch.net>\n-            Rafael Avila de Espindola  <espindola@google.com>\n+\t    Rafael Avila de Espindola  <espindola@google.com>\n \n \t* gengtype.c (is_file_equal): New function.\n \t(close_output_files): Use is_file_equal. Free of->buf.\n \n 2009-09-22  Basile Starynkevitch  <basile@starynkevitch.net>\n-            Rafael Avila de Espindola  <espindola@google.com>\n+\t    Rafael Avila de Espindola  <espindola@google.com>\n \n \t* gengtype.c (write_types, write_local): Add the output_header\n \targument. Update all callers.\n@@ -33,8 +39,8 @@\n \trepresented by usual DW_TAG_template_*_parameter DIEs that are\n \tchildren of the DW_TAG_template_parameter_pack element DIE.\n \t(generic_parameter_die): This doesn't deal with parameter pack\n-\tnames anymore. Don't generate DW_AT_name for some DIEs, e.g. children of\n-\tparameter pack DIEs.\n+\tnames anymore. Don't generate DW_AT_name for some DIEs, e.g. children\n+\tof parameter pack DIEs.\n \t(gen_formal_parameter_die): Add a flag to not emit DW_AT_name\n \tin certain cases, e.g. for pack elements.\n \t(gen_formal_types_die, gen_decl_die): Adjust usage of\n@@ -170,7 +176,8 @@\n \t(INITIALIZE_TRAMPOLINE): Move code to arm_trampoline_init;\n \tadjust for target hook parameters.\n \n-\t* config/avr/avr.h (TRAMPOLINE_TEMPLATE, INITIALIZE_TRAMPOLINE): Remove.\n+\t* config/avr/avr.h (TRAMPOLINE_TEMPLATE, INITIALIZE_TRAMPOLINE):\n+\tRemove.\n \n \t* config/bfin/bfin-protos.h (initialize_trampoline): Remove.\n \t* config/bfin/bfin.c (bfin_asm_trampoline_template): New.\n@@ -520,8 +527,8 @@\n \n 2009-09-21  Giuseppe Scrivano <gscrivano@gnu.org>\n \n-\t* tree-tailcall.c (process_assignment): Don't check if a multiplication\n-\tor an addition are already present.\n+\t* tree-tailcall.c (process_assignment): Don't check if a\n+\tmultiplication or an addition are already present.\n \t(find_tail_calls): Combine multiple additions and multiplications.\n \t(adjust_accumulator_values): Emit accumulators.\n \n@@ -557,7 +564,8 @@\n 2009-09-20  Jan Hubicka  <jh@suse.cz>\n \n \t* dwarf2out.c (add_const_value_attribute): Return true if successful.\n-\t(add_location_or_const_value_attribute): Rewrite using loc_list_from_tree.\n+\t(add_location_or_const_value_attribute): Rewrite using\n+\tloc_list_from_tree.\n \t(tree_add_const_value_attribute): Return true if successful.\n \t(tree_add_const_value_attribute_for_decl): Likewise.\n \n@@ -655,8 +663,7 @@\n \t* configure: Regenerate.\n \t* doc/invoke.texi (Option Summary): Add -mrelax-pic-calls\n \tand -mno-relax-pic-calls.\n-\t(MIPS Options): Document -mrelax-pic-calls\n-\tand -mno-relax-pic-calls.\n+\t(MIPS Options): Document -mrelax-pic-calls and -mno-relax-pic-calls.\n \n 2009-09-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n "}, {"sha": "1b2b858582399826bb35183ab5218f9f5ca83eea", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be12343976ff4b516eb80c983d9ad613ff9a2593/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be12343976ff4b516eb80c983d9ad613ff9a2593/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=be12343976ff4b516eb80c983d9ad613ff9a2593", "patch": "@@ -9465,6 +9465,7 @@ build_binary_op (location_t location, enum tree_code code,\n \t    unsigned_arg = TYPE_UNSIGNED (TREE_TYPE (op0));\n \n \t  if (TYPE_PRECISION (TREE_TYPE (arg0)) < TYPE_PRECISION (result_type)\n+\t      && tree_int_cst_sgn (op1) > 0\n \t      /* We can shorten only if the shift count is less than the\n \t\t number of bits in the smaller type size.  */\n \t      && compare_tree_int (op1, TYPE_PRECISION (TREE_TYPE (arg0))) < 0"}, {"sha": "8f51151e8abd8c097d8921e4a61ef549f0f78ccb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be12343976ff4b516eb80c983d9ad613ff9a2593/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be12343976ff4b516eb80c983d9ad613ff9a2593/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be12343976ff4b516eb80c983d9ad613ff9a2593", "patch": "@@ -1,3 +1,8 @@\n+2009-09-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR c/39779\n+\t* gcc.c-torture/compile/pr39779.c: New test.\n+\n 2009-09-22  Dodji Seketeli  <dodji@redhat.com>\n \n \t* g++.dg/debug/dwarf2/template-func-params-4.C: Adjust."}, {"sha": "d1680df29b9a0c3d557f9444a3942a68a6e7b073", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39779.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be12343976ff4b516eb80c983d9ad613ff9a2593/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39779.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be12343976ff4b516eb80c983d9ad613ff9a2593/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39779.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39779.c?ref=be12343976ff4b516eb80c983d9ad613ff9a2593", "patch": "@@ -0,0 +1,5 @@\n+int test (char v1)\n+{\n+  v1 >>= 0xdebecced;\n+  return v1;\n+}"}]}