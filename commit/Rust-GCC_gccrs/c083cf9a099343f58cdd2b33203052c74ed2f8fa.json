{"sha": "c083cf9a099343f58cdd2b33203052c74ed2f8fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA4M2NmOWEwOTkzNDNmNThjZGQyYjMzMjAzMDUyYzc0ZWQyZjhmYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-04-28T20:52:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-04-28T20:52:31Z"}, "message": "tree.c (get_callee_fndecl): Extract the initial value from a readonly decl.\n\n        * tree.c (get_callee_fndecl): Extract the initial value from\n        a readonly decl.\n\n        * cp/optimize.c (initialize_inlined_parameters): Call\n        c_apply_type_quals_to_decl.  Set DECL_INITIAL.\n\nFrom-SVN: r33518", "tree": {"sha": "325e0828ffaa01699dcdae4745ec16e0f53644bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/325e0828ffaa01699dcdae4745ec16e0f53644bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c083cf9a099343f58cdd2b33203052c74ed2f8fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c083cf9a099343f58cdd2b33203052c74ed2f8fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c083cf9a099343f58cdd2b33203052c74ed2f8fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c083cf9a099343f58cdd2b33203052c74ed2f8fa/comments", "author": null, "committer": null, "parents": [{"sha": "e67cd9f80dd021af3fcf9595b39e2e31864572d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e67cd9f80dd021af3fcf9595b39e2e31864572d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e67cd9f80dd021af3fcf9595b39e2e31864572d4"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "0db19858e21b907b45216b9d34ace13178943adc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c083cf9a099343f58cdd2b33203052c74ed2f8fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c083cf9a099343f58cdd2b33203052c74ed2f8fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c083cf9a099343f58cdd2b33203052c74ed2f8fa", "patch": "@@ -1,3 +1,8 @@\n+2000-04-28  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* tree.c (get_callee_fndecl): Extract the initial value from\n+\ta readonly decl.\n+\n 2000-04-28  Richard Henderson  <rth@cygnus.com>\n \n \t* varasm.c (record_constant_1): Record the CODE_LABEL when"}, {"sha": "7f96445a2076754babd96eac7ee7f0edaa7a2cd2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c083cf9a099343f58cdd2b33203052c74ed2f8fa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c083cf9a099343f58cdd2b33203052c74ed2f8fa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c083cf9a099343f58cdd2b33203052c74ed2f8fa", "patch": "@@ -1,3 +1,8 @@\n+2000-04-28  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* optimize.c (initialize_inlined_parameters): Call \n+\tc_apply_type_quals_to_decl.  Set DECL_INITIAL.\n+\n 2000-04-27  Mark Mitchell  <mark@codesourcery.com>\n \n \t* optimize.c (copy_body_r): Use STRIP_TYPE_NOPS when copying"}, {"sha": "39f8247f8d0acf8162607d600375b6c06909457c", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c083cf9a099343f58cdd2b33203052c74ed2f8fa/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c083cf9a099343f58cdd2b33203052c74ed2f8fa/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=c083cf9a099343f58cdd2b33203052c74ed2f8fa", "patch": "@@ -419,6 +419,8 @@ initialize_inlined_parameters (id, args, fn)\n \t\n       /* Make an equivalent VAR_DECL.  */\n       var = copy_decl_for_inlining (p, fn, VARRAY_TREE (id->fns, 0));\n+      c_apply_type_quals_to_decl (TYPE_QUALS (p), var);\n+\n       /* Register the VAR_DECL as the equivalent for the PARM_DECL;\n \t that way, when the PARM_DECL is encountered, it will be\n \t automatically replaced by the VAR_DECL.  */\n@@ -430,6 +432,8 @@ initialize_inlined_parameters (id, args, fn)\n \t this will not result in an extra copy: the TARGET_EXPR\n \t representing the argument will be bound to VAR, and the\n \t object will be constructed in VAR.  */\n+      if (! TYPE_NEEDS_CONSTRUCTING (TREE_TYPE (p)))\n+\tDECL_INITIAL (var) = TREE_VALUE (a);\n       init_stmt = build_min_nt (EXPR_STMT,\n \t\t\t\tbuild (INIT_EXPR, TREE_TYPE (p),\n \t\t\t\t       var, value));"}, {"sha": "a71851e6d762e54e97f4826a7d257f59afc09c83", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c083cf9a099343f58cdd2b33203052c74ed2f8fa/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c083cf9a099343f58cdd2b33203052c74ed2f8fa/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=c083cf9a099343f58cdd2b33203052c74ed2f8fa", "patch": "@@ -5265,6 +5265,14 @@ get_callee_fndecl (call)\n      called.  */\n   addr = TREE_OPERAND (call, 0);\n \n+  STRIP_NOPS (addr);\n+\n+  /* If this is a readonly function pointer, extract its initial value.  */\n+  if (DECL_P (addr) && TREE_CODE (addr) != FUNCTION_DECL\n+      && TREE_READONLY (addr) && ! TREE_THIS_VOLATILE (addr)\n+      && DECL_INITIAL (addr))\n+    addr = DECL_INITIAL (addr);\n+\n   /* If the address is just `&f' for some function `f', then we know\n      that `f' is being called.  */\n   if (TREE_CODE (addr) == ADDR_EXPR"}]}