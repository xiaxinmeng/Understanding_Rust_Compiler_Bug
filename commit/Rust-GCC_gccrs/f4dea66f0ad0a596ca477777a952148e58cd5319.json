{"sha": "f4dea66f0ad0a596ca477777a952148e58cd5319", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkZWE2NmYwYWQwYTU5NmNhNDc3Nzc3YTk1MjE0OGU1OGNkNTMxOQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2008-05-15T20:07:11Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2008-05-15T20:07:11Z"}, "message": "arm.c (arm_return_in_memory): Fix return type.\n\n2008-05-15  Diego Novillo  <dnovillo@google.com>\n\n\t* config/arm/arm.c (arm_return_in_memory): Fix return\n\ttype.\n\t* config/arm/arm-protos.h (arm_return_in_memory): Likewise.\n\nFrom-SVN: r135393", "tree": {"sha": "eaf4863f00204c4dbcfe447eec6c07aa419e2ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaf4863f00204c4dbcfe447eec6c07aa419e2ea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4dea66f0ad0a596ca477777a952148e58cd5319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4dea66f0ad0a596ca477777a952148e58cd5319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4dea66f0ad0a596ca477777a952148e58cd5319", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4dea66f0ad0a596ca477777a952148e58cd5319/comments", "author": null, "committer": null, "parents": [{"sha": "36dafbd1f164e05181dceb8151ea62c0b50eb1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36dafbd1f164e05181dceb8151ea62c0b50eb1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36dafbd1f164e05181dceb8151ea62c0b50eb1a2"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "3d892f63f2f171a2318e9ccc8ed05ffa3c61e8de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dea66f0ad0a596ca477777a952148e58cd5319/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dea66f0ad0a596ca477777a952148e58cd5319/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4dea66f0ad0a596ca477777a952148e58cd5319", "patch": "@@ -1,13 +1,19 @@\n+2008-05-15  Diego Novillo  <dnovillo@google.com>\n+\n+\t* config/arm/arm.c (arm_return_in_memory): Fix return\n+\ttype.\n+\t* config/arm/arm-protos.h (arm_return_in_memory): Likewise.\n+\n 2008-05-15  Adam Nemet  <anemet@caviumnetworks.com>\n \n \tPR middle-end/36194\n-        * combine.c (check_conversion): Rename back to check_promoted_subreg. \n-        Don't call record_truncated_value from here. \n-        (record_truncated_value): Turn it into a for_each_rtx callback. \n-        (record_truncated_values): New function. \n-        (combine_instructions): Call note_uses with \n-        record_truncated_values.  Change name of check_conversion to \n-        check_promoted_subreg. \n+\t* combine.c (check_conversion): Rename back to check_promoted_subreg. \n+\tDon't call record_truncated_value from here. \n+\t(record_truncated_value): Turn it into a for_each_rtx callback. \n+\t(record_truncated_values): New function. \n+\t(combine_instructions): Call note_uses with \n+\trecord_truncated_values.  Change name of check_conversion to \n+\tcheck_promoted_subreg. \n \n 2008-05-15  Janis Johnson  <janis187@us.ibm.com>\n "}, {"sha": "1dbd3a18d2afac295e3d5bcf79a99e4a09901ebb", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dea66f0ad0a596ca477777a952148e58cd5319/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dea66f0ad0a596ca477777a952148e58cd5319/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=f4dea66f0ad0a596ca477777a952148e58cd5319", "patch": "@@ -43,7 +43,7 @@ extern void arm_output_fn_unwind (FILE *, bool);\n   \n \n #ifdef TREE_CODE\n-extern int arm_return_in_memory (const_tree, const_tree);\n+extern bool arm_return_in_memory (const_tree, const_tree);\n #endif\n #ifdef RTX_CODE\n extern bool arm_vector_mode_supported_p (enum machine_mode);"}, {"sha": "1c7002b8be422c785912d6b7cfff0523f4c620ae", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4dea66f0ad0a596ca477777a952148e58cd5319/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4dea66f0ad0a596ca477777a952148e58cd5319/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f4dea66f0ad0a596ca477777a952148e58cd5319", "patch": "@@ -2737,7 +2737,7 @@ arm_apply_result_size (void)\n /* Decide whether a type should be returned in memory (true)\n    or in a register (false).  This is called by the macro\n    TARGET_RETURN_IN_MEMORY.  */\n-int\n+bool\n arm_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n {\n   HOST_WIDE_INT size;"}]}