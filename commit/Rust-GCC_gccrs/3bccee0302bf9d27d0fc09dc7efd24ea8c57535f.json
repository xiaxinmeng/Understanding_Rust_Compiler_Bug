{"sha": "3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjY2VlMDMwMmJmOWQyN2QwZmMwOWRjN2VmZDI0ZWE4YzU3NTM1Zg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-12-07T22:22:54Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-12-07T22:22:54Z"}, "message": "Fix _mm_popcnt* intrinsics.\n\n\t* config.gcc (i[34567]86-*-*, x86_64-*-*): Add popcntintrin.h.\n\t* config/i386/abmintrin.h (_mm_popcnt_u32, _mm_popcnt_u64): Moved...\n\t* config/i386/i386-c.c (__POPCNT__): Defined.\n\t* config/i386/popcntintrin.h: ...here.  New file.\n\t* config/i386/smmintrin.h (_mm_popcnt_u32, _mm_popcnt_u64): Moved...\n\tInclude popcntintrin.h.\n\t* config/i386/x86intrin.h: Include popcntintrin.h when __POPCNT__\n\tis defined.\n\nFrom-SVN: r155058", "tree": {"sha": "1c3bfabf43511e55a0a81aadfbb3cc05c1584835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c3bfabf43511e55a0a81aadfbb3cc05c1584835"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aedff010f0b3fef486319a887b71bc625a4a2b78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aedff010f0b3fef486319a887b71bc625a4a2b78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aedff010f0b3fef486319a887b71bc625a4a2b78"}], "stats": {"total": 97, "additions": 67, "deletions": 30}, "files": [{"sha": "e0892eef6901a8e7ddd164ced5653cb385a60c36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "patch": "@@ -1,3 +1,14 @@\n+2009-12-07  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* config.gcc (i[34567]86-*-*, x86_64-*-*): Add popcntintrin.h.\n+\t* config/i386/abmintrin.h (_mm_popcnt_u32, _mm_popcnt_u64): Moved...\n+\t* config/i386/i386-c.c (__POPCNT__): Defined.\n+\t* config/i386/popcntintrin.h: ...here.  New file.\n+\t* config/i386/smmintrin.h (_mm_popcnt_u32, _mm_popcnt_u64): Moved...\n+\tInclude popcntintrin.h.\n+\t* config/i386/x86intrin.h: Include popcntintrin.h when __POPCNT__\n+\tis defined.\n+\n 2009-12-07  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* config/i386/i386-protos.h (ix86_expand_fma4_multiple_memory):"}, {"sha": "9c0075b23cf4ed37e1e52d3372ed840d889d026d", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "patch": "@@ -288,7 +288,7 @@ i[34567]86-*-*)\n \t\t       pmmintrin.h tmmintrin.h ammintrin.h smmintrin.h\n \t\t       nmmintrin.h bmmintrin.h fma4intrin.h wmmintrin.h\n \t\t       immintrin.h x86intrin.h avxintrin.h xopintrin.h\n-\t\t       ia32intrin.h cross-stdarg.h lwpintrin.h\"\n+\t\t       ia32intrin.h cross-stdarg.h lwpintrin.h popcntintrin.h\"\n \t;;\n x86_64-*-*)\n \tcpu_type=i386\n@@ -298,7 +298,7 @@ x86_64-*-*)\n \t\t       pmmintrin.h tmmintrin.h ammintrin.h smmintrin.h\n \t\t       nmmintrin.h bmmintrin.h fma4intrin.h wmmintrin.h\n \t\t       immintrin.h x86intrin.h avxintrin.h xopintrin.h\n-\t\t       ia32intrin.h cross-stdarg.h lwpintrin.h\"\n+\t\t       ia32intrin.h cross-stdarg.h lwpintrin.h popcntintrin.h\"\n \tneed_64bit_hwint=yes\n \t;;\n ia64-*-*)"}, {"sha": "9d87f5745864a54d05f219a6b5455855fe5d6c4f", "filename": "gcc/config/i386/abmintrin.h", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fabmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fabmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fabmintrin.h?ref=3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "patch": "@@ -52,19 +52,4 @@ __lzcnt64 (unsigned long __X)\n }\n #endif\n \n-/* Calculate a number of bits set to 1.  */\n-extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_popcnt_u32 (unsigned int __X)\n-{\n-  return __builtin_popcount (__X);\n-}\n-\n-#ifdef __x86_64__\n-extern __inline long long  __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_popcnt_u64 (unsigned long long __X)\n-{\n-  return __builtin_popcountll (__X);\n-}\n-#endif\n-\n #endif /* _ABMINTRIN_H_INCLUDED */"}, {"sha": "35eab492b6cdda37ac4d501c187333cb79f67bd3", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "patch": "@@ -238,6 +238,8 @@ ix86_target_macros_internal (int isa_flag,\n     def_or_undef (parse_in, \"__LWP__\");\n   if (isa_flag & OPTION_MASK_ISA_ABM)\n     def_or_undef (parse_in, \"__ABM__\");\n+  if (isa_flag & OPTION_MASK_ISA_POPCNT)\n+    def_or_undef (parse_in, \"__POPCNT__\");\n   if ((fpmath & FPMATH_SSE) && (isa_flag & OPTION_MASK_ISA_SSE))\n     def_or_undef (parse_in, \"__SSE_MATH__\");\n   if ((fpmath & FPMATH_SSE) && (isa_flag & OPTION_MASK_ISA_SSE2))"}, {"sha": "8d4d6571d8c31a58e96f8de6c8eb49e4e7b556b8", "filename": "gcc/config/i386/popcntintrin.h", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fpopcntintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fpopcntintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpopcntintrin.h?ref=3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "patch": "@@ -0,0 +1,46 @@\n+/* Copyright (C) 2009 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef __POPCNT__\n+# error \"POPCNT instruction set not enabled\"\n+#endif /* __POPCNT__ */\n+\n+#ifndef _POPCNTINTRIN_H_INCLUDED\n+#define _POPCNTINTRIN_H_INCLUDED\n+\n+/* Calculate a number of bits set to 1.  */\n+extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_popcnt_u32 (unsigned int __X)\n+{\n+  return __builtin_popcount (__X);\n+}\n+\n+#ifdef __x86_64__\n+extern __inline long long  __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_popcnt_u64 (unsigned long long __X)\n+{\n+  return __builtin_popcountll (__X);\n+}\n+#endif\n+\n+#endif /* _POPCNTINTRIN_H_INCLUDED */"}, {"sha": "170fae589b90e3e8284f4f90665809edeaaaf935", "filename": "gcc/config/i386/smmintrin.h", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fsmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fsmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsmmintrin.h?ref=3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "patch": "@@ -793,19 +793,8 @@ _mm_cmpgt_epi64 (__m128i __X, __m128i __Y)\n   return (__m128i) __builtin_ia32_pcmpgtq ((__v2di)__X, (__v2di)__Y);\n }\n \n-/* Calculate a number of bits set to 1.  */\n-extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_popcnt_u32 (unsigned int __X)\n-{\n-  return __builtin_popcount (__X);\n-}\n-\n-#ifdef __x86_64__\n-extern __inline long long  __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_popcnt_u64 (unsigned long long __X)\n-{\n-  return __builtin_popcountll (__X);\n-}\n+#ifdef __POPCNT__\n+#include <popcntintrin.h>\n #endif\n \n /* Accumulate CRC32 (polynomial 0x11EDC6F41) value.  */"}, {"sha": "29d44dc870692940bd75b4178515f9de50c21456", "filename": "gcc/config/i386/x86intrin.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fx86intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bccee0302bf9d27d0fc09dc7efd24ea8c57535f/gcc%2Fconfig%2Fi386%2Fx86intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86intrin.h?ref=3bccee0302bf9d27d0fc09dc7efd24ea8c57535f", "patch": "@@ -81,4 +81,8 @@\n #include <abmintrin.h>\n #endif\n \n+#ifdef __POPCNT__\n+#include <popcntintrin.h>\n+#endif\n+\n #endif /* _X86INTRIN_H_INCLUDED */"}]}