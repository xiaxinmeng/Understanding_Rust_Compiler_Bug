{"sha": "f9837879d58101f62cd52cc7d17b5dd76b975978", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk4Mzc4NzlkNTgxMDFmNjJjZDUyY2M3ZDE3YjVkZDc2Yjk3NTk3OA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-08-24T21:10:41Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-08-24T21:10:41Z"}, "message": "varpool.c (varpool_last_needed_node): Fix comment typo.\n\n\t* varpool.c (varpool_last_needed_node): Fix comment typo.\n\t* c-decl.c (duplicate_decls): Fix comment typo.\n\t(clone_underlying_type): Update comment.\n\nFrom-SVN: r127788", "tree": {"sha": "ddab928967370ac499db2af2cfb08b1bc7d67816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddab928967370ac499db2af2cfb08b1bc7d67816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9837879d58101f62cd52cc7d17b5dd76b975978", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9837879d58101f62cd52cc7d17b5dd76b975978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9837879d58101f62cd52cc7d17b5dd76b975978", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9837879d58101f62cd52cc7d17b5dd76b975978/comments", "author": null, "committer": null, "parents": [{"sha": "787b0d199b714e0a8aceaae931548aa5076bcd06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/787b0d199b714e0a8aceaae931548aa5076bcd06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/787b0d199b714e0a8aceaae931548aa5076bcd06"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "450c4811b6c8a8386c631c4721bf4f6d1ef5ed90", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9837879d58101f62cd52cc7d17b5dd76b975978/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9837879d58101f62cd52cc7d17b5dd76b975978/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9837879d58101f62cd52cc7d17b5dd76b975978", "patch": "@@ -1,3 +1,9 @@\n+2007-08-24  Tom Tromey  <tromey@redhat.com>\n+\n+\t* varpool.c (varpool_last_needed_node): Fix comment typo.\n+\t* c-decl.c (duplicate_decls): Fix comment typo.\n+\t(clone_underlying_type): Update comment.\n+\n 2007-08-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* config/alpha/alpha.c (alpha_mangle_type, decl_has_samegp,"}, {"sha": "1625046a64fc0688b017ed74ac2eec8277a828bb", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9837879d58101f62cd52cc7d17b5dd76b975978/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9837879d58101f62cd52cc7d17b5dd76b975978/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=f9837879d58101f62cd52cc7d17b5dd76b975978", "patch": "@@ -1930,7 +1930,7 @@ duplicate_decls (tree newdecl, tree olddecl)\n \n   if (!diagnose_mismatched_decls (newdecl, olddecl, &newtype, &oldtype))\n     {\n-      /* Avoid `unused variable' and other warnings warnings for OLDDECL.  */\n+      /* Avoid `unused variable' and other warnings for OLDDECL.  */\n       TREE_NO_WARNING (olddecl) = 1;\n       return false;\n     }\n@@ -2028,11 +2028,7 @@ warn_if_shadowing (tree new_decl)\n \n     Obviously, we don't want to generate a duplicate ..._TYPE node if\n     the TYPE_DECL node that we are now processing really represents a\n-    standard built-in type.\n-\n-    Since all standard types are effectively declared at line zero\n-    in the source file, we can easily check to see if we are working\n-    on a standard type by checking the current value of lineno.  */\n+    standard built-in type.  */\n \n static void\n clone_underlying_type (tree x)"}, {"sha": "719f212cbf529c68cce25123675dfe5224c03084", "filename": "gcc/varpool.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9837879d58101f62cd52cc7d17b5dd76b975978/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9837879d58101f62cd52cc7d17b5dd76b975978/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=f9837879d58101f62cd52cc7d17b5dd76b975978", "patch": "@@ -57,8 +57,9 @@ struct varpool_node *varpool_nodes;\n    The queue is maintained via mark_needed_node, linked via node->next_needed\n    pointer. \n \n-   LAST_NNEDED_NODE points to the end of queue, so it can be maintained in forward\n-   order.  QTY is needed to make it friendly to PCH.\n+   LAST_NEEDED_NODE points to the end of queue, so it can be\n+   maintained in forward order.  QTY is needed to make it friendly to\n+   PCH.\n  \n    During unit-at-a-time compilation we construct the queue of needed variables\n    twice: first time it is during cgraph construction, second time it is at the"}]}