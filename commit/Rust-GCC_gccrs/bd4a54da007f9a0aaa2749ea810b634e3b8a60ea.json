{"sha": "bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ0YTU0ZGEwMDdmOWEwYWFhMjc0OWVhODEwYjYzNGUzYjhhNjBlYQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-07-27T16:52:52Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-07-27T16:52:52Z"}, "message": "Fix PR47691: do not abort compilation when code generation fails\n\n2011-07-27  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/47691\n\t* graphite-clast-to-gimple.c (translate_clast_user): Update use of\n\tcopy_bb_and_scalar_dependences.\n\t* sese.c (rename_uses): Do not call gcc_assert.  Set gloog_error.\n\t(graphite_copy_stmts_from_block): Update call to rename_uses.\n\t(copy_bb_and_scalar_dependences): Update call to\n\tgraphite_copy_stmts_from_block.\n\t* sese.h (copy_bb_and_scalar_dependences): Update declaration.\n\n\t* gfortran.dg/graphite/id-pr47691.f: New.\n\nFrom-SVN: r176836", "tree": {"sha": "9bc3bb62dc819da99efdeb52080674f4fd642894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bc3bb62dc819da99efdeb52080674f4fd642894"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04c9ea12e0f579e0f974ffe6a979376ddafbc0a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04c9ea12e0f579e0f974ffe6a979376ddafbc0a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04c9ea12e0f579e0f974ffe6a979376ddafbc0a1"}], "stats": {"total": 70, "additions": 56, "deletions": 14}, "files": [{"sha": "1c2f0562b6f6a4070ab96224f991c0599cbfd052", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "patch": "@@ -1,5 +1,16 @@\n+2011-07-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/47691\n+\t* graphite-clast-to-gimple.c (translate_clast_user): Update use of\n+\tcopy_bb_and_scalar_dependences.\n+\t* sese.c (rename_uses): Do not call gcc_assert.  Set gloog_error.\n+\t(graphite_copy_stmts_from_block): Update call to rename_uses.\n+\t(copy_bb_and_scalar_dependences): Update call to\n+\tgraphite_copy_stmts_from_block.\n+\t* sese.h (copy_bb_and_scalar_dependences): Update declaration.\n+\n 2011-07-27  Georg-Johann Lay  <avr@gjlay.de>\n-\t\n+\n \tPR target/49313\n \t* config/avr/libgcc.S (__ffshi2): Don't skip 2-word instruction.\n \t(__ctzsi2): Result for 0 may be undefined."}, {"sha": "a911eb64c14aa7bfcbba1f30ee29675374bad806", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "patch": "@@ -1020,7 +1020,7 @@ translate_clast_user (struct clast_user_stmt *stmt, edge next_e,\n \n   build_iv_mapping (iv_map, stmt, ip);\n   next_e = copy_bb_and_scalar_dependences (GBB_BB (gbb), ip->region,\n-\t\t\t\t\t   next_e, iv_map);\n+\t\t\t\t\t   next_e, iv_map, &gloog_error);\n   VEC_free (tree, heap, iv_map);\n \n   new_bb = next_e->src;"}, {"sha": "ec96dfba5ccef7944404e774dc7b492df02e3399", "filename": "gcc/sese.c", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "patch": "@@ -458,11 +458,13 @@ set_rename (htab_t rename_map, tree old_name, tree expr)\n    substitution map RENAME_MAP, inserting the gimplification code at\n    GSI_TGT, for the translation REGION, with the original copied\n    statement in LOOP, and using the induction variable renaming map\n-   IV_MAP.  Returns true when something has been renamed.  */\n+   IV_MAP.  Returns true when something has been renamed.  GLOOG_ERROR\n+   is set when the code generation cannot continue.  */\n \n static bool\n rename_uses (gimple copy, htab_t rename_map, gimple_stmt_iterator *gsi_tgt,\n-\t     sese region, loop_p loop, VEC (tree, heap) *iv_map)\n+\t     sese region, loop_p loop, VEC (tree, heap) *iv_map,\n+\t     bool *gloog_error)\n {\n   use_operand_p use_p;\n   ssa_op_iter op_iter;\n@@ -522,16 +524,24 @@ rename_uses (gimple copy, htab_t rename_map, gimple_stmt_iterator *gsi_tgt,\n \t scalar SSA_NAME used in the scop: all the other scalar\n \t SSA_NAMEs should have been translated out of SSA using\n \t arrays with one element.  */\n-      gcc_assert (!chrec_contains_undetermined (scev));\n+      if (chrec_contains_undetermined (scev))\n+\t{\n+\t  *gloog_error = true;\n+\t  return false;\n+\t}\n \n       new_expr = chrec_apply_map (scev, iv_map);\n \n       /* The apply should produce an expression tree containing\n \t the uses of the new induction variables.  We should be\n \t able to use new_expr instead of the old_name in the newly\n \t generated loop nest.  */\n-      gcc_assert (!chrec_contains_undetermined (new_expr)\n-\t\t  && !tree_contains_chrecs (new_expr, NULL));\n+      if (chrec_contains_undetermined (new_expr)\n+\t  || tree_contains_chrecs (new_expr, NULL))\n+\t{\n+\t  *gloog_error = true;\n+\t  return false;\n+\t}\n \n       /* Replace the old_name with the new_expr.  */\n       new_expr = force_gimple_operand (unshare_expr (new_expr), &stmts,\n@@ -555,12 +565,14 @@ rename_uses (gimple copy, htab_t rename_map, gimple_stmt_iterator *gsi_tgt,\n }\n \n /* Duplicates the statements of basic block BB into basic block NEW_BB\n-   and compute the new induction variables according to the IV_MAP.  */\n+   and compute the new induction variables according to the IV_MAP.\n+   GLOOG_ERROR is set when the code generation cannot continue.  */\n \n static void\n graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n \t\t\t\thtab_t rename_map,\n-\t\t\t\tVEC (tree, heap) *iv_map, sese region)\n+\t\t\t\tVEC (tree, heap) *iv_map, sese region,\n+\t\t\t\tbool *gloog_error)\n {\n   gimple_stmt_iterator gsi, gsi_tgt;\n   loop_p loop = bb->loop_father;\n@@ -605,27 +617,34 @@ graphite_copy_stmts_from_block (basic_block bb, basic_block new_bb,\n \t  set_rename (rename_map, old_name, new_name);\n  \t}\n \n-      if (rename_uses (copy, rename_map, &gsi_tgt, region, loop, iv_map))\n+      if (rename_uses (copy, rename_map, &gsi_tgt, region, loop, iv_map,\n+\t\t       gloog_error))\n \tfold_stmt_inplace (copy);\n \n+      if (*gloog_error)\n+\tbreak;\n+\n       update_stmt (copy);\n     }\n }\n \n /* Copies BB and includes in the copied BB all the statements that can\n    be reached following the use-def chains from the memory accesses,\n-   and returns the next edge following this new block.  */\n+   and returns the next edge following this new block.  GLOOG_ERROR is\n+   set when the code generation cannot continue.  */\n \n edge\n copy_bb_and_scalar_dependences (basic_block bb, sese region,\n-\t\t\t\tedge next_e, VEC (tree, heap) *iv_map)\n+\t\t\t\tedge next_e, VEC (tree, heap) *iv_map,\n+\t\t\t\tbool *gloog_error)\n {\n   basic_block new_bb = split_edge (next_e);\n   htab_t rename_map = htab_create (10, rename_map_elt_info,\n \t\t\t\t   eq_rename_map_elts, free);\n \n   next_e = single_succ_edge (new_bb);\n-  graphite_copy_stmts_from_block (bb, new_bb, rename_map, iv_map, region);\n+  graphite_copy_stmts_from_block (bb, new_bb, rename_map, iv_map, region,\n+\t\t\t\t  gloog_error);\n   remove_phi_nodes (new_bb);\n   htab_delete (rename_map);\n "}, {"sha": "7c6a9c68896bd047dce20d9c49fde47b3b8991f2", "filename": "gcc/sese.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Fsese.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Fsese.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.h?ref=bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "patch": "@@ -57,7 +57,7 @@ extern void free_sese (sese);\n extern void sese_insert_phis_for_liveouts (sese, basic_block, edge, edge);\n extern void build_sese_loop_nests (sese);\n extern edge copy_bb_and_scalar_dependences (basic_block, sese, edge,\n-\t\t\t\t\t    VEC (tree, heap) *);\n+\t\t\t\t\t    VEC (tree, heap) *, bool *);\n extern struct loop *outermost_loop_in_sese (sese, basic_block);\n extern void insert_loop_close_phis (htab_t, loop_p);\n extern void insert_guard_phis (basic_block, edge, edge, htab_t, htab_t);"}, {"sha": "ab08df159f06bed789f8b7b6315038dc9f8329a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "patch": "@@ -1,3 +1,8 @@\n+2011-07-27  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/47691\n+\t* gfortran.dg/graphite/id-pr47691.f: New.\n+\n 2011-07-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/avx-os-support.h: New."}, {"sha": "0abbd5562effe183ccd6ef73e44983ee28313a6c", "filename": "gcc/testsuite/gfortran.dg/graphite/id-pr47691.f", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr47691.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd4a54da007f9a0aaa2749ea810b634e3b8a60ea/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr47691.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr47691.f?ref=bd4a54da007f9a0aaa2749ea810b634e3b8a60ea", "patch": "@@ -0,0 +1,7 @@\n+! { dg-options \"-O -fgraphite-identity -ffast-math -fno-tree-scev-cprop\" }\n+      dimension b(12,8)\n+      do i=1,norb\n+      end do\n+      b(i,j) = 0\n+      call rdrsym(b)\n+      end"}]}