{"sha": "6169e5fdd8376fbbe0f66de366354fcfaf78b8a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2OWU1ZmRkODM3NmZiYmUwZjY2ZGUzNjYzNTRmY2ZhZjc4YjhhNw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2002-01-31T01:01:02Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2002-01-31T01:01:02Z"}, "message": "c-decl.c (grokdeclarator): Handle type being a typedef for an invalid type.\n\n\t* c-decl.c (grokdeclarator): Handle type being a typedef for an\n\tinvalid type.\n\ntestsuite:\n\t* gcc.dg/noncompile/20020130-1.c: New test.\n\nFrom-SVN: r49352", "tree": {"sha": "88534a3810db907c206b3f773ecae87f4368c065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88534a3810db907c206b3f773ecae87f4368c065"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "250fce1dfa15e987e9763b20398707490d8fd669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250fce1dfa15e987e9763b20398707490d8fd669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/250fce1dfa15e987e9763b20398707490d8fd669"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "841002068fbb334727c0f1fc3e36a7a4509e8594", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6169e5fdd8376fbbe0f66de366354fcfaf78b8a7", "patch": "@@ -1,3 +1,8 @@\n+2002-01-31  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-decl.c (grokdeclarator): Handle type being a typedef for an\n+\tinvalid type.\n+\n 2002-01-30  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config.gcc: Include sparc/biarch64.h rather than sparc/sparc_bi.h."}, {"sha": "9deb193dae0c35521e26cf77f0c220545f5cd30b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=6169e5fdd8376fbbe0f66de366354fcfaf78b8a7", "patch": "@@ -4241,9 +4241,14 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, width)\n       /* Actual typedefs come to us as TYPE_DECL nodes.  */\n       else if (TREE_CODE (id) == TYPE_DECL)\n \t{\n-\t  type = TREE_TYPE (id);\n-\t  decl_attr = DECL_ATTRIBUTES (id);\n-\t  typedef_decl = id;\n+\t  if (TREE_TYPE (id) == error_mark_node)\n+\t    ; /* Allow the type to default to int to avoid cascading errors.  */\n+\t  else\n+\t    {\n+\t      type = TREE_TYPE (id);\n+\t      decl_attr = DECL_ATTRIBUTES (id);\n+\t      typedef_decl = id;\n+\t    }\n \t}\n       /* Built-in types come as identifiers.  */\n       else if (TREE_CODE (id) == IDENTIFIER_NODE)"}, {"sha": "27934b67f9b3be1b9b2d6d968b027a4f0d746bdb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6169e5fdd8376fbbe0f66de366354fcfaf78b8a7", "patch": "@@ -1,3 +1,7 @@\n+2002-01-31  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.dg/noncompile/20020130-1.c: New test.\n+\n 2002-01-30  David Billinghurst  <David.Billinghurst@riotinto.com>\n \n \t* g77.dg/f77-edit-i-out.f:  Escape \\. Allow \\r\\n and \\r."}, {"sha": "d820e062e719289abc8d3e0ea30208c1c4a927ab", "filename": "gcc/testsuite/gcc.dg/noncompile/20020130-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20020130-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6169e5fdd8376fbbe0f66de366354fcfaf78b8a7/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20020130-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20020130-1.c?ref=6169e5fdd8376fbbe0f66de366354fcfaf78b8a7", "patch": "@@ -0,0 +1,9 @@\n+/* Test for ICE when using typedef for bad type.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk>.  */\n+\n+void\n+foo (void)\n+{\n+  typedef int t[x]; /* { dg-error \"undeclared|function\" \"x undeclared\" } */\n+  t bar;\n+}"}]}