{"sha": "3429710e69836c0eb5cf71c2f22ec7c6ca073db7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQyOTcxMGU2OTgzNmMwZWI1Y2Y3MWMyZjIyZWM3YzZjYTA3M2RiNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-25T15:10:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-25T15:10:52Z"}, "message": "[multiple changes]\n\n2015-11-25  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb: When <target>-gnat is called with switch -P\n\tand a GPR tool is invoked, invoke the GPR tool with switch\n\t--target=<target>.\n\n2015-11-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* opt.adb, bcheck.adb: Minor reformatting.\n\nFrom-SVN: r230876", "tree": {"sha": "e779966df341a0b8d579c693dc4abe59e319a575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e779966df341a0b8d579c693dc4abe59e319a575"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3429710e69836c0eb5cf71c2f22ec7c6ca073db7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3429710e69836c0eb5cf71c2f22ec7c6ca073db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3429710e69836c0eb5cf71c2f22ec7c6ca073db7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/comments", "author": null, "committer": null, "parents": [{"sha": "ccaca7e9f03080b8707a978a51097858a64654e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccaca7e9f03080b8707a978a51097858a64654e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccaca7e9f03080b8707a978a51097858a64654e9"}], "stats": {"total": 92, "additions": 61, "deletions": 31}, "files": [{"sha": "ea9c5e9c8aced1b92c9f6844358fa502a65d291c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3429710e69836c0eb5cf71c2f22ec7c6ca073db7", "patch": "@@ -1,3 +1,13 @@\n+2015-11-25  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb: When <target>-gnat is called with switch -P\n+\tand a GPR tool is invoked, invoke the GPR tool with switch\n+\t--target=<target>.\n+\n+2015-11-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* opt.adb, bcheck.adb: Minor reformatting.\n+\n 2015-11-25  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* init.c: Enable the signal trampoline on x86_64-vx7"}, {"sha": "66341b443176b482a34d6a3f85ba74fd3b8b2709", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=3429710e69836c0eb5cf71c2f22ec7c6ca073db7", "patch": "@@ -1176,16 +1176,17 @@ package body Bcheck is\n    begin\n       Check_Mechanism : for A1 in ALIs.First + 1 .. ALIs.Last loop\n          if (ALIs.Table (A1).Zero_Cost_Exceptions /=\n-             ALIs.Table (ALIs.First).Zero_Cost_Exceptions)\n+              ALIs.Table (ALIs.First).Zero_Cost_Exceptions)\n            or else\n             (ALIs.Table (A1).Frontend_Exceptions /=\n-             ALIs.Table (ALIs.First).Frontend_Exceptions)\n+              ALIs.Table (ALIs.First).Frontend_Exceptions)\n          then\n             Error_Msg_File_1 := ALIs.Table (A1).Sfile;\n             Error_Msg_File_2 := ALIs.Table (ALIs.First).Sfile;\n \n-            Consistency_Error_Msg (\"{ and { compiled with different \"\n-                                            & \"exception handling mechanisms\");\n+            Consistency_Error_Msg\n+              (\"{ and { compiled with different exception handling \"\n+               & \"mechanisms\");\n          end if;\n       end loop Check_Mechanism;\n    end Check_Consistent_Exception_Handling;"}, {"sha": "451f20213872fb78c85acae2ee43c68be77d3883", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 38, "deletions": 23, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=3429710e69836c0eb5cf71c2f22ec7c6ca073db7", "patch": "@@ -58,13 +58,8 @@ with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n procedure GNATCmd is\n    Gprbuild : constant String := \"gprbuild\";\n-   Gnatmake : constant String := \"gnatmake\";\n-\n-   Gprclean  : constant String := \"gprclean\";\n-   Gnatclean : constant String := \"gnatclean\";\n-\n+   Gprclean : constant String := \"gprclean\";\n    Gprname  : constant String := \"gprname\";\n-   Gnatname : constant String := \"gnatname\";\n \n    Normal_Exit : exception;\n    --  Raise this exception for normal program termination\n@@ -1170,8 +1165,9 @@ begin\n    end loop;\n \n    declare\n-      Program   : String_Access;\n-      Exec_Path : String_Access;\n+      Program    : String_Access;\n+      Exec_Path  : String_Access;\n+      Get_Target : Boolean := False;\n \n    begin\n       if The_Command = Stack then\n@@ -1188,9 +1184,10 @@ begin\n          --  instead of gnatmake/gnatclean.\n          --  Ditto for gnatname -> gprname.\n \n-         if Program.all = Gnatmake\n-            or else Program.all = Gnatclean\n-            or else Program.all = Gnatname\n+         if The_Command = Make\n+            or else The_Command = Compile\n+            or else The_Command = Clean\n+            or else The_Command = Name\n          then\n             declare\n                Project_File_Used : Boolean := False;\n@@ -1208,19 +1205,37 @@ begin\n                end loop;\n \n                if Project_File_Used then\n-                  if Program.all = Gnatmake\n-                    and then Locate_Exec_On_Path (Gprbuild) /= null\n-                  then\n-                     Program := new String'(Gprbuild);\n-                  elsif Program.all = Gnatclean\n-                    and then Locate_Exec_On_Path (Gprclean) /= null\n-                  then\n-                     Program := new String'(Gprclean);\n+                  case The_Command is\n+                     when Make | Compile =>\n+                        if Locate_Exec_On_Path (Gprbuild) /= null  then\n+                           Program := new String'(Gprbuild);\n+                           Get_Target := True;\n+                        end if;\n \n-                  elsif Program.all = Gnatname\n-                    and then Locate_Exec_On_Path (Gprname) /= null\n-                  then\n-                     Program := new String'(Gprname);\n+                     when Clean =>\n+                        if Locate_Exec_On_Path (Gprclean) /= null then\n+                           Program := new String'(Gprclean);\n+                           Get_Target := True;\n+                        end if;\n+\n+                     when Name =>\n+                        if Locate_Exec_On_Path (Gprname) /= null then\n+                           Program := new String'(Gprname);\n+                           Get_Target := True;\n+                        end if;\n+\n+                     when others =>\n+                        null;\n+                  end case;\n+\n+                  if Get_Target then\n+                     Find_Program_Name;\n+\n+                     if Name_Len > 5 then\n+                        First_Switches.Append\n+                          (new String'\n+                             (\"--target=\" & Name_Buffer (1 .. Name_Len - 5)));\n+                     end if;\n                   end if;\n                end if;\n             end;"}, {"sha": "f1ce4a4afa370697eb74efa0968e06733ad4f742", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3429710e69836c0eb5cf71c2f22ec7c6ca073db7/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=3429710e69836c0eb5cf71c2f22ec7c6ca073db7", "patch": "@@ -44,8 +44,10 @@ package body Opt is\n \n    function Back_End_Exceptions return Boolean is\n    begin\n-      return Exception_Mechanism = Back_End_SJLJ\n-        or else Exception_Mechanism = Back_End_ZCX;\n+      return\n+        Exception_Mechanism = Back_End_SJLJ\n+          or else\n+        Exception_Mechanism = Back_End_ZCX;\n    end Back_End_Exceptions;\n \n    -------------------------\n@@ -63,8 +65,10 @@ package body Opt is\n \n    function SJLJ_Exceptions return Boolean is\n    begin\n-      return Exception_Mechanism = Back_End_SJLJ\n-        or else Exception_Mechanism = Front_End_SJLJ;\n+      return\n+        Exception_Mechanism = Back_End_SJLJ\n+          or else\n+        Exception_Mechanism = Front_End_SJLJ;\n    end SJLJ_Exceptions;\n \n    --------------------"}]}