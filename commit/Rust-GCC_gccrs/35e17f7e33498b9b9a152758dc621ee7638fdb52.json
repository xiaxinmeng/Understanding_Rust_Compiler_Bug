{"sha": "35e17f7e33498b9b9a152758dc621ee7638fdb52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVlMTdmN2UzMzQ5OGI5YjlhMTUyNzU4ZGM2MjFlZTc2MzhmZGI1Mg==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2001-08-08T21:53:46Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2001-08-08T21:53:46Z"}, "message": "global.c (retry_global_alloc): Avoid shadowing allocno.\n\n\t2001-08-08  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\t* global.c (retry_global_alloc): Avoid shadowing allocno.\n\nFrom-SVN: r44728", "tree": {"sha": "9bc8f33f48d355db2ee36b4a5065b7a3f4aa90bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bc8f33f48d355db2ee36b4a5065b7a3f4aa90bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35e17f7e33498b9b9a152758dc621ee7638fdb52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e17f7e33498b9b9a152758dc621ee7638fdb52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e17f7e33498b9b9a152758dc621ee7638fdb52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e17f7e33498b9b9a152758dc621ee7638fdb52/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b1e2382981379119467d59f396dd81544f99e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1e2382981379119467d59f396dd81544f99e4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b1e2382981379119467d59f396dd81544f99e4f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "500a0894d9fcc6ed67aceaf0dd24364129470996", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e17f7e33498b9b9a152758dc621ee7638fdb52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e17f7e33498b9b9a152758dc621ee7638fdb52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35e17f7e33498b9b9a152758dc621ee7638fdb52", "patch": "@@ -1,3 +1,7 @@\n+2001-08-08  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* global.c (retry_global_alloc): Avoid shadowing allocno.\n+\n 2001-08-08  Mark Mitchell  <mark@codesourcery.com>\n \n \t* except.c (remove_fixup_regions): Fix typo."}, {"sha": "1fe4d82c3f2ce90e22461aeb118a2e5c5cedf0e2", "filename": "gcc/global.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e17f7e33498b9b9a152758dc621ee7638fdb52/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e17f7e33498b9b9a152758dc621ee7638fdb52/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=35e17f7e33498b9b9a152758dc621ee7638fdb52", "patch": "@@ -1290,17 +1290,17 @@ retry_global_alloc (regno, forbidden_regs)\n      int regno;\n      HARD_REG_SET forbidden_regs;\n {\n-  int allocno = reg_allocno[regno];\n-  if (allocno >= 0)\n+  int alloc_no = reg_allocno[regno];\n+  if (alloc_no >= 0)\n     {\n       /* If we have more than one register class,\n \t first try allocating in the class that is cheapest\n \t for this pseudo-reg.  If that fails, try any reg.  */\n       if (N_REG_CLASSES > 1)\n-\tfind_reg (allocno, forbidden_regs, 0, 0, 1);\n+\tfind_reg (alloc_no, forbidden_regs, 0, 0, 1);\n       if (reg_renumber[regno] < 0\n \t  && reg_alternate_class (regno) != NO_REGS)\n-\tfind_reg (allocno, forbidden_regs, 1, 0, 1);\n+\tfind_reg (alloc_no, forbidden_regs, 1, 0, 1);\n \n       /* If we found a register, modify the RTL for the register to\n \t show the hard register, and mark that register live.  */"}]}