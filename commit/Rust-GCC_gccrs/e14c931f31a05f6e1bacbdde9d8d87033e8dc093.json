{"sha": "e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE0YzkzMWYzMWEwNWY2ZTFiYWNiZGRlOWQ4ZDg3MDMzZThkYzA5Mw==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-03-30T19:39:01Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-03-30T19:39:01Z"}, "message": "a-textio.ads, [...]: Fix comment typos.\n\ngcc/ada/\n\t* a-textio.ads, a-witeio.ads, a-ztexio.ads, ali.ads,\n\teinfo.ads, erroutc.adb, erroutc.ads, exp_attr.adb,\n\texp_imgv.adb, exp_intr.adb, exp_pakd.adb,\n\texp_pakd.ads, exp_prag.adb, exp_smem.adb,\n\texp_tss.ads, exp_util.adb, exp_util.ads,\n\texp_vfpt.adb, freeze.adb, freeze.ads,\n\tfrontend.adb, g-alleve.adb, g-altcon.adb,\n\tg-altive.ads, g-alveop.ads, g-alvevi.ads,\n\tg-arrspl.adb, g-busorg.ads, g-calend.adb,\n\tg-calend.ads, g-casuti.ads, g-cgideb.adb,\n\tg-comlin.adb, g-comlin.ads, g-curexc.ads,\n\tg-debpoo.adb, g-debpoo.ads, g-decstr.adb,\n\tg-dirope.adb, g-dirope.ads, g-dynhta.ads,\n\tg-dyntab.adb, g-encstr.ads, g-excact.ads,\n\tg-except.ads, g-expect.ads, g-heasor.adb,\n\tg-hesora.adb, g-hesorg.adb, g-htable.ads,\n\tg-locfil.ads, g-md5.adb, g-md5.ads,\n\tg-memdum.ads, g-moreex.ads, g-os_lib.adb,\n\tg-pehage.adb, g-pehage.ads, g-regexp.adb,\n\tg-regexp.ads, g-regpat.adb, g-regpat.ads,\n\tg-soccon-aix.ads, g-soccon-darwin.ads,\n\tg-soccon-freebsd.ads, g-soccon-hpux-ia64.ads,\n\tg-soccon-hpux.ads, g-soccon-irix.ads,\n\tg-soccon-linux-64.ads, g-soccon-linux-ppc.ads,\n\tg-soccon-linux-x86.ads, g-soccon-lynxos.ads,\n\tg-soccon-mingw.ads, g-soccon-solaris-64.ads,\n\tg-soccon-solaris.ads, g-soccon-tru64.ads,\n\tg-soccon-vms.ads, g-soccon-vxworks.ads,\n\tg-soccon.ads, g-socket.adb, g-socket.ads,\n\tg-socthi-mingw.adb, g-socthi-vms.adb,\n\tg-socthi-vxworks.adb, g-soliop-mingw.ads,\n\tg-soliop-solaris.ads, g-soliop.ads, g-spipat.adb,\n\tg-spipat.ads, g-string.adb, g-stsifd-sockets.adb: Fix comment\n\ttypos.\n\nFrom-SVN: r133735", "tree": {"sha": "39975fd2ea8e363ddd9d7290ec06efc97ffbf935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39975fd2ea8e363ddd9d7290ec06efc97ffbf935"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/comments", "author": null, "committer": null, "parents": [{"sha": "8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae6e4a4dd741b4d5ebc07a0442e9714d4667aaf"}], "stats": {"total": 463, "additions": 250, "deletions": 213}, "files": [{"sha": "703721bb28666e14d449119a00dd48fca752937a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -1,3 +1,40 @@\n+2008-03-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* a-textio.ads, a-witeio.ads, a-ztexio.ads, ali.ads,\n+\teinfo.ads, erroutc.adb, erroutc.ads, exp_attr.adb,\n+\texp_imgv.adb, exp_intr.adb, exp_pakd.adb,\n+\texp_pakd.ads, exp_prag.adb, exp_smem.adb,\n+\texp_tss.ads, exp_util.adb, exp_util.ads,\n+\texp_vfpt.adb, freeze.adb, freeze.ads,\n+\tfrontend.adb, g-alleve.adb, g-altcon.adb,\n+\tg-altive.ads, g-alveop.ads, g-alvevi.ads,\n+\tg-arrspl.adb, g-busorg.ads, g-calend.adb,\n+\tg-calend.ads, g-casuti.ads, g-cgideb.adb,\n+\tg-comlin.adb, g-comlin.ads, g-curexc.ads,\n+\tg-debpoo.adb, g-debpoo.ads, g-decstr.adb,\n+\tg-dirope.adb, g-dirope.ads, g-dynhta.ads,\n+\tg-dyntab.adb, g-encstr.ads, g-excact.ads,\n+\tg-except.ads, g-expect.ads, g-heasor.adb,\n+\tg-hesora.adb, g-hesorg.adb, g-htable.ads,\n+\tg-locfil.ads, g-md5.adb, g-md5.ads,\n+\tg-memdum.ads, g-moreex.ads, g-os_lib.adb,\n+\tg-pehage.adb, g-pehage.ads, g-regexp.adb,\n+\tg-regexp.ads, g-regpat.adb, g-regpat.ads,\n+\tg-soccon-aix.ads, g-soccon-darwin.ads,\n+\tg-soccon-freebsd.ads, g-soccon-hpux-ia64.ads,\n+\tg-soccon-hpux.ads, g-soccon-irix.ads,\n+\tg-soccon-linux-64.ads, g-soccon-linux-ppc.ads,\n+\tg-soccon-linux-x86.ads, g-soccon-lynxos.ads,\n+\tg-soccon-mingw.ads, g-soccon-solaris-64.ads,\n+\tg-soccon-solaris.ads, g-soccon-tru64.ads,\n+\tg-soccon-vms.ads, g-soccon-vxworks.ads,\n+\tg-soccon.ads, g-socket.adb, g-socket.ads,\n+\tg-socthi-mingw.adb, g-socthi-vms.adb,\n+\tg-socthi-vxworks.adb, g-soliop-mingw.ads,\n+\tg-soliop-solaris.ads, g-soliop.ads, g-spipat.adb,\n+\tg-spipat.ads, g-string.adb, g-stsifd-sockets.adb: Fix comment\n+\ttypos.\n+\n 2008-03-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (gnat_to_gnu_entity) <E_Procedure>: Also set the public flag"}, {"sha": "45f422f7bf1840fc6c0cab94bc6ad5bfd4cddab4", "filename": "gcc/ada/a-textio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fa-textio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fa-textio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -317,7 +317,7 @@ private\n    --  omitted on output unless an explicit New_Page call is made before\n    --  closing the file. No page mark is added when a file is appended to,\n    --  so, in accordance with the permission in (RM A.10.2(4)), there may\n-   --  or may not be a page mark separating preexising text in the file\n+   --  or may not be a page mark separating preexisting text in the file\n    --  from the new text to be written.\n \n    --  A file mark is marked by the physical end of file. In DOS translation\n@@ -354,7 +354,7 @@ private\n \n       Self : aliased File_Type;\n       --  Set to point to the containing Text_AFCB block. This is used to\n-      --  implement the Current_{Error,Input,Ouput} functions which return\n+      --  implement the Current_{Error,Input,Output} functions which return\n       --  a File_Access, the file access value returned is a pointer to\n       --  the Self field of the corresponding file.\n "}, {"sha": "0ea32ce2b0c3d393ccb1b447b6652f5c24de5fe0", "filename": "gcc/ada/a-witeio.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fa-witeio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fa-witeio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -138,7 +138,7 @@ package Ada.Wide_Text_IO is\n    -- Buffer control --\n    --------------------\n \n-   --  Note: The paramter file is in out in the RM, but as pointed out\n+   --  Note: The parameter file is in out in the RM, but as pointed out\n    --  in <<95-5166.a Tucker Taft 95-6-23>> this is clearly an oversight.\n \n    procedure Flush (File : File_Type);\n@@ -319,7 +319,7 @@ private\n    --  omitted on output unless an explicit New_Page call is made before\n    --  closing the file. No page mark is added when a file is appended to,\n    --  so, in accordance with the permission in (RM A.10.2(4)), there may\n-   --  or may not be a page mark separating preexising text in the file\n+   --  or may not be a page mark separating preexisting text in the file\n    --  from the new text to be written.\n \n    --  A file mark is marked by the physical end of file. In DOS translation\n@@ -352,12 +352,12 @@ private\n \n       Self : aliased File_Type;\n       --  Set to point to the containing Text_AFCB block. This is used to\n-      --  implement the Current_{Error,Input,Ouput} functions which return\n+      --  implement the Current_{Error,Input,Output} functions which return\n       --  a File_Access, the file access value returned is a pointer to\n       --  the Self field of the corresponding file.\n \n       Before_LM : Boolean := False;\n-      --  This flag is used to deal with the anomolies introduced by the\n+      --  This flag is used to deal with the anomalies introduced by the\n       --  peculiar definition of End_Of_File and End_Of_Page in Ada. These\n       --  functions require looking ahead more than one character. Since\n       --  there is no convenient way of backing up more than one character,"}, {"sha": "f91599295a41cf3bc54980e19b864c10c1bf4bdd", "filename": "gcc/ada/a-ztexio.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fa-ztexio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fa-ztexio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -138,7 +138,7 @@ package Ada.Wide_Wide_Text_IO is\n    -- Buffer control --\n    --------------------\n \n-   --  Note: The paramter file is in out in the RM, but as pointed out\n+   --  Note: The parameter file is in out in the RM, but as pointed out\n    --  in <<95-5166.a Tucker Taft 95-6-23>> this is clearly an oversight.\n \n    procedure Flush (File : File_Type);\n@@ -319,7 +319,7 @@ private\n    --  omitted on output unless an explicit New_Page call is made before\n    --  closing the file. No page mark is added when a file is appended to,\n    --  so, in accordance with the permission in (RM A.10.2(4)), there may\n-   --  or may not be a page mark separating preexising text in the file\n+   --  or may not be a page mark separating preexisting text in the file\n    --  from the new text to be written.\n \n    --  A file mark is marked by the physical end of file. In DOS translation\n@@ -352,12 +352,12 @@ private\n \n       Self : aliased File_Type;\n       --  Set to point to the containing Text_AFCB block. This is used to\n-      --  implement the Current_{Error,Input,Ouput} functions which return\n+      --  implement the Current_{Error,Input,Output} functions which return\n       --  a File_Access, the file access value returned is a pointer to\n       --  the Self field of the corresponding file.\n \n       Before_LM : Boolean := False;\n-      --  This flag is used to deal with the anomolies introduced by the\n+      --  This flag is used to deal with the anomalies introduced by the\n       --  peculiar definition of End_Of_File and End_Of_Page in Ada. These\n       --  functions require looking ahead more than one character. Since\n       --  there is no convenient way of backing up more than one character,"}, {"sha": "c632c659045ba65d830bd01934ecff70c8eae7f2", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -845,12 +845,12 @@ package ALI is\n \n       Oref_File_Num : Sdep_Id;\n       --  This field is set to No_Sdep_Id if the entity doesn't override any\n-      --  other entity, or to the dependency reference for the overriden\n+      --  other entity, or to the dependency reference for the overridden\n       --  entity.\n \n       Oref_Line : Nat;\n       Oref_Col  : Nat;\n-      --  These two fields are set to the line and column of the overriden\n+      --  These two fields are set to the line and column of the overridden\n       --  entity.\n \n       First_Xref : Nat;"}, {"sha": "145a262d2ba45a1c9a96e6941cc94ec985b2f97e", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -2620,7 +2620,7 @@ package Einfo is\n --       which does not also have this flag set to True. For a variable or\n --       or constant, if the flag is set, then the type of the object must\n --       either be declared at the library level, or it must also have the\n---       flag set (since to allocate the oject statically, its type must\n+--       flag set (since to allocate the object statically, its type must\n --       also be elaborated globally).\n \n --    Is_Static_Dispatch_Table_Entity (Flag234)\n@@ -2732,7 +2732,7 @@ package Einfo is\n --       package. Indicates that the entity must be made visible in the body\n --       of the instance, to reproduce the visibility of the generic. This\n --       simplifies visibility settings in instance bodies.\n---       ??? confusion in abovecomments between being present and being set\n+--       ??? confusion in above comments between being present and being set\n \n --    Is_VMS_Exception (Flag133)\n --       Present in all entities. Set only for exception entities where the\n@@ -2766,21 +2766,21 @@ package Einfo is\n --    Kill_Elaboration_Checks (Flag32)\n --       Present in all entities. Set by the expander to kill elaboration\n --       checks which are known not to be needed. Equivalent in effect to\n---       the use of pragma Supress (Elaboration_Checks) for that entity\n+--       the use of pragma Suppress (Elaboration_Checks) for that entity\n --       except that the effect is permanent and cannot be undone by a\n --       subsequent pragma Unsuppress.\n \n --    Kill_Range_Checks (Flag33)\n --       Present in all entities. Equivalent in effect to the use of pragma\n---       Supress (Range_Checks) for that entity except that the result is\n+--       Suppress (Range_Checks) for that entity except that the result is\n --       permanent and cannot be undone by a subsequent pragma Unsuppress.\n --       This is currently only used in one odd situation in Sem_Ch3 for\n --       record types, and it would be good to get rid of it???\n \n --    Kill_Tag_Checks (Flag34)\n --       Present in all entities. Set by the expander to kill elaboration\n --       checks which are known not to be needed. Equivalent in effect to\n---       the use of pragma Supress (Tag_Checks) for that entity except\n+--       the use of pragma Suppress (Tag_Checks) for that entity except\n --       that the result is permanent and cannot be undone by a subsequent\n --       pragma Unsuppress.\n \n@@ -2805,7 +2805,7 @@ package Einfo is\n --       associated entities is attached (blocks, class subtypes and types,\n --       entries, functions, loops, packages, procedures, protected objects,\n --       record types and subtypes, private types, task types and subtypes).\n---       Points to a the last entry in the list of associated entities chained\n+--       Points to the last entry in the list of associated entities chained\n --       through the Next_Entity field. Empty if no entities are chained.\n \n --    Limited_View (Node23)\n@@ -2819,7 +2819,7 @@ package Einfo is\n --       Present in enumeration types and subtypes. Non-empty only for the\n --       case of an enumeration root type, where it contains the entity for\n --       the generated indexes entity. See unit Exp_Imgv for full details of\n---       the nature and use of this entity for implkementing the Image and\n+--       the nature and use of this entity for implementing the Image and\n --       Value attributes for the enumeration type in question.\n --\n --    Lit_Strings (Node16)\n@@ -3169,7 +3169,7 @@ package Einfo is\n --    Parameter_Mode (synthesized)\n --       Applies to formal parameter entities. This is a synonym for Ekind,\n --       used when obtaining the formal kind of a formal parameter (the result\n---       is one of E_[In/Out/In_Out]_Paramter)\n+--       is one of E_[In/Out/In_Out]_Parameter)\n \n --    Parent_Subtype (Node19)\n --       Present in E_Record_Type. Points to the subtype to use for a\n@@ -3254,9 +3254,9 @@ package Einfo is\n \n --    Referenced (Flag156)\n --       Present in all entities. Set if the entity is referenced, except for\n---       the case of an appearence of a simple variable that is not a renaming\n+--       the case of an appearance of a simple variable that is not a renaming\n --       as the left side of an assignment in which case Referenced_As_LHS is\n---       set instead, or a similar appearence as an out parameter actual, in\n+--       set instead, or a similar appearance as an out parameter actual, in\n --       which case As_Out_Parameter_Parameter is set.\n \n --    Referenced_As_LHS (Flag36):\n@@ -3307,7 +3307,7 @@ package Einfo is\n --    Renamed_Entity (Node18)\n --       Present in exceptions, packages, subprograms and generic units. Set\n --       for entities that are defined by a renaming declaration. Denotes the\n---       renamed entity, or transititively the ultimate renamed entity if\n+--       renamed entity, or transitively the ultimate renamed entity if\n --       there is a chain of renaming declarations. Empty if no renaming.\n \n --    Renamed_In_Spec (Flag231)\n@@ -3367,11 +3367,11 @@ package Einfo is\n \n --    Reverse_Bit_Order (Flag164) [base type only]\n --       Present in all record type entities. Set if a valid pragma an\n---       attribute represention clause for Bit_Order has reversed the order of\n---       bits from the default value. When this flag is set, a component clause\n---       must specify a set of bits entirely contained in a single storage unit\n---       (Ada 95) or a single machine scalar (see Ada 2005 AI-133), or must\n---       occupy in integral number of storage units.\n+--       attribute representation clause for Bit_Order has reversed the order\n+--       of bits from the default value. When this flag is set, a component\n+--       clause must specify a set of bits entirely contained in a single\n+--       storage unit (Ada 95) or a single machine scalar (see Ada 2005\n+--       AI-133), or must occupy in integral number of storage units.\n \n --    RM_Size (Uint13)\n --       Present in all type and subtype entities. Contains the value of\n@@ -3387,7 +3387,7 @@ package Einfo is\n --       type of the class covered by the CW type, otherwise returns the\n --       ultimate derivation ancestor of the given type. This function\n --       preserves the view, i.e. the Root_Type of a partial view is the\n---       partial view of the ulimate ancestor, the Root_Type of a full view\n+--       partial view of the ultimate ancestor, the Root_Type of a full view\n --       is the full view of the ultimate ancestor. Note that this function\n --       does not correspond exactly to the use of root type in the RM, since\n --       in the RM root type applies to a class of types, not to a type.\n@@ -4495,7 +4495,7 @@ package Einfo is\n    --  For each enumeration value defined in Entity_Kind we list all the\n    --  attributes defined in Einfo which can legally be applied to an entity\n    --  of that kind. The implementation of the attribute functions (and for\n-   --  non-synthetized attributes, of the corresponding set procedures) are\n+   --  non-synthesized attributes, of the corresponding set procedures) are\n    --  in the Einfo body.\n \n    --  The following attributes apply to all entities\n@@ -5497,7 +5497,7 @@ package Einfo is\n    --  There are four types of alignment possible for array and record\n    --  types, and a field in the type entities contains a value of the\n    --  following type indicating which alignment choice applies. For full\n-   --  details of the meaning of these aligment types, see description\n+   --  details of the meaning of these alignment types, see description\n    --  of the Component_Alignment pragma\n \n    type Component_Alignment_Kind is ("}, {"sha": "c8a0e17fde00acec00607b6067914e1aefcf9a01", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -176,7 +176,7 @@ package body Erroutc is\n             Delete_Msg (M1, M2);\n             return;\n \n-         --  If M2 continuatins have run out, we delete M2\n+         --  If M2 continuations have run out, we delete M2\n \n          elsif N2 = No_Error_Msg or else not Errors.Table (N2).Msg_Cont then\n             Delete_Msg (M2, M1);\n@@ -968,7 +968,7 @@ package body Erroutc is\n          Set_Msg_Char (UI_Image_Buffer (J));\n       end loop;\n \n-      --  The following assignment ensures that a second carret insertion\n+      --  The following assignment ensures that a second caret insertion\n       --  character will correspond to the Error_Msg_Uint_2 parameter. We\n       --  suppress possible validity checks in case operating in -gnatVa mode,\n       --  and Error_Msg_Uint_2 is not needed and has not been set."}, {"sha": "1f4eebf3584929cdbaefdb38f168e458a5b3ac3e", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -36,7 +36,7 @@ package Erroutc is\n    --  type, and is used by Add_Class to insert 'Class at the proper point\n \n    Continuation : Boolean := False;\n-   --  Indicates if current message is a continuation. Intialized from the\n+   --  Indicates if current message is a continuation. Initialized from the\n    --  Msg_Cont parameter in Error_Msg_Internal and then set True if a \\\n    --  insertion character is encountered.\n \n@@ -81,9 +81,9 @@ package Erroutc is\n \n    Max_Msg_Length : constant := 1024 + 2 * Int (Column_Number'Last);\n    --  Maximum length of error message. The addition of 2 * Column_Number'Last\n-   --  ensures that two insertion tokens of maximum length can be accomodated.\n+   --  ensures that two insertion tokens of maximum length can be accommodated.\n    --  The value of 1024 is an arbitrary value that should be more than long\n-   --  enough to accomodate any reasonable message (and for that matter, some\n+   --  enough to accommodate any reasonable message (and for that matter, some\n    --  pretty unreasonable messages!)\n \n    Msg_Buffer : String (1 .. Max_Msg_Length);\n@@ -115,7 +115,7 @@ package Erroutc is\n \n    No_Error_Msg : constant Error_Msg_Id := 0;\n    --  A constant which is different from any value returned by Get_Error_Id.\n-   --  Typically used by a client to indicate absense of a saved Id value.\n+   --  Typically used by a client to indicate absence of a saved Id value.\n \n    Cur_Msg : Error_Msg_Id := No_Error_Msg;\n    --  Id of most recently posted error message\n@@ -235,7 +235,7 @@ package Erroutc is\n    --  end of the current source file. A subsequent pragma Warnings (On)\n    --  adjusts the end point of this entry appropriately.\n \n-   --  If all warnings are suppressed by comamnd switch, then there is a\n+   --  If all warnings are suppressed by command switch, then there is a\n    --  dummy entry (put there by Errout.Initialize) at the start of the\n    --  table which covers all possible Source_Ptr values. Note that the\n    --  source pointer values in this table always reference the original"}, {"sha": "bf5e9d79bbde495481b994bd5c34936db2b11c86", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -624,7 +624,7 @@ package body Exp_Attr is\n                --  is done only for \"Address!(Prim'Unrestricted_Access)\" nodes.\n                --  At this stage other cases in which the designated type is\n                --  still a subprogram (instead of an E_Subprogram_Type) are\n-               --  wrong because the semantics must have overriden the type of\n+               --  wrong because the semantics must have overridden the type of\n                --  the node with the type imposed by the context.\n \n                pragma Assert (Nkind (Parent (N)) = N_Unchecked_Type_Conversion"}, {"sha": "0ecdad2e2436c8ab6c1cce0d7733d36dc6a61bc4", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -556,7 +556,7 @@ package body Exp_Imgv is\n    --    Enum'Val (Value_Enumeration_NN (typS, typI'Address, Num, X))\n \n    --  where typS and typI and the Lit_Strings and Lit_Indexes entities\n-   --  from T's root type entitym and Num is Enum'Pos (Enum'Last). The\n+   --  from T's root type entity, and Num is Enum'Pos (Enum'Last). The\n    --  Value_Enumeration_NN function will search the tables looking for\n    --  X and return the position number in the table if found which is\n    --  used to provide the result of 'Value (using Enum'Val). If the"}, {"sha": "49cdfe028f0976843de6cd5779ee08cef40599ad", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -87,7 +87,7 @@ package body Exp_Intr is\n    --  K is the kind for the shift node\n \n    procedure Expand_Unc_Conversion (N : Node_Id; E : Entity_Id);\n-   --  Expand a call to an instantiation of Unchecked_Convertion into a node\n+   --  Expand a call to an instantiation of Unchecked_Conversion into a node\n    --  N_Unchecked_Type_Conversion.\n \n    procedure Expand_Unc_Deallocation (N : Node_Id);\n@@ -97,7 +97,7 @@ package body Exp_Intr is\n    procedure Expand_To_Address (N : Node_Id);\n    procedure Expand_To_Pointer (N : Node_Id);\n    --  Expand a call to corresponding function, declared in an instance of\n-   --  System.Addess_To_Access_Conversions.\n+   --  System.Address_To_Access_Conversions.\n \n    procedure Expand_Source_Info (N : Node_Id; Nam : Name_Id);\n    --  Rewrite the node by the appropriate string or positive constant."}, {"sha": "21a78ac80a4a4a4d3467bca9553c75a83bc1090b", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -535,7 +535,7 @@ package body Exp_Pakd is\n    --  directly using Insert_Action.\n \n    ------------------------------\n-   -- Compute_Linear_Subcsript --\n+   -- Compute_Linear_Subscript --\n    ------------------------------\n \n    procedure Compute_Linear_Subscript\n@@ -2010,7 +2010,7 @@ package body Exp_Pakd is\n              Left_Opnd  => Make_Shift_Right (Obj, Shift),\n              Right_Opnd => Lit);\n \n-         --  We neded to analyze this before we do the unchecked convert\n+         --  We needed to analyze this before we do the unchecked convert\n          --  below, but we need it temporarily attached to the tree for\n          --  this analysis (hence the temporary Set_Parent call).\n "}, {"sha": "690ec21373b1b02e3f05adc5b8603576d57f4ec4", "filename": "gcc/ada/exp_pakd.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_pakd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_pakd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -218,7 +218,7 @@ package Exp_Pakd is\n    --  Note: although this routine is included in the expander package for\n    --  packed types, it is actually called unconditionally from Freeze,\n    --  whether or not expansion (and code generation) is enabled. We do this\n-   --  since we want gigi to be able to properly compute type charactersitics\n+   --  since we want gigi to be able to properly compute type characteristics\n    --  (for the Data Decomposition Annex of ASIS, and possible other future\n    --  uses) even if code generation is not active. Strictly this means that\n    --  this procedure is not part of the expander, but it seems appropriate\n@@ -263,7 +263,7 @@ package Exp_Pakd is\n    function Involves_Packed_Array_Reference (N : Node_Id) return Boolean;\n    --  N is the node for a name. This function returns true if the name\n    --  involves a packed array reference. A node involves a packed array\n-   --  reference if it is itself an indexed compoment referring to a bit-\n+   --  reference if it is itself an indexed component referring to a bit-\n    --  packed array, or it is a selected component whose prefix involves\n    --  a packed array reference.\n "}, {"sha": "3da72eb2bf1284ceb94af3f98d4f8889e383cdcc", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -330,7 +330,7 @@ package body Exp_Prag is\n         and then Is_RTE (Entity (Name (N)), RE_Raise_Assert_Failure)\n       then\n          --  If original condition was a Standard.False, we assume that this is\n-         --  indeed intented to raise assert error and no warning is required.\n+         --  indeed intended to raise assert error and no warning is required.\n \n          if Is_Entity_Name (Original_Node (Cond))\n            and then Entity (Original_Node (Cond)) = Standard_False"}, {"sha": "ae1ea9b68d0745f22cb11c08b3e42616ce71aa91", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -52,7 +52,7 @@ package body Exp_Smem is\n \n    procedure Add_Write_After (N : Node_Id);\n    --  Insert a Shared_Var_WOpen call for variable after the node\n-   --  Insert_Node, as recorded by On_Lhs_Of_Assigment (where it points\n+   --  Insert_Node, as recorded by On_Lhs_Of_Assignment (where it points\n    --  to the assignment statement) or Is_Out_Actual (where it points to\n    --  the procedure call statement).\n "}, {"sha": "2473d4a69f3b2495e6950465d7530e0c4c59fb43", "filename": "gcc/ada/exp_tss.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_tss.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_tss.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -50,9 +50,9 @@ package Exp_Tss is\n    -------------------------\n \n    --  In the current version of this package, only the case of generating a\n-   --  TSS at the point of declaration of the type is accomodated. A clear\n+   --  TSS at the point of declaration of the type is accommodated. A clear\n    --  improvement would be to follow through with the full implementation\n-   --  as described above, and also accomodate the requirement of generating\n+   --  as described above, and also accommodate the requirement of generating\n    --  only one copy in a given object file.\n \n    --  For now, we deal with the local case by generating duplicate versions"}, {"sha": "82f3fcfc20139deaeb5d7470b8da1b2b70589169", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -1220,7 +1220,7 @@ package body Exp_Util is\n                     Constraints => New_List\n                       (New_Reference_To (Slice_Type, Loc)))));\n \n-            --  This subtype indication may be used later for contraint checks\n+            --  This subtype indication may be used later for constraint checks\n             --  we better make sure that if a variable was used as a bound of\n             --  of the original slice, its value is frozen.\n \n@@ -1657,7 +1657,7 @@ package body Exp_Util is\n       begin\n          --  Climb to the root type\n \n-         --  Handle sychronized interface derivations\n+         --  Handle synchronized interface derivations\n \n          if Is_Concurrent_Record_Type (Typ) then\n             declare\n@@ -2121,7 +2121,7 @@ package body Exp_Util is\n                if N = CV then\n                   Sens := True;\n \n-                  --  Otherwise we must be in susbequent ELSIF or ELSE part\n+                  --  Otherwise we must be in subsequent ELSIF or ELSE part\n \n                else\n                   Sens := False;\n@@ -2861,7 +2861,7 @@ package body Exp_Util is\n \n             --  This is the proper body corresponding to a stub. Insertion\n             --  must be done at the point of the stub, which is in the decla-\n-            --  tive part of the parent unit.\n+            --  rative part of the parent unit.\n \n             P := Corresponding_Stub (Parent (N));\n \n@@ -3704,7 +3704,7 @@ package body Exp_Util is\n    --  Generate the following code:\n \n    --   type Equiv_T is record\n-   --     _parent :  T (List of discriminant constaints taken from Exp);\n+   --     _parent :  T (List of discriminant constraints taken from Exp);\n    --     Ext__50 : Storage_Array (1 .. (Exp'size - Typ'object_size)/8);\n    --   end Equiv_T;\n    --\n@@ -3917,8 +3917,8 @@ package body Exp_Util is\n    -- Make_Subtype_From_Expr --\n    ----------------------------\n \n-   --  1. If Expr is an uncontrained array expression, creates\n-   --    Unc_Type(Expr'first(1)..Expr'Last(1),..., Expr'first(n)..Expr'last(n))\n+   --  1. If Expr is an unconstrained array expression, creates\n+   --    Unc_Type(Expr'first(1)..Expr'last(1),..., Expr'first(n)..Expr'last(n))\n \n    --  2. If Expr is a unconstrained discriminated type expression, creates\n    --    Unc_Type(Expr.Discr1, ... , Expr.Discr_n)\n@@ -4307,7 +4307,7 @@ package body Exp_Util is\n       --  this may happen with any array or record type. On the other hand, we\n       --  cannot create temporaries for all expressions for which this\n       --  condition is true, for various reasons that might require clearing up\n-      --  ??? For example, descriminant references that appear out of place, or\n+      --  ??? For example, discriminant references that appear out of place, or\n       --  spurious type errors with class-wide expressions. As a result, we\n       --  limit the transformation to loop bounds, which is so far the only\n       --  case that requires it.\n@@ -4420,9 +4420,9 @@ package body Exp_Util is\n          elsif Compile_Time_Known_Value (N) then\n             return True;\n \n-         --  A variable renaming is not side-effet free, because the\n+         --  A variable renaming is not side-effect free, because the\n          --  renaming will function like a macro in the front-end in\n-         --  some cases, and an assignment can modify the the component\n+         --  some cases, and an assignment can modify the component\n          --  designated by N, so we need to create a temporary for it.\n \n          elsif Is_Entity_Name (Original_Node (N))\n@@ -5247,7 +5247,7 @@ package body Exp_Util is\n \n    Long_Integer_Sized_Small : Ureal;\n    --  Set to 2.0 ** -(Long_Integer'Size - 1) the first time that this\n-   --  functoin is called (we don't want to compute it more than once)\n+   --  function is called (we don't want to compute it more than once)\n \n    First_Time_For_THFO : Boolean := True;\n    --  Set to False after first call (if Fractional_Fixed_Ops_On_Target)"}, {"sha": "9c99323e8e4cf04c7e346827125eacc3cdedc94f", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -258,7 +258,7 @@ package Exp_Util is\n    --    System_Tasking_Protected_Objects_Single_Entry\n \n    function Current_Sem_Unit_Declarations return List_Id;\n-   --  Return the a place where it is fine to insert declarations for the\n+   --  Return the place where it is fine to insert declarations for the\n    --  current semantic unit. If the unit is a package body, return the\n    --  visible declarations of the corresponding spec. For RCI stubs, this\n    --  is necessary because the point at which they are generated may not\n@@ -429,15 +429,15 @@ package Exp_Util is\n    --  homonym number used to disambiguate overloaded subprograms in the same\n    --  scope (the number is used as part of constructed names to make sure that\n    --  they are unique). The number is the ordinal position on the Homonym\n-   --  chain, counting only entries in the curren scope. If an entity is not\n+   --  chain, counting only entries in the current scope. If an entity is not\n    --  overloaded, the returned number will be one.\n \n    function Inside_Init_Proc return Boolean;\n    --  Returns True if current scope is within an init proc\n \n    function In_Unconditional_Context (Node : Node_Id) return Boolean;\n    --  Node is the node for a statement or a component of a statement. This\n-   --  function deteermines if the statement appears in a context that is\n+   --  function determines if the statement appears in a context that is\n    --  unconditionally executed, i.e. it is not within a loop or a conditional\n    --  or a case statement etc.\n "}, {"sha": "0537cf089d0766927380c04441e6e1d900a0842b", "filename": "gcc/ada/exp_vfpt.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_vfpt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fexp_vfpt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_vfpt.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -242,7 +242,7 @@ package body Exp_VFpt is\n       Func  : RE_Id;\n \n       function Call_Type (T : Entity_Id; Otyp : Entity_Id) return RE_Id;\n-      --  Given one of the two types T, determines the coresponding call\n+      --  Given one of the two types T, determines the corresponding call\n       --  type, i.e. the type to be used for the call (or the result of\n       --  the call). The actual operand is converted to (or from) this type.\n       --  Otyp is the other type, which is useful in figuring out the result."}, {"sha": "d1d72d71d052361a6d60a9e2f654af4b5464433f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -331,7 +331,7 @@ package body Freeze is\n          begin\n \n             --  The controlling formal may be an access parameter, or the\n-            --  actual may be an access value, so ajust accordingly.\n+            --  actual may be an access value, so adjust accordingly.\n \n             if Is_Access_Type (Pref_Type)\n               and then not Is_Access_Type (Form_Type)\n@@ -791,7 +791,7 @@ package body Freeze is\n                   --  discriminant.\n \n                   --  This is because gigi computes the size by doing a\n-                  --  substituation of the appropriate discriminant value in\n+                  --  substitution of the appropriate discriminant value in\n                   --  the size expression for the base type, and gigi is not\n                   --  clever enough to evaluate the resulting expression (which\n                   --  involves a call to rep_to_pos) at compile time.\n@@ -2915,7 +2915,7 @@ package body Freeze is\n                   --  processing is only done for base types, since all the\n                   --  representation aspects involved are type-related. This\n                   --  is not just an optimization, if we start processing the\n-                  --  subtypes, they intefere with the settings on the base\n+                  --  subtypes, they interfere with the settings on the base\n                   --  type (this is because Is_Packed has a slightly different\n                   --  meaning before and after freezing).\n \n@@ -3222,7 +3222,7 @@ package body Freeze is\n             Freeze_Record_Type (E);\n \n          --  For a concurrent type, freeze corresponding record type. This\n-         --  does not correpond to any specific rule in the RM, but the\n+         --  does not correspond to any specific rule in the RM, but the\n          --  record type is essentially part of the concurrent type.\n          --  Freeze as well all local entities. This includes record types\n          --  created for entry parameter blocks, and whatever local entities\n@@ -3636,7 +3636,7 @@ package body Freeze is\n          if Has_Size_Clause (E)\n            and then not Size_Known_At_Compile_Time (E)\n          then\n-            --  Supress this message if errors posted on E, even if we are\n+            --  Suppress this message if errors posted on E, even if we are\n             --  in all errors mode, since this is often a junk message\n \n             if not Error_Posted (E) then\n@@ -4047,7 +4047,7 @@ package body Freeze is\n                  and then Is_Enumeration_Type (Etype (N))\n                then\n                   --  If enumeration literal appears directly as the choice,\n-                  --  do not freeze (this is the normal non-overloade case)\n+                  --  do not freeze (this is the normal non-overloaded case)\n \n                   if Nkind (Parent (N)) = N_Component_Association\n                     and then First (Choices (Parent (N))) = N\n@@ -4410,7 +4410,7 @@ package body Freeze is\n             --  case of both bounds negative, because the sign will be dealt\n             --  with anyway. Furthermore we can't just go making such a bound\n             --  symmetrical, since in a twos-complement system, there is an\n-            --  extra negative value which could not be accomodated on the\n+            --  extra negative value which could not be accommodated on the\n             --  positive side.\n \n             if Typ = Btyp"}, {"sha": "64a1327a9e78875a947e1944a8a5b486e5393784", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -178,7 +178,7 @@ package Freeze is\n    procedure Expand_Atomic_Aggregate (E : Entity_Id; Typ : Entity_Id);\n    --  If an atomic object is initialized with an aggregate or is assigned\n    --  an aggregate, we have to prevent a piecemeal access or assignment\n-   --  to the object, even if the aggregate is to be expanded. we create\n+   --  to the object, even if the aggregate is to be expanded. We create\n    --  a temporary for the aggregate, and assign the temporary instead,\n    --  so that the back end can generate an atomic move for it.\n "}, {"sha": "b6fde4352cc41a1432a2793891775b7ae14a5608", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -103,7 +103,7 @@ begin\n    end if;\n \n    --  Now that the preprocessing situation is established, we are able to\n-   --  load the main source (this is no longer done by Lib.Load.Initalize).\n+   --  load the main source (this is no longer done by Lib.Load.Initialize).\n \n    Lib.Load.Load_Main_Source;\n \n@@ -355,7 +355,7 @@ begin\n    Sprint.Source_Dump;\n \n    --  If a mapping file has been specified by a -gnatem switch, update\n-   --  it if there has been some sourcs that were not in the mappings.\n+   --  it if there has been some sources that were not in the mappings.\n \n    if Mapping_File_Name /= null then\n       Fmap.Update_Mapping_File (Mapping_File_Name.all);"}, {"sha": "33a8d49fbccfde8ea2a7550d93ee07b87f09d26a", "filename": "gcc/ada/g-alleve.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-alleve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-alleve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alleve.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -1864,7 +1864,7 @@ package body GNAT.Altivec.Low_Level_Vectors is\n \n    function To_Pixel (Source : unsigned_short) return Pixel_16 is\n \n-      --  This conversion should not depend on the host endianess;\n+      --  This conversion should not depend on the host endianness;\n       --  therefore, we cannot use an unchecked conversion.\n \n       Target : Pixel_16;\n@@ -1879,7 +1879,7 @@ package body GNAT.Altivec.Low_Level_Vectors is\n \n    function To_Pixel (Source : unsigned_int) return Pixel_32 is\n \n-      --  This conversion should not depend on the host endianess;\n+      --  This conversion should not depend on the host endianness;\n       --  therefore, we cannot use an unchecked conversion.\n \n       Target : Pixel_32;\n@@ -1898,10 +1898,10 @@ package body GNAT.Altivec.Low_Level_Vectors is\n \n    function To_unsigned_int (Source : Pixel_32) return unsigned_int is\n \n-      --  This conversion should not depend on the host endianess;\n+      --  This conversion should not depend on the host endianness;\n       --  therefore, we cannot use an unchecked conversion.\n       --  It should also be the same result, value-wise, on two hosts\n-      --  with the same endianess.\n+      --  with the same endianness.\n \n       Target : unsigned_int := 0;\n \n@@ -1930,10 +1930,10 @@ package body GNAT.Altivec.Low_Level_Vectors is\n \n    function To_unsigned_short (Source : Pixel_16) return unsigned_short is\n \n-      --  This conversion should not depend on the host endianess;\n+      --  This conversion should not depend on the host endianness;\n       --  therefore, we cannot use an unchecked conversion.\n       --  It should also be the same result, value-wise, on two hosts\n-      --  with the same endianess.\n+      --  with the same endianness.\n \n       Target : unsigned_short := 0;\n \n@@ -2765,9 +2765,9 @@ package body GNAT.Altivec.Low_Level_Vectors is\n \n          --  ??? Check the precision of the operation.\n          --  As described in [PEM-6 vexptefp]:\n-         --  If theorical_result is equal to 2 at the power of A (J) with\n+         --  If theoretical_result is equal to 2 at the power of A (J) with\n          --  infinite precision, we should have:\n-         --  abs ((D (J) - theorical_result) / theorical_result) <= 1/16\n+         --  abs ((D (J) - theoretical_result) / theoretical_result) <= 1/16\n \n          D.Values (J) := 2.0 ** NJ_Truncate (VA.Values (J));\n       end loop;"}, {"sha": "d3698a1ac446809bbbaad9b66419a9609d6ce5a1", "filename": "gcc/ada/g-altcon.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-altcon.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-altcon.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-altcon.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -37,7 +37,7 @@ with System; use System;\n \n package body GNAT.Altivec.Conversions is\n \n-   --  All the vector/view conversions operate similarily: bare unchecked\n+   --  All the vector/view conversions operate similarly: bare unchecked\n    --  conversion on big endian targets, and elements permutation on little\n    --  endian targets. We call \"Mirroring\" the elements permutation process.\n "}, {"sha": "3a0caa1976b3e404dc1345122b2209b5b6766019", "filename": "gcc/ada/g-altive.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-altive.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-altive.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-altive.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -135,7 +135,7 @@\n --  of driving ideas:\n \n --  o From the clients standpoint, the two versions of the binding should be\n---    as easily exchangable as possible,\n+--    as easily exchangeable as possible,\n \n --  o From the maintenance standpoint, we want to avoid as much code\n --    duplication as possible."}, {"sha": "fc5728a3aa9910fb1e1a500371b68cb2df73200f", "filename": "gcc/ada/g-alveop.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-alveop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-alveop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alveop.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -8097,7 +8097,7 @@ private\n    pragma Inline_Always (vec_any_numeric);\n    pragma Inline_Always (vec_any_out);\n \n-   --  Similarily, vec_step is expected to be turned into a compile time\n+   --  Similarly, vec_step is expected to be turned into a compile time\n    --  constant, so ...\n \n    pragma Inline_Always (vec_step);"}, {"sha": "32f43838cbbddec66fa8c83320b857ac502f1fbe", "filename": "gcc/ada/g-alvevi.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-alvevi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-alvevi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alvevi.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -38,7 +38,7 @@\n \n --  Accessing vector contents with direct memory overlays should be avoided\n --  because actual vector representations may vary across configurations, for\n---  instance to accomodate different target endianness.\n+--  instance to accommodate different target endianness.\n \n --  The natural representation of a vector is an array indexed by vector\n --  component number, which is materialized by the Varray type definitions"}, {"sha": "879aaac241c26d891d0c1f8d8a2c672a3b479d9d", "filename": "gcc/ada/g-arrspl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-arrspl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-arrspl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-arrspl.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -47,8 +47,8 @@ package body GNAT.Array_Split is\n    function Count\n      (Source  : Element_Sequence;\n       Pattern : Element_Set) return Natural;\n-   --  Returns the number of occurences of Pattern elements in Source, 0 is\n-   --  returned if no occurence is found in Source.\n+   --  Returns the number of occurrences of Pattern elements in Source, 0 is\n+   --  returned if no occurrence is found in Source.\n \n    ------------\n    -- Adjust --"}, {"sha": "b7d4545c6d9adbc29b1751e63f48e412eb1e8a87", "filename": "gcc/ada/g-busorg.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-busorg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-busorg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-busorg.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -43,7 +43,7 @@\n \n --  There is also GNAT.Bubble_Sort_A, which is now considered obsolete, but\n --  was an older version working with subprogram parameters. This version\n---  is retained for baccwards compatibility with old versions of GNAT.\n+--  is retained for backwards compatibility with old versions of GNAT.\n \n generic\n    --  The data to be sorted is assumed to be indexed by integer values from"}, {"sha": "41fcd2420599c3ace180339cc7235549611a5e45", "filename": "gcc/ada/g-calend.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -307,7 +307,7 @@ package body GNAT.Calendar is\n       pragma Unreferenced (Hour, Minute, Second, Sub_Second);\n \n       function Is_Leap (Year : Year_Number) return Boolean;\n-      --  Return True if Year denotes a leap year. Leap centential years are\n+      --  Return True if Year denotes a leap year. Leap centennial years are\n       --  properly handled.\n \n       function Jan_1_Day_Of_Week"}, {"sha": "4216195b1e319e714176e411685e9ffa337951a9", "filename": "gcc/ada/g-calend.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -39,7 +39,7 @@\n --  Ada.Calendar. It provides Split and Time_Of to build and split a Time\n --  data. And it provides accessor functions to get only one of Hour, Minute,\n --  Second, Second_Duration. Other functions are to access more advanced\n---  valueas like Day_Of_Week, Day_In_Year and Week_In_Year.\n+--  values like Day_Of_Week, Day_In_Year and Week_In_Year.\n \n with Ada.Calendar;\n with Interfaces.C;\n@@ -64,7 +64,7 @@ package GNAT.Calendar is\n    function Minute     (Date : Ada.Calendar.Time) return Minute_Number;\n    function Second     (Date : Ada.Calendar.Time) return Second_Number;\n    function Sub_Second (Date : Ada.Calendar.Time) return Second_Duration;\n-   --  Hour, Minute, Sedond and Sub_Second returns the complete time data for\n+   --  Hour, Minute, Second and Sub_Second returns the complete time data for\n    --  the Date (H:M:S.SS). See Ada.Calendar for Year, Month, Day accessors.\n    --  Second_Duration precision depends on the target clock precision.\n "}, {"sha": "d880eeaceaa53429eee4e2452a464dc8d6a77242", "filename": "gcc/ada/g-casuti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-casuti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-casuti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-casuti.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -59,7 +59,7 @@ package GNAT.Case_Util is\n \n    procedure To_Upper (A : in out String)\n      renames System.Case_Util.To_Upper;\n-   --  Folds all characters of string A to upper csae\n+   --  Folds all characters of string A to upper case\n \n    function To_Lower (A : Character) return Character\n      renames System.Case_Util.To_Lower;"}, {"sha": "de20de30e55dddd89550c2bdb794f80cc2e6fc63", "filename": "gcc/ada/g-cgideb.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-cgideb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-cgideb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgideb.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -41,7 +41,7 @@ package body GNAT.CGI.Debug is\n    --  To create a new IO mode you must:\n    --     1. create a new package spec\n    --     2. create a new type derived from IO.Format\n-   --     3. implement all the abstract rountines in IO\n+   --     3. implement all the abstract routines in IO\n \n    package IO is\n "}, {"sha": "e90af875eae4dfbb32491bb8a387cfb3b9581a58", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -43,7 +43,7 @@ package body GNAT.Command_Line is\n       Parameter_With_Optional_Space,  --  ':' in getopt\n       Parameter_With_Space_Or_Equal,  --  '=' in getopt\n       Parameter_No_Space,             --  '!' in getopt\n-      Parameter_Optional);            --  '?' in getop\n+      Parameter_Optional);            --  '?' in getopt\n \n    procedure Set_Parameter\n      (Variable : out Parameter_Type;\n@@ -134,7 +134,7 @@ package body GNAT.Command_Line is\n      (Cmd    : Command_Line;\n       Result : Argument_List_Access;\n       Params : Argument_List_Access);\n-   --  When possible, replace or more switches by an alias, ie a shorter\n+   --  When possible, replace or more switches by an alias, i.e. a shorter\n    --  version.\n \n    function Looking_At\n@@ -567,7 +567,7 @@ package body GNAT.Command_Line is\n                --  Always prepend the switch character, so that users know that\n                --  this comes from a switch on the command line. This is\n                --  especially important when Concatenate is False, since\n-               --  otherwise the currrent argument first character is lost.\n+               --  otherwise the current argument first character is lost.\n \n                Set_Parameter\n                  (Parser.The_Switch,"}, {"sha": "9c8ebc7fa0af7a756ab09b6e33584c88b129e0d8", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -42,7 +42,7 @@\n --  (special command line arguments starting with '-' by default) and their\n --  parameters, and then the rest of the command line arguments.\n \n---  This package is flexible enough to accomodate various needs: optional\n+--  This package is flexible enough to accommodate various needs: optional\n --  switch parameters, various characters to separate a switch and its\n --  parameter, whether to stop the parsing at the first non-switch argument\n --  encountered, etc.\n@@ -84,7 +84,7 @@\n --  A more complicated example would involve the use of sections for the\n --  switches, as for instance in gnatmake. The same command line is used to\n --  provide switches for several tools. Each tool recognizes its switches by\n---  separating them with special switches, chosen by the programer.\n+--  separating them with special switches, chosen by the programmer.\n --  Each section acts as a command line of its own.\n \n --  begin\n@@ -401,7 +401,7 @@ package GNAT.Command_Line is\n    --  matching switch is returned.\n    --\n    --  Arbitrary characters are allowed for switches, although it is\n-   --  strongly recommanded to use only letters and digits for portability\n+   --  strongly recommended to use only letters and digits for portability\n    --  reasons.\n    --\n    --  When Concatenate is False, individual switches need to be separated by"}, {"sha": "0e62ea38f73a3b9af8764c9888b4c9934595a463", "filename": "gcc/ada/g-curexc.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-curexc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-curexc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-curexc.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -50,7 +50,7 @@ package GNAT.Current_Exception is\n    -- Subprograms --\n    -----------------\n \n-   --  Note: the lower bound of returnd String values is always one\n+   --  Note: the lower bound of returned String values is always one\n \n    function Exception_Information return String;\n    --  Returns the result of calling Ada.Exceptions.Exception_Information\n@@ -95,7 +95,7 @@ package GNAT.Current_Exception is\n    --  For greater compatibility with existing legacy software, library\n    --  level renaming may be used to create a function with a name matching\n    --  one that is in use. For example, some versions of VADS Ada provided\n-   --  a functin called Current_Exception whose semantics was identical to\n+   --  a function called Current_Exception whose semantics was identical to\n    --  that of GNAT. The following library level renaming declaration:\n \n    --    with GNAT.Current_Exception;"}, {"sha": "14f11916f6c2373d97f3f69298280248445027eb", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -49,7 +49,7 @@ package body GNAT.Debug_Pools is\n \n    Default_Alignment : constant := Standard'Maximum_Alignment;\n    --  Alignment used for the memory chunks returned by Allocate. Using this\n-   --  value garantees that this alignment will be compatible with all types\n+   --  value guarantees that this alignment will be compatible with all types\n    --  and at the same time makes it easy to find the location of the extra\n    --  header allocated for each chunk.\n \n@@ -286,10 +286,10 @@ package body GNAT.Debug_Pools is\n       Ignored_Frame_Start : System.Address;\n       Ignored_Frame_End   : System.Address);\n    --  Set Start .. Len to the range of values from Trace that should be output\n-   --  to the user. This range of values exludes any address prior to the first\n-   --  one in Ignored_Frame_Start .. Ignored_Frame_End (basically addresses\n-   --  internal to this package). Depth is the number of levels that the user\n-   --  is interested in.\n+   --  to the user. This range of values excludes any address prior to the\n+   --  first one in Ignored_Frame_Start .. Ignored_Frame_End (basically\n+   --  addresses internal to this package). Depth is the number of levels that\n+   --  the user is interested in.\n \n    ---------------\n    -- Header_Of --\n@@ -579,7 +579,7 @@ package body GNAT.Debug_Pools is\n       begin\n          --  The pool only returns addresses aligned on Default_Alignment so\n          --  anything off cannot be a valid block address and we can return\n-         --  early in this case. We actually have to since our datastructures\n+         --  early in this case. We actually have to since our data structures\n          --  map validity bits for such aligned addresses only.\n \n          if Int_Storage mod Default_Alignment /= 0 then\n@@ -692,7 +692,7 @@ package body GNAT.Debug_Pools is\n          Free_Physically (Pool);\n       end if;\n \n-      --  Use standard (ie through malloc) allocations. This automatically\n+      --  Use standard (i.e. through malloc) allocations. This automatically\n       --  raises Storage_Error if needed. We also try once more to physically\n       --  release memory, so that even marked blocks, in the advanced scanning,\n       --  are freed."}, {"sha": "ca386802e12308ecca78dd76c8f61a63088df91a", "filename": "gcc/ada/g-debpoo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-debpoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-debpoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -253,7 +253,7 @@ package GNAT.Debug_Pools is\n    --  the Debug_Pool).\n    --\n    --  The information includes the stacktrace for the allocation or\n-   --  deallocation of that memory chunck, its current status (allocated or\n+   --  deallocation of that memory chunk, its current status (allocated or\n    --  logically freed), etc.\n \n private\n@@ -288,15 +288,15 @@ private\n       Storage_Address          : System.Address;\n       Size_In_Storage_Elements : Storage_Count;\n       Alignment                : Storage_Count);\n-   --  Check whether a derefence statement is valid, ie whether the pointer\n+   --  Check whether a dereference statement is valid, i.e. whether the pointer\n    --  was allocated through Pool. As documented above, errors will be\n    --  reported either by a special error message or an exception, depending\n    --  on the setup of the storage pool.\n    --  The parameters have the same semantics as defined in the ARM95.\n \n    type Byte_Count is mod System.Max_Binary_Modulus;\n    --  Type used for maintaining byte counts, needs to be large enough\n-   --  to accomodate counts allowing for repeated use of the same memory.\n+   --  to accommodate counts allowing for repeated use of the same memory.\n \n    type Debug_Pool is new System.Checked_Pools.Checked_Pool with record\n       Stack_Trace_Depth              : Natural := Default_Stack_Trace_Depth;\n@@ -322,7 +322,7 @@ private\n \n       Marked_Blocks_Deallocated : Boolean := False;\n       --  Set to true if some mark blocks had to be deallocated in the advanced\n-      --  scanning scheme. Since this is potentially dangereous, this is\n+      --  scanning scheme. Since this is potentially dangerous, this is\n       --  reported to the user, who might want to rerun his program with a\n       --  lower Minimum_To_Free value.\n "}, {"sha": "564703802c801dfbdc90f5cb874b0d82d469ab1c", "filename": "gcc/ada/g-decstr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-decstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-decstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-decstr.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -391,7 +391,7 @@ package body GNAT.Decode_String is\n             end if;\n          end UTF8;\n \n-      --  Non-UTF-8 cass\n+      --  Non-UTF-8 case\n \n       else\n          declare\n@@ -502,7 +502,7 @@ package body GNAT.Decode_String is\n             end if;\n          end UTF8;\n \n-      --  Non-UTF-8 cass\n+      --  Non-UTF-8 case\n \n       else\n          declare"}, {"sha": "d34635c62b2927e87c3fda65059cb35b7fe5d649", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -415,7 +415,7 @@ package body GNAT.Directory_Operations is\n \n             E := K;\n \n-            --  Check that first chartacter is a letter\n+            --  Check that first character is a letter\n \n             if Characters.Handling.Is_Letter (Path (E)) then\n                E := E + 1;"}, {"sha": "3820a8c5743688ec6f88553dfaa7d33f74134018", "filename": "gcc/ada/g-dirope.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-dirope.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-dirope.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -223,7 +223,7 @@ package GNAT.Directory_Operations is\n    --  Dir will be set to Null_Dir.\n \n    procedure Close (Dir : in out Dir_Type);\n-   --  Closes the directory stream refered to by Dir. After calling Close\n+   --  Closes the directory stream referred to by Dir. After calling Close\n    --  Is_Open will return False. Dir will be set to Null_Dir.\n    --  Raises Directory_Error if Dir has not be opened (Dir = Null_Dir).\n "}, {"sha": "cbb933ae3d4fa11bedde0624afcea5b5dd558c83", "filename": "gcc/ada/g-dynhta.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-dynhta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-dynhta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -130,7 +130,7 @@ package GNAT.Dynamic_HTables is\n       function Get_Next (T : Instance) return Elmt_Ptr;\n       --  Returns a non-specified element that has not been returned by the\n       --  same function since the last call to Get_First or Null_Ptr if\n-      --  there is no such element or Get_First has bever been called. If\n+      --  there is no such element or Get_First has never been called. If\n       --  there is no call to 'Set' in between Get_Next calls, all the\n       --  elements of the Htable will be traversed.\n "}, {"sha": "9ad92288b723b17d0366a33e993958b00f90637a", "filename": "gcc/ada/g-dyntab.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-dyntab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-dyntab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -257,7 +257,7 @@ package body GNAT.Dynamic_Tables is\n       --  checks are suppressed because this unit uses direct calls to\n       --  System.Memory for allocation, and this can yield misaligned storage\n       --  (and we cannot rely on the bootstrap compiler supporting specifically\n-      --  disabling alignment cheks, so we need to suppress all range checks).\n+      --  disabling alignment checks, so we need to suppress all range checks).\n       --  It is safe to suppress this check here because we know that a\n       --  (possibly misaligned) object of that type does actually exist at that\n       --  address.\n@@ -269,7 +269,7 @@ package body GNAT.Dynamic_Tables is\n       --  involve moving table contents around).\n \n    begin\n-      --  If we're going to reallocate, check wheter Item references an\n+      --  If we're going to reallocate, check whether Item references an\n       --  element of the currently allocated table.\n \n       if Need_Realloc"}, {"sha": "2f0381d5d7ce38fd04d9a6f8e165963267be65bc", "filename": "gcc/ada/g-encstr.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-encstr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-encstr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-encstr.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -35,7 +35,7 @@\n --  Wide_String or Wide_Wide_String to encoded String using a specified\n --  encoding convention, which is supplied as the generic parameter. If\n --  this parameter is a known at compile time constant (e.g. a constant\n---  definned in System.WCh_Con), the instantiation is specialized so that\n+--  defined in System.WCh_Con), the instantiation is specialized so that\n --  it applies only to this specified coding.\n \n --  Note: this package is only about encoding sequences of 16- or 32-bit\n@@ -66,7 +66,7 @@ package GNAT.Encode_String is\n    pragma Inline (Encode_Wide_String);\n    --  Encode the given Wide_String, returning a String encoded using the\n    --  given encoding method. Constraint_Error will be raised if the encoding\n-   --  method cannot accomodate the input data.\n+   --  method cannot accommodate the input data.\n \n    procedure Encode_Wide_String\n      (S      : Wide_String;\n@@ -78,7 +78,7 @@ package GNAT.Encode_String is\n    --  in System.WCh_Con: WC_Longest_Sequence, WC_Longest_Sequences). If the\n    --  length of Result is insufficient Constraint_Error will be raised.\n    --  Constraint_Error will also be raised if the encoding method cannot\n-   --  accomodate the input data.\n+   --  accommodate the input data.\n \n    function Encode_Wide_Wide_String (S : Wide_Wide_String) return String;\n    pragma Inline (Encode_Wide_Wide_String);\n@@ -98,8 +98,8 @@ package GNAT.Encode_String is\n    --  This is a lower level procedure that encodes the single character Char.\n    --  The output is stored in Result starting at Result (Ptr), and Ptr is\n    --  updated past the stored value. Constraint_Error is raised if Result\n-   --  is not long enough to accomodate the result, or if the encoding method\n-   --  specified does not accomodate the input character value, or if Ptr is\n+   --  is not long enough to accommodate the result, or if the encoding method\n+   --  specified does not accommodate the input character value, or if Ptr is\n    --  outside the bounds of the Result string.\n \n    procedure Encode_Wide_Wide_Character"}, {"sha": "46fa32c2b544c9b778c7c87b14b6103e09415dc0", "filename": "gcc/ada/g-excact.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-excact.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-excact.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-excact.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -35,7 +35,7 @@\n \n --  These callbacks are called immediately when either a specific exception,\n --  or any exception, is raised, before any other actions taken by raise, in\n---  particular before any unwinding of the stack occcurs.\n+--  particular before any unwinding of the stack occurs.\n \n --  Callbacks for specific exceptions are registered through calls to\n --  Register_Id_Action. Here is an example of code that uses this package to"}, {"sha": "d8428b7926597d6070d5ea258eff9f3c5c235888", "filename": "gcc/ada/g-except.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-except.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -39,7 +39,7 @@\n \n --  However, it is not normally possible to raise an exception with a\n --  message because the routine Ada.Exceptions.Raise_Exception is not in\n---  a Pure unit. This is an annoying and unnecessary restrictiona and this\n+--  a Pure unit. This is an annoying and unnecessary restriction and this\n --  package allows for raising the standard predefined exceptions at least.\n \n package GNAT.Exceptions is"}, {"sha": "5ec6f99c8dc193190caf149a13635a34bae85d94", "filename": "gcc/ada/g-expect.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-expect.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-expect.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -176,7 +176,7 @@ package GNAT.Expect is\n    --  this buffer is full. Beware that if the buffer is too big, this could\n    --  slow down the Expect calls if not output is matched, since Expect has\n    --  to match all the regexp against all the characters in the buffer.\n-   --  If Buffer_Size is 0, there is no limit (ie all the characters are kept\n+   --  If Buffer_Size is 0, there is no limit (i.e. all the characters are kept\n    --  till Expect matches), but this is slower.\n    --\n    --  If Err_To_Out is True, then the standard error of the spawned process is\n@@ -221,7 +221,7 @@ package GNAT.Expect is\n \n    function Get_Pid\n      (Descriptor : Process_Descriptor) return Process_Id;\n-   --  Return the process id assocated with a given process descriptor\n+   --  Return the process id associated with a given process descriptor\n \n    function Get_Command_Output\n      (Command    : String;\n@@ -410,7 +410,7 @@ package GNAT.Expect is\n       return Pattern_Matcher_Access;\n    --  Allocate some memory for the pattern matcher.\n    --  This is only a convenience function to help create the array of\n-   --  compiled regular expressoins.\n+   --  compiled regular expressions.\n \n    procedure Expect\n      (Descriptor  : in out Process_Descriptor;"}, {"sha": "d520ef1996224f6d366e91808eab790baca5aa61", "filename": "gcc/ada/g-heasor.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-heasor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-heasor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-heasor.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -74,7 +74,7 @@ package body GNAT.Heap_Sort is\n          --  we assume that the current node will be less than the larger\n          --  son, and unconditionally sift up. Then when we get to the bottom\n          --  of the tree, we check parents to make sure that we did not make\n-         --  a mistake. This roughly cuts the number of comparisions in half,\n+         --  a mistake. This roughly cuts the number of comparisons in half,\n          --  since it is almost always the case that our assumption is correct.\n \n          --  Loop to pull up larger sons"}, {"sha": "ed686186088ea2a5993b0123ac565e8362763829", "filename": "gcc/ada/g-hesora.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-hesora.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-hesora.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-hesora.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -76,7 +76,7 @@ package body GNAT.Heap_Sort_A is\n          --  we assume that the current node will be less than the larger\n          --  son, and unconditionally sift up. Then when we get to the bottom\n          --  of the tree, we check parents to make sure that we did not make\n-         --  a mistake. This roughly cuts the number of comparisions in half,\n+         --  a mistake. This roughly cuts the number of comparisons in half,\n          --  since it is almost always the case that our assumption is correct.\n \n          --  Loop to pull up larger sons"}, {"sha": "d7870d62cf5f225d6296c52d9f979f92eb558b3a", "filename": "gcc/ada/g-hesorg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-hesorg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-hesorg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-hesorg.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -79,7 +79,7 @@ package body GNAT.Heap_Sort_G is\n          --  we assume that the current node will be less than the larger\n          --  son, and unconditionally sift up. Then when we get to the bottom\n          --  of the tree, we check parents to make sure that we did not make\n-         --  a mistake. This roughly cuts the number of comparisions in half,\n+         --  a mistake. This roughly cuts the number of comparisons in half,\n          --  since it is almost always the case that our assumption is correct.\n \n          --  Loop to pull up larger sons"}, {"sha": "6373fa286529fd1e1116a58e330c0078eff9dbe2", "filename": "gcc/ada/g-htable.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-htable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-htable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-htable.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -196,7 +196,7 @@ package GNAT.HTable is\n    --     function Get_Next return Elmt_Ptr;\n    --     --  Returns a non-specified element that has not been returned by\n    --     --  the same function since the last call to Get_First or Null_Ptr\n-   --     --  if there is no such element or Get_First has bever been called.\n+   --     --  if there is no such element or Get_First has never been called.\n    --     --  If there is no call to 'Set' in between Get_Next calls, all\n    --     --  the elements of the HTable will be traversed.\n "}, {"sha": "f404a616ea2420fb672047ab19504823e9ff6973", "filename": "gcc/ada/g-locfil.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-locfil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-locfil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-locfil.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This package contains the necessary routines for using files for the\n---  purpose of providing realiable system wide locking capability.\n+--  purpose of providing reliable system wide locking capability.\n \n package GNAT.Lock_Files is\n    pragma Preelaborate;"}, {"sha": "c41dae7c8ab1017b1bb549a8af4e02ebab70972a", "filename": "gcc/ada/g-md5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-md5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-md5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-md5.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -46,7 +46,7 @@ package body GNAT.MD5 is\n    --  Look-up table for each hex digit of the Message-Digest.\n    --  Used by function Digest (Context).\n \n-   --  The sixten values used to rotate the context words.\n+   --  The sixteen values used to rotate the context words.\n    --  Four for each rounds. Used in procedure Transform.\n \n    --  Round 1"}, {"sha": "223159609afa8819bd22c9e348d79d0e08a2f76b", "filename": "gcc/ada/g-md5.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-md5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-md5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-md5.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -36,7 +36,7 @@\n --\n --          http://www.ietf.org/rfc/rfc1321.txt\n --\n---  The implementation is derived from the RSA Data Secutity, Inc. MD5\n+--  The implementation is derived from the RSA Data Security, Inc. MD5\n --  Message-Digest Algorithm, as described in RFC 1321.\n \n with Ada.Streams;"}, {"sha": "f3ebd1aadb2088d4eb7cea21b4522fb9e0b3cb4c", "filename": "gcc/ada/g-memdum.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-memdum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-memdum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-memdum.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -46,7 +46,7 @@ package GNAT.Memory_Dump is\n    --  case of a byte addressable machine (and is therefore inapplicable to\n    --  machines like the AAMP, where the storage unit is not 8 bits). The\n    --  output is one or more lines in the following format, which is for the\n-   --  case of 32-bit addresses (64-bit addressea are handled appropriately):\n+   --  case of 32-bit addresses (64-bit addresses are handled appropriately):\n    --\n    --    0234_3368: 66 67 68 . . .  73 74 75 \"fghijklmnopqstuv\"\n    --"}, {"sha": "9e4e3e29fd930dd5e66c906436f024abf15aa54e", "filename": "gcc/ada/g-moreex.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-moreex.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-moreex.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-moreex.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -33,7 +33,7 @@\n \n --  This package provides routines for accessing the most recently raised\n --  exception. This may be useful for certain logging activities. It may\n---  also be useful for mimicing implementation dependent capabilities in\n+--  also be useful for mimicking implementation dependent capabilities in\n --  Ada 83 compilers, but see also GNAT.Current_Exceptions for this usage.\n \n with Ada.Exceptions;"}, {"sha": "91cff11033688ca5a0cfc2e172c716c5da820789", "filename": "gcc/ada/g-os_lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -33,6 +33,6 @@\n \n --  This package does not require a body, since it is a package renaming. We\n --  provide a dummy file containing a No_Body pragma so that previous versions\n---  of the body (which did exist) will not intefere.\n+--  of the body (which did exist) will not interfere.\n \n pragma No_Body;"}, {"sha": "8d4733334d6e8d8355c5a3c3d6fedb7e72383593", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -74,7 +74,7 @@ package body GNAT.Perfect_Hash_Generators is\n \n    --  Random graphs are frequently used to solve difficult problems that do\n    --  not have polynomial solutions. This algorithm is based on a weighted\n-   --  undirected graph. It comprises two steps: mapping and assigment.\n+   --  undirected graph. It comprises two steps: mapping and assignment.\n \n    --  In the mapping step, a graph G = (V, E) is constructed, where = {0, 1,\n    --  ..., n-1} and E = {(for w in W) (f1 (w), f2 (w))}. In order for the\n@@ -588,7 +588,7 @@ package body GNAT.Perfect_Hash_Generators is\n    --  Start of processing for Assign_Values_To_Vertices\n \n    begin\n-      --  Value -1 denotes an unitialized value as it is supposed to\n+      --  Value -1 denotes an uninitialized value as it is supposed to\n       --  be in the range 0 .. NK.\n \n       if G = No_Table then\n@@ -2144,7 +2144,7 @@ package body GNAT.Perfect_Hash_Generators is\n          loop\n             --  Preserve maximum number of different keys and check later on\n             --  that this value is strictly incrementing. Otherwise, it means\n-            --  that two keys are stricly identical.\n+            --  that two keys are strictly identical.\n \n             Old_Differences := Max_Differences;\n "}, {"sha": "b2aea490eed1daf43b2f1d3df4739da3627e186d", "filename": "gcc/ada/g-pehage.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-pehage.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-pehage.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -62,7 +62,7 @@\n \n --  The functions generated by this package require the key set to be known in\n --  advance (they are \"static\" hash functions). The hash functions are also\n---  order preservering. If w2 is inserted after w1 in the generator, then (w1)\n+--  order preserving. If w2 is inserted after w1 in the generator, then (w1)\n --  < f (w2). These hashing functions are convenient for use with realtime\n --  applications.\n \n@@ -71,7 +71,7 @@ package GNAT.Perfect_Hash_Generators is\n    Default_K_To_V : constant Float  := 2.05;\n    --  Default ratio for the algorithm. When K is the number of keys, V =\n    --  (K_To_V) * K is the size of the main table of the hash function. To\n-   --  converge, the algorithm requires K_To_V to be stricly greater than 2.0.\n+   --  converge, the algorithm requires K_To_V to be strictly greater than 2.0.\n \n    Default_Pkg_Name : constant String := \"Perfect_Hash\";\n    --  Default package name in which the hash function is defined\n@@ -113,7 +113,7 @@ package GNAT.Perfect_Hash_Generators is\n    --  Insert a new key in the table\n \n    Too_Many_Tries : exception;\n-   --  Raised after Tries unsuccessfull runs\n+   --  Raised after Tries unsuccessful runs\n \n    procedure Compute (Position : String := Default_Position);\n    --  Compute the hash function. Position allows to define selection of"}, {"sha": "2ccac8dc79a207756467df281e916e04aeb90ab4", "filename": "gcc/ada/g-regexp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regexp.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -33,6 +33,6 @@\n \n --  This package does not require a body, since it is a package renaming. We\n --  provide a dummy file containing a No_Body pragma so that previous versions\n---  of the body (which did exist) will not intefere.\n+--  of the body (which did exist) will not interfere.\n \n pragma No_Body;"}, {"sha": "5f4ddf6c4a58110ba5a03f9515e38c3b9eaeb41f", "filename": "gcc/ada/g-regexp.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-regexp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-regexp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regexp.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -43,7 +43,7 @@\n -- Summary of Pattern Matching Packages in GNAT Hierarchy --\n ------------------------------------------------------------\n \n---  There are three related packages that perform pattern maching functions.\n+--  There are three related packages that perform pattern matching functions.\n --  the following is an outline of these packages, to help you determine\n --  which is best for your needs.\n \n@@ -62,7 +62,7 @@\n --       stored in a binary compatible manner.\n \n --     GNAT.Spitbol.Patterns (files g-spipat.ads/g-spipat.adb)\n---       This is a completely general patterm matching package based on the\n+--       This is a completely general pattern matching package based on the\n --       pattern language of SNOBOL4, as implemented in SPITBOL. The pattern\n --       language is modeled on context free grammars, with context sensitive\n --       extensions that provide full (type 0) computational capabilities."}, {"sha": "658a3a6a7edc927cdc917a40cde1193026ef58f4", "filename": "gcc/ada/g-regpat.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -34,6 +34,6 @@\n \n --  This package does not require a body, since it is a package renaming. We\n --  provide a dummy file containing a No_Body pragma so that previous versions\n---  of the body (which did exist) will not intefere.\n+--  of the body (which did exist) will not interfere.\n \n pragma No_Body;"}, {"sha": "13c7771270a6fe8d56e10045495939c646d9c1e2", "filename": "gcc/ada/g-regpat.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -46,7 +46,7 @@\n -- Summary of Pattern Matching Packages in GNAT Hierarchy --\n ------------------------------------------------------------\n \n---  There are three related packages that perform pattern maching functions.\n+--  There are three related packages that perform pattern matching functions.\n --  the following is an outline of these packages, to help you determine\n --  which is best for your needs.\n "}, {"sha": "5b36015b1b3e3d8fc91cf217db5a56435d8b08c7", "filename": "gcc/ada/g-soccon-aix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-aix.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=          75; --  Socket already connected\n-   ELOOP              : constant :=          85; --  Too many symbolic lynks\n+   ELOOP              : constant :=          85; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=          59; --  Message too long\n    ENAMETOOLONG       : constant :=          86; --  Name too long"}, {"sha": "495b7b33fb010717ab0b8cd49bbb1268f74e5397", "filename": "gcc/ada/g-soccon-darwin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-darwin.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=          56; --  Socket already connected\n-   ELOOP              : constant :=          62; --  Too many symbolic lynks\n+   ELOOP              : constant :=          62; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=          40; --  Message too long\n    ENAMETOOLONG       : constant :=          63; --  Name too long"}, {"sha": "14fbf9d52999ccdbfbcf96efe478337a5f72dbf9", "filename": "gcc/ada/g-soccon-freebsd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-freebsd.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=          56; --  Socket already connected\n-   ELOOP              : constant :=          62; --  Too many symbolic lynks\n+   ELOOP              : constant :=          62; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=          40; --  Message too long\n    ENAMETOOLONG       : constant :=          63; --  Name too long"}, {"sha": "38e287ef58ad6182e41aaf0180e79e65af8492ad", "filename": "gcc/ada/g-soccon-hpux-ia64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux-ia64.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=         234; --  Socket already connected\n-   ELOOP              : constant :=         249; --  Too many symbolic lynks\n+   ELOOP              : constant :=         249; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=         218; --  Message too long\n    ENAMETOOLONG       : constant :=         248; --  Name too long"}, {"sha": "c1851faee11a5e6fb9dd9e1bf8803e290078b7be", "filename": "gcc/ada/g-soccon-hpux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=         234; --  Socket already connected\n-   ELOOP              : constant :=         249; --  Too many symbolic lynks\n+   ELOOP              : constant :=         249; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=         218; --  Message too long\n    ENAMETOOLONG       : constant :=         248; --  Name too long"}, {"sha": "a00ff051b544fa27e447c5be5cc90a90ec3a28d8", "filename": "gcc/ada/g-soccon-irix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-irix.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=         133; --  Socket already connected\n-   ELOOP              : constant :=          90; --  Too many symbolic lynks\n+   ELOOP              : constant :=          90; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=          97; --  Message too long\n    ENAMETOOLONG       : constant :=          78; --  Name too long"}, {"sha": "cd4332df743b96361784b4993ae6fbcc9c015a98", "filename": "gcc/ada/g-soccon-linux-64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-linux-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-linux-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-64.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=           22; --  Invalid argument\n    EIO                : constant :=            5; --  Input output error\n    EISCONN            : constant :=          106; --  Socket already connected\n-   ELOOP              : constant :=           40; --  Too many symbolic lynks\n+   ELOOP              : constant :=           40; --  Too many symbolic links\n    EMFILE             : constant :=           24; --  Too many open files\n    EMSGSIZE           : constant :=           90; --  Message too long\n    ENAMETOOLONG       : constant :=           36; --  Name too long"}, {"sha": "52bd506226432f6eb87a57e6d67f9ef6ccae2722", "filename": "gcc/ada/g-soccon-linux-ppc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-ppc.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=           22; --  Invalid argument\n    EIO                : constant :=            5; --  Input output error\n    EISCONN            : constant :=          106; --  Socket already connected\n-   ELOOP              : constant :=           40; --  Too many symbolic lynks\n+   ELOOP              : constant :=           40; --  Too many symbolic links\n    EMFILE             : constant :=           24; --  Too many open files\n    EMSGSIZE           : constant :=           90; --  Message too long\n    ENAMETOOLONG       : constant :=           36; --  Name too long"}, {"sha": "b1c9188c7bcb78896544d090058e0a27d3def0b0", "filename": "gcc/ada/g-soccon-linux-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-x86.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=           22; --  Invalid argument\n    EIO                : constant :=            5; --  Input output error\n    EISCONN            : constant :=          106; --  Socket already connected\n-   ELOOP              : constant :=           40; --  Too many symbolic lynks\n+   ELOOP              : constant :=           40; --  Too many symbolic links\n    EMFILE             : constant :=           24; --  Too many open files\n    EMSGSIZE           : constant :=           90; --  Message too long\n    ENAMETOOLONG       : constant :=           36; --  Name too long"}, {"sha": "ee0fa91596e8ff299c10810dd498c3418511adb4", "filename": "gcc/ada/g-soccon-lynxos.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-lynxos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-lynxos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-lynxos.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=         22; --  Invalid argument\n    EIO                : constant :=          5; --  Input output error\n    EISCONN            : constant :=        106; --  Socket already connected\n-   ELOOP              : constant :=         40; --  Too many symbolic lynks\n+   ELOOP              : constant :=         40; --  Too many symbolic links\n    EMFILE             : constant :=         24; --  Too many open files\n    EMSGSIZE           : constant :=         90; --  Message too long\n    ENAMETOOLONG       : constant :=         36; --  Name too long"}, {"sha": "1266a4bfdc918142f7561a2b8ac44bf26326c765", "filename": "gcc/ada/g-soccon-mingw.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-mingw.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=       10022; --  Invalid argument\n    EIO                : constant :=       10101; --  Input output error\n    EISCONN            : constant :=       10056; --  Socket already connected\n-   ELOOP              : constant :=       10062; --  Too many symbolic lynks\n+   ELOOP              : constant :=       10062; --  Too many symbolic links\n    EMFILE             : constant :=       10024; --  Too many open files\n    EMSGSIZE           : constant :=       10040; --  Message too long\n    ENAMETOOLONG       : constant :=       10063; --  Name too long\n@@ -195,7 +195,7 @@ package GNAT.Sockets.Constants is\n \n    WSASYSNOTREADY     : constant :=       10091; --  System not ready\n    WSAVERNOTSUPPORTED : constant :=       10092; --  Version not supported\n-   WSANOTINITIALISED  : constant :=       10093; --  Winsock not intialized\n+   WSANOTINITIALISED  : constant :=       10093; --  Winsock not initialized\n    WSAEDISCON         : constant :=       10101; --  Disconnected\n \n    ----------------------"}, {"sha": "7cd8c8b2c2588454f8f0dd59392785ac0d5a8f0c", "filename": "gcc/ada/g-soccon-solaris-64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-solaris-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-solaris-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris-64.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=         133; --  Socket already connected\n-   ELOOP              : constant :=          90; --  Too many symbolic lynks\n+   ELOOP              : constant :=          90; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=          97; --  Message too long\n    ENAMETOOLONG       : constant :=          78; --  Name too long"}, {"sha": "cd0aebd5125304924c46c8ddc13bec7b3ca26882", "filename": "gcc/ada/g-soccon-solaris.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=         133; --  Socket already connected\n-   ELOOP              : constant :=          90; --  Too many symbolic lynks\n+   ELOOP              : constant :=          90; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=          97; --  Message too long\n    ENAMETOOLONG       : constant :=          78; --  Name too long"}, {"sha": "959625ef9c576c60c5e8f0e25ee64f8fc6c7b2b7", "filename": "gcc/ada/g-soccon-tru64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-tru64.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=          56; --  Socket already connected\n-   ELOOP              : constant :=          62; --  Too many symbolic lynks\n+   ELOOP              : constant :=          62; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=          40; --  Message too long\n    ENAMETOOLONG       : constant :=          63; --  Name too long"}, {"sha": "8634a0a00f4a232109ad1526d1fedf963ca6047f", "filename": "gcc/ada/g-soccon-vms.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vms.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=          22; --  Invalid argument\n    EIO                : constant :=           5; --  Input output error\n    EISCONN            : constant :=          56; --  Socket already connected\n-   ELOOP              : constant :=          62; --  Too many symbolic lynks\n+   ELOOP              : constant :=          62; --  Too many symbolic links\n    EMFILE             : constant :=          24; --  Too many open files\n    EMSGSIZE           : constant :=          40; --  Message too long\n    ENAMETOOLONG       : constant :=          63; --  Name too long"}, {"sha": "173a591c46eaa4cabe07e33fbb1edb36b2892fa3", "filename": "gcc/ada/g-soccon-vxworks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vxworks.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -77,7 +77,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=         22; --  Invalid argument\n    EIO                : constant :=          5; --  Input output error\n    EISCONN            : constant :=         56; --  Socket already connected\n-   ELOOP              : constant :=         64; --  Too many symbolic lynks\n+   ELOOP              : constant :=         64; --  Too many symbolic links\n    EMFILE             : constant :=         24; --  Too many open files\n    EMSGSIZE           : constant :=         36; --  Message too long\n    ENAMETOOLONG       : constant :=         26; --  Name too long"}, {"sha": "d7556a12a71d72be2566a96d917b8e60b0b96cce", "filename": "gcc/ada/g-soccon.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -84,7 +84,7 @@ package GNAT.Sockets.Constants is\n    EINVAL             : constant :=           22; --  Invalid argument\n    EIO                : constant :=            5; --  Input output error\n    EISCONN            : constant :=          106; --  Socket already connected\n-   ELOOP              : constant :=           40; --  Too many symbolic lynks\n+   ELOOP              : constant :=           40; --  Too many symbolic links\n    EMFILE             : constant :=           24; --  Too many open files\n    EMSGSIZE           : constant :=           90; --  Message too long\n    ENAMETOOLONG       : constant :=           36; --  Name too long"}, {"sha": "896a2c456522cad5dd3caa370d53626a663be16d", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -61,7 +61,7 @@ package body GNAT.Sockets is\n    --  the operating system, or else return data through a user-provided buffer\n    --  to ensure concurrent uses do not interfere.\n \n-   --  Correspondance tables\n+   --  Correspondence tables\n \n    Families : constant array (Family_Type) of C.int :=\n                 (Family_Inet  => Constants.AF_INET,\n@@ -152,7 +152,7 @@ package body GNAT.Sockets is\n    function Network_To_Short\n      (S : C.unsigned_short) return C.unsigned_short\n    renames Short_To_Network;\n-   --  Symetric operation\n+   --  Symmetric operation\n \n    function Image\n      (Val :  Inet_Addr_VN_Type;\n@@ -547,7 +547,7 @@ package body GNAT.Sockets is\n       Signalling_Fds.Close (C.int (Selector.W_Sig_Socket));\n \n       --  Reset R_Sig_Socket and W_Sig_Socket to No_Socket to ensure that any\n-      --  (errneous) subsequent attempt to use this selector properly fails.\n+      --  (erroneous) subsequent attempt to use this selector properly fails.\n \n       Selector.R_Sig_Socket := No_Socket;\n       Selector.W_Sig_Socket := No_Socket;"}, {"sha": "38b857432b1875b054e8055085c945e049a13e9a", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -432,7 +432,7 @@ package GNAT.Sockets is\n \n    type Inet_Addr_Type (Family : Family_Type := Family_Inet) is private;\n    --  An Internet address depends on an address family (IPv4 contains 4\n-   --  octets and Ipv6 contains 16 octets). Any_Inet_Addr is a special value\n+   --  octets and IPv6 contains 16 octets). Any_Inet_Addr is a special value\n    --  treated like a wildcard enabling all addresses. No_Inet_Addr provides a\n    --  special value to denote uninitialized inet addresses.\n "}, {"sha": "78d5c3feadc9138c64ec6a2a5f92b92704708f22", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -303,7 +303,7 @@ package body GNAT.Sockets.Thin is\n    begin\n       --  Asynchronous connection failures are notified in the\n       --  exception fd set instead of the write fd set. To ensure\n-      --  POSIX compatitibility, copy write fd set into exception fd\n+      --  POSIX compatibility, copy write fd set into exception fd\n       --  set. Once select() returns, check any socket present in the\n       --  exception fd set and peek at incoming out-of-band data. If\n       --  the test is not successful, and the socket is present in"}, {"sha": "0d620c2e9905e5c0070c377014a7262bcff365df", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -144,7 +144,7 @@ package body GNAT.Sockets.Thin is\n       if not Constants.Thread_Blocking_IO\n         and then R /= Failure\n       then\n-         --  A socket inherits the properties ot its server especially\n+         --  A socket inherits the properties of its server, especially\n          --  the FIONBIO flag. Do not use C_Ioctl as this subprogram\n          --  tracks sockets set in non-blocking mode by user.\n "}, {"sha": "681ea861b423ec98ddd8f9a750485159c20b2410", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -156,7 +156,7 @@ package body GNAT.Sockets.Thin is\n       if not Constants.Thread_Blocking_IO\n         and then R /= Failure\n       then\n-         --  A socket inherits the properties ot its server especially\n+         --  A socket inherits the properties of its server especially\n          --  the FIONBIO flag. Do not use C_Ioctl as this subprogram\n          --  tracks sockets set in non-blocking mode by user.\n "}, {"sha": "ba7faa4fed00f892a219a8f220abc023ee5de388", "filename": "gcc/ada/g-soliop-mingw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soliop-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soliop-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soliop-mingw.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This package is used to provide target specific linker_options for the\n---  support of scokets as required by the package GNAT.Sockets.\n+--  support of sockets as required by the package GNAT.Sockets.\n \n --  This is the Windows/NT version of this package\n "}, {"sha": "cd3c5a3e68d6fe28b08da4d87d0caece17ef93e1", "filename": "gcc/ada/g-soliop-solaris.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soliop-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soliop-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soliop-solaris.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This package is used to provide target specific linker_options for the\n---  support of scokets as required by the package GNAT.Sockets.\n+--  support of sockets as required by the package GNAT.Sockets.\n \n --  This is the Solaris version of this package\n "}, {"sha": "60a3bd98f6d71cfbd0f86c3338ff7632849aa12f", "filename": "gcc/ada/g-soliop.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soliop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-soliop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soliop.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This package is used to provide target specific linker_options for the\n---  support of scokets as required by the package GNAT.Sockets.\n+--  support of sockets as required by the package GNAT.Sockets.\n \n --  This is an empty version for default use where no additional libraries\n --  are required. On some targets a target specific version of this unit"}, {"sha": "b39f2e5f4fadc8666812eade766489e3d20f6bb8", "filename": "gcc/ada/g-spipat.adb", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-spipat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-spipat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -102,7 +102,7 @@ package body GNAT.Spitbol.Patterns is\n    --      I             parameter(s)           I\n    --      +------------------------------------+\n \n-   --     Pcode is a code value indicating the type of the patterm node. This\n+   --     Pcode is a code value indicating the type of the pattern node. This\n    --     code is used both as the discriminant value for the record, and as\n    --     the case index in the main match routine that branches to the proper\n    --     match code for the given element.\n@@ -113,7 +113,7 @@ package body GNAT.Spitbol.Patterns is\n    --     Pthen is a pointer to the successor node, i.e the node to be matched\n    --     if the attempt to match the node succeeds. If this is the last node\n    --     of the pattern to be matched, then Pthen points to a dummy node\n-   --     of kind PC_EOP (end of pattern), which initiales pattern exit.\n+   --     of kind PC_EOP (end of pattern), which initializes pattern exit.\n \n    --     The parameter or parameters are present for certain node types,\n    --     and the type varies with the pattern code.\n@@ -431,7 +431,7 @@ package body GNAT.Spitbol.Patterns is\n    ---------------------------------------------------\n \n    --  The serial index numbers for the pattern elements are assigned as\n-   --  a pattern is consructed from its constituent elements. Note that there\n+   --  a pattern is constructed from its constituent elements. Note that there\n    --  is never any sharing of pattern elements between patterns (copies are\n    --  always made), so the serial index numbers are unique to a particular\n    --  pattern as referenced from the P field of a value of type Pattern.\n@@ -449,7 +449,7 @@ package body GNAT.Spitbol.Patterns is\n    --  pattern (e.g. copy and finalization processing). Once constructed\n    --  patterns are strictly read only. This is necessary to allow sharing\n    --  of patterns between tasks. This means that we cannot go marking the\n-   --  pattern (e.g. with a visited bit). Instead we cosntuct a separate\n+   --  pattern (e.g. with a visited bit). Instead we construct a separate\n    --  vector that contains the necessary information indexed by the Index\n    --  values in the pattern elements. For this purpose the only requirement\n    --  is that they be uniquely assigned.\n@@ -469,7 +469,7 @@ package body GNAT.Spitbol.Patterns is\n \n    --  Third, as compound pattern structures are constructed, the way in which\n    --  constituent parts of the pattern are constructed is stylized. This is\n-   --  an automatic consequence of the way that these compounjd structures\n+   --  an automatic consequence of the way that these compound structures\n    --  are constructed, and basically what we are doing is simply documenting\n    --  and specifying the natural result of the pattern construction. The\n    --  section describing compound pattern structures gives details of the\n@@ -588,7 +588,7 @@ package body GNAT.Spitbol.Patterns is\n    --  stack is used to control the backtracking. Finally, it notes the\n    --  way in which the Index numbers are assigned to the structure.\n \n-   --  In all diagrams, solid lines (built witth minus signs or vertical\n+   --  In all diagrams, solid lines (built with minus signs or vertical\n    --  bars, represent successor pointers (Pthen fields) with > or V used\n    --  to indicate the direction of the pointer. The initial node of the\n    --  structure is in the upper left of the diagram. A dotted line is an\n@@ -600,7 +600,7 @@ package body GNAT.Spitbol.Patterns is\n       -------------------\n \n       --  In the pattern structures listed in this section, a line that looks\n-      --  lile ----> with nothing to the right indicates an end of pattern\n+      --  like ----> with nothing to the right indicates an end of pattern\n       --  (EOP) pointer that represents the end of the match.\n \n       --  When a pattern concatenation (L & R) occurs, the resulting structure\n@@ -609,7 +609,7 @@ package body GNAT.Spitbol.Patterns is\n       --  occurs in constructing a pattern, and it means that the pattern\n       --  matching circuitry does not have to keep track of the structure\n       --  of a pattern with respect to concatenation, since the appropriate\n-      --  succesor is always at hand.\n+      --  successor is always at hand.\n \n       --  Concatenation itself generates no additional possibilities for\n       --  backtracking, but the constituent patterns of the concatenated\n@@ -643,7 +643,7 @@ package body GNAT.Spitbol.Patterns is\n       --  it stacks a pointer to the leading element of R on the history stack\n       --  so that on subsequent failure, a match of R is attempted.\n \n-      --  The A node is the higest numbered element in the pattern. The\n+      --  The A node is the highest numbered element in the pattern. The\n       --  original index numbers of R are unchanged, but the index numbers\n       --  of the L pattern are adjusted up by the count of elements in R.\n \n@@ -941,7 +941,7 @@ package body GNAT.Spitbol.Patterns is\n       --  described below.\n \n       --  It then stores a pointer to itself in the special entry node field.\n-      --  This was otherwise unused, and is now used to retrive the address\n+      --  This was otherwise unused, and is now used to retrieve the address\n       --  of the variable to be assigned at the end of the pattern.\n \n       --  After that the inner region is terminated in the usual manner,\n@@ -999,7 +999,7 @@ package body GNAT.Spitbol.Patterns is\n       --  string, starting at the current cursor position. It then updates\n       --  the cursor past this matched string, and stacks a pointer to itself\n       --  with this updated cursor value on the history stack, to extend the\n-      --  matched string on a subequent failure.\n+      --  matched string on a subsequent failure.\n \n       --  Since this is a single node it is numbered 1 (the reason we include\n       --  it in the compound patterns section is that it backtracks).\n@@ -1174,7 +1174,7 @@ package body GNAT.Spitbol.Patterns is\n \n    --  The following pattern elements are referenced only from the pattern\n    --  history stack. In each case the processing for the pattern element\n-   --  results in pattern match abort, or futher failure, so there is no\n+   --  results in pattern match abort, or further failure, so there is no\n    --  need for a successor and no need for a node number\n \n    CP_Assign    : aliased PE := (PC_Assign,    0, N);\n@@ -1208,11 +1208,11 @@ package body GNAT.Spitbol.Patterns is\n    --  understand a typical use of this function).\n \n    function BreakX_Make (B : PE_Ptr) return Pattern;\n-   --  Given a pattern element for a Break patternx, returns the\n+   --  Given a pattern element for a Break pattern, returns the\n    --  corresponding BreakX compound pattern structure.\n \n    function Concat (L, R : PE_Ptr; Incr : Natural) return PE_Ptr;\n-   --  Creates a pattern eelement that represents a concatenation of the\n+   --  Creates a pattern element that represents a concatenation of the\n    --  two given pattern elements (i.e. the pattern L followed by R).\n    --  The result returned is always the same as L, but the pattern\n    --  referenced by L is modified to have R as a successor. This\n@@ -1304,7 +1304,7 @@ package body GNAT.Spitbol.Patterns is\n       Start   : out Natural;\n       Stop    : out Natural);\n    --  Identical in all respects to XMatch, except that trace information is\n-   --  output on Standard_Ouput during execution of the match. This is the\n+   --  output on Standard_Output during execution of the match. This is the\n    --  version that is called if the original Match call has Debug => True.\n \n    ---------\n@@ -1590,7 +1590,7 @@ package body GNAT.Spitbol.Patterns is\n          return new PE'(PC_Alt, R.Index + 1, EOP, R);\n \n       --  If the left pattern is non-null, then build a reference vector\n-      --  for its elements, and adjust their index values to acccomodate\n+      --  for its elements, and adjust their index values to accommodate\n       --  the right hand elements. Then add the alternation node.\n \n       else\n@@ -3707,14 +3707,14 @@ package body GNAT.Spitbol.Patterns is\n \n       procedure Pop_Region;\n       pragma Inline (Pop_Region);\n-      --  Used at the end of processing of an inner region. if the inner\n+      --  Used at the end of processing of an inner region. If the inner\n       --  region left no stack entries, then all trace of it is removed.\n       --  Otherwise a PC_Restore_Region entry is pushed to ensure proper\n       --  handling of alternatives in the inner region.\n \n       procedure Push (Node : PE_Ptr);\n       pragma Inline (Push);\n-      --  Make entry in pattern matching stack with current cursor valeu\n+      --  Make entry in pattern matching stack with current cursor value\n \n       procedure Push_Region;\n       pragma Inline (Push_Region);\n@@ -5022,14 +5022,14 @@ package body GNAT.Spitbol.Patterns is\n \n       procedure Pop_Region;\n       pragma Inline (Pop_Region);\n-      --  Used at the end of processing of an inner region. if the inner\n+      --  Used at the end of processing of an inner region. If the inner\n       --  region left no stack entries, then all trace of it is removed.\n       --  Otherwise a PC_Restore_Region entry is pushed to ensure proper\n       --  handling of alternatives in the inner region.\n \n       procedure Push (Node : PE_Ptr);\n       pragma Inline (Push);\n-      --  Make entry in pattern matching stack with current cursor valeu\n+      --  Make entry in pattern matching stack with current cursor value\n \n       procedure Push_Region;\n       pragma Inline (Push_Region);"}, {"sha": "8ce8b1620e1f604c9c497991d7d3cd1c2032475a", "filename": "gcc/ada/g-spipat.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-spipat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-spipat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.ads?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -41,7 +41,7 @@\n -- Summary of Pattern Matching Packages in GNAT Hierarchy --\n ------------------------------------------------------------\n \n---  There are three related packages that perform pattern maching functions.\n+--  There are three related packages that perform pattern matching functions.\n --  the following is an outline of these packages, to help you determine\n --  which is best for your needs.\n \n@@ -154,7 +154,7 @@ package GNAT.Spitbol.Patterns is\n \n    --      (\"ABC\" or \"AB\") & (\"DEF\" or \"CDE\") & (\"GH\" or \"IJ\")\n \n-   --    would succeed, afer two anchor point moves:\n+   --    would succeed, after two anchor point moves:\n \n    --      \"ABABCDEIJKL\"\n    --         ^^^^^^^\n@@ -226,7 +226,7 @@ package GNAT.Spitbol.Patterns is\n    --                of the pattern, starting with zero occurrences. It is\n    --                thus equivalent to (\"\" or (P & (\"\" or (P & (\"\" ....)))).\n    --                The pattern P may contain any number of pattern elements\n-   --                including the use of alternatiion and concatenation.\n+   --                including the use of alternation and concatenation.\n \n    --      Break(S)  Where S is a string, matches a string of zero or more\n    --                characters up to but not including a break character\n@@ -237,7 +237,7 @@ package GNAT.Spitbol.Patterns is\n \n    --      BreakX(S) Where S is a string, behaves exactly like Break(S) when\n    --                it first matches, but if a string is successfully matched,\n-   --                then a susequent failure causes an attempt to extend the\n+   --                then a subsequent failure causes an attempt to extend the\n    --                matched string.\n \n    --      Fence(P)  Where P is a pattern, attempts to match the pattern P\n@@ -247,15 +247,15 @@ package GNAT.Spitbol.Patterns is\n    --                match proceeds, but on a subsequent failure, no attempt\n    --                is made to search for alternative matches of P. The\n    --                pattern P may contain any number of pattern elements\n-   --                including the use of alternatiion and concatenation.\n+   --                including the use of alternation and concatenation.\n \n    --      Len(N)    Where N is a natural number, matches the given number of\n    --                characters. For example, Len(10) matches any string that\n    --                is exactly ten characters long.\n \n    --      NotAny(S) Where S is a string, matches a single character that is\n    --                not one of the characters of S. Fails if the current\n-   --                characer is one of the given set of characters.\n+   --                character is one of the given set of characters.\n \n    --      NSpan(S)  Where S is a string, matches a string of zero or more\n    --                characters that is among the characters given in the\n@@ -690,7 +690,7 @@ package GNAT.Spitbol.Patterns is\n    --  if the language allowed, we would use in out parameters, but we are\n    --  not allowed to have in out parameters for functions. Instead we pass\n    --  actuals which must be variables, and with a bit of trickery in the\n-   --  body, manage to interprete them properly as though they were indeed\n+   --  body, manage to interpret them properly as though they were indeed\n    --  in out parameters.\n \n    pragma Warnings (Off, VString_Var);\n@@ -832,7 +832,7 @@ package GNAT.Spitbol.Patterns is\n    --  causes the entire match to be aborted if a subsequent failure occurs.\n \n    function Fence  (P : Pattern)                            return Pattern;\n-   --  Constructs a pattern that first matches P. if P fails, then the\n+   --  Constructs a pattern that first matches P. If P fails, then the\n    --  constructed pattern fails. If P succeeds, then the match proceeds,\n    --  but if subsequent failure occurs, alternatives in P are not sought.\n    --  The idea of Fence is that each time the pattern is matched, just\n@@ -1054,7 +1054,7 @@ package GNAT.Spitbol.Patterns is\n    --  if the language allowed, we would use an in out parameter, but we are\n    --  not allowed to have in out parameters for functions. Instead we pass\n    --  actuals which must be variables, and with a bit of trickery in the\n-   --  body, manage to interprete them properly as though they were indeed\n+   --  body, manage to interpret them properly as though they were indeed\n    --  in out parameters.\n \n    function Match\n@@ -1142,8 +1142,8 @@ package GNAT.Spitbol.Patterns is\n \n private\n    type PE;\n-   --  Pattern element, a pattern is a plex structure of PE's. This type\n-   --  is defined and sdescribed in the body of this package.\n+   --  Pattern element, a pattern is a complex structure of PE's. This type\n+   --  is defined and described in the body of this package.\n \n    type PE_Ptr is access all PE;\n    --  Pattern reference. PE's use PE_Ptr values to reference other PE's"}, {"sha": "86b02f5d1f41d94845758364df6fa2059205648e", "filename": "gcc/ada/g-string.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-string.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-string.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-string.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -33,6 +33,6 @@\n \n --  This package does not require a body, since it is a package renaming. We\n --  provide a dummy file containing a No_Body pragma so that previous versions\n---  of the body (which did exist) will not intefere.\n+--  of the body (which did exist) will not interfere.\n \n pragma No_Body;"}, {"sha": "5fcaa00b37c9866eed076601e18f038e54ea28ef", "filename": "gcc/ada/g-stsifd-sockets.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-stsifd-sockets.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14c931f31a05f6e1bacbdde9d8d87033e8dc093/gcc%2Fada%2Fg-stsifd-sockets.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-stsifd-sockets.adb?ref=e14c931f31a05f6e1bacbdde9d8d87033e8dc093", "patch": "@@ -162,7 +162,7 @@ package body Signalling_Fds is\n          R_Sock := Failure;\n       end loop;\n \n-      --  Since the call to connect(2) has suceeded and the backlog limit on\n+      --  Since the call to connect(2) has succeeded and the backlog limit on\n       --  the listening socket is 1, we know that there is now exactly one\n       --  pending connection on L_Sock, which is the one from R_Sock.\n "}]}