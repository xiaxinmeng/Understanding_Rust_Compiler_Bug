{"sha": "c21237d52701733032eaa6fb97e4d233fabcaaaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIxMjM3ZDUyNzAxNzMzMDMyZWFhNmZiOTdlNGQyMzNmYWJjYWFhYQ==", "commit": {"author": {"name": "Johannes Singler", "email": "singler@kit.edu", "date": "2009-12-04T16:29:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-04T16:29:26Z"}, "message": "ChangeLog: Remove spurious white spaces and tabs.\n\n2009-12-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* ChangeLog: Remove spurious white spaces and tabs.\n\t* ChangeLog-2007: Likewise.\n\t* ChangeLog-2006: Likewise.\n\t* ChangeLog-2005: Likewise.\n\t* ChangeLog-2004: Likewise.\n\t* ChangeLog-2003: Likewise.\n\t* ChangeLog-2002: Likewise.\n\t* ChangeLog-2000: Likewise.\n\t* ChangeLog-1999: Likewise.\n\nFrom-SVN: r154985", "tree": {"sha": "9627aa49e8b2b8c8122e2477742889ec1dda185b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9627aa49e8b2b8c8122e2477742889ec1dda185b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c21237d52701733032eaa6fb97e4d233fabcaaaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21237d52701733032eaa6fb97e4d233fabcaaaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21237d52701733032eaa6fb97e4d233fabcaaaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21237d52701733032eaa6fb97e4d233fabcaaaa/comments", "author": null, "committer": null, "parents": [{"sha": "a4384badd778dd4d5947f4a9aadf1c34050d6049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4384badd778dd4d5947f4a9aadf1c34050d6049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4384badd778dd4d5947f4a9aadf1c34050d6049"}], "stats": {"total": 2771, "additions": 1386, "deletions": 1385}, "files": [{"sha": "4c4fbbf88aa1b0595f3f30e0bf93284003a8bf96", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -586,8 +586,8 @@\n 2009-10-28  Johannes Singler  <singler@kit.edu>\n \n \tPR libstdc++/40852\n-\t* include/parallel/multiseq_selection.h \n-\t(multiseq_partition, multiseq_selection):  Avoid intermediate \n+\t* include/parallel/multiseq_selection.h\n+\t(multiseq_partition, multiseq_selection):  Avoid intermediate\n \tvalues exceeding the integer type range for very large inputs.\n \n 2009-10-26  Paolo Carlini  <paolo.carlini@oracle.com>\n@@ -782,7 +782,7 @@\n \tUpdate link to bogus site with reference to unix.org.\n \t* doc/xml/manual/ctype.xml: Ditto.\n \t* doc/xml/manual/locale.xml: Ditto.\n-                                             \n+\n 2009-10-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/parallel/numeric (__adjacent_difference_switch): Fix typo."}, {"sha": "29a506317cfafa31607aa1d70038a6b99ab4b931", "filename": "libstdc++-v3/ChangeLog-1999", "status": "modified", "additions": 242, "deletions": 243, "changes": 485, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-1999", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-1999", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-1999?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -31,7 +31,7 @@\n 1999-12-21  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\n \n \t* bits/c++config.h.in (__GLIBCPP__): 19991221.\n-\t* docs/index.html: Add correct information.\t\n+\t* docs/index.html: Add correct information.\n \n \t* config/irix: New directory.\n \t* config/irix/ctype.cc: Add irix-6.5 info. Not tested.\n@@ -40,14 +40,14 @@\n \t* config/aix: New directory.\n \t* config/aix/ctype.cc: Add aix-4.2 info. Not tested.\n \t* config/aix/bits/ctype_base.h: And here.\n-\t\n+\n 1999-12-21  Philip Martin  <pm@corris.dircon.co.uk>\n \n         * bits/basic_string.h: Add special case handling for integral\n \t\"iterators\".\n         * bits/std_string.h: include type_traits.h\n \t* testsuite/21_strings/ctor_copy_dtor.cc: Tweak.\n-\t\n+\n 1999-12-21  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\n \n \t* bits/fstream.tcc (seekoff): Output buffer based on _M_*_in and\n@@ -57,7 +57,7 @@\n \t* testsuite/27_io/filebuf-2.tst: Correct, remove weird character\n \tat the end of the file.\n \t* testsuite/27_io/filebuf-3.tst: Correct.\n-\t\n+\n 1999-12-21  Phil Edwards  <pedwards@jaj.com>\n \n \t* docs/gentop/index:  Hold off on .7 announcement date.\n@@ -85,11 +85,11 @@\n \t* src/Makefile.in:  Regenerate.\n \n 1999-12-20  Benjamin Kosnik  <bkoz@cygnus.com>\n-\t\n+\n \t* mkcheck (SRC_DIR): Now have to include config/* dir if \"make\n \tcheck\" and not \"make check-install.\" Temporarily hack in linux\n \tsupport.\n-\t\n+\n \t* bits/std_streambuf.h: Tweaks.\n \t* bits/streambuf.tcc (xsgetn): Tweaks.\n \t* bits/std_fstream.h (sync): Make _M_really_overflow consistent.\n@@ -117,25 +117,25 @@\n \n 1999-12-19  Benjamin Kosnik  <bkoz@cygnus.com>\n             Ulrich Drepper  <drepper@cygnus.com>\n-\t\n+\n \t* acconfig.h: Remove _GLIBCPP_USE_CTYPE_ISBIT.\n \n \t* src/locale.cc: Take out platform-specific hacks.\n \t* config/linux/ctype.cc: Put here.\n \t* config/solaris/ctype.cc: Put here.\n-\t* config/default/ctype.cc: Put here.\t\n+\t* config/default/ctype.cc: Put here.\n \n \t* bits/locale_facets.h: Take out platform-specific hacks.\n \t* config/linux/bits/ctype_base.h: Put here.\n \t* config/solaris/bits/ctype_base.h: Put here.\n-\t* config/default/bits/ctype_base.h: Put here.\t\n+\t* config/default/bits/ctype_base.h: Put here.\n \n \t* configure.in: Bump version.\n \tAdd tests for top-level config directory.\n \t* configure: Regenerated.\n \t* src/Makefile.am (INCLUDES): Add platform-specific dir.\n \t* src/Makefile: Regenerate.\n-\t\n+\n 1999-12-19  Benjamin Kosnik  <bkoz@cygnus.com>\n \t    Ulrich Drepper  <drepper@cygnus.com>\n \n@@ -151,17 +151,17 @@\n \n \t* bits/c++config.h.in (__GLIBCPP__): Bump.\n \t* docs/17_intro/RELEASE-NOTES: Update, Gaby please add your stuff.\n-\t* docs/17_intro/TODO: Update.\t\n+\t* docs/17_intro/TODO: Update.\n \n \t* bits/locale_facets.h: Touch this too.\n \t* bits/localefwd.h: Add typedefs for loooooong vector names.\n \t* bits/locale_facets.tcc (locale::operator()): Need parens.\n \t(has_facet): Simplify.\n \t* src/locale-inst.cc: Add instantiations.\n \t* src/locale.cc: Tweaks.\n-\t\n-\t* bits/std_streambuf.h: Move indeterminates into. . \n-\t* bits/std_fstream.h: Here.\t\n+\n+\t* bits/std_streambuf.h: Move indeterminates into. .\n+\t* bits/std_fstream.h: Here.\n \t* bits/fstream.tcc (underflow): Rewind just for ios_base::out\n \tstreams.\n \t* bits/sstream.tcc: Very minor formatting tweaks.\n@@ -171,7 +171,7 @@\n \t* testsuite/27_io/istream_unformatted.cc (test05): More tweaks,\n \tinclude fstream.\n \t* testsuite/27_io/filebuf.cc: Tweaks.\n-\t\n+\n 1999-12-17  Phil Edwards  <pedwards@jaj.com>\n \n \t* configure.in:  Add OPTLEVEL, -O2 for gcc 2.96+, nothing otherwise.\n@@ -206,7 +206,7 @@\n \n \t* mknumeric_limits (OUT_C): restart only if $OUT_C is present.\n \n-\t* bits/std_complex.h \n+\t* bits/std_complex.h\n \t(complex<float>::complex(const complex<double>&),\n  \tcomplex<float>::complex(const complex<long double>&)): Define.\n \n@@ -223,7 +223,7 @@\n \t(test05): Same for stringbufs.\n \t* testsuite/27_io/istream_unformatted-2.tst: New file.\n \t* testsuite/27_io/istream_unformatted-1.tst: New file.\n-\t* testsuite/27_io/istream_unformatted-1.txt: New file.\t\n+\t* testsuite/27_io/istream_unformatted-1.txt: New file.\n \t* testsuite/21_strings/inserters_extractors.cc (test05): Change\n \toutput file.\n \n@@ -242,7 +242,7 @@\n \tcannot be inlined, as I can see no real reason to disqualify it.\n \t(__valarray_product(const _Tp*, const _Tp*)): Same here.\n \t* bits/std_valarray.h (valarray::operator[](size_t)): Same here.\n-\t\n+\n \t* docs/17_intro/TODO: Update.\n \n 1999-12-12  Benjamin Kosnik  <bkoz@gnu.org>\n@@ -253,15 +253,15 @@\n \tthe resultant position.\n \t* bits/fstream.tcc (seekoff): Explicitly set return value to\n \tresultant external byte sequence position, not value returned from\n-\t_M_file->seekoff. Need to make \n+\t_M_file->seekoff. Need to make\n \t(seekpos): New definition.\n-\t\n+\n \t* bits/istream.tcc (seekg): As per Library Issues List 136, set to\n \tjust istream. Necessary, or else tellg will give an invalid stream\n \tposition, but seekg will return a valid stream position, which is\n \tnot groovy: see testcase addition.\n \t* bits/ostream.tcc (seekp): Same.\n-\t\n+\n \t* bits/streambuf.tcc (_S_copy_streambufs): Simplify.\n \t* bits/sstream.tcc: Tweaks.\n \t* bits/locale_facets.tcc: Tweaks.\n@@ -277,9 +277,9 @@\n \t* bits/localefwd.h: And here.\n \t* bits/std_ostream.h: Tweaks, sentry ctor can't be inlined.\n \t* bits/ostream.tcc: Put here.\n-\t\n-\tFrank Ch. Eigler  <fche@cygnus.com> \n-\t* src/Makefile.am: Adjust CXXFLAGS, add AM_CXXFLAGS. \n+\n+\tFrank Ch. Eigler  <fche@cygnus.com>\n+\t* src/Makefile.am: Adjust CXXFLAGS, add AM_CXXFLAGS.\n \n 1999-12-08  Benjamin Kosnik  <bkoz@cygnus.com>\n \n@@ -326,7 +326,7 @@\n \n 1999-12-06  Mumit Khan  <khan@xraylith.wisc.edu>\n \n-        * bits/istream.tcc (basic_istream::ignore): streamsize is not \n+        * bits/istream.tcc (basic_istream::ignore): streamsize is not\n         necessarily an `int'.\n \n 1999-12-06  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n@@ -349,7 +349,7 @@\n \tworth doing correctly. Remove const designation on ios argument.\n \t* testsuite/27_io/ios_manip_basefield.cc (test02): Add tests.\n \t* testsuite/27_io/ostream_inserter_arith.cc (test03): Add tests.\n-\t\n+\n 1999-12-04  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* bits/std_sstream.h (streambuf::underflow): Check for mode == in.\n@@ -365,7 +365,7 @@\n \t* bits/ostream.tcc (ostream::operator<<(const char*)): Stub out\n \tunused argument.\n \t(ostream::operator<<(_CharT)): Fix.\n-\t\n+\n \t* bits/std_sstream.h: Temporarily disable including sstream.tcc to\n \tsee if this will increase compile speed.\n \t* bits/std_ostream.h: Likewise. . .\n@@ -375,23 +375,23 @@\n \tinstantiation purposes.\n \t* src/string-inst.cc: And here.\n \t* testsuite/27_io/ostream_inserter_arith.cc: Add test case.\n-\t\n+\n 1999-12-02  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* testsuite/27_io/istream_unformatted.cc (test03): Add tests.\n-\t* bits/istream.tcc (get(streambuf)): More fixes. \n+\t* bits/istream.tcc (get(streambuf)): More fixes.\n \t(istream::ignore): Get specific about numeric_limits<int>::max()\n \trequirements.\n \n \t* bits/fstream.tcc (filebuf::open): Tweaks for _M_last_overflowed.\n \t(filebuf::close): Same.\n \t* testsuite/27_io/filebuf.cc: Add tests for ios_base::ate.\n-\t\n+\n 1999-12-01  Phil Edwards  <pedwards@jaj.com>\n \n         * mkcheck:  Support for compilation/execution timing.\n \t* testsuite/printnow.c: New file.\n-\t\n+\n 1999-12-01  Phil Edwards  <pedwards@jaj.com>\n \n         * bits/std_cwchar.h:  Test for _GLIBCPP_USE_WCHAR_T.\n@@ -411,7 +411,7 @@\n \t* bits/std_istream.h: Same.\n \t* bits/sstream.tcc (stringbuf::pbackfail): Fix.\n \t* testsuite/27_io/stringbuf.cc: Tweak.\n-\t* testsuite/27_io/istream_unformatted.cc (test02): Mo' tests.\t\n+\t* testsuite/27_io/istream_unformatted.cc (test02): Mo' tests.\n \n \t* bits/ostream.tcc (ostream::operator<<(arith)): Set badbit, not\n \tfailbit on failure, as per 27.6.2.5.2.\n@@ -423,12 +423,12 @@\n \n         * configure.in: Fix checks for mbstate_t and WCHAR_MIN/MAX.\n \t* configure: Regenerate.\n-\t\n+\n 1999-11-29  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* bits/istream.tcc (get(streambuf, char)): Fix.\n \t* testsuite/27_io/istream_unformatted.cc (test03): Add tests.\n-\t\n+\n 1999-11-29  Scott Snyder  <snyder@fnal.gov>\n \n         * bits/basic_string.h (append(const _Char*, size_type)): The\n@@ -450,12 +450,12 @@\n         * bits/c++config.h.in (_GLIBC_USE_WCHAR_T): Move from here ...\n         * acconfig.h (_GLIBC_USE_WCHAR_T): to here.\n         * bits/string.tcc (wstring::_S_find): Guard wchar_t specialization.\n-\t\n+\n 1999-11-29  Mumit Khan  <khan@xraylith.wisc.edu>\n \n         * acinclude.m4: Fix typo.\n         * src/complex.cc: Fix macro line continuation.\n-\t\n+\n 1999-11-29  Petter Urkedal  <petter@matfys.lth.se>\n \n         * src/Makefile.am (CXXFLAGS): Add -Wno-format to allow non-\n@@ -466,7 +466,7 @@\n \t* testsuite/27_io/istream_unformatted.cc (test03): Add tests.\n \t* bits/istream.tcc (istream::get): Extract to argument minus one.\n \tVarious tweaks and fixes.\n-\t\n+\n 1999-11-22  Mumit Khan  <khan@xraylith.wisc.edu>\n \n         * bits/locale_facets.tcc: Workaround for compiler crash on\n@@ -505,7 +505,7 @@\n         * bits/valarray_meta.h: Don't forget to define tanh\n \n 1999-11-18  Philip Martin  <pm@corris.dircon.co.uk>\n- \n+\n        * src/stl-inst.cc: Use typedef to refer to iterator\n        * stl/bits/stl_algobase.h: Add traits based dispatch for\n        __normal_iterator in the copy()algorithm\n@@ -527,7 +527,7 @@\n \t* bits/std_sstream.h (stringbuf::_M_really_sync): Add __iend as a\n \tparameter.\n \t* bits/sstream.tcc: Adjust here too.\n-\t\n+\n 1999-11-17  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* bits/sbuf_iter.h (istreambuf_iter::equal): Tweak.\n@@ -543,7 +543,7 @@\n \t* bits/std_sstream.h (_M_really_sync): Fix ibuffer positioning for\n \tin|out bufs that are empty. . .\n \t* testsuite/27_io/istream_extractor_arith.cc (test03): Add.\n-\t\n+\n 1999-11-16  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* testsuite/27_io/streambuf.cc (class testbuf): Don't set _M_buf_size.\n@@ -592,8 +592,8 @@\n \t* testsuite/27_io/filebuf.cc: Fix.\n \t* testsuite/27_io/ostream_inserter_other.cc: Fix.\n \t* testsuite/27_io/ostream_inserter_other-2.tst: New file.\n-\t* testsuite/27_io/stringbuf.cc: Tweak.\t\n-\t* testsuite/27_io/streambuf.cc: Tweak.\t\n+\t* testsuite/27_io/stringbuf.cc: Tweak.\n+\t* testsuite/27_io/streambuf.cc: Tweak.\n \t* testsuite/27_io/istream_extractor_other.cc: Fix.\n \n 1999-11-11  Matthias Klose  <doko@cs.tu-berlin.de>\n@@ -634,15 +634,15 @@\n \t(_S_istream_fcache): New function.\n \tMove functions out-of-line.\n \t* bits/istream.tcc: Put here.\n-\t\n+\n \t* bits/basic_ios.tcc (basic_ios::imbue): Tweaks, remove call to\n \t_M_call_callbacks(), as ios_base::imbue does this already.\n \t* src/ios.cc (register_callback): Clean.\n \t(_M_call_callbacks): Same.\n \t* bits/ios_base.h: Callback work.\n \t* testsuite/27_io/ios_base_callbacks.cc (test01): New file.\n-\t\n-1999-11-10  Benjamin Kosnik  <bkoz@cygnus.com>\t\n+\n+1999-11-10  Benjamin Kosnik  <bkoz@cygnus.com>\n \t    Matthias Klose  <doko@cs.tu-berlin.de>\n \n \t* stl/ext/stl_rope.h: Fix initialization order.\n@@ -657,7 +657,7 @@\n \t* bits/istream.tcc: Re-order.\n \t* bits/std_istream.h: Fix getline problems.\n \t* testsuite/27_io/istream_unformatted.cc: New tests.\n-\t\n+\n \tClean up regressions.\n \t* bits/std_sstream.h: Set initial stringbufs correctly.\n \n@@ -667,7 +667,7 @@\n         vector::iterator.\n \t* testsuite/23_containers/vector_modifiers.cc (test01): New file,\n \ttests.\n-\t\n+\n 1999-11-09  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* src/Makefile.am (CXXFLAGS): Add -Winline.\n@@ -677,12 +677,12 @@\n \n \t* bits/valarray_meta.h (_DEFINE_EXPR_UNARY_FUNCTION): When\n \tbuilding meta-expressions don't forget to take the contained\n-\tclosures. \n+\tclosures.\n \n 1999-11-02  Benjamin Kosnik  <benjamin@cygnus.com>\n \n \t* configure: Regenerate.\n-\t\n+\n 1999-11-02  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/valarray_meta.h (_Expr<>::sum): Tweak. Use copy-initialization\n@@ -703,9 +703,9 @@\n \t* bits/basic_string.h: Explicitly cast npos to unsigned type,\n \treported by Richard Atterer.\n \t* bits/char_traits.h: For consistency's sake, here too.\n-\t\n+\n \t* configure.in: Bump version to 2.90.7.\n-\t\n+\n 1999-10-31  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* testsuite/27_io/ostream_inserter_char-1.tst: Check file output.\n@@ -715,25 +715,24 @@\n \t* bits/sstream.tcc (seekpos): Tricks, mostly: check _M_mode before\n \twriting into buffer.\n \t(seekoff): Same.\n-\t\n+\n 1999-10-29  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/valarray_array.h (__valarray_sum): New function.\n \t* bits/valarray_array.h (__valarray_product): Same.\n \n \t* bits/std_valarray.h (valarray<T>::product): Comment out.\n \t* bits/std_valarray.h (valarray<T>::sum): Use __valarray_sum\n-\tinstead of accumulate. \n+\tinstead of accumulate.\n \n \t* src/valarray-inst.cc: Remove explicit intantiation of\n-\tclass multiplies<size_t>, accumulate, valarray<size_t>::product. \n+\tclass multiplies<size_t>, accumulate, valarray<size_t>::product.\n \t* src/valarray-inst.cc (__valarray_product): Instantiate\n-\texplicitly. \n+\texplicitly.\n \t* src/valarray-inst.cc (__valarray_product(const\n-\tvalarray<size_t>&)): New function.   \n+\tvalarray<size_t>&)): New function.\n \t* src/valarray-inst.cc (gslice::_Indexer::_Indexer): Don't use\n \tvalarray<size_t>::product. Use __valarray_product instead.\n-\t\n \n 1999-10-25  Benjamin Kosnik  <bkoz@cygnus.com>\n \n@@ -744,11 +743,11 @@\n \tspecialization that was commented out, as ostreams now have to\n \tcorrectly deal with padding.\n \t* testsuite/27_io/ostream_inserter_char.cc (main): Add tests.\n-\t\n+\n \t* testsuite/21_strings/ctor_copy_dtor.cc(test02): Add test case\n \tfrom mailing list. This is a bug, and should be fixed.\n \t* testsuite/21_strings/inserters_extractors.cc (main): Tweak, fix typo.\n-\t\n+\n 1999-10-22  Petter Urkedal  <petter@matfys.lth.se>\n \n         * stl/bits/stl_numeric.h (__power): Replaced argument name `__opr'\n@@ -759,9 +758,9 @@\n \n \t* bits/ios_base.h: Change argument names.\n \t* docs/17_intro/BADNAMES: Add __opr.\n-\t\n+\n 1999-10-20  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\n-\t\n+\n \tWork on compilation slowdowns from 10-5 to 10-12, which are\n  \trelated to the _Callback_list inlining/merge-ifcation, which is\n  \tstill a pending issue, but this stuff is necessary cleanup anyway.\n@@ -771,7 +770,7 @@\n \t* bits/basic_ios.tcc: Move out of line definitions here, move\n  \tsmall out-of-line definitions inline.\n \t* bits/basic_ios.h: From here.\n-\t\n+\n \t* bits/streambuf.tcc (pbackfail, overflow): Move back inline.\n \t* bits/std_streambuf.h: From here.\n \n@@ -783,7 +782,7 @@\n \tvestigial issspace hacks and use ctype::is instead.\n \t(getline): Remove unnecessary loops, fortify and pasteurize.\n \t(ws): Same.\n-\t\n+\n 1999-10-18  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/istream.tcc (operator>>): Tweak.\n@@ -802,7 +801,7 @@\n \tnot allocated, size.\n \t* testsuite/21_strings/inserters_extractors.cc (test06): Add test\n \tcase.\n-\t\n+\n 1999-10-17  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* testsuite/26_numerics/c_math.cc (test03): Tweak.\n@@ -816,8 +815,8 @@\n \t* bits/istream.tcc (istream::sentry::sentry()): Simplify, correct\n \tas per issues list addition--set failbit, eof on empty buffers.\n \t* testsuite/27_io/istream_sentry.cc: New file.\n-\t\n-1999-10-12  Chris Prince <prince@wcug.wwu.edu> \n+\n+1999-10-12  Chris Prince <prince@wcug.wwu.edu>\n \n \t* bits/std_cstdio.h: Remove Solaris hacks.\n \n@@ -858,14 +857,14 @@\n \t* acconfig.h: Add _GLIBCPP_HAS_WCHAR_MIN_MAX.\n \t* configure.in (LIBS): Plus checks for WCHAR_MIN, WCHAR_MAX.\n \t* configure: Regenerate.\n-\t\n+\n 1999-10-06  Benjamin Kosnik  <bkoz@milou.cygnus.com>\n \n \t* bits/streambuf.tcc (streambuf::xsgetn): Rewrite.\n \t(streambuf::xsputn): Put in break.\n \tAiming for parity between these two (mostly) similar functions.\n \tNeed to re-write tests.\n-\t\n+\n \t* bits/ios_base.h (ios_base::_M_copy_base): Remove declaration.\n \tMake data members protected, not private.\n \t* src/ios.cc (ios_base::_M_copy_base): Move _Callback_list into\n@@ -874,14 +873,14 @@\n \t(basic_ios::clear): Throw ios_base::failure on occasion.\n \t(basic_ios::exceptions): Fix.\n \t* testsuite/27_io/ios_members.cc (test02): Add tests.\n-\t\n+\n \t* bits/fpos.h: Default initialize.\n \t* testsuite/27_io/fpos.cc (test03): Add test.\n \n-1999-10-04  Russell Davidson <russell@qed.econ.queensu.ca> \n+1999-10-04  Russell Davidson <russell@qed.econ.queensu.ca>\n \n \t* src/basic_file.cc: Fix open modes.\n-\t\n+\n 1999-10-04  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/locale_facets.tcc (num_get<>::do_get): Fix typo.\n@@ -902,9 +901,9 @@\n \t_S_format_long: Use long, not int.\n \tAdd std_limits.h include, for numeric_limits.\n \t* testsuite/27_io/istream.cc: Make instantiations work when using\n-\t-fhonor-std.  \n+\t-fhonor-std.\n \t* testsuite/27_io/ostream.cc: Same.\n-\t\n+\n 1999-09-21  Benjamin Kosnik  <bkoz@milou.cygnus.com>\n \n \t* bits/fpos.h (fpos::operator streamoff): Make const, don't return\n@@ -943,7 +942,7 @@\n \t* testsuite/27_io/ios_manip_basefield.cc: This.\n \t* testsuite/27_io/stdios_fmtflags_manip: Change to\n \t* testsuite/27_io/ios_manip_fmtflags.cc: This.\n-\t\n+\n \t* bits/fpos.h: Fix discarding qualifiers on this when\n \tusing _M_position with a const fpos.\n \t* bits/std_iosfwd.h: Tweak.\n@@ -955,7 +954,7 @@\n \t* bits/ostream.tcc: Tweak.\n \t* testsuite/21_strings/inserters_extractors.cc (test04, test05):\n  \tAdd new regressions.\n-\t\n+\n 1999-09-16  Benjamin Kosnik  <bkoz@milou.cygnus.com>\n \n \t* bits/basic_ios.h: Inline, tweak.\n@@ -967,10 +966,10 @@\n \n 1999-09-15  Vadim Egorov  <egorovv@1c.ru>\n \n-        * bits/streambuf.tcc (basic_streambuf::xsputn): Add check for \n+        * bits/streambuf.tcc (basic_streambuf::xsputn): Add check for\n \tzero count puts.\n \t* testsuite/21_strings/inserters_extractors.cc (test01): Add test.\n-\t\n+\n 1999-09-08  Benjamin Kosnik  <bkoz@milou.cygnus.com>\n \n \t* bits/c++config.h.in: Add emacs hints.\n@@ -996,11 +995,11 @@\n \t* bits/std_cmath.h: Add mess of defines.\n \t* testsuite/26_numerics/modf_float.cc: Change to\n \t* testsuite/26_numerics/c_math.cc: This.\n-\t\n+\n \t* src/locale.cc: Change.\n \t* bits/locale_facets.h: Fix.\n \t* testsuite/22_locale/ctype.cc: Add temporary tests.\n-\t\n+\n 1999-08-24  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/fpos.h: Test.\n@@ -1019,9 +1018,9 @@\n \t* bits/std_istream.h: Correct initialization.\n \t* bits/std_ostream.h: Likewise.\n \t* bits/std_sstream.h: Likewise.\n-\t* bits/std_fstream.h: Likewise. \n+\t* bits/std_fstream.h: Likewise.\n \t* testsuite/27_io/stringstream.cc: Add test case.\n-\t\n+\n \t* bits/std_sstream.h: Replace ____string_type with __string_type.\n \t* bits/basic_ios.h (basic_ios::rdbuf(sb*): Call clear(), as required.\n \t* bits/std_ostream.h: Tweak dtor.\n@@ -1030,7 +1029,7 @@\n \n \t* src/Makefile.am (CXXFLAGS): Add -O2.\n \t* src/Makefile.in: Likewise.\n-\t\n+\n \t* src/gen-num-limits.cc: Conditionally allow wchar_t. See what\n \tthis breaks. . .\n \t* mknumeric_limits (numeric_limits): Uglify.\n@@ -1054,12 +1053,12 @@\n \t* bits/sstream.tcc (stringbuf::overflow): Copy buffer into string\n \tbefore overflow forces a resize.\n \t* testsuite/27_io/ostream_inserter_char.cc: New file.\n-\t\n+\n \t* bits/std_fstream.h: Remove declaration.\n \t* bits/fstream.tcc: Move uflow.\n \t* bits/std_streambuf.h: To here.\n \t* bits/streambuf.tcc: Make consistent.\n-\t\n+\n \t* src/Makefile.am (WERROR): Enable.\n \t* src/Makefile.in: Regenerate.\n \t* bits/sbuf_iter.h: Tweak.\n@@ -1082,7 +1081,7 @@\n \texpect.\n \n \t* docs/index.html: Link Stroustrup's C++ page.\n-\t\n+\n 1999-08-12  Michael Cook  <cook@sightpath.com>\n \n \t* bits/fstream.tcc: Fix signed/unsigned -Wall warning.\n@@ -1093,11 +1092,11 @@\n \t* src/Makefile.in: ditto.\n \n 1999-08-12  Benjamin Kosnik  <bkoz@tintin.cygnus.com>\n-\t    Russell Davidson <russell@ehess.cnrs-mrs.fr> \n+\t    Russell Davidson <russell@ehess.cnrs-mrs.fr>\n \n \t* bits/locale_facets.tcc (_M_extract): Finish off patch from yesterday.\n \t* src/Makefile.am (myinstallheaders): Tweak, remove PHONY.\n-\t\n+\n 1999-08-11  Benjamin Kosnik  <bkoz@tintin.cygnus.com>\n \n \t* testsuite/27_io/istream_unformatted.cc: New file.\n@@ -1107,7 +1106,7 @@\n \n \t* testsuite/27_io/istream_extractor_other-1.txt: New file.\n \t* testsuite/27_io/istream_extractor_other-1.tst: New file.\n-\t* testsuite/27_io/istream_extractor_other-2.tst: New file.\t\n+\t* testsuite/27_io/istream_extractor_other-2.tst: New file.\n \t* testsuite/27_io/istream_extractor_other.cc: Add tests.\n \t* bits/istream.tcc: Fix operator>>(streambuf*).\n \n@@ -1120,13 +1119,13 @@\n \t* docs/17_intro/howto.html: Same here.\n \n \tRussell Davidson <russell@ehess.cnrs-mrs.fr>\n-\t* stl/bits/stl_vector.h (_M_insert_aux): \n+\t* stl/bits/stl_vector.h (_M_insert_aux):\n \t* bits/locale_facets.tcc (_M_extract): Tweaks for preliminary\n \tdecimal/floating point support.\n \t* bits/locale_facets.h: Change _M_extract prototype.\n \t* bits/char_traits.h (char_traits::to_int_type): Cast to unsigned.\n \t* bits/std_istream.h (istream::read(char_type, streamsize)): Fix.\n-\t\n+\n 1999-08-10  Michael Cook  <cook@sightpath.com>\n \n \t* bits/fstream.tcc: Fix for unused variable warning (-Wall).\n@@ -1139,17 +1138,17 @@\n \t* src/locale.cc: ditto.\n \t* src/localename.cc: ditto.\n \n-1999-08-10  Kirat Singh  <singhki@jany.gs.com> \n+1999-08-10  Kirat Singh  <singhki@jany.gs.com>\n \n \t* bits/std_iomanip.h: Inline.\n-\t\n+\n 1999-08-10  Alfred Minarik <a8601248@unet.univie.ac.at>\n-\t\n+\n \t* bits/std_streambuf.h: Correct member initialization order.\n \t* src/ios.cc: Add definitions for ios_base data members.\n-\t\n+\n 1999-08-06  Phil Edwards  <pedwards@ball.com>\n-\t\n+\n \t* docs/index.html:  Seventh snapshot updates.  Minor tweaks.\n \t* docs/faq/index.html: Ditto.  Removed bugs sections that have\n \tbeen fixed for a long time...  Lots of \"egcs\" references still\n@@ -1185,14 +1184,14 @@\n \t($(generated_headers)): Same.\n \t* src/gen-c++config.cc: Remove, rename to\n \t* bits/c++config.h.in: New file. Bump version number.\n-\t* configure.in: Generate bits/c++config.h at configure time. \n+\t* configure.in: Generate bits/c++config.h at configure time.\n \t* math/mathconf.h: include bits/c++config.h, not config.h.\n-\t\n+\n \t* bits/std_cmath.h: Fix remaining link error for solaris shared\n \tbuilds.  _GLIBCPP_HAS_BUILTIN_SINF has to be disabled for the time\n \tbeing, as on Solaris this silently calls sinf, which does not\n \texist.\n-\t\n+\n \t* src/complex.cc: More tweaks.\n \n 1999-08-03  Benjamin Kosnik  <bkoz@cygnus.com>\n@@ -1204,7 +1203,7 @@\n \t* configure.in (NEED_C_LOG10): Delete.\n \t* configure: Regenerate.\n \t* math/Makefile.am: Change.\n-\t\n+\n 1999-07-30  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* math/Makefile.am: Fix, for real.\n@@ -1214,10 +1213,10 @@\n \t* math/c_log10l.c (c_log10l): Change function name.\n \t* math/c_log10f.c (c_log10f): Change function name.\n \t* math/c_log10.c (c_log10): Change function name.\n-\t\n+\n \t* math/complex-stub.h: Change to c_log* variants.\n-\t* src/complex.cc: And here. \n-\t\n+\t* src/complex.cc: And here.\n+\n 1999-07-29  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* testsuite/27_io/istream_extractor_other.cc: Correct last test.\n@@ -1237,18 +1236,18 @@\n \t* bits/std_istream.h: Fix char extractors.\n \t* testsuite/27_io/istream_extractor_char.cc: Change.\n \t* testsuite/27_io/istream_extractor_other.cc: Add tests.\n-\t\n+\n 1999-07-28  Benjamin Kosnik <bkoz@cygnus.com>\n \n-\t* bits/std_cctype.h: Fix for solaris2.6 builds. \n+\t* bits/std_cctype.h: Fix for solaris2.6 builds.\n \n \t* bits/istream.tcc: Fix, thanks Alfred.\n \t* bits/std_istream.h: Formatting changes.\n \n \t* libio/Makefile.am (libio_la_SOURCES): Remove cleanup.c, so that\n \t_IO_cleanup will not be undefined.\n \t* libio/*: Regenerate.\n-\t\n+\n \t* bits/basic_string.h: More namespace-safety stuff.\n \t* testsuite/27_io/istream_extractor_char.cc: Fix.\n \t* testsuite/27_io/istream_extractor_arith.cc: Fix.\n@@ -1267,7 +1266,7 @@\n \t* configure.in (use_builtin_sinf): Check for _ISBit using autoconf.\n \n \t* aclocal.m4: Regenerate by running `aclocal -I m4.`\n-\t\n+\n \t* bits/istream.tcc: Fix.\n \t* bits/std_istream.h: More changes to extractors.\n \n@@ -1277,15 +1276,15 @@\n \n \t* bits/std_istream.h: Partially revert.\n \t* bits/std_ostream.h: Same.\n-\t* bits/std_sstream.h: Revert. \n+\t* bits/std_sstream.h: Revert.\n \n 1999-07-26  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/std_sstream.h: Change initialization.\n \t* bits/std_ostream.h: Make default ctor/assign/operator= private.\n \t* bits/std_istream.h: Same, also correct sentry args.\n \t* bits/istream.tcc: Add correct sentry args.\n-\t\n+\n \t* testsuite/27_io/istream_extractor_char.cc: New file.\n \t* testsuite/27_io/istream_extractor_arith.cc: New file, old file,\n \tname changes making me dizzy.\n@@ -1311,7 +1310,7 @@\n \n \t* src/complex.cc: Tweak.  Remove dependency on complex::__value().\n \t(sin, sinh, tan, than): Fix call to corresponding C9x function\n-\tsyntax. \n+\tsyntax.\n \n 1999-07-24  Benjamin Kosnik  <bkoz@fidel.cygnus.com>\n \n@@ -1328,7 +1327,7 @@\n \tthe C functions are just plain functions.\n \n \t* src/gen-num-limits.cc: Fix spelling inconsistencies.\n-\t\n+\n 1999-07-24  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* docs/18_support/howto.html: Start documentation.  Need to keep\n@@ -1341,10 +1340,10 @@\n \n 1999-07-23  Benjamin Kosnik  <bkoz@fidel.cygnus.com>\n \n-\t* bits/ios_base.h: Move state/exception functions into basic_ios. \n+\t* bits/ios_base.h: Move state/exception functions into basic_ios.\n \t* bits/basic_ios.h: Same.\n \t* src/ios.cc: And here. Callbacks don't attempt to reset\n-\tstate now.  \n+\tstate now.\n \n \t* bits/std_streambuf.h: Separate ios and streambuf locale data\n \tmembers and cached facets. Using this convention: _M_locale_buf for\n@@ -1361,15 +1360,15 @@\n \t* testsuite/27_io/ios_ctor.cc: New file.\n \t* src/ios.cc: Move _M_state init to basic_ios::init().\n \t* bits/basic_ios.h: To here.\n-\t\n+\n \tAttempt for some consistency in naming for testsuite/27_io/*.cc.\n \t* testsuite/27_io/boolfmt.cc: Rename to stdios_fmtflags_manip.cc\n \t* testsuite/27_io/octfmt.cc: Rename to stdios_basefield_manip.cc\n \t* testsuite/27_io/istream_manip.cc: Rename to istringstream_manip.cc.\n \t* testsuite/27_io/ostream_manip.cc: Rename to ostringstream_manip.cc.\n-\t\n+\n 1999-07-22  Benjamin Kosnik  <bkoz@fidel.cygnus.com>\n-\t\n+\n \t* src/ios.cc: Tweak initializations of standard iostream\n \tobjects to closely match the standard. Tie cin/wcin, set flags on\n \tcerr/wcerr\n@@ -1395,12 +1394,12 @@\n \t* testsuite/21_strings/find.cc (test01): Add tests to catch this\n \tfind bug. . .\n \n-1999-07-20  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\t\n+1999-07-20  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\n \n \t* bits/basic_ios.h: Put into basic_ios namespace.\n \tTweak widen/narrow.\n \n-1999-07-19  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\t\n+1999-07-19  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\n \n \t* bits/std_sstream.h (stringbuf::sync): Change to _M_really_sync,\n  \tadjust _M_*_cur pointers inside the function, so callee doesn't\n@@ -1412,12 +1411,12 @@\n \n 1999-07-18  Mumit Khan  <khan@xraylith.wisc.edu>\n \n-        * configure.in: Check for float.h and underscored version of \n+        * configure.in: Check for float.h and underscored version of\n         math functions.\n         * acconfig.h: Add @BOTTOM@ section for handling underscored\n         math functions.\n         * configure: Regenerate.\n-        * config.h.in: Regenerate. \n+        * config.h.in: Regenerate.\n         * math/mathconf.h (float.h): Include conditionally.\n         (M_PI): Define conditionally.\n         (INFINITE_P): Define for Mingw.\n@@ -1447,12 +1446,12 @@\n \t_M_buf_size to initial _M_string.size(), even though for\n \tostringstreams it is pretty pointless. It's necessary for\n \tistringstreams.\n-\t(stringbuf::str()): Adjust. \n+\t(stringbuf::str()): Adjust.\n \t(stringbuf::str()): Adjust, call _M_init_stringbuf.\n \t* bits/streambuf.tcc (streambuf::xsgetn): Adjust return value for\n \toverflow's possible success.\n \t(streambuf::xsputn): Adjust.\n-\t\n+\n \t* testsuite/27_io/filebuf.cc: Adjust for the xsgetn re-write from\n \tyesterday.\n \t* testsuite/27_io/stringbuf.cc: Tweak.\n@@ -1461,7 +1460,7 @@\n \t* testsuite/23_containers/vector_cons.cc: Rename to be consistent\n \twith other constructor tests to. . .\n \t* testsuite/23_containers/vector_ctor.cc: New file.\n-\t\n+\n 1999-07-14  Alfred Minarik <a8601248@unet.univie.ac.at>\n \n \t* testsuite/*: Changes to make the testsuit compilable with\n@@ -1487,7 +1486,7 @@\n         * bits/basic_string.h: In the three functions that return\n \tan iterator set _M_state to -1 before return.\n \tAlso optimized two cases of operator+.\n-\t\n+\n 1999-07-12  Phil Edwards  <pedwards@ball.com>\n \n         * docs/index.html:  Expand egcs-1.1.2 notes/links.\n@@ -1497,7 +1496,7 @@\n         * docs/21_strings/stringtok_h.txt:  Goodly spelling...\n         * docs/23_containers/howto.html:  Stub for bitmasks.\n \t* docs/27_io/howto.html: Add section on buffering, stub binary.\n-\t\n+\n 1999-07-12  Nathan Myers <ncm@cantrip.org>\n \n \t* stl/bits/stl_tree.h (__black_count): Optimize.\n@@ -1516,24 +1515,24 @@\n \t* bits/fstream.tcc: Define, call from both ctors.\n \t* bits/std_sstream.h (_M_init_stringbuf): New function.\n \t* bits/sstream.tcc: Tweak.\n-\t\n+\n \t* docs/27_io/iostreams_hierarchy.pdf: New file.\n-\t\n+\n \t* docs/17_intro/CHECKLIST (basic_string<char>): Validation and\n \tacceptance. Wooo-hoo!\n \n \t* bits/char_traits.h: Change int_type for char_traits general\n \ttemplate, so that 21_strings/capacity.cc will compile.\n \t* testsuite/21_strings/capacity.cc: Add operators.\n-\t\n+\n \t* bits/string.tcc (string::compare): Clean up, re-implement.\n \t* testsuite/21_strings/compare.cc: Tweak.\n-\t\n+\n \t* bits/string.tcc (string:_M_mutate): Keep leaked value in\n \t_M_state, which means that whenever begin() or end() has been\n \tcalled, the string is unshareable, period. By doing this, insert\n \tand erase member functions that return iterators can remain\n-\tfootloose and fancy free. \n+\tfootloose and fancy free.\n \t* testsuite/21_strings/invariants.cc: Update.\n \n         * bits/basic_string.h (string::append): Fix self-referential\n@@ -1586,7 +1585,7 @@\n \t* bits/std_ostream.h: And here.\n \t* bits/ostream.tcc: Same.\n \t* src/misc-inst.cc: Add instantiations for ws.\n-\t\n+\n \t* src/string-inst.cc: Add instantiations for inserters and\n \textractors (operators << and >>, getline).\n \n@@ -1599,12 +1598,12 @@\n \n \t* testsuite/17_intro: header_[iosfwd, ios, iostream, iomanip,\n \tistream, ostream, streambuf, fstream, sstream].cc: New files.\n-\t\n+\n 1999-06-30  Ryszard Kabatek <kabatek@chemie.uni-halle.de>\n \n \t* bits/std_sstream.h (stringbuf::sync): Don't use string::begin()\n \tand string::end().\n-\t\n+\n         * bits/basic_string.h (basic_string<>::_S_copy_chars): Add\n \tspecializations for _CharT*, iterator and const_iterator.\n \t* src/string-inst.cc: Remove explicit instantiation, as\n@@ -1616,26 +1615,26 @@\n \tvalue of the new parameter to _M_length.  In reserve check\n \t_M_state and use _M_clone instead of _M_mutate.\n \n-1999-06-30  Benjamin Kosnik  <bkoz@happy.cygnus.com>\t\n+1999-06-30  Benjamin Kosnik  <bkoz@happy.cygnus.com>\n \n \t* bits/basic_string.h: Fix _S_max_size.\n \t* bits/string.tcc: Add def here.\n \t* testsuite/21_strings/insert.cc: Fix.\n-\t\n+\n \t* bits/sbuf_iter.h: Remove detritus.\n \t* testsuite/24_iterators/istreambuf_iterator.cc: Add tests.\n \n \t* src/locale-inst.cc: Elaborate iterator/locale instantiations\n \tto resolve alpha-osf4 build problems.\n \n-1999-06-29  Benjamin Kosnik  <bkoz@happy.cygnus.com>\t\n+1999-06-29  Benjamin Kosnik  <bkoz@happy.cygnus.com>\n \n \t* bits/string.tcc: Fix signed/unsigned issues in compares.\n \t* stl/bits/stl_deque.h: And here.\n \t* stl/bits/stl_string_fwd.h: Remove __get_c_string.\n \n 1999-06-29  Ryszard Kabatek <kabatek@chemie.uni-halle.de>\n- \n+\n          * bits/string.tcc: New implementation and interface of _M_mutate.\n            Adapt the change in all functions that call _M_mutate.\n          * bits/basic_string.h: And here.\n@@ -1647,12 +1646,12 @@\n 1999-06-29  Phil Edwards  <pedwards@ball.com>\n \n         * mknumeric_limits:  Exit script if gen-num-limits isn't built.\n-\t\n-1999-06-29  Andreas Gruenbacher  <agruenba@pent224.infosys.tuwien.ac.at> \n+\n+1999-06-29  Andreas Gruenbacher  <agruenba@pent224.infosys.tuwien.ac.at>\n \n \t* stl/bits/stl_vector.h: Fix.\n \t* testsuite/23_containers/vector_cons.cc: Add.\n-\t\n+\n 1999-06-29  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* mknumeric_limits (LDFLAGS): fix.\n@@ -1676,11 +1675,11 @@\n \tversion of S_construct again.\n \t* bits/string.tcc: Same.\n \t* src/string-inst.cc: And add explicit instantiation here.\n-\t\n+\n \t* src/gen-c++config.cc (_GNU_SOURCE): Take out both _GNU_SOURCE\n \tand __USE_GNU macro defines, as single __USE_GNU use leading to\n \tconfusion on glibc2.1 systems (ie, RedHat 6.0).\n-\t\n+\n \t* src/Makefile.am (headers): Add std_utility to installed headers.\n \n 1999-06-25  John Potter  <jpotter@eagle.lhup.edu>\n@@ -1697,35 +1696,35 @@\n \tmacros to include _GLIBCPP as a distinct namespace.\n \t* bits/*: And here.\n \t* src/*: And here.\n-\t\n+\n \t* stl/bits/std_stdexcept.h: Forward-declare __Named_exception ctor.\n \t* bits/basic_string.h: Remove __get_c_string.\n \t* src/stdexcept.cc: Define ctor here.\n \t* bits/ios_base.h: And fix ios_base::failure as well.\n-\t* src/ios.cc: Define here. \n-\t\n+\t* src/ios.cc: Define here.\n+\n \t* bits/std_streambuf.h: Add a private copy ctor and assignment\n \toperator wrapped in _G_RESOLVE_LIB_DEFECTS.\n \t* bits/ios_base.h: And here too.\n-\t\n+\n \t* bits/basic_string.h: Tweak.\n \t* testsuite/21_strings/nonmember.cc: Add operator+ tests.\n \n \t* src/valarray.cc: Rename to. . .\n \t* src/valarray-inst.cc: This.\n \t* src/Makefile.am (sources): Change here.\n \t* src/Makefile.in: Regenerated.\n-\t\n+\n 1999-06-24  Vadim Egorov  <egorovv@1c.ru>\n \n         * bits/string.tcc(basic_string<>::_Rep::_S_create): Fixed\n         allocated size\n \n 1999-06-24  Benjamin Kosnik  <bkoz@tintin.cygnus.com>\n             Tom Tromey  <tromey@cygnus.com>\n-\t\n+\n \t* configure.in (use_glibc2): Eek, correct for non-glibc systems.\n-\tUse AM_CONDITIONAL to get us out of this jam. . \n+\tUse AM_CONDITIONAL to get us out of this jam. .\n \t* libio/Makefile.am: Same.\n \t* */Makefile: Regenerated.\n \n@@ -1734,17 +1733,17 @@\n \n \t* stl/bits/stl_tree.h (insert_equal): Fix.\n \t* testsuite/23_containers/multiset.cc: New file.\n-\t\n+\n 1999-06-23  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* configure.in (test for glibc2): Correct AC_TRY_COMPILE so that\n \tthis works correctly on glibc-2 systems. This should allow\n \tsimplified linking on these systems, and successful linking on Red\n \tHat 6.0 systems.\n \t* configure, Makefile: Regenerate.\n-\t\n-\t* bits/std_cwctype.h: Add missing 'w' to _S_iswpunct_helper name. \n-\t\n+\n+\t* bits/std_cwctype.h: Add missing 'w' to _S_iswpunct_helper name.\n+\n \t* testsuite/ext: New directory.\n \t* testsuite/ext/headers.cc: New file.\n \n@@ -1773,7 +1772,7 @@\n \n 1999-06-12  Benjamin Kosnik  <bkoz@cygnus.com>\n \n-\t* mkcheck (LOG_FILE): Correctly append errors. \n+\t* mkcheck (LOG_FILE): Correctly append errors.\n \n \t* stl/bits/stl_iterator.h: Revert previous, delirious, change.\n \n@@ -1788,7 +1787,7 @@\n \t* testsuite/21_strings/find.cc: New file.\n \t* testsuite/21_strings/substr: New file.\n \t* testsuite/21_strings/replace.cc: New file.\n-\t\n+\n 1999-06-11  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/valarray_array.h: __restrict__ify pointers.\n@@ -1801,7 +1800,7 @@\n \t* bits/gslice.h: Tweak.\n \t(class gslice::_Indexer): new class.\n \t(gslice::gslice(const gslice&)): implement copy-ctor to support\n-\tref-counted index. \n+\tref-counted index.\n \t(gslice::operator=(const gslice&)): support ref-counted index.\n \t(gslice::_M_convert_to_index): delete.\n \n@@ -1832,7 +1831,7 @@\n \tc_str() as well.\n \t* bits/string.tcc: Add static member definition here,\n \ttemporarily.\n-\t\n+\n \t* testsuite/21_strings/element_access.cc: Add tests.\n \n 1999-06-08  Vadim Egorov  <egorovv@1c.ru>\n@@ -1871,7 +1870,7 @@\n \t* acconfig.h: Add macro for sinf here.\n \t* configure.in (LIBS): Add test for builtin math function sinf.\n \t* configure: Regenerated.\n-\t\n+\n \t* bits/basic_string.h: Fix _S_max_size.\n \n 1999-06-06  Benjamin Kosnik  <bkoz@tintin.cygnus.com>\n@@ -1880,7 +1879,7 @@\n \tRemove _S_construct signature for forward_iterator_tag and\n \tinput_iterator_tag.\n \tClean _M_fold.\n-\t* src/string-inst.cc: Same, tweaks. \n+\t* src/string-inst.cc: Same, tweaks.\n \t* bits/string.tcc: Same, tweaks.\n \n \t* testsuite/21_strings/ctor_copy_dtor.cc: Add/clarify tests.\n@@ -1897,26 +1896,26 @@\n         * docs/{23_containers,27_io}/howto.html:  Added sections.\n \n \t* bits/std_fstream.h: Tweak.\n-\t\n+\n 1999-06-05  Benjamin Kosnik  <bkoz@tintin.cygnus.com>\n \n \t* src/ios.cc: Same here.\n \t* bits/std_iosfwd.h: More wchar_t defines.\n \n-\t* bits/basic_string.h: Tweaks. \n+\t* bits/basic_string.h: Tweaks.\n \t* bits/string.tcc: Tweak. Fix _S_construct to check for max_size\n \twhen doing error checking, as per LWG defect #83.\n-\t\n+\n \t* src/gen-c++config.cc: Fix comment.\n-\t\n+\n \t* testsuite/21_strings/ctor_copy_dtor.cc: New file, checks ctors,\n \tassignments, dtors.\n \t* testsuite/21_strings/element_access.cc: New file, checks for\n \toperator[], at(...).\n \t* testsuite/21_strings/insert.cc: New file, tests string::insert.\n \t* testsuite/21_strings/char_traits.cc: New file, tests\n \tfor char_traits<char>.\n-\t\n+\n \t* bits/utility.h: Remove, again.\n \t* src/Makefile.am (std_headers): Remove utility.h.\n \t* src/Makefile.in (std_headers): Regenerate.\n@@ -1937,7 +1936,7 @@\n         * bits/string.tcc (basic_string::_M_mutate): Fixed memory\n         allocation error\n \t* testsuite/21_strings/capacity.cc (test01): Test.\n-\t\n+\n 1999-06-03  Phil Edwards  <pedwards@ball.com>\n \n         * bits/fstream.tcc:  Re-order inits to stop warnings.  Comment/move\n@@ -1955,9 +1954,9 @@\n \t* bits/locale_facets.h: Same.\n \t* bits/locale_facets.tcc: Same.\n \t* src/wstring-inst.cc: And here.\n-\t\n+\n \t* src/gen-c++config.cc: Comment _G_USE_WCHAR_T. Leading to\n- \tproblems on HPUX 10.20.  \n+ \tproblems on HPUX 10.20.\n \t* your-build-directory-here/bits/c++config.h: Just kidding, do it\n  \there as a temporary hack till the compiler/host problems get\n  \tworked out.\n@@ -1988,7 +1987,7 @@\n \n \t* src/Makefile.am ($(generated_headers)): Remove comment.\n \t* Makefile*: Regenerate.\n-\t\n+\n \t* bits/std_locale.h: Remove detritus.\n \t* bits/localefwd.h: Add <cctype> include to undefine the isspace\n \tmacro.\n@@ -1998,7 +1997,7 @@\n \t* src/gen-c++config.cc: New file. Making c++config.h at configure\n \ttime by catting this file (nee bits/config.h) with the build\n \tdirectories config.h. This is not a complete or perfect solution\n-\tbut is better than what was in place previously. \n+\tbut is better than what was in place previously.\n \t* bits/c++config.h: Rename/move to above.\n \t* src/Makefile.am (headers): Remove c++config.h.\n \t(myinstallheaders). Add.\n@@ -2009,7 +2008,7 @@\n \tdeclared only if not present in the host's wchar.h.\n \n \t* bits/locale_facets.tcc (std): Change _G_USE_STRTO* to HAVE_STRTO*.\n-\t\n+\n \t* bits/std_cmath.h: Define out, for the moment. Linux has no\n \t__buitin_fsqrtl? Probably need some kind of configure trickery\n \there as well.\n@@ -2018,7 +2017,7 @@\n \t* bits/c++config.h: Add config.h include.\n \n \t* bits/std_cwchar.h: Remove remaining #error guard.\n-\t\n+\n \t* acconfig.h: Add bits for HAVE_LC_MESSAGES.\n \n \t* configure.in (LIBS): Replace previous effort for mbstate_t and\n@@ -2033,7 +2032,7 @@\n \n \t* bits/locale_facets.tcc (std): Eek: this left in. Autoconf bits\n \tfor determining mbstate_t differences across various hosts not\n-\tfinished. \n+\tfinished.\n \n 1999-05-26  Benjamin Kosnik  <bkoz@nabi.net>\n \n@@ -2044,7 +2043,7 @@\n \n \t* bits/std_istream.h: Add ws declaration.\n \t* bits/istream.tcc: Stub out definition.\n-\t\n+\n \t* docs/index.html: Fix broken link for design.txt.\n \n \t* configure.in: Test for mbstate_t. If wchar.h doesn't have it,\n@@ -2057,15 +2056,15 @@\n \n         * bits/std_sstream.h:\n           basic_stringbuf<>::basic_stringbuf: fix.\n-          basic_stringbuf<>::setbuf: \n+          basic_stringbuf<>::setbuf:\n           remove the temporary __string_type object,\n           remove the unnecessary dynymic_cast in the return value,\n           change the type of the returned value from __streambuf_type*\n           to basic_stringbuf<_CharT, _Traits, _Alloc>*.\n \n 1999-05-25  Phil Edwards  <pedwards@ball.com>\n \n-\t* bits/std_streambuf.h (streambuf::setbuf): Always return streambuf*. \n+\t* bits/std_streambuf.h (streambuf::setbuf): Always return streambuf*.\n \n 1999-04-25  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n@@ -2075,18 +2074,18 @@\n 1999-05-24  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* mknumeric_limits (LDFLAGS): set appropriate link flags.\n-\t\n+\n 1999-05-23  Phil Edwards  <pedwards@ball.com>\n \n \t* docs/17_intro/howto.html:  Added links to text docs,\n-\te.g., BUGS. \n+\te.g., BUGS.\n \t* docs/21_strings/howto.html:  Updated sections and links.\n \t* docs/21_strings/{gotw29a.txt,stringtok_h.txt}:  Added.\n \t* docs/faq/index.html:  Updated what-works for sixth\n \tsnapshot. Also a number of \"internal\" links have been\n \tfixed, now that the web pages are the docs directory...\n \t* docs/faq/index.txt: Regenerated.\n-\t\n+\n 1999-05-21   Benjamin Kosnik  <bkoz@tintin.cygnus.com>\n \n \t* bits/basic_string.h: Add Nathan's documentation on the string class.\n@@ -2109,7 +2108,7 @@\n \t* bits/istream.tcc: Same.\n \n \t* src/locale-inst.cc: And here.\n-\t* src/locale.cc: Ditto. \n+\t* src/locale.cc: Ditto.\n \t* src/Makefile.am: Updated.\n \t* src/Makefile.in: Rengenerated.\n \n@@ -2123,7 +2122,7 @@\n \t* bits/locfacets.h: Start separating this into a localeimp.h file.\n \t* bits/loccore.h: Start separating this into a localefwd.h file.\n \tAdd std_climits for CHAR_BIT.\n-\t\n+\n \t* bits/ios_base.h (ios_base::sync_with_stdio): Stub in.\n \n \t* bits/char_traits.h: Tweak.\n@@ -2135,7 +2134,7 @@\n \t* bits/std_streambuf.h: Same.\n \t* bits/std_fstream.h: Same.\n \t* bits/std_sstream.h: And here.\n-\t\n+\n \t* bits/std_iosfwd.h: Add _G_RESOLVE_LIB_DEFECTS here for streampos.\n \t* bits/char_traits.h: Add include of std_cwchar.h for mbstate_t.\n \t* bits/fpos.h: Tweak, format.\n@@ -2147,18 +2146,18 @@\n \t* src/Makefile.in: Regenerate.\n \t* testsuite/17_intro/header_ciso646.cc: New file, disable\n \tequivalance tests.\n-\t\n+\n \t* bits/fpos.h: Remove libio.h include.\n \t* bits/basic_file.h: And here.\n \t* bits/std_ios.h: Put here.\n \n \t* src/ios.cc: Simplify includes, tweak.\n-        * bits/std_ios.h: Simplify include order. \n+        * bits/std_ios.h: Simplify include order.\n \t* bits/ios_base.h: Modify ios_base::failure.\n \n \t* stl/bits/std_numeric.h: Change include from stl_iterator to\n \tstd_iterator.\n-\t\n+\n 1999-05-19  Benjamin Kosnik  <bkoz@tintin.cygnus.com>\n \n \t* std/iostream: Remove static member __ioint.\n@@ -2168,9 +2167,9 @@\n \t* stl/bits/stl_algobase.h: Same.\n \t* testsuite/27_io/iostream_objects.cc: Regression tests.\n \t* testsuite/27_io/hello.cc: Remove, subset of above.\n-\t\n+\n 1999-05-19  Phil Edwards  <pedwards@ball.com>\n-\t\n+\n \t* docs/index.html: Tweak, update.\n \n 1999-05-18  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n@@ -2194,7 +2193,7 @@\n \t* docs/17_intro/RELEASE-NOTES: Update.\n \t* docs/index.html: Correct link to mailing list help page, update News.\n \t* docs/faq/index.html: Change fifth to sixth for snapshot.\n-\t\n+\n \t* src/Makefile.am (myinstallheaders): Bring over Gaby's changes to\n  \tinstall $(top_builddir)/bits/std_limits.h into\n  \t$(myincludepfx)/bits. This was mistakenly omitted from yesterday's\n@@ -2216,10 +2215,10 @@\n \t  27_io}/howto.html:  Created, with some initial entries.\n \t* docs/faq/index.html:  Fixed some links.\n \t* docs/faq/index.txt:  Regenerated.\n-\t\n+\n 1999-05-17  Benjamin Kosnik  <bkoz@unhappy.cygnus.com>\n \n-\t* src/Makefile.am (myinstallheaders): Missed removing missing.h. \n+\t* src/Makefile.am (myinstallheaders): Missed removing missing.h.\n \t* Makefile.in*: Regenerate.\n \n 1999-05-17  Benjamin Kosnik  <bkoz@happy.cygnus.com>\n@@ -2237,35 +2236,35 @@\n \n \t* bits/c++config.h: Remove broken CCTYPE.\n \t* bits/std_cctype.h: Tweak, remove de-macroization, enable\n-\tsequestered topper implementation.\t\n+\tsequestered topper implementation.\n \t* bits/std_cwctype.h: Same.\n-\t\n+\n \t* bits/missing.h: Remove.\n \t* bits/std_locale.h: Remove missing.h include.\n-\t\n+\n \t* stl/bits/std_bitset.h (bitset::bitset(string): Tweak to compile.\n-\t\n+\n \t* src/Makefile.am (headers): Add bits/std_cwctype.h.\n-\tINCLUDES: Add top_builddir. \n+\tINCLUDES: Add top_builddir.\n \t* src/Makefile.in: Regenerate.\n \n \t* Makefile.am: Add check and check-install as new targets.\n \t* testsuite/make_check_libfree++: Move to. . .\n \t* mkcheck: Here.\n \t* configure.in: Tweak versions.\n \t* mknumeric_limits: Set paths correctly.\n-\t\n+\n 1999-05-17  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\t\n+\n \t* src/Makefile.in (myinstallheaders): add rule to install\n-\tstd_limits.h. \n-\t\n+\tstd_limits.h.\n+\n \t* bits/slice.h (class slice): don't const-qualify data members\n \tsince the copy and assignment operator is implicitly used. The\n \tvalarray specification is definitively a bad one.\n-\t\n+\n \t* Makefile.in (generate-limits-sources): fix typo.\n-\t\n+\n \t* docs/text/TODO: update.\n \t* docs/text/CHECKLIST: update.\n \n@@ -2287,7 +2286,7 @@\n \twhere the generated std_limits.h is put; generate limitsMEMBERs.cc\n \tdirectly under $(top_builddir)/src. Remains to put the appropriate\n \trule for installing std_limits.h.\n-\t\n+\n \t* src/Makefile.in (headers): remove bits/std_limits.h to this list.\n \t(INCLUDES): add -I$(top_builddir) for bits/std_limits.h which is\n \tnow generated at build-time in the build directory\n@@ -2300,13 +2299,13 @@\n \tall but one empty entry.  Add links for HOWTOs, but no files yet.\n \t(Corrected HOWTO links are for bkoz's new scheme.)\n \t* docs/faq/index.txt: Regenerated.\n-\t\n+\n 1999-05-12  Benjamin Kosnik  <bkoz@happy.cygnus.com>\n \n \t* testsuite/17_intro/headers.cc: New file.\n \t* stl/bits/std_queue.h: Change stl_bvector.h include path.\n \t* bits/std_cwctype.h: New file.\n-\t\n+\n \t* testsuite/27_io/filebuf.cc: Need to tweak directory structure.\n \n 1999-05-11  Benjamin Kosnik  <bkoz@loony.cygnus.com>\n@@ -2320,8 +2319,8 @@\n \n \t* testsuite/make_check_libfree++: More tweaks.\n \t* testsuite/21/capacity.cc: New file.\n-\t\n-\t* src/string.cc: Rename to be consistent with other inst files. \n+\n+\t* src/string.cc: Rename to be consistent with other inst files.\n \tRename to string-inst.cc.\n \t* src/string*.cc: Change include.\n \t* src/wstring.cc: Rename to wstring-inst.cc.\n@@ -2346,21 +2345,21 @@\n \t26_numerics, 27_io: Add.\n \t* docs/17_intro/*: Populate with all the text files. . .\n \t* docs/index.html: Construct.\n-\t\n+\n \t* testsuite/*: Update with same names as the docs subdir.\n \t* testsuite/results: Where to stash conformance results for the\n \tdifferent snapshots, so that progress/size/speed issues can be\n \ttracked over time.\n-\t\n+\n 1999-05-10  Benjamin Kosnik  <bkoz@loony.cygnus.com>\n-\t\n+\n \t* src/string.cc: Add _S_copy_chars instantiation, as well as\n  \tstring::binary operators !=, ==, etc.\n \n \t* src/Makefile.am (CXXFLAGS): Remove -fvtable-thunks.\n \t* src/Makefile.in (CXXFLAGS): Same here.\n \t* testsuite/make_check_libfree++ (CXX_FLAG): And here.\n-\t\n+\n 1999-05-07  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* src/string.cc:  Add missing member functions to instantiation list.\n@@ -2382,14 +2381,14 @@\n \tan iterator class.  Delineate pointer versus iterator differences\n \tin implementation.\n \t* 23/vector_capacity.cc: New file, tests for above.\n-\t\n+\n 1999-05-06 Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* mknumeric_limits: Fix typo. 'unsigned lont' should read\n \t'unsigned long'.\n \t* src/Makefile.am (libstdc___la_SOURCES): add limitsMEMBERS.cc,\n \tgenerated by mknumeric_limits to the list. Now std_limits.h is\n-\tbasically working. \n+\tbasically working.\n \t* src/Makefile.in (generate-numeric-limits): new target to handle\n \tautomatic generation of bits/std_limits.h and src/limitsMEMBERS.cc.\n \t(all): add target generate-numeric-limits.\n@@ -2404,12 +2403,12 @@\n \t* bits/locfacts.h: Here.\n \n 1999-05-05  Benjamin Kosnik  <bkoz@cygnus.com>\n-\t    Ulrich Drepper <drepper@cygnus.com> \n+\t    Ulrich Drepper <drepper@cygnus.com>\n \n \tSolaris build issues.\n \t* bits/c++config.h: Define new macros, _G_USE_STRTOF and\n  \t_G_USE_STRTOLD.\n-\t\n+\n \t* bits/locfacets.tcc (num_get::do_get): Tweak long double and\n  \tfloat overloads to use the above macros. Account for the lack of\n  \tstrtold on some systems, and revert back to using sscanf.\n@@ -2432,7 +2431,7 @@\n \taccording to the standard. (see 8.5 p5 and 20.1.3).\n \t* mknumeric_limits (OUT_C): Need this for x86 long\n \tdouble extensions.\n-\t\n+\n \t* bits/basic_file.h: Include libio.h, not libioP.h.\n \t* src/basic_file.cc: And add libioP.h include here, so that\n \t_IO_init, et. al are well-declared.\n@@ -2443,7 +2442,7 @@\n \t* src/Makefile.am (headers): Add stl_range_errors.h, also adjust\n \tfor ext/*.  Also add basic_file.h.\n \t* src/Makefile.in (headers): Same.\n-\t\n+\n \t* bits/std_string.h: Reduce dependencies for faster\n \tpre-processing. Move istream and ostream specific defines into\n \tistream.tcc and ostream.tcc respectively.\n@@ -2466,7 +2465,7 @@\n \n \t* stl/bits/*: Update to SGI STL 3.20.\n \t* stl/ext/pthread_alloc: Delete this file.\n-\t\n+\n 1999-05-04 Phil Edwards <pedwards@ball.com>\n \n \t* docs/faq/html/index.html: Add more entries\n@@ -2486,19 +2485,19 @@\n \t* bits/locfacets.h: And here too.\n \n \t* doc: Remove.\n-\t\n+\n 1999-04-29  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* docs/: add a FAQ.\n  \t* docs/faq/: New directory.\n \t* docs/faq/html/: Likewise.\n \t* docs/faq/text/: Likewise.\n \t* docs/faq/html/index.html: New file.\n-\t* docs/faq/html/index.txt: Likewise. Generated from \n+\t* docs/faq/html/index.txt: Likewise. Generated from\n \tdocs/faq/html/index.html by lynx.\n \n 1999-04-28  Benjamin Kosnik  <bkoz@happy.cygnus.com>\n-\t    Ryszard Kabatek and Branko Cibej \n+\t    Ryszard Kabatek and Branko Cibej\n \n \t* bits/locfacets.tcc: Modify.\n \n@@ -2508,21 +2507,21 @@\n \tconformant to 14882, wrap non-standard extensions with\n \t_G_RESOLVE_LIB_DEFECTS, remove detritus and cruft, rennovate.\n \t* bits/locfacets.tcc (num_get::do_get(bool)): Return correct iterator.\n-\t\n+\n \t* testsuite/27/istringstream_formatted.cc: Add tests.\n-\t\n+\n \t* bits/locfacets.h: Remove cruft from _Format_cache, continue\n \tcommenting, simplify.\n \t* bits/locfacets.tcc: Same.\n \n \t1999-04-27  Ryszard Kabatek  <kabatek@chemie.uni-halle.de>\n         * bits/locfacets.tcc (num_get::do_get):\n-        Fix the sscanf format parameter \n+        Fix the sscanf format parameter\n         for long long 'll' (as in C9X) instead of 'l'.\n         Fix the order of sscanf format parameters: \"%dl\" --> \"%ld\".\n         Change the type of the local variable '__conv' from 'string'\n         to 'const char*' and adapt the change.\n-\t\n+\n 1999-04-26  Benjamin Kosnik  <bkoz@happy.cygnus.com>\n \n \t* bits/locfacets.h: Document _Format_cache, and name data members\n@@ -2534,7 +2533,7 @@\n \t* bits/locfacets.h (num_get::_M_extract): Don't allow groupings to\n  \tstop parsing--store for later analysis.\n \t* testsuite/27/istringstream_formatted.cc: Add cases.\n-\t\n+\n 1999-04-25  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/valarray_meta.h: tweak.\n@@ -2543,10 +2542,10 @@\n \thappy -- boggus warning.\n \t* bits/std_valarray.h: Fix.\n \t(valarray<T>::shift): Fix. Update comment.\n-\t(valarray<T>::cshift): Fix. \n+\t(valarray<T>::cshift): Fix.\n \n 1999-04-23  Benjamin Kosnik  <bkoz@cygnus.com>\n-\t\n+\n \t* testsuite/27filebuf-2.txt: Delete.\n \t* testsuite/27/filebuf.cc: Put output files directly into the\n \tcorrect subdirectory (27).\n@@ -2569,31 +2568,31 @@\n \tresults file, please use this in the future to guarantee filebuf\n \tpositioning accuracy.\n \t* testsuite/27/filebuf-2.tst: Same.\n-\t\n+\n 1999-04-21  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/fstream.tcc (filebuf::xsputn): Add.\n \t* bits/std_fstream.h: Declare.\n-\t\n+\n \t* src/basic_file.cc (__basic_file::open): Add O_CREAT to open\n \tcalls using ios_base::trunc.\n \n \t* bits/sstream.tcc (streambuf::overflow): Fix crasher.\n-\t\n+\n \t* testsuite/make_check_libfree++ (LOG_FILE): Ugh. Another fix.\n \t* testsuite/27/27stringstream.cc: Same.\n \t* testsuite/27/27stringbuf.cc: More tweaks.\n \t* testsuite/27/27filebuf-2.txt: Remove.\n \n \t* testsuite/27/27filebuf-1.tst: Append, to force byte size over\n \tBUFSIZE so that overflows/underflow can be tested with default\n-\tbuffer setting.  \n+\tbuffer setting.\n \t* testsuite/27/27filebuf-1.tst: Add.\n \n \t* testsuite/*/*: Remove pre-pended chapter names, as they\n \tduplicate the chapter info contained in the enclosing directory\n \tanyway.\n-\t\n+\n 1999-04-20  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/streambuf.tcc (streambuf::xsputn): Re-implement to conform\n@@ -2608,17 +2607,17 @@\n \n \t* testsuite/make_check_libfree++ (LOG_FILE): More c-c-c-changes.\n \t* testsuite/24/24iterator.cc: Add/Fixes for DEBUG_ASSERT.\n-\t* testsuite/27/27stringstream.cc: Same. \n+\t* testsuite/27/27stringstream.cc: Same.\n \t* testsuite/27/27stringbuf.cc: Same.\n \t* testsuite/27/27istringstream_formatted.cc: Same.\n \t* testsuite/27/27filebuf.cc: Same.\n-\t\n+\n \t* bits/locfacets.h: Remove specializations for messages<char> and\n \tmessages<wchar_t> ctors. Same for moneypunct. Not required, not used.\n \t* src/locale.cc: Remove definitions for above.\n-\t* src/misc-inst.cc: Revert, take out iomanip.h include. \n+\t* src/misc-inst.cc: Revert, take out iomanip.h include.\n \t* bits/std_iomanip.h: Tweak, format.\n-\t\n+\n 1999-04-19  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/loccore.h: Format, move inline.\n@@ -2636,7 +2635,7 @@\n \t* bits/sstream.tcc: Tweak.\n \n \t* std/iostream: Put __ioinit inside macro guards.\n-\t\n+\n \t* src/stlinst.cc: Delete and move to . . .\n \t* src/stl-inst.cc: New file, plus wrapping in namespace std.\n \t* src/Makefile.in: Change.\n@@ -2646,16 +2645,16 @@\n \t* testsuite/make_check_libfree++: Efficiently format for minimal\n \tspace. Enforce stricter execution tests by enabling\n \t-DDEBUG_ASSERT.\n-\t\n+\n 1999-04-16  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* docs/text/RELEASE-NOTES: Fix include typo.\n \n-\t* src/Makefile.am (headers): Add istream.tcc. \n-\t* src/Makefile.in (headers): Add istream.tcc. \n+\t* src/Makefile.am (headers): Add istream.tcc.\n+\t* src/Makefile.in (headers): Add istream.tcc.\n \n \t* ltconfig, ltmain.sh, libtool: Update to libtool-1.2g.\n-\t\n+\n 1999-04-16  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/locfacets.tcc (num_get::do_get(long)): Finish roughing in.\n@@ -2681,17 +2680,17 @@\n \n \t* C++STYLE: Add ChangeLog guidelines for member functions.\n \n-\t* doc/* : Delete.  \n+\t* doc/* : Delete.\n \t* BADNAMES, BUGS, C++STYLE, CHECKLIST, COPYING,\n \tDESIGN, HEADER_POLICY, PROBLEMS, RELEASE-NOTES, TODO: Moved into\n \tdocs/text and made less strident.\n-\t\n+\n \t* bits/fstream.tcc: Change non-standard ctor to match Sun's sematics.\n \t* bits/std_fstream.h: Same.\n \t* src/ios.cc: Same.\n \n-\t* bits/locfacets.h: Touch. \n-\t\n+\t* bits/locfacets.h: Touch.\n+\n 1999-04-15  Ulrich Drepper  <drepper@cygnus.com>\n \n \t* math/cexp.c (cexp): Use NAN instead of nan(\"\")."}, {"sha": "274f223b3621cc3cda0335c479e20b72f46cac19", "filename": "libstdc++-v3/ChangeLog-2000", "status": "modified", "additions": 362, "deletions": 362, "changes": 724, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2000?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -20,7 +20,7 @@\n \tReported by  Brad Garcia  <bgarcia@laurelnetworks.com>\n \t* src/string-inst.cc (_S_find): Use generic template.\n \t* include/bits/string.tcc (_S_find): Remove specializations\n-\t\n+\n 2000-12-22  Benjamin Kosnik  <bkoz@fillmore.redhat.com>\n \n \tAttempt to make locale visible in gdb.\n@@ -38,7 +38,7 @@\n \t* src/codecvt.cc (codecvt<char...>): Remove locale::id definition.\n \t(codecvt<wchar_t...>): Same.\n \t* src/localename: And here.\n-\t\n+\n \t* include/bits/localefwd.h (_Count_ones): Change _S_count to _M_count.\n \tSame for _M_halfcount.\n \n@@ -52,7 +52,7 @@\n \t* configure.in: Change GLIBCPP_ENABLE_SHADOW to\n \tGLIBCPP_ENABLE_CHEADERS.\n \t* acinclude.m4 (GLIBCPP_ENABLE_SHADOW): Change to\n-\tENABLE_CHEADERS.  C_INCLUDE_DIR defaults to c_std from c. \n+\tENABLE_CHEADERS.  C_INCLUDE_DIR defaults to c_std from c.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* include/c: Move to ...\n@@ -61,7 +61,7 @@\n \t* include/c_shadow: ...here.\n \t* include/c: Repopulate, with simple headers.\n \t* docs/html/configopts.html: Adjust docs.\n-\t\n+\n 2000-12-21  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* acinclude.m4, configure.in, mkcheck.in,\n@@ -98,8 +98,8 @@\n \t* libmath/sqrtf.c: Likewise.\n \t* libmath/sqrtl.c: Likewise.\n \t* libmath/mathconf.h: Remove <complex.h> and \"complex-stub.h\"\n-\t#inclusion. \n-\t\n+\t#inclusion.\n+\n \t* include/bits/std_complex.h (sqrt<>): Define primary template.\n \t(complex<>): Remove sqrt friend declarations.\n \n@@ -132,7 +132,7 @@\n \t(OPT_LDFLAGS): And here.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2000-12-19  Curtis Janssen  <cljanss@ca.sandia.gov>\n \n \t* src/ios.cc (ios_base::_M_grow_words(int ix)): Fix libstdc++/1089.\n@@ -177,7 +177,7 @@\n 2000-12-19  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* include/bits/std_complex.h (complex<float>::operator-=): Fix\n-\tthinko. \n+\tthinko.\n \n 2000-12-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -213,7 +213,7 @@\n \t(GLIBCPP_CHECK_COMPLEX_MATH_SUPPORT): Add it back here.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2000-12-14  Benjamin Kosnik  <bkoz@fillmore.redhat.com>\n \n \t* configure.in (CXX): Exit out if mknumeric_limits fails.\n@@ -231,7 +231,7 @@\n \t* include/bits/locale_facets.h (ctype<char>): Remove throw specs not in\n \tbase class signature.\n \t* config/os/*/bits/ctype_inline.h (is): Same.\n-\t\n+\n 2000-12-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/os/generic/bits/ctype_base.h (ctype_base): Consistency\n@@ -262,7 +262,7 @@\n \tctype_base::mask type an integer type, not an enum.\n \t* config/os/gnu-linux/bits/ctype_inline.h (is): Implement correctly.\n \t* include/bits/locale_facets.h: Tweaks.\n-\t\n+\n \t* include/bits/ios_base.h: Formatting tweaks.\n \n \t* docs/html/17_intro/C++STYLE: Add.\n@@ -278,7 +278,7 @@\n \t* aclocal.m4: Regnerate.\n \t* acconfig.h: Add more defines.\n \t* config.h.in: Regenerate.\n-\t\n+\n 2000-12-12  Angela Marie Thomas <angela@cygnus.com>\n \n \t* configure.in: Fix case for host-x-linux\n@@ -432,7 +432,7 @@\n \t* libmath/complex-stub.h: Remove forward declaration of functions\n \tmentioned above.\n \n-\t* include/bits/std_complex.h(tan, tanh): Define primary templates. \n+\t* include/bits/std_complex.h(tan, tanh): Define primary templates.\n \t(complex<>): Remove friend declarations for tan<> and tanh<>.\n \t* src/complex.cc(tan, tanh): Remove specializations.\n \n@@ -466,7 +466,7 @@\n \t* config/os/aix/bits/ctype_noninline.h (ctype): Same.\n \n \t* include/bits/locale_facets.h: Tweak.\n-\t\n+\n 2000-12-06  Benjamin Kosnik  <bkoz@kredhat.com>\n \n \t* include/bits/locale_facets.h (ctype): Remove _Ctype_nois and\n@@ -485,20 +485,20 @@\n \t* config/os/bsd/netbsd/bits/ctype_noninline.h (ctype): Same.\n \t* config/os/bsd/freebsd/bits/ctype_noninline.h (ctype): Same.\n \t* src/locale-inst.cc: Clean instantiations.\n-\t* src/locale.cc (ctype<char>): Add definitions here. \n+\t* src/locale.cc (ctype<char>): Add definitions here.\n \t(ctype<wchar_t>::_M_wmask): Move definitions here.\n-\t\n+\n \t* config/os/generic/bits/ctype_inline.h (ctype<char>::is):\n \tImplement in a generic way, with only \"C\" functionality and no\n \tknowlege of the target os.\n \t* config/os/generic/bits/os_defines.h: Change comments to C++ style.\n \t* testsuite/22_locale/ctype_char_members.cc (test01): Add tests.\n-\t\n+\n \t* include/bits/codecvt.h (ctype_byname): Remove specializations,\n \tas not required.\n \t* include/bits/localefwd.h (codecvt_byname): And here.\n \t* src/codecvt.cc: Remove codecvt_byname specializations.\n-\t\n+\n \t* include/c/bits/std_cstdio.h: Include c++config.h.\n \n 2000-12-06  Phil Edwards  <pme@sources.redhat.com>\n@@ -515,7 +515,7 @@\n \n 2000-12-06  Richard Earnshaw  <rearnsha@arm.com>\n \n-\t* configure.target (*-*-freebsd, *-*-netbsd): Correct paths to \n+\t* configure.target (*-*-freebsd, *-*-netbsd): Correct paths to\n \tos_include_dir.\n \n 2000-12-05  Jeffrey A Law  <law@cygnus.com>\n@@ -530,7 +530,7 @@\n \n \t* src/Makefile.am (libstdc++.INC): Revert for libjava builds.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-12-05  Benjamin Kosnik  <bkoz@haight.redhat.com>\n \n \t* acinclude.m4 (EXTRA_CXX_FLAGS): And here.\n@@ -541,7 +541,7 @@\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* config.h.in: Regenerate.\n-\t\n+\n 2000-12-05  Benjamin Kosnik  <bkoz@fillmore.redhat.com>\n \n \t* acinclude.m4: Change up to reflect new directory organization.\n@@ -598,16 +598,16 @@\n 2000-12-05  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* src/complex.cc (pow): Remove definitions for explicit\n-\tspecializations. \n+\tspecializations.\n \t* libmath/mathconf.h: Remove declarations for c_log, c_logf,\n-\tc_logl. \n+\tc_logl.\n \t* libmath/complex-stub.h: Remove declarations for cpow, cpowf,\n-\tcpowl. \n+\tcpowl.\n \t* libmath/cpow.c: Remove.\n \t* libmath/cpowf.c: Remove.\n \t* libmath/cpowl.c: Remove.\n \t* libmath/Makefile.am (EXTRA_LONG_DOUBLE_yes): Remove c_logl,\n-\tcpowl, \n+\tcpowl,\n \t(EXTRA_DIST): Remove c_log, c_logf, carg, cargf.\n \t* libmath/Makefile.in: Regenarate.\n \t* libmath/c_log.c: Remove\n@@ -685,7 +685,7 @@\n \t(c_shadow_headers): Split up, deal with conditional usage in a\n \tsane manner.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-11-29  Phil Edwards  <pme@sources.redhat.com>\n \n \tSync with the documentation from wwwdocs.\n@@ -753,15 +753,15 @@\n \t* include/bits/c++config (__GLIBCPP__): Update.\n \t* docs/17_intro/RELEASE-NOTES: Update.\n \t* docs/status.html: Update, remove bogus autotools disinformation.\n-\t\n+\n 2000-11-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* tests_flags.in (LTCXX): Change CXX_FLAG to CXXFLAGS.\n \n \t* testsuite/22_locale/ctor_copy_dtor.cc: Adjust formatting.\n \t* testsuite/27_io/istream_extractor_arith.cc (test11): New\n \ttestcase, based on libstdc++/90.\n-\t\n+\n 2000-11-27  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n         * config/cpu/arm/bits/atomicity.h (__exchange_and_add): Add\n@@ -770,15 +770,15 @@\n         (__compare_and_swap): Likewise.\n         (__always_swap): Likewise.\n         (__test_and_set): Likewise.\n-\t\n+\n         * config/cpu/powerpc/bits/atomicity.h: Replace '__ATOMICITY_INLINE'\n         with 'inline'.\n         (__exchange_and_add): Add __volatile__ to asm.\n         (__atomic_add): Likewise.\n         (__compare_and_swap): Likewise.\n         (__always_swap): Likewise.\n         (__test_and_set): Likewise.\n-\t\n+\n 2000-11-27  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* tests_flags.in: Update documentation to reflect the change\n@@ -791,14 +791,14 @@\n \n 2000-11-26  David Billinghurst  <David.Billinghurst@riotinto.com>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n         * mkcheck.in: Add exe extension to printnow executable, abstract\n \tout call to this with TIMER_COMMAND.\n \t* configure.target (l_glibcpp_cxxflags): Add cygwin support.\n \t* acinclude.m4 (GLIBCPP_CHECK_CTYPE_SUPPORT): Correct paths.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2000-11-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/27_io/istream_unformatted.cc (test05): Fixup.\n@@ -809,17 +809,17 @@\n \tconfiguring. More fixes for 'make clean'.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2000-11-26  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n-\t* libmath/Makefile.am (EXTRA_LONG_DOUBLE_yes): Remove cabsl.c \n+\t* libmath/Makefile.am (EXTRA_LONG_DOUBLE_yes): Remove cabsl.c\n \t* libmath/Makefile.in: Regenerate.\n \t* libmath/cabs.c: Remove.\n \t* libmath/cabsf.c: Likewise.\n \t* libmath/cabsl.c: Likewise.\n \t* libmath/complex-stub.h: Remove declarations for cabs*.\n \n-\t* acinclude.m4: Remove check for cabs*. \n+\t* acinclude.m4: Remove check for cabs*.\n \t* aclocal.m4: Regenerate.\n \n \t* Makefile.in: Regenerate.\n@@ -828,7 +828,7 @@\n \n \t* tests_flags.in: New file. Split out of ...\n \t* mkcheck.in: ... this. Move flags computation into\n-\ttests_flags.in. \n+\ttests_flags.in.\n \t* configure.in: Add support for tests_flags.\n \t* confiigure: Regenerate.\n \n@@ -842,12 +842,12 @@\n \tlibmath/mathconf.h: Change C9X references to refer to C99.\n \n 2000-11-25  Benjamin Kosnik  <bkoz@redhat.com>\n-            Richard Earnshaw  <rearnsha@arm.com> \n+            Richard Earnshaw  <rearnsha@arm.com>\n \n \t* src/Makefile.am (INCLUDES): Remove unconditional use of\n \t_GNU_SOURCE and _ISOC99_SOURCE macros.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-11-24  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* testsuite/22_locale/codecvt_wchar_t_char.cc (main): Add\n@@ -894,7 +894,7 @@\n 2000-11-22  Richard Henderson  <rth@redhat.com>\n \n \t* config/os/bsd/bits/ctype_inline.h (is): Fix order of expressions.\n-\t\n+\n 2000-11-22  Phil Edwards  <pme@sources.redhat.com>\n \n \t* porting.texi:  Minor tweaks to vocabulary.\n@@ -929,7 +929,7 @@\n \t* src/Makefile.in: Regenerate.\n \t* libsupc++/Makefile.am (headers): Remove new.h\n \t* libsupc++/Makefile.in: Regenerate.\n-\t* include/std/strstream: Remove.\t\n+\t* include/std/strstream: Remove.\n \t* include/backward/strstream.h: Replace with...\n \t* include/bits/std_strstream.h: ...this. Move.\n \t* include/backward/complex.h: Remove SGIisms.\n@@ -955,7 +955,7 @@\n         __off64_t and __ssize_t.\n \t* config/os/solaris/solaris2.5/bits/os_defines.h: For now, use the\n \tsame configuration as above.\n-\t\n+\n 2000-11-21  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* acinclude.m4 (AC_LC_MESSAGES): Check for locale.h.\n@@ -988,15 +988,15 @@\n \n \t* testsuite/23_containers/vector_ctor.cc (test02): Add test from\n \tlibstdc++/102.\n-\t\n+\n 2000-11-20  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* include/bits/c++config, include/bits/ios_base.h,\n \tinclude/bits/std_streambuf.h: Correct spelling of \"deprecated\".\n \n 2000-11-19  Mark Mitchell  <mark@codesourcery.com>\n \n-\t* libsupc++/exception_support.cc (__throw_bad_cast): Name it \n+\t* libsupc++/exception_support.cc (__throw_bad_cast): Name it\n \t__cxa_bad_cast under the new ABI.\n \t(__throw_bad_typeid): Name it __cxa_bad_typeid under the new ABI.\n \t* libsupc++/pure.cc (__pure_virtual): Name it __cxa_pure_virtual\n@@ -1020,7 +1020,7 @@\n \tto handle the case (const_iterator,iterator) and\n \t(iterator,const_iterator), thus fixing libstdc++/737 and the like.\n \t* testsuite/23_containers/map_operators.cc (test02): New tests.\n-\t\n+\n 2000-11-17  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Correct last patch\n@@ -1048,7 +1048,7 @@\n \n 2000-11-16  Mark Mitchell  <mark@codesourcery.com>\n \n-\t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Make \n+\t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Make\n \t--enable-cstdio=stdio the default.  Disable wide character support\n \tin that event.\n \t* configure.in: Move GLIBCPP_ENABLE_C_MBCHAR after\n@@ -1062,7 +1062,7 @@\n \t* libmath/Makefile.in: Likewise.\n \t* libsupc++/Makefile.in: Likewise.\n \t* src/Makefile.in: Likewise.\n-\t\n+\n 2000-11-16  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* config/c_io_stdio.h: Include stddef.h.\n@@ -1086,7 +1086,7 @@\n \t* libmath/Makefile.in: Likewise.\n \t* libsupc++/Makefile.in: Likewise.\n \t* src/Makfile.in: Likewise.\n-\t\n+\n 2000-11-15  Mark Mitchell  <mark@codesourcery.com>\n \n \t* mkcheckin.in: Move check for bash version 2 later in the file.\n@@ -1097,7 +1097,7 @@\n \t* include/bits/string.tcc (basic_string::_Rep::_S_max_size):\n \tLikewise.\n \t(basic_string::_Rep::_S_terminal): Likewise.\n-\t\n+\n 2000-11-15  David Billinghurst  <David.Billinghurst@riotinto.com>\n \n \t* mkcheck.in:  Add function size_command() for irix.\n@@ -1111,7 +1111,7 @@\n \tbuild issues.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n \t* include/bits/c++config (__GLIBCPP__): Set release version for 2.91.\n \n 2000-11-14  Phil Edwards  <pme@sources.redhat.com>\n@@ -1153,7 +1153,7 @@\n         * acinclude.m4 (GLIBCPP_CHECK_WCHAR_T_SUPPORT): Add test for\n         libiconv.a providing wchar_t support functions.\n \t* aclocal.m4: Regenerate.\n-\t\n+\n 2000-11-12  Loren J. Rittle  <ljrittle@acm.org>\n \n         * acinclude.m4 (GLIBCPP_ENABLE_ATOMICITY): Handle FreeBSD.\n@@ -1167,7 +1167,7 @@\n \tCODESET from _C_legacy::CODESET if using shadow headers.\n \t* src/Makefile.am: Add new files.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-11-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* include/c/bits/std_cmath.h (abs): Change extern \"C\" declaration\n@@ -1293,14 +1293,14 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* testsuite/22_locale/codecvt_unicode_wchar_t.cc: Likewise.\n \t* testsuite/22_locale/ctor_copy_dtor.cc: Likewise.\n \t* testsuite/22_locale/ctype_wchar_t_members.cc: Likewise.\n-\t\n+\n \t* mkcheck.in: Fix echoing of -rpath option.\n-\t\n+\n \t* config/os/irix/bits/atomicity.h (_Atomic_word): Make it a\n \tsigned type.\n \t(__exchange_aand_add): Adjust accordingly.\n \t(__atomic_add): Likewise.\n-\t\n+\n 2000-11-02  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* src/locale.cc: Match orderings for static members.\n@@ -1313,7 +1313,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t(cos, cosh, sin, sinh): Define primary templates.\n \n \t* src/complex.cc (cos<>, cosh<>, sin<>, sinh<>): Comment out\n-\tdefinitions. \n+\tdefinitions.\n \n 2000-11-01  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n@@ -1326,7 +1326,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/c_io_stdio.h: New file.\n \t* config/c_io_stdio.cc: New file.\n \t* docs/configopts.html: Modify documentation.\n-\t\n+\n 2000-10-31  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* include/c/bits/std_cwctype.h: Add more undefs.\n@@ -1339,19 +1339,19 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t(exp, log, log10): Define primary templates.\n \n \t* src/complex.cc (exp<>, log<>, log10<>): Comment out\n-\tspecializations. \n+\tspecializations.\n \n 2000-10-31  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* include/bits/std_complex.h: Remove duplicate definition of conj.\n \t* include/c/bits/std_cwctype.h: Consistent placement of undefs.\n-\t\n+\n 2000-10-31  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* src/complex.cc (arg, polar): Comment out specializations.\n \n \t* include/bits/std_complex.h (complex<>): Remove arg<> friend\n-\tdeclaration. \n+\tdeclaration.\n \t(arg): Define primary template.\n \t(polar): Likewise.\n \t(conj): Likewise.\n@@ -1362,7 +1362,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tmacro definitions of iswxxx functions, which might be brought in\n \tby <wctype.h>.  Those macro definitions prevent build on some\n \tlinux-based systems.\n-\t\n+\n \t* include/bits/std_complex.h (complex<>): Comment out friend\n \tdeclarations of abs<> specializations.\n \t(abs): Define primary template.\n@@ -1407,7 +1407,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* include/c/bits/std_cerrno.h: Same.\n \t* include/c/bits/std_cwchar.h: Same.\n \t* include/c/bits/std_cassert.h: Same.\n-\t* include/c/bits/std_cctype.h: Same.\t\n+\t* include/c/bits/std_cctype.h: Same.\n \t* include/c/bits/std_cstddef.h: And here.\n \t* include/c/bits/std_cstdlib.h: And here.\n \t* include/c/bits/std_cstdio.h: Same.\n@@ -1417,13 +1417,13 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tfrom here...\n \t(_ISOC99_SOURCE): And this one....\n \t* config/os/gnu-linux/bits/os_defines.h: ...to here.\n-\t\n+\n \t* include/bits/codecvt.h (codecvt<_InternT, _ExternT,\n \t__enc_traits>::do_in): Don't cast to const, this is a bug in glibc\n \tprior to 2.2.\n \t(codecvt<_InternT, _ExternT, __enc_traits>::do_out): Same.\n \t* include/c/bits/std_cwchar.h: Add using declarations for mbstate_t.\n-\t\n+\n 2000-10-30  Steven King  <sxking@uswest.net>\n \n \t* include/bits/codecvt.h: Add cast.\n@@ -1445,7 +1445,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-10-30  Mark Mitchell  <mark@codesourcery.com>\n \n-        * acinclude.m4 (GLIBCPP_CHECK_COMPLEX_MATH_SUPPORT): Check \n+        * acinclude.m4 (GLIBCPP_CHECK_COMPLEX_MATH_SUPPORT): Check\n         for cabs, cabsf, and cabsl, too.\n         * aclocal.m4: Regenerated.\n         * config.h.in: Likewise.\n@@ -1479,7 +1479,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/Makefile.in: Regenerate.\n \t* libsupc++/Makefile.am: Ditto.\n \t* libsupc++/Makefile.in: Regenerate.\n-\t\n+\n 2000-10-29  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* configure.in: Simplify use of AC_CACHE_SAVE.  Put linked files\n@@ -1499,29 +1499,29 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-10-29  Mark Mitchell  <mark@codesourcery.com>\n \n-\t* config/c_io_libio.cc (basic_file<char>::__basic_file): \n+\t* config/c_io_libio.cc (basic_file<char>::__basic_file):\n \tDon't pass a NULL _IO_wide_data to _IO_no_init when\n \t_GLIBCPP_USE_WCHAR_T is not defined.\n-\t* config/c_io_libio.h (_IO_codecvt): Don't declare when \n+\t* config/c_io_libio.h (_IO_codecvt): Don't declare when\n \t_GLIBCPP_USE_WCHAR_T is not defined.\n-\t* config/c_io_libio_codecvt.c: Don't compile it \n+\t* config/c_io_libio_codecvt.c: Don't compile it\n \twhen _GLIBCPP_USE_WCHAR_T is not defined.\n \t* include/bits/codecvt.h (codecvt<_InternT, _ExternT, __enc_traits):\n-\tDon't define this specialization when _GLIBCPP_USE_WCHAR_T \n+\tDon't define this specialization when _GLIBCPP_USE_WCHAR_T\n \tis not defined.\n \t* include/bits/locale_facets.h (<bits/std_cwctype.h>): Don't\n-\tinclude it when _GLIBCPP_USE_WCHAR_T is not defined. \n+\tinclude it when _GLIBCPP_USE_WCHAR_T is not defined.\n \t* src/codecvt.cc (__enc_traits::_S_max_size): Don't define\n \twhen _GLIBCPP_USE_WCHAR_T is not defined.\n \t* src/localename.cc (locale::_Impl::_M_construct_collate):\n-\tDon't call wide-character functions when _GLIBCPP_USE_WCHAR_T is \n+\tDon't call wide-character functions when _GLIBCPP_USE_WCHAR_T is\n \tnot defined.\n \t(locale::_Impl::_M_construct_ctype): Likewise.\n \t(locale::_Impl::_M_construct_monetary): Likewise.\n \t(locale::_Impl::_M_construct_numeric): Likewise.\n \t(locale::_Impl::_M_construct_time): Likewise.\n \t(locale::_Impl::_M_construct_messages): Likewise.\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_ENABLE_ATOMICITY): Handle IRIX.\n \t* aclocal.m4: Regenerated.\n \t* configure: Likewise.\n@@ -1531,7 +1531,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t(__off64_t): Likewise.\n \t(__ssize_t): Likewise.\n \t(_G_USING_THUNKS): Define to zero.\n-\t\n+\n 2000-10-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* src/string-inst.cc (basic_string<C>::npos): Explicitly\n@@ -1546,16 +1546,16 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tGLIBCPP_CHECK_CTYPE_SUPPORT.\n \t(GLIBCPP_CHECK_STDLIB_SUPPORT): Add.\n \t* aclocal.m4: Regenerate.\n-\t* configure.in: And here. \n+\t* configure.in: And here.\n \tAdd call to GLIBCPP_CHECK_STDLIB_SUPPORT.\n \t* configure: Regenerate.\n-\t\n+\n 2000-10-26  David Edelsohn  <edelsohn@gnu.org>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_STDLIB_DECL_AND_LINKAGE_2): New macro.\n \t(GLIBCPP_CHECK_MATH_SUPPORT): Use it to test for strtold.\n-\t\n-2000-10-26  Phil Edwards  <pme@sources.redhat.com>  \n+\n+2000-10-26  Phil Edwards  <pme@sources.redhat.com>\n \t    David Edelsohn  <dje@watson.ibm.com>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_LINKER_FEATURES): Comment out\n@@ -1572,8 +1572,8 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* include/backward/streambuf.h: New file.\n \n-2000-10-26  David Edelsohn  <dje@watson.ibm.com> \n-        \n+2000-10-26  David Edelsohn  <dje@watson.ibm.com>\n+\n \t* config/os/aix/bits/ctype_inline.h (is): Use __OBJ_DATA directly.\n         * config/os/aix/bits/ctype_noninline.h (do_tolower): Fix typo.\n         * config/os/aix/bits/os_defines.h: Add AIX defines.\n@@ -1613,7 +1613,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* mkcheck.in (top_srcdir): New variable.\n \t(INC_PATH): Set the path to the backward and ext directories\n \tcorrectly.\n-\t\n+\n 2000-10-25  Phil Edwards  <pme@sources.redhat.com>\n \n         * configure.in:  Check for gconv.h.\n@@ -1642,7 +1642,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tinto the mix.\n \n \t* mkcheck.in (MAX_MEM_USAGE): Bump up to 3072. Strangely enough,\n-\tthis works. \n+\tthis works.\n \n 2000-10-24  Levente Farkas  <lfarkas@mindmaker.hu>\n \n@@ -1689,7 +1689,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* include/c_std/bits/std_cassert.h: Tweaks.\n \n \t* mkcheck.in: Simplify.\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_ENABLE_LONG_DOUBLE): Simplify.\n \t(GLIBCPP_ENABLE_LONG_LONG): Same.\n \t* aclocal.m4: Regenerate.\n@@ -1717,7 +1717,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* include/c_std/bits/std_cstdlib.h: abort, exit comment.\n \t* include/c_std/stdlib.h: Same here.\n-\t\n+\n 2000-10-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/21_strings/compare.cc (test01): Add using declarations.\n@@ -1726,7 +1726,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* include/c_std/bits/std_cassert.h: Tweaks.\n \n \t* mkcheck.in: Simplify.\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_ENABLE_LONG_DOUBLE): Simplify.\n \t(GLIBCPP_ENABLE_LONG_LONG): Same.\n \t* aclocal.m4: Regenerate.\n@@ -1754,7 +1754,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* include/c_std/bits/std_cstdlib.h: abort, exit comment.\n \t* include/c_std/stdlib.h: Same here.\n-\t\n+\n 2000-10-21  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_LONG_DOUBLE): New macro.\n@@ -1765,7 +1765,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* include/c_std/bits/std_cmath.h: Fixup.\n \t* include/c/bits/std_cmath.h: Fixup.\n \t* docs/configopts.html: Add docs.\n-\t\n+\n \t* docs/links.html: Add links to defects list, standards FAQ.\n \n \t* testsuite/21_strings/ctor_copy_dtor.cc (test01): Disable tests\n@@ -1776,16 +1776,16 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-10-21  Theodore Papadopoulo <Theodore.Papadopoulo@sophia.inria.fr>\n \n-    \t* libsupc++/exception.cc: Use namespace std.\n-    \t* libsupc++/new: DITTO.\n-    \t* libsupc++/new_op.cc: DITTO.\n-    \t* libsupc++/new_opnt.cc: DITTO.\n-    \t* libsupc++/new_opv.cc: DITTO.\n-    \t* libsupc++/new_opvnt.cc: DITTO.\n-    \t* libsupc++/tinfo.cc: DITTO.\n-    \t* libsupc++/tinfo.h: DITTO.\n-    \t* libsupc++/vec.cc: DITTO.\n-    \t* libsupc++/Makefile.am: Blank lines removal.\n+\t* libsupc++/exception.cc: Use namespace std.\n+\t* libsupc++/new: DITTO.\n+\t* libsupc++/new_op.cc: DITTO.\n+\t* libsupc++/new_opnt.cc: DITTO.\n+\t* libsupc++/new_opv.cc: DITTO.\n+\t* libsupc++/new_opvnt.cc: DITTO.\n+\t* libsupc++/tinfo.cc: DITTO.\n+\t* libsupc++/tinfo.h: DITTO.\n+\t* libsupc++/vec.cc: DITTO.\n+\t* libsupc++/Makefile.am: Blank lines removal.\n \n 2000-10-21  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -1816,7 +1816,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tsize_t __refs, bool __has_name = false, string __name): Move\n \tdefault argument...\n \t* include/bits/localefwd.h: Here.\n-\t\n+\n 2000-10-18  Chip Salzenberg  <chip@valinux.com>\n \n         * libio/libio.h (_IO_USER_LOCK): Define.\n@@ -1832,7 +1832,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* src/Makefile.am: Remove bogus --tag CC.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \t* include/bits/locale_facets.tcc (use_facet): Simplify.\n \t* include/bits/locale_facets.h (use_facet<ctype<char> >): Correct\n \tuse_facet declaration. Replace 'const ctype<T>' with ctype<T>.\n@@ -1856,7 +1856,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* libsupc++/Makefile.in: Regenerate.\n \t* src/Makefile.am: Duplicate code.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_ENABLE_RELIBGCC): Take this out.\n \t* aclocal.m4: Regenerate.\n \t* configure.in: And here.\n@@ -1899,10 +1899,10 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* libsupc++/Makefile.am: Same.\n \t(glibcppinstalldir): Adjust.\n \t* libsupc++/Makefile.in: Regenerate.\n-\t* Makefile.am: Remove gxx_include_dir. Remove INCLUDE. \n+\t* Makefile.am: Remove gxx_include_dir. Remove INCLUDE.\n \t* Makefile.in: Regenerate.\n \t* docs/configopts.html: Add descriptions of flags.\n-\t\n+\n 2000-10-11  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* libsupc++/Makefile.am: Use it.\n@@ -1927,7 +1927,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* shadow: Remove directory.\n \t* shadow/*: De-populate.\n-\t\n+\n 2000-10-11  Phil Edwards  <pme@sources.redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_LINKER_FEATURES):  Comment out\n@@ -1943,24 +1943,24 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* libsupc++: Here.\n \t* libsupc++/Makefile.am (glibcppinstall_HEADERS): Install headers.\n \t(glibcppinstalldir): New.\n-\t\n+\n \t* src/Makefile.am (c_base_headers): New.\n \t(c_shadow_headers): New\n \t(c_headers): New.\n \t(myinstallheaders): Correct install issues.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \t* Makefile.am (CSHADOW_INCLUDES): Simplify.\n \t* Makefile.in: Regenerate.\n \t* acinclude.m4 (GLIBCPP_ENABLE_SHADOW): Add c_include_dir.\n \t* aclocal.m4: Regenerate.\n \t* mkcheck.in (SRC_DIR): Use it.\n-\t\n+\n \t* include/bits/std_stdexcept.h: And here.\n \t* include/bits/std_ios.h: Change std_exception.h to exception.\n \t* src/locale.cc: And here.\n \t* src/locale-inst.cc: And here.\n-\t\n+\n \t* include/bits/valarray_array.h: And here.\n \t* include/bits/stl_alloc.h: And here.\n \t* include/bits/stl_algobase.h: And here.\n@@ -1986,7 +1986,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* std/exception: Remove.\n \n \t* libio/_G_config.h (__need_ptrdiff_t): Add.\n-\t\n+\n \t* libsupc++/include/new: Change stddef.h to cstddef.\n \t* libsupc++/tinfo.h: Change limits.h to climits.\n \t* libsupc++/pure.cc: Comment out _GNU_LIBRARY_ bits, as this\n@@ -2023,7 +2023,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tMove GLIBCPP_INCLUDES, TOPLEVEL_INCLUDES, LIBMATH_INCLUDES,\n \tLIBIO_INCLUDES, CSHADOW_INCLUDES up Makefile hierarchy.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \t* include/c: New directory.\n \t* include/c/bits/(std_cassert.h, std_cctype.h, std_cerrno.h,\n \tstd_cfloat.h, std_climits.h, std_clocale.h, std_cmath.h,\n@@ -2034,7 +2034,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* include/c_std: New directory.\n \t* include/c_std/bits/*: Populate from...\n \t* shadow: ...here. Remove directory.\n-\t\n+\n 2000-10-08   Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* libsupc++/Makefile.am (INCLUDES): Add toplevel include directory.\n@@ -2044,7 +2044,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* acinclude.m4 (GLIBCPP_CHECK_OS): Link to os_defines.h.\n \t* aclocal.m4: Regenerate.\n \t* config/os/*/bits/os_defines: Adjust copyright dates.\n-\t\n+\n 2000-10-08  Phil Edwards  <pme@sources.redhat.com>\n \n \t* include/bits/c++config:  Include <bits/os_defines.h>\n@@ -2058,24 +2058,24 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/os/solaris/solaris2.6/bits/os_defines.h:  Ditto.\n \t* config/os/solaris/solaris2.7/bits/os_defines.h:  Ditto.\n \n-2000-10-07  David Edelsohn  <dje@watson.ibm.com> \n-\t\n+2000-10-07  David Edelsohn  <dje@watson.ibm.com>\n+\n \t* config/os/aix/bits/atomicity.h: New file.\n \n 2000-10-07  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n-        \n+\n         * acinclude.m4: Remove CPU_FLAGS\n         * libio/Makefile.am: Here too.\n         * Makefile.am: Here too.\n-        \n+\n         * src/Makefile.am (CONFIG_INCLUDES): Remove.\n         (INCLUDES): Remove CONFIG_INCLUDES.\n         (cpu_headers): Remove.\n         (myinstallheaders): Remove cpu_headers.\n         (generated_headers): Rename to build_headers.\n         (build_headers): Add atomicity.h, ctype_base.h,\n         ctype_specializations.h.\n-        \n+\n         * config/os: New directory.\n         * config/aix: Move to...\n         * config/bsd: Move to...\n@@ -2091,7 +2091,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* acinclude.m4: Remove CPU_FLAGS\n \t* libio/Makefile.am: Here too.\n \t* Makefile.am: Here too.\n-\t\n+\n \t* src/Makefile.am (CONFIG_INCLUDES): Remove.\n \t(INCLUDES): Remove CONFIG_INCLUDES.\n \t(cpu_headers): Remove.\n@@ -2109,7 +2109,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/newlib: Move to...\n \t* config/solaris: Move to...\n \t* config/os/*: Here.\n-\t\n+\n 2000-10-06  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* src/Makefile.am: Remove OPTIMIZE_CXXFLAGS, WARN_CXXFLAGS,\n@@ -2123,7 +2123,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* libsupc++/Makefile.am: Use top-level OPTIMIZE_CXXFLAGS,\n \tWARN_CXXFLAGS, CONFIG_CXXFLAGS as part of local AM_CXXFLAGS.\n \t* libsupc++/Makefile.in: Regenerate.\n-\t\t\n+\n \tChange math to libmath.\n \t* math: Move to libmath, delete.\n \t* libmath: New directory.\n@@ -2136,11 +2136,11 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* Makefile.am (SUBDIRS): Add libmath.\n \t* Makefile.in: Regenerate.\n \t* README (file): Change name.\n-\t\n+\n 2000-10-06  Benjamin Kosnik  <bkoz@cygnus.com>\n             Richard Henderson  <rth@cygnus.com>\n \t    Alexandre Oliva  <aoliva@redhat.com>\n-\t\n+\n \t* libsupc++: New directory.\n \t* libsupc++/*: Populate.\n \t* libsupc++/Makefile.am (INCLUDES): Add -I../../gcc for\n@@ -2153,7 +2153,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/Makefile.in: Regenerate.\n \t* libio/Makefile.am: Remove extraneous, confusing bits.\n \t* libio/Makefile.in: Regenerate.\n-\t\n+\n 2000-10-05  Brent Verner  <brent@rcfile.org>\n \n         * bits/istream.tcc [basic_istream::get(basic_streambuf&)]: Removed\n@@ -2190,7 +2190,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits: Move to include/bits, delete.\n \t* ext: Move to include/ext, delete.\n \t* std: Move to include/std, delete.\n-\t\n+\n \t* src/complex.cc: Adjust include of mathconf.\n \n \t* mkc++config (BASE_H): Add include.\n@@ -2202,7 +2202,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* math/Makefile.in: Regenerate.\n \t* libio/Makefile.am (INCLUDES): Add glibcpp_includedir.\n \t* libio/Makefile.in: Regenerate.\n-\t\n+\n 2000-10-04  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* libio/_G_config.h : Re-guard the __mbstate_t declaration.\n@@ -2214,15 +2214,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* docs/documentation.html: Rename links for clarity.\n \n \t* src/Makefile.am (headers): Remove unistd.h, wrap_unistd.h. Add\n-\tfcntl.h, iolibio.h, libioP.h, pthread.h, iconv.h. \n+\tfcntl.h, iolibio.h, libioP.h, pthread.h, iconv.h.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-10-02  Steven King  <sxking@uswest.net>\n \n         * mkcshadow: Fixed script to output proper include guard.\n         * bits/char_traits.h: Cleaned up types in char_traits<char> functions.\n         * libio/_G_config.h: Hacked to make work with shadow heraders.\n-        * shadow/*: Hacked to make shadow headers work. \n+        * shadow/*: Hacked to make shadow headers work.\n \n 2000-10-02  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n@@ -2233,7 +2233,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* acinclude.m4 (GLIBCPP_ENABLE_SHADOW): New macro.\n \t* config/gnu-linux/bits/ctype_base.h (ctype_base): Use it.\n \t* config/gnu-linux/ctype.cc (ctype): Use it.\n-\t\n+\n \t* src/localename.cc (locale::_Impl::_M_replace_categories): Remove\n \tcall to assert.\n \t* src/locale.cc: Explicitly cast mbstate_t to void* in calls to\n@@ -2261,19 +2261,19 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* shadow/bits/wrap_iconv.h: New file.\n \t* shadow/unistd.h: Remove. Useless.\n \t* shadow/bits/wrap_unistd.h: Remove.\n-\t\n+\n \t* src/Makefile.am: Take out machine-ansi.h, add fcntl.h unistd.h.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \t* config/c_io_libio.h (_IO_codecvt): Change to normal C++ decl.\n-\t\n+\n \t* shadow/libio.h: Fix.\n \t* shadow/bits/wrap_libio.h: Fix.\n \n \t* shadow/bits/std_clocale.h: Remove typedef struct construct,\n \twhich will not compile.\n \t* shadow/bits/std_ctime.h: Same.\n-\t\n+\n \t* shadow/pthread.h: New file. Put pthreads types and functions\n \tinto global scope, which is probably not the correct long-term\n \tsolution but has to be done at the moment before libio wrappers\n@@ -2287,7 +2287,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \ttests for compiler features.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n \t* config/c_io_libio.cc: Remove fcntl.h include, as SEEK_SET\n \tredefined.\n \t* libio/libioP.h: Comment out fcntl.h include.\n@@ -2317,7 +2317,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \toverloaded in the std namespace with the shadow headers.\n \t* src/complexl.cc: Same.\n \t* src/complex.cc: Same.\n-\t\n+\n 2000-09-25  Phil Edwards  <pme@sources.redhat.com>\n \n \t* docs/documentation.html:  Add link to...\n@@ -2333,10 +2333,10 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-09-25  Levente Farkas  <lfarkas@mindmaker.hu>\n \n \t* ext/stl_hashtable.h (_M_copy_from): Change __copy to __local_copy.\n-\t\n+\n 2000-09-19  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n-\t* src/localename.cc (locale::_Imp) : Remove typedefs.\t\n+\t* src/localename.cc (locale::_Imp) : Remove typedefs.\n \t* bits/localefwd.h (locale::locale(const locale& __other, _Facet*\n \t__f): Consistency check, call _Imp ctor with reference argument\n \tof 1.\n@@ -2390,7 +2390,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tname, has_name values.\n \t* testsuite/22_locale/ctor_copy_dtor.cc (test01): More tests.\n \t* docs/22_locale/locale.html: New file, more unfinished docs...\n-\t\n+\n 2000-09-14  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* src/locale.cc (locale::name()): Implement.\n@@ -2414,15 +2414,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n         return type.\n \n         * src/Makefile.an (headers): Also install backward/fstream.h.\n-        * src/Makefile.in: Regenerate.\t\n+        * src/Makefile.in: Regenerate.\n \n         * bits/char_traits.h (char_traits<_CharT>::get_state,\n         char_traits<char>::get_state, char_traits<wchar_t>::get_state): Pass\n         argument in by reference, not by value. Uglify to _S_get_state.\n \t(char_traits<*>::__eos): Uglify to _S_eos.\n \t* bits/std_ostream.h (ends(basic_ostream<_CharT, _Traits>& __os)):\n \tChange __eos to _S_eos.\n-\t\n+\n 2000-09-13  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* testsuite/22_locale/static_members.cc: New file.\n@@ -2443,7 +2443,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-09-11  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n-\t* acinclude.m4 (GLIBCPP_CHECK_GNU_MAKE): Remove test != \"0\". \n+\t* acinclude.m4 (GLIBCPP_CHECK_GNU_MAKE): Remove test != \"0\".\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \n@@ -2488,8 +2488,8 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* acinclude.m4: Add bits.\n \t* aclocal.m4: Regenerate.\n \t* configure.in: Add defaults for GLIBCPP_ENABLE_DEBUG.\n-\t* configure: Regenerate.\t\n-\t\n+\t* configure: Regenerate.\n+\n 2000-09-07  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/std_cwctype.h: Remove yesterday's hacks.\n@@ -2498,9 +2498,9 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* bits/stl_tree.h: Make operators !=, == type safe for map, set.\n \t* testsuite/23_containers/set_operators.cc: New file. Should not\n-\tcompile.  \n+\tcompile.\n \t* testsuite/23_containers/map_operators.cc: New file. Ditto.\n-\t\n+\n 2000-09-06  Richard Henderson  <rth@cygnus.com>\n \t    Benjamin Kosnik  <bkoz@cygnus.com>\n \n@@ -2510,12 +2510,12 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/cpu/ia64: New directory.\n \t* config/cpu/ia64/bits: New directory.\n \t* config/cpu/ia64/bits/atomicity.h: New file.\n-\t\n+\n 2000-09-06  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Force glibc_satisfactory\n \tto no, so that libstdc++-v3's libio will be built on glibc-2.2\n-\tsystems. \n+\tsystems.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* */Makefile.in: Regenerate.\n@@ -2541,11 +2541,11 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-08-31  Benjamin Kosnik  <bkoz@cygnus.com>\n \n-\t* bits/locale_facets.tcc (_S_build_float_format): Move ...\t\n-\t* src/locale.cc: Here.\t\t\n+\t* bits/locale_facets.tcc (_S_build_float_format): Move ...\n+\t* src/locale.cc: Here.\n \t* bits/locale_facets.tcc (num_get::_M_extract): Clean up generic\n \tdefinition. Move specialization to ...\n-\t* src/locale.cc: Here.\t\n+\t* src/locale.cc: Here.\n \t* bits/locale_facets.tcc: Move _Format_cache specializations to ...\n \t* src/locale.cc: Here.\n \t* bits/locale_facets.tcc: Move use_facet<ctype> specializations to ...\n@@ -2568,7 +2568,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t(money_base): Add _S_default_pattern, uglify.\n \t* bits/localefwd.h: Add definitions for static members of _Count_ones.\n \t* bits/locale_facets.h: Tweaks.\n-\t* bits/locale_facets.tcc: Tweaks.\t\n+\t* bits/locale_facets.tcc: Tweaks.\n \t* bits/string.tcc: Add definition for npos.\n \t* bits/ios_base.h: Tweaks.\n \t* bits/ios_base.h (ios_base::Init::_M_ios_base_init): Change to\n@@ -2605,19 +2605,19 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/gnu-linux/bits/ctype_base.h (ctype_base): Remove mask\n \ttypedef, instead name enum.\n \t* config/gnu-linux/bits/ctype_specializations.h: Tweak.\n-\t* config/gnu-linux/ctype.cc: Tweak.\t\n+\t* config/gnu-linux/ctype.cc: Tweak.\n \t* testsuite/22_locale/ctype.cc: Tweak.\n-\t\n+\n \t* bits/codecvt.h (__enc_traits): Uglify names.\n-\t\n+\n 2000-08-28  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n-\t* docs/22_locale/codecvt.html: Add more bits, format. \n+\t* docs/22_locale/codecvt.html: Add more bits, format.\n \t* bits/codecvt.h: Add copy ctor, rename types.\n \t* testsuite/22_locale/codecvt_unicode_char.cc: Tweak.\n-\t\n+\n \t* libio/iofwide.c: Tweak.\n-\t\n+\n 2000-08-28  Phil Edwards  <pme@sources.redhat.com>\n \n \t* docs/configopts.html:  Mention new options.\n@@ -2631,15 +2631,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* docs/22_locale/howto.html: Add notes on codecvt implementation.\n \t* docs/22_locale/codecvt.html: New file. In progress.\n-\t\n+\n 2000-08-24  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* acconfig.h: Revert.\n \t* acinclude.m4: Revert.\n \t* libio/_G_config.h: Revert.\n \t* libio/libio.h: Revert.\n-\t\n-2000-08-23  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\t\n+\n+2000-08-23  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* bits/codecvt.h: Tweaks.\n \t* testsuite/22_locale/codecvt_unicode_wchar_t.cc (test01): Fix up\n@@ -2700,7 +2700,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/Makefile.am (INCLUDES): Put $(CSHADOW_INCLUDES) before\n \t$(top_srcdir)\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-08-21  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* bits/codecvt.h: Implement codecvt<wchar_t, char, mbstate_t>. Fix\n@@ -2714,7 +2714,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* testsuite/22_locale/codecvt_wchar_t_cc.cc: New file.\n \t* testsuite/22_locale/codecvt_char_char.cc: New file.\n \t* testsuite/22_locale/codecvt_unicode_char.cc: New file.\n-\t\n+\n 2000-08-21  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n \t* bits/std_cmath.h (std::abs): Overload for int and long.\n@@ -2736,14 +2736,14 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-08-18  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* bits/valarray_meta.h (_Expr<>::shift, _Expr::cshift,\n-\t_Expr<>::apply): Implement. \n+\t_Expr<>::apply): Implement.\n \n 2000-08-18  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* bits/valarray_meta.h (_Expr<>::min, _Expr<>::max): Implement.\n \n \t* bits/valarray_array.h (__valarray_min, __valarray_max): New\n-\tfunction. \n+\tfunction.\n \n 2000-08-17  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -2796,7 +2796,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* libio/cleanup.c: Remove.\n \t* libio/filedoalloc.c (_IO_file_doallocate): Don't call\n \t_IO_cleanup_registration_needed, even if not libc.\n-\t\t\n+\n \t* testsuite/27_io/stringstream.cc (test02): Fix.\n \n 2000-08-14  Brent Verner <brent@rcfile.org>\n@@ -2816,7 +2816,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/std_sstream.h: Same for stringstream and wstringstream.\n \tSame for stringbuf, wstringbuf, istringstream, wistringstream,\n \tostringstream, wostringstream.\n-\t\n+\n \t* testsuite/26_numerics/valarray.cc: Add test.\n \n 2000-08-14  Zack Weinberg  <zack@wolery.cumb.org>\n@@ -2846,7 +2846,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t(_M_really_overflow): Same here.\n \n \t* testsuite/21_strings/inserters_extractors.cc (test05): Tweaks.\n-\t\n+\n 2000-08-08  Benjamin Kosnik  <bkoz@cygnus.com>\n \t    Ulrich Drepper  <drepper@cygnus.com>\n \n@@ -2894,12 +2894,12 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* libio/libioP.h: Same.\n \t* libio/wfiledoalloc.c: Same.\n \t* libio/wgenops.c: Same.\n-\t\n+\n 2000-07-28  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* acinclude.m4: Include ../libtool.m4.\n         * aclocal.m4, configure: Rebuilt.\n-\t\n+\n 2000-07-26  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_LINKER_FEATURES):  Test for GNU ld\n@@ -2931,11 +2931,11 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* acinclude.m4: Some cleanups...\n \t* aclocal: Regenerated.\n \t* configure: Regenerated.\n-\t\n+\n \t* src/Makefile.am (CXXLINK): Add -Wl,-01 to the link line for\n \toptimizing/adapting the hash table using GNU ld.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-07-24  H.J. Lu  <hjl@gnu.org>\n \n         * src/Makefile.am (LIBIO_INCLUDES): Set to -I$(top_srcdir)/libio\n@@ -2983,13 +2983,13 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tdirectory...\n \t(check-install): And here.\n \t* Makefile.in: Regenerate.\n-\t\n+\n 2000-07-22  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \tLine up with libstdc++-v2 version of valarray.\n \t* bits/valarray_array.h (__valarray_product): Make inline.\n \t* src/valarray-inst.cc (__valarray_product): Remove explicit\n-\tinstantiation. \n+\tinstantiation.\n \n 2000-07-21  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n@@ -3091,7 +3091,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/std_fstream.h: Same.\n \n \t* bits/basic_string.h: Tweaks.\n-\t\n+\n 2000-07-19  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* docs/18_support/howto.html:  Update.\n@@ -3101,10 +3101,10 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tInternal consistency checks.....\n \t* bits/ios_base.h: Change _M_locale_ios to _M_ios_locale.\n \t* src/ios.cc: Same.\n-\t\n+\n \t* bits/basic_ios.h: Change _M_fctype_ios to _M_ios_fctype.\n \t* bits/basic_ios.tcc: Same.\n-\t\n+\n \t* bits/std_streambuf.h: Change _M_locale_buf to _M_buf_locale.\n \tChange _M_fctype_buf to _M_buf_fctype.\n \t* bits/fstream.tcc: Same.\n@@ -3171,13 +3171,13 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tc++threads.h instead of copying.\n \t* acinclude.m4 (GLIBCPP_ENABLE_THREADS): Do link here.\n \tTweaks.\n-\t\n+\n \t* config/c_io_libio.cc (__basic_file::_M_open_mode): Consolidate.\n \t* bits/basic_file.h: Declare.\n \n \t* mkcheck.in (TESTS_FILE): Use -v instead of --version.\n \n-2000-07-07   brent verner  <brent@rcfile.org> \n+2000-07-07  brent verner  <brent@rcfile.org>\n \n \t* testsuite/27_io/istream_unformatted.cc (test05): New test.\n \n@@ -3197,15 +3197,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* docs/25_algorithms/howto.html:  Ditto.\n \t* docs/26_numerics/howto.html:  Ditto.\n \n-2000-07-05  brent verner  <brent@rcfile.org> \n+2000-07-05  brent verner  <brent@rcfile.org>\n \n \t* testsuite/27_io/ifstream_members.cc (test01): Add tests.\n \t* testsuite/27_io/ofstream_members.cc (test01): Add tests.\n \t* config/c_io_libio.cc (__basic_file::open): Unset\n \t~_IO_DELETE_DONT_CLOSE.\n \n 2000-07-05  Zack Weinberg  <zack@wolery.cumb.org>\n-\t\n+\n         * bits/gslice_array.h, bits/indirect_array.h, bits/mask_array.h,\n         bits/slice_array.h, bits/std_valarray.h, bits/valarray_meta.h:\n         Do not paste anything after 'operator' keyword.\n@@ -3217,7 +3217,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-07-03  Brendan Kehoe  <brendan@zen.org>\n \n \t* bits/std_complex.h: Fix parens. Format.\n-\t\n+\n 2000-07-03  scott snyder  <snyder@fnal.gov>\n \n         * bits/locale_facets.tcc (_M_extract): Only figure out the base\n@@ -3238,7 +3238,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-07-01  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \t    Ulrich Drepper  <drepper@purist.soma.redhat.com>\n \n-\tSync libio to glibc-2.2 current CVS. \n+\tSync libio to glibc-2.2 current CVS.\n \t* libio/_G_config.h: New file.\n \t* libio/wfileops.c: New file.\n \t* libio/wfiledoalloc.c: New file.\n@@ -3257,18 +3257,18 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/Makefile.in: Regenerate.\n \n \t* math/cargl.c: Remove underscores.\n-\t\n+\n \t* bits/locale_facets.h: Tweaks. Start adding iconv details\n \tand notes.\n \t* bits/locale_facets.tcc: Tweaks.\n \t* bits/std_cwchar.h: Tweaks.\n-\t\n+\n 2000-06-29  scott snyder  <snyder@fnal.gov>\n \n         * bits/concept_checks.h\n         (__less_then_comparable_requirement_violation): Only check for <.\n \t* testsuite/25_algorithms/lower_bound.cc: New file.\n-\t\n+\n 2000-06-29  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* testsuite/27_io/ostream_manip.cc (test02): Add tests.\n@@ -3342,7 +3342,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/concept_checks.h: New file.\n \t* bits/container_concepts.h: New file.\n \t* bits/sequence_concepts.h: New file.\n-\t\n+\n 2000-06-27  H.J. Lu  <hjl@gnu.org>\n             Loren J. Rittle  <ljrittle@acm.org>\n \n@@ -3357,11 +3357,11 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* bits/string.tcc (string::rfind): Fix.\n \t* testsuite/21_strings/rfind.cc: New file.\n-\t\n+\n 2000-06-26  Anthony Williams  <anthony@anthonyw.cjb.net>\n \n \t* testsuite/21_strings/ctor_copy_dtor.cc: Fixed logic error.\n-\t\n+\n 2000-06-26  Branko Cibej  <branko.cibej@hermes.si>\n \n         * testsuite/27_io/filebuf_members.cc (test_01): Fixed typos.\n@@ -3372,15 +3372,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n         * testsuite/27_io/ostream_inserter_arith.cc: Renamed\n \t  __TEST_NUMPUT_VERBOSE to TEST_NUMPUT_VERBOSE.  Define\n \t  TEST_NUMPUT_VERBOSE only if DEBUG_ASSERT.\n-\t\n+\n 2000-06-23  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* bits/fstream.tcc (basic_filebuf::basic_filebuf(fd)): Use it.\n \t(basic_filebuf::close): Use it.\n \t* bits/std_fstream.h (basic_filebuf): Remove default arguments for\n \tfilebuf ctor.\n \t(basic_filebuf): Add _M_fileno_based data member.\n-        As reported by brent verner <brent@rcfile.org> \n+        As reported by brent verner <brent@rcfile.org>\n \t* testsuite/27_io/filebuf_members.cc: New file.\n \t* testsuite/27_io/filebuf_members-1.tst: New file.\n \n@@ -3392,7 +3392,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-06-23  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n             Ulrich Drepper  <drepper@cygnus.com>\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_CHECK_MATH_SUPPORT): Add -D_GNU_SOURCE, so\n \tthat all the freaky stuff like sincos will be around...\n \n@@ -3444,7 +3444,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* bits/string.tcc: Fix find.\n \t* testsuite/21_strings/find.cc: Patch.\n-\t\n+\n 2000-06-20  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* docs/install.html: Update where to get automake, where to get\n@@ -3462,14 +3462,14 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* configure: Regenerate.\n \t* libio/Makefile.in: Regenerate.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-06-19  Russell Davidson  <russell@ehess.cnrs-mrs.fr>\n \n \t* testsuite/27_io/istream_extractor_arith.cc: Patch.\n \t* bits/locale_factets.tcc: Tweak.\n-\t\n+\n 2000-06-19  Raja R Harinath  <harinath@cs.umn.edu>\n-\t\n+\n \t* src/Makefile.am: change @WERROR@ to $(WERROR) so that this can\n \tbe overridden on the command line for individual files.\n \n@@ -3504,15 +3504,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tNew. Merge both old compiler bug checks for complex into this.\n \n 2000-06-19  Anthony Williams  <anthony@anthonyw.cjb.net>\n-\t\n+\n \t* testsuite/21_strings/find.cc: Empty strings can be found at all\n \tpositions. Modified.\n \n 2000-06-19  Branko Cibej  <branko.cibej@hermes.si>\n \n-        * testsuite/20_utilities: New directory.\t\n+        * testsuite/20_utilities: New directory.\n         * testsuite/20_utilities/auto_ptr.cc: New file.\n-\t\n+\n 2000-06-14  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n       \t* src/Makefile.am (string_sources): Simplify, assuming that with\n@@ -3523,7 +3523,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t-Wl,--gc-sections.\n \t* src/string-inst.cc: Remove macro blocks.\n \t* mkcheck.in (CXX_FLAG): Add bits here.\n-\t\n+\n \t* src/string-inst.cc: Remove iostream-related string instantiations.\n \t* src/misc-inst.cc: Add here.\n \n@@ -3532,7 +3532,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* aclocal.m4: Regenerate.\n \t* configure.in: Change up.\n \t* configure: Regenerate.\n-\t\n+\n 2000-06-13  Steven King  <sxking@uswest.net>\n \n         * acinclude.m4:  Fixup some of the builtin math tests and add tests for\n@@ -3546,15 +3546,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n         (modf(float, float*)): Remove reference to _C_legacy.\n \n 2000-06-13  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n        \t* acinclude.m4 (enable_cshadow_headers): Change CSHADOWFLAGS to\n \t_GNU_SOURCE instead of _ISOC9X_SOURCE, as _GNU_SOURCE is the\n \tsuperset, and already defined at top level.\n         * aclocal.m4: Regenerate.\n         * configure: Regenerate.\n \n \t* docs/17_intro/contribute.html: Plead with people to use -cp.\n-\t\n+\n 2000-06-13  Anthony Williams  <anthony@anthonyw.cjb.net>\n \n \t* testsuite/23_containers/bitset_ctor.cc: Qualify reverse wth std::.\n@@ -3574,14 +3574,14 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t_M_position() - use implicit conversion to streamoff instead\n \n 2000-06-13  Thomas Holenstein  <thomas@hex.ch>\n- \n+\n         * bits/stl_iterator.h: Added inline to operators == to >=.\n \n 2000-06-13  Brent Verner <brent@rcfile.org>\n \n \t* bits/streambuf.tcc: repaired _S_copy_streambufs()\n \t* testsuite/27_io/ostream_inserter_other.cc (test03): Added testcase.\n-\t\n+\n 2000-06-12  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* bits/locale_facets.h (ctype<wchar_t>): Remove unnecessary data\n@@ -3641,15 +3641,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-06-02  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* bits/locale_facets.h: Tweak.\n-\t* src/locale.cc (codecvt<wchar_t>): Tweak. \n-\t\n-\t* bits/locale_facets.h (_Format_cache): _S_ecks -> _S_x. \n+\t* src/locale.cc (codecvt<wchar_t>): Tweak.\n+\n+\t* bits/locale_facets.h (_Format_cache): _S_ecks -> _S_x.\n \t* bits/locale_facets.tcc (num_get<char>::_M_extract): Fix for hex.\n \n \t* bits/basic_string.h: Move data member up.\n \t* src/string-inst.cc: Fix instantiations.\n \t* bits/string.tcc: Fix types.\n-\t\n+\n 2000-06-02  Anthony Williams  <anthony@anthonyw.cjb.net>\n \n \t* testsuite/21_strings/replace.cc (test01): Qualify find with std::.\n@@ -3666,34 +3666,34 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* acconfig.h: Remove _GLIBCPP_HAS_WCHAR_MIN_MAX.\n \t* bits/limits_generic.h: Remove.\n \t* src/gen-num-limits.cc: Same.\n-\t\n+\n \t* src/locale.cc: Tweaks.\n \n \t* bits/char_traits.h: Tweaks.\n \n-2000-05-31  Russell Davidson  <russell@ehess.cnrs-mrs.fr> \n+2000-05-31  Russell Davidson  <russell@ehess.cnrs-mrs.fr>\n \n \t* bits/locale_facets.tcc (num_get<char>::_M_extract): Fix signage,\n \texponent, scientific formatting issues.\n \t* testsuite/27_io/istream_extractor_arith.cc (test09): Add tests.\n-\t\n+\n 2000-05-31  Branko Cibej  <branko.cibej@hermes.si>\n \n         * bits/limits_generic.h (numeric_limits<wchar_t>): Use WCHAR_MIN\n         and WCHAR_MAX instead of WCHART_MIN and WCHART_MAX.\n \n 2000-05-31  Nathan Myers  <ncm@cantrip.org>\n- \n+\n        * docs/thanks.html: edit own credits\n \n 2000-05-31  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* bits/generic_shadow.h: Remaining _C_Shadow -> _C_shadow fix.\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_ENABLE_LONG_LONG): Add strtoull checks...\n \n \t* mkcheck.in (SH_FLAG): Add in -Wl,--rpath -Wl,$LIB_PATH. Tweaks.\n-\t\n+\n 2000-05-31 Steven King <sxking@uswest.net>\n \n         * shadow/time.h: fix typo\n@@ -3716,19 +3716,19 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* inclosure: Change to...\n \t* mkinclosure: This.\n-\tFix paths to bash.\t\n+\tFix paths to bash.\n \t* mkcshadow: Fix paths to bash.\n-\t\n+\n \t* src/Makefile.am: Tweaks. Do cshadow header trickery at build time.\n \t* src/Makefile.in: Regnerate.\n \t* acinclude.m4 (GLIBCPP_COMPILER_VERSION): Fix typo.\n \t(GLIBCPP_ENABLE_SHADOW): Do a less gross hack.\n \t* aclocal.m4: Regenerate.\n-\t* mkcheck.in (INC_PATH): Tweak. \n-\t\n+\t* mkcheck.in (INC_PATH): Tweak.\n+\n \t* configure.in: Enable long long by default.\n \t* configure: Regenerate.\n-\t\n+\n \t* mkcheck.in (LIB_PATH): Revert.\n \n 2000-05-24   Nathan \"I don't write ChangeLog Entries\" Myers  <ncm@cantrip.org>\n@@ -3739,7 +3739,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/cpu/i386/bits/atomicity.h (__compare_and_swap): Delete\n \t'cmpxchgl' asm.\n \t* acinclude.m4 (GLIBCPP_CHECK_CPU): Enable i386.\n-\t\n+\n 2000-05-24  Loren J. Rittle  <ljrittle@acm.org>\n \n         * backward/alloc.h (__default_alloc_template): Only expose\n@@ -3769,20 +3769,20 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/c++config.h: Rename to ...\n \t* bits/c++config: This.\n \t* mkc++config: Adjust.\n-\t\n+\n \t* m4: Remove.\n \t* m4/lc_message.m4: Merge into acinclude.m4.\n \t* m4/mathfcts.m4: Same.\n \t* m4/stringfcts.m4: Same.\n \t* acinclude.m4: Add here.\n \t* configure: Regnerate.\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_CHECK_COMPILER_VERSION): Remove\n \tOPTLEVEL. Add FMTFLAGS.\n \t* aclocal.m4: Regenerate.\n \t* src/Makefile.am (AC_CXXFLAGS): Take out OPTLEVEL, as this has\n \tbeen disabled due to higher-level Makefiles running amuck over\n-\tthis bit, and add in FMTFLAGS so that formatting is clear. \n+\tthis bit, and add in FMTFLAGS so that formatting is clear.\n \t* src/Makefile.in: Regenerate.\n \t* configure: Regenerate.\n \n@@ -3853,12 +3853,12 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \ts/SWAMP/LEGACY/g\n \ts/_Shadow/_shadow/g\n \n-2000-05-18  Anthony Williams  <anthony@anthonyw.cjb.net> \n+2000-05-18  Anthony Williams  <anthony@anthonyw.cjb.net>\n \n \t* bits/locale_facets.tcc (num_get::_M_extract): Change char* to\n \tconst char*.\n \t* src/string-inst.cc (string::_S_find): Same.\n-\t\n+\n 2000-05-18  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_SHADOW): Change to\n@@ -3868,7 +3868,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* configure.in: Touch.\n-\t\n+\n 2000-05-17  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* mkcheck.in: Enable shared library testing.\n@@ -3930,7 +3930,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tbits/std_ciso646.h\n \n 2000-05-16  Nathan C. Myers  <ncm@cantrip.org>\n-       \n+\n        * mkcshadow: fix typo s/_C_Swamp_/_C_Swamp/.\n \n 2000-05-16  Phil Edwards  <pme@sourceware.cygnus.com>\n@@ -3982,7 +3982,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* bits/std_cmath.h: Tweaks.\n \t* math/mathconf.h: Tweaks and fixes for HP-UX 11.\n-\t(sqrtf): Define away iff !builtin and !in <math.h>. \n+\t(sqrtf): Define away iff !builtin and !in <math.h>.\n \t(sinf): Same.\n \t(cosf): Same.\n \t(fabsf): Same.\n@@ -4010,7 +4010,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* acinclude.m4 (GLIBCPP_CHECK_CPU): Change powerpc bits to\n \t-mcpu=powerpc.\n \t* src/Makefile.am: Disable ENABLE_CXX_FLAGS stuff for the moment.\n-\t\n+\n \t* config/generic/bits/ctype_specializations.h (ctype<char>::is):\n \tMake more generic.\n \n@@ -4019,7 +4019,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/bsd/bits/ctype_base.h (ctype_base): New.\n \t* config/bsd/bits/ctype_specializations.h: New.\n \t* acinclude.m4 (GLIBCPP_CHECK_CTYPE): Add bsd tests.\n-\t\n+\n 2000-05-09  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* acinclude.m4:  New macro, GLIBCPP_ENABLE_CXX_FLAGS.\n@@ -4041,12 +4041,12 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-05-09  Vadim Egorov  <egorovv@mailandnews.com>\n \t    Benjamin Kosnik  <bkoz@gnu.org>\n \t    Nathan Myers  <ncm@cantrip.org>\n-\t    Dietmar Kuehl  <dietmar_kuehl@yahoo.com> \n+\t    Dietmar Kuehl  <dietmar_kuehl@yahoo.com>\n \n         * bits/streambuf.tcc (basic_streambuf::xsgetn): Fix uflow case.\n \t(basic_streambuf::xsputn): Make consistent.\n \t* testsuite/27_io/filebuf.cc: Add tests.\n-\t\n+\n 2000-05-08  Steven King  <sxking@uswest.net>\n \n         * bits/char_traits.h: Use wchar_t utility functions for\n@@ -4122,7 +4122,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n         * mkcheck.in: Rely on exit status instead of the presence of a\n         core file.  Added comments on how/where to save core and exe\n         files.  Move shell wildcards outside quotes and fix core path.\n-\t\n+\n 2000-04-27  scott snyder  <snyder@fnal.gov>\n \n         * src/misc-inst.cc: Explicitly instantiate ifstream and ofstream\n@@ -4149,12 +4149,12 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* math/Makefile.am (EXTRA_LONG_DOUBLE_yes): Add all the long\n \tversions to this as copysignl is needed anyway for these targets.\n \t* math/Makefile.in: Regenerate.\n-\t\n+\n \t* bits/streambuf.tcc (streambuf::xsgetn): Tweak.\n \t* bits/fstream.tcc (underflow): Cast to libio types.\n \t* bits/basic_file.h (seekoff): Fixes for alpha: use __c_streamoff.\n \t* config/c_io_libio.cc (seekoff): And here.\n-\t\n+\n 2000-04-24  Loren J. Rittle  <ljrittle@acm.org>\n \n         * mkcheck.in: Report compiler version used for test.  Find\n@@ -4165,7 +4165,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n         * config/generic/ctype.cc (do_toupper): Remove dependence on\n         non-portable/non-existent lookup table.\n         (do_tolower): Same.\n-\t\n+\n 2000-04-24  Nathan Myers  <ncm@cantrip.org>\n \n \t* src/string-inst.cc: More fixing.\n@@ -4176,11 +4176,11 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/std_sstream.h: And here.\n \t* bits/string.tcc: And here.\n \n-2000-04-24  Felix Natter <fnatter@gmx.net> \n+2000-04-24  Felix Natter <fnatter@gmx.net>\n \n \t* docs/17_intro/howto.html: Add bits.\n \t* docs/17_intro/porting-howto.html: New file.\n-\t\n+\n 2000-04-24  Branko Cibej  <branko.cibej@hermes.si>\n \n         * acinclude.m4(GLIBCPP_CHECK_WCHAR_T_SUPPORT): Expand\n@@ -4204,7 +4204,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tinitialization.\n \t* testsuite/27_io/ios_manip_fmtflags.cc (test02): Add test for\n \tbool formatting.\n-\t\n+\n 2000-04-19  Nathan Myers  <ncm@cantrip.org>\n \n \t* src/string-inst: consolidate _S_create,\n@@ -4218,13 +4218,13 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* src/Makefile.am (AC_CXXFLAGS): Activate debugging code, again.\n \tAdd flags for specialized rules dealing with instantiations.\n-\t\n+\n \t* src/string-inst.cc: Add instantiations missing from shared\n \tlibraries--see stringEQ, stringCONSC.\n \t* src/Makefile.am (wstring_sources): Add.\n \t(string_sources): Same.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \t* stl/*: Integrate contents of this directory into top-level\n \tdirectories.\n \t* ext/bvector hash_map hash_set rope ropeimpl.h slist\n@@ -4249,12 +4249,12 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/Makefile.am (sources): Take out stl directory.\n \t* mkcheck.in (SRC_DIR): And here.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-04-18  Levente Farkas  <lfarkas@mindmaker.hu>\n \n \t* stl/bits/stl_function.h: Add bits so that const and non-const\n \tboth work.\n-\t\n+\n 2000-04-18  scott snyder  <snyder@fnal.gov>\n \n         * stl/bits/stl_map.h (class map): Fix default for _Alloc template\n@@ -4314,10 +4314,10 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-04-18  Nathan Myers  <ncm@cantrip.org>\n \n \t* bits/basic_string.h: Remove \"inline\" from member _S_find.\n-\t\n+\n \t* src/string-inst.cc: Rewrite to reflect non-inline template\n \tinstantiations in string.tcc.\n-\t\n+\n \t* src/stringADDCS.cc, stringADDPS.cc, stringADDSC.cc, stringADDSP.cc,\n \tstringADDSS.cc, stringBIST.cc, stringBOST.cc, stringCHTR.cc,\n \tstringEQPS.cc, stringEQSP.cc, stringEQSS.cc, stringEXTRA.cc,\n@@ -4332,7 +4332,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tBenjamin Kosnik  <bkoz@haight.constant.com>\n \t* src/Makefile.am: Modify to reflect above.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-04-17  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* docs/install.html (--enable-libstdcxx-v3): Clean up install docs.\n@@ -4345,7 +4345,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/threads-posix.h: Consistency with stl_config.h.\n \n \t* mkcheck.in (CXX_FLAG): Add DDEBUG_ASSERT back in.\n-\t\n+\n 2000-04-13  Loren J. Rittle  <ljrittle@acm.org>\n \n         * mknumeric_limits: Rename generic type template parameter name\n@@ -4368,7 +4368,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tGLIBCPP_ENABLE_RELIBGCC for --enable-libstdcxx-v3 flag.\n \t* configure: Regenerate.\n \t* mkcheck.in: Deal with NAMESPACES.\n-\t\n+\n 2000-04-05  Petter Urkedal  <petter@matfys.lth.se>\n \n         * src/cmath.cc: New file...\n@@ -4379,22 +4379,22 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n         old definitions.\n \n 2000-04-04  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* acinclude.m4 (GCC_OBJDIR): Tweaks\n \n 2000-04-03  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_CHECK_CPU): Add arm configure bits.\n \t* config/cpu/arm: New directory.\n \n \tJesper Skov  <jskov@redhat.com>\n \t* config/cpu/arm/atomicity.h: New file.\n-\t\n+\n 2000-03-31  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* stl/bits/stl_config.h: Make _STL_THREADS depend on _REENTRANT.\n \tRemove unused bits. Clean.\n-\t\n+\n 2000-03-29  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* testsuite/25_algorithms: New directory.\n@@ -4422,10 +4422,10 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tmistake.\n \n \t* bits/std_fstream.h (filebuf::is_open): Check for _M_file before\n-\tattempting calls to it. \n+\tattempting calls to it.\n \t* bits/fstream.tcc (ctors): Don't call _M_init_filebuf in\n \tctors. Instead, call _M_init_filebuf ...\n-\t(open): Here, as suggested by 27.8.1.3.\t\n+\t(open): Here, as suggested by 27.8.1.3.\n \t* src/ios.cc (ios_base::Init::Init()): Clean up default filebufs\n \tproperly when initializing cout/cin/cerr.\n \n@@ -4442,7 +4442,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/std_climits.h (_CPP_CLIMITS): Fix typo.\n \n 2000-03-27  Chris Faylor  <cgf@cygnus.com>\n-\t\n+\n \t* configure.in: Remove setting of CXX if canadian cross.\n \t* configure: Regenerate.\n \n@@ -4451,7 +4451,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/sstream.tcc: Optimize.\n \t* bits/basic_string.h(string::append): Don't inline.\n \t* bits/string.tcc: Move out-of-line.\n-\t\n+\n 2000-03-27  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* acinclude.m4:  (GLIBCPP_CHECK_COMPILER_VERSION)  When using <2.96,\n@@ -4470,11 +4470,11 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t  not installed.\n \t* docs/faq/index.txt:  Regenerate.\n \n-2000-03-24  Alexandre Oliva  <oliva@lsd.ic.unicamp.br> \n+2000-03-24  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* src/Makefile.am (libio_headers_install): Fix.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-03-24  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* docs/17_intro/RELEASE-NOTES: Fix typos.\n@@ -4500,13 +4500,13 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-03-22  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* bits/sstream.tcc (seekoff): Fix for gptr() null cases.\n-\tReturn newoff. \n+\tReturn newoff.\n \t* bits/fstream.tcc (seekoff): Sync.\n \t(seekpos): Sync.\n \t* testsuite/27_io/ostream_unformatted.cc: New file.\n \t* testsuite/27_io/stringbuf.cc: Fix.\n \t* testsuite/27_io/istream_unformatted.cc (test04): Fix.\n-\t\n+\n \t* config/newlib/bits/ctype_base.h (ctype_base): Fix.\n \t* config/newlib/ctype.cc (ctype): Change __ctype -> _ctype_.\n \n@@ -4534,7 +4534,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tare compiling natively.\n \n \t* libio/*: Update to CVS libio from egcs.\n-\t\n+\n 2000-03-21  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* docs/download.html:  Document use of -z9 for CVS.\n@@ -4543,14 +4543,14 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-03-21  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/slice_array.h: Rename generic type template parameter name\n-\t'_T' to '_Tp'. \n+\t'_T' to '_Tp'.\n \t* bits/mask_array.h: Ditto\n \n-2000-03-20  Benjamin Kosnik  <bkoz@cygnus.com>\t\n+2000-03-20  Benjamin Kosnik  <bkoz@cygnus.com>\n \n         * *: Change copyright holder from \"Cygnus Solutions\" to \"Free\n \tSoftware Foundation, Inc.\"\n-\t\n+\n \t* docs/configopts.html: Explain what \"hella versions\" means.\n \t* docs/install.html: Some tweaks--nice job on this Phil.\n \t* docs/documentation.html: Add a direct link to configuration options.\n@@ -4577,43 +4577,43 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-03-18  Petter Urkedal  <petter@matfys.lth.se>\n             Benjamin Kosnik  <bkoz@gnu.org>\n-\t\n+\n         * acinclude.m4 (GLIBCPP_CHECK_COMPLEX_SUPPORT): Move code for main\n         to the right place.\n         * aclocal.m4: Regenerate.\n         * configure: Regenerate.\n \n 2000-03-16  Benjamin Kosnik  <bkoz@cygnus.com>\n             scott snyder  <sss@karma.fnal.gov>\n-\t\n+\n \t* config/c_io_libio.h: Add __c_lock.\n \t* config/threads-no.h: Same here.\n \t* config/threads-posix.h: Add __mutext_type typedef.\n-        * config/c_io_libio.cc: basic_file ctor takes lock arg. \n-        * bits/basic_file.h: Ctor takes lock arg. \n+        * config/c_io_libio.cc: basic_file ctor takes lock arg.\n+        * bits/basic_file.h: Ctor takes lock arg.\n         * bits/std_fstream.h: Add _M_lock.\n         * bits/fstream.tcc: Supply it to basic_file ctor.\n \n \t* mkcheck.in (resultstext): Change [[ to [.\n \n \t* testsuite/27_io/ostream_inserter_char.cc (test06): Tweak.\n \n-\t* bits/locale_facets.h: Tweak.\t\n+\t* bits/locale_facets.h: Tweak.\n \n \t* stl/bits/stl_config.h: Fix defines.\n-\t\n+\n 2000-03-16  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* mkcheck.in (INC_PATH): Add paths from cpu_include_dir to find\n \tatomicity.h\n \t* configure: Regenerate.\n \t* aclocal.m4: Regnerate.\n-\t\n+\n 2000-03-16  Nathan Myers  <ncm@zembu.com>\n \n \t* bits/string.tcc: Add MT support.\n \t* bits/basic_string.h: Same.\n-\t\n+\n 2000-03-16  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* configure.in:  Make --enable-namespaces and -libgcc-rebuild=../..\n@@ -4654,7 +4654,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/cpu/sparc/sparc32: Populate.\n \t* config/cpu/sparc/sparc64: Populate.\n \t* config/cpu/sparc/sparc32/atomicity.h: New file.\n-\t* config/cpu/sparc/sparc64/atomicity.h: New file.\t\n+\t* config/cpu/sparc/sparc64/atomicity.h: New file.\n \n \t* src/Makefile.am (myinstallheaders): Add install routines.\n \t* acinclude.m4 (GLIBCPP_CHECK_CPU):Add configuration for the\n@@ -4664,7 +4664,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/default: Adopt glibc naming conventions, and so move to\n \t* config/generic: Here.\n \t* acinclude.m4 (GLIBCPP_CHECK_CTYPE): Modify default case to generic.\n-\t\n+\n 2000-03-15  Bill Thompson  <billt@toast.net>\n \n \t* testsuite/27_io/ostream_inserter_char.cc (test06): Add test.\n@@ -4679,7 +4679,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-03-13  scott snyder  <snyder@fnal.gov>\n \t    Jason Merrill  <jason@cygnus.com>\n-\t\n+\n         * bits/locale_facets.h (class ctype, class ctype<char>, class\n         ctype<wchar_t>): More mask fixes.\n         * testsuite/22_locale/ctype.cc: Test for the problem.\n@@ -4688,7 +4688,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* acconfig.h: Add bits.\n \t* configure.in: Move AM_PROG_LIBTOOL up in file.\n-\tTweak cross compiling info. \n+\tTweak cross compiling info.\n \t* configure: Regenerate.\n \n \t* mknumeric_limits (XCOMPILE): Echo compilation line for\n@@ -4703,14 +4703,14 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-03-10  scott snyder  <snyder@fnal.gov>\n \n-        * stl/bits/stl_vector.h (_M_assign_aux): Fix for __normal_iterator \n+        * stl/bits/stl_vector.h (_M_assign_aux): Fix for __normal_iterator\n         conversions.\n         * testsuite/23_containers/vector_modifiers.cc (test01): Add a\n         regression test for the problem.\n \n 2000-03-09  Benjamin Kosnik  <bkoz@fidel.cygnus.com>\n-\t\n-\t* testsuite/27_io/streambuf.cc (class testbuf): Same here.\t\n+\n+\t* testsuite/27_io/streambuf.cc (class testbuf): Same here.\n \t* bits/fpos.h: And here.\n \t* bits/std_ostream.h: Same here.\n \t* bits/std_istream.h: Same here.\n@@ -4719,7 +4719,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/sbuf_iter.h (std): Here too.\n \t* bits/std_sstream.h: Make types public.\n \n-\t* src/misc-inst.cc: Use size_t instead of unsigned int. \n+\t* src/misc-inst.cc: Use size_t instead of unsigned int.\n \t* bits/locale_facets.tcc (_S_format): For now, cast to char. I\n \tsuppose this should be ctype::narrow... all the ctype<wchar_t>\n \tstuff needs to be cleaned up.\n@@ -4731,7 +4731,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-03-09  scott snyder  <snyder@fnal.gov>\n \n         * bits/std_cmath.h (modf): Fix pointer overrun.\n-        * testsuite/26_numerics/c_math.cc (test04, main): Add a regression \n+        * testsuite/26_numerics/c_math.cc (test04, main): Add a regression\n         test for the problem.\n \n 2000-03-09  Phil Edwards  <pme@sourceware.cygnus.com>\n@@ -4760,12 +4760,12 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/gnu-linux/ctype.cc (ctype): Change char_type to wchar_t\n \tas per char specialization.\n \t* config/*/ctype.cc: Same.\n-\t\n+\n 2000-03-09  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/locale_facets.h (_Ctype<>::mask): Import from base class\n \t_Ctype_nois<>.  Template base classes are never examinated in\n-\tfirst-phase name-lookup. \n+\tfirst-phase name-lookup.\n \n 2000-03-08  Benjamin Kosnik  <bkoz@gnu.org>\n \n@@ -4776,7 +4776,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* acinclude.m4 (GLIBCPP_CHECK_CTYPE): Add bits for solaris2.5.1.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n \t* config/default/ctype.cc (ctype): Fixup.\n \n 2000-03-07  Benjamin Kosnik  <bkoz@blues.cygnus.com>\n@@ -4795,15 +4795,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tre-work initialization code.\n \t(ctype<wchar_t>): Same.\n \tMove _S_touppper to _M_toupper and initialize in ctor.\n-\tMove _S_tolower  to _M_tolower and initialize in ctor.\t\n+\tMove _S_tolower  to _M_tolower and initialize in ctor.\n \tMove _S_table to _M_ctable and initialize in ctor.\n \t* bits/locale_facets.h (std): And here.\n \t* src/locale.cc (std): Tweak.\n \t* config/gnu-linux/ctype.cc: Change initialization here.\n \t* config/newlib/ctype.cc: And here.\n \t* config/solaris/solaris2.7/ctype.cc: And here.\n \t* config/solaris/solaris2.6/ctype.cc: And here.\n-\t\n+\n \t* bits/localefwd.h: Tweak.\n \t* bits/std_streambuf.h: Tweak formatting.\n \n@@ -4814,7 +4814,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n         * src/misc-inst.cc (basic_iostream<>):  Instantiate.\n \n 2000-03-02  Phil Edwards  <pme@sourceware.cygnus.com>\n-            Kevin Atkinson  <kevinatk@home.com> \n+            Kevin Atkinson  <kevinatk@home.com>\n \n         Initial grab of SGI's strstream implementation with minor\n         modifications.\n@@ -4828,22 +4828,22 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-03-03 2000  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/valarray_meta.h: Fix typo.\n-\t\n-2000-03-02  Alexandre Oliva  <oliva@lsd.ic.unicamp.br> \n+\n+2000-03-02  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \t    Chip Salzenberg  <chip@valinux.com>\n \t    Petter Urkedal  <petter@matfys.lth.se>\n \n \t* src/Makefile.am (myinstallheaders): Hack to avoid\n         `for i in ; do'.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-03-02  Chip Salzenberg  <chip@valinux.com>\n \n         * libio/Makefile.an, math/Makefile.an, src/Makefile.am\n         (LINK): Put quotes around \"$(CC)\" for libtool link mode,\n         so libtool will use \"-B\" options during GCC bootstrap.\n         * */Makefile.in: Regenerate.\n-        \n+\n 2000-03-02  Petter Urkedal  <petter@matfys.lth.se>\n \n         * config/c_io_libio.h: Enclose it all in ::std.\n@@ -4857,17 +4857,17 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* math/cabs.c (__mycabs): Rename to cabs.\n \n 2000-02-29  LLeweLLyn Reese  <llewelly@198.dsl.xmission.com>\n- \n+\n        * bits/basic_string.h: Move declarations of __out_of_range(),\n        __length_error() and accompanying macros ...\n        * bits/exception_support.h: here. (Newly created file).\n        * bits/basic_string.h: #include <bits/exception_support.h>\n        * stl/bits/stl_vector.h: #include <bits/exception_support.h>\n        * src/Makefile.am (headers): Add.\n        * src/Makefile.in: Regenerate.\n-\t\n+\n 2000-02-29  Benjamin Kosnik  <bkoz@cygnus.com>\n-\t\n+\n \t* bits/cpp_type_traits.h: Rename structs so they don't clash with\n \ttype_traits.h.\n \t* bits/valarray_array.h: Synch. Fix typos.\n@@ -4890,7 +4890,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* bits/basic_file.h: Stub out or delete unused bits in this\n \tinterface.\n-\t(filepos_beg): Remove.\t\n+\t(filepos_beg): Remove.\n \t(filepos_cur): Remove.\n \t(filepos_valid): Remove.\n \t* config/c_io_libio.cc: Resynch with the changes to basic_file.\n@@ -4902,10 +4902,10 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-02-29  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* bits/cpp_type_traits.h: New file.\n-\t\n+\n \t* bits/valarray_array.h: Tweak.  #include <bits/cpp_type_traits.h>\n \tImprove array construction.\n-\t(_Array_default_ctor): New dispatcher class. \n+\t(_Array_default_ctor): New dispatcher class.\n \t(__valarray_default_construct): New function.\n \t(_Array_copy_ctor): New dispatcher class.\n \t(__valarray_copy_construct): New function.\n@@ -4926,13 +4926,13 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tstdstreams.cc: Remove.\n \t* libio/floatio.h, iolibio.h, iostdio.h, iostreamP.h: Remove.\n \t* libio/iofflush_u.c: Remove.\n-\t\n-\t* libio/dbz: Remove.  \n-\t* libio/include: Remove.  \n-\t* libio/stdio: Remove.  \n-\t* libio/tests: Remove.  \n+\n+\t* libio/dbz: Remove.\n+\t* libio/include: Remove.\n+\t* libio/stdio: Remove.\n+\t* libio/tests: Remove.\n \t* libio/testsuite: Remove.\n-\t\n+\n \t* config/c_io_libio.cc: Add fcntl.h include for Solaris.\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Add bits.\n@@ -4959,9 +4959,9 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* Makefile.in: Regenerate.\n \t* math/Makefile.am (TOPLEVEL_INCLUDES): And here.\n \t* libio/Makefile.am (TOPLEVEL_INCLUDES): And here.\n-\t\n+\n \t* bits/std_ios.h: Include <bits/c++io.h> instead of libio.\n-\t* bits/fpos.h: And here.\t\n+\t* bits/fpos.h: And here.\n \t* bits/basic_file.h (get_fileno): Move definition from ...\n \t* src/basic_file.cc (std): To here.\n \t* bits/fpos.h: Move types for streamoff, streampos to..\n@@ -4972,9 +4972,9 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tUPPERCASE, ADJUSTFIELD, BASEFIELD, FLOATFIELD, BADBIT, EOFBIT,\n \tFAILBIT, GOODBIT, APP, ATE, BINARY, IN, OUT, TRUNC): New macros to\n \tabstract out bits in ios_base.\n-\t* bits/ios_base.h: Re-macrofy.\t\n+\t* bits/ios_base.h: Re-macrofy.\n \t* src/basic_file.cc : Rename, move to\n-\t* config/c_io_libio.cc: Here. \n+\t* config/c_io_libio.cc: Here.\n \t* config/c_io_libio.h: New file. Include libio.\n \t* bits/c++config.h: Don't define _GLIBCPP_USE_LIBIO.\n \t* configure.in (blddir): Add enabling bits for GLIBCPP_ENABLE_CSTDIO.\n@@ -4985,14 +4985,14 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tunderlying \"C\" io library.\n \t* acinclude.m4 (GLIBCPP_CHECK_LIBIO): Roll functionality into\n \tGLIBCPP_ENABLE_CSTDIO.\n-\t\n+\n \t* configure.in: Add configure bits for cross compiling non-newlib\n \ttargets. .\n \tGLIBCPP_CHECK_COMPILER_VERSION: Take out this test for this\n \ttarget, as we assume g++ support is not the limiting factor.\n-\tGLIBCPP_CHECK_LIBIO: Same, know we don't need libio.  \n+\tGLIBCPP_CHECK_LIBIO: Same, know we don't need libio.\n \t* configure: Regenerate.\n-\t\n+\n 2000-02-22  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* Makefile.am (INTERFACE): Define.\n@@ -5020,7 +5020,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* libio/gen-params (CONFIG_NM): Specifically add in nm as the\n \tdefault CONFIG_NM.\n-\t\n+\n 2000-02-18  Benjamin Kosnik  <bkoz@haight.constant.com>\n             Tom Tromey  <tromey@cygnus.com>\n \n@@ -5032,10 +5032,10 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* Makefile.am (AM_MAKEFLAGS): Don't define MULTISUBDIR, instead\n \thave configure hack it in.\n \t* Makefile.in: Regenerate.\n-\t* acinclude.m4 (GLIBCPP_CXXFLAGS): Tweak wording. \n+\t* acinclude.m4 (GLIBCPP_CXXFLAGS): Tweak wording.\n \tAdd enabling bits for native Cygwin ctypes, and other newlib-based\n \tOses.\n-\t\n+\n 2000-02-17  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\n \n \t* mkc++config (OUT_H): Remove EOF in cygwin.\n@@ -5046,13 +5046,13 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-02-17  Benjamin Kosnik  <bkoz@cygnus.com>\n \n-\t* src/Makefile.am: \n+\t* src/Makefile.am:\n \t(toolexeclib_LTLIBRARIES): Use this instead of lib_LTLIBRARIES.\n \tAdd USE_LIBDIR bits here, not...\n \t* src/Makefile.in: Regenerate.\n \t* Makefile.am: ...here.\n \t* Makefile.in: Regenerate.\n-\t\n+\n 2000-02-17  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* acinclude.m4 (LIBS): Fix typos.\n@@ -5067,7 +5067,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/complex_io.cc: Tweak.\n \t* configure.in: _GLIBCPP_BUGGY_COMPLEX for crosses.\n \t* configure: Regenerate.\n-\t\n+\n \t* config/newlib/ctype.cc: Tweaks.\n \t* config/newlib/bits/ctype_base.h (ctype_base): Set mask to char,\n \tnot const char.\n@@ -5105,17 +5105,17 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config/solaris/solaris2.7/bits/ctype_specializations.h: New file.\n \t* src/Makefile.am (headers): Add ctype_specializations.h.\n \t* src/Makefile.in: Regenerate.\n-\t\n-\tAaron Weiss <weiss@clearway.com> \n+\n+\tAaron Weiss <weiss@clearway.com>\n \t* Makefile.am (AM_MAKEFLAGS): Add NM_FOR_BUILD, NM_FOR_TARGET, and\n \tCONFIG_NM for Solaris builds.\n \t* Makefile.in: Regenerate.\n-\t\n+\n \t* src/locale.cc: Tweak formatting.\n \n 2000-02-15  Benjamin Kosnik  <bkoz@cygnus.com>\n \n-\tJim Parsons  <parsons@clearway.com> \n+\tJim Parsons  <parsons@clearway.com>\n \t* testsuite/27_io/istream_unformatted.cc (test06): Add test.\n \t* bits/istream.tcc (read): Set failbit if !good(). Don't increment\n \tgcount if eof.\n@@ -5125,7 +5125,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* testsuite/27_io/streambuf.cc: Add test.\n \t* bits/streambuf.tcc (xsgetn): Don't test for valid mode.\n \t(xsputn): Same.\n-\t\n+\n \t* src/Makefile.am (AM_CXXFLAGS): Pass down AC_CXXFLAGS,\n \tOPTIMIZE_CXXFLAGS, etc. So --enable-debug and --enable-namespaces\n \twill work correctly, for instance.\n@@ -5134,7 +5134,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/locale_facets.h: Fix merge error.\n \t(num_put::put(unsigned long long): And here.\n \t* mknumeric_limits (trait_name): Same.\n-\t\n+\n 2000-02-15  Chip Salzenberg  <chip@valinux.com>\n \n         Support 'configure --enable-long-long'.\n@@ -5184,7 +5184,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n \t* ctype/config/linux/*: Rename, move to...\n \t* ctype/config/gnu-linux/*: Here.\n-\t\n+\n \tFinish off multilib work.\n \t* configure.in: Don't set CXX if not Canadian cross.\n \t* configure: Regenerate.\n@@ -5200,22 +5200,22 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* ltmain.sh: Remove.\n \t* config.guess: Remove.\n \t* config.sub: Remove.\n-\t\n+\n 2000-02-13  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* configure.in (glibcpp_basedir): Add glibcpp_basedir.\n-\t* Makefile.am: Move mutlilib stuff to src/Makefile.am. \n+\t* Makefile.am: Move mutlilib stuff to src/Makefile.am.\n \t* Makefile.in: Regenerate.\n \t* src/Makefile.am: Add multilib bits.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-02-12  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* configure.in: Clean, add some multilib support.\n \t* configure: Regenerate.\n \t* configure.host: New file.\n \n-\t* acinclude.m4: GLIBCPP_CHECK_LIBIO. Take bits from configure.in and \n+\t* acinclude.m4: GLIBCPP_CHECK_LIBIO. Take bits from configure.in and\n \troll a new function, checks for presence of libio.\n \tGLIBCPP_CHECK_COMPILER_VERSION: Same.\n \tGLIBCPP_CHECK_BUILTIN_MATH_SUPPORT: Same.\n@@ -5224,11 +5224,11 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tGLIBCPP_CHECK_LIBIO: Same.\n \tGLIBCPP_CHECK_CTYPE: Same.\n \t* aclocal.m4: Regenerate.\n-\t* config.h.in: Regenerate.\t\n+\t* config.h.in: Regenerate.\n \n \t* Makefile.am: Tweaks.\n \t* Makefile.in: Regenerate.\n-\t\n+\n 2000-02-11  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* configure.in: Make outputing the libio/Makefile\n@@ -5245,7 +5245,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tnull library if it's not needed. At least we are being consistent,\n \tif not as elegant as we could be.\n \t* src/Makefile: Regenerate.\n-\t\n+\n 2000-02-10  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* Makefile.am (SUBDIRS): Add libio again.\n@@ -5257,7 +5257,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tlibio.la is referring back to the libio subdir again.\n \t(LIBIO_INCLUDES): And here.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2000-02-09  Benjamin Kosnik  <bkoz@decepticon.cygnus.com>\n \n \t* math/complex-stub.h: Missed one. Change __mycabs* to cabs*.\n@@ -5273,23 +5273,23 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t(__valarray_destroy_elements): New function.\n \n \t* bits/valarray_array.tcc (__valarray_copy_construct): New\n-\tfunctions. \n+\tfunctions.\n \n \t* bits/std_valarray.h (valarray<>::valarray): Use\n \t__valarray_get_memory and __valarray_fill_construct,\n \t__valarray_copy_construct, __valarray_default_construct to\n-\tproperly construct valarrays.  \n+\tproperly construct valarrays.\n \t(valarray<>::~valarray): Use __valarray_destroy_elements to\n \tdestroy elements and __valarray_release_memory to return memory.\n-\t(valarray<>::shift): Tweak. \n+\t(valarray<>::shift): Tweak.\n \t(valarray<>::cshift): Likewise.\n \t(valarray<>::resize): Robustify.\n \n 2000-02-09  Benjamin Kosnik  <bkoz@cygnus.com>\n \n \t* mknumeric_limits (XCOMPILE): Add support for cross compiling.\n \t* bits/limits_generic.h: New file, defaults.\n-\t* src/limits_generic.cc: New file, defaults.\t\n+\t* src/limits_generic.cc: New file, defaults.\n \t* configure.in (LIBS): Run mknumeric_limits at configure time.\n \t* acconfig.h: Remove PACKAGE VERSION HAVE_COMPLEX\n \tHAVE_LC_MESSAGES, tidy, clean, etc.\n@@ -5308,15 +5308,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t(libmath_la_SOURCES): And here.\n \t* math/(mycabs.c, mycabsf.c, mycabsl.c): Move to. . .\n \t* math/(cabs.c, cabsf.c, cabsl.c): . . . Here.\n-\t* math/complex-stub.h: Move c_log declarations into. . . \n+\t* math/complex-stub.h: Move c_log declarations into. . .\n \t* math/mathconf.h: Here. This is because glibc's <complex.h>\n \tdeclares cclog, not c_log. The case of the dueling standards. . .\n \t* math/mathconf.h: Add _GLIBCPP_HAVE_* to macros.\n \t* math/Makefile.am: Change.\n \t* math/nan.c (nan): Change signature.\n \t* math/mathconf.h (NAN): Same.\n \t* math/complex-stub.h (nan): And here.\n-\t\n+\n \t* Makefile.am (rebuild-stamp): Remove libio and libio\n \tdependencies.  Plan to take out libio subdir and just merge with\n \tlibio in top level gcc directory. Of course, this assumes there is\n@@ -5327,7 +5327,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-02-09  Chip Salzenberg  <chip@valinux.com>\n \n         * localefwd.h (locale): Make public: facet, id, category.\n-\t\n+\n 2000-02-09  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n \n \t* testsuite/26_numerics/buggy_complex.cc: Fix Origin:.\n@@ -5345,7 +5345,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n         * configure.in: Use.\n         * acconfig.h: New _GLIBCPP_BUGGY_COMPLEX macro.\n         * bits/std_complex.h: Use.\n-\t\n+\n 2000-02-04  Philip Martin <pm@corris.dircon.co.uk>\n \n        * stl/bits/stl_algobase.h: Add traits based dispatch for\n@@ -5354,9 +5354,9 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n        base() function.\n \n 2000-02-04  Mumit Khan  <khan@xraylith.wisc.edu>\n-\t\n+\n \t* src/gen-num-limits.cc (signal_handler): Work around signal\n-\thandling problem on Cygwin. \n+\thandling problem on Cygwin.\n \tThanks to Chris Faylor <cgf@cygnus.com>.\n \n 2000-02-03  Benjamin Kosnik  <bkoz@cygnus.com>\n@@ -5370,10 +5370,10 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/Makefile: Regenerate.\n \t* Makefile.am: Add support for cross compiles.\n \t* Makefile.in: Regenerate.\n-\t\n+\n 2000-02-02  Benjamin Kosnik  <bkoz@cygnus.com>\n \n-\t* configure.in (LIBS): Remove unused subdirs.\t\n+\t* configure.in (LIBS): Remove unused subdirs.\n \t* configure: Regenerate.\n \t* Makefile.am (SUBDIRS): And here.\n \t* Makefile.in: Regenerate.\n@@ -5392,7 +5392,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* config.guess: Same.\n \n 2000-02-02  Benjamin Kosnik  <bkoz@cygnus.com>\n-\t    Alexandre Petit-Bianco  <apbianco@cygnus.com>    \n+\t    Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* mkc++config: New file. Put autoconf macros into _GLIBCPP_\n \tnamespace instead of polluting global namespace with duplicate\n@@ -5414,7 +5414,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/complexl.cc: And here.\n \t* math/mathconf.h: Change to include \"config.h\" instead of\n \tbits/c++config.h.\n-\t\n+\n 2000-02-01  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* configure.in: Add support for threads. Try a model closer to\n@@ -5425,11 +5425,11 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tis AC_DEFINE(-D_PTHREADS) etc. However, let's try something\n \tnew. . . and see if we arrive at a more elegant solution.\n \t* configure: Regenerated.\n-\t* config/threads-no.h: New file. \n-\t* config/threads-posix.h: New file. \n+\t* config/threads-no.h: New file.\n+\t* config/threads-posix.h: New file.\n \t* src/Makefile.am (myinstallheaders): Install c++threads.h.\n \t* src/Makefile.in: Regenerated.\n-\t\n+\n 2000-01-31  Benjamin Kosnik  <bkoz@gnu.org>\n \n \tMETA-QUESTION: Can we just make a \"header.html\" file and a\n@@ -5457,23 +5457,23 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \n 2000-01-31  Scott Snyder  <snyder@fnal.gov>\n \n-        * bits/istream.tcc (operator>>(istream&, string&)): Set failbit if \n+        * bits/istream.tcc (operator>>(istream&, string&)): Set failbit if\n         we don't extract any characters.\n \t* testsuite/21_strings/inserters_extractors.cc (main): New tests.\n-\t\n+\n 2000-01-31  Anders Widell  <awl@hem.passagen.se>\n \n         * stl/bits/std_bitset.h (_M_do_left_shift): Handle case when shift\n         step is a multiple of the word size.\n         (_M_do_right_shift): Same.\n \t* testsuite/23_containers/bitset_shift.cc: New file.\n-\t\n+\n 2000-01-31  Nathan Myers  <ncm@zembu.com>\n-\t\n+\n \t* README (Documentation): Add path info, fix typos.\n-\t\n+\n 2000-01-26  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* bits/locale_facets.tcc (num_get::_M_extract): Add the freaking\n \tcrazy group checking for numpunct, for real this time. At some\n \tpoint, the local variable __grp should probably get replaced a\n@@ -5486,7 +5486,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tJim Parsons  <parsons@clearway.com>\n \t* testsuite/27_io/istream_extractor_arith.cc (test08): Add\n \tmore grouping tests, tweak, scold, wine.\n-\t\n+\n 2000-01-24  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* testsuite/27_io/istream_extractor_arith.cc (test07): Add\n@@ -5508,7 +5508,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* testsuite/27_io/istream_extractor_arith.cc: Fix.\n \t* bits/locale_facets.tcc (do_get(...void)): Change to strtoul.\n \t* testsuite/27_io/istream_unformatted.cc (test04): Tweak.\n-\t\n+\n 2000-01-14  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* docs/README.html:  Reformat, more installation instructions.\n@@ -5551,13 +5551,13 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tfeedback from LWG 49.\n \t* src/ios.cc: Move definition here.\n \t* testsuite/27_io/ios_base_members_static.cc (test01): Add tests.\n-\t\n+\n \t* bits/std_sstream.h (_M_really_sync): Simplify argument list. Set\n \toutput part of internal buffer based on string size, so that\n \t_M_out_end is set consistently with filebufs. Correct comments.\n \t* bits/sstream.tcc (stringbuf::overflow): Update here too.\n \t* testsuite/27_io/stringbuf.cc: Changes.\n-\t\n+\n 2000-01-11  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* bits/sstream.tcc (seekoff): Set based on end of written buffer,\n@@ -5570,9 +5570,9 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* bits/locale_facets.tcc (_M_extract): Have consistency between\n \tistream::sentry and extractors, where failbit | eofbit is\n \tset. Don't change this, but instead change. . (do some formatting\n-\ttweaks.)  \n+\ttweaks.)\n \t* bits/istream.tcc (istream::sentry): Only set eofbit.\n-\t\n+\n 2000-01-10  Benjamin Kosnik  <bkoz@gnu.org>\n \n \t* testsuite/27_io/istringstream_members.cc: New file.\n@@ -5586,7 +5586,7 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \t* src/Makefile.am (generated_headers): Remove bits/c++config.h so\n \tthat make clean will not delete it.\n \t* src/Makefile: Regenerate.\n-\t\n+\n 2000-01-07  Phil Edwards  <pme@sourceware.cygnus.com>\n \n \t* mkcheck.in:  Use host-specific invocation of size(1);\n@@ -5610,15 +5610,15 @@ Thu Nov  2 10:11:45 2000  Mark P Mitchell  <mark@codesourcery.com>\n \tand file ctype.cc. Probably doesn't work.\n \t* config/solaris/solaris2.6: Same.\n \t* config/solaris/solaris2.7: Same, as per specs via Phil Edwards.\n-\t\n+\n \t* Makefile.am: Change paths to mkcheck.\n \t* Makefile: Regenerate.\n \t* configure.in (AC_OUTPUT_COMMANDS): Build mkcheck here.\n \t* configure: Regenerate.\n \t* src/Makefile.am (generated_headers): Add bits/c++config.h.\n \n \t* mkcheck: Now autogenerated by configure and renamed. . .\n-\t* mkcheck.in (INC_PATH): Add glue for ctype_include_dir.\t\n+\t* mkcheck.in (INC_PATH): Add glue for ctype_include_dir.\n \tHave longer-style dates.\n         Raja R Harinath  <harinath@cs.umn.edu>\n \t* mkcheck: Change path to #!/usr/clocal/bin/bash."}, {"sha": "3448363ee086587a0823d2e38b0ddf0101e7d95a", "filename": "libstdc++-v3/ChangeLog-2002", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2002", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2002", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2002?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -47,7 +47,7 @@\n \t* libsupc++/tinfo.cc: Likewise.\n \t* src/stdexcept.c (logic_error::~logic_error): Likewise.\n \t(runtime_error::~runtime_error): Likewise.\n-\t\n+\n 2002-12-26  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* libsupc++/exception:  Add comment (mistakenly skipped).\n@@ -112,7 +112,7 @@\n \n  \t* docs/html/documentation.html: Add link for debug.html.\n \t* docs/html/debug.html: New.\n-\t\n+\n 2002-12-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* testsuite/23_containers/vector_capacity.cc (test03): Move ...\n@@ -155,9 +155,9 @@\n \t(GLIBCPP_ENABLE_DEBUG_FLAGS): New.\n         * aclocal.m4: Regenerate.\n \t* libio/Makefile.am: Remove DEBUG_FLAGS.\n-\t* libio/Makefile.in: Regenerate.\t\n+\t* libio/Makefile.in: Regenerate.\n \t* libsupc++/Makefile.am: Remove DEBUG_FLAGS.\n-\t* libsupc++/Makefile.in: Regenerate.\t\n+\t* libsupc++/Makefile.in: Regenerate.\n \t* docs/html/configopts.html: Add docs for --enable-debug,\n \t--enable-debug-flags.\n \n@@ -171,7 +171,7 @@\n \t* include/Makefile.in: Regenerate.\n \t* src/Makefile.am (codecvt_members.cc): New rule.\n \t(collate_members.cc): Same.\n-\t(ctype_members.cc): Same.\t\n+\t(ctype_members.cc): Same.\n \t(messages_members.cc): Same.\n \t(monetary_members.cc): Same.\n \t(numeric_members.cc): Same.\n@@ -189,7 +189,7 @@\n \t(CTIME_CC): Same.\n \t(CLOCALE_CC): Same.\n \t* aclocal.m4: Regenerate.\n-\t\n+\n \t* src/Makefile.am (libstdc___la_LIBADD): Use top_builddir\n \tfor convenience libraries.\n \t(version_arg): Rename linker.map to libstdc++.ver."}, {"sha": "b01638cd7a5096e374bfb62f0a34a68b46cacf97", "filename": "libstdc++-v3/ChangeLog-2003", "status": "modified", "additions": 98, "deletions": 98, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2003", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2003", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2003?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -18,7 +18,7 @@\n \t__grouping.size().\n \t* testsuite/22_locale/num_get/get/char/13.cc: New.\n \t* testsuite/22_locale/num_get/get/wchar_t/13.cc: Ditto.\n-\t\n+\n 2003-12-29  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* include/bits/locale_facets.h (ctype.narrow,widen): Add cast.\n@@ -65,7 +65,7 @@\n \n 2003-12-24  Andrew Pinski  <pinskia@physics.uc.edu>\n \n-\t* config/cpu/i386/atomicity.h (__exchange_and_add): Fix output \n+\t* config/cpu/i386/atomicity.h (__exchange_and_add): Fix output\n \tconstraint.\n \n \tPR libstdc++/13480\n@@ -81,7 +81,7 @@\n  \t* include/ext/debug_allocator.h: Convert to the new style.\n \t* include/ext/pool_allocator.h: Use global new and delete directly.\n \t* include/backward/alloc.h: Don't inject malloc_allocator, or\n-\tdebug_allocator.\t\n+\tdebug_allocator.\n \t* testsuite/ext/allocators.cc: Minimal fixups for usage of new\n \tclasses.  Comment out tests with __pool_alloc for now.\n \t* testsuite/performance/allocator.cc: Same.\n@@ -95,11 +95,11 @@\n \t(_Rb_tree): Inherit directly from node allocator.\n \t* include/ext/slist (_Alist_alloc_base): Eliminate.\n \t(_Slist_base): Inherit direcly from node allocator.\n-\t\n+\n 2003-12-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/18_support/numeric_limits.cc: Add _GLIBCXX_ASSERT to\n-\tdg-options in testcases that use VERIFY.\t\n+\tdg-options in testcases that use VERIFY.\n \t* testsuite/23_containers/vector/invalidation/1.cc: Same.\n \t* testsuite/23_containers/vector/invalidation/2.cc: Same.\n \t* testsuite/23_containers/vector/invalidation/3.cc: Same.\n@@ -115,13 +115,13 @@\n \n \t* include/ext/hash_set (class hash_multiset): Fix typo.\n \n-2003-12-22  Benjamin Kosnik  <bkoz@redhat.com>\t\n+2003-12-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/27_io/objects/char/5.cc: Don't use stdc++.h.gch.\n \t* testsuite/27_io/objects/wchar_t/5.cc: Same.\n \t* docs/html/test.html: Add docs for constructing test files that\n \tdon't use stdc++.h.gch.\n-\t* scripts/testsuite_flags.in (PCHFLAGS): Move to --cxxpchflags.\t\n+\t* scripts/testsuite_flags.in (PCHFLAGS): Move to --cxxpchflags.\n \t* testsuite/libstdc++-dg/normal.exp: Compute DEFAULT_CXXFLAGS\n \tdifferently.\n \n@@ -130,7 +130,7 @@\n \t* config/linker-map.gnu: Same.\n \t* testsuite/27_io/ios_base/cons/copy_neg.cc: Adjust line numbers.\n \t* testsuite/27_io/ios_base/cons/assign_neg.cc: Same.\n-\t\t\n+\n 2003-12-22  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR libstdc++/13462\n@@ -152,7 +152,7 @@\n \n \t* testsuite/22_locale/num_get/get/char/11.cc: Add a comment.\n \t* testsuite/22_locale/num_get/get/wchar_t/11.cc: Likewise.\n-\t\n+\n 2003-12-20  Jason Merrill  <jason@redhat.com>\n \n \t* config/cpu/powerpc/atomicity.h: Fix oversight in previous\n@@ -203,8 +203,8 @@\n \tWhen __found_sci becomes true stop eating thousands separators\n \tand the decimal radix separator.\n \t* testsuite/22_locale/num_get/get/char/9.cc: New.\n-\t* testsuite/22_locale/num_get/get/wchar_t/9.cc: Likewise.\t\n-\t\n+\t* testsuite/22_locale/num_get/get/wchar_t/9.cc: Likewise.\n+\n \t* config/locale/generic/c_locale.cc (__convert_to_v): Don't\n \tcheck that *__sanity == '\\0': parsing may stop earlier, still\n \tbe successful.\n@@ -230,20 +230,20 @@\n \tcontainer's.\n \t* include/bits/stl_deque.h (_Deque_alloc_base): Eliminate.\n \t(_Deque_base): inherit directly from the deque's allocator.  Use\n-\trebinding instead of _Alloc_traits.  Pick up data members from \n+\trebinding instead of _Alloc_traits.  Pick up data members from\n \t_Deque_alloc_base.\n \t* include/bits/stl_list.h (_List_alloc_base): Eliminate.\n \t(_List_base): Inherit directly from the list's allocator.  Use\n-\trebinding instead of _Alloc_traits.  Pick up data members from \n+\trebinding instead of _Alloc_traits.  Pick up data members from\n \t_List_alloc_base.\n \t* include/bits/stl_vector.h (_Vector_alloc_base): Eliminate\n \t(_Vector_base): Inherit directly from the vector's allocator.  Use\n-\trebinding instead of _Alloc_traits.  Pick up data members from \n+\trebinding instead of _Alloc_traits.  Pick up data members from\n \t_Vector_alloc_base.\n \t* include/ext/hashtable.h: Fix allocator type correctness (the\n \tvector of buckets must be passed an allocator for objects of\n \ttype _Node*).  Use rebinding instead of _Alloc_traits.\n-\t\n+\n 2003-12-17  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (time_get::_M_extract_via_format):\n@@ -353,27 +353,27 @@\n \t* src/locale_init.cc: Use it.\n \t(locale::locale): Lock critical regions.\n \t(locale::global): Same.\n-\t\n+\n 2003-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/basic_string.h: Change _*_references to _*_refcount.\n \t* include/bits/locale_classes.h: Same.\n \t* src/locale.cc: Same.\n-\t* src/locale_name.cc: Same.\t\n-\t* src/locale_init.cc: Same.\t\n-\t\n+\t* src/locale_name.cc: Same.\n+\t* src/locale_init.cc: Same.\n+\n 2003-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/12855\t\n+\tPR libstdc++/12855\n \t* include/bits/ios_base.h (Init::_S_ios_base_init): Change to\n \t_S_refcount, make atomic.\n-\t* src/ios.cc: Adjust definition.\t\n+\t* src/ios.cc: Adjust definition.\n \t* src/ios_init.cc (ios_base::Init::Init): Use __exchange_and_add,\n \tand __atomic_add.\n \t(ios_base::Init::~Init): Same.\n \t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust line numbers.\n \t* testsuite/27_io/ios_base/cons/copy_neg.cc: Same.\n-\t\n+\n 2003-12-15  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_get::do_get(bool&)):\n@@ -386,7 +386,7 @@\n 2003-12-15  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.h (_M_widen): Reserve space\n-\tfor all the possible widened chars.\t\n+\tfor all the possible widened chars.\n \t* config/locale/generic/ctype_members.cc (_M_initialize_ctype):\n \tCompute at construction time all the possible widened chars.\n \t(do_widen): Tweak, simplify.\n@@ -431,10 +431,10 @@\n \t* testsuite/lib/libstdc++.exp (v3-init): Add\n \toriginal_ld_library_path, calculate ld_library path, set\n \tLD_LIBRARY_PATH to both. Based on libjava.exp.\n-\t\n+\n 2003-12-10  Benjamin Kosnik  <bkoz@redhat.com>\n             Alexandre Oliva  <aoliva@redhat.com>\n-\t\n+\n \tPR libstdc++/11612\n \t* testsuite/Makefile.am (GLIBCXX_DIR): New.\n \t(GLIBGCC_DIR): New.\n@@ -452,7 +452,7 @@\n \t* config/io/basic_file_stdio.cc (__basic_file::sys_open): Sync.\n \t* testsuite/ext/stdio_filebuf/char/10063-1.cc: New.\n \t* testsuite/ext/stdio_filebuf/char/10063-2.cc: New.\n-\t\n+\n 2003-12-10  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_put::do_put(void*)):\n@@ -465,7 +465,7 @@\n \t64 bit machines.\n \n 2003-12-09  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* config/linker-map.gnu: Remove private ios_base members from\n \texport list.\n \n@@ -481,7 +481,7 @@\n \t* config/cpu/powerpc/atomicity.h: Same.\n \t* config/cpu/s390/atomicity.h: Same.\n \t* config/cpu/sparc/atomicity.h: Same.\n-\t\n+\n 2003-12-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/13296\n@@ -492,9 +492,9 @@\n \t* src/Makefile.am (libstdc___la_LDFLAGS): Remove LIBUNWIND_FLAGS.\n \t* src/Makefile.in: Regenerate.\n \t* docs/html/17_intro/configury.html: Modify.\n-\t\n+\n 2003-12-09  Paolo Carlini  <pcaelini@suse.de>\n-\t\n+\n \t* include/bits/demangle.h (struct implementation_details):\n \tKeep in comments the names of the unused parameters.\n \n@@ -608,10 +608,10 @@\n \n \t* testsuite/ext/enc_filebuf/char/13189.cc: Guard for __enc_traits.\n \t* testsuite/ext/enc_filebuf/wchar_t/13189.cc: Same.\n-\t\n+\n 2003-12-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/11691 \n+\tPR libstdc++/11691\n \t* include/ext/stdio_filebuf.h (stdio_filebuf::stdio_filebuf):\n \tRemove __del argument to file descriptor constructor.\n \t* config/io/basic_file_stdio.h (__basic_file::sys_open): Remove\n@@ -687,7 +687,7 @@\n \t* config.h.in: Regenerated.\n \t* configure: Same.\n \t* aclocal.m4: Same.\n-\t\n+\n 2003-12-04  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/12653\n@@ -742,7 +742,7 @@\n \t* include/bits/istream.tcc: Only call setstate if __err != goodbit.\n \t* include/bits/ostream.tcc: Same.\n \t* testsuite/27_io/basic_ios/exceptions/char/2.cc: New.\n-\t\n+\n \t* testsuite/testsuite_io.h (__gnu_test::fail_streambuf): Make\n \tinternal buffer non-static.\n \n@@ -801,7 +801,7 @@\n \n \t* testsuite/27_io/basic_filebuf/imbue/char/13171-3.cc:\n \tRemove extraneous wchar_t lines.\n-\t\n+\n 2003-11-27  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/11544\n@@ -837,14 +837,14 @@\n \t* include/bits/basic_ios.tcc: Tweak.\n \t* include/bits/fstream.tcc: Tweak.\n \t* include/bits/istream.tcc: Use _M_setstate for common exception\n-\thandling. Move setstate calls after catch. \n+\thandling. Move setstate calls after catch.\n \t(basic_istream::tellg): Check for exceptions thrown by streambuf\n \tvirtual functions.\n \t(basic_istream::seekg): Same.\n \t* include/bits/ostream.tcc: Same, but for ostream.\n \t(basic_ostream::flush): Check for exceptions thrown by streambuf\n \tvirtual functions.\n-\t(basic_istream::tellp): Same.\t\n+\t(basic_istream::tellp): Same.\n \t(basic_istream::seekp): Same.\n \t* include/bits/locale_facets.tcc: Tweak.\n \t* include/bits/streambuf.tcc: Tweak.\n@@ -854,16 +854,16 @@\n \t(fail_num_put): New.\n \t(facet_error): New.\n \t(underflow_error): New.\n-\t(overflow_error): New.\t\n-\t(positioning_error): New.\t\n+\t(overflow_error): New.\n+\t(positioning_error): New.\n \t* testsuite/27_io/basic_istream/exceptions/char/9561.cc: Tweak.\n \t* testsuite/27_io/basic_istream/extractors_arithmetic/char/\n         exceptions_badbit_throw.cc, exceptions_failbit.cc,\n         exceptions_failbit_throw.cc: New.\n \t* testsuite/27_io/basic_istream/extractors_other/char/\n \terror_failbit.cc, exceptions_badbit_throw.cc,\n         exceptions_failbit_throw.cc, exceptions_null.cc: New.\n-\t* testsuite/27_io/basic_istream/seekg/char/exceptions_badbit_throw.cc: \n+\t* testsuite/27_io/basic_istream/seekg/char/exceptions_badbit_throw.cc:\n \tNew.\n \t* testsuite/27_io/basic_istream/tellg/char/exceptions_badbit_throw.cc:\n \tNew.\n@@ -874,9 +874,9 @@\n \t* testsuite/27_io/basic_ostream/inserters_other/char/\n \terror_failbit.cc, exceptions_badbit_throw.cc,\n         exceptions_failbit_throw.cc, exceptions_null.cc: New.\n-\t* testsuite/27_io/basic_ostream/seekp/char/exceptions_badbit_throw.cc: \n+\t* testsuite/27_io/basic_ostream/seekp/char/exceptions_badbit_throw.cc:\n \tNew.\n-\t* testsuite/27_io/basic_ostream/tellp/char/exceptions_badbit_throw.cc: \n+\t* testsuite/27_io/basic_ostream/tellp/char/exceptions_badbit_throw.cc:\n \tNew.\n \n 2003-11-26  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -885,7 +885,7 @@\n \t* include/bits/istream.tcc\n \t(basic_istream::sentry::sentry): Set failbit and eofbit when eof.\n \t* testsuite/27_io/basic_istream/sentry/char/12297.cc: New.\n-\t\n+\n 2003-11-26  Paolo Carlini  <pcarlini@suse.de>\n \t    Petur Runolfsson  <peturr02@ru.is>\n \n@@ -938,7 +938,7 @@\n \tin order to avoid memory leaks; simplify a bit.\n \n 2003-11-24  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* include/bits/streambuf_iterator.h (ostreambuf_iterator): Remove\n \tnon-standard throw specs.\n \t* testsuite/24_iterators/istreambuf_iterator.cc: Split into...\n@@ -951,9 +951,9 @@\n \n \t* testsuite/24_iterators/reverse_iterator/1.cc: Just compile,\n \tdon't link.\n-\t\n+\n \t* include/bits/allocator.h: Formatting tweak.\n-\t\n+\n 2003-11-24  Paolo Carlini  <pcarlini@suse.de>\n \n \t* src/locale_init.cc: Cosmetic reformatting.\n@@ -1006,12 +1006,12 @@\n \n \t* include/debug/formatter.h: Use _Tp as template argument.\n \t* src/debug.cc: Same, instantiate std::size_t.\n-\t\n+\n 2003-11-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/13109\n \t* include/debug/formatter.h (_Error_formatter::_M_format_word): New.\n-\t* src/debug.cc (__gnu_debug): Format. \n+\t* src/debug.cc (__gnu_debug): Format.\n \t(_Error_formatter::_M_format_word): Define, use, instantiate.\n \n 2003-11-20  Paolo Carlini  <pcarlini@suse.de>\n@@ -1059,9 +1059,9 @@\n \talways ok to imbue a new locale, provided seekoff(0, cur, ...)\n \tdoesn't fail, of course.\n \t(underflow): In order for the above to work, deal gracefully\n-\twith _M_codecvt->in returning codecvt_base::error while \n+\twith _M_codecvt->in returning codecvt_base::error while\n \t(__ilen = __iend - this->eback()) > 0: it just means __ilen\n-\tcorrectly converted internal characters before an error.\t\n+\tcorrectly converted internal characters before an error.\n \t* testsuite/27_io/basic_filebuf/imbue/wchar_t/12868.cc: New.\n \n 2003-11-17  Paolo Carlini  <pcarlini@suse.de>\n@@ -1107,10 +1107,10 @@\n \tstd::basic_string does provide extra debugging capabilities, but\n \tnot safe iterators.\n \t* include/bits/basic_string.tcc: Make sure there's never an\n-\tambiguity when calling __is_null_pointer. \n+\tambiguity when calling __is_null_pointer.\n \t* include/debug/deque: (deque::erase) Properly handle invalidation\n \twhen erasing at the end of the deque.\n-\t* include/debug/vector: (vector::swap): Swap _M_guaranteed_capacity. \n+\t* include/debug/vector: (vector::swap): Swap _M_guaranteed_capacity.\n \t(vector::clear): Set the guaranteed capacity to 0.\n \t* testsuite/23_containers/deque/invalidation/4.cc: (test04): Test\n \titerator invalidation when erasing at the end of the deque.\n@@ -1154,7 +1154,7 @@\n \t* testsuite/27_io/basic_ostream/inserters_other/char/5.cc: New test.\n \t* testsuite/27_io/basic_ostream/put/char/1.cc: New test.\n \t* testsuite/27_io/basic_ostream/write/char/1.cc: New test.\n-\t\n+\n 2003-11-13  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-1:\n@@ -1234,10 +1234,10 @@\n \t* docs/html/17_intro/howto.html: Document debug-mode macros.\n \t* include/Makefile.am: Install debug-mode headers.\n \t* src/Makefile.am: Include debug.cc.\n-\t* include/bits/basic_string.tcc: \n-\t  (basic_string::_S_construct): Fix NULL pointer check.\n-\t  (__is_null_pointer): New.\n-\t  Add precondition annotations.\n+\t* include/bits/basic_string.tcc:\n+\t(basic_string::_S_construct): Fix NULL pointer check.\n+\t(__is_null_pointer): New.\n+\tAdd precondition annotations.\n \t* include/bits/stream_iterator.h (istream_iterator,\n \tostream_iterator): Added precondition annotations.\n \t* include/bits/streambuf_iterator.h (istreambuf_iterator): Ditto.\n@@ -1253,10 +1253,10 @@\n \tannotations.\n \t* include/bits/stl_numeric.h: Ditto.\n \t* include/ext/algorithm: Added algorithm precondition\n-\tannotations. \n+\tannotations.\n \t(__is_heap): Moved away from here.\n \t* include/bits/stl_heap.h: Added algorithm precondition\n-\tannotations. \n+\tannotations.\n \t(__is_heap): Moved to the top of this file.\n \t(__is_heap): Added iterator range overloads.\n \t* testsuite/20_util/auto_ptr_neg.cc: Fix line numbers to match up\n@@ -1291,27 +1291,27 @@\n \t* include/debug/deque: New.\n \t* include/debug/formatter.h: New.\n \t* include/debug/hash_map: New.\n-\t* include/debug/hash_map.h: New.\t\n+\t* include/debug/hash_map.h: New.\n \t* include/debug/hash_multimap.h: New.\n \t* include/debug/hash_set: New.\n \t* include/debug/hash_set.h: New.\n-\t* include/debug/hash_multiset.h: New.\t\n+\t* include/debug/hash_multiset.h: New.\n \t* include/debug/list: New.\n \t* include/debug/map: New.\n \t* include/debug/map.h: New.\n \t* include/debug/multimap.h: New.\n-\t* include/debug/multiset.h: New.\t\n+\t* include/debug/multiset.h: New.\n \t* include/debug/safe_base.h: New.\n \t* include/debug/safe_iterator.h: New.\n \t* include/debug/safe_iterator.tcc: New.\n \t* include/debug/safe_sequence.h: New.\n \t* include/debug/set: New.\n-\t* include/debug/set.h: New.\t\n+\t* include/debug/set.h: New.\n \t* include/debug/string: New.\n \t* include/debug/vector: New.\n \t* src/debug.cc: New.\n \t* config/linker-map.gnu: Add debug mode symbols.\n-\t\n+\n 2003-11-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/string-inst.cc: Tweak namespaces.\n@@ -1345,7 +1345,7 @@\n \t* include/std/std_list.h: Same.\n \t* include/std/std_map.h: Same.\n \t* include/std/std_set.h: Same.\n-\t* include/std/std_vector.h: Same.\t\n+\t* include/std/std_vector.h: Same.\n \t* include/std/std_queue.h: Use deque, vector.\n \t* include/std/std_stack.h: Same.\n \n@@ -1423,7 +1423,7 @@\n \t* libsupc++/vec.cc (__cxa_vec_delete2): If given a NULL pointer,\n \timmediately return.  This reflects a C++ ABI change 2003 Nov 03.\n \t(__cxa_vec_delete3): Likewise.\n-\t\n+\n 2003-11-03  Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/12790\n@@ -1448,20 +1448,20 @@\n \tneeded and output the result.\n \t(basic_filebuf::sync): Move here, don't modify _M_writing\n \tor _M_reading.\n-\t\n+\n \t* include/std/std_fstream.h\n \t(basic_filebuf::_M_state_last): Declare it.\n \t(basic_filebuf::_M_last_overflowed): Delete.\n \t(basic_filebuf::_M_seek): Add __state_type parameter.\n \t(basic_filebuf::sync): Declare only.\n \t(basic_filebuf::_M_output_unshift): Delete.\n \t(basic_filebuf::_M_terminate_output): Declare it.\n-\t\n+\n \t* testsuite/testsuite_character.h:\n \tDefine character class and state class plus char_traits and\n \tcodecvt specializations for same for testing support for\n \tstateful encodings.\n-\t\n+\n \t* testsuite/27_io/basic_filebuf/close/12790-1.cc,\n \t* testsuite/27_io/basic_filebuf/close/char/12790-1.cc,\n \t* testsuite/27_io/basic_filebuf/close/char/12790-2.cc,\n@@ -1521,10 +1521,10 @@\n 2003-11-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h (time_get::_M_extract_name): Add\n-\tctype argument.\t\n+\tctype argument.\n \t* include/bits/locale_facets.tcc: Same, use it to allow\n \tcapitalized names.\n-\t\n+\n \t* include/bits/fstream.tcc: Spacing tweak.\n \t* include/bits/istream.tcc: Same.\n \t* include/bits/ostream.tcc: Same.\n@@ -1546,7 +1546,7 @@\n \n \t* include/bits/locale_facets.tcc (num_get::_M_extract_float):\n \tRevert the last commit, is not correct, sorry.\n-\t\n+\n 2003-10-29  Paolo Carlini  <pcarlini@suse.de>\n \n \t* config/locale/generic/c_locale.cc: Add back <cmath> and\n@@ -1595,11 +1595,11 @@\n \t* configure: Regenerate.\n \n 2003-10-27  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* docs/html/17_intro/TODO: Add links.\n \t* testsuite/27_io/basic_istream/extractors_character/char/9555-ic.cc:\n \tUncomment.\n-\t\n+\n 2003-10-27  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/12750\n@@ -1720,7 +1720,7 @@\n \t* include/bits/locale_facets.tcc (__int_to_char): Remove\n \tthe const int parameter.\n \t(_M_insert_int): Update caller.\n-\t* src/locale-inst.cc (__int_to_char): Update instantiations.\t\n+\t* src/locale-inst.cc (__int_to_char): Update instantiations.\n \n 2003-10-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -1771,7 +1771,7 @@\n \n \t* acinclude.m4 (GLIBCXX_CHECK_POLL, GLIBCXX_CHECK_WRITEV):\n \tUse AC_TRY_LINK instead of AC_TRY_COMPILE.\n-\t\n+\n 2003-10-22  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/12657\n@@ -1786,9 +1786,9 @@\n \t* include/ext/pool_allocator.h: Adjust namespaces.\n \t* include/bits/stl_threads.h (_Refcount_base): Move.\n \tPut remaining into namespace __gnu_cxx.\n-\t\n+\n 2003-10-21  Benjamin Kosnik  <bkoz@redhat.com>\n- \n+\n \tPR libstdc++/9858\n \t* include/bits/locale_facets.h (ctype<char>): Remove\n \t__ctype_abstract_base.\n@@ -1819,7 +1819,7 @@\n \t* src/localename.cc: Move a comment.\n \n 2003-10-20  Benjamin Kosnik  <bkoz@redhat.com>\n- \n+\n \tPR libstdc++/10081\n \t* testsuite_hooks.h: Add pod_type, ctype and numpunct specializations.\n \t* testsuite_hooks.cc: Same.\n@@ -1868,7 +1868,7 @@\n \treturns true.\n \n 2003-10-17  Benjamin Kosnik  <bkoz@redhat.com>\n- \n+\n \t* src/Makefile.am: Add new files.\n \t* src/Makefile.in: Regenerate.\n \t* src/globals.cc: Split into..\n@@ -1967,7 +1967,7 @@\n \t* aclocal.m4: Regenerated.\n \t* config.h.in: Regenerated.\n \t* configure: Regenerated.\n-\t\n+\n 2003-10-16  Bernardo Innocenti  <bernie@develer.com>\n \n \t* config/cpu/m68k/atomicity.h (__exchange_and_add): Use TAS on\n@@ -1990,7 +1990,7 @@\n \tfor __res too and avoid strdup.\n \n 2003-10-14  Jeff Bailey  <jbailey@nisa.net>\n-\t\n+\n \tPR libstdc++/12562\n \t* crossconfig.m4: Share the config between *-linux* and *-gnu*.\n \t* configure: Regenerate.\n@@ -2087,7 +2087,7 @@\n \t* include/bits/locale_classes.h: Move _M_id out of line, so that\n \tlocale::id::_S_highwater can be removed from the export list.\n \t* src/locale.cc (locale::id::_M_id): Define.\n-\t\n+\n 2003-10-09  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* testsuite/lib/libstdc++.exp: Set LD_LIBRARY_PATH_64 for\n@@ -2118,7 +2118,7 @@\n \t* src/string-inst.cc: Prune.\n \t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust line numbers.\n \t* testsuite/27_io/ios_base/cons/copy_neg.cc: Same.\n-\t\n+\n 2003-10-09  Petur Runolfsson  <peturr02@ru.is>\n \n \t* src/io-inst.cc: Don't include iostream.\n@@ -2201,7 +2201,7 @@\n \n \tPR libstdc++/12451\n \t* libsupc++/cxxabi.h: Move forward declaration of __class_type_info.\n-\t\n+\n 2003-10-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_classes.h (locale::facet::_S_get_c_name): Add.\n@@ -2230,7 +2230,7 @@\n \n \t* src/locale.cc (locale::_S_initialize): Use __gthread_active_p.\n \t(locale::facet::_S_get_c_locale): Same.\n-\t\n+\n 2003-10-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/linker-map.gnu: Export _S_get_c_locale instead of\n@@ -2251,7 +2251,7 @@\n \t* config/os/gnu-linux/ctype_noninline.h\n \t(ctype<char>::classic_table()): Don't call locale::classic().\n \t* include/bits/locale_classes.h\n-\t(locale::_S_categories): Const qualify.\t\n+\t(locale::_S_categories): Const qualify.\n \t(locale::_S_once, locale::_S_initialize_once,\n \tlocale::facet::_S_once, locale::facet::_S_initialize_once,\n \tlocale::facet::_S_get_c_locale): Declare.\n@@ -2265,7 +2265,7 @@\n \t* src/locale.cc\n \t(locale::_S_once, locale::facet::_S_once): Define.\n \t(locale::classic): Move initialization code...\n-\t(locale::_S_initialize_once): ...here.\t\n+\t(locale::_S_initialize_once): ...here.\n \t(locale::_S_initialize): Call _S_initialize_once through\n \t__gthread_once.\n \t(locale::facet::_S_initialize_once): Initialize _S_c_locale.\n@@ -2274,7 +2274,7 @@\n \t* src/localename.cc (locale::_Impl::_Impl(facet**, size_t, bool)):\n \tDrop unused parameters, add throw() specifier, don't initialize\n \tlocale::facet::_S_c_locale and _S_c_name.\n-\t\n+\n \t* config/locale/generic/messages_members.h:\n \tReplace _S_c_locale with _S_get_c_locale().\n \t* config/locale/gnu/c_locale.cc: Same.\n@@ -2403,7 +2403,7 @@\n \n 2003-09-26  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* testsuite/22_locale/time_put/put/char/2.cc (test_02): Allow either \n+\t* testsuite/22_locale/time_put/put/char/2.cc (test_02): Allow either\n \t\"Son\" or \"So\" as abbreviated name for Sunday in de_DE locale.\n \t* testsuite/22_locale/time_put/put/wchar_t/2.cc (test_02): Likewise.\n \n@@ -2415,7 +2415,7 @@\n \t* testsuite/27_io/basic_istream/sentry/char/3983-sstream.cc: Same.\n \t* testsuite/27_io/basic_ostream/sentry/char/3983-fstream.cc: Same.\n \t* testsuite/27_io/basic_ostream/sentry/char/3983-sstream.cc: Same.\n-\t\n+\n 2003-09-25  Paolo Carlini  <pcarlini@unitus.it>\n \n \tPR libstdc++/12352\n@@ -2440,7 +2440,7 @@\n \n \tPR libstdc++/6072\n \t* acinclude.m4: Split out checks for vfwscanf, vswscanf, vwscanf,\n-\twcstof, iswblank.\t\n+\twcstof, iswblank.\n \t* aclocal.m4: Regenerate.\n \t* config.h.in: Regenerate.\n \t* configure: Regenerate.\n@@ -2449,7 +2449,7 @@\n \t* include/c_compatibility/wchar.h: Guard extra wchar_t functionality.\n \t* include/c_std/std_cwchar.h: Same.\n \t* include/c_std/std_cwctype.h: Same.\n-\t\n+\n 2003-09-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/11065\n@@ -2459,7 +2459,7 @@\n \t* testsuite/22_locale/ctype/is/wchar_t/1.cc: Same.\n \n \t* config/os/generic/ctype_inline.h: Update.\n-\t\n+\n 2003-09-25  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* src/Makefile.am (version_dep): New variable.\n@@ -2502,7 +2502,7 @@\n \t* config/io/basic_file_stdio.h: Same.\n \t* include/std/std_fstream.h (__ctype_type): Delete.\n \t* include/std/std_streambuf.h (__ctype_type, __state_type): Delete.\n-\t\n+\n 2003-09-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/12239\n@@ -2627,8 +2627,8 @@\n \t* docs/html/configopts.html:  Document --disable-hosted-libstdcxx.\n \n 2003-08-29  Nathan Myers  <ncm@cantrip.org>\n-\t\n-\tPR libstdc++/11990\t\n+\n+\tPR libstdc++/11990\n \t* include/bits/locale_facets.tcc (__pad): delete dead code.\n \n 2003-08-28  Alan Modra  <amodra@bigpond.net.au>\n@@ -6252,7 +6252,7 @@\n \n 2003-04-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tReshuffle 27_io testsuite.  \n+\tReshuffle 27_io testsuite.\n \t* testsuite/27_io/filebuf.cc,\n \tfilebuf_members-1.tst, filebuf_members-1.txt, filebuf_members.cc,\n \tfilebuf_virtuals-1.tst, filebuf_virtuals-1.txt,"}, {"sha": "7164283491785347cb111bafb8c2f0e7bdd05dfc", "filename": "libstdc++-v3/ChangeLog-2004", "status": "modified", "additions": 43, "deletions": 41, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2004", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2004", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2004?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -90,7 +90,7 @@\n \tAdd memory barriers to the double-checked locking used for static\n \tinitialization.\n \t* libsupc++/guard.cc (__test_and_acquire): Define default.\n-\t(_GLIBCXX_GUARD_TEST_AND_ACQUIRE, __set_and_release) \n+\t(_GLIBCXX_GUARD_TEST_AND_ACQUIRE, __set_and_release)\n \t(_GLIBCXX_GUARD_SET_AND_RELEASE): Likewise.\n \t(recursion_push, recursion_pop): New abstraction functions.\n \t(__cxa_guard_acquire): Use _GLIBCXX_GUARD_TEST_AND_ACQUIRE.\n@@ -99,7 +99,7 @@\n \tfrom _GLIBCXX_GUARD_ACQUIRE and reverse sense.\n \t(_GLIBCXX_GUARD_SET): Rename from _GLIBCXX_GUARD_RELEASE.\n \t* config/cpu/arm/cxxabi_tweaks.h: Likewise.\n-\t* config/cpu/alpha/atomic_word.h (_GLIBCXX_READ_MEM_BARRIER) \n+\t* config/cpu/alpha/atomic_word.h (_GLIBCXX_READ_MEM_BARRIER)\n \t(_GLIBCXX_WRITE_MEM_BARRIER): Define.\n \t* config/cpu/powerpc/atomic_word.h: Likewise.\n \t* config/cpu/sparc/atomic_word.h: Likewise.\n@@ -307,12 +307,12 @@\n \tdummy return values.\n \n 2004-12-19  Dhruv Matani  <dhruvbird@gmx.net>\n-\t\n+\n \t* include/ext/bitmap_allocator.h: Make doxygen style comments for\n \tinternal functions and classes.\n \n 2004-12-19  Dhruv Matani  <dhruvbird@gmx.net>\n-\t\n+\n \t* docs/html/20_util/allocator.html: Correct link.\n \t* docs/html/ext/ballocator_doc.txt: Remove.\n \t* docs/html/ext/ballocator_doc.html: Add.\n@@ -368,7 +368,7 @@\n 2004-12-12  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/type_traits: Implement is_pointer, remove_pointer,\n-\tand add_pointer; reformat. \n+\tand add_pointer; reformat.\n \t(_DEFINE_PRIMARY_SPEC_HELPER, _DEFINE_PRIMARY_SPEC): Generalize\n \tand rename to _DEFINE_SPEC_HELPER and _DEFINE_SPEC; update uses.\n \t* testsuite/tr1/4_metaprogramming/pointer_modifications/\n@@ -664,7 +664,7 @@\n \n 2004-11-24  Chris Jefferson  <chris@bubblescope.net>\n \n-\t* include/tr1/tuple(operator!=): Change operator \n+\t* include/tr1/tuple(operator!=): Change operator\n \tdefinition to match (draft) technical report.\n \t(operator>): Same.\n \t(operator<=): Same.\n@@ -726,7 +726,7 @@\n \t* config/locale/ieee_1003.1-2001/codecvt_specializations.h: Same.\n \t* include/tr1/array: Add markup.\n \t* include/tr1/tuple: Same.\n-\t\n+\n \t* docs/doxygen/run_doxygen: Print arguments.\n \n \t* docs/doxygen/user.cfg.in: Tweaks.\n@@ -868,7 +868,7 @@\n \tend iterators.\n \n \t* include/bits/locale_facets.tcc (time_get<>::_M_extract_name):\n-\tMinor tweak.\t\n+\tMinor tweak.\n \n 2004-11-08  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Doug Gregor  <dgregor@cs.indiana.edu>\n@@ -951,7 +951,7 @@\n \n \t* include/bits/stl_numeric.h (partial_sum, adjacent_difference):\n \tAvoid dereferencing two times __first in the prologue.\n- \n+\n 2004-11-03  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_numeric.h: Trivial formatting fixes.\n@@ -995,12 +995,12 @@\n \n 2004-11-02  Benjamin Kosnik  <bkoz@redhat.com>\n   \t    Lothar Werzinger  <lothar@xcerla.com>\n-\t\n+\n \tPR libstdc++/17664\n \t* src/debug.cc: Include concurrence, use mutexes.\n-\t(_Safe_iterator_base::_M_attach): Here.\t\n-\t(_Safe_iterator_base::_M_detach): Here.\t\n-\t\n+\t(_Safe_iterator_base::_M_attach): Here.\n+\t(_Safe_iterator_base::_M_detach): Here.\n+\n 2004-11-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/17922\n@@ -1026,7 +1026,7 @@\n \t* libsupc++/eh_globals.cc (get_globals_dtor): Delete unhandled\n \texceptions.\n \t* testsuite/thread/18185.cc: New.\n-\t\n+\n 2004-11-01  Chris Jefferson  <chris@bubblescope.net>\n \n \tPR libstdc++/18159\n@@ -1157,7 +1157,7 @@\n \tarray object, use its size member function directly.\n \t* testsuite/ext/array_allocator/3.cc: New.\n \t* docs/html/20_util/allocator.html: Add docs.\n-\t\n+\n 2004-10-25  Geoffrey Keating  <geoffk@apple.com>\n \n \t* configure.host (darwin*): Build libstdc++ single module\n@@ -1179,7 +1179,7 @@\n \t* scripts/testsuite_flags.in (build-includes): Remove redundant\n \tsearch for libsupc++.\n \t* fragment.am: Clean.\n-\t\n+\n 2004-10-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/Makefile.am (tr1_headers): Add tuple.\n@@ -1195,16 +1195,16 @@\n \t* testsuite/tr1/6_containers/tuple/cons/assignment.cc: New.\n \t* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: New.\n \t* testsuite/tr1/6_containers/tuple/cons/constructor.cc: New.\n-\t* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc: \n+\t* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc:\n \tNew.\n \t* testsuite/tr1/6_containers/tuple/creation_functions/tie.cc: New.\n \t* testsuite/tr1/6_containers/tuple/element_access/get.cc: New.\n \n 2004-10-25  Paolo Carlini  <pcarlini@suse.de>\n-\t\n+\n \t* include/bits/basic_string.h (_Rep::_M_is_safe): Move to\n \tbasic_string as _M_disjunct, adjust to take only __s.\n-\t* include/bits/basic_string.tcc: Adjust consistently callers. \n+\t* include/bits/basic_string.tcc: Adjust consistently callers.\n \n 2004-10-25  Paolo Carlini  <pcarlini@suse.de>\n \n@@ -1272,9 +1272,9 @@\n \t* testsuite/tr1/6_containers/array/comparison_operators/(equal.cc,\n \tgreater.cc, greater_or_equal.cc, less.cc, less_or_equal.cc,\n \tnot_equal): New.\n-\t* testsuite/tr1/6_containers/array/cons/aggregate_initialization.cc: \n+\t* testsuite/tr1/6_containers/array/cons/aggregate_initialization.cc:\n \tNew.\n-\t* testsuite/tr1/6_containers/array/element_access/at_out_of_range.cc: \n+\t* testsuite/tr1/6_containers/array/element_access/at_out_of_range.cc:\n \tNew.\n \t* testsuite/tr1/6_containers/array/iterators/end_is_one_past.cc: New.\n \t* testsuite/tr1/6_containers/array/requirements/(contiguous.cc,\n@@ -1296,7 +1296,7 @@\n \t_M_range_insert): Check at the outset that we are not trying\n \tto exceed max_size, then deal properly with __len overflows.\n \t* testsuite/23_containers/vector/modifiers/insert/1.cc: New.\n-\t\n+\n \t* testsuite/testsuite_allocator.h: Remove redundant include.\n \n 2004-10-20  Paolo Carlini  <pcarlini@suse.de>\n@@ -1337,10 +1337,10 @@\n \t(__mt_alloc::allocate): Use it.\n \t* src/mt_allocator.cc (__pool::_M_reclaim_block): Use it.\n \t(__pool::_M_reserve_block): Simplify block allocation.\n-\t\n+\n 2004-10-17  Dhruv Matani  <dhruvbird@gmx.net>\n \t    Paolo Carlini  <pcarlini@suse.de>\n-\t\t\n+\n \t* include/ext/bitmap_allocator.h: Change unsigned int -> size_t: this\n \tmakes the code 64-bit correct and also fixes (together with using at\n \tthe beginning a bitmap 2 * size_t bytes wide) alignment issues: now\n@@ -1357,7 +1357,7 @@\n \n \t* include/tr1/array (array::end const): Fix casting from iterator\n \tto const_iterator.\n-\t\n+\n 2004-10-15  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/bitmap_allocator.h: Qualify ::operator delete.\n@@ -1391,7 +1391,7 @@\n \n \t* testsuite/testsuite_allocator.h (check_new): Add instance argument.\n \t* testsuite/ext/array_allocator/check_new.cc: New.\n-\t\n+\n 2004-10-14  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/bitmap_allocator.h (bitmap_allocator::_Alloc_block):\n@@ -1415,7 +1415,7 @@\n \t* testsuite/ext/slist/check_construct_destroy.cc: ...here.\n \t* testsuite/ext/slist_explicit_instantiation.cc: Move to...\n \t* testsuite/ext/slist/instantiate.cc: ...here.\n-\t\n+\n 2004-10-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/mt_allocator.h: Tweaks.\n@@ -1446,7 +1446,7 @@\n \tPR libstdc++/17948\n \t* include/bits/stl_tree.h (erase(iterator, iterator)): Revert\n \twrong commit of 2004-10-07.\n-\t\n+\n 2004-10-12  Scott Snyder  <snyder@fnal.gov>\n \n \tPR libstdc++/17948\n@@ -1469,7 +1469,7 @@\n \t* config/linker-map.gnu: Tweak exports.\n \t* docs/html/ext/mt_allocator.html: Update docs.\n \t* testsuite/ext/mt_allocator/deallocate_global-2.cc: Fix.\n-\t* testsuite/ext/mt_allocator/deallocate_global-4.cc: Fix.\t\n+\t* testsuite/ext/mt_allocator/deallocate_global-4.cc: Fix.\n \t* testsuite/ext/mt_allocator/deallocate_global_thread-1.cc: Fix.\n \t* testsuite/ext/mt_allocator/deallocate_global_thread-3.cc: Fix.\n \t* testsuite/ext/mt_allocator/deallocate_local-2.cc: Fix.\n@@ -1504,7 +1504,7 @@\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_THREADS): Tweak test.\n \t* configure: Regenerate.\n-\t\n+\n 2004-10-10  Paolo Carlini  <pcarlini@suse.de>\n \n \t* config/locale/gnu/monetary_members.cc (_S_construct_pattern):\n@@ -1540,7 +1540,7 @@\n \t* testsuite/ext/mt_allocator/deallocate_local_thread-3.cc: Same.\n \t* testsuite/ext/mt_allocator/deallocate_local_thread-1.cc: Same.\n \t* testsuite/ext/mt_allocator/deallocate_local-4.cc: Same.\n-\t\n+\n 2004-10-07  Phil Edwards  <phil@codesourcery.com>\n \n \t* testsuite/lib/libstdc++.exp:  Update list of undefined functions.\n@@ -1600,7 +1600,7 @@\n \t* testsuite/ext/mt_allocator/deallocate_global-1.cc: Move to...\n \t* testsuite/ext/mt_allocator/deallocate_global_thread-1.cc: ...here.\n \t* testsuite/ext/mt_allocator/deallocate_global-3.cc: Move to...\n-\t* testsuite/ext/mt_allocator/deallocate_global_thread-3.cc: ...here. \n+\t* testsuite/ext/mt_allocator/deallocate_global_thread-3.cc: ...here.\n \t* testsuite/ext/mt_allocator/deallocate_local-1.cc: Move to...\n \t* testsuite/ext/mt_allocator/deallocate_local_thread-1.cc: ...here.\n \t* testsuite/ext/mt_allocator/deallocate_local-3.cc: Move to...\n@@ -1647,10 +1647,10 @@\n \t(__pool_base::_Block_address): New.\n \t(__pool_base): Rearrange data members.\n \t(__pool::_M_reserve_memory): To _M_reserve_block.\n-\t(__pool::_M_reclaim_memory): To _M_reclaim_block.\t\n+\t(__pool::_M_reclaim_memory): To _M_reclaim_block.\n \t(__pool::_Bin_record): Add _Block_address data member.\n \t(__pool<false>): Add _M_thread_freelist_initial.\n-\t(__pool::~__pool): Declare.\t\n+\t(__pool::~__pool): Declare.\n \t(__common_pool_policy): Move static data member to...\n \t(__common_pool_policy::_S_get_pool): ...here, make static local.\n \t(__per_type_pool_policy): Move static data member to...\n@@ -1675,10 +1675,10 @@\n \t* testsuite/ext/mt_allocator/deallocate_local-3.cc: New.\n \t* testsuite/ext/mt_allocator/deallocate_local-4.cc: New.\n \t* testsuite/ext/mt_allocator/deallocate.cc: New.\n-\t* testsuite/ext/malloc_allocator/deallocate.cc: New.\t\n+\t* testsuite/ext/malloc_allocator/deallocate.cc: New.\n \t* testsuite/ext/malloc_allocator/deallocate_global.cc: New.\n \t* testsuite/ext/malloc_allocator/deallocate_local.cc: New.\n-\t\n+\n 2004-10-05  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* configure.host (abi_baseline_pair): Define for s390-*-linux* and\n@@ -1776,7 +1776,7 @@\n \n 2004-09-29  Paolo Carlini  <pcarlini@suse.de>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/testsuite_io.h (class constraint_buf): New, extended\n \tand templatized version of constraint_filebuf; add typedefs for\n \tstreambuf/stringbuf/filebuf and wchar_t counterparts.\n@@ -1790,7 +1790,7 @@\n \t* include/bits/basic_string.tcc (_S_construct, _M_destroy,\n \t_M_leak_hard, _M_mutate): Likewise.\n \t* acinclude.m4 (GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING): New.\n-\t* acconfig.h: Add corresponding undef. \t\n+\t* acconfig.h: Add corresponding undef.\n \t* configure.ac: Use GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING.\n \t* docs/html/configopts.html: Document --enable-fully-dynamic-string.\n \t* configure: Regenerate.\n@@ -1802,7 +1802,7 @@\n \t* testsuite/21_strings/basic_string/operations/char/1.cc: New.\n \t* testsuite/21_strings/basic_string/operations/wchar_t/1.cc: New.\n \t* testsuite/21_strings/basic_string/element_access/char/empty.cc: New.\n-\t* testsuite/21_strings/basic_string/element_access/wchar_t/empty.cc: \n+\t* testsuite/21_strings/basic_string/element_access/wchar_t/empty.cc:\n \tNew.\n \n 2004-09-28  Paolo Carlini  <pcarlini@suse.de>\n@@ -3812,10 +3812,12 @@\n \t* testsuite/21_strings/char_traits/requirements/short/1.cc: Same.\n \t* testsuite/27_io/basic_istream/seekg/char/exceptions_badbit_throw.cc:\n \tSame.\n-\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/exceptions_badbit_throw.cc: Same.\n+\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/\n+\texceptions_badbit_throw.cc: Same.\n \t* testsuite/27_io/basic_ostream/seekp/char/exceptions_badbit_throw.cc:\n \tSame.\n-\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/exceptions_failbit_throw.cc: Same.\n+\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/\n+\texceptions_failbit_throw.cc: Same.\n \t* testsuite/27_io/types/2.cc: Same.\n \n \t* testsuite/ext/stdio_sync_filebuf/wchar_t/12077.cc: Fix temporary"}, {"sha": "48ae4c1f54f9d02aa425fc201e624960c3c5f5f9", "filename": "libstdc++-v3/ChangeLog-2005", "status": "modified", "additions": 292, "deletions": 292, "changes": 584, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2005", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2005", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2005?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -80,7 +80,7 @@\n \t* testsuite/25_algorithms/unique_copy/check_type.cc (S2::S2,X2::X2):\n \tLikewise.\n \t* testsuite/22_locale/ctype/narrow/char/19955.cc (do_narrow): Likewise.\n-\t* testsuite/22_locale/ctype/is/char/9858.cc (Derived::do_is, \n+\t* testsuite/22_locale/ctype/is/char/9858.cc (Derived::do_is,\n \tDerived::do_scan_is, Derived::do_scan_not, Derived2::do_is,\n \tDerived2::do_scan_is, Derived2::do_scan_not): Likewise.\n \t* testsuite/22_locale/time_put/put/wchar_t/12439_1.cc (TP::do_put):\n@@ -106,7 +106,7 @@\n \tto_int_type): Likewise.\n \t* testsuite/27_io/basic_filebuf/imbue/12206.cc (codecvt::do_out, do_in,\n \tdo_unshift, do_length): Likewise.\n-\t* testsuite/21_strings/basic_string/capacity/1.cc \n+\t* testsuite/21_strings/basic_string/capacity/1.cc\n \t(operator==(A<T>,A<T>), operator<(A<T>,A<T>),\n \tchar_traits::to_char_type, char_traits::to_int_type): Likewise\n \t* testsuite/testsuite_character.h (ctype::do_is, ctype::do_scan_is,\n@@ -146,7 +146,7 @@\n \t* testsuite/27_io/basic_ostream/ends/wchar_t/1.cc (test01): Likewise.\n \t* testsuite/27_io/basic_ostream/ends/char/1.cc (test01): Likewise.\n \t* testsuite/tr1/2_general_utilities/memory/shared_ptr/\n-\tassign/shared_ptr.cc (test01): Correct return type.\t\n+\tassign/shared_ptr.cc (test01): Correct return type.\n \t* testsuite/27_io/basic_filebuf/close/char/2.cc (test_02):\n \tAdd default value to close_num.\n \n@@ -172,12 +172,12 @@\n \t* include/bits/deque.tcc (erase(iterator)): Avoid troubles with ADL,\n \tuser defined operators and _Deque_iterator.\n \t* testsuite/23_containers/deque/types/1.cc: Add.\n-\t\n+\n \t* include/bits/deque.tcc (_M_insert_aux(iterator, size_type,\n \tconst value_type&)): Qualify with std:: fill call.\n \n 2005-12-18  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* include/bits/c++config: Add in revised namespace associations.\n \t_GLIBCXX_BEGIN_NAMESPACE: New macro.\n \t_GLIBCXX_END_NAMESPACE: Same.\n@@ -188,25 +188,25 @@\n \t* config.h.in: Same.\n \t* config/abi/pre/gnu-versioned-namespace.ver: New.\n \t* config/abi/pre/gnu.ver (GLIBCXX_3.4.7): Add exports for nested\n-\tdebug mode items. \n+\tdebug mode items.\n \t* include/Makefile.am (${host_builddir}/c++config.h): Fill in\n \tvalues for __GLIBCXX__ and _GLIBCXX_NAMESPACE_ASSOCIATION_VERSION.\n \t* include/Makefile.in: Regnerate.\n \t* src/compatibility.cc: Alias new, nested definitions to exported\n \tsymbols from non-nested __gnu_debug.\n \t* src/Makefile.am:  Add in ENABLE_SYMVERS_GNU_NAMESPACE.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \t* docs/html/debug_mode.html: Revise for nested design.\n \t* docs/html/debug.html: Use debug qualifications instead of\n \t__gnu_debug.\n \t* docs/html/configopts.html: Revise documentation for\n \t--enable-symvers.\n-\t\n+\n \t* include/debug/formatter: Simplify namespace qualifications for\n \tcurrent, nested-only reality. Add top-level namespace alias,\n \tnamespace debug, for debug-mode containers.\n-\t* include/debug/safe_iterator.h: Same.\t\n+\t* include/debug/safe_iterator.h: Same.\n \t* include/debug/set.h: Same.\n \t* include/debug/hash_multimap.h: Same.\n \t* include/debug/hash_set.h: Same.\n@@ -225,7 +225,7 @@\n \t* include/debug/macros.h: Same.\n \t* include/debug/list\n \t* include/debug/debug.h: Same.\n-\t* include/debug/multimap.h: Same.\t\n+\t* include/debug/multimap.h: Same.\n \t* src/debug.cc: Same.\n \t* testsuite/23_containers/vector/invalidation/1.cc: Cleanups.\n \t* testsuite/23_containers/vector/invalidation/2.cc: Same.\n@@ -251,9 +251,9 @@\n \t* testsuite/23_containers/map/invalidation/1.cc: Same.\n \t* testsuite/23_containers/map/invalidation/2.cc: Same.\n \t* testsuite/23_containers/map/insert/16813.cc: Same.\n-\t\n+\n \t* include/bits/basic_ios.h: Use _GLIBCXX_BEGIN_NAMESPACE(std) and\n-\tfriends.\t\n+\tfriends.\n \t* include/bits/stl_list.h: Same.\n \t* include/bits/stl_map.h: Same.\n \t* include/bits/stl_algobase.h: Same.\n@@ -494,7 +494,7 @@\n \t* config/cpu/s390/atomicity.h: Same.\n \t* config/io/c_io_stdio.h: Same.\n \t* config/io/basic_file_stdio.cc: Same.\n-\t* config/io/basic_file_stdio.h: Same.\t\n+\t* config/io/basic_file_stdio.h: Same.\n \t* src/misc-inst.cc: Same.\n \t* src/concept-inst.cc: Same.\n \t* src/ext-inst.cc: Same.\n@@ -505,10 +505,10 @@\n \t* libsupc++/exception: Same.\n \t* libsupc++/vterminate.cc: Same.\n \t* testsuite/ext/hash_map/1.cc: Explicitly qualify __gnu_cxx::hash_map.\n-\t* testsuite/ext/hash_map/14648.cc: Same.\t\n+\t* testsuite/ext/hash_map/14648.cc: Same.\n \n \t* libsupc++/eh_alloc.cc: Correct comment line spacing.\n-\t\t\n+\n 2005-12-18  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_algobase.h (__copy_normal::copy_n): Uglify\n@@ -543,10 +543,10 @@\n \n \t* config/abi/post: New.\n \t* config/abi/*-linux-gnu: Move to..\n-\t* config/abi/post/*-linux-gnu: ... here.\t\n+\t* config/abi/post/*-linux-gnu: ... here.\n \t* config/abi/pre: New.\n \t* config/linker-map.gnu: Move to ..\n-\t* config/abi/pre/gnu.ver: ... here.\t\n+\t* config/abi/pre/gnu.ver: ... here.\n \t* config/linker-map.dummy: Move to..\n \t* config/abi/pre/none.ver: ... here.\n \t* src/Makefile.am: Use ENABLE_SYMVERS_GNU,\n@@ -560,17 +560,17 @@\n \t* configure: Regnerate.\n \t* config.h.in: Regnerate.\n \t* src/compatibility.cc: Adjust macro usage.\n-\t\n+\n 2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n         * src/io-inst.cc: Separate instantiations into...\n         * src/ios-inst.cc: .. this.\n         * src/iostream-inst.cc: ... and this.\n         * src/Makefile.am (sources): Update.\n-        * src/Makefile.in: Regenerate.\t\n+        * src/Makefile.in: Regenerate.\n \n 2005-12-17  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \tPR libstdc++/25472\n         * include/c_std/std_cstdlib.h: Fix for freestanding.\n \n@@ -596,14 +596,14 @@\n \tUse the above.\n \t* include/bits/deque.tcc (deque<>::operator=, _M_assign_aux): Same.\n \t(erase(iterator, iterator)): Likewise, clean-up.\n-\t(erase(iterator)): Tweak, don't call copy unnecessarily. \n+\t(erase(iterator)): Tweak, don't call copy unnecessarily.\n \t(_M_destroy_data_aux): Define.\n \t* testsuite/23_containers/deque/modifiers/erase/1.cc: New.\n \t* testsuite/23_containers/deque/modifiers/erase/2.cc: Likewise.\n \n 2005-12-17  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n-\t* include/bits/valarray_after.h (_Expr<>::operator[](slice)): \n+\t* include/bits/valarray_after.h (_Expr<>::operator[](slice)):\n \tDon't assume the closure implements general indexing, as a matter\n \tof fact, most of them don't.\n \t(_Expr<>::operator[](const gslice&)): Likewise.\n@@ -766,7 +766,7 @@\n \tAdd non const version.\n \t* include/ext/rc_string_base.h (__rc_string_base<>::_M_get_allocator):\n \tLikewise.\n-\t\n+\n \t* include/ext/sso_string_base.h (__sso_string_base<>::_M_erase): Add.\n \t* include/ext/rc_string_base.h (__rc_string_base<>::_M_erase): Likewise.\n \t(_M_leak_hard): Use it.\n@@ -846,7 +846,7 @@\n \t* acinclude.m4: Include tls.m4.\n \t* configure: Regenerate.\n \t* config.h.in: Same.\n-\t\n+\n 2005-11-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* libsupc++/del_op.cc: Include c++config.h first.\n@@ -897,7 +897,7 @@\n \n \t* include/ext/rc_string_base.h (__rc_string_base<>::_Rep): Use\n \tanonymous union together with _CharT to fix alignment issues,\n-\trebind to _Rep and rename _Raw_alloc to _Rep_alloc_type.\t\n+\trebind to _Rep and rename _Raw_alloc to _Rep_alloc_type.\n \t(__rc_string_base<>::_Rep::_S_create, _M_destroy): Adjust consistently.\n \n \t* include/ext/vstring_util.h (__is_null_p): Move inside struct\n@@ -1056,13 +1056,13 @@\n \tnew.\n \t(GLIBCXX_ENABLE_PCH): Adjust message order.\n \t* configure: Regenerate.\n-\t\n+\n \t* scripts/testsuite_flags.in (query): Correct print_usagex typo.\n \n \t* include/bits/functexcept.h: Remove argument names.\n \n \t* src/mt_allocator.cc: Adjust comment.\n-\t\n+\n 2005-11-06  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/18174\n@@ -1089,7 +1089,7 @@\n \t* libmath/Makefile.in: Likewise.\n \t* libsupc++/Makefile.in: Likewise.\n \t* po/Makefile.in: Likewise.\n-\t* src/Makefile.in: Likewise.\t\n+\t* src/Makefile.in: Likewise.\n \t* testsuite/Makefile.in: Likewise.\n \n 2005-11-03  Paolo Carlini  <pcarlini@suse.de>\n@@ -1375,7 +1375,7 @@\n \tPR libstdc++/23978\n \t* include/tr1/tuple_iterate.h (tuple): Add operator=(std::pair).\n \t* testsuite/tr1/6_containers/tuple/creation_functions/23978.cc: New.\n-\t\n+\n \t* include/tr1/functional (ref, cref): Make inline.\n \t* include/tr1/tuple_iterate.h (tie): Correct formatting.\n \t(make_tuple): Make inline.\n@@ -1400,7 +1400,7 @@\n \tPR libstdc++/23956\n \t* include/ext/mt_allocator.h: Remove excess\n \tpolicy_type::_S_get_pool calls in constructors.\n-\t\n+\n 2005-09-18  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/23417 (cont)\n@@ -1448,7 +1448,7 @@\n \n \tPR libstdc++/21674\n \t* testsuite/21_strings/basic_string/element_access/char/21674.cc: New.\n-\t* testsuite/21_strings/basic_string/element_access/wchar_t/21674.cc: \n+\t* testsuite/21_strings/basic_string/element_access/wchar_t/21674.cc:\n \tNew.\n \n 2005-09-12  David Edelsohn  <dje@gcc.gnu.org>\n@@ -1458,13 +1458,13 @@\n \t* include/Makefile.am (stamp-assoc): Install each subgroup\n \tof headers separately.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2005-09-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/ext/mt_allocator/22309_thread.cc: Remove dg-do run.\n \t* testsuite/lib/libstdc++.exp ( proc libstdc++_init): Enable\n \tshared only for linux.\n-\t\n+\n 2005-09-12  Benjamin Kosnik  <bkoz@redhat.com>\n \t    David Edelsohn  <dje@gcc.gnu.org>\n \n@@ -1474,7 +1474,7 @@\n \t(install-headers): Use them.\n \t(stamp-assoc): Same.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2005-09-12  Chris Jefferson  <chris@bubblescope.net>\n \n \t* include/bits/stl_algo.h (search_n): Delegate to specializations.\n@@ -1519,12 +1519,12 @@\n \t(__pool<true>::_M_initialize_once): Nothing fancy.\n \t(__pool<true>::_M_once): Remove.\n \t(__common_pool): New.\n-\t(__common_pool_base): New.\t\n+\t(__common_pool_base): New.\n \t(__per_type_pool): New.\n \t(__per_type_pool_base): New.\n \t* src/mt_allocator.cc: Same.\n \t* config/linker-map.gnu (__pool<true>::_M_initialize()): Add.\n-\t\n+\n 2005-09-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/19265\n@@ -1539,7 +1539,7 @@\n \tDon't use _M_thread_freelist and _M_thread_freelist_initial\n \t__pool<true> fields, instead use __gnu_internal::freelist fields, call\n \tgthread_key_create just once.  Use\n-\t__gnu_internal::_M_destroy_thread_key as key destructor.\t\n+\t__gnu_internal::_M_destroy_thread_key as key destructor.\n \t(__gnu_cxx::__pool<true>::_M_get_thread_id): Store size_t id\n \trather than _Thread_record* in the thread specific value.  Don't\n \tuse _M_thread_freelist __pool<true> field, instead use\n@@ -1550,7 +1550,7 @@\n             Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/19265\n-\tPR libstdc++/22309\t\n+\tPR libstdc++/22309\n \t* testsuite/testsuite_shared.cc: New.\n \t* testsuite/lib/dg-options.exp (dg-require-sharedlib): New.\n \t* testsuite/lib/libstdc++.exp (libstdc++_init): Look for shared\n@@ -1606,7 +1606,7 @@\n \t* src/locale_init.cc (locale_mutex): Same.\n \t* src/mt_allocator.cc (freelist_mutex): Same.\n \t* src/pool_allocator.cc (palloc_init_mutex): Same.\n-\t\n+\n 2005-09-02  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/tr1/6_containers/unordered/hashtable/23465.cc:\n@@ -1619,7 +1619,7 @@\n \n 2005-09-01  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Paolo Carlini  <pcarlini@suse.de>\n-\t\n+\n \t* testsuite/lib/libstdc++.exp (check_v3_target_cxa_atexit): Fix\n \tcomment.\n \n@@ -1645,7 +1645,7 @@\n \t* testsuite/ext/new_allocator/deallocate_local.cc: Same.\n \n 2005-08-31  Paolo Carlini  <pcarlini@suse.de>\n-\t    Kaspar Fischer <fischerk@inf.ethz.ch> \n+\t    Kaspar Fischer <fischerk@inf.ethz.ch>\n \n \tPR libstdc++/23632\n \t* include/bits/stl_bvector.h (_Bit_iterator::operator[],\n@@ -1693,7 +1693,7 @@\n \t* include/debug/macros.h: Remove __fancy_abort declaration,\n \t_GLIBXX_DEBUG_ABORT definition.\n \t* config/linker-map.gnu: Remove export.\n-\t\n+\n 2005-08-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* scripts/check_compile (UNIQUE_ID): New. Use to name output files.\n@@ -1793,7 +1793,7 @@\n \tPR libstdc++/22284\n \t* libsupc++/eh_personality.cc (PERSONALITY_FUNCTION): Revert\n \tthe change to info.ttype_base.\n-\t\n+\n 2005-07-28  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \t* include/std/std_valarray.h: Fix grammar in comments.\n@@ -1896,7 +1896,7 @@\n \tthe preferred base class. Two are provided: __rc_string_base,\n \twhich implements a behavior very similar to our standard string,\n \tand __sso_string_base, not reference-counted and optimized for\n-\tshort strings. \n+\tshort strings.\n \t* include/ext/rc_string_base.h: New.\n \t* include/ext/sso_string_base.h: Likewise.\n \t* include/ext/vstring.h: Likewise.\n@@ -1939,10 +1939,10 @@\n \ttype before shifting.\n \n 2005-06-29  Paolo Carlini  <pcarlini@suse.de>\n-\t    \n+\n \tPR libstdc++/21244 (cont^2)\n \t* include/ext/bitmap_allocator.h: Convert everywhere\n-\tbits_per_block to size_t.\t\n+\tbits_per_block to size_t.\n \n 2005-06-29  Jonathan Wakely  <redi@gcc.gnu.org>\n \n@@ -2030,7 +2030,7 @@\n \n 2005-06-27  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Ami Tavory  <pbassoc@gmail.com>\n-\t\n+\n \t* docs/html/documentation.html: Add link for policy based\n \tassociative containers docs.\n \t* docs/html/ext/pb_assoc/Std_hash_set_impl.jpg: New.\n@@ -2247,7 +2247,7 @@\n \t* include/ext/pb_assoc/detail/basic_tree_assoc_cntnr/\n \t  r_range_iteration_fn_imps.hpp: New.\n \t* include/ext/pb_assoc/detail/basic_tree_assoc_cntnr/\n-\t  range_iteration_fn_imps.hpp: New.\t\n+\t  range_iteration_fn_imps.hpp: New.\n \t* include/ext/pb_assoc/detail/basic_tree_assoc_cntnr/\n \t  split_join_fn_imps.hpp: New.\n \t* include/ext/pb_assoc/detail/bin_search_tree_/\n@@ -2524,7 +2524,7 @@\n \t* testsuite/performance/23_containers/create_sort/list.cc: ...here.\n \t* testsuite/performance/23_containers/set_insert_from_sorted.cc: Move.\n \t* testsuite/performance/23_containers/insert_from_sorted/set.cc: here.\n-\t\n+\n 2005-06-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libstdc++/22109\n@@ -2559,7 +2559,7 @@\n \tv3-symver before proceeding.\n \t* testsuite/lib/libstdc++.exp (libstdc++-dg-test): Set v3-symvers\n \tif _GLIBCXX_SYMVER.\n-\t\n+\n 2005-06-17  Paolo Carlini  <pcarlini@suse.de>\n \n         Port from libstdcxx_so_7-branch:\n@@ -2673,7 +2673,7 @@\n \tPR libstdc++/21955\n \t* include/std/std_sstream.h (basic_stringbuf::showmanyc): Add.\n \tRemove unnecessary this->_M_mode decoration.\n-\t* include/bits/fstream.tcc: Adjust line spacing.\t\n+\t* include/bits/fstream.tcc: Adjust line spacing.\n \t* testsuite/27_io/basic_streambuf/in_avail/char/1.cc: New, test\n \tbase class behavior.\n \t* testsuite/27_io/basic_streambuf/in_avail/wchar_t/1.cc: Same.\n@@ -2685,7 +2685,7 @@\n \t* testsuite/27_io/basic_stringbuf/str/char/1.cc: Same.\n \t* testsuite/27_io/basic_streambuf/in_avail/char/9701-3.cc: Move...\n \t* testsuite/27_io/basic_filebuf/in_avail/char/9701-3.cc: ...here.\n-\t\n+\n 2005-06-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_C99): Use C++ compiler for complex\n@@ -2694,7 +2694,7 @@\n \n 2005-06-07  Adrian Straetling  <straetling@de.ibm.com>\n \n-\t* config/cpu/s390/atomicity.h: (__exchange_and_add, \n+\t* config/cpu/s390/atomicity.h: (__exchange_and_add,\n \t__atomic_add): Use the builtins for atomic memory operations.\n \n 2005-06-06  Paolo Carlini  <pcarlini@suse.de>\n@@ -2874,10 +2874,10 @@\n \tPR libstdc++/21674\n \t* include/bits/c++config: Remove extern template use when in debug\n \tmode, disable for non-weak systems.\n-\t\n+\n 2005-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/20534 \n+\tPR libstdc++/20534\n \t* include/debug/debug.h: Forwarding header, that pulls in details\n \tonly if in debug mode.\n \t* include/debug/macros.h: ...transfer all the internal macros here.\n@@ -2893,7 +2893,7 @@\n \t* include/ext/hash_map: Same.\n \t* include/debug/hash_map: Fix included files to match actual files.\n \t* include/debug/hash_set: Same.\n-\t\t\n+\n 2005-05-26  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/13943\n@@ -2915,7 +2915,7 @@\n \t* configure.ac (libtool_VERSION): To 6:5:0.\n \t* configure: Regenerate.\n \t* testsuite/testsuite_abi.cc (check_version): Add GLIBCXX_3.4.5.\n-\t\n+\n 2005-05-25  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/basic_string.h (_Rep::_M_set_length_and_sharable):\n@@ -2962,7 +2962,7 @@\n \n \t* include/bits/stl_algo.h (replace_copy, replace_copy_if):\n \tDon't assume that __new_value and *__first are convertible to\n-\teach other.\t\n+\teach other.\n \n \t* testsuite/25_algorithms/find/1.cc: New.\n \t* testsuite/25_algorithms/find/check_type.cc: New.\n@@ -2989,7 +2989,7 @@\n         \t    Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/ext/is_heap/check_type.cc: New.\n-\t\n+\n \t2005-02-27  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/ext/is_heap/1.cc: New.\n@@ -3032,7 +3032,7 @@\n \t* testsuite/25_algorithms/set_difference/1.cc: New.\n \t* testsuite/25_algorithms/set_difference/check_type.cc: New.\n \t* testsuite/25_algorithms/set_symmetric_difference/1.cc: New.\n-\t* testsuite/25_algorithms/set_symmetric_difference/check_type.cc: New.\t\n+\t* testsuite/25_algorithms/set_symmetric_difference/check_type.cc: New.\n \t* testsuite/25_algorithms/min_element/1.cc: New.\n \t* testsuite/25_algorithms/min_element/check_type.cc: New.\n \t* testsuite/25_algorithms/max_element/1.cc: New.\n@@ -3093,14 +3093,14 @@\n \n \t* testsuite/testsuite_iterators.h (WritableObject::WritableObject):\n \tAdd const.\n-\t\n+\n \t2005-02-01  Christopher Jefferson  <chris@bubblescope.net>\n \n \t* testsuite/testsuite_iterators.h (random_access_iterator_wrapper::\n \toperator--): Fix typo.\n \t(OutputContainer::OutputContainer): Correct zeroing array.\n \t(WritableObject::operator==): Fix typo.\n-        (WritableObject::operator=): make operator= templated \n+        (WritableObject::operator=): make operator= templated\n \tto allow differing types to be assigned.\n \t(WritableObject::operator++): Fix checking if iterator is\n \twritten to multiple times.\n@@ -3185,7 +3185,7 @@\n \t* testsuite/22_locale/codecvt/always_noconv/wchar_t/2.cc: Likewise.\n \t* testsuite/22_locale/codecvt/always_noconv/wchar_t/3.cc: Likewise.\n \t* testsuite/22_locale/codecvt/always_noconv/wchar_t/4.cc: Likewise.\n-\t* testsuite/22_locale/codecvt/always_noconv/wchar_t/wrapped_env.cc: \n+\t* testsuite/22_locale/codecvt/always_noconv/wchar_t/wrapped_env.cc:\n \tLikewise.\n \t* testsuite/22_locale/codecvt/always_noconv/wchar_t/wrapped_locale.cc:\n \tLikewise.\n@@ -3202,229 +3202,229 @@\n \t* testsuite/22_locale/codecvt/in/wchar_t/2.cc: Likewise.\n \t* testsuite/22_locale/codecvt/in/wchar_t/3.cc: Likewise.\n \t* testsuite/22_locale/codecvt/in/wchar_t/4.cc: Likewise.\n-\t* testsuite/22_locale/codecvt/in/wchar_t/7.cc: Likewise. \n+\t* testsuite/22_locale/codecvt/in/wchar_t/7.cc: Likewise.\n \t* testsuite/22_locale/codecvt/in/wchar_t/8.cc: Likewise.\n \t* testsuite/22_locale/codecvt/in/wchar_t/9.cc: Likewise.\n-\t* testsuite/22_locale/codecvt/in/wchar_t/wrapped_env.cc: Likewise. \n-\t* testsuite/22_locale/codecvt/in/wchar_t/wrapped_locale.cc: Likewise.    \n-\t* testsuite/22_locale/codecvt/length/char/wrapped_env.cc: Likewise. \n-\t* testsuite/22_locale/codecvt/length/char/wrapped_locale.cc: Likewise.    \n-\t* testsuite/22_locale/codecvt/length/wchar_t/2.cc: Likewise.   \n-\t* testsuite/22_locale/codecvt/length/wchar_t/3.cc: Likewise.   \n-\t* testsuite/22_locale/codecvt/length/wchar_t/4.cc: Likewise.   \n-\t* testsuite/22_locale/codecvt/length/wchar_t/7.cc: Likewise.   \n-\t* testsuite/22_locale/codecvt/length/wchar_t/wrapped_env.cc: Likewise.      \n+\t* testsuite/22_locale/codecvt/in/wchar_t/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/in/wchar_t/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/wchar_t/4.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/wchar_t/7.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/length/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/codecvt/length/wchar_t/wrapped_locale.cc:\n \tLikewise.\n \t* testsuite/22_locale/codecvt/max_length/char/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/codecvt/max_length/char/wrapped_locale.cc:\n-\tLikewise.  \n-\t* testsuite/22_locale/codecvt/max_length/wchar_t/2.cc: Likewise.    \n-\t* testsuite/22_locale/codecvt/max_length/wchar_t/3.cc: Likewise.    \n-\t* testsuite/22_locale/codecvt/max_length/wchar_t/4.cc: Likewise.    \n+\tLikewise.\n+\t* testsuite/22_locale/codecvt/max_length/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/max_length/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/max_length/wchar_t/4.cc: Likewise.\n \t* testsuite/22_locale/codecvt/max_length/wchar_t/wrapped_env.cc:\n-\tLikewise.  \n+\tLikewise.\n \t* testsuite/22_locale/codecvt/max_length/wchar_t/wrapped_locale.cc:\n \tLikewise.\n-\t* testsuite/22_locale/codecvt/out/char/wrapped_env.cc: Likewise.    \n-\t* testsuite/22_locale/codecvt/out/char/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/codecvt/out/wchar_t/2.cc: Likewise.  \n-\t* testsuite/22_locale/codecvt/out/wchar_t/3.cc: Likewise.  \n-\t* testsuite/22_locale/codecvt/out/wchar_t/4.cc: Likewise.  \n-\t* testsuite/22_locale/codecvt/out/wchar_t/7.cc: Likewise.  \n-\t* testsuite/22_locale/codecvt/out/wchar_t/wrapped_env.cc: Likewise. \n-\t* testsuite/22_locale/codecvt/out/wchar_t/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/codecvt/unshift/char/wrapped_env.cc: Likewise.   \n+\t* testsuite/22_locale/codecvt/out/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/out/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/out/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/out/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/out/wchar_t/4.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/out/wchar_t/7.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/out/wchar_t/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/out/wchar_t/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/unshift/char/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/codecvt/unshift/char/wrapped_locale.cc: Likewise.\n-\t* testsuite/22_locale/codecvt/unshift/wchar_t/2.cc: Likewise.    \n-\t* testsuite/22_locale/codecvt/unshift/wchar_t/3.cc: Likewise.    \n-\t* testsuite/22_locale/codecvt/unshift/wchar_t/4.cc: Likewise.    \n+\t* testsuite/22_locale/codecvt/unshift/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/unshift/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/codecvt/unshift/wchar_t/4.cc: Likewise.\n \t* testsuite/22_locale/codecvt/unshift/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/codecvt/unshift/wchar_t/wrapped_locale.cc:\n \tLikewise.\n-\t* testsuite/22_locale/collate/compare/char/1.cc: Likewise.  \n-\t* testsuite/22_locale/collate/compare/char/2.cc: Likewise.  \n-\t* testsuite/22_locale/collate/compare/char/3.cc: Likewise.  \n-\t* testsuite/22_locale/collate/compare/char/wrapped_env.cc: Likewise.        \n-\t* testsuite/22_locale/collate/compare/char/wrapped_locale.cc: Likewise.     \n-\t* testsuite/22_locale/collate/compare/wchar_t/1.cc: Likewise.     \n-\t* testsuite/22_locale/collate/compare/wchar_t/2.cc: Likewise.     \n-\t* testsuite/22_locale/collate/compare/wchar_t/3.cc: Likewise.     \n+\t* testsuite/22_locale/collate/compare/char/1.cc: Likewise.\n+\t* testsuite/22_locale/collate/compare/char/2.cc: Likewise.\n+\t* testsuite/22_locale/collate/compare/char/3.cc: Likewise.\n+\t* testsuite/22_locale/collate/compare/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/collate/compare/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/collate/compare/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/collate/compare/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/collate/compare/wchar_t/3.cc: Likewise.\n \t* testsuite/22_locale/collate/compare/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/collate/compare/wchar_t/wrapped_locale.cc:\n-\tLikewise.  \n-\t* testsuite/22_locale/collate/hash/char/2.cc: Likewise.     \n-\t* testsuite/22_locale/collate/hash/char/wrapped_env.cc: Likewise.   \n-\t* testsuite/22_locale/collate/hash/char/wrapped_locale.cc: Likewise.        \n-\t* testsuite/22_locale/collate/hash/wchar_t/2.cc: Likewise.  \n+\tLikewise.\n+\t* testsuite/22_locale/collate/hash/char/2.cc: Likewise.\n+\t* testsuite/22_locale/collate/hash/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/collate/hash/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/collate/hash/wchar_t/2.cc: Likewise.\n \t* testsuite/22_locale/collate/hash/wchar_t/wrapped_env.cc: Likewise.\n-\t* testsuite/22_locale/collate/hash/wchar_t/wrapped_locale.cc: Likewise.     \n-\t* testsuite/22_locale/collate/transform/char/2.cc: Likewise.     \n-\t* testsuite/22_locale/collate/transform/char/3.cc: Likewise.     \n-\t* testsuite/22_locale/collate/transform/char/wrapped_env.cc: Likewise.      \n+\t* testsuite/22_locale/collate/hash/wchar_t/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/collate/transform/char/2.cc: Likewise.\n+\t* testsuite/22_locale/collate/transform/char/3.cc: Likewise.\n+\t* testsuite/22_locale/collate/transform/char/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/collate/transform/char/wrapped_locale.cc:\n \tLikewise.\n-\t* testsuite/22_locale/collate/transform/wchar_t/2.cc: Likewise. \n-\t* testsuite/22_locale/collate/transform/wchar_t/3.cc: Likewise. \n+\t* testsuite/22_locale/collate/transform/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/collate/transform/wchar_t/3.cc: Likewise.\n \t* testsuite/22_locale/collate/transform/wchar_t/wrapped_env.cc:\n \tLikewise.\n \t* testsuite/22_locale/collate/transform/wchar_t/wrapped_locale.cc:\n \tLikewise.\n \t* testsuite/22_locale/collate_byname/named_equivalence.cc: Likewise.\n-\t* testsuite/22_locale/ctype/cons/char/wrapped_env.cc: Likewise.    \n-\t* testsuite/22_locale/ctype/cons/char/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/ctype/is/char/2.cc: Likewise. \n-\t* testsuite/22_locale/ctype/is/char/wrapped_env.cc: Likewise.      \n-\t* testsuite/22_locale/ctype/is/char/wrapped_locale.cc: Likewise.  \n-\t* testsuite/22_locale/ctype/is/wchar_t/2.cc: Likewise.   \n-\t* testsuite/22_locale/ctype/is/wchar_t/wrapped_env.cc: Likewise.  \n+\t* testsuite/22_locale/ctype/cons/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/ctype/cons/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/ctype/is/char/2.cc: Likewise.\n+\t* testsuite/22_locale/ctype/is/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/ctype/is/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/ctype/is/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/ctype/is/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/ctype/is/wchar_t/wrapped_locale.cc: Likewise.\n \t* testsuite/22_locale/ctype/narrow/char/wrapped_env.cc: Likewise.\n-\t* testsuite/22_locale/ctype/narrow/char/wrapped_locale.cc: Likewise.        \n-\t* testsuite/22_locale/ctype/narrow/wchar_t/3.cc: Likewise. \n-\t* testsuite/22_locale/ctype/narrow/wchar_t/wrapped_env.cc: Likewise.        \n+\t* testsuite/22_locale/ctype/narrow/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/ctype/narrow/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/ctype/narrow/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/ctype/narrow/wchar_t/wrapped_locale.cc: Likewise.\n-\t* testsuite/22_locale/ctype/scan/char/wrapped_env.cc: Likewise.   \n-\t* testsuite/22_locale/ctype/scan/char/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/ctype/scan/wchar_t/wrapped_env.cc: Likewise. \n-\t* testsuite/22_locale/ctype/scan/wchar_t/wrapped_locale.cc: Likewise.       \n-\t* testsuite/22_locale/ctype/to/char/wrapped_env.cc: Likewise.       \n-\t* testsuite/22_locale/ctype/to/char/wrapped_locale.cc: Likewise.    \n-\t* testsuite/22_locale/ctype/to/wchar_t/wrapped_env.cc: Likewise.    \n-\t* testsuite/22_locale/ctype/to/wchar_t/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/ctype/widen/char/wrapped_env.cc: Likewise.    \n-\t* testsuite/22_locale/ctype/widen/char/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/ctype/widen/wchar_t/2.cc: Likewise.   \n-\t* testsuite/22_locale/ctype/widen/wchar_t/3.cc: Likewise.   \n+\t* testsuite/22_locale/ctype/scan/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/ctype/scan/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/ctype/scan/wchar_t/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/ctype/scan/wchar_t/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/ctype/to/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/ctype/to/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/ctype/to/wchar_t/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/ctype/to/wchar_t/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/ctype/widen/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/ctype/widen/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/ctype/widen/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/ctype/widen/wchar_t/3.cc: Likewise.\n \t* testsuite/22_locale/ctype/widen/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/ctype/widen/wchar_t/wrapped_locale.cc: Likewise.\n \t* testsuite/22_locale/facet/2.cc: Likewise.\n \t* testsuite/22_locale/locale/cons/12352.cc: Likewise.\n \t* testsuite/22_locale/locale/cons/12438.cc: Likewise.\n-\t* testsuite/22_locale/locale/cons/12658_thread-1.cc: Likewise. \n-\t* testsuite/22_locale/locale/cons/12658_thread-2.cc: Likewise. \n+\t* testsuite/22_locale/locale/cons/12658_thread-1.cc: Likewise.\n+\t* testsuite/22_locale/locale/cons/12658_thread-2.cc: Likewise.\n \t* testsuite/22_locale/locale/cons/2.cc: Likewise.\n \t* testsuite/22_locale/locale/cons/4.cc: Likewise.\n \t* testsuite/22_locale/locale/cons/5.cc: Likewise.\n \t* testsuite/22_locale/locale/cons/7.cc: Likewise.\n-\t* testsuite/22_locale/locale/cons/7222-env.cc: Likewise.  \n-\t* testsuite/22_locale/locale/global_locale_objects/14071.cc: Likewise.  \n+\t* testsuite/22_locale/locale/cons/7222-env.cc: Likewise.\n+\t* testsuite/22_locale/locale/global_locale_objects/14071.cc: Likewise.\n \t* testsuite/22_locale/locale/global_locale_objects/2.cc: Likewise.\n \t* testsuite/22_locale/messages/members/char/1.cc: Likewise.\n \t* testsuite/22_locale/messages/members/char/2.cc: Likewise.\n \t* testsuite/22_locale/messages/members/char/3.cc: Likewise.\n-\t* testsuite/22_locale/messages/members/char/wrapped_env.cc: Likewise.   \n+\t* testsuite/22_locale/messages/members/char/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/messages/members/char/wrapped_locale.cc: Likewise.\n-\t* testsuite/22_locale/messages_byname/named_equivalence.cc: Likewise.   \n-\t* testsuite/22_locale/money_get/get/char/1.cc: Likewise.    \n-\t* testsuite/22_locale/money_get/get/char/10.cc: Likewise.   \n-\t* testsuite/22_locale/money_get/get/char/11.cc: Likewise.   \n+\t* testsuite/22_locale/messages_byname/named_equivalence.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/1.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/10.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/11.cc: Likewise.\n \t* testsuite/22_locale/money_get/get/char/11528.cc: Likewise.\n-\t* testsuite/22_locale/money_get/get/char/12.cc: Likewise.   \n-\t* testsuite/22_locale/money_get/get/char/13.cc: Likewise.   \n-\t* testsuite/22_locale/money_get/get/char/15.cc: Likewise.   \n-\t* testsuite/22_locale/money_get/get/char/16.cc: Likewise.   \n-\t* testsuite/22_locale/money_get/get/char/17.cc: Likewise.   \n-\t* testsuite/22_locale/money_get/get/char/18.cc: Likewise.   \n-\t* testsuite/22_locale/money_get/get/char/2.cc: Likewise.    \n-\t* testsuite/22_locale/money_get/get/char/3.cc: Likewise.    \n-\t* testsuite/22_locale/money_get/get/char/4.cc: Likewise.    \n-\t* testsuite/22_locale/money_get/get/char/wrapped_env.cc: Likewise. \n-\t* testsuite/22_locale/money_get/get/char/wrapped_locale.cc: Likewise.  \n-\t* testsuite/22_locale/money_get/get/wchar_t/1.cc: Likewise. \n-\t* testsuite/22_locale/money_get/get/wchar_t/10.cc: Likewise.      \n-\t* testsuite/22_locale/money_get/get/wchar_t/11.cc: Likewise.      \n+\t* testsuite/22_locale/money_get/get/char/12.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/13.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/15.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/16.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/17.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/18.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/2.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/3.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/4.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/10.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/11.cc: Likewise.\n \t* testsuite/22_locale/money_get/get/wchar_t/11528.cc: Likewise.\n-\t* testsuite/22_locale/money_get/get/wchar_t/12.cc: Likewise.      \n-\t* testsuite/22_locale/money_get/get/wchar_t/13.cc: Likewise.      \n-\t* testsuite/22_locale/money_get/get/wchar_t/15.cc: Likewise.      \n-\t* testsuite/22_locale/money_get/get/wchar_t/16.cc: Likewise.      \n-\t* testsuite/22_locale/money_get/get/wchar_t/17.cc: Likewise.      \n-\t* testsuite/22_locale/money_get/get/wchar_t/18.cc: Likewise.      \n-\t* testsuite/22_locale/money_get/get/wchar_t/2.cc: Likewise. \n-\t* testsuite/22_locale/money_get/get/wchar_t/3.cc: Likewise. \n-\t* testsuite/22_locale/money_get/get/wchar_t/4.cc: Likewise. \n-\t* testsuite/22_locale/money_get/get/wchar_t/wrapped_env.cc: Likewise.      \n+\t* testsuite/22_locale/money_get/get/wchar_t/12.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/13.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/15.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/16.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/17.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/18.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/4.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/money_get/get/wchar_t/wrapped_locale.cc: Likewise.\n-\t* testsuite/22_locale/money_put/put/char/1.cc: Likewise.  \n-\t* testsuite/22_locale/money_put/put/char/2.cc: Likewise.  \n-\t* testsuite/22_locale/money_put/put/char/3.cc: Likewise.  \n-\t* testsuite/22_locale/money_put/put/char/9780-3.cc: Likewise.      \n-\t* testsuite/22_locale/money_put/put/char/wrapped_env.cc: Likewise. \n-\t* testsuite/22_locale/money_put/put/char/wrapped_locale.cc: Likewise.  \n-\t* testsuite/22_locale/money_put/put/wchar_t/1.cc: Likewise. \n-\t* testsuite/22_locale/money_put/put/wchar_t/2.cc: Likewise. \n-\t* testsuite/22_locale/money_put/put/wchar_t/3.cc: Likewise. \n-\t* testsuite/22_locale/money_put/put/wchar_t/wrapped_env.cc: Likewise.     \n+\t* testsuite/22_locale/money_put/put/char/1.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/2.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/3.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/9780-3.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/money_put/put/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/money_put/put/wchar_t/wrapped_locale.cc: Likewise.\n \t* testsuite/22_locale/moneypunct/members/char/2.cc: Likewise.\n-\t* testsuite/22_locale/moneypunct/members/char/wrapped_env.cc: Likewise.    \n+\t* testsuite/22_locale/moneypunct/members/char/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/moneypunct/members/char/wrapped_locale.cc:\n-\tLikewise. \n-\t* testsuite/22_locale/moneypunct/members/wchar_t/2.cc: Likewise.   \n+\tLikewise.\n+\t* testsuite/22_locale/moneypunct/members/wchar_t/2.cc: Likewise.\n \t* testsuite/22_locale/moneypunct/members/wchar_t/wrapped_env.cc:\n \tLikewise.\n \t* testsuite/22_locale/moneypunct/members/wchar_t/wrapped_locale.cc:\n \tLikewise.\n \t* testsuite/22_locale/moneypunct_byname/named_equivalence.cc: Likewise.\n-\t* testsuite/22_locale/num_get/get/char/1.cc: Likewise.   \n-\t* testsuite/22_locale/num_get/get/char/3.cc: Likewise.   \n-\t* testsuite/22_locale/num_get/get/char/5.cc: Likewise.   \n-\t* testsuite/22_locale/num_get/get/char/6.cc: Likewise.   \n-\t* testsuite/22_locale/num_get/get/char/9.cc: Likewise.   \n+\t* testsuite/22_locale/num_get/get/char/1.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/char/3.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/char/5.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/char/6.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/char/9.cc: Likewise.\n \t* testsuite/22_locale/num_get/get/char/wrapped_env.cc: Likewise.\n-\t* testsuite/22_locale/num_get/get/char/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.  \n-\t* testsuite/22_locale/num_get/get/wchar_t/3.cc: Likewise.  \n-\t* testsuite/22_locale/num_get/get/wchar_t/5.cc: Likewise.  \n-\t* testsuite/22_locale/num_get/get/wchar_t/6.cc: Likewise.  \n-\t* testsuite/22_locale/num_get/get/wchar_t/9.cc: Likewise.  \n-\t* testsuite/22_locale/num_get/get/wchar_t/wrapped_env.cc: Likewise. \n-\t* testsuite/22_locale/num_get/get/wchar_t/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/num_put/put/char/1.cc: Likewise.      \n-\t* testsuite/22_locale/num_put/put/char/20909.cc: Likewise.  \n-\t* testsuite/22_locale/num_put/put/char/20914.cc: Likewise.  \n-\t* testsuite/22_locale/num_put/put/char/3.cc: Likewise.      \n-\t* testsuite/22_locale/num_put/put/char/5.cc: Likewise.      \n-\t* testsuite/22_locale/num_put/put/char/9780-2.cc: Likewise. \n-\t* testsuite/22_locale/num_put/put/char/wrapped_env.cc: Likewise.    \n-\t* testsuite/22_locale/num_put/put/char/wrapped_locale.cc: Likewise. \n-\t* testsuite/22_locale/num_put/put/wchar_t/1.cc: Likewise. \n-\t* testsuite/22_locale/num_put/put/wchar_t/20909.cc: Likewise.   \n-\t* testsuite/22_locale/num_put/put/wchar_t/20914.cc: Likewise.   \n-\t* testsuite/22_locale/num_put/put/wchar_t/3.cc: Likewise. \n+\t* testsuite/22_locale/num_get/get/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/5.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/6.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/9.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/num_get/get/wchar_t/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/1.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/20909.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/20914.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/3.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/5.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/9780-2.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/wrapped_env.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/wchar_t/20909.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/wchar_t/20914.cc: Likewise.\n+\t* testsuite/22_locale/num_put/put/wchar_t/3.cc: Likewise.\n \t* testsuite/22_locale/num_put/put/wchar_t/5.cc: Likewise.\n \t* testsuite/22_locale/num_put/put/wchar_t/wrapped_env.cc: Likewise.\n-\t* testsuite/22_locale/num_put/put/wchar_t/wrapped_locale.cc: Likewise. \n+\t* testsuite/22_locale/num_put/put/wchar_t/wrapped_locale.cc: Likewise.\n \t* testsuite/22_locale/numpunct/members/char/2.cc: Likewise.\n \t* testsuite/22_locale/numpunct/members/char/3.cc: Likewise.\n-\t* testsuite/22_locale/numpunct/members/char/wrapped_env.cc: Likewise.    \n+\t* testsuite/22_locale/numpunct/members/char/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/numpunct/members/char/wrapped_locale.cc: Likewise.\n-\t* testsuite/22_locale/numpunct/members/wchar_t/2.cc: Likewise.    \n+\t* testsuite/22_locale/numpunct/members/wchar_t/2.cc: Likewise.\n \t* testsuite/22_locale/numpunct/members/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/numpunct/members/wchar_t/wrapped_locale.cc:\n-\tLikewise. \n-\t* testsuite/22_locale/numpunct_byname/named_equivalence.cc: Likewise.       \n-\t* testsuite/22_locale/time_get/date_order/char/wrapped_env.cc: Likewise.    \n+\tLikewise.\n+\t* testsuite/22_locale/numpunct_byname/named_equivalence.cc: Likewise.\n+\t* testsuite/22_locale/time_get/date_order/char/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/time_get/date_order/char/wrapped_locale.cc:\n-\tLikewise. \n+\tLikewise.\n \t* testsuite/22_locale/time_get/date_order/wchar_t/wrapped_env.cc:\n-\tLikewise. \n+\tLikewise.\n \t* testsuite/22_locale/time_get/date_order/wchar_t/wrapped_locale.cc:\n \tLikewise.\n \t* testsuite/22_locale/time_get/get_date/char/12750.cc: Likewise.\n-\t* testsuite/22_locale/time_get/get_date/char/2.cc: Likewise.   \n-\t* testsuite/22_locale/time_get/get_date/char/wrapped_env.cc: Likewise.      \n+\t* testsuite/22_locale/time_get/get_date/char/2.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_date/char/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/time_get/get_date/char/wrapped_locale.cc:\n \tLikewise.\n-\t* testsuite/22_locale/time_get/get_date/wchar_t/12750.cc: Likewise. \n-\t* testsuite/22_locale/time_get/get_date/wchar_t/2.cc: Likewise.     \n-\t* testsuite/22_locale/time_get/get_date/wchar_t/4.cc: Likewise.     \n+\t* testsuite/22_locale/time_get/get_date/wchar_t/12750.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_date/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/time_get/get_date/wchar_t/4.cc: Likewise.\n \t* testsuite/22_locale/time_get/get_date/wchar_t/wrapped_env.cc:\n-\tLikewise.  \n+\tLikewise.\n \t* testsuite/22_locale/time_get/get_date/wchar_t/wrapped_locale.cc:\n \tLikewise.\n-\t* testsuite/22_locale/time_get/get_monthname/char/2.cc: Likewise.  \n+\t* testsuite/22_locale/time_get/get_monthname/char/2.cc: Likewise.\n \t* testsuite/22_locale/time_get/get_monthname/char/wrapped_env.cc:\n \tLikewise.\n \t* testsuite/22_locale/time_get/get_monthname/char/wrapped_locale.cc:\n@@ -3442,88 +3442,88 @@\n \t* testsuite/22_locale/time_get/get_time/wchar_t/1.cc: Likewise.\n \t* testsuite/22_locale/time_get/get_time/wchar_t/2.cc: Likewise.\n \t* testsuite/22_locale/time_get/get_time/wchar_t/wrapped_env.cc:\n-\tLikewise. \n+\tLikewise.\n \t* testsuite/22_locale/time_get/get_time/wchar_t/wrapped_locale.cc:\n \tLikewise.\n \t* testsuite/22_locale/time_get/get_weekday/char/2.cc: Likewise.\n \t* testsuite/22_locale/time_get/get_weekday/char/wrapped_env.cc:\n \tLikewise.\n \t* testsuite/22_locale/time_get/get_weekday/char/wrapped_locale.cc:\n-\tLikewise. \n+\tLikewise.\n \t* testsuite/22_locale/time_get/get_weekday/wchar_t/2.cc: Likewise.\n \t* testsuite/22_locale/time_get/get_weekday/wchar_t/wrapped_env.cc:\n-\tLikewise.    \n+\tLikewise.\n \t* testsuite/22_locale/time_get/get_weekday/wchar_t/wrapped_locale.cc:\n-\tLikewise. \n-\t* testsuite/22_locale/time_put/put/char/17038.cc: Likewise. \n-\t* testsuite/22_locale/time_put/put/char/2.cc: Likewise.     \n-\t* testsuite/22_locale/time_put/put/char/3.cc: Likewise.     \n-\t* testsuite/22_locale/time_put/put/char/4.cc: Likewise.     \n-\t* testsuite/22_locale/time_put/put/char/6.cc: Likewise.     \n-\t* testsuite/22_locale/time_put/put/char/7.cc: Likewise.     \n-\t* testsuite/22_locale/time_put/put/char/8.cc: Likewise.     \n-\t* testsuite/22_locale/time_put/put/char/9780-1.cc: Likewise.       \n+\tLikewise.\n+\t* testsuite/22_locale/time_put/put/char/17038.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/2.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/3.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/4.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/6.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/7.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/8.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/char/9780-1.cc: Likewise.\n \t* testsuite/22_locale/time_put/put/char/wrapped_env.cc: Likewise.\n-\t* testsuite/22_locale/time_put/put/char/wrapped_locale.cc: Likewise.  \n-\t* testsuite/22_locale/time_put/put/wchar_t/17038.cc: Likewise.   \n+\t* testsuite/22_locale/time_put/put/char/wrapped_locale.cc: Likewise.\n+\t* testsuite/22_locale/time_put/put/wchar_t/17038.cc: Likewise.\n \t* testsuite/22_locale/time_put/put/wchar_t/2.cc: Likewise.\n \t* testsuite/22_locale/time_put/put/wchar_t/3.cc: Likewise.\n \t* testsuite/22_locale/time_put/put/wchar_t/4.cc: Likewise.\n \t* testsuite/22_locale/time_put/put/wchar_t/6.cc: Likewise.\n \t* testsuite/22_locale/time_put/put/wchar_t/7.cc: Likewise.\n \t* testsuite/22_locale/time_put/put/wchar_t/8.cc: Likewise.\n-\t* testsuite/22_locale/time_put/put/wchar_t/wrapped_env.cc: Likewise.     \n+\t* testsuite/22_locale/time_put/put/wchar_t/wrapped_env.cc: Likewise.\n \t* testsuite/22_locale/time_put/put/wchar_t/wrapped_locale.cc: Likewise.\n-\t* testsuite/27_io/basic_filebuf/imbue/char/13007.cc: Likewise.  \n+\t* testsuite/27_io/basic_filebuf/imbue/char/13007.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/imbue/char/13171-1.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/imbue/char/13171-4.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/imbue/char/13582-2.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/imbue/char/14975-1.cc: Likewise.\n-\t* testsuite/27_io/basic_filebuf/imbue/char/2.cc: Likewise. \n-\t* testsuite/27_io/basic_filebuf/imbue/char/9322.cc: Likewise.       \n+\t* testsuite/27_io/basic_filebuf/imbue/char/2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/char/9322.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/imbue/wchar_t/12868.cc: Likewise.\n-\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13007.cc: Likewise.   \n-\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13171-3.cc: Likewise. \n-\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13582-2.cc: Likewise. \n-\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13582-3.cc: Likewise. \n-\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/14975-2.cc: Likewise. \n-\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc: Likewise.       \n-\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/9322.cc: Likewise.    \n-\t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-1.cc: Likewise.  \n-\t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-2.cc: Likewise.  \n-\t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-3.cc: Likewise.  \n-\t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-4.cc: Likewise.  \n-\t* testsuite/27_io/basic_filebuf/seekoff/wchar_t/1.cc: Likewise.    \n-\t* testsuite/27_io/basic_filebuf/seekoff/wchar_t/2.cc: Likewise.    \n-\t* testsuite/27_io/basic_filebuf/seekpos/wchar_t/9874.cc: Likewise. \n-\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/1.cc: Likewise.  \n-\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/11389-1.cc: Likewise.  \n-\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/11389-2.cc: Likewise.  \n-\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/11389-3.cc: Likewise.  \n-\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/11389-4.cc: Likewise.  \n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13007.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13171-3.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13582-2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/13582-3.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/14975-2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/imbue/wchar_t/9322.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-3.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/overflow/wchar_t/11305-4.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekpos/wchar_t/9874.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/11389-1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/11389-2.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/11389-3.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/11389-4.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/underflow/wchar_t/2.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/underflow/wchar_t/3.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/underflow/wchar_t/4.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/underflow/wchar_t/5.cc: Likewise.\n-\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/9520.cc: Likewise.        \n-\t* testsuite/27_io/basic_ios/copyfmt/char/2.cc: Likewise.   \n+\t* testsuite/27_io/basic_filebuf/underflow/wchar_t/9520.cc: Likewise.\n+\t* testsuite/27_io/basic_ios/copyfmt/char/2.cc: Likewise.\n \t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/2.cc:\n-\tLikewise.   \n+\tLikewise.\n \t* testsuite/27_io/basic_ostream/inserters_arithmetic/wchar_t/2.cc:\n \tLikewise.\n \t* testsuite/27_io/basic_streambuf/imbue/char/13007-1.cc: Likewise.\n \t* testsuite/27_io/basic_streambuf/imbue/char/13007-2.cc: Likewise.\n-\t* testsuite/27_io/basic_streambuf/imbue/char/9322.cc: Likewise.  \n-\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-1.cc: Likewise.    \n-\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-2.cc: Likewise.    \n-\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/9322.cc: Likewise. \n-\t* testsuite/27_io/basic_stringbuf/imbue/char/9322.cc: Likewise.    \n+\t* testsuite/27_io/basic_streambuf/imbue/char/9322.cc: Likewise.\n+\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-1.cc: Likewise.\n+\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/13007-2.cc: Likewise.\n+\t* testsuite/27_io/basic_streambuf/imbue/wchar_t/9322.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/imbue/char/9322.cc: Likewise.\n \t* testsuite/27_io/basic_stringbuf/imbue/wchar_t/9322.cc: Likewise.\n-\t* testsuite/27_io/objects/wchar_t/10.cc: Likewise. \n-\t* testsuite/27_io/objects/wchar_t/11.cc: Likewise. \n-\t* testsuite/27_io/objects/wchar_t/12.cc: Likewise. \n-\t* testsuite/27_io/objects/wchar_t/13.cc: Likewise. \n+\t* testsuite/27_io/objects/wchar_t/10.cc: Likewise.\n+\t* testsuite/27_io/objects/wchar_t/11.cc: Likewise.\n+\t* testsuite/27_io/objects/wchar_t/12.cc: Likewise.\n+\t* testsuite/27_io/objects/wchar_t/13.cc: Likewise.\n \t* testsuite/27_io/objects/wchar_t/9520.cc: Likewise.\n \t* testsuite/ext/stdio_sync_filebuf/wchar_t/12077.cc: Likewise.\n \n@@ -3547,7 +3547,7 @@\n 2005-05-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* scripts/create_testsuite_files: Fix.\n-\t\n+\n 2005-05-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* testsuite/18_support/numeric_limits.cc (dg-options): Add\n@@ -3559,7 +3559,7 @@\n \n 2005-05-09  Paolo Carlini  <pcarlini@suse.de>\n \t    Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n-\t    \n+\n \tPR libstdc++/18604\n \t* include/bits/deque.tcc: Fully qualify names from namespace std.\n \t* include/bits/stl_bvector.h: Likewise.\n@@ -3577,7 +3577,7 @@\n \t* testsuite/23_containers/list/18604.cc: Likewise.\n \t* testsuite/23_containers/map/18604.cc: Likewise.\n \t* testsuite/23_containers/set/18604.cc: Likewise.\n-\t* testsuite/23_containers/vector/18604.cc: Likewise.\t\n+\t* testsuite/23_containers/vector/18604.cc: Likewise.\n \n 2005-05-09  Mike Stump  <mrs@apple.com>\n \n@@ -3616,7 +3616,7 @@\n \n \t* acinclude.m4: Remove testsuite_wchar_t and testsuite_thread.\n \t* testsuite/Makefile.am: Same.\n-\t* scripts/create_testsuite_files: Same.\t\n+\t* scripts/create_testsuite_files: Same.\n \t* Makefile.in: Regenerate.\n \t* configure: Same.\n \t* include/Makefile.in: Same.\n@@ -3632,7 +3632,7 @@\n \twhether or not thread support is available.\n \n \t* docs/html/test.html: Explain how to run the testsuite on an\n-\tinstalled directory. \n+\tinstalled directory.\n \n 2005-05-01  Paolo Carlini  <pcarlini@suse.de>\n \n@@ -3763,7 +3763,7 @@\n \t* testsuite/ext/bitmap_allocator/check_allocate_max_size.cpp: Add\n \texplicit instantiations for systems without weak symbols.\n \t* testsuite/ext/bitmap_allocator/check_deallocate_null.cc:\n-\tLikewise. \n+\tLikewise.\n \n 2005-04-18  Jonathan Wakely  <redi@gcc.gnu.org>\n \n@@ -3854,7 +3854,7 @@\n \t* testsuite/Makefile.am: Remove libv3test.a.\n \t* testsuite/Makefile.in: Regenerate.\n \t* testsuite/lib/libstdc++.exp (v3_target_compile): Fix comments.\n-\t\n+\n 2005-04-08  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/20909\n@@ -3885,14 +3885,14 @@\n 2005-04-08  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* linkage.m4 (GLIBCXX_CHECK_MATH_DECLS_AND_LINKAGES_1): Eliminate\n-\ta subshell and if test fails, test for same functions with \n+\ta subshell and if test fails, test for same functions with\n \tleading underscore.\n \t(GLIBCXX_CHECK_MATH_SUPPORT): Eliminate seperate checks for _funcs.\n \t* configure: Regenerate.\n \n 2005-04-08  Danny Smith  <dannysmith@users.sourceforge.net>\n \t    Paolo Carlini  <pcarlini@suse.de>\n-\t    \t\t\n+\n \tPR libstdc++/20806\n \t* config/os/mingw32/os_defines.h: Define\n \t_GLIBCXX_HAVE_DOS_BASED_FILESYSTEM.\n@@ -3917,8 +3917,8 @@\n \tUpdate comment on how to regenerate file.  Update minimum\n \tautomake version to 1.9.3.\n \t* acconfig.h: Remove PACKAGE and VERSION.\n-\t* aclocal.m4, configure, Makefile.in, po/Makefile.in, \n-\tsrc/Makefile.in, include/Makefile.in, libmath/Makefile.in, \n+\t* aclocal.m4, configure, Makefile.in, po/Makefile.in,\n+\tsrc/Makefile.in, include/Makefile.in, libmath/Makefile.in,\n \ttestsuite/Makefile.in, config.h.in: Regenerate.\n \n 2005-04-06  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -3961,13 +3961,13 @@\n \t* testsuite/27_io/fpos/1.cc: Same.\n \t* testsuite/ext/mt_allocator/tune-1.cc: Same.\n \t* testsuite/ext/mt_allocator/tune-2.cc: Same.\n-\t* testsuite/ext/stdio_filebuf/char/1.cc: Same.\t\n+\t* testsuite/ext/stdio_filebuf/char/1.cc: Same.\n \t* testsuite/lib/libstdc++.exp (v3-build_support): Add\n \ttestsuite_character.cc.\n \t* testsuite/Makefile.am (libv3test_a_SOURCES): Add\n \ttestsuite_character.cc.\n \t* testsuite/Makefile.in: Regenerate.\n-\t\t\n+\n \t* configure.ac: Remove use of check_survey.\n \t* configure: Regenerate.\n \t* testsuite/Makefile.am: Remove check-script and\n@@ -3991,15 +3991,15 @@\n \t* acconfig.h: ... to eliminate them from here.\n \t(_GLIBCXX_ASM_SYMVER): Move definition below @BOTTOM@.\n \t* config.h.in, configure: Regenerate.\n-\t\n+\n 2005-04-05  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* Makefile.am (ACLOCAL_AMFLAGS): Define.\n \t* crossconfig.m4: Wrap file into new GLIBCXX_CROSSCONFIG macro.\n \t* configure.ac: Use it.\n \t* acinclude.m4: Delete explicit m4_includes and sincludes.\n-\t* aclocal.m4, configure, Makefile.in, po/Makefile.in, \n-\tsrc/Makefile.in, include/Makefile.in, libmath/Makefile.in, \n+\t* aclocal.m4, configure, Makefile.in, po/Makefile.in,\n+\tsrc/Makefile.in, include/Makefile.in, libmath/Makefile.in,\n \ttestsuite/Makefile.in: Regenerate.\n \n 2005-04-05  Jonathan Wakely  <redi@gcc.gnu.org>\n@@ -4041,10 +4041,10 @@\n \t* acconfig.h (ENABLE_NLS, HAVE_CATGETS): Remove.\n \t(HAVE_GETTEXT, HAVE_STPCPY): Likewise.\n \t* config.h.in: Regenerate.\n-\t\n+\n 2005-04-05  Kelley Cook  <kcook@gcc.gnu.org>\n \n-\t* linkage.m4 (GLIBCXX_CHECK_BUILTIN_MATH_DEC): Use m4 translit macro \n+\t* linkage.m4 (GLIBCXX_CHECK_BUILTIN_MATH_DEC): Use m4 translit macro\n \tto convert to uppercase instead of shelling out to tr.\n \t* acconfig.h: Remove now redundant HAVE__BUILTINS_*.\n \t* configure, config.h.in: Regenerate.\n@@ -4063,14 +4063,14 @@\n \t* testsuite/libstdc++-abi/abi.exp: Build current_symbols.txt.\n \n 2005-04-02  Douglas Gregor  <doug.gregor@gmail.com>\n-\t\n+\n \t* include/tr1/tuple_iterate.h (tuple_element): Use new macro\n \t_GLIBCXX_T_NUM_ARGS_PLUS_1 because _T is a macro on Darwin.\n \t* include/tr1/repeat.h (_GLIBCXX_T_NUM_ARGS_PLUS_1): Define for\n \teach iteration.\n \t* scripts/gen_includers.h: Define _GLIBCXX_T_NUM_ARGS_PLUS_1 for\n \teach iteration.\n-\t\n+\n 2005-04-01  Douglas Gregor  <doug.gregor@gmail.com>\n \n \t* include/tr1/functional (_Maybe_wrap_member_pointer): Wrap up\n@@ -4079,7 +4079,7 @@\n \t* include/tr1/functional_iterator (bind): Reduce number of bind()\n \toverloads to two to eliminate ambiguities. Use\n \t_Maybe_wrap_member_pointer to handle member pointers gracefully.\n-\t\n+\n 2005-04-01  Mark Mitchell  <mark@codesourcery.com>\n \n \t* testsuite/Makefile.am (noinst_PROGRAMS): Remove.\n@@ -4139,8 +4139,8 @@\n         * scripts/gen_includers.pl: Generate the repetitive part of\n \tinclude/tr1/repeat.h.\n \t* scripts/gen_bind_includers.pl: Generate the repetitive part of\n-\tinclude/tr1/bind_repeat.h. \n-\t\n+\tinclude/tr1/bind_repeat.h.\n+\n 2005-03-30  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n \n \t* testsuite/Makefile.am (CXX): Use ${SHELL}.\n@@ -4152,7 +4152,7 @@\n \n \t* testsuite/lib/libstdc++.exp (libstdc++_init): Define LOCALEDIR\n \twhen testing an installed compiler.\n-\t\n+\n \t* testsuite/lib/libstdc++.exp (v3-build_support): Pass -w when\n \tcompiling support objects.\n \n@@ -4168,7 +4168,7 @@\n 2005-03-23  Mark Mitchell  <mark@codesourcery.com>\n \n \t* testsuite/Makefile.am (all-local): Do not build testsuite_files.\n-\t* testsuite/Makefile.in: Regenerated. \n+\t* testsuite/Makefile.in: Regenerated.\n \n 2005-03-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -4177,7 +4177,7 @@\n \t_GLIBCXX_USE_C99_WCHAR.\n \tRemove GLIBCXX_ENABLE_C_MBCHAR, consolidate in GLIBCXX_ENABLE_C99\n \tand GLIBCXX_ENABLE_WCHAR_T.\n-\tTake C99 bits from GLIBCXX_CHECK_WCHAR_T_SUPPORT and put in \n+\tTake C99 bits from GLIBCXX_CHECK_WCHAR_T_SUPPORT and put in\n \tGLIBCXX_ENABLE_C99.\n \tChange remaining parts of GLIBCXX_CHECK_WCHAR_T_SUPPORT to\n \tGLIBCXX_CHECK_ICONV_SUPPORT."}, {"sha": "4f91c8e56e4eb14d237252d06eed75fe553c85fe", "filename": "libstdc++-v3/ChangeLog-2006", "status": "modified", "additions": 156, "deletions": 156, "changes": 312, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2006", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2006", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2006?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -61,13 +61,13 @@\n \t* crossconfig.m4: Remove GLIBCXX_CHECK_ICONV_SUPPORT call for\n \tmingw crosses.\n \t* configure: Regenerate.\n-\t\n+\n 2006-12-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/26497\n \t* crossconfig.m4: Add GLIBCXX_CHECK_LINKER_FEATURES for Solaris.\n \t* acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Set\n-\tglibcxx_gnu_ld_version only when with GNU ld confirmed.\t\n+\tglibcxx_gnu_ld_version only when with GNU ld confirmed.\n \t* configure: Regenerate.\n \n 2006-12-11  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -77,7 +77,7 @@\n \tAC_CHECK_LIB for libiconv. Instead, use bits of AM_ICONV.\n         * configure: Regenerate.\n         * scripts/testsuite_flags.in (cxxldflags): Add LIBICONV bits.\n- \n+\n 2006-12-11  Richard Guenther  <rguenther@suse.de>\n \t    Paolo Carlini  <pcarlini@suse.de>\n \n@@ -442,7 +442,7 @@\n \t* config/abi/compatibility.h: Same.\n \n \t* docs/doxygen/user.cfg.in: Adjust file list.\n-\t\n+\n 2006-12-05  Paolo Carlini  <pcarlini@suse.de>\n \n \tDR 543, [Ready].\n@@ -512,14 +512,14 @@\n \t* include/debug/macros.h: Same.\n \t* include/debug/list: Same.\n \t* include/debug/debug.h: Same.\n-\t* include/debug/map: Same. \n+\t* include/debug/map: Same.\n \t* include/debug/safe_iterator.h: Same.\n \t* include/debug/multimap.h: Same.\n \t* config/cpu/generic/atomicity_mutex/atomicity.h: Same.\n \t* config/cpu/generic/atomicity_builtins/atomicity.h: Same.\n \t* config/cpu/generic/atomic_word.h: Same.\n \t* include/tr1/memory: Same.\n-\t* include/tr1/random: Same.\t\n+\t* include/tr1/random: Same.\n \t* include/std/std_queue.h: Same.\n \t* include/std/std_iterator.h: Same.\n \t* include/std/std_bitset.h: Same.\n@@ -535,11 +535,11 @@\n \t* libsupc++/exception: Same.\n \t* libsupc++/exception_defines.h: Same.\n \t* libsupc++/new: Same.\n-\t\n+\n \t* include/ext/bitmap_allocator.h: Change namespace __balloc to\n \t__detail.\n \t* src/bitmap_allocator.cc: Same.\n-\t\n+\n \t* include/bits/cpp_type_traits.h: Change __true_type and\n \t__false_type from global to namespace std scope.\n \t* include/ext/slist: Same.\n@@ -578,9 +578,9 @@\n \t* include/tr1/random.tcc: Same.\n \t* include/tr1/functional: Same.\n \t* include/tr1/functional_iterate.h: Same.\n-\t\n+\n \t* testsuite/ext/type_traits/remove_unsigned_integer_neg.cc: Line\n-\tnumber changes.\t\n+\tnumber changes.\n \t* testsuite/ext/type_traits/add_unsigned_floating_neg.cc: Same.\n \t* testsuite/ext/type_traits/remove_unsigned_floating_neg.cc: Same.\n \t* testsuite/ext/type_traits/add_unsigned_integer_neg.cc: Same.\n@@ -655,7 +655,7 @@\n \t* include/Makefile.in: Regenerate.\n \n 2006-11-21  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* include/ext/hashtable.h: -Wshadow fixes.\n \t* include/ext/pb_ds/detail/cc_hash_table_map_/erase_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/cc_hash_table_map_/resize_fn_imps.hpp: Same.\n@@ -760,7 +760,7 @@\n \n \t* include/ext/pb_ds/exception.hpp: Keep exception classes defined\n \teven when -fno-exceptions is passed, consistent with other usage.\n-\t\n+\n 2006-11-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/pb_ds/exception.hpp (pb_ds): Modify for -fno-exceptions.\n@@ -806,7 +806,7 @@\n \t* include/ext/pb_ds/detail/ov_tree_map_/split_join_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/list_update_map_/\n \tconstructor_destructor_fn_imps.hpp: Same.\n-\t* include/ext/pb_ds/exception.hpp: Same.\t\n+\t* include/ext/pb_ds/exception.hpp: Same.\n \t* src/functexcept.cc: Qualify abort with std.\n \n 2006-11-07  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -851,7 +851,7 @@\n \tpasto, advance __iter only once per iteration.\n \n 2006-10-29  Paolo Carlini  <pcarlini@suse.de>\n-\t\n+\n \tPR libstdc++/29520\n \t* include/tr1/random (geometric_distribution<>::\n \toperator()(_UniformRandomNumberGenerator&)): Only declare.\n@@ -863,7 +863,7 @@\n \tresult_type.\n \n 2006-10-28  Paolo Carlini  <pcarlini@suse.de>\n-\t\n+\n \t* include/tr1/array (array<>::_M_at): New.\n \t(array<>::at): Fix off-by-one bug, use the above.\n \t* testsuite/tr1/6_containers/array/element_access/\n@@ -897,7 +897,7 @@\n \n 2006-10-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/28514 \n+\tPR libstdc++/28514\n \t* include/bits/cpp_type_traits.h (__detail): Uglify namespace.\n \t* include/ext/rope: Remove global-scope anonymous namespace, use\n \tnested __detail. Fixup resulting formatting issues.\n@@ -937,7 +937,7 @@\n \t(_GLIBCXX_TEMPLATE_PARAMS_NULL_CLASS): New.\n \t(_GLIBCXX_TEMPLATE_ARGS_STRIPPED): New.\n \t* scripts/gen_includers.pl: Update.\n-\t* scripts/gen_includers2.pl: New.\t\n+\t* scripts/gen_includers2.pl: New.\n \n 2006-10-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -1052,13 +1052,13 @@\n 2006-10-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/29426\n-\t* libsupc++/guard.cc (get_static_mutex): New. \n+\t* libsupc++/guard.cc (get_static_mutex): New.\n \t(mutex_wrapper::mutex_wrapper): Use it to get properly initialized\n \trecursive mutex without ordering issues.\n \n \t* src/locale_init.cc (__get_locale_mutex): No need to\n \tuglify. Change to get_locale_mutex.\n-\t\n+\n 2006-10-11  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/22_locale/num_put/put/char/11.cc: New.\n@@ -1072,9 +1072,9 @@\n 2006-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/29118\n-\t* src/locale_init.cc (__get_locale_mutex): New. \n+\t* src/locale_init.cc (__get_locale_mutex): New.\n \t(locale::locale): Use it.\n-\t(locale::global): Use it.\t\n+\t(locale::global): Use it.\n \n 2006-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -1091,7 +1091,7 @@\n \t* scripts/create_testsuite_files: Same.\n \t* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): New.\n \t(libstdc++-dg-test): Use it.\n-\t\n+\n 2006-10-09  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/28277 (partial: __add_grouping)\n@@ -1148,7 +1148,7 @@\n \n 2006-10-04  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Mike Stump  <mrs@apple.com>\n-\t\n+\n \t* testsuite/27_io/ios_base/storage/2.cc: Fail on Darwin 8.[0-4].* only.\n \t* testsuite/23_containers/vector/resize/1.cc: Same.\n \n@@ -1167,7 +1167,7 @@\n \t(allocation_tracker::allocationTotal): To get_allocation_count.\n \t(allocation_tracker::deallocationTotal): To get_deallocation_count.\n \t(allocation_tracker::constructCount): To get_construct_count.\n-\t(allocation_tracker::destructCount): To get_destruct_count.\t\n+\t(allocation_tracker::destructCount): To get_destruct_count.\n \t(allocation_tracker::resetCounts): To reset.\n \t(tracker_alloc): To tracker_allocator.\n \t* testsuite/util/performance/mem: Remove.\n@@ -1194,7 +1194,7 @@\n \t* testsuite/util/performance/assoc/mem_usage/multimap_insert_test.hpp\n \t* testsuite/util/performance/assoc/mem_usage/erase_test.hpp\n \t* testsuite/util/testsuite_allocator.cc: Same.\n-\t\n+\n 2006-10-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/util/native_type/priority_queue/native_pq_tag.hpp: Remove.\n@@ -1230,9 +1230,9 @@\n 2006-10-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/pb_ds/detail/basic_types.hpp (comp_hash_): Remove,\n-\tformat.\t\n+\tformat.\n \t* include/ext/pb_ds/detail/types_traits.hpp\n-\t(types_traits::comp_hash): Use pair typedef.\t\n+\t(types_traits::comp_hash): Use pair typedef.\n \t* include/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp: Same.\n \t* include/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp: Same.\n \n@@ -1314,25 +1314,25 @@\n \tsample_update_policy.hpp: Same.\n \t* include/ext/pb_ds/detail/list_update_policy/\n \tcounter_lu_policy_imp.hpp: Same.\n-\t* include/ext/pb_ds/list_update_policy.hpp: Same.\t\n+\t* include/ext/pb_ds/list_update_policy.hpp: Same.\n \n 2006-09-29  Benjamin Kosnik  <bkoz@redhat.com>\n             Howard Hinnant  <hhinnant@apple.com>\n             Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/type_traits.h (__remove_unsigned): Fix up for signed\n \tchar, bool, wchar_t, and floating point types.\n-\t(__add_unsigned): Same.\t\n+\t(__add_unsigned): Same.\n \t* testsuite/ext/type_traits: New.\n \t* testsuite/ext/type_traits.cc: Move...\n-\t* testsuite/ext/type_traits/numeric_traits.cc: ...here.\t\n+\t* testsuite/ext/type_traits/numeric_traits.cc: ...here.\n \t* testsuite/ext/type_traits/add_unsigned_floating_neg.cc: New.\n \t* testsuite/ext/type_traits/add_unsigned_integer_neg.cc: New.\n \t* testsuite/ext/type_traits/remove_unsigned_floating_neg.cc: New.\n \t* testsuite/ext/type_traits/remove_unsigned_integer_neg.cc: New.\n \t* testsuite/ext/type_traits/add_unsigned.cc: New.\n \t* testsuite/ext/type_traits/remove_unsigned.cc: New.\n-\t\n+\n 2006-09-29  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* acinclude.m4 (enable_symvers): Default to no if unable to link.\n@@ -1530,7 +1530,7 @@\n \t* testsuite/performance/ext/pb_ds/\n \tpriority_queue_text_pop_mem_usage.cc: Same.\n \t* testsuite/performance/ext/pb_ds/\n-\thash_zlob_random_int_find_timing.cc: Same. \n+\thash_zlob_random_int_find_timing.cc: Same.\n \t* testsuite/util/regression/trait/assoc/type_trait.hpp: Same.\n \t* testsuite/util/regression/rand/priority_queue/\n \trand_regression_test.hpp: Same.\n@@ -1629,7 +1629,7 @@\n \t* include/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp: Same.\n \t* include/ext/pb_ds/detail/hash_fn/\n \tdirect_mask_range_hashing_imp.hpp: Same.\n-\t\n+\n 2006-09-27  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/29217\n@@ -1669,9 +1669,9 @@\n \t__dynamic_cast_tag), static_pointer_cast(const shared_ptr<>&),\n \tconst_pointer_cast(const shared_ptr<>&), dynamic_pointer_cast(const\n \tshared_ptr<>&), weak_ptr<>::weak_ptr(const shared_ptr<>&),\n-\tweak_ptr(const weak_ptr<>&), weak_ptr<>::lock(), \n+\tweak_ptr(const weak_ptr<>&), weak_ptr<>::lock(),\n \t__enable_shared_from_this_helper(const __shared_count<>&, const\n-\tenable_shared_from_this<>*, const _Tp2*)): Add. \n+\tenable_shared_from_this<>*, const _Tp2*)): Add.\n \t(class enable_shared_from_this): Add.\n \t* testsuite/tr1/2_general_utilities/memory/enable_shared_from_this/\n \t1.cc: New.\n@@ -1726,7 +1726,7 @@\n \t(__numeric_traits_floating): New.\n \t(__numeric_traits): Use them.\n \t* testsuite/ext/type_traits.cc: New.\n-\t\n+\n 2006-09-21  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/hash_map: Remove forward declaration of equality\n@@ -1782,7 +1782,7 @@\n \t* testsuite/23_containers/set/capacity/29134.cc: Likewise.\n \t* testsuite/23_containers/map/capacity/29134.cc: Likewise.\n \t* testsuite/23_containers/multiset/capacity/29134.cc: Likewise.\n-\t* testsuite/23_containers/multimap/capacity/29134.cc: Likewise.\t\n+\t* testsuite/23_containers/multimap/capacity/29134.cc: Likewise.\n \t* testsuite/tr1/6_containers/unordered/capacity/29134-set.cc: Likewise.\n \t* testsuite/tr1/6_containers/unordered/capacity/29134-map.cc: Likewise.\n \t* testsuite/tr1/6_containers/unordered/capacity/29134-multiset.cc:\n@@ -1810,7 +1810,7 @@\n \ttypelist_assoc_container.hpp: Remove, unused.\n \t* include/ext/pb_ds/detail/typelist/\n \ttypelist_assoc_container_find.hpp: Same.\n-\t* include/ext/pb_ds/detail/typelist: Remove.\t\n+\t* include/ext/pb_ds/detail/typelist: Remove.\n \t* include/ext/pb_ds/detail/typelist.hpp: Merge...\n \t* include/ext/pb_ds/detail/typelist/typelist_flatten.hpp: Same.\n \t* include/ext/pb_ds/detail/typelist/typelist_contains.hpp: Same.\n@@ -1825,7 +1825,7 @@\n \t* include/Makefile.in: Regenerate.\n \n \t* include/ext/pb_ds/assoc_container.hpp: Fixups for new includes,\n-\tnamespaces, and names.\t\n+\tnamespaces, and names.\n \t* include/ext/pb_ds/detail/resize_policy/sample_size_policy.hpp: Same.\n \t* include/ext/pb_ds/detail/resize_policy/\n \thash_prime_size_policy_imp.hpp: Same.\n@@ -1898,35 +1898,35 @@\n \t* testsuite/util/common_type/assoc/common_type.hpp: Same.\n \t* testsuite/util/common_type/assoc/string_form.hpp: Same.\n \t* testsuite/util/common_type/assoc/template_policy.hpp: Same.\n-\t* testsuite/util/performance/priority_queue/mem_usage/pop_test.hpp: \n+\t* testsuite/util/performance/priority_queue/mem_usage/pop_test.hpp:\n \tSame.\n-\t* testsuite/util/performance/priority_queue/timing/push_pop_test.hpp: \n+\t* testsuite/util/performance/priority_queue/timing/push_pop_test.hpp:\n \tSame.\n \t* testsuite/util/performance/priority_queue/timing/join_test.hpp: Same.\n \t* testsuite/util/performance/priority_queue/timing/push_test.hpp: Same.\n-\t* testsuite/util/performance/priority_queue/timing/modify_test.hpp: \n+\t* testsuite/util/performance/priority_queue/timing/modify_test.hpp:\n \tSame.\n-\t* testsuite/util/performance/assoc/mem_usage/multimap_insert_test.hpp: \n+\t* testsuite/util/performance/assoc/mem_usage/multimap_insert_test.hpp:\n \tSame.\n \t* testsuite/util/performance/assoc/mem_usage/erase_test.hpp: Same.\n \t* testsuite/util/performance/assoc/timing/common_type.hpp: Same.\n-\t* testsuite/util/performance/assoc/timing/multimap_insert_test.hpp: \n+\t* testsuite/util/performance/assoc/timing/multimap_insert_test.hpp:\n \tSame.\n-\t* testsuite/util/performance/assoc/timing/subscript_find_test.hpp: \n+\t* testsuite/util/performance/assoc/timing/subscript_find_test.hpp:\n \tSame.\n \t* testsuite/util/performance/assoc/timing/find_test.hpp: Same.\n-\t* testsuite/util/performance/assoc/timing/subscript_insert_test.hpp: \n+\t* testsuite/util/performance/assoc/timing/subscript_insert_test.hpp:\n \tSame.\n \t* testsuite/util/performance/assoc/timing/insert_test.hpp: Same.\n \t* testsuite/util/performance/assoc/timing/\n \ttree_order_statistics_test.hpp: Same.\n \t* testsuite/util/performance/assoc/timing/multimap_find_test.hpp: Same.\n-\t* testsuite/util/performance/assoc/timing/tree_split_join_test.hpp: \n+\t* testsuite/util/performance/assoc/timing/tree_split_join_test.hpp:\n \tSame.\n \t* testsuite/util/performance/assoc/multimap_common_type.hpp: Same.\n \n \t* testsuite/ext/pb_ds/example/hash_resize_neg.cc: Fixup line numbers.\n-\t\n+\n 2006-09-19  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/hashtable_policy.h: Uglify all the names.\n@@ -1947,7 +1947,7 @@\n \t* include/ext/throw_allocator.h (throw_allocator): ... into this.\n \t* src/throw_allocator.cc: ...and this.\n \t* include/Makefile.am (ext_headers): Add.\n-\t* include/Makefile.in: Regenerate.\t\n+\t* include/Makefile.in: Regenerate.\n \t* src/Makefile.am (sources): New.\n \t* src/Makefile.in: Regenerate.\n \t* testsuite/lib/libstdc++.exp: Subtract dbg_ex_allocator_base.cc.\n@@ -1985,7 +1985,7 @@\n \t* testsuite/util/regression/assoc/common_type.hpp: Same.\n \t* testsuite/util/regression/basic_type.hpp: Same.\n \t* testsuite/util/rng/twister_rand_gen.cc: Tweak.\n-\t\n+\n 2006-09-18  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt.\n@@ -2002,8 +2002,8 @@\n 2006-09-18  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Peter Doerfler  <gcc@pdoerfler.com>\n \t    Paolo Carlini  <pcarlini@suse.de>\n-\t\n-\t* include/ext/type_traits.h: New. \n+\n+\t* include/ext/type_traits.h: New.\n \t(__conditional_type): New.\n \t(__numeric_traits): New.\n \t(__add_unsigned): New.\n@@ -2033,9 +2033,9 @@\n \t* include/ext/pb_ds/detail/type_utils.hpp: Same.\n \t* include/ext/pb_ds/trie_policy.hpp: Same.\n \t* docs/html/ext/pb_ds/string_trie_e_access_traits.html: Same.\n-\t\n+\n \t* include/bits/cpp_type_traits.h (__enable_if): Move to ext, make\n-\tboolean argument first.\t\n+\tboolean argument first.\n \t* include/bits/locale_facets.h: Fixups for __enable_if argument\n \tand namespace switch.\n \t* include/bits/stl_algobase.h: Same.\n@@ -2051,7 +2051,7 @@\n \t* include/c_std/std_cmath.h: Same.\n \t* testsuite/util/testsuite_tr1.h: Same.\n \t* testsuite/util/performance/assoc/multimap_common_type.hpp: Same.\n-\t\n+\n 2006-09-18  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/29063\n@@ -2063,11 +2063,11 @@\n \n \t* include/bits/concurrence.h (__mutex::__mutex): Pass address of\n \tmutex to *_MUTEX_INIT_FUNCTION.\n-\t\n-2006-09-13  Benjamin Kosnik  <bkoz@redhat.com>\t\n+\n+2006-09-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/atomicity.h: Move to...\n-\t* include/ext/atomicity.h: ...here.\t\n+\t* include/ext/atomicity.h: ...here.\n \t* include/bits/concurrence.h: Move to...\n \t* include/ext/concurrence.h: ...here.\n \t* include/Makefile.am (ext_headers): Additions.\n@@ -2077,9 +2077,9 @@\n \t* include/ext/bitmap_allocator.h (_Mutex), __threads_enabled,\n \t_Lock, _Auto_Lock): Subsume into...\n \t* include/bits/concurrence.h (__mutex): ..this. Error check\n-\tlocking and unlocking.\t\n+\tlocking and unlocking.\n \t(lock): Uglify to...\n-\t(__scoped_lock): Use __mutex. \n+\t(__scoped_lock): Use __mutex.\n \t(__glibcxx_mutex_define_initialized): Remove.\n \t(__glibcxx_mutex_type): Remove.\n \n@@ -2123,15 +2123,15 @@\n \t* src/bitmap_allocator.cc: Same.\n \t* src/ios_init.cc: Same.\n \t* src/debug.cc: Same.\n-\t\n+\n 2006-09-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* libsupc++/eh_globals.cc: Remove __gnu_internal.\n \t* config/io/basic_file_stdio.cc: Same.\n \t* config/abi/compatibility.h: Same.\n \t* config/cpu/generic/atomicity_mutex/atomicity.h: Same.\n \t* config/cpu/sh/atomicity.h: Same.\n-\t\n+\n 2006-09-10  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_heap.h (sort_heap): Iterator post-decrement is\n@@ -2176,7 +2176,7 @@\n \t* include/ext/pb_ds/detail/cc_hash_table_map_/\n \tconstructor_destructor_store_hash_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/cc_hash_table_map_/\n-\tinsert_store_hash_fn_imps.hpp: Same.\t\n+\tinsert_store_hash_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/cc_hash_table_map_/debug_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/cc_hash_table_map_/erase_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/cc_hash_table_map_/\n@@ -2232,13 +2232,13 @@\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/\n \tinsert_no_store_hash_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/\n-\tresize_store_hash_fn_imps.hpp: Same.\t\n+\tresize_store_hash_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/find_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/\n \tconstructor_destructor_store_hash_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp: Same.\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/\n-\tinsert_store_hash_fn_imps.hpp: Same.\t\n+\tinsert_store_hash_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/debug_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/trace_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/gp_hash_table_map_/erase_fn_imps.hpp: Same.\n@@ -2257,7 +2257,7 @@\n \t* include/ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/binary_heap_/const_iterator.hpp: Same.\n \t* include/ext/pb_ds/detail/binary_heap_/\n-\tconstructors_destructor_fn_imps.hpp: Same.\t\n+\tconstructors_destructor_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/binary_heap_/debug_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/binary_heap_/const_point_iterator.hpp: Same.\n \t* include/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp: Same.\n@@ -2283,9 +2283,9 @@\n \t* include/ext/pb_ds/detail/left_child_next_sibling_heap_/\n \tleft_child_next_sibling_heap_.hpp: Same.\n \t* include/ext/pb_ds/detail/left_child_next_sibling_heap_/\n-\tconst_iterator.hpp: Same.\t\n+\tconst_iterator.hpp: Same.\n \t* include/ext/pb_ds/detail/left_child_next_sibling_heap_/\n-\tinsert_fn_imps.hpp: Same.\t\n+\tinsert_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/left_child_next_sibling_heap_/\n \tconstructors_destructor_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/left_child_next_sibling_heap_/\n@@ -2304,7 +2304,7 @@\n \t* include/ext/pb_ds/detail/ov_tree_map_/cond_dtor.hpp: Same.\n \t* include/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp: Same.\n \t* include/ext/pb_ds/detail/ov_tree_map_/\n-\tconstructors_destructor_fn_imps.hpp: Same.\t\n+\tconstructors_destructor_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/ov_tree_map_/debug_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp: Same.\n \t* include/ext/pb_ds/detail/ov_tree_map_/split_join_fn_imps.hpp: Same.\n@@ -2344,7 +2344,7 @@\n \t* include/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/rb_tree_map_/insert_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/rb_tree_map_/\n-\tconstructors_destructor_fn_imps.hpp: Same.\t\n+\tconstructors_destructor_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/rb_tree_map_/debug_fn_imps.hpp: Same.\n \t* include/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp: Same.\n \t* include/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp: Same.\n@@ -2385,7 +2385,7 @@\n \n \t* testsuite/lib/libstdc++.exp (libstdc++_init): PCHFLAGS revert to\n \tstdc++.h.\n-\t\n+\n 2006-09-04  Paolo Carlini  <pcarlini@suse.de>\n \n \t* src/mt_allocator.cc (__pool<true>::_M_reclaim_block): Do\n@@ -2410,7 +2410,7 @@\n \tCXXFLAGS when checking for atomic builtins.\n \t* configure: Regenerate.\n \t* include/bits/atomicity.h: Revert.\n-\t\n+\n 2006-08-31  Richard Guenther  <rguenther@suse.de>\n \n \t* include/ext/mt_allocator.h: Remove volatile qualifiers\n@@ -2428,10 +2428,10 @@\n \t* include/bits/atomicity.h (__exchange_and_add): Declare only.\n \t(__atomic_add): Same.\n \t* config/cpu/generic/atomicity_builtins/atomicity.h: Remove comment.\n-\t\n+\n 2006-08-30  Benjamin Kosnik  <bkoz@redhat.com>\n             Richard Guenther  <rguenther@suse.de>\n-\t\n+\n \t* config/abi/pre/gnu.ver: Spell out exact signatures for atomic\n \taccess functions.\n \n@@ -2440,7 +2440,7 @@\n \t(__atomic_add_single): Same.\n \t(__exchange_and_add_dispatch): Same.\n \t(__exchange_and_add_single): Same.\n-\t\n+\n 2006-08-29  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/random (subtract_with_carry_01<>::_M_initialize_npows):\n@@ -2461,9 +2461,9 @@\n \n \t* acinclude.m4(glibcxx_PCHFLAGS): Set to stdtr1c++.h.\n \t* configure: Regenerate.\n-\t\n+\n \t* scripts/check_compile: Output current compile line.\n-\t\n+\n 2006-08-28  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/23773 partial\n@@ -2527,12 +2527,12 @@\n \tmutex_weaktoshared.cc: New.\n \t*testsuite/tr1/2_general_utilities/memory/shared_ptr/assign/\n \tshared_ptr_neg.cc: Modify.\n-\t\n+\n 2006-08-22  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/random.tcc (subtract_with_carry_01<>::\n \tseed(_Gen&, false_type)): Fix _M_carry initialization.\n-\t\n+\n \t* testsuite/tr1/5_numerical_facilities/random/\n \tsubtract_with_carry/cons/default.cc: Qualify 1 as 1UL.\n \t* testsuite/tr1/5_numerical_facilities/random/\n@@ -2655,7 +2655,7 @@\n \n \t* include/tr1/random (operator>>(std::basic_istream<>&,\n \tgamma_distribution&)): Minor tweak.\n-\t\n+\n \t* include/tr1/random.tcc (poisson_distribution<>::operator()):\n \tMinor tweak.\n \n@@ -2679,7 +2679,7 @@\n \n \t* include/tr1/random.tcc (mersenne_twister<>::operator()): Tweak\n \ta bit for efficiency.\n-\t\n+\n \t* include/tr1/random.tcc (operator<<(std::basic_ostream<>&,\n \tconst normal_distribution<>&), operator>>(std::basic_istream<>&,\n \tnormal_distribution<>&)): Do not output _M_saved unnecessarily.\n@@ -2727,7 +2727,7 @@\n \t* include/bits/stl_algo.h (find(istreambuf_iterator<>,\n \tistreambuf_iterator<>, _CharT)): Adjust signature.\n \t* include/bits/streambuf_iterator.h: Likewise.\n-\t* include/std/std_streambuf.h: Likewise.\t\n+\t* include/std/std_streambuf.h: Likewise.\n \n 2006-08-09  Paolo Carlini  <pcarlini@suse.de>\n \n@@ -2749,7 +2749,7 @@\n \t* include/bits/stl_bvector.h (vector<bool>::_M_fill): New.\n \t(vector<bool>::_M_fill_insert): Use it.\n \t* testsuite/performance/23_containers/resize/vector_bool.cc: New.\n-\t\n+\n \t* testsuite/23_containers/vector/bool/modifiers/insert/1.cc: New.\n \t* testsuite/23_containers/vector/bool/capacity/1.cc: Likewise.\n \n@@ -2786,12 +2786,12 @@\n \n 2006-07-27  Benjamin Kosnik  <bkoz@wells.artheist.org>\n \n-\tPR libstdc++/19664 round 3\t\n+\tPR libstdc++/19664 round 3\n \t* include/Makefile.am (tr1_headers): Add hashtable_policy.h.\n \t* include/Makefile.in: Regenerate.\n \t* include/tr1/hashtable: Move policy classes into...\n \t* include/tr1/hashtable_policy.h: ... this. New.\n-\t\n+\n \t* src/globals_locale.cc: Move contents....\n \t* src/locale_init.cc: ... to here, put in anonymous namespace.\n \t* src/Makefile.am: Remove globals_locale.cc.\n@@ -2802,7 +2802,7 @@\n \t* src/ext-inst.cc: Same.\n \t* src/mt_allocator.cc: Same.\n \t* src/pool_allocator.cc: Same.\n-\t\n+\n \t* include/tr1/random: Convert std::tr1::_Private to anonymous\n \tnamespace.\n \t* include/tr1/random.tcc: Same.\n@@ -2818,7 +2818,7 @@\n \n \t* include/bits/cpp_type_traits.h: Move __type_type into anonymous\n \tnamespace.\n-\t\n+\n \t* include/ext/rope: Change _Rope_constants to anonymous namespace.\n \t* include/ext/ropeimpl.h: Same.\n \t* src/ext-inst.cc: Same.\n@@ -2856,7 +2856,7 @@\n \n 2006-07-21  Jason Merrill  <jason@redhat.com>\n \n-\tPR libstdc++/19664 round 2\t\n+\tPR libstdc++/19664 round 2\n \t* libsupc++/eh_personality.cc: Wrap extern \"C\" function\n \tdefinitions in namespace __cxxabiv1.\n \n@@ -2867,7 +2867,7 @@\n \n 2006-07-20  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n-\t\n+\n \tPR libstdc++/19664 round 1\n \t* acinclude.m4 (GLIBCXX_ENABLE_VISIBILITY): Check it.\n \t* configure.ac: Use it.\n@@ -2879,7 +2879,7 @@\n \t(_GLIBCXX_BEGIN_NAMESPACE): Use it.\n \t(_GLIBCXX_END_NAMESPACE): Use it.\n \t(_GLIBCXX_BEGIN_NESTED_NAMESPACE): Use it.\n-\t(_GLIBCXX_END_NESTED_NAMESPACE): Use it.\t\t\n+\t(_GLIBCXX_END_NESTED_NAMESPACE): Use it.\n \t* src/debug.cc: Mark __gnu_internal namespace with hidden\n \tvisibility attribute.\n \t* src/ext-inst.cc: Same.\n@@ -2924,7 +2924,7 @@\n \t* config/cpu/mips/atomicity.h: Comment MIPS II requirement.\n \n \t* scripts/testsuite_flags.in: Make --cxxflags reflect CXXFLAGS.\n-\t\n+\n 2006-07-14  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/random (minstd_rand0, minstd_rand, ranlux3, ranlux4):\n@@ -2952,7 +2952,7 @@\n \t(pch*_output): Use.\n \t(CLEANFILES): Use.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n \t* scripts/check_performance: Be verbose on compile error.\n \n 2006-07-12  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -2967,7 +2967,7 @@\n \t* include/Makefile.in: Regenerate.\n \n \t* testsuite/lib/libstdc++.exp: Test PCH with stdtr1c++.h.\n-\t\n+\n 2006-07-11  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/codecvt_specializations.h: Fix typo in commit\n@@ -3045,7 +3045,7 @@\n \t* testsuite/util/regression/assoc/common_type.hpp: Same.\n \t* testsuite/util/regression/basic_type.hpp: Same.\n \n-2006-07-05  Benjamin Kosnik  <bkoz@redhat.com>\t\n+2006-07-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/Makefile.am (pch_output): New.\n \t(clean-local): Use it.\n@@ -3092,7 +3092,7 @@\n \n \t* include/precompiled: New directory.\n \t* include/stdc++.h: Move...\n-\t* include/precompiled/stdc++.h: ... here.\t\t\n+\t* include/precompiled/stdc++.h: ... here.\n \t* include/precompiled/stdtr1c++.h: New.\n \t* include/precompiled/extc++.h: New.\n \n@@ -3111,13 +3111,13 @@\n \n 2006-06-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* include/ext/typelist.h (typelist_append): To append_typelist. \n+\t* include/ext/typelist.h (typelist_append): To append_typelist.\n \t(typelist): To node.\n \tEnclose in namespace typelist.\n \t* testsuite/util/testsuite_common_types.h: Adjust names, namespaces.\n \t* testsuite/performance/23_containers/find/map.cc: Same.\n \t* testsuite/performance/23_containers/create/map.cc: Same.\n-\t* testsuite/performance/23_containers/insert_erase/associative.cc: \n+\t* testsuite/performance/23_containers/insert_erase/associative.cc:\n \tSame.\n \t* testsuite/performance/23_containers/insert/sequence.cc: Same.\n \t* testsuite/performance/23_containers/insert/associative.cc: Same.\n@@ -3126,7 +3126,7 @@\n \t* testsuite/performance/23_containers/insert_from_sorted/set.cc: Same.\n \t* testsuite/performance/23_containers/create_sort/list.cc: Same.\n \t* testsuite/performance/23_containers/sort_search/list.cc: Same.\n-\t* testsuite/performance/23_containers/producer_consumer/sequence.cc: \n+\t* testsuite/performance/23_containers/producer_consumer/sequence.cc:\n \tSame.\n \t* testsuite/performance/23_containers/producer_consumer/associative.cc:\n \tSame.\n@@ -3177,7 +3177,7 @@\n \n \t* include/tr1/random (class normal_distribution<>): Add.\n \t* include/tr1/random.tcc (normal_distribution<>::operator()): Define.\n-\t\n+\n \t* include/tr1/random.tcc (struct _Max): Remove, \"inline\" in the\n \tonly user, mersenne_twister<>::max().\n \n@@ -3208,7 +3208,7 @@\n \t* testsuite/lib/libstdc++.exp (libstdc++_init): Adjust\n \ttesting includes.\n \t* docs/html/test.html: Adjust for testsuite changes.\n-\t\n+\n 2006-06-22  Jonathan Lennox  <lennox@cs.columbia.edu>\n \t    Paolo Carlini  <pcarlini@suse.de>\n \n@@ -3248,7 +3248,7 @@\n 2006-06-19  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/random (xor_combine<>::operator<<): Fix typo.\n-\t\n+\n \t* include/tr1/random (bernoulli_distribution::min(),\n \tbernoulli_distribution::max(), geometric_distribution<>::min(),\n \tgeometric_distribution<>::max()): Remove.\n@@ -3342,7 +3342,7 @@\n \t* testsuite/ext/pb_assoc: Delete.\n \t* testsuite/ext/pb_ds: Add.\n \t* testsuite/performance/ext: Add.\n-\t* testsuite/performance/ext/pb_ds: Add.\t\n+\t* testsuite/performance/ext/pb_ds: Add.\n \n \t* testsuite/util/regression: New.\n \t* testsuite/util/rng: New.\n@@ -3357,7 +3357,7 @@\n \t* scripts/make_graphs.py: New.\n \t* testsuite/data/thirty_years_among_the_dead_preproc.txt: Add.\n \t* testsuite/data/make_graph_htmls.xml: Add.\n-\t* testsuite/data/make_graph_test_infos.xml: Add.\t\n+\t* testsuite/data/make_graph_test_infos.xml: Add.\n \n \t* testsuite/lib/libstdc++.exp (v3-build_support): Add in new\n \tobject files for regression testing.\n@@ -4207,7 +4207,7 @@\n \t* testsuite/util/statistic/res_recorder.hpp: Same.\n \t* testsuite/util/statistic/sample_mean.hpp: Same.\n \t* testsuite/util/statistic/sample_mean_confidence_checker.hpp: Same.\n-\t\n+\n 2006-06-12  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/26970\n@@ -4277,18 +4277,18 @@\n \t* testsuite/libstdc++-abi/abi.exp: Same.\n \t* testsuite/libstdc++-dg/conformance.exp: Remove any files in the\n \tutilities subdirectory from the list of test cases.\n-\t\n+\n \t* scripts/testsuite_flags.in (build-includes): Adjust path for\n \ttestsuite includes.\n \t* scripts/create_testsuite_files (dlist): Don't let utility files\n \tcreep into the testsuite_files list.\n-\t\n+\n 2006-06-06  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/random (mersenne_twister<>::operator==,\n \toperator!=, operator<<, operator>>): Implement.\n \t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n-\toperators/equal.cc: New.\t\n+\toperators/equal.cc: New.\n \t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n \toperators/not_equal.cc: Likewise.\n \t* testsuite/tr1/5_numerical_facilities/random/mersenne_twister/\n@@ -4302,7 +4302,7 @@\n 2006-06-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/tr1/5_numerical_facilies: Move to...\n-\t* testsuite/tr1/5_numerical_facilities: ...this.\t\n+\t* testsuite/tr1/5_numerical_facilities: ...this.\n \n 2006-06-06  Paolo Carlini  <pcarlini@suse.de>\n \n@@ -4500,7 +4500,7 @@\n \t(hashtable<>::find, m_insert(const value_type&, std::tr1::true_type),\n \tmap_base<>::operator[]): Use the above.\n \t* testsuite/performance/23_containers/insert/unordered_map_array.cc:\n-\tNew.\t\n+\tNew.\n \n \t* include/tr1/hashtable (hashtable<>::find_node,\n \tinsert(const value_type&, ...), erase_node): Rename to m_*, adjust\n@@ -4573,14 +4573,14 @@\n 2006-04-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* docs/html/17_intro/TODO: Update.\n-\t\n+\n 2006-04-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/26875\n \t* include/ext/array_allocator.h (array_allocator): _M_used, new\n-\tdata member.  \n+\tdata member.\n \t* testsuite/ext/array_allocator/26875.cc: New.\n-\t\n+\n 2006-04-26  Shantonu Sen  <ssen@opendarwin.org>\n \n \tPR libstdc++/26513\n@@ -4741,7 +4741,7 @@\n \n 2006-03-10  Paolo Carlini  <pcarlini@suse.de>\n \n-\t* include/tr1/cmath: Add atan2 and pow bits; add using declarations.\t\n+\t* include/tr1/cmath: Add atan2 and pow bits; add using declarations.\n \t* include/tr1/math.h: Add using declarations.\n \t* include/tr1/complex: Add using declarations.\n \t* testsuite/tr1/8_c_compatibility/cmath/functions.cc: Fully\n@@ -4791,7 +4791,7 @@\n \t* include/bits/ios_base.h: Adjust consistently.\n \t(ios_base::_S_local_word_size): Change to an anonymous enum.\n \t* src/ios.cc: Do not define static const data of __ios_flags,\n-\tlikewise for ios_base::_S_local_word_size.\t\n+\tlikewise for ios_base::_S_local_word_size.\n \t* include/bits/locale_classes.h (locale::_S_categories_size):\n \tChange to an anonymous enum.\n \t* src/locale.cc: Don't define.\n@@ -4828,7 +4828,7 @@\n \n 2006-02-26  Paolo Carlini  <pcarlini@suse.de>\n \n-\t* include/tr1/cmath: Add templates (8.16.3).\t\n+\t* include/tr1/cmath: Add templates (8.16.3).\n \t* include/tr1/cstdbool: New.\n \t* include/tr1/stdbool.h: Likewise.\n \t* include/Makefile.am: Add.\n@@ -4857,7 +4857,7 @@\n \t* testsuite/22_locale/codecvt/in/wchar_t/6.cc (test06): Same.\n \t* testsuite/22_locale/codecvt/in/wchar_t/5.cc (test05): Same.\n \t* testsuite/ext/stdio_sync_filebuf/wchar_t/1.cc (test01): Same.\n-\t\n+\n 2006-02-22  Paolo Carlini  <pcarlini@suse.de>\n \n \t* docs/html/ext/pb_assoc/\n@@ -4905,7 +4905,7 @@\n \t* include/bits/c++config: Simplify debug namespaces.\n \t* include/ext/hash_set: Specialize insert_iterator after norm,\n \tdebug containers have been (optionally) declared. Use nested\n-\tnamespaces.\t\n+\tnamespaces.\n \t* include/ext/hash_map: Same.\n \t* include/debug/hash_map.h (insert): Add specialization for value\n \tpointer types.\n@@ -4931,14 +4931,14 @@\n \t(_M_invalidate): Adjust compare order.\n \t* include/debug/string: Change std::__gnu_debug to __gnu_debug.\n \t* include/ext/hashtable.h: Formatting fixes.\n-\t* include/bits/stl_map.h: Formatting fixes.\t\t\n+\t* include/bits/stl_map.h: Formatting fixes.\n \t* src/compatibility.cc: Adjust compatibility symbols for old debug\n-\tmode model.\t\n+\tmode model.\n \t* src/debug_list.cc: Tweak.\n \t* src/debug.cc: Adjust namespaces.\n \t* docs/html/debug_mode.html: Adjust namespace names.\n \t* testsuite/25_algorithms/heap/heap.cc: Restore _GLIBCXX_DEBUG\n-\tmacro guards, as count values differ when in debug mode.\t\n+\tmacro guards, as count values differ when in debug mode.\n \t* testsuite/23_containers/vector/26412.cc: Move to...\n \t* testsuite/23_containers/vector/26412-1.cc: ... here.\n \t* testsuite/23_containers/vector/26412-2.cc: Add.\n@@ -4952,7 +4952,7 @@\n \t* config/abi/pre/gnu.ver: Revert to exporting __gnu_debug symbols.\n \t(GLIBCXX_3.4.8): New.\n \t* testsuite/testsuite_abi.cc: Add GLIBCXX_3.4.8 to known versions.\n-\t\n+\n 2006-02-21  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/hashtable: Trivial formatting fixes.\n@@ -5051,10 +5051,10 @@\n \tPR libstdc++/26142\n \t* include/debug/debug.h: Move debug alias inside namespace std,\n \tsame with namespace __gnu_cxx. Add top-level __gnu_debug\n-\tnamespace.\t\n+\tnamespace.\n \t* include/debug/hash_multimap.h: Nest within __gnu_cxx, not\n \tstd. Also, change nesting namespace name from __gnu_debug_def to\n-\t__gnu_debug.\t\n+\t__gnu_debug.\n \t* include/debug/hash_map.h: Same.\n \t* include/debug/hash_multiset.h: Same.\n \t* include/debug/hash_set.h: Same.\n@@ -5099,7 +5099,7 @@\n \t(unique_copy): Adjust, dispatch to the three helpers above.\n \t* testsuite/25_algorithms/unique_copy/2.cc: New.\n \t* testsuite/25_algorithms/unique_copy/26133.cc: Likewise.\n-\t* testsuite/25_algorithms/unique_copy/3.cc: Likewise.\t\n+\t* testsuite/25_algorithms/unique_copy/3.cc: Likewise.\n \t* docs/html/ext/howto.html: Add an entry for DR 241.\n \n \t* testsuite/25_algorithms/unique_copy/1.cc: Minor cosmetic changes.\n@@ -5143,7 +5143,7 @@\n \tsymbols.\n \t* src/limits.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.\n \t* src/locale.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.\n-\t* src/locale-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.\t\n+\t* src/locale-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.\n \t* src/locale-misc-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.\n \t* src/istream-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.\n \t* src/ostream-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.\n@@ -5161,9 +5161,9 @@\n \t(compatibility-ldbl.lo, compatibility-ldbl.o): New rules.\n \t* src/Makefile.in: Rebuilt.\n \t* testsuite/testsuite_abi.cc: Recognize GLIBCXX_LDBL_3.4,\n-\tGLIBCXX_LDBL_3.4.7, CXXABI_LDBL_1.3.\t\n+\tGLIBCXX_LDBL_3.4.7, CXXABI_LDBL_1.3.\n \n-2006-02-07  Paolo Carlini  <pcarlini@suse.de>\t\n+2006-02-07  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/hashtable: Trivial formatting fixes.\n \n@@ -5180,22 +5180,22 @@\n \t* include/tr1/cmath: New.\n \t* include/tr1/cstdlib: Likewise.\n \t* include/tr1/ctime: Likewise.\n-\t* include/tr1/math.h: Likewise.\t\n+\t* include/tr1/math.h: Likewise.\n \t* include/tr1/stdlib.h: Likewise.\n \t* include/Makefile.am: Add.\n \t* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add <math.h> checks.\n \t* testsuite/tr1/8_c_compatibility/cmath/functions.cc: New.\n \t* testsuite/tr1/8_c_compatibility/cstdlib/functions.cc: Likewise.\n \t* testsuite/tr1/8_c_compatibility/cstdlib/types.cc: Likewise.\n-\t* testsuite/tr1/headers.cc: Update.\t\n+\t* testsuite/tr1/headers.cc: Update.\n \n \t* include/tr1/cinttypes: Do not provide abs and div, conflicting\n \twith the above overloads for _Longlong types.\n \t* include/tr1/inttypes.h: Adjust.\n \t* testsuite/tr1/8_c_compatibility/cinttypes/functions.cc: Adjust.\n \n \t* docs/html/ext/tr1.html: Update.\n-\t\n+\n \t* testsuite/tr1/8_c_compatibility/cwchar/functions.cc: Tweak.\n \n \t* include/Makefile.in: Regenerate.\n@@ -5205,16 +5205,16 @@\n 2006-02-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* testsuite/testsuite_tr1.h (test_property): New function.\n-\t* testsuite/tr1/4_metaprogramming/type_properties/extent/extent.cc \n-\t(test01) \n+\t* testsuite/tr1/4_metaprogramming/type_properties/extent/extent.cc\n+\t(test01)\n \n 2006-02-05  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/cstdio: New.\n \t* include/tr1/stdio.h: Likewise.\n \t* include/Makefile.am: Add.\n \t* testsuite/tr1/8_c_compatibility/cstdio/functions.cc: New.\n-\t* testsuite/tr1/headers.cc: Update.\t\n+\t* testsuite/tr1/headers.cc: Update.\n \t* docs/html/ext/tr1.html: Update.\n \n \t* include/tr1/cwchar: Simplify, use _GLIBCXX_USE_C99, consistently\n@@ -5260,7 +5260,7 @@\n 2006-02-02  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/cfloat: New.\n-\t* include/tr1/climits: Likewise.\t\t\n+\t* include/tr1/climits: Likewise.\n \t* include/tr1/cstdarg: Likewise.\n \t* include/tr1/ctype.h: Likewise.\n \t* include/tr1/fenv.h: Likewise.\n@@ -5310,7 +5310,7 @@\n \n \t* include/tr1/cinttypes: New.\n \t* include/Makefile.am: Add.\n-\t* testsuite/tr1/8_c_compatibility/cinttypes/functions: New.\t\n+\t* testsuite/tr1/8_c_compatibility/cinttypes/functions: New.\n \t* testsuite/tr1/8_c_compatibility/cinttypes/types: Likewise.\n \t* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add <inttypes.h> checks.\n \t* docs/html/ext/tr1.html: Update.\n@@ -5365,7 +5365,7 @@\n \t* docs/html/ext/tr1.html: Update; add note.\n \t* include/Makefile.in: Regenerate.\n \t* config.h.in: Likewise.\n-\t* configure: Likewise.\t\n+\t* configure: Likewise.\n \n \t* testsuite/tr1/8_c_compatibility/complex/functions.cc: Tweak.\n \t* testsuite/tr1/8_c_compatibility/cctype/functions.cc: Likewise.\n@@ -5471,7 +5471,7 @@\n \t* acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Add -Werror to\n \tCFLAGS for --gc-sections test.  Correct compile test.\n \t* configure: Regenerated.\n-\t\n+\n 2006-01-15  Paolo Carlini  <pcarlini@suse.de>\n \t    Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n@@ -5516,13 +5516,13 @@\n 2006-01-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4(GLIBCXX_CHECK_LINKER_FEATURES): Enable\n-\t--gc-sections in more cases.\t\n+\t--gc-sections in more cases.\n \t* configure: Regenerate.\n \t* scripts/testsuite_flags.in: Remove SECTION_LDFLAGS.\n \t* scripts/testsuite_flags.in (cxxldflags): New.\n \t* testsuite/lib/libstdc++.exp (v3_target_compile): Add cxxldflags.\n \t(libstdc++_init ): Same.\n-\t\t\n+\n 2006-01-12  Jan Beulich  <jbeulich@novell.com>\n \n \t* crossconfig.m4: Add AC_DEFINE-s for HAVE_HYPOT, HAVE_ISINF, and\n@@ -5532,7 +5532,7 @@\n 2006-01-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4(GLIBCXX_CHECK_LINKER_FEATURES): Use -Wl,-z,relro if\n-\tpossible.  \n+\tpossible.\n \t* configure: Regenerate.\n \n 2006-01-10  Paolo Carlini  <pcarlini@suse.de>\n@@ -5607,7 +5607,7 @@\n \t* testsuite/23_containers/vector/bool/modifiers/swap/2.cc: New.\n \n 2006-01-05  Paolo Carlini  <pcarlini@suse.de>\n-\t\n+\n \t* testsuite/testsuite_hooks.h (test_tm(unsigned)): Change to\n \ttake all the tm members.\n \t* testsuite/testsuite_hooks.cc (test_tm): Adjust.\n@@ -5667,7 +5667,7 @@\n \t* testsuite/22_locale/time_get/get_time/char/4.cc: Likewise.\n \n 2006-01-05  Paolo Carlini  <pcarlini@suse.de>\n-\t\n+\n \t* testsuite/testsuite_hooks.h (test_tm(unsigned)): New.\n \t* testsuite/testsuite_hooks.cc (test_tm(unsigned)): Define.\n \t* testsuite/22_locale/time_put/put/wchar_t/10.cc: Use it.\n@@ -5752,40 +5752,40 @@\n \t* include/tr1/unordered_set: Likewise.\n \t* docs/html/ext/howto.html: Add an entry for DR 431.\n \t* testsuite/23_containers/deque/modifiers/swap.cc: Move to...\n-\t* testsuite/23_containers/deque/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/deque/modifiers/swap/1.cc: ... here.\n \t* testsuite/23_containers/deque/modifiers/swap/2.cc: New.\n \t* testsuite/23_containers/deque/modifiers/swap/3.cc: New.\n \t* testsuite/23_containers/list/modifiers/swap.cc: Move to...\n-\t* testsuite/23_containers/list/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/list/modifiers/swap/1.cc: ... here.\n \t* testsuite/23_containers/list/modifiers/swap/2.cc: New.\n \t* testsuite/23_containers/list/modifiers/swap/3.cc: New.\n \t* testsuite/23_containers/vector/modifiers/swap.cc: Move to...\n-\t* testsuite/23_containers/vector/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/vector/modifiers/swap/1.cc: ... here.\n \t* testsuite/23_containers/vector/modifiers/swap/2.cc: New.\n \t* testsuite/23_containers/vector/modifiers/swap/3.cc: New.\n \t* testsuite/23_containers/set/modifiers/swap.cc: Move to...\n-\t* testsuite/23_containers/set/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/set/modifiers/swap/1.cc: ... here.\n \t* testsuite/23_containers/set/modifiers/swap/2.cc: New.\n \t* testsuite/23_containers/set/modifiers/swap/3.cc: New.\n \t* testsuite/23_containers/map/modifiers/swap.cc: Move to...\n-\t* testsuite/23_containers/map/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/map/modifiers/swap/1.cc: ... here.\n \t* testsuite/23_containers/map/modifiers/swap/2.cc: New.\n \t* testsuite/23_containers/map/modifiers/swap/3.cc: New.\n \t* testsuite/23_containers/multiset/modifiers/swap.cc: Move to...\n-\t* testsuite/23_containers/multiset/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/multiset/modifiers/swap/1.cc: ... here.\n \t* testsuite/23_containers/multiset/modifiers/swap/2.cc: New.\n \t* testsuite/23_containers/multiset/modifiers/swap/3.cc: New.\n \t* testsuite/23_containers/multimap/modifiers/swap.cc: Move to...\n-\t* testsuite/23_containers/multimap/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/multimap/modifiers/swap/1.cc: ... here.\n \t* testsuite/23_containers/multimap/modifiers/swap/2.cc: New.\n \t* testsuite/23_containers/multimap/modifiers/swap/3.cc: New.\n-\t* testsuite/tr1/6_containers/unordered/swap/unordered_set/1.cc: New.\t\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_set/1.cc: New.\n \t* testsuite/tr1/6_containers/unordered/swap/unordered_set/2.cc: New.\n-\t* testsuite/tr1/6_containers/unordered/swap/unordered_map/1.cc: New.\t\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_map/1.cc: New.\n \t* testsuite/tr1/6_containers/unordered/swap/unordered_map/2.cc: New.\n-\t* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/1.cc: New.\t\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/1.cc: New.\n \t* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/2.cc: New.\n-\t* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/1.cc: New.\t\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/1.cc: New.\n \t* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/2.cc: New.\n \n 2006-01-03  Paolo Carlini  <pcarlini@suse.de>\n@@ -5803,7 +5803,7 @@\n \t* testsuite/23_containers/map/operators/1_neg.cc: Adjust dg-error\n \tline numbers.\n \t* testsuite/23_containers/set/operators/1_neg.cc: Likewise.\n-\t\n+\n \t* testsuite/testsuite_allocator.h (uneq_allocator<>::swap): Fix.\n \n \t* testsuite/testsuite_allocator.h (class uneq_allocator): A simple\n@@ -5819,10 +5819,10 @@\n \n 2006-01-02  Mark Mitchell  <mark@codesourcery.com>\n \n-\t* src/Makefile.am (LTLDFLAGS): New variable. \n+\t* src/Makefile.am (LTLDFLAGS): New variable.\n \t(CXXLINK): Use LTLDFLAGS.\n \t* src/Makefile.in: Regenerated.\n-\t* libsupc++/Makefile.am (LTLDFLAGS): New variable. \n+\t* libsupc++/Makefile.am (LTLDFLAGS): New variable.\n \t(CXXLINK): Use LTLDFLAGS.\n \t* libsupc++/Makefile.in: Regenerated.\n "}, {"sha": "d3a1407a91e623b7e98e379bc9eec61cfe8e6168", "filename": "libstdc++-v3/ChangeLog-2007", "status": "modified", "additions": 184, "deletions": 184, "changes": 368, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2007", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c21237d52701733032eaa6fb97e4d233fabcaaaa/libstdc%2B%2B-v3%2FChangeLog-2007", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2007?ref=c21237d52701733032eaa6fb97e4d233fabcaaaa", "patch": "@@ -81,7 +81,7 @@\n \t    Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/tuple: New.\n-\t* include/tr1/tuple: New, adjust from tr1_impl/tuple code.\t\n+\t* include/tr1/tuple: New, adjust from tr1_impl/tuple code.\n \t* include/tr1_impl/tuple: Remove.\n \t* include/Makefile.am: Update.\n \t* include/Makefile.in: Regenerate.\n@@ -250,14 +250,14 @@\n \n 2007-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Paolo Carlini  <pcarlini@suse.de>\n-\t\n-\t* include/parallel/partial_sum.h: Include new. Fix for DR 402.\t\n+\n+\t* include/parallel/partial_sum.h: Include new. Fix for DR 402.\n \t* include/parallel/multiway_merge.h:Fix for DR 402.\n \t* include/parallel/losertree.h: Same.\n \t* include/parallel/quicksort.h: Same.\n \t* include/parallel/random_shuffle.h: Same.\n \t* include/parallel/multiway_mergesort.h: Same.\n-\t\n+\n 2007-12-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/30127\n@@ -267,7 +267,7 @@\n \t* testsuite/22_locale/global_templates/user_facet_hierarchies.cc: New.\n \t* testsuite/22_locale/global_templates/\n \tstandard_facet_hierarchies.cc: New.\n-\t\n+\n 2007-12-11  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/34015\n@@ -438,7 +438,7 @@\n \t(unordered_map<>::unordered_map(unordered_map&&),\n \toperator=(unordered_map&&), clear, _M_invalidate_all,\n \tunordered_multimap<>::unordered_multimap(unordered_multimap&&),\n-\toperator=(unordered_map&&), clear, _M_invalidate_all,\t\n+\toperator=(unordered_map&&), clear, _M_invalidate_all,\n \tswap(unordered_map<>&&, unordered_map<>&), swap(unordered_map<>&,\n \tunordered_map<>&&), swap(unordered_multimap<>&&,\n \tunordered_multimap<>&), swap(unordered_multimap<>&,\n@@ -451,7 +451,7 @@\n \t(unordered_set<>::unordered_set(unordered_set&&),\n \toperator=(unordered_set&&), clear, _M_invalidate_all,\n \tunordered_multiset<>::unordered_multiset(unordered_multiset&&),\n-\toperator=(unordered_set&&), clear, _M_invalidate_all,\t\n+\toperator=(unordered_set&&), clear, _M_invalidate_all,\n \tswap(unordered_set<>&&, unordered_set<>&), swap(unordered_set<>&,\n \tunordered_set<>&&), swap(unordered_multiset<>&&,\n \tunordered_multiset<>&), swap(unordered_multiset<>&,\n@@ -477,18 +477,18 @@\n \n 2007-11-28  Johannes Singler  <singler@ira.uka.de>\n \n-        * include/parallel/multiway_merge.h: Destruct only elements that \n+        * include/parallel/multiway_merge.h: Destruct only elements that\n         were have been constructed before. Code beautifying and formatting.\n-        * include/parallel/losertree.h: (Copy) construct all loser tree \n+        * include/parallel/losertree.h: (Copy) construct all loser tree\n         item keys, so they can be deconstructed all at once.\n         * include/parallel/quicksort.h: Fix memory leak.\n-        * include/parallel/random_shuffle.h: Use copy constructor instead \n+        * include/parallel/random_shuffle.h: Use copy constructor instead\n         of assignment. Code beautifying and formatting.\n-        * include/parallel/unique_copy.h: Use assignment instead of copy \n+        * include/parallel/unique_copy.h: Use assignment instead of copy\n         constructor.\n-        * include/parallel/multiway_mergesort.h: Use copy constructor \n+        * include/parallel/multiway_mergesort.h: Use copy constructor\n         instead of assignment. Code beautifying and formatting.\n-        * include/parallel/random_shuffle.h: Use copy constructor instead \n+        * include/parallel/random_shuffle.h: Use copy constructor instead\n         of assignment. Code beautifying.\n \n 2007-11-27  Kaz Kojima  <kkojima@gcc.gnu.org>\n@@ -624,7 +624,7 @@\n \t* include/debug/bitset (bitset<>::all): Add.\n \t* testsuite/23_containers/bitset/all/1.cc: New.\n \t* docs/html/ext/howto.html: Add an entry for DR 693.\n-\t\n+\n \t* include/std/bitset (bitset<0>::set, reset, flip, test): Remove,\n \tnot necessary anymore.\n \n@@ -711,7 +711,7 @@\n \t* docs/html/17_intro/api.html: Correct HTML.\n \n \t* include/bits/stl_algobase.h: Adjust comment.\n-\t\n+\n 2007-11-20  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* testsuite/ext/throw_allocator/variadic_construct.cc: Add\n@@ -876,10 +876,10 @@\n \t* docs/html/faq/index.html: Same.\n \t* docs/html/install.html: Same.\n \t* docs/html/test.html: Same.\n-\t\n+\n \t* include/bits/c++config: Change _GLIBCXX_DEPRECATED to\n \t_GLIBCXX_DEPRECATED_ATTR, _GLIBCXX_VISIBILITY to\n-\t_GLIBCXX_VISIBILITY_ATTR.\t\n+\t_GLIBCXX_VISIBILITY_ATTR.\n \t* include/backward/auto_ptr.h: Same.\n \t* include/backward/binders.h: Same.\n \t* include/bits/stl_function.h: Same.\n@@ -986,7 +986,7 @@\n \t* include/debug/multiset.h (multiset<>::operator=(multiset&&)):\n \tLikewise.\n \t* include/debug/deque (deque<>::operator=(deque&&)): Likewise.\n-\t* include/debug/list (list<>::operator=(list&&)): Likewise. \n+\t* include/debug/list (list<>::operator=(list&&)): Likewise.\n \t* include/debug/vector (vector<>::operator=(vector&&)): Likewise.\n \t* testsuite/23_containers/multimap/moveable.cc: Adjust.\n \t* testsuite/23_containers/multiset/moveable.cc: Likewise.\n@@ -1170,7 +1170,7 @@\n 2007-10-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* docs/html/ext/pb_ds/multimap_text_insert_timing_test_small.html:\n-\tCorrect filename.\t\n+\tCorrect filename.\n \t* docs/html/ext/pb_ds/multimap_text_find_timing_test_large.html: Same.\n \t* docs/html/ext/pb_ds/\n \tmultimap_text_insert_mem_usage_test_small.html: Same.\n@@ -1180,14 +1180,14 @@\n \t* docs/html/ext/pb_ds/multimap_text_find_timing_test_small.html: Same.\n \n 2007-10-30  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* include/Makefile.am (PCHFLAGS): Remove -Wno-deprecated.\n \t* include/Makefile.in: Regenerate.\n \n-\t* include/std/memory: Remove extraneous include.\t\n+\t* include/std/memory: Remove extraneous include.\n \n 2007-10-29  Benjamin Kosnik  <bkoz@redhat.com>\n- \n+\n \t* include/bits/c++config (_GLIBCXX_DEPRECATED,\n \t_GLIBCXX_USE_DEPRECATED): New. Adjust comments.\n \t* include/bits/stl_auto_ptr.h: Move...\n@@ -1204,7 +1204,7 @@\n \t* include/backward/backward_warning.h: Adjust for all new items.\n \n \t* config/abi/pre/gnu.ver: Export basic_streambuf::stossc.\n-\t\n+\n \t* include/Makefile.am (backward_headers): Adjust.\n \t* include/Makefile.in: Regenerate.\n \t* configure: Regenerate.\n@@ -1265,7 +1265,7 @@\n \tconstruct<>(pointer, _Args&&...)): Add.\n \t* include/ext/pool_allocator.h (__pool_alloc<>::\n \tconstruct<>(pointer, _Args&&...)): Likewise.\n-\t(construct(pointer, const _Tp&)): Cast pointer to void*. \n+\t(construct(pointer, const _Tp&)): Cast pointer to void*.\n \t* include/ext/bitmap_allocator.h (bitmap_allocator<>::\n \tconstruct<>(pointer, _Args&&...)): Add.\n \t(construct(pointer, const _Tp&)): Cast pointer to void*.\n@@ -1297,7 +1297,7 @@\n 2007-10-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/std/unordered_map: Fix for parallel mode.\n-\t* include/std/unordered_set: Same.\t\n+\t* include/std/unordered_set: Same.\n \n 2007-10-25  Andreas Tobler  <a.tobler@schweiz.org>\n \n@@ -1394,21 +1394,21 @@\n \t* include/backward/hash_fun.h: ...here.\n \t* include/ext/hashtable.h: To...\n \t* include/backward/hashtable.h: ...here.\n-\t\n+\n \t* include/bits/c++config: Remove __gnu_cxx namespace from debug mode.\n \t* include/debug/debug.h: Same.\n-\t\t\n+\n \t* include/debug/hash_map: Remove.\n \t* include/debug/hash_multimap.h: Remove.\n \t* include/debug/hash_set.h: Remove.\n \t* include/debug/hash_set: Remove.\n \t* include/debug/hash_multiset.h: Remove.\n \t* include/debug/hash_map.h: Remove.\n-\t\n+\n \t* include/Makefile.am (ext_headers): Move hash_set, hash_map to\n \tbackward.\n \t(debug_headers): Remove hash_map, hash_set, hash_map.h,\n-\thash_map.h, hash_multiset.h, hash_multimap.h.\t\n+\thash_map.h, hash_multiset.h, hash_multimap.h.\n \t* include/Makefile.in: Regenerate.\n \n \t* docs/html/debug.html: Update.\n@@ -1420,9 +1420,9 @@\n \t* testsuite/backward/hash_map: ...here.\n \t* testsuite/ext/hash_set: Move to...\n \t* testsuite/backward/hash_set: ...here.\n-\t\n+\n 2007-10-18  Benjamin Kosnik  <bkoz@redhat.com>\n-        \n+\n \tRemoval of pre-ISO C++ items from include/backwards.\n \t* include/Makefile.am (backward_headers): Remove all but strstream,\n \tbackward_warning.h.\n@@ -1475,7 +1475,7 @@\n \tPR libstdc++/30085\n \t* include/debug/unordered_map: New.\n \t* include/debug/unordered_set: New.\n-\t* include/debug/safe_association.h: New.\t\n+\t* include/debug/safe_association.h: New.\n \t* include/std/unordered_map: Include debug header if _GLIBCXX_DEBUG.\n \t* include/std/unordered_set: Same.\n \t* include/Makefile.am (debug_headers): Add unordered_map,\n@@ -1489,7 +1489,7 @@\n \tdebug.cc: New.\n \n 2007-10-18  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/util/native_type/assoc/native_hash_multimap.hpp: Remove\n \thash_map include.\n \n@@ -1527,7 +1527,7 @@\n \n 2007-10-16  Paolo Carlini  <pcarlini@suse.de>\n \n-\t* include/ext/vstring.h (__versa_string<>::front, \n+\t* include/ext/vstring.h (__versa_string<>::front,\n \t__versa_string<>::back): Add.\n \t* testsuite/ext/vstring/element_access/char/front_back.cc: New.\n \t* testsuite/ext/vstring/element_access/wchar_t/front_back.cc: Likewise.\n@@ -1628,7 +1628,7 @@\n \tLikewise.\n \t* include/debug/map.h (map<>::cbegin, cend, crbegin, crend):\n \tLikewise.\n-\t* include/debug/deque (deque<>::cbegin, cend, crbegin, crend): \n+\t* include/debug/deque (deque<>::cbegin, cend, crbegin, crend):\n \tLikewise.\n \t* include/debug/list (list<>::cbegin, cend, crbegin, crend):\n \tLikewise.\n@@ -1654,7 +1654,7 @@\n \tcrend): Likewise.\n \t* include/bits/stl_bvector.h (vector<bool>::cbegin, cend, crbegin,\n \tcrend): Likewise.\n-\t* include/tr1_impl/hashtable (_Hashtable<>::cbegin, cend): Add.\t\n+\t* include/tr1_impl/hashtable (_Hashtable<>::cbegin, cend): Ad.\n \n \t* testsuite/ext/vstring/requirements/citerators.cc: Add.\n \t* testsuite/23_containers/unordered_map/requirements/citerators.cc:\n@@ -1776,12 +1776,12 @@\n \t* include/ext/hash_set: Same.\n \n \t* testsuite/25_algorithms/headers/parallel_algorithm.cc: Move\n-\tinside algorithm directory.\t\n+\tinside algorithm directory.\n \t* testsuite/25_algorithms/headers/algorithm_parallel_mode.cc: Same.\n \t* testsuite/25_algorithms/headers/parallel_algorithm_mixed1.cc: Same.\n \t* testsuite/25_algorithms/headers/parallel_algorithm_mixed2.cc: Same.\n \t* testsuite/25_algorithms/headers/algorithm/parallel_algorithm.cc:\n-\tTo this.\t\n+\tTo this.\n \t* testsuite/25_algorithms/headers/algorithm/\n \talgorithm_parallel_mode.cc: Same.\n \t* testsuite/25_algorithms/headers/algorithm/\n@@ -1791,11 +1791,11 @@\n \n \t* testsuite/21_strings/basic_string/requirements/\n \texplicit_instantiation/debug.cc: Remove exception text.\n-\t\n+\n \t* testsuite/23_containers/vector/bool/modifiers/insert/31370.cc:\n-\tFix for debug mode testing.\t\n+\tFix for debug mode testing.\n \t* testsuite/23_containers/vector/bool/capacity/29134.cc: Same.\n-\t\n+\n 2007-10-12  Jesper Nilsson  <jesper.nilsson@axis.com>\n \n        * testsuite/tr1/5_numerical_facilities/special_functions/\n@@ -1835,7 +1835,7 @@\n \t* testsuite/17_intro/headers/all_pedantic_errors.cc: Same.\n \n \t* include/ext/pb_ds/detail/standard_policies.hpp: Format.\n-\t* testsuite/util/native_type/assoc/native_set.hpp: Same, \n+\t* testsuite/util/native_type/assoc/native_set.hpp: Same,\n \tupdate comment.\n \t* testsuite/util/native_type/assoc/native_map.hpp: Same.\n \t* testsuite/util/native_type/assoc/native_multimap.hpp: Same.\n@@ -1868,7 +1868,7 @@\n \n \tPR libstdc++/33578\n \t* include/parallel/compatibility.h.  Use POSIX sched_yield on\n-\t__CYGWIN__ \n+\t__CYGWIN__\n \t(Sleep): Add prototype for __MINGW32__.\n \n 2007-10-10  Jason Merrill  <jason@redhat.com>\n@@ -1896,7 +1896,7 @@\n \n 2007-10-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* include/parallel/losertree.h (loser_tree_traits_unguarded): To \n+\t* include/parallel/losertree.h (loser_tree_traits_unguarded): To\n \tloser_tree_unguarded_traits.\n \t* include/parallel/multiway_merge.h (__gnu_parallel): Same.\n \n@@ -1915,7 +1915,7 @@\n \n \tPR libstdc++/33485 continued.\n \t* include/parallel/multiway_mergesort.h: Use __builtin_alloca.\n-\t\n+\n 2007-10-09  Zhou Drangon  <drangon.mail@gmail.com>\n \n \tPR libstdc++/33682\n@@ -1924,7 +1924,7 @@\n \n 2007-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/33489 continued.\t\t\n+\tPR libstdc++/33489 continued.\n \t* include/parallel/features.h (_GLIBCXX_LOSER_TREE): Set to zero.\n \t(_GLIBCXX_LOSER_TREE_POINTER): Set to one.\n \t(_GLIBCXX_LOSER_TREE_UNGUARDED): Set to zero.\n@@ -1942,7 +1942,7 @@\n \t(parallel_sort_mwms_pu): Same.\n \t* include/parallel/quicksort.h (parallel_sort_qs_divide): Don't\n \tuse array form to construct pointer to value_type on stack,\n-\tinstead use __builtin_alloca.\t\n+\tinstead use __builtin_alloca.\n \t* include/parallel/random_shuffle.h (sequential_random_shuffle): Same,\n \tbut use operator new.\n \t(parallel_random_shuffle_drs_pu): Same.\n@@ -1952,8 +1952,8 @@\n \t* include/parallel/settings.h: Format.\n \n \t* include/parallel/multiway_merge.h: Move traits to....\n-\t* include/parallel/losertree.h: ... here.\t\n-\t\n+\t* include/parallel/losertree.h: ... here.\n+\n 2007-10-09  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1_impl/type_traitsfwd.h (add_reference): Remove.\n@@ -1985,10 +1985,10 @@\n \n 2007-10-08  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/33489\t\n+\tPR libstdc++/33489\n \t* include/parallel/multiseq_selection.h: Remove default constructed\n \tvalue_type.\n-\t* include/parallel/partition.h: \n+\t* include/parallel/partition.h:\n \t* include/parallel/partial_sum.h: Format.\n \n 2007-10-08  Johannes Singler  <singler@ira.uka.de>\n@@ -2054,14 +2054,14 @@\n \n \t* include/bits/stl_algobase.h (_GLIBCXX_MOVE): Add.\n \t(swap, __iter_swap): Use it.\n-\t* testsuite/25_algorithms/rotate/moveable.cc: Remove \n+\t* testsuite/25_algorithms/rotate/moveable.cc: Remove\n \tdg-require-rvalref.\n \t* testsuite/25_algorithms/remove/moveable.cc: Likewise.\n-\t* testsuite/25_algorithms/partition/moveable.cc: Likewise. \n+\t* testsuite/25_algorithms/partition/moveable.cc: Likewise.\n \t* testsuite/25_algorithms/swap_ranges/moveable.cc: Likewise.\n-\t* testsuite/25_algorithms/reverse/moveable.cc: Likewise. \n-\t* testsuite/25_algorithms/unique/moveable.cc: Likewise. \n-\t* testsuite/25_algorithms/remove_if/moveable.cc: Likewise. \n+\t* testsuite/25_algorithms/reverse/moveable.cc: Likewise.\n+\t* testsuite/25_algorithms/unique/moveable.cc: Likewise.\n+\t* testsuite/25_algorithms/remove_if/moveable.cc: Likewise.\n \n \t* include/bits/stl_algobase.h (lexicographical_compare):\n \tClean up.\n@@ -2080,7 +2080,7 @@\n \n 2007-10-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/33678\t\n+\tPR libstdc++/33678\n \t* libsupc++/typeinfo (typeinfo): Revert ordering of virtual components.\n \n 2007-10-06  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -2101,15 +2101,15 @@\n \tconventions.\n \n \t* include/parallel/search.h (calc_borders): Only use operator ==.\n-\t\n+\n \t* include/parallel/algorithmfwd.h: Move __gnu_sequential bits to...\n \t* include/parallel/tags.h: ...here, and use a using directive.\n \n \t* include/parallel/random_shuffle.h: Include stl_numeric. Qualify\n \tuses of partial_num with __gnu_sequential.\n \n \t* include/parallel/tree.h: Formatting.\n-\t\n+\n 2007-10-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tFixes for --disable-libstdcxx-pch.\n@@ -2217,11 +2217,11 @@\n \n \t* testsuite/23_containers/map/moveable.cc: Remove dg-require-rvalref.\n \t* testsuite/23_containers/multimap/moveable.cc: Likewise.\n-\t* testsuite/23_containers/set/moveable.cc: Likewise. \n+\t* testsuite/23_containers/set/moveable.cc: Likewise.\n \t* testsuite/23_containers/multiset/moveable.cc: Likewise.\n-\t* testsuite/23_containers/deque/moveable.cc: Likewise. \n-\t* testsuite/23_containers/list/moveable.cc: Likewise. \n-\t* testsuite/23_containers/vector/moveable.cc: Likewise. \n+\t* testsuite/23_containers/deque/moveable.cc: Likewise.\n+\t* testsuite/23_containers/list/moveable.cc: Likewise.\n+\t* testsuite/23_containers/vector/moveable.cc: Likewise.\n \t* include/std/utility: Use _GLIBCXX_BEGIN_NAMESPACE.\n \n 2007-10-05  Paolo Carlini  <pcarlini@suse.de>\n@@ -2330,20 +2330,20 @@\n \t(_Rb_tree<>::_Rb_tree(const _Compare&, const allocator_type&),\n \t_Rb_tree(const _Rb_tree&)): Adjust.\n \t* include/bits/stl_set.h (set<>::set(),\n-\tset(_InputIterator, _InputIterator)): Use _M_t default constructor. \n+\tset(_InputIterator, _InputIterator)): Use _M_t default constructor.\n \t* include/bits/stl_map.h (map<>::map(), set(_InputIterator,\n-\t_InputIterator)): Use _M_t default constructor. \n+\t_InputIterator)): Use _M_t default constructor.\n \t* include/bits/stl_multiset.h (multiset<>::multiset(),\n \tmultiset(_InputIterator, _InputIterator)): Use _M_t default\n-\tconstructor. \n+\tconstructor.\n \t* include/bits/stl_multimap.h (multimap<>::multimap(),\n \tmultimap(_InputIterator, _InputIterator)): Use _M_t default\n \tconstructor.\n \n 2007-10-03  Chris Jefferson  <chris@bubblescope.net>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* testsuite/20_util/pair/moveable.cc: New. Merge from \n+\t* testsuite/20_util/pair/moveable.cc: New. Merge from\n \tlibstdcxx_so_7-branch.\n \t* testsuite/23_containers/deque/capacity/moveable.cc: Same.\n \t* testsuite/23_containers/deque/cons/moveable.cc: Same.\n@@ -2380,13 +2380,13 @@\n \t* testsuite/25_algorithms/partition/partition.cc: Move to...\n \t* testsuite/25_algorithms/partition/1.cc: ...this.\n \t* testsuite/25_algorithms/stable_partition/1.cc: ... and this.\n-\t\n+\n \t* testsuite/25_algorithms/search/1.cc: Update from merge.\n \t* testsuite/25_algorithms/search/check_type.cc: Same.\n \n \t* testsuite/lib/dg-options.exp (dg-require-rvalref): New.\n \t* testsuite/lib/libstdc++.exp (check_v3_target_rvalref): New.\n-\t\n+\n 2007-10-03  Richard Sandiford  <richard@codesourcery.com>\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_C99): Temporarily add\n@@ -2438,7 +2438,7 @@\n \n 2007-10-02  Chris Jefferson  <chris@bubblescope.net>\n \n-\t* testsuite/25_algorithms/search/1.cc: Merge from \n+\t* testsuite/25_algorithms/search/1.cc: Merge from\n \tlibstdcxx_so_7-branch.\n \t* testsuite/25_algorithms/search/check_type.cc: Same.\n \t* testsuite/25_algorithms/sort/vectorbool.cc: Same.\n@@ -2464,15 +2464,15 @@\n \n \t* include/parallel/algorithmfwd.h: Spacing.\n \t* include/parallel/tags.h: Correct comment.\n-\t\n+\n \t* testsuite/Makefile.am (AM_MAKEFLAGS, AM_RUNTESTFLAGS): Remove.\n \t* testsuite/Makefile.in: Regenerate.\n-\t\n+\n 2007-09-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/util/testsuite_hooks.cc (set_memory_limits): Adjust\n \tx86_64 virtual memory setting for libgomp.\n-\t\n+\n 2007-09-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/stl_algo.h: Add return type information to comments.\n@@ -2487,12 +2487,12 @@\n \n \t* testsuite/26_numerics/accumulate, adjacent_difference, inner_product,\n \tpartial_sum/requirements/explicit_instantiation/2.cc, pod.cc: New.\n-\t\n+\n \t* testsuite/26_numerics/numeric_arrays/*: Move contents into\n \ttestsuite/26_numerics.\n \n \t* testsuite/26_numerics/numeric_operations: Same.\n-\t\n+\n \t* testsuite/23_containers/*/requirements/explicit_instantiation/2.cc:\n \tAdjust includes from testsuite_eh.h to testsuite_api.h.\n \n@@ -2506,12 +2506,12 @@\n \tPR libstdc++/32819\n \tPR libstdc++/32822\n \t* docs/html/ext/pb_ds/hash_based_containers.html: Correct.\n-\t\n+\n 2007-09-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* configure.host: Set atomic_flags on i486.\n \n-\t* include/Makefile.am: Remove parallel-mode pch.\t\n+\t* include/Makefile.am: Remove parallel-mode pch.\n \t* include/Makefile.in: Regenerate.\n \n \t* testsuite/lib/libstdc++.exp: Set ld_library_flags for libgomp if\n@@ -2558,15 +2558,15 @@\n \tin the neat and general way.\n \n 2007-09-14  Benjamin Kosnik  <bkoz@redhat.com>\n-        \n+\n \t* include/parallel/base.h (__gnu_parallel::less<Tp>): Add partial\n-        specialization for one argument. \n+        specialization for one argument.\n \t(__gnu_parallel::less): Add operator.\n \n-\t* include/parallel/multiway_merge.h: Use __builtin_alloca. \n+\t* include/parallel/multiway_merge.h: Use __builtin_alloca.\n \t* include/parallel/partial_sum.h: Same.\n-\t* include/parallel/find.h: Same.\t\n-\t\n+\t* include/parallel/find.h: Same.\n+\n 2007-09-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/tr1_impl/boost_shared_ptr.h: (__weak_ptr::lock()): Add\n@@ -2600,7 +2600,7 @@\n \t* testsuite/ext/pb_ds/*: Same.\n \t* testsuite/performance/ext/pb_ds/*: Same.\n \t* testsuite/util/*: Same.\n-\t\n+\n 2007-09-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/parallel/find.h: Doxygen fixups.\n@@ -2680,7 +2680,7 @@\n \t* include/Makefile.in: Same.\n \t* src/Makefile.in: Same.\n \t* po/Makefile.in: Same.\n-\t\n+\n \t* config/abi/pre/gnu.ver: Export parallel list bits.\n \n \t* docs/html/parallel_mode.html: New.\n@@ -2736,7 +2736,7 @@\n \tparallel_numeric_mixed1.cc: New.\n \t* testsuite/26_numerics/headers/numeric/\n \tparallel_numeric_mixed2.cc: New.\n-\t\n+\n 2007-09-11  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* testsuite/lib/libstdc++.exp (libstdc++_init): Revert part of\n@@ -2751,11 +2751,11 @@\n \ttypes_std_c++0x.cc: Same.\n \n 2007-09-09  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/25_algorithms/binary_search.cc: Move...\n \t* testsuite/25_algorithms/binary_search/2.cc: ...here.\n \n-\t* testsuite/25_algorithms/sort.cc: Move...\t\n+\t* testsuite/25_algorithms/sort.cc: Move...\n \t* testsuite/25_algorithms/sort/1.cc: ...here.\n \t* testsuite/25_algorithms/partial_sort_copy/2.cc: ...here.\n \t* testsuite/25_algorithms/nth_element/3.cc: ...here.\n@@ -2793,7 +2793,7 @@\n \t* testsuite/Makefile.in: Same.\n \t* config/abi/pre/gnu.ver: Add symbols.\n \t* config/abi/pre/gnu-versioned-namespace.ver: Same, fix.\n-\t\n+\n 2007-09-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc:\n@@ -2826,28 +2826,28 @@\n \t* include/ext/rope: Same.\n \t* include/bits/stl_function.h: Format.\n \t* include/tr1_impl/array: Remove section number in doxygen markup.\n-\t* src/list.cc: Comment tweak.\t\n-\t\n+\t* src/list.cc: Comment tweak.\n+\n \t* docs/doxygen/user.cfg.in: Update for include/tr1_impl.\n-\t\n+\n \t* testsuite/25_algorithms/search_n/iterator.cc: Add using declaration.\n \t* testsuite/25_algorithms/nth_element/1.cc:  Same.\n \t* testsuite/21_strings/char_traits/requirements/short/1.cc: Use\n-\tchar_type typedef to the underlying character type.\t\n+\tchar_type typedef to the underlying character type.\n \t* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc:\n \tRemove -ansi -pedantic-errors.\n \t* testsuite/21_strings/char_traits/requirements/char/typedefs.cc: Same.\n \t* testsuite/tr1/6_containers/headers/functional/synopsis.cc:\n \tRemove specializations.\n-\t\n+\n 2007-09-06  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_vector.h (_Vector_base<>::_M_allocate):\n \tDo not call _M_impl.allocate when __n == 0.\n \t* testsuite/23_containers/vector/zero_sized_allocations.cc: New.\n \n 2007-09-06  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \tPR libstdc++/29367\n \t* include/ext/pb_ds/detail/map_debug_base.hpp: From this..\n \t* include/ext/pb_ds/detail/debug_map_base.hpp: ...to this.\n@@ -2857,7 +2857,7 @@\n \t* include/ext/pb_ds/*: Likewise.\n \t* include/Makefile.am: Same.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2007-09-06  Matthias Klose  <doko@debian.org>\n \n \t* testsuite/27_io/headers/cstdlib: Remove empty directory.\n@@ -2885,9 +2885,9 @@\n 2007-08-29  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add ENODATA, ENOSR,\n-\tENOSTR, ETIME for freebsd.\t\n+\tENOSTR, ETIME for freebsd.\n \t* configure: Regenerate.\n-\t* include/std/system_error: Guard.\t\n+\t* include/std/system_error: Guard.\n \t* testsuite/19_diagnostics/headers/system_error/\n \ttypes_std_c++0x.cc: Same.\n \t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Adjust\n@@ -2911,7 +2911,7 @@\n \t* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add ENOLINK, EPROTO\n \tfor netbsd.\n \t* configure: Regenerate.\n-\t* include/std/system_error: Guard.\t\n+\t* include/std/system_error: Guard.\n \t* testsuite/19_diagnostics/headers/system_error/\n \ttypes_std_c++0x.cc: Same.\n \t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Adjust\n@@ -2922,15 +2922,15 @@\n \t* include/std/system_error: New file.\n \t* src/system_error.cc: New file.\n \t* src/Makefile.am (sources): Add.\n-\t* src/Makefile.in: Regenerate.\t\n+\t* src/Makefile.in: Regenerate.\n \t* include/Makefile.am (std_headers): Add system_error.\n \t* include/Makefile.in: Regenerate.\n \t* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): New.\n \t* configure.ac: Call it.\n \t* config.h.in: Regenerate.\n \t* include/bits/functional_hash.h: Add hash<error_code>.\n  \t* include/std/ostream: Add inserters for error_code.\n-\t\n+\n \t* docs/doxygen/user.cfg.in: Add system_error.\n \n \t* config/abi/pre/gnu.ver(GLIBCXX_3.4.10): Add new symbols.\n@@ -2969,30 +2969,30 @@\n \terror_code.cc: Same.\n \t* testsuite/tr1/6_containers/hash/operators: New.\n \t* testsuite/tr1/6_containers/hash/operators/size_t.cc: Same.\n-\t\n+\n \t* testsuite/23_containers/hash: Move...\n \t* testsuite/20_util/hash: ... here.\n \t* testsuite/20_util/hash/operators: New.\n \t* testsuite/20_util/hash/operators/size_t.cc: New.\n \n \t* testsuite/20_util/function_objects/bad_function_call: Move...\n \t* testsuite/20_util/bad_function_call: ...here.\n-\t\n+\n 2007-08-21  Benjamin Kosnik  <bkoz@montsouris.artheist.org>\n \n \t* include/Makefile.am (install-data-local): Remove pch-install rules.\n \t(host_headers): Add stdc++.h, stdtr1c++.h, extc++.h.\n \t* include/Makefile.in: Regenerate.\n \t* config.h.in: Same.\n \n-\t* scripts/check_compile: Remove space between outputs.\t\n-\t* include/ext/throw_allocator.h: Correct doxygen markup.\t\n+\t* scripts/check_compile: Remove space between outputs.\n+\t* include/ext/throw_allocator.h: Correct doxygen markup.\n \t* include/bits/char_traits.h: Correct spacing.\n \t* include/bits/stl_function.h: Same, for 80 column.\n \t* include/std/valarray: Same.\n-\t* testsuite/util/testsuite_iterators.h: Same.\t\n+\t* testsuite/util/testsuite_iterators.h: Same.\n \t* testsuite/25_algorithms/headers/algorithm/synopsis.cc: Format.\n-\t\n+\n 2007-08-17  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \tPR testsuite/31884\n@@ -3134,7 +3134,7 @@\n \t* testsuite/tr1/3_function_objects/bind/nested.cc: Ditto.\n \t* testsuite/tr1/3_function_objects/bind/placeholders.cc: Ditto.\n \t* testsuite/tr1/6_containers/unordered_multimap/requirements/\n-\texplicit_instantiation.cc: Ditto. \n+\texplicit_instantiation.cc: Ditto.\n \t* testsuite/tr1/6_containers/unordered_multimap/swap/1.cc: Ditto.\n \t* testsuite/tr1/6_containers/unordered_multimap/swap/2.cc: Ditto.\n \t* testsuite/tr1/6_containers/unordered_set/requirements/\n@@ -3143,7 +3143,7 @@\n \t* testsuite/tr1/6_containers/unordered_set/swap/2.cc: Ditto.\n \t* testsuite/tr1/6_containers/utility/pair.cc: Ditto.\n \t* testsuite/tr1/6_containers/unordered_map/requirements/\n-\texplicit_instantiation.cc: Ditto. \n+\texplicit_instantiation.cc: Ditto.\n \t* testsuite/tr1/6_containers/unordered_map/24064.cc: Ditto.\n \t* testsuite/tr1/6_containers/unordered_map/swap/1.cc: Ditto.\n \t* testsuite/tr1/6_containers/unordered_map/swap/2.cc: Ditto.\n@@ -3153,7 +3153,7 @@\n \t* testsuite/tr1/6_containers/tuple/tuple_element.cc: Ditto.\n \t* testsuite/tr1/6_containers/tuple/tuple_size.cc: Ditto.\n \t* testsuite/tr1/6_containers/tuple/comparison_operators/\n-\tcomparisons.cc: Ditto. \n+\tcomparisons.cc: Ditto.\n \t* testsuite/tr1/6_containers/tuple/element_access/get.cc: Ditto.\n \t* testsuite/tr1/6_containers/tuple/creation_functions/23978.cc: Ditto.\n \t* testsuite/tr1/6_containers/tuple/creation_functions/tie.cc: Ditto.\n@@ -3165,11 +3165,11 @@\n \t* testsuite/tr1/6_containers/unordered_multiset/swap/2.cc: Ditto.\n \n 2007-07-10  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* configure.ac: Check if $atomicity_dir is cpu/generic/atomicity_mutex\n \tinstead of the non-existent cpu/generic/atomic_mutex.\n \t* configure: Regenerate.\n-\t\n+\n 2007-07-10  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/utility (identity, move, forward): Add.\n@@ -3183,7 +3183,7 @@\n \tNew.\n \t* testsuite/20_util/forward/1.cc: New.\n \t* testsuite/20_util/forward/1_neg.cc: New.\n-\t\n+\n 2007-07-09  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/27_io/ios_base/failure/what-1.cc: Include <stdexcept>.\n@@ -3206,7 +3206,7 @@\n \tPR libstdc++/31957\n \t* include/Makefile.am: Work around an AIX sed oddity.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2007-07-04  Jim Xochellis  <jimxoch@yahoo.gr>\n \n \t* include/bits/stl_algo.h (search(_ForwardIterator1,\n@@ -3215,7 +3215,7 @@\n \t(search(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2,\n \t_ForwardIterator2, _BinaryPredicate)): Likewise; remove redundant\n \tinner loop.\n-\t\n+\n 2007-07-03  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/31518\n@@ -3247,19 +3247,19 @@\n \t* include/std/type_traits (__make_unsigned): Remove invalid\n \twchar_t specialization.\n \t(__make_signed): Remove invalid wchar_t specialization.\n-\t\n+\n 2007-06-29  Douglas Gregor  <doug.gregor@gmail.com>\n \n \t* testsuite/18_support/headers/cstdbool/std_c++0x_neg.cc: Force\n-\tC++98 mode.  \n+\tC++98 mode.\n \t* testsuite/18_support/headers/cstdint/std_c++0x_neg.cc: Ditto.\n \t* testsuite/20_util/headers/type_traits/std_c++0x_neg.cc: Ditto.\n \t* testsuite/23_containers/headers/array/std_c++0x_neg.cc: Ditto.\n \t* testsuite/23_containers/headers/tuple/std_c++0x_neg.cc: Ditto.\n \t* testsuite/23_containers/headers/unordered_map/std_c++0x_neg.cc:\n-\tDitto. \n+\tDitto.\n \t* testsuite/23_containers/headers/unordered_set/std_c++0x_neg.cc:\n-\tDitto. \n+\tDitto.\n \t* testsuite/26_numerics/headers/ccomplex/std_c++0x_neg.cc: Ditto.\n \t* testsuite/26_numerics/headers/cfenv/std_c++0x_neg.cc: Ditto.\n \t* testsuite/26_numerics/headers/ctgmath/std_c++0x_neg.cc: Ditto.\n@@ -3305,8 +3305,8 @@\n \t* testsuite/20_util/function_objects/bad_function_call: New.\n \t* testsuite/20_util/function_objects/bad_function_call/\n \tcons_virtual_derivation.cc: Same.\n-\t\n-2007-06-26  Benjamin Kosnik  <bkoz@redhat.com>\t\n+\n+2007-06-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/throw_allocator.h: Fixes for -fno-exceptions.\n \t* testsuite/util/testsuite_shared.cc: Same.\n@@ -3317,7 +3317,7 @@\n \tclarify member access and public interface.\n \t* libsupc++/exception: Less compressed comments.\n \t* libsupc++/new: Same.\n-\t\n+\n 2007-06-18  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_list.h: Rename guard macro consistently with\n@@ -3387,7 +3387,7 @@\n \n 2007-06-06  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Frank Mori Hess  <frank.hess@nist.gov>\n-\t\n+\n \t* docs/html/debug.html: Correct link.\n \n 2007-06-02  Paolo Carlini  <pcarlini@suse.de>\n@@ -3448,7 +3448,7 @@\n \t* configure: Regenerate.\n \n 2007-06-01  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/19_diagnostics/logic_error/what-big.cc: New.\n \t* testsuite/19_diagnostics/logic_error/what-3.cc: Same.\n \t* testsuite/19_diagnostics/runtime_error/what-big.cc: Same.\n@@ -3470,7 +3470,7 @@\n 2007-06-01  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/throw_allocator.h (__throw_allocator::allocate):\n-\tThrow bad_alloc for out of memory conditions.\t\n+\tThrow bad_alloc for out of memory conditions.\n \t* testsuite/ext/throw_allocator/deallocate_global.cc: New.\n \t* testsuite/ext/throw_allocator/check_delete.cc: Same.\n \t* testsuite/ext/throw_allocator/check_allocate_max_size.cc: Same.\n@@ -3585,7 +3585,7 @@\n \t* include/c_global/cstdarg: Likewise.\n \t* include/c_global/ctime: Likewise.\n \t* include/c_global/climits: Likewise.\n-\t* include/c_global/cfloat: Likewise.\t\n+\t* include/c_global/cfloat: Likewise.\n \t* include/c_global/ccomplex: Likewise.\n \t* include/c_global/cstdbool: Likewise.\n \n@@ -3648,7 +3648,7 @@\n \t* testsuite/20_util/is_unsigned/requirements/explicit_instantiation.cc:\n \tLikewise.\n \n-\t* include/Makefile.am: Adjust.\t\n+\t* include/Makefile.am: Adjust.\n \t* include/Makefile.in: Regenerate.\n \n 2007-05-31  Paolo Carlini  <pcarlini@suse.de>\n@@ -3687,15 +3687,15 @@\n \n 2007-05-28  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tPR libstdc++/31717 \n+\tPR libstdc++/31717\n \t* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Re-organize. Sanity check\n \tgnu locale model requests to make sure it will work for the requested\n \ttarget. Add checks for strxfrm_l, strerror_l when in gnu locale,\n \tand strerror_r everywhere.\n \t* aclocal.m4: Regenerated.\n \t* configure: Regenerated.\n \t* config.h.in: Regenerated.\n-\t\n+\n 2007-05-27  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/boost_shared_ptr.h\n@@ -3707,7 +3707,7 @@\n \t* include/c_global/cwchar: Do not include <ctime>.\n \t* include/c_std/cwchar: Likewise.\n \t* include/ext/throw_allocator.h: Do it here.\n-\t\n+\n 2007-05-25  Paolo Carlini  <pcarlini@suse.de>\n \n \t* config/locale/gnu/c_locale.h (__convert_from_v): Fix typo.\n@@ -3775,7 +3775,7 @@\n \n \t* config/locale/gnu/c_locale.h: Do not include <libintl.h>.\n \t* config/locale/gnu/messages_members.h: Do it here.\n-\t\n+\n \t* config/locale/gnu/c_locale.h: Do not include <cstdio>, use\n \tthe builtins.\n \t* config/locale/generic/c_locale.h: Likewise.\n@@ -3785,10 +3785,10 @@\n \t* acinclude.m4 (GLIBCXX_CHECK_COMPILER_FEATURES): Add -g to\n \tcompile flags, move code to test to global scope.\n \t* configure: Regenerate.\n-\t\n+\n 2007-05-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc: \n+\t* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc:\n \tFix dg bits.\n \t* testsuite/21_strings/char_traits/requirements/char/typedefs.cc: Same.\n \n@@ -3817,25 +3817,25 @@\n \n \t* testsuite/22_locale/ctype/scan/wchar_t/1.cc: Remove\n \t_GLIBCXX_USE_WCHAR_T guards as superfluous.\n-\t\n+\n \t* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Add\n-\t_GLIBCXX_USE_WCHAR_T guards.\t\n+\t_GLIBCXX_USE_WCHAR_T guards.\n \t* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Same.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: Same.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc: Same.\n \n-\t* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc: \n+\t* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc:\n \tAdd.\n \t* testsuite/21_strings/char_traits/typedefs/char/1.cc: Move...\n-\t* testsuite/21_strings/char_traits/requirements/char/typedefs.cc: \n+\t* testsuite/21_strings/char_traits/requirements/char/typedefs.cc:\n \t...here.\n \t* testsuite/21_strings/char_traits/typedefs: Remove.\n \t* testsuite/21_strings/char_traits/typedefs/char: Remove.\n-\t\n-2007-05-16  Benjamin Kosnik  <bkoz@redhat.com>\t\n+\n+2007-05-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* docs/html/abi.html: Update for gcc-4.1.2 and gcc-4.2.0.\n-\t\n+\n 2007-05-14  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* testsuite/tr1/5_numerical_facilities/special_functions/\n@@ -3887,7 +3887,7 @@\n \t* config/locale/generic/time_members.h: Likewise.\n \t* config/os/gnu-linux/ctype_noninline.h: Likewise, avoid strdup.\n \t* config/os/tpf/ctype_noninline.h: Likewise.\n-\t* config/locale/generic/codecvt_members.cc: Include <cstring>. \n+\t* config/locale/generic/codecvt_members.cc: Include <cstring>.\n \t* config/locale/generic/ctype_members.cc: Likewise.\n \t* config/locale/generic/collate_members.cc: Likewise.\n \t* config/locale/gnu/c++locale_internal.h: Likewise.\n@@ -3900,7 +3900,7 @@\n \t* testsuite/19_diagnostics/runtime_error/what-3.cc: Likewise.\n \t* config/locale/gnu/messages_members.cc: Avoid strdup.\n \t* config/locale/gnu/monetary_members.cc: Likewise.\n-\t* config/locale/gnu/time_members.cc: Likewise.\t\n+\t* config/locale/gnu/time_members.cc: Likewise.\n \t* config/locale/gnu/time_members.cc: Likewise.\n \t* config/locale/generic/c_locale.cc: Likewise.\n \n@@ -4008,7 +4008,7 @@\n \t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Same.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: Same.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc: Same.\n-\t\n+\n 2007-05-08  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/26_numerics/headers/cmath/types_std_c++0x_neg.cc: New.\n@@ -4057,7 +4057,7 @@\n \t* libsupc++/eh_personality.cc: A handler for abi::__forced_unwind\n \tmatches a forced unwind, and a handler for abi::__foreign_exception\n \tmatches a foreign exception.\n-\t\n+\n \t* include/bits/istream.tcc: Rethrow forced unwind.\n \t* include/bits/ostream.tcc: Likewise.\n \t* include/bits/ostream_insert.h: Likewise.\n@@ -4111,7 +4111,7 @@\n             Howard Hinnant  <hhinnant@apple.com>\n \n \t* include/std/type_traits: (make_signed, make_unsigned): Adjust\n-\tfor enum sizes.\t\n+\tfor enum sizes.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs.cc: Move to...\n \t* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: ...here.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc: Add,\n@@ -4123,7 +4123,7 @@\n \n \t* testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc:\n \tAdd a temporary xfail to this test for all platforms.\n-\t\n+\n 2007-05-06  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/complex: Add missing extern template declarations.\n@@ -4156,7 +4156,7 @@\n \n \t* libsupc++/cxxabi.h (__cxa_atexit): Conditionalize exception\n \tspecification on #ifdef __cplusplus.\n-\t\n+\n 2007-05-04  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_memory.h: Rename to stl_auto_ptr.h.\n@@ -4211,7 +4211,7 @@\n \t* include/tr1/type_traits_fwd: Move to...\n \t* include/tr1/type_traitsfwd: ... this, consistency with\n \tios/string/locale forward headers.\n-\t* include/tr1/type_traits: Adjust include.\t\n+\t* include/tr1/type_traits: Adjust include.\n \t* include/Makefile.am (tr1_headers): Change type_traits_fwd.h to\n \ttype_traitsfwd.h.\n \t* include/Makefile.in: Regenerate.\n@@ -4275,31 +4275,31 @@\n \texplicit_instantiation.cc: Same.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs.cc: Same.\n \t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Same.\n-\t\n+\n 2007-05-02  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/31777\n \t* include/ext/pool_allocator.h (__pool_alloc<>::allocate,\n \t__pool_alloc<>::deallocate): Fix _S_force_new check.\n \n 2007-05-01  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* 23_containers/requirements/sequences/dr438/deque/*: Move to...\n \t* 23_containers/deque/requirements/dr438: ...here.\n-\t\n+\n \t* 23_containers/requirements/sequences/dr438/list/*: Move to...\n \t* 23_containers/list/requirements/dr438: ...here.\n-\t\n+\n \t* 23_containers/requirements/sequences/dr438/vector/*: Move to...\n \t* 23_containers/vector/requirements/dr438: ...here.\n \n 2007-05-01  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/*/explicit_instantiations.cc: Change to...\n \t* testsuite/*/explicit_instantiation.cc: ... this.\n \n 2007-05-01  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/tr1/4_metaprogramming/*/explicit_instantiations.cc: Change\n \t\"basic_ofstream\" in comment to type_traits.\n \n@@ -4617,7 +4617,7 @@\n \texplicit_instantiations.cc\n \t* tr1/4_metaprogramming/remove_volatile/value.cc\n \n-\tDeleted in testsuite:\t\n+\tDeleted in testsuite:\n \t* tr1/4_metaprogramming/alignment_of/alignment_of.cc\n \t* tr1/4_metaprogramming/alignment_of/typedefs.cc\n \t* tr1/4_metaprogramming/array_modifications\n@@ -5248,7 +5248,7 @@\n \n \t* include/ext/pb_ds/detail/resize_policy/\n \tcc_hash_max_collision_check_resize_trigger_imp.hpp: Qualify\n-\tnamespace std members.\t\n+\tnamespace std members.\n \t* include/ext/pb_ds/detail/list_update_policy/\n \tcounter_lu_metadata.hpp: Same.\n \t* include/ext/throw_allocator.h: Same.\n@@ -5257,10 +5257,10 @@\n \t* libsupc++/del_op.cc: Same, simplify.\n \n \t* include/bits/c++config: Adjust macro name.\n-\t\n+\n \t* include/c_global/cstring: Alphabetize.\n \t* include/c_global/cwctype: Same.\n-\t\n+\n 2007-04-10  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/cmath: Include <bits/stl_algobase.h> instead of\n@@ -5385,7 +5385,7 @@\n \t* include/ext/type_traits.h (__numeric_traits): Move...\n \t* include/ext/numeric_traits.h: ... here.\n \t* include/Makefile.am: Add.\n-\t* include/ext/pb_ds/detail/type_utils.hpp: Include \n+\t* include/ext/pb_ds/detail/type_utils.hpp: Include\n \t<ext/numeric_traits.h> too.\n \t* include/tr1/random: Likewise.\n \t* testsuite/ext/type_traits/numeric_traits.cc: Move...\n@@ -5507,7 +5507,7 @@\n 2007-03-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_compatibility/complex.h: Without\n-\t__GXX_EXPERIMENTAL_CXX0X__ include_next complex.h.\t\n+\t__GXX_EXPERIMENTAL_CXX0X__ include_next complex.h.\n \t* include/c_compatibility/fenv.h: Same.\n \t* include/c_compatibility/inttypes.h: Same.\n \t* include/c_compatibility/stdbool.h: Same.\n@@ -5521,7 +5521,7 @@\n \t* acinclude.m4 (GLIBCXX_ENABLE_C99): Add check for tgmath.h\n \t* configure: Regenerate.\n \t* config.h.in: Same.\n-\t\n+\n 2007-03-25  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/functional: Formatting fixes.\n@@ -5557,7 +5557,7 @@\n \t* testsuite/21_strings/headers/cwctype/types_std.cc: Same.\n \t* testsuite/21_strings/headers/cwchar/functions_std.cc: Same.\n \t* testsuite/21_strings/headers/cwchar/types_std.cc: Same.\n-\t\n+\n \t* include/Makefile.am (c_compatibility_headers): Add fenv.h.\n \t* include/Makefile.in: Regenerate.\n \t* configure.host: Update comment.\n@@ -5573,7 +5573,7 @@\n 2007-03-19  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* docs/doxygen/user.cfg.in: Update for new includes, macros.\n-\t\n+\n 2007-03-18  Mark Mitchell  <mark@codesourcery.com>\n \n \t* libsupc++/array_type_info.cc: Likewise.\n@@ -5634,12 +5634,12 @@\n \texplicit_instantiation.cc: Same.\n \t* testsuite/20_util/weak_ptr/requirements/\n \texplicit_instantiation.cc: Same.\n-\t\n+\n 2007-03-16  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/lib/dg-options.exp (dg-require-c-std): New.\n \t* testsuite/lib/libstdc++.exp (check_v3_target_c_std): New. Check to\n-\tsee if _GLIBCXX_USE_C99_MATH is active. \n+\tsee if _GLIBCXX_USE_C99_MATH is active.\n \t* testsuite/tr1/5_numerical_facilities/special_functions/\n \t08_cyl_bessel_i/check_nan.cc: Use dg-require-c-std.\n \t* testsuite/tr1/5_numerical_facilities/special_functions/\n@@ -5695,7 +5695,7 @@\n \t* docs/html/ext/tr1.html : Marked tr1 math special functions done.\n \t* docs/html/faq/index.html : Ditto.\n \t* include/Makefile.in : Added new special function header files.\n-\t* include/Makefile.am : Ditto.\t\n+\t* include/Makefile.am : Ditto.\n \t* include/tr1/common.h : Added type promotion routines for three\n \tand four args.\n \n@@ -5901,7 +5901,7 @@\n \t23_sph_neumann/check_value.cc: New.\n \t* testsuite/tr1/5_numerical_facilities/special_functions/\n \t23_sph_neumann/ compile_2.cc: New.\n-\t\n+\n 2007-03-15  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* testsuite/lib/libstdc++.exp (v3-build_support) <ar>: If it\n@@ -6155,7 +6155,7 @@\n \t* include/ext/stdio_sync_filebuf.h: Likewise.\n \t* include/ext/rope: Include <bits/gthr.h> unconditionally.\n \t* include/std/fstream: Do not include <bits/gthr.h>.\n-\t\n+\n \t* include/std/ios: Do not include <cstdio>.\n \t* include/bits/ios_base.h: Do it here.\n \t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust dg-error\n@@ -6227,7 +6227,7 @@\n \t* include/tr1/functional_iterate.h: Remove.\n \t* include/tr1/repeat.h: Remove.\n \t* include/Makefile.am: Don't install removed headers.\n-\t\n+\n 2007-03-06  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/28080 (partial)\n@@ -6284,7 +6284,7 @@\n \t\"C\" includes that are in the global namespace, with C++ includes\n \tinjecting into namespace std and no C++ \"C\" compatibility\n \tincludes.\n- \n+\n 2007-03-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/c++config: Add _GLIBCXX_NAMEPACE_C.\n@@ -6342,12 +6342,12 @@\n \n \t* include/c_global/ccomplex: Add.\n \t* include/c_global/cfenv: Add.\n-\t* include/c_global/cinttypes: Add. \n+\t* include/c_global/cinttypes: Add.\n \t* include/c_global/cstdbool: Add.\n \t* include/c_global/cstdint: Add.\n \t* include/c_global/ctgmath: Add.\n \n-\t* include/std/algorithm: Use C++0x features if -std=c++0x.\t\n+\t* include/std/algorithm: Use C++0x features if -std=c++0x.\n \t* include/std/bitset: Same.\n \t* include/std/complex: Same.\n \t* include/std/deque: Same.\n@@ -6385,7 +6385,7 @@\n \t* include/std/unordered_map: Add.\n \t* include/std/unordered_set: Add.\n \t* include/std/c++0x_warning.h: Add.\n-\t\n+\n \t* include/tr1/array: Switch namespaces based on _GLIBCXX_TR1.\n \t* include/tr1/boost_shared_ptr.h: Same.\n \t* include/tr1/cctype: Same.\n@@ -6502,10 +6502,10 @@\n 2007-03-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/debug/functions.h: Use cstddef.\n-\t\n+\n \t* testsuite/tr1/3_function_objects/headers/functional/\n \tusing_namespace_std_tr1_placeholders.cc: Fix include.\n-\t\n+\n 2007-03-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* crossconfig.m4 (djgpp): Correct builtin defines to HAVE___,\n@@ -6633,7 +6633,7 @@\n \t* include/std/bitset: Do not include <ios>, <iosfwd> is enough.\n \t(operator>>(std::basic_istream<>&, bitset<>&)): Tweak, refer to\n \tios_base as a base of basic_istream.\n-\t* include/std/iomanip: Do not include <ios>, <iosfwd> + \n+\t* include/std/iomanip: Do not include <ios>, <iosfwd> +\n \t<bits/ios_base.h> is enough.\n \t* include/std/iosfwd: Do not include <cctype> here...\n \t* include/bits/locale_facets.h: ... do it here, when needed.\n@@ -6697,7 +6697,7 @@\n \t* testsuite/18_support/headers/cstdlib/macros.cc: Likewise.\n \n 2007-02-23  Paolo Carlini  <pcarlini@suse.de>\n-\t\n+\n \tPR libstdc++/25896\n \t* include/tr1/hashtable (_Hashtable<>::erase(const key_type&)):\n \tTake care of &_M_extract((*__slot)->_M_v) == &__k.\n@@ -6822,7 +6822,7 @@\n \t* tr1/2_general_utilities/enable_shared_from_this\n \t* tr1/2_general_utilities/shared_ptr\n \t* tr1/2_general_utilities/weak_ptr\n-\t\n+\n \tDeleted in testsuite:\n \t* 20_util/functional\n \t* 20_util/functional/binders\n@@ -6957,7 +6957,7 @@\n 2007-02-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tRevamp library API testing.\n-\t\n+\n \tAdded in testsuite:\n \t* 17_intro/headers\n \t* 17_intro/headers/all_assert_neg.cc\n@@ -7851,7 +7851,7 @@\n \t* testsuite/24_iterators/reverse_iterator/2.cc: To just one\n \tnon-requirements test.\n \t* testsuite/ext/headers.cc: Add new includes.\n-\t\n+\n 2007-02-18  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/28080 (partial)\n@@ -8005,7 +8005,7 @@\n \n \tPR libstdc++/14493\n \t* libsupc++/typeinfo (bad_cast::what, bad_typeid::what): Declare.\n-\t* libsupc++/tinfo.cc: Define.\t\n+\t* libsupc++/tinfo.cc: Define.\n \t* libsupc++/exception (bad_exception::what): Declare.\n \t* libsupc++/eh_exception.cc: Define.\n \t(exception::what): Adjust, don't use typeid.\n@@ -8046,7 +8046,7 @@\n \ttree_order_statistics_test.hpp: Same.\n \t* testsuite/ext/pb_ds/example/hash_resize_neg.cc: Adjust line numbers.\n \t* testsuite/17_intro/headers_c++_c++0x_compat.cc: New.\n-\t\n+\n \t* include/precompiled/extc++.h: Update to current list of ext files.\n \n 2007-01-29  Paolo Carlini  <pcarlini@suse.de>\n@@ -8138,7 +8138,7 @@\n \tlibsupc++ library directory.\n \t* testsuite/abi/cxx_runtime_only_linkage.cc: Remove hard-coded\n \tpath specification.\n-\t\n+\n 2007-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* libsupc++/eh_personality.cc (parse_lsda_header, check_exception_spec,\n@@ -8166,7 +8166,7 @@\n \tconst unsigned char&), fill_n(char*, _Size, char&)): Rename to\n \t__*_aux.\n \t(__fill_normal, __fill_n_normal): New, call the latter.\n-\t(fill, fill_n): Adjust, call the latter.\t\n+\t(fill, fill_n): Adjust, call the latter.\n \t* testsuite/25_algorithms/fill/4.cc: New.\n \t* testsuite/25_algorithms/fill/5.cc: New.\n "}]}