{"sha": "048c989961b261b522d1af001cec42518361e36b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ4Yzk4OTk2MWIyNjFiNTIyZDFhZjAwMWNlYzQyNTE4MzYxZTM2Yg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2004-08-29T16:31:16Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-08-29T16:31:16Z"}, "message": "bessel.c: New file.\n\n2004-08-29  Steven G. Kargl  <kargls@comcast.net>\n\tPaul Brook  <paul@codesourcery.com>\n\n\t* intrinsics/bessel.c: New file.\n\t* intrinsics/erf.c: New file.\n\t* Makefie.am: Add intrinsics/bessel.c and intrinsics/erf.c.\n\t* configure.ac: Test for C99 Bessel and Error functions.\n\t* Makefile.in: Regenerate.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\nFrom-SVN: r86728", "tree": {"sha": "98816e2c470c363d195f4b7076300817b615708f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98816e2c470c363d195f4b7076300817b615708f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/048c989961b261b522d1af001cec42518361e36b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048c989961b261b522d1af001cec42518361e36b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/048c989961b261b522d1af001cec42518361e36b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048c989961b261b522d1af001cec42518361e36b/comments", "author": null, "committer": null, "parents": [{"sha": "e8525382d986350f38193ca20504631bfadc43ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8525382d986350f38193ca20504631bfadc43ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8525382d986350f38193ca20504631bfadc43ba"}], "stats": {"total": 111, "additions": 111, "deletions": 0}, "files": [{"sha": "ed7424215c6ac29a6a212d0e2a77ec523e16b435", "filename": "libgfortran/intrinsics/bessel.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048c989961b261b522d1af001cec42518361e36b/libgfortran%2Fintrinsics%2Fbessel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048c989961b261b522d1af001cec42518361e36b/libgfortran%2Fintrinsics%2Fbessel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fbessel.c?ref=048c989961b261b522d1af001cec42518361e36b", "patch": "@@ -0,0 +1,72 @@\n+/* Wrapper for systems without the various C99 single precision Bessel\n+   functions.\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Lesser General Public\n+License as published by the Free Software Foundation; either\n+version 2.1 of the License, or (at your option) any later version.\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU Lesser General Public License for more details.\n+\n+You should have received a copy of the GNU Lesser General Public\n+License along with libgfortran; see the file COPYING.LIB.  If not,\n+write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+#include <math.h>\n+#include \"libgfortran.h\"\n+\n+/* Assume we have all or none of these.  */\n+#if HAVE_J0 && !HAVE_J0F\n+float\n+j0f (float x)\n+{\n+  return (float) j0 ((double) x);\n+}\n+#endif\n+\n+#if HAVE_J1 && !HAVE_J1F\n+float j1f (float x)\n+{\n+  return (float) j1 ((double) x);\n+}\n+#endif\n+\n+#if HAVE_JN && !HAVE_JNF\n+float\n+jnf (int n, float x)\n+{\n+  return (float) jn (n, (double) x);\n+}\n+#endif\n+\n+#if HAVE_Y0 && !HAVE_Y0F\n+float\n+y0f (float x)\n+{\n+  return (float) y0 ((double) x);\n+}\n+#endif\n+\n+#if HAVE_Y1 && !HAVE_Y1F\n+float\n+y1f (float x)\n+{\n+  return (float) y1 ((double) x);\n+}\n+#endif\n+\n+#if HAVE_YN && !HAVE_YNF\n+float\n+ynf (int n, float x)\n+{\n+  return (float) yn (n, (double) x);\n+}\n+#endif"}, {"sha": "93329de4de315734e478b68699df34c6cf94fd76", "filename": "libgfortran/intrinsics/erf.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048c989961b261b522d1af001cec42518361e36b/libgfortran%2Fintrinsics%2Ferf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048c989961b261b522d1af001cec42518361e36b/libgfortran%2Fintrinsics%2Ferf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ferf.c?ref=048c989961b261b522d1af001cec42518361e36b", "patch": "@@ -0,0 +1,39 @@\n+/* Wrapper for systems without the C99 erff() and erfcf() functions\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Lesser General Public\n+License as published by the Free Software Foundation; either\n+version 2.1 of the License, or (at your option) any later version.\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU Lesser General Public License for more details.\n+\n+You should have received a copy of the GNU Lesser General Public\n+License along with libgfortran; see the file COPYING.LIB.  If not,\n+write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+#include <math.h>\n+#include \"libgfortran.h\"\n+\n+#if HAVE_ERF && !HAVE_ERFF\n+float\n+erff (float x)\n+{\n+  return (float) erf ((double) x);\n+}\n+#endif\n+\n+#if HAVE_ERFC && !HAVE_ERFCF\n+float\n+erfcf (float x)\n+{\n+  return (float) erfc ((double) x);\n+}\n+#endif"}]}