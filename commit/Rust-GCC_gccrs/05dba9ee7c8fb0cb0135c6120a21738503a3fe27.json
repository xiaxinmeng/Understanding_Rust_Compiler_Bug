{"sha": "05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVkYmE5ZWU3YzhmYjBjYjAxMzVjNjEyMGEyMTczODUwM2EzZmUyNw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2001-01-25T20:12:30Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-01-25T20:12:30Z"}, "message": "config.gcc (rs6000-ibm-aix[5-9]*): Change to aix51.h.\n\n\t* config.gcc (rs6000-ibm-aix[5-9]*): Change to aix51.h.\n\t* collect2.c (main): Delete importf.  Add \".obj\" file extension.\n\t(GCC_CHECK_HDR): Handle AIX V5 new magic number.\n\t(aix_std_libs): Add additional AIX libraries to skip.\n\t* config/rs6000/aix.h (MY_ISCOFF): Add AIX V5 new magic number.\n\t* config/rs6000/aix51.h: New file.\n\nFrom-SVN: r39271", "tree": {"sha": "16b8d2b210162126c0bc5180ef78f906750ade88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16b8d2b210162126c0bc5180ef78f906750ade88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/comments", "author": null, "committer": null, "parents": [{"sha": "0ef8b11bf2d742a69b1612012c91b3f6f28c9e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef8b11bf2d742a69b1612012c91b3f6f28c9e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef8b11bf2d742a69b1612012c91b3f6f28c9e69"}], "stats": {"total": 264, "additions": 255, "deletions": 9}, "files": [{"sha": "22a392ade71251a4631f3046dfdaa7241f36e7aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "patch": "@@ -1,3 +1,12 @@\n+2001-01-25  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config.gcc (rs6000-ibm-aix[5-9]*): Change to aix51.h.\n+\t* collect2.c (main): Delete importf.  Add \".obj\" file extension.\n+\t(GCC_CHECK_HDR): Handle AIX V5 new magic number.\n+\t(aix_std_libs): Add additional AIX libraries to skip.\n+\t* config/rs6000/aix.h (MY_ISCOFF): Add AIX V5 new magic number.\n+\t* config/rs6000/aix51.h: New file.\n+\n 2001-01-25  Michael Hayes  <mhayes@redhat.com>\n \n \t* loop.c (loop_call_insn_emit_before, loop_call_insn_hoist): New."}, {"sha": "1541f7cbf22dce5be9262d9fdc3af1ddab3e5719", "filename": "gcc/collect2.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "patch": "@@ -1,7 +1,7 @@\n /* Collect static initialization info into data structures that can be\n    traversed by C++ initialization and finalization routines.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Chris Smith (csmith@convex.com).\n    Heavily modified by Michael Meissner (meissner@cygnus.com),\n    Per Bothner (bothner@cygnus.com), and John Gilmore (gnu@cygnus.com).\n@@ -850,7 +850,6 @@ main (argc, argv)\n   FILE *outf;\n #ifdef COLLECT_EXPORT_LIST\n   FILE *exportf;\n-  FILE *importf;\n #endif\n   const char *ld_file_name;\n   const char *p;\n@@ -1219,7 +1218,8 @@ main (argc, argv)\n \t}\n       else if ((p = strrchr (arg, '.')) != (char *) 0\n \t       && (strcmp (p, \".o\") == 0 || strcmp (p, \".a\") == 0\n-\t\t   || strcmp (p, \".so\") == 0 || strcmp (p, \".lo\") == 0))\n+\t\t   || strcmp (p, \".so\") == 0 || strcmp (p, \".lo\") == 0\n+\t\t   || strcmp (p, \".obj\") == 0))\n \t{\n \t  if (first_file)\n \t    {\n@@ -2664,13 +2664,16 @@ scan_libraries (prog_name)\n #ifdef OBJECT_FORMAT_COFF\n \n #if defined(EXTENDED_COFF)\n+\n #   define GCC_SYMBOLS(X)\t(SYMHEADER(X).isymMax + SYMHEADER(X).iextMax)\n #   define GCC_SYMENT\t\tSYMR\n #   define GCC_OK_SYMBOL(X)\t((X).st == stProc || (X).st == stGlobal)\n #   define GCC_SYMINC(X)\t(1)\n #   define GCC_SYMZERO(X)\t(SYMHEADER(X).isymMax)\n #   define GCC_CHECK_HDR(X)\t(PSYMTAB(X) != 0)\n+\n #else\n+\n #   define GCC_SYMBOLS(X)\t(HEADER(ldptr).f_nsyms)\n #   define GCC_SYMENT\t\tSYMENT\n #   define GCC_OK_SYMBOL(X) \\\n@@ -2683,11 +2686,20 @@ scan_libraries (prog_name)\n      (((X).n_sclass == C_EXT) && ((X).n_scnum == N_UNDEF))\n #   define GCC_SYMINC(X)\t((X).n_numaux+1)\n #   define GCC_SYMZERO(X)\t0\n+\n+/* 0757 = U803XTOCMAGIC (AIX 4.3) and 0767 = U64_TOCMAGIC (AIX V5) */\n+#ifdef _AIX51\n+#   define GCC_CHECK_HDR(X) \\\n+     ((HEADER (X).f_magic == U802TOCMAGIC && ! aix64_flag) \\\n+      || (HEADER (X).f_magic == 0767 && aix64_flag))\n+#else\n #   define GCC_CHECK_HDR(X) \\\n      ((HEADER (X).f_magic == U802TOCMAGIC && ! aix64_flag) \\\n       || (HEADER (X).f_magic == 0757 && aix64_flag))\n #endif\n \n+#endif\n+\n extern char *ldgetname ();\n \n /* COFF version to scan the name list of the loaded program for\n@@ -2913,12 +2925,18 @@ if (debug) fprintf (stderr, \"found: %s\\n\", lib_buf);\n static const char *aix_std_libs[] = {\n   \"/unix\",\n   \"/lib/libc.a\",\n+  \"/lib/libm.a\",\n   \"/lib/libc_r.a\",\n+  \"/lib/libm_r.a\",\n   \"/usr/lib/libc.a\",\n+  \"/usr/lib/libm.a\",\n   \"/usr/lib/libc_r.a\",\n+  \"/usr/lib/libm_r.a\",\n   \"/usr/lib/threads/libc.a\",\n   \"/usr/ccs/lib/libc.a\",\n+  \"/usr/ccs/lib/libm.a\",\n   \"/usr/ccs/lib/libc_r.a\",\n+  \"/usr/ccs/lib/libm_r.a\",\n   NULL\n };\n "}, {"sha": "a72e3bf2df98a025ab19245ae760ebcf7a8931e2", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "patch": "@@ -2889,7 +2889,7 @@ rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)\n \tthread_file='aix'\n \t;;\n rs6000-ibm-aix[56789].* | powerpc-ibm-aix[56789].*)\n-\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix43.h\"\n+\ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix51.h\"\n \ttmake_file=rs6000/t-aix43\n \txmake_file=rs6000/x-aix41\n \tfloat_format=none"}, {"sha": "ae11b7187dc4c01a42066835005c32503c016cad", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX.\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -32,15 +32,16 @@ Boston, MA 02111-1307, USA.  */\n \n /* Define the magic numbers that we recognize as COFF.\n  \n-    AIX 4.3 adds U803XTOCMAGIC (0757) for 64-bit objects, but collect2.c\n-    does not include files in the correct order to conditionally define\n-    the symbolic name in this macro.\n+    AIX 4.3 adds U803XTOCMAGIC (0757) for 64-bit objects and AIX V5 adds\n+    U64_TOCMAGIC (0767), but collect2.c does not include files in the\n+    correct order to conditionally define the symbolic name in this macro.\n  \n     The AIX linker accepts import/export files as object files,\n     so accept \"#!\" (0x2321) magic number.  */\n #define MY_ISCOFF(magic) \\\n   ((magic) == U802WRMAGIC || (magic) == U802ROMAGIC \\\n-   || (magic) == U802TOCMAGIC || (magic) == 0757 || (magic) == 0x2321)\n+   || (magic) == U802TOCMAGIC || (magic) == 0757 || (magic) == 0767 \\\n+   || (magic) == 0x2321)\n \n /* This is the only version of nm that collect2 can work with.  */\n #define REAL_NM_FILE_NAME \"/usr/ucb/nm\""}, {"sha": "ce6ad1aedaba9f57530abafa16912b8eab4ea3bc", "filename": "gcc/config/rs6000/aix51.h", "status": "added", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2Fconfig%2Frs6000%2Faix51.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dba9ee7c8fb0cb0135c6120a21738503a3fe27/gcc%2Fconfig%2Frs6000%2Faix51.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix51.h?ref=05dba9ee7c8fb0cb0135c6120a21738503a3fe27", "patch": "@@ -0,0 +1,218 @@\n+/* Definitions of target machine for GNU compiler,\n+   for IBM RS/6000 POWER running AIX V5.\n+   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Contributed by David Edelsohn (edelsohn@gnu.org).\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+\n+#include \"rs6000/rs6000.h\"\n+#include \"rs6000/aix.h\"\n+\n+/* AIX V5 and above support 64-bit executables.  */\n+#undef  SUBSUBTARGET_SWITCHES\n+#define SUBSUBTARGET_SWITCHES\t\t\t\t\t\\\n+  {\"aix64\", \t\tMASK_64BIT | MASK_POWERPC64 | MASK_POWERPC,\t\\\n+   N_(\"Compile for 64-bit pointers\") },\t\t\t\t\t\\\n+  {\"aix32\",\t\t- (MASK_64BIT | MASK_POWERPC64),\t\t\\\n+   N_(\"Compile for 32-bit pointers\") },\t\t\t\t\t\\\n+  {\"pe\",\t\t0,\t\t\t\t\t\t\\\n+   N_(\"Support message passing with the Parallel Environment\") },\n+\n+/* Sometimes certain combinations of command options do not make sense\n+   on a particular target machine.  You can define a macro\n+   `OVERRIDE_OPTIONS' to take account of this.  This macro, if\n+   defined, is executed once just after all the command options have\n+   been parsed.\n+\n+   The macro SUBTARGET_OVERRIDE_OPTIONS is provided for subtargets, to\n+   get control.  */\n+\n+#define NON_POWERPC_MASKS (MASK_POWER | MASK_POWER2 | MASK_STRING)\n+#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_64BIT && (target_flags & NON_POWERPC_MASKS))\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      target_flags &= ~NON_POWERPC_MASKS;\t\t\t\t\\\n+      warning (\"-maix64 and POWER architecture are incompatible.\");\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_64BIT && ! TARGET_POWERPC64)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      target_flags |= MASK_POWERPC64;\t\t\t\t\t\\\n+      warning (\"-maix64 requires PowerPC64 architecture remain enabled.\"); \\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_POWERPC64 && ! TARGET_64BIT)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      error (\"-maix64 required: 64-bit computation with 32-bit addressing not yet supported.\"); \\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0);\n+\n+#undef ASM_SPEC\n+#define ASM_SPEC \"-u %{maix64:-a64 -mppc64} %(asm_cpu)\"\n+\n+/* Common ASM definitions used by ASM_SPEC amonst the various targets\n+   for handling -mcpu=xxx switches.  */\n+#undef ASM_CPU_SPEC\n+#define ASM_CPU_SPEC \\\n+\"%{!mcpu*: %{!maix64: \\\n+  %{mpower: %{!mpower2: -mpwr}} \\\n+  %{mpower2: -mpwr2} \\\n+  %{mpowerpc*: %{!mpowerpc64: -mppc}} \\\n+  %{mpowerpc64: -mppc64} \\\n+  %{!mpower*: %{!mpowerpc*: %(asm_default)}}}} \\\n+%{mcpu=common: -mcom} \\\n+%{mcpu=power: -mpwr} \\\n+%{mcpu=power2: -mpwr2} \\\n+%{mcpu=powerpc: -mppc} \\\n+%{mcpu=rios: -mpwr} \\\n+%{mcpu=rios1: -mpwr} \\\n+%{mcpu=rios2: -mpwr2} \\\n+%{mcpu=rsc: -mpwr} \\\n+%{mcpu=rsc1: -mpwr} \\\n+%{mcpu=rs64a: -mppc} \\\n+%{mcpu=403: -mppc} \\\n+%{mcpu=505: -mppc} \\\n+%{mcpu=601: -m601} \\\n+%{mcpu=602: -mppc} \\\n+%{mcpu=603: -m603} \\\n+%{mcpu=603e: -m603} \\\n+%{mcpu=604: -m604} \\\n+%{mcpu=604e: -m604} \\\n+%{mcpu=620: -mppc} \\\n+%{mcpu=630: -mppc} \\\n+%{mcpu=821: -mppc} \\\n+%{mcpu=860: -mppc}\"\n+\n+#undef\tASM_DEFAULT_SPEC\n+#define ASM_DEFAULT_SPEC \"-mcom\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_LONG_LONG \\\n+-D_AIX -D_AIX32 -D_AIX41 -D_AIX43 -D_AIX51 -Asystem=unix -Asystem=aix\"\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} \\\n+  %{ansi: -D_ANSI_C_SOURCE} \\\n+  %{!maix64: -D__WCHAR_TYPE=\"short unsigned int\"} \\\n+  %{maix64: -D__64BIT__ -D_ARCH_PPC -D__WCHAR_TYPE=\"unsigned int\" \\\n+    -D__LONG_MAX__=9223372036854775807L} \\\n+  %{mpe: -I/usr/lpp/ppe.poe/include} \\\n+  %{pthread: -D_THREAD_SAFE} \\\n+  %(cpp_cpu)\"\n+\n+/* Common CPP definitions used by CPP_SPEC among the various targets\n+   for handling -mcpu=xxx switches.  */\n+#undef CPP_CPU_SPEC\n+#define CPP_CPU_SPEC \\\n+\"%{!mcpu*: %{!maix64: \\\n+  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n+  %{mpower2: -D_ARCH_PWR2} \\\n+  %{mpowerpc*: -D_ARCH_PPC} \\\n+  %{!mpower*: %{!mpowerpc*: %(cpp_default)}}}} \\\n+%{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=power2: -D_ARCH_PWR2} \\\n+%{mcpu=powerpc: -D_ARCH_PPC} \\\n+%{mcpu=rios: -D_ARCH_PWR} \\\n+%{mcpu=rios1: -D_ARCH_PWR} \\\n+%{mcpu=rios2: -D_ARCH_PWR2} \\\n+%{mcpu=rsc: -D_ARCH_PWR} \\\n+%{mcpu=rsc1: -D_ARCH_PWR} \\\n+%{mcpu=rs64a: -D_ARCH_PPC} \\\n+%{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=505: -D_ARCH_PPC} \\\n+%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n+%{mcpu=602: -D_ARCH_PPC} \\\n+%{mcpu=603: -D_ARCH_PPC} \\\n+%{mcpu=603e: -D_ARCH_PPC} \\\n+%{mcpu=604: -D_ARCH_PPC} \\\n+%{mcpu=620: -D_ARCH_PPC} \\\n+%{mcpu=630: -D_ARCH_PPC} \\\n+%{mcpu=821: -D_ARCH_PPC} \\\n+%{mcpu=860: -D_ARCH_PPC}\"\n+\n+#undef\tCPP_DEFAULT_SPEC\n+#define CPP_DEFAULT_SPEC \"-D_ARCH_COM\"\n+\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT MASK_NEW_MNEMONICS\n+\n+#undef PROCESSOR_DEFAULT\n+#define PROCESSOR_DEFAULT PROCESSOR_PPC604\n+\n+/* Define this macro as a C expression for the initializer of an\n+   array of string to tell the driver program which options are\n+   defaults for this target and thus do not need to be handled\n+   specially when using `MULTILIB_OPTIONS'.\n+\n+   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n+   the target makefile fragment or if none of the options listed in\n+   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n+\n+#undef\tMULTILIB_DEFAULTS\n+#define\tMULTILIB_DEFAULTS { \"mcpu=common\" }\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \"%{pg:-L/lib/profiled -L/usr/lib/profiled}\\\n+   %{p:-L/lib/profiled -L/usr/lib/profiled}\\\n+   %{!maix64:%{!shared:%{g*:-lg}}}\\\n+   %{mpe:-L/usr/lpp/ppe.poe/lib -lmpi -lvtd}\\\n+   %{pthread:-lpthreads} -lc\"\n+\n+#undef LINK_SPEC\n+#define LINK_SPEC \"-bpT:0x10000000 -bpD:0x20000000 %{!r:-btextro} -bnodelcsect\\\n+   %{static:-bnso %(link_syscalls) } %{shared:-bM:SRE %{!e:-bnoentry}}\\\n+   %{!maix64:%{!shared:%{g*: %(link_libg) }}} %{maix64:-b64}\"\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"%{!shared:\\\n+   %{mpe:%{pg:/usr/lpp/ppe.poe/lib/gcrt0.o}\\\n+         %{!pg:%{p:/usr/lpp/ppe.poe/lib/mcrt0.o}\\\n+               %{!p:/usr/lpp/ppe.poe/lib/crt0.o}}}\\\n+   %{!mpe:\\\n+     %{maix64:%{pg:gcrt0_64%O%s}%{!pg:%{p:mcrt0_64%O%s}%{!p:crt0_64%O%s}}}\\\n+     %{!maix64:\\\n+       %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n+       %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n+\n+/* AIX V5 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n+\n+#undef PTRDIFF_TYPE\n+#define PTRDIFF_TYPE \"long int\"\n+\n+/* __WCHAR_TYPE__ is dynamic, so do not define it statically.  */\n+#define NO_BUILTIN_WCHAR_TYPE\n+#undef WCHAR_TYPE\n+\n+/* Width of wchar_t in bits.  */\n+#define WCHAR_TYPE_SIZE (!TARGET_64BIT ? 16 : 32)\n+#define MAX_WCHAR_TYPE_SIZE 32\n+\n+/* AIX V5 uses PowerPC nop (ori 0,0,0) instruction as call glue for PowerPC\n+   and \"cror 31,31,31\" for POWER architecture.  */\n+\n+#undef RS6000_CALL_GLUE\n+#define RS6000_CALL_GLUE \"{cror 31,31,31|nop}\"\n+\n+/* AIX 4.2 and above provides initialization and finalization function\n+   support from linker command line.  */\n+#undef HAS_INIT_SECTION\n+#define HAS_INIT_SECTION\n+\n+#undef LD_INIT_SWITCH\n+#define LD_INIT_SWITCH \"-binitfini\""}]}