{"sha": "84c2b4da3896367ec58a62a9decf7cb650047f79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRjMmI0ZGEzODk2MzY3ZWM1OGE2MmE5ZGVjZjdjYjY1MDA0N2Y3OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-10-04T14:07:25Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-10-04T14:07:25Z"}, "message": "i386.h (TARGET_FISTTP): Enable also for TARGET_SSE3 and only for TARGET_80387.\n\n        * config/i386/i386.h (TARGET_FISTTP): Enable also for\n        TARGET_SSE3 and only for TARGET_80387.\n        * config/i386/i386.md (fix_trunc<mode>_fisttp_i387_1,\n        (fix_trunc<mode>_i387_fisttp, fix_trunc<mode>_i387_fisttp_with_temp):\n        Do not depend on TARGET_80387.\n\nFrom-SVN: r104947", "tree": {"sha": "0f68c82be45848d411c396a4911b88d6801b529e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f68c82be45848d411c396a4911b88d6801b529e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84c2b4da3896367ec58a62a9decf7cb650047f79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c2b4da3896367ec58a62a9decf7cb650047f79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c2b4da3896367ec58a62a9decf7cb650047f79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c2b4da3896367ec58a62a9decf7cb650047f79/comments", "author": null, "committer": null, "parents": [{"sha": "b4ceda1341afdca17c0892efe8a53da84ac792a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ceda1341afdca17c0892efe8a53da84ac792a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ceda1341afdca17c0892efe8a53da84ac792a8"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "16cacedcebe17215f4050fa860225e6ded8a9885", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c2b4da3896367ec58a62a9decf7cb650047f79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c2b4da3896367ec58a62a9decf7cb650047f79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84c2b4da3896367ec58a62a9decf7cb650047f79", "patch": "@@ -1,3 +1,11 @@\n+2005-10-04  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* config/i386/i386.h (TARGET_FISTTP): Enable also for\n+\tTARGET_SSE3 and only for TARGET_80387.\n+\t* config/i386/i386.md (fix_trunc<mode>_fisttp_i387_1,\n+\t(fix_trunc<mode>_i387_fisttp, fix_trunc<mode>_i387_fisttp_with_temp):\n+\tDo not depend on TARGET_80387.\n+\n 2005-10-04  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* tree.c (last_annotated_node): Change type to location_t*."}, {"sha": "a00e0e043abc414bed74898f03dad22ea7ec88b0", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c2b4da3896367ec58a62a9decf7cb650047f79/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c2b4da3896367ec58a62a9decf7cb650047f79/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=84c2b4da3896367ec58a62a9decf7cb650047f79", "patch": "@@ -173,7 +173,8 @@ extern int x86_prefetch_sse;\n /* For sane SSE instruction set generation we need fcomi instruction.  It is\n    safe to enable all CMOVE instructions.  */\n #define TARGET_CMOVE ((x86_cmove & (1 << ix86_arch)) || TARGET_SSE)\n-#define TARGET_FISTTP (x86_fisttp & (1 << ix86_arch))\n+#define TARGET_FISTTP (((x86_fisttp & (1 << ix86_arch)) || TARGET_SSE3) \\\n+\t\t\t&& TARGET_80387)\n #define TARGET_DEEP_BRANCH_PREDICTION (x86_deep_branch & TUNEMASK)\n #define TARGET_BRANCH_PREDICTION_HINTS (x86_branch_hints & TUNEMASK)\n #define TARGET_DOUBLE_WITH_ADD (x86_double_with_add & TUNEMASK)"}, {"sha": "f8059adb7ea9a48e30cad1558f67e8b34d57c079", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c2b4da3896367ec58a62a9decf7cb650047f79/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c2b4da3896367ec58a62a9decf7cb650047f79/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=84c2b4da3896367ec58a62a9decf7cb650047f79", "patch": "@@ -4069,7 +4069,7 @@\n   [(parallel [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t           (fix:SI (match_operand:SSEMODEF 1 \"register_operand\" \"\")))\n \t      (clobber (reg:CC FLAGS_REG))])]\n-  \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode))\"\n+  \"TARGET_80387 || SSE_FLOAT_MODE_P (<MODE>mode)\"\n {\n   if (TARGET_FISTTP\n       && !(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH))\n@@ -4162,7 +4162,7 @@\n (define_insn_and_split \"fix_trunc<mode>_fisttp_i387_1\"\n   [(set (match_operand:X87MODEI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(fix:X87MODEI (match_operand 1 \"register_operand\" \"f,f\")))]\n-  \"TARGET_80387 && TARGET_FISTTP\n+  \"TARGET_FISTTP\n    && FLOAT_MODE_P (GET_MODE (operands[1]))\n    && !((SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\n \t && (TARGET_64BIT || <MODE>mode != DImode))\n@@ -4190,7 +4190,7 @@\n   [(set (match_operand:X87MODEI 0 \"memory_operand\" \"=m\")\n \t(fix:X87MODEI (match_operand 1 \"register_operand\" \"f\")))\n    (clobber (match_scratch:XF 2 \"=&1f\"))]\n-  \"TARGET_80387 && TARGET_FISTTP\n+  \"TARGET_FISTTP\n    && FLOAT_MODE_P (GET_MODE (operands[1]))\n    && !((SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\n \t && (TARGET_64BIT || <MODE>mode != DImode))\n@@ -4204,7 +4204,7 @@\n \t(fix:X87MODEI (match_operand 1 \"register_operand\" \"f,f\")))\n    (clobber (match_operand:X87MODEI 2 \"memory_operand\" \"=m,m\"))\n    (clobber (match_scratch:XF 3 \"=&1f,&1f\"))]\n-  \"TARGET_80387 && TARGET_FISTTP\n+  \"TARGET_FISTTP\n    && FLOAT_MODE_P (GET_MODE (operands[1]))\n    && !((SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\n \t&& (TARGET_64BIT || <MODE>mode != DImode))"}]}