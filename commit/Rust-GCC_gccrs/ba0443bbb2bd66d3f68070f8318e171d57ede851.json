{"sha": "ba0443bbb2bd66d3f68070f8318e171d57ede851", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEwNDQzYmJiMmJkNjZkM2Y2ODA3MGY4MzE4ZTE3MWQ1N2VkZTg1MQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-08-10T10:14:48Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-08-10T10:14:48Z"}, "message": "(Recognizer for zdepi_operand in HImode): New pattern.\n\n(Recognizer for zdepi_operand in SImode): Call output_zdepi for output.\n(shift patterns and recognizers): Handle 32 bit ints and truncate them for output.\n\nFrom-SVN: r1788", "tree": {"sha": "f7eed7a518edc37280ed2bd2b7a233d8cfd898b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7eed7a518edc37280ed2bd2b7a233d8cfd898b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba0443bbb2bd66d3f68070f8318e171d57ede851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba0443bbb2bd66d3f68070f8318e171d57ede851", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba0443bbb2bd66d3f68070f8318e171d57ede851", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba0443bbb2bd66d3f68070f8318e171d57ede851/comments", "author": null, "committer": null, "parents": [{"sha": "f093cb8f4b8da0e54f3fb71834040d41d8904220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f093cb8f4b8da0e54f3fb71834040d41d8904220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f093cb8f4b8da0e54f3fb71834040d41d8904220"}], "stats": {"total": 103, "additions": 36, "deletions": 67}, "files": [{"sha": "105ae2270595ca96c1e45ed03c2cff7f1bef3cc6", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 36, "deletions": 67, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba0443bbb2bd66d3f68070f8318e171d57ede851/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba0443bbb2bd66d3f68070f8318e171d57ede851/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=ba0443bbb2bd66d3f68070f8318e171d57ede851", "patch": "@@ -767,39 +767,18 @@\n   \"\"\n   \"*\n {\n-  unsigned long x = INTVAL (operands[1]);\n-  int i;\n-\n-  for (i = 0; i < 32; i++)\n-    {\n-      if ((x & 1) != 0)\n-        break;\n-      x >>= 1;\n-    }\n-\n-  if ((x & 0x10) == 0)\n-    {\n-      operands[1] = gen_rtx (CONST_INT, VOIDmode, x);\n-      operands[2] = gen_rtx (CONST_INT, VOIDmode, 31 - i);\n-      operands[3] = gen_rtx (CONST_INT, VOIDmode, 32 - i < 4 ? 32 - i : 4);\n-    }\n-  else\n-    {\n-      operands[1] = gen_rtx (CONST_INT, VOIDmode, (x & 0xf) - 0x10);\n-      operands[2] = gen_rtx (CONST_INT, VOIDmode, 31 - i);\n-\n-      x >>= 5;\n-      for (i = 0; i < 32; i++)\n-\t{\n-\t  if ((x & 1) == 0)\n-\t    break;\n-\t  x >>= 1;\n-\t}\n-\n-      operands[3] = gen_rtx (CONST_INT, VOIDmode, i + 5);\n-    }\n+  return output_zdepi (operands);\n+}\"\n+  [(set_attr \"type\" \"move\")\n+   (set_attr \"length\" \"1\")])\n \n-  return \\\"zdepi %1,%2,%3,%0\\\";\n+(define_insn \"\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+\t(match_operand:HI 1 \"zdepi_operand\" \"n\"))]\n+  \"\"\n+  \"*\n+{\n+  return output_zdepi (operands);\n }\"\n   [(set_attr \"type\" \"move\")\n    (set_attr \"length\" \"1\")])\n@@ -1896,7 +1875,7 @@\n (define_expand \"ashlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t   (match_operand:SI 2 \"arith5_operand\" \"\")))]\n+\t\t   (match_operand:SI 2 \"arith32_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -1921,18 +1900,15 @@\n (define_insn \"\"\n  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n        (ashift:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t  (match_operand:SI 2 \"int5_operand\" \"L\")))]\n+\t\t  (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n  \"\"\n  \"*\n {\n-  rtx xoperands[4];\n-  xoperands[0] = operands[0];  xoperands[1] = operands[1];\n-  xoperands[2] = gen_rtx (CONST_INT, VOIDmode,\n-\t\t\t  31 - INTVAL (operands[2]));\n-  xoperands[3] = gen_rtx (CONST_INT, VOIDmode,\n-\t\t\t  32 - INTVAL (operands[2]));\n-  output_asm_insn (\\\"zdep %1,%2,%3,%0\\\", xoperands);\n-  return \\\"\\\";\n+  operands[3] = gen_rtx (CONST_INT, VOIDmode,\n+                         32 - (INTVAL (operands[2]) & 31));\n+  operands[2] = gen_rtx (CONST_INT, VOIDmode,\n+                         31 - (INTVAL (operands[2]) & 31));\n+  return \\\"zdep %1,%2,%3,%0\\\";\n }\")\n \n (define_insn \"\"\n@@ -1946,7 +1922,7 @@\n (define_expand \"ashrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t     (match_operand:SI 2 \"arith5_operand\" \"\")))]\n+\t\t     (match_operand:SI 2 \"arith32_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -1971,33 +1947,29 @@\n (define_insn \"\"\n  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n        (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t    (match_operand:SI 2 \"int5_operand\" \"L\")))]\n+\t\t    (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n  \"\"\n  \"*\n {\n-  rtx xoperands[4];\n-  xoperands[0] = operands[0];  xoperands[1] = operands[1];\n-  xoperands[2] = gen_rtx (CONST_INT, VOIDmode,\n-\t\t\t  31 - INTVAL (operands[2]));\n-  xoperands[3] = gen_rtx (CONST_INT, VOIDmode,\n-\t\t\t  32 - INTVAL (operands[2]));\n-  output_asm_insn (\\\"extrs %1,%2,%3,%0\\\", xoperands);\n-  return \\\"\\\";\n+  operands[3] = gen_rtx (CONST_INT, VOIDmode,\n+                         32 - (INTVAL (operands[2]) & 31));\n+  operands[2] = gen_rtx (CONST_INT, VOIDmode,\n+                         31 - (INTVAL (operands[2]) & 31));\n+  return \\\"extrs %1,%2,%3,%0\\\";\n }\")\n \n-\n (define_insn \"\"\n  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n        (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t  (minus:SI (const_int 31)\n-\t\t\t    (reg:SI 112))))]\n+\t\t    (minus:SI (const_int 31)\n+\t\t\t      (reg:SI 112))))]\n  \"\"\n  \"vextrs %1,32,%0\")\n \n (define_expand \"lshrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t     (match_operand:SI 2 \"arith5_operand\" \"\")))]\n+\t\t     (match_operand:SI 2 \"arith32_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -2022,25 +1994,22 @@\n (define_insn \"\"\n  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n        (lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t    (match_operand:SI 2 \"uint5_operand\" \"K\")))]\n+\t\t    (match_operand:SI 2 \"const_int_operand\" \"n\")))]\n  \"\"\n  \"*\n {\n-  rtx xoperands[4];\n-  xoperands[0] = operands[0];  xoperands[1] = operands[1];\n-  xoperands[2] = gen_rtx (CONST_INT, VOIDmode,\n-\t\t\t  31 - INTVAL (operands[2]));\n-  xoperands[3] = gen_rtx (CONST_INT, VOIDmode,\n-\t\t\t  32 - INTVAL (operands[2]));\n-  output_asm_insn (\\\"extru %1,%2,%3,%0\\\", xoperands);\n-  return \\\"\\\";\n+  operands[3] = gen_rtx (CONST_INT, VOIDmode,\n+\t\t\t 32 - (INTVAL (operands[2]) & 31));\n+  operands[2] = gen_rtx (CONST_INT, VOIDmode,\n+\t\t\t 31 - (INTVAL (operands[2]) & 31));\n+  return \\\"extru %1,%2,%3,%0\\\";\n }\")\n \n (define_insn \"\"\n  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n        (lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t  (minus:SI (const_int 31)\n-\t\t\t    (reg:SI 112))))]\n+\t\t    (minus:SI (const_int 31)\n+\t\t\t      (reg:SI 112))))]\n  \"\"\n  \"vextru %1,32,%0\")\n \f"}]}