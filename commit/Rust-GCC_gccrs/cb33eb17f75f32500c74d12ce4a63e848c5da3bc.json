{"sha": "cb33eb17f75f32500c74d12ce4a63e848c5da3bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IzM2ViMTdmNzVmMzI1MDBjNzRkMTJjZTRhNjNlODQ4YzVkYTNiYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-10-26T17:06:27Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-10-26T17:06:27Z"}, "message": "h8300.c (get_shift_alg): Clean up.\n\n\t* config/h8300/h8300.c (get_shift_alg): Clean up.  Return the\n\talgorithm through the shift_info structure.\n\t(emit_a_shift): Update the use of get_shift_alg.\n\nFrom-SVN: r46553", "tree": {"sha": "fdbee4049af6b4a4e52f2535207bf3a42e3a53a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdbee4049af6b4a4e52f2535207bf3a42e3a53a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb33eb17f75f32500c74d12ce4a63e848c5da3bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb33eb17f75f32500c74d12ce4a63e848c5da3bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb33eb17f75f32500c74d12ce4a63e848c5da3bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb33eb17f75f32500c74d12ce4a63e848c5da3bc/comments", "author": null, "committer": null, "parents": [{"sha": "c0b1738da2f6682ed11ed77389e8ee9b3acd2448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b1738da2f6682ed11ed77389e8ee9b3acd2448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b1738da2f6682ed11ed77389e8ee9b3acd2448"}], "stats": {"total": 250, "additions": 108, "deletions": 142}, "files": [{"sha": "80981744931e4acc5c45f8b3cd63e2e54d3eebec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb33eb17f75f32500c74d12ce4a63e848c5da3bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb33eb17f75f32500c74d12ce4a63e848c5da3bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb33eb17f75f32500c74d12ce4a63e848c5da3bc", "patch": "@@ -1,3 +1,9 @@\n+2001-10-26  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (get_shift_alg): Clean up.  Return the\n+\talgorithm through the shift_info structure.\n+\t(emit_a_shift): Update the use of get_shift_alg.\n+\n 2001-10-27  Daniel Berlin  <dan@cgsoftware.com>\n \n         * sched-rgn.c: Remove bitset typedef."}, {"sha": "f0a8258fc30b6dca853f124106400666ac1b2fa3", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 102, "deletions": 142, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb33eb17f75f32500c74d12ce4a63e848c5da3bc/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb33eb17f75f32500c74d12ce4a63e848c5da3bc/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=cb33eb17f75f32500c74d12ce4a63e848c5da3bc", "patch": "@@ -2178,9 +2178,9 @@ struct shift_info {\n   int cc_valid_p;\n };\n \n-static enum shift_alg get_shift_alg PARAMS ((enum shift_type,\n-\t\t\t\t\t     enum shift_mode, int,\n-\t\t\t\t\t     struct shift_info *));\n+static void get_shift_alg PARAMS ((enum shift_type,\n+\t\t\t\t   enum shift_mode, int,\n+\t\t\t\t   struct shift_info *));\n \n /* Given SHIFT_TYPE, SHIFT_MODE, and shift count COUNT, determine the\n    best algorithm for doing the shift.  The assembler code is stored\n@@ -2195,20 +2195,20 @@ static enum shift_alg get_shift_alg PARAMS ((enum shift_type,\n    WARNING: The constraints on insns shiftbyn_QI/HI/SI assume shifts of\n    1,2,3,4 will be inlined (1,2 for SI).  */\n \n-static enum shift_alg\n+static void\n get_shift_alg (shift_type, shift_mode, count, info)\n      enum shift_type shift_type;\n      enum shift_mode shift_mode;\n      int count;\n      struct shift_info *info;\n {\n+  /* In case we end up with SHIFT_SPECIAL, initialize REMAINDER to 0.  */\n+  info->remainder = 0;\n+\n   /* Assume either SHIFT_LOOP or SHIFT_INLINE.\n      It is up to the caller to know that looping clobbers cc.  */\n   info->shift1 = shift_one[cpu_type][shift_type][shift_mode].assembler;\n-  if (TARGET_H8300S)\n-    info->shift2 = shift_two[shift_type][shift_mode].assembler;\n-  else\n-    info->shift2 = NULL;\n+  info->shift2 = shift_two[shift_type][shift_mode].assembler;\n   info->cc_valid_p = shift_one[cpu_type][shift_type][shift_mode].cc_valid;\n \n   /* Now look for cases we want to optimize.  */\n@@ -2217,75 +2217,67 @@ get_shift_alg (shift_type, shift_mode, count, info)\n     {\n     case QIshift:\n       if (count <= 4)\n-\treturn SHIFT_INLINE;\n+\tgoto return_shift_inline;\n       else\n \t{\n \t  /* Shift by 5/6 are only 3 insns on the H8/S, so it's just as\n \t     fast as SHIFT_ROT_AND, plus CC is valid.  */\n \t  if (TARGET_H8300S && count <= 6)\n-\t    return SHIFT_INLINE;\n+\t    goto return_shift_inline;\n \n \t  /* For ASHIFTRT by 7 bits, the sign bit is simply replicated\n \t     through the entire value.  */\n \t  if (shift_type == SHIFT_ASHIFTRT && count == 7)\n \t    {\n \t      info->special = \"shll\\t%X0\\n\\tsubx\\t%X0,%X0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \n \t  /* Other ASHIFTRTs are too much of a pain.  */\n \t  if (shift_type == SHIFT_ASHIFTRT)\n-\t    return SHIFT_LOOP;\n+\t    goto return_shift_loop;\n \n \t  /* Other shifts by 5, 6, or 7 bits use SHIFT_ROT_AND.  */\n \t  info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n-\t  if (TARGET_H8300S)\n-\t    info->shift2 = rotate_two[shift_type][shift_mode];\n-\t  info->cc_valid_p = 0;\n-\t  return SHIFT_ROT_AND;\n+\t  info->shift2 = rotate_two[shift_type][shift_mode];\n+\t  goto return_shift_rot_and;\n \t}\n \n     case HIshift:\n       if (count <= 4)\n-\treturn SHIFT_INLINE;\n+\tgoto return_shift_inline;\n       else if (TARGET_H8300S && count <= 7)\n-\treturn SHIFT_INLINE;\n+\tgoto return_shift_inline;\n       else if (count == 7)\n \t{\n \t  if (shift_type == SHIFT_ASHIFT && TARGET_H8300)\n \t    {\n \t      info->special = \"shar.b\\t%t0\\n\\tmov.b\\t%s0,%t0\\n\\trotxr.b\\t%t0\\n\\trotr.b\\t%s0\\n\\tand.b\\t#0x80,%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \n \t  if (shift_type == SHIFT_ASHIFT && TARGET_H8300H)\n \t    {\n \t      info->special = \"shar.b\\t%t0\\n\\tmov.b\\t%s0,%t0\\n\\trotxr.w\\t%T0\\n\\tand.b\\t#0x80,%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \n \t  if (shift_type == SHIFT_LSHIFTRT && TARGET_H8300)\n \t    {\n \t      info->special = \"shal.b\\t%s0\\n\\tmov.b\\t%t0,%s0\\n\\trotxl.b\\t%s0\\n\\trotl.b\\t%t0\\n\\tand.b\\t#0x01,%t0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \n \t  if (shift_type == SHIFT_LSHIFTRT && TARGET_H8300H)\n \t    {\n \t      info->special = \"shal.b\\t%s0\\n\\tmov.b\\t%t0,%s0\\n\\trotxl.w\\t%T0\\n\\tand.b\\t#0x01,%t0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \n \t  if (shift_type == SHIFT_ASHIFTRT)\n \t    {\n \t      info->special = \"shal.b\\t%s0\\n\\tmov.b\\t%t0,%s0\\n\\trotxl.b\\t%s0\\n\\tsubx\\t%t0,%t0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 8)\n@@ -2294,19 +2286,16 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tshll\\t%t0\\n\\tsubx\\t%t0,%t0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 9)\n@@ -2315,19 +2304,16 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tshal.b\\t%t0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\\n\\tshlr.b\\t%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tbld\\t#7,%s0\\n\\tsubx\\t%t0,%t0\\n\\tshar.b\\t%s0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\\n\\tshar.b\\t%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 10)\n@@ -2339,24 +2325,21 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\tinfo->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tshal.b\\t#2,%t0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tshal.b\\t%t0\\n\\tshal.b\\t%t0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      if (TARGET_H8300S)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\\n\\tshlr.b\\t#2,%s0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\\n\\tshlr.b\\t%s0\\n\\tshlr.b\\t%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tbld\\t#7,%s0\\n\\tsubx\\t%t0,%t0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\";\n \t      else if (TARGET_H8300H)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\";\n \t      else if (TARGET_H8300S)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\\n\\tshar.b\\t#2,%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 11)\n@@ -2368,24 +2351,21 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\tinfo->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tshal.b\\t#2,%t0\\n\\tshal.b\\t%t0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tshal.b\\t%t0\\n\\tshal.b\\t%t0\\n\\tshal.b\\t%t0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      if (TARGET_H8300S)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\\n\\tshlr.b\\t#2,%s0\\n\\tshlr.b\\t%s0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\\n\\tshlr.b\\t%s0\\n\\tshlr.b\\t%s0\\n\\tshlr.b\\t%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tbld\\t#7,%s0\\n\\tsubx\\t%t0,%t0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\";\n \t      else if (TARGET_H8300H)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\";\n \t      else if (TARGET_H8300S)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\\n\\tshar.b\\t#2,%s0\\n\\tshar.b\\t%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 12)\n@@ -2397,24 +2377,21 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\tinfo->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tshal.b\\t#2,%t0\\n\\tshal.b\\t#2,%t0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tshal.b\\t%t0\\n\\tshal.b\\t%t0\\n\\tshal.b\\t%t0\\n\\tshal.b\\t%t0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      if (TARGET_H8300S)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\\n\\tshlr.b\\t#2,%s0\\n\\tshlr.b\\t#2,%s0\";\n \t      else\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tsub.b\\t%t0,%t0\\n\\tshlr.b\\t%s0\\n\\tshlr.b\\t%s0\\n\\tshlr.b\\t%s0\\n\\tshlr.b\\t%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\tbld\\t#7,%s0\\n\\tsubx\\t%t0,%t0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\";\n \t      else if (TARGET_H8300H)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\\n\\tshar.b\\t%s0\";\n \t      else if (TARGET_H8300S)\n \t\tinfo->special = \"mov.b\\t%t0,%s0\\n\\texts.w\\t%T0\\n\\tshar.b\\t#2,%s0\\n\\tshar.b\\t#2,%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if ((!TARGET_H8300 && (count == 13 || count == 14))\n@@ -2423,43 +2400,35 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t  if (count == 15 && shift_type == SHIFT_ASHIFTRT)\n \t    {\n \t      info->special = \"shll\\t%t0\\n\\tsubx\\t%t0,%t0\\n\\tmov.b\\t%t0,%s0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t  else if (shift_type != SHIFT_ASHIFTRT)\n \t    {\n \t      info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n-\t      if (TARGET_H8300S)\n-\t        info->shift2 = rotate_two[shift_type][shift_mode];\n-\t      else\n-\t\tinfo->shift2 = NULL;\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_ROT_AND;\n+\t      info->shift2 = rotate_two[shift_type][shift_mode];\n+\t      goto return_shift_rot_and;\n \t    }\n \t}\n       break;\n \n     case SIshift:\n       if (count <= (TARGET_H8300 ? 2 : 4))\n-\treturn SHIFT_INLINE;\n+\tgoto return_shift_inline;\n       else if (TARGET_H8300S && count <= 10)\n-\treturn SHIFT_INLINE;\n+\tgoto return_shift_inline;\n       else if (count == 8 && TARGET_H8300)\n \t{\n \t  switch (shift_type)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.b\\t%y0,%z0\\n\\tmov.b\\t%x0,%y0\\n\\tmov.b\\t%w0,%x0\\n\\tsub.b\\t%w0,%w0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.b\\t%x0,%w0\\n\\tmov.b\\t%y0,%x0\\n\\tmov.b\\t%z0,%y0\\n\\tsub.b\\t%z0,%z0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.b\\t%x0,%w0\\n\\tmov.b\\t%y0,%x0\\n\\tmov.b\\t%z0,%y0\\n\\tshll\\t%z0\\n\\tsubx\\t%z0,%z0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 8 && !TARGET_H8300)\n@@ -2468,16 +2437,13 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%s4,%t4\\n\\tmov.b\\t%t0,%s4\\n\\tmov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tmov.w\\t%f4,%e0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%t0,%s0\\n\\tmov.b\\t%s4,%t0\\n\\tmov.b\\t%t4,%s4\\n\\textu.w\\t%f4\\n\\tmov.w\\t%f4,%e0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f4\\n\\tmov.b\\t%t0,%s0\\n\\tmov.b\\t%s4,%t0\\n\\tmov.b\\t%t4,%s4\\n\\texts.w\\t%f4\\n\\tmov.w\\t%f4,%e0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 16)\n@@ -2486,19 +2452,16 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\tshll\\t%z0\\n\\tsubx\\t%z0,%z0\\n\\tmov.b\\t%z0,%y0\";\n \t      else\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 17 && !TARGET_H8300)\n@@ -2507,16 +2470,13 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\\n\\tshll.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\\n\\tshlr.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\\n\\tshar.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 18 && !TARGET_H8300)\n@@ -2528,22 +2488,19 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\tinfo->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\\n\\tshll.l\\t#2,%S0\";\n \t      else\n \t\tinfo->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\\n\\tshll.l\\t%S0\\n\\tshll.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      if (TARGET_H8300S)\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\\n\\tshlr.l\\t#2,%S0\";\n \t      else\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\\n\\tshlr.l\\t%S0\\n\\tshlr.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300S)\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\\n\\tshar.l\\t#2,%S0\";\n \t      else\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\\n\\tshar.l\\t%S0\\n\\tshar.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 19 && !TARGET_H8300)\n@@ -2555,22 +2512,19 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\tinfo->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\\n\\tshll.l\\t#2,%S0\\n\\tshll.l\\t%S0\";\n \t      else\n \t\tinfo->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\\n\\tshll.l\\t%S0\\n\\tshll.l\\t%S0\\n\\tshll.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      if (TARGET_H8300S)\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\\n\\tshlr.l\\t#2,%S0\\n\\tshlr.l\\t%S0\";\n \t      else\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\\n\\tshlr.l\\t%S0\\n\\tshlr.l\\t%S0\\n\\tshlr.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300S)\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\\n\\tshar.l\\t#2,%S0\\n\\tshar.l\\t%S0\";\n \t      else\n \t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\\n\\tshar.l\\t%S0\\n\\tshar.l\\t%S0\\n\\tshar.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 20 && TARGET_H8300S)\n@@ -2579,16 +2533,13 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\\n\\tshll.l\\t#2,%S0\\n\\tshll.l\\t#2,%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\\n\\tshlr.l\\t#2,%S0\\n\\tshlr.l\\t#2,%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\\n\\tshar.l\\t#2,%S0\\n\\tshar.l\\t#2,%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count == 24 && !TARGET_H8300)\n@@ -2597,33 +2548,26 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tmov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tmov.b\\t%t0,%s0\\n\\textu.w\\t%f0\\n\\textu.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tmov.b\\t%t0,%s0\\n\\texts.w\\t%f0\\n\\texts.l\\t%S0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t}\n       else if (count >= 28 && count <= 30 && !TARGET_H8300)\n \t{\n \t  if (shift_type == SHIFT_ASHIFTRT)\n \t    {\n-\t      return SHIFT_LOOP;\n+\t      goto return_shift_loop;\n \t    }\n \t  else\n \t    {\n \t      info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n-\t      if (TARGET_H8300S)\n-\t\tinfo->shift2 = rotate_two[shift_type][shift_mode];\n-\t      else\n-\t\tinfo->shift2 = NULL;\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_ROT_AND;\n+\t      info->shift2 = rotate_two[shift_type][shift_mode];\n+\t      goto return_shift_rot_and;\n \t    }\n \t}\n       else if (count == 31)\n@@ -2634,8 +2578,7 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\tinfo->special = \"shll\\t%z0\\n\\tsubx\\t%w0,%w0\\n\\tmov.b\\t%w0,%x0\\n\\tmov.w\\t%f0,%e0\";\n \t      else\n \t\tinfo->special = \"shll\\t%e0\\n\\tsubx\\t%w0,%w0\\n\\tmov.b\\t%w0,%x0\\n\\tmov.w\\t%f0,%e0\";\n-\t      info->cc_valid_p = 0;\n-\t      return SHIFT_SPECIAL;\n+\t      goto return_shift_special;\n \t    }\n \t  else\n \t    {\n@@ -2645,18 +2588,13 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\t    info->special = \"sub.w\\t%e0,%e0\\n\\tshlr\\t%w0\\n\\tmov.w\\t%e0,%f0\\n\\trotxr\\t%z0\";\n \t\t  else\n \t\t    info->special = \"sub.w\\t%f0,%f0\\n\\tshll\\t%z0\\n\\tmov.w\\t%f0,%e0\\n\\trotxl\\t%w0\";\n-\t\t  info->cc_valid_p = 0;\n-\t\t  return SHIFT_SPECIAL;\n+\t\t  goto return_shift_special;\n \t\t}\n \t      else\n \t\t{\n \t\t  info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n-\t\t  if (TARGET_H8300S)\n-\t\t    info->shift2 = rotate_two[shift_type][shift_mode];\n-\t\t  else\n-\t\t    info->shift2 = NULL;\n-\t\t  info->cc_valid_p = 0;\n-\t\t  return SHIFT_ROT_AND;\n+\t\t  info->shift2 = rotate_two[shift_type][shift_mode];\n+\t\t  goto return_shift_rot_and;\n \t\t}\n \t    }\n \t}\n@@ -2666,8 +2604,29 @@ get_shift_alg (shift_type, shift_mode, count, info)\n       abort ();\n     }\n \n+ return_shift_loop:\n   /* No fancy method is available.  Just loop.  */\n-  return SHIFT_LOOP;\n+  info->alg = SHIFT_LOOP;\n+  goto end;\n+\n+ return_shift_inline:\n+  info->remainder = count;\n+  info->alg = SHIFT_INLINE;\n+  goto end;\n+\n+ return_shift_special:\n+  info->cc_valid_p = 0;\n+  info->alg = SHIFT_SPECIAL;\n+  goto end;\n+\n+ return_shift_rot_and:\n+  info->cc_valid_p = 0;\n+  info->alg = SHIFT_ROT_AND;\n+  goto end;\n+\n+ end:\n+  if (!TARGET_H8300S)\n+    info->shift2 = NULL;\n }\n \n /* Emit the assembler code for doing shifts.  */\n@@ -2737,7 +2696,6 @@ emit_a_shift (insn, operands)\n   else\n     {\n       int n = INTVAL (operands[2]);\n-      enum shift_alg alg;\n \n       /* If the count is negative, make it 0.  */\n       if (n < 0)\n@@ -2748,11 +2706,17 @@ emit_a_shift (insn, operands)\n       else if ((unsigned int) n > GET_MODE_BITSIZE (mode))\n \tn = GET_MODE_BITSIZE (mode);\n \n-      alg = get_shift_alg (shift_type, shift_mode, n, &info);\n+      get_shift_alg (shift_type, shift_mode, n, &info);\n \n-      switch (alg)\n+      switch (info.alg)\n \t{\n+\tcase SHIFT_SPECIAL:\n+\t  output_asm_insn (info.special, operands);\n+\t  /* Fall through.  */\n+\n \tcase SHIFT_INLINE:\n+\t  n = info.remainder;\n+\n \t  /* Emit two bit shifts first.  */\n \t  while (n > 1 && info.shift2 != NULL)\n \t    {\n@@ -2834,10 +2798,6 @@ emit_a_shift (insn, operands)\n \t    return \"\";\n \t  }\n \n-\tcase SHIFT_SPECIAL:\n-\t  output_asm_insn (info.special, operands);\n-\t  return \"\";\n-\n \tcase SHIFT_LOOP:\n \t  /* A loop to shift by a \"large\" constant value.\n \t     If we have shift-by-2 insns, use them.  */"}]}