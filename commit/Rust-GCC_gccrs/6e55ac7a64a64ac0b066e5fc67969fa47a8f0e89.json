{"sha": "6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU1NWFjN2E2NGE2NGFjMGIwNjZlNWZjNjc5NjlmYTQ3YThmMGU4OQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2009-04-20T09:31:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T09:31:00Z"}, "message": "g-socket.ads (Send_Socket): Fix misleading comment.\n\n2009-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.ads (Send_Socket): Fix misleading comment.\n\nFrom-SVN: r146384", "tree": {"sha": "5cc2c1db263cdb3a3276ab2e9864c417a77074ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cc2c1db263cdb3a3276ab2e9864c417a77074ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89/comments", "author": null, "committer": null, "parents": [{"sha": "566fef1d5f3dc7d16c66ff7d599d50802655d0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566fef1d5f3dc7d16c66ff7d599d50802655d0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/566fef1d5f3dc7d16c66ff7d599d50802655d0c6"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "d5a0cd7ad48b72503e5e12a68f8c928cd7ddb00e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89", "patch": "@@ -1,3 +1,7 @@\n+2009-04-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.ads (Send_Socket): Fix misleading comment.\n+\n 2009-04-20  Arnaud Charlet  <charlet@adacore.com>\n \n \t* switch-c.adb (Scan_Front_End_Switches): Disable inspector mode in"}, {"sha": "96d3428261de8554658f99ea0a224290a2ea7411", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=6e55ac7a64a64ac0b066e5fc67969fa47a8f0e89", "patch": "@@ -935,10 +935,9 @@ package GNAT.Sockets is\n       Item   : Ada.Streams.Stream_Element_Array;\n       Last   : out Ada.Streams.Stream_Element_Offset;\n       Flags  : Request_Flag_Type := No_Request_Flag);\n-   --  Transmit a message over a socket. Note that Last is set to\n-   --  Item'First-1 when socket has been closed by peer. This is not\n-   --  considered an error and no exception is raised. Flags allows to control\n-   --  the transmission. Raises Socket_Error on any other error condition.\n+   --  Transmit a message over a socket. Upon return, Last is set to the index\n+   --  within Item of the last element transmitted. Flags allows to control\n+   --  the transmission. Raises Socket_Error on any detected error condition.\n \n    procedure Send_Socket\n      (Socket : Socket_Type;\n@@ -975,14 +974,13 @@ package GNAT.Sockets is\n    --  Same interface as Ada.Streams.Stream_IO\n \n    function Stream (Socket : Socket_Type) return Stream_Access;\n-   --  Create a stream associated with a stream-based socket that is\n-   --  already connected.\n+   --  Create a stream associated with an already connected stream-based socket\n \n    function Stream\n      (Socket  : Socket_Type;\n       Send_To : Sock_Addr_Type) return Stream_Access;\n-   --  Create a stream associated with a datagram-based socket that is already\n-   --  bound. Send_To is the socket address to which messages are being sent.\n+   --  Create a stream associated with an already bound datagram-based socket.\n+   --  Send_To is the destination address to which messages are being sent.\n \n    function Get_Address\n      (Stream : not null Stream_Access) return Sock_Addr_Type;\n@@ -996,9 +994,10 @@ package GNAT.Sockets is\n \n    type Socket_Set_Type is limited private;\n    --  This type allows to manipulate sets of sockets. It allows to wait for\n-   --  events on multiple endpoints at one time. This type used to contain\n-   --  a pointer to dynamically allocated storage, but this is not the case\n-   --  anymore, and no special precautions are required to avoid memory leaks.\n+   --  events on multiple endpoints at one time.\n+   --  Note: This type used to contain a pointer to dynamically allocated\n+   --  storage, but this is not the case anymore, and no special precautions\n+   --  are required to avoid memory leaks.\n \n    procedure Clear (Item : in out Socket_Set_Type; Socket : Socket_Type);\n    --  Remove Socket from Item"}]}