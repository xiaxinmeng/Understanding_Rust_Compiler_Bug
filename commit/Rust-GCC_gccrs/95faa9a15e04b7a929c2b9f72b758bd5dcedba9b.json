{"sha": "95faa9a15e04b7a929c2b9f72b758bd5dcedba9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVmYWE5YTE1ZTA0YjdhOTI5YzJiOWY3MmI3NThiZDVkY2VkYmE5Yg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-10-26T08:49:10Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-10-26T08:49:10Z"}, "message": "std_valarray.h (valarray::valarray): Fix thinko.\n\n\t* include/bits/std_valarray.h (valarray::valarray): Fix thinko.\n\tUse __valarray_copy_construct only where appropriate.\n\nFrom-SVN: r37070", "tree": {"sha": "168b4327f7130a967f5863f97b8ff10da287d41d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/168b4327f7130a967f5863f97b8ff10da287d41d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95faa9a15e04b7a929c2b9f72b758bd5dcedba9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95faa9a15e04b7a929c2b9f72b758bd5dcedba9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95faa9a15e04b7a929c2b9f72b758bd5dcedba9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95faa9a15e04b7a929c2b9f72b758bd5dcedba9b/comments", "author": null, "committer": null, "parents": [{"sha": "db23c0ad0c530ce4de5de7ba9c4906511c1d1849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db23c0ad0c530ce4de5de7ba9c4906511c1d1849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db23c0ad0c530ce4de5de7ba9c4906511c1d1849"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "b0e779a9b4de721594eed8607e236082776a1d7b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95faa9a15e04b7a929c2b9f72b758bd5dcedba9b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95faa9a15e04b7a929c2b9f72b758bd5dcedba9b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=95faa9a15e04b7a929c2b9f72b758bd5dcedba9b", "patch": "@@ -1,3 +1,8 @@\n+2000-10-26  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* include/bits/std_valarray.h (valarray::valarray): Fix thinko.\n+\tUse __valarray_copy_construct only where appropriate.\n+\n 2000-10-25  Mark Mitchell  <mark@codesourcery.com>\n \n \t* Makefile.in (check): Don't make mkcheck executable."}, {"sha": "f42d7a0877c7eddb8ae6e9e940c9b241b7c4cd1a", "filename": "libstdc++-v3/include/bits/std_valarray.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95faa9a15e04b7a929c2b9f72b758bd5dcedba9b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_valarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95faa9a15e04b7a929c2b9f72b758bd5dcedba9b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_valarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_valarray.h?ref=95faa9a15e04b7a929c2b9f72b758bd5dcedba9b", "patch": "@@ -281,7 +281,7 @@ namespace std {\n   inline valarray<_Tp>::valarray (const slice_array<_Tp>& __sa)\n     : _M_size(__sa._M_sz), _M_data(__valarray_get_storage<_Tp>(__sa._M_sz))\n   {\n-    __valarray_copy_construct\n+    __valarray_copy\n       (__sa._M_array, __sa._M_sz, __sa._M_stride, _Array<_Tp>(_M_data));\n   }\n \n@@ -290,7 +290,7 @@ namespace std {\n     : _M_size(__ga._M_index.size()),\n       _M_data(__valarray_get_storage<_Tp>(_M_size))\n   {\n-    __valarray_copy_construct\n+    __valarray_copy\n       (__ga._M_array, _Array<size_t>(__ga._M_index),\n        _Array<_Tp>(_M_data), _M_size);\n   }\n@@ -299,22 +299,22 @@ namespace std {\n   inline valarray<_Tp>::valarray (const mask_array<_Tp>& __ma)\n     : _M_size(__ma._M_sz), _M_data(__valarray_get_storage<_Tp>(__ma._M_sz))\n   {\n-    __valarray_copy_construct\n+    __valarray_copy\n       (__ma._M_array, __ma._M_mask, _Array<_Tp>(_M_data), _M_size);\n   }\n \n   template<typename _Tp>\n   inline valarray<_Tp>::valarray (const indirect_array<_Tp>& __ia)\n     : _M_size(__ia._M_sz), _M_data(__valarray_get_storage<_Tp>(__ia._M_sz))\n   {\n-    __valarray_copy_construct\n+    __valarray_copy\n       (__ia._M_array, __ia._M_index, _Array<_Tp>(_M_data), _M_size);\n   }\n \n   template<typename _Tp> template<class _Dom>\n   inline valarray<_Tp>::valarray (const _Expr<_Dom, _Tp>& __e)\n     : _M_size(__e.size ()), _M_data(__valarray_get_storage<_Tp>(_M_size))\n-  { __valarray_copy_construct (__e, _M_size, _Array<_Tp>(_M_data)); }\n+  { __valarray_copy (__e, _M_size, _Array<_Tp>(_M_data)); }\n \n   template<typename _Tp>\n   inline valarray<_Tp>::~valarray ()"}]}