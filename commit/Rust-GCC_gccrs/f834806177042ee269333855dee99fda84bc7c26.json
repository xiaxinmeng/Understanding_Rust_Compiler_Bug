{"sha": "f834806177042ee269333855dee99fda84bc7c26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgzNDgwNjE3NzA0MmVlMjY5MzMzODU1ZGVlOTlmZGE4NGJjN2MyNg==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-10-24T17:14:41Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-10-24T17:14:41Z"}, "message": "c-common.c (c_common_truthvalue_conversion): Warn for multiplications in boolean context.\n\n2016-10-24  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * c-common.c (c_common_truthvalue_conversion): Warn for\n        multiplications in boolean context.  Fix the quoting of '<<' and '<'\n        in the shift warning.\n\ngcc:\n2016-10-24  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * doc/invoke.text (Wint-in-bool-context): Update documentation.\n        * value-prof.c (stringop_block_profile): Fix a warning.\n\ntestsuite:\n2016-10-24  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * c-c++-common/Wint-in-bool-context-3.c: New test.\n\nFrom-SVN: r241490", "tree": {"sha": "192f2356af6a042207d630b08e779de14912326f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/192f2356af6a042207d630b08e779de14912326f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f834806177042ee269333855dee99fda84bc7c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f834806177042ee269333855dee99fda84bc7c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f834806177042ee269333855dee99fda84bc7c26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f834806177042ee269333855dee99fda84bc7c26/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1eb4547b1058d6a4e1912ac0f15cc0a69bf4fd78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb4547b1058d6a4e1912ac0f15cc0a69bf4fd78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb4547b1058d6a4e1912ac0f15cc0a69bf4fd78"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "1f6712e6144aa674086f9a64c842c0f3a3beb5a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f834806177042ee269333855dee99fda84bc7c26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f834806177042ee269333855dee99fda84bc7c26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f834806177042ee269333855dee99fda84bc7c26", "patch": "@@ -1,3 +1,8 @@\n+2016-10-24  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* doc/invoke.text (Wint-in-bool-context): Update documentation.\n+\t* value-prof.c (stringop_block_profile): Fix a warning.\n+\n 2016-10-24  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/77735"}, {"sha": "6a6dba2859318d52980dd9b8ed37e93b3fc3a56a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f834806177042ee269333855dee99fda84bc7c26/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f834806177042ee269333855dee99fda84bc7c26/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=f834806177042ee269333855dee99fda84bc7c26", "patch": "@@ -1,3 +1,9 @@\n+2016-10-24  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* c-common.c (c_common_truthvalue_conversion): Warn for\n+\tmultiplications in boolean context.  Fix the quoting of '<<' and '<'\n+\tin the shift warning.\n+\n 2016-10-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* c-common.c (c_common_truthvalue_conversion): Fix the comment."}, {"sha": "c0dafc08652a81c0610951bf928cb6d2bccac898", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f834806177042ee269333855dee99fda84bc7c26/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f834806177042ee269333855dee99fda84bc7c26/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=f834806177042ee269333855dee99fda84bc7c26", "patch": "@@ -3327,6 +3327,11 @@ c_common_truthvalue_conversion (location_t location, tree expr)\n \treturn c_common_truthvalue_conversion (location,\n \t\t\t\t\t       TREE_OPERAND (expr, 0));\n \n+    case MULT_EXPR:\n+      warning_at (EXPR_LOCATION (expr), OPT_Wint_in_bool_context,\n+\t\t  \"%<*%> in boolean context, suggest %<&&%> instead\");\n+      break;\n+\n     case LSHIFT_EXPR:\n       /* We will only warn on signed shifts here, because the majority of\n \t false positive warnings happen in code where unsigned arithmetic\n@@ -3336,7 +3341,7 @@ c_common_truthvalue_conversion (location_t location, tree expr)\n       if (TREE_CODE (TREE_TYPE (expr)) == INTEGER_TYPE\n \t  && !TYPE_UNSIGNED (TREE_TYPE (expr)))\n \twarning_at (EXPR_LOCATION (expr), OPT_Wint_in_bool_context,\n-\t\t    \"<< in boolean context, did you mean '<' ?\");\n+\t\t    \"%<<<%> in boolean context, did you mean %<<%> ?\");\n       break;\n \n     case COND_EXPR:"}, {"sha": "5ccd4244ef396696f1a7ca962a7a7fe9973fcf6e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f834806177042ee269333855dee99fda84bc7c26/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f834806177042ee269333855dee99fda84bc7c26/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f834806177042ee269333855dee99fda84bc7c26", "patch": "@@ -6169,8 +6169,9 @@ of the C++ standard.\n @opindex Wno-int-in-bool-context\n Warn for suspicious use of integer values where boolean values are expected,\n such as conditional expressions (?:) using non-boolean integer constants in\n-boolean context, like @code{if (a <= b ? 2 : 3)}.  Or left shifting in\n-boolean context, like @code{for (a = 0; 1 << a; a++);}.\n+boolean context, like @code{if (a <= b ? 2 : 3)}.  Or left shifting of signed\n+integers in boolean context, like @code{for (a = 0; 1 << a; a++);}.  Likewise\n+for all kinds of multiplications regardless of the data type.\n This warning is enabled by @option{-Wall}.\n \n @item -Wno-int-to-pointer-cast"}, {"sha": "5b83f4de12523e86ee8dc46690bd6509f93d79e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f834806177042ee269333855dee99fda84bc7c26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f834806177042ee269333855dee99fda84bc7c26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f834806177042ee269333855dee99fda84bc7c26", "patch": "@@ -1,3 +1,7 @@\n+2016-10-24  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* c-c++-common/Wint-in-bool-context-3.c: New test.\n+\n 2016-10-24  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/77735"}, {"sha": "869132a90c398c9afa9c1ed011f545761faf12be", "filename": "gcc/testsuite/c-c++-common/Wint-in-bool-context-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f834806177042ee269333855dee99fda84bc7c26/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f834806177042ee269333855dee99fda84bc7c26/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWint-in-bool-context-3.c?ref=f834806177042ee269333855dee99fda84bc7c26", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-options \"-Wint-in-bool-context\" } */\n+/* { dg-do compile } */\n+\n+#define BITS_PER_UNIT 8\n+\n+int foo (int count)\n+{\n+  int alignment;\n+ \n+  alignment = 1;\n+  while (!(count & alignment)\n+         && (alignment * 2 * BITS_PER_UNIT)) /* { dg-warning \"boolean context\" } */\n+    alignment <<= 1;\n+  return alignment * BITS_PER_UNIT;\n+}"}, {"sha": "dc570692fbf32985431732672fe46882c33581c6", "filename": "gcc/value-prof.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f834806177042ee269333855dee99fda84bc7c26/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f834806177042ee269333855dee99fda84bc7c26/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=f834806177042ee269333855dee99fda84bc7c26", "patch": "@@ -1878,12 +1878,12 @@ stringop_block_profile (gimple *stmt, unsigned int *expected_align,\n   else\n     {\n       gcov_type count;\n-      int alignment;\n+      unsigned int alignment;\n \n       count = histogram->hvalue.counters[0];\n       alignment = 1;\n       while (!(count & alignment)\n-\t     && (alignment * 2 * BITS_PER_UNIT))\n+\t     && (alignment <= UINT_MAX / 2 / BITS_PER_UNIT))\n \talignment <<= 1;\n       *expected_align = alignment * BITS_PER_UNIT;\n       gimple_remove_histogram_value (cfun, stmt, histogram);"}]}