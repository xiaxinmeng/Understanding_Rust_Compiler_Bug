{"sha": "a523b302d07a67d993c1bf24dd979616749abe7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUyM2IzMDJkMDdhNjdkOTkzYzFiZjI0ZGQ5Nzk2MTY3NDlhYmU3ZA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2009-04-15T09:10:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-15T09:10:11Z"}, "message": "exp_ch4.adb (Expand_N_Allocator): Code cleanup.\n\n2009-04-15  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Allocator): Code cleanup.\n\n\t* sem_ch6.adb (Check_Anonymous_Return): Add missing support for\n\tfunctions returning anonymous access to class-wide limited types. Mark\n\talso the containing scope as a task master.\n\n\t* sem_ch8.adb (Restore_Scope_Stack): Add missing management for\n\tlimited-withed packages. Required to restore their visibility after\n\tprocessing packages associated with implicit with-clauses.\n\n\t* exp_ch3.adb (Build_Class_Wide_Master): Avoid marking masters\n\tassociated with return statements because this work is now done by\n\tCheck_Anonymous_Return.\n\t(Build_Master): Code cleanup.\n\nFrom-SVN: r146089", "tree": {"sha": "7d21d475487af92a65c3a21d030a002933c068ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d21d475487af92a65c3a21d030a002933c068ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a523b302d07a67d993c1bf24dd979616749abe7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a523b302d07a67d993c1bf24dd979616749abe7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a523b302d07a67d993c1bf24dd979616749abe7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a523b302d07a67d993c1bf24dd979616749abe7d/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6891bd6c7195e0b8d1e25a712f70d03e5b05a482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6891bd6c7195e0b8d1e25a712f70d03e5b05a482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6891bd6c7195e0b8d1e25a712f70d03e5b05a482"}], "stats": {"total": 101, "additions": 75, "deletions": 26}, "files": [{"sha": "5b4055519158d600848ae1a850b523659e518709", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a523b302d07a67d993c1bf24dd979616749abe7d", "patch": "@@ -1,3 +1,20 @@\n+2009-04-15  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Allocator): Code cleanup.\n+\n+\t* sem_ch6.adb (Check_Anonymous_Return): Add missing support for\n+\tfunctions returning anonymous access to class-wide limited types. Mark\n+\talso the containing scope as a task master.\n+\n+\t* sem_ch8.adb (Restore_Scope_Stack): Add missing management for\n+\tlimited-withed packages. Required to restore their visibility after\n+\tprocessing packages associated with implicit with-clauses.\n+\n+\t* exp_ch3.adb (Build_Class_Wide_Master): Avoid marking masters\n+\tassociated with return statements because this work is now done by\n+\tCheck_Anonymous_Return.\n+\t(Build_Master): Code cleanup.\n+\n 2009-04-15  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_warn.ads: Minor reformatting"}, {"sha": "7f30178432ccabea5ebb4e4042f82391a6276972", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=a523b302d07a67d993c1bf24dd979616749abe7d", "patch": "@@ -814,22 +814,26 @@ package body Exp_Ch3 is\n          Analyze (Decl);\n          Set_Has_Master_Entity (Scope (T));\n \n-         --  Now mark the containing scope as a task master\n+         --  Now mark the containing scope as a task master. Masters\n+         --  associated with return statements are already marked at\n+         --  this stage (see Analyze_Subprogram_Body).\n \n-         Par := P;\n-         while Nkind (Par) /= N_Compilation_Unit loop\n-            Par := Parent (Par);\n+         if Ekind (Current_Scope) /= E_Return_Statement then\n+            Par := P;\n+            while Nkind (Par) /= N_Compilation_Unit loop\n+               Par := Parent (Par);\n \n             --  If we fall off the top, we are at the outer level, and the\n             --  environment task is our effective master, so nothing to mark.\n \n-            if Nkind_In\n-                (Par, N_Task_Body, N_Block_Statement, N_Subprogram_Body)\n-            then\n-               Set_Is_Task_Master (Par, True);\n-               exit;\n-            end if;\n-         end loop;\n+               if Nkind_In\n+                   (Par, N_Task_Body, N_Block_Statement, N_Subprogram_Body)\n+               then\n+                  Set_Is_Task_Master (Par, True);\n+                  exit;\n+               end if;\n+            end loop;\n+         end if;\n       end if;\n \n       --  Now define the renaming of the master_id\n@@ -3949,15 +3953,13 @@ package body Exp_Ch3 is\n \n          --  Create a class-wide master because a Master_Id must be generated\n          --  for access-to-limited-class-wide types whose root may be extended\n-         --  with task components, and for access-to-limited-interfaces because\n-         --  they can be used to reference tasks implementing such interface.\n+         --  with task components.\n+\n+         --  Note: This code covers access-to-limited-interfaces because they\n+         --        can be used to reference tasks implementing them.\n \n          elsif Is_Class_Wide_Type (Designated_Type (Def_Id))\n-           and then (Is_Limited_Type (Designated_Type (Def_Id))\n-                       or else\n-                        (Is_Interface (Designated_Type (Def_Id))\n-                           and then\n-                             Is_Limited_Interface (Designated_Type (Def_Id))))\n+           and then Is_Limited_Type (Designated_Type (Def_Id))\n            and then Tasking_Allowed\n \n             --  Do not create a class-wide master for types whose convention is"}, {"sha": "27bc6c6e7e0b186e5d58d7d16e016c781bcfae0e", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=a523b302d07a67d993c1bf24dd979616749abe7d", "patch": "@@ -3609,11 +3609,7 @@ package body Exp_Ch4 is\n                      --  on the global final list which is singly-linked.\n                      --  Work needed for access discriminants in Ada 2005 ???\n \n-                     if Ekind (PtrT) = E_Anonymous_Access_Type\n-                       and then\n-                         Nkind (Associated_Node_For_Itype (PtrT))\n-                     not in N_Subprogram_Specification\n-                     then\n+                     if Ekind (PtrT) = E_Anonymous_Access_Type then\n                         Attach_Level := Uint_1;\n                      else\n                         Attach_Level := Uint_2;"}, {"sha": "2663fabb698ff6c32ac8f3044e2623f5012ad5e5", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a523b302d07a67d993c1bf24dd979616749abe7d", "patch": "@@ -1426,6 +1426,7 @@ package body Sem_Ch6 is\n \n       procedure Check_Anonymous_Return is\n          Decl : Node_Id;\n+         Par  : Node_Id;\n          Scop : Entity_Id;\n \n       begin\n@@ -1437,7 +1438,12 @@ package body Sem_Ch6 is\n \n          if Ekind (Scop) = E_Function\n            and then Ekind (Etype (Scop)) = E_Anonymous_Access_Type\n-           and then Has_Task (Designated_Type (Etype (Scop)))\n+           and then not Is_Thunk (Scop)\n+           and then (Has_Task (Designated_Type (Etype (Scop)))\n+                      or else\n+                       (Is_Class_Wide_Type (Designated_Type (Etype (Scop)))\n+                          and then\n+                        Is_Limited_Record (Designated_Type (Etype (Scop)))))\n            and then Expander_Active\n          then\n             Decl :=\n@@ -1459,6 +1465,25 @@ package body Sem_Ch6 is\n \n             Set_Master_Id (Etype (Scop), Defining_Identifier (Decl));\n             Set_Has_Master_Entity (Scop);\n+\n+            --  Now mark the containing scope as a task master\n+\n+            Par := N;\n+            while Nkind (Par) /= N_Compilation_Unit loop\n+               Par := Parent (Par);\n+               pragma Assert (Present (Par));\n+\n+               --  If we fall off the top, we are at the outer level, and\n+               --  the environment task is our effective master, so nothing\n+               --  to mark.\n+\n+               if Nkind_In\n+                   (Par, N_Task_Body, N_Block_Statement, N_Subprogram_Body)\n+               then\n+                  Set_Is_Task_Master (Par, True);\n+                  exit;\n+               end if;\n+            end loop;\n          end if;\n       end Check_Anonymous_Return;\n "}, {"sha": "64f2081953f45d4f52e6be9ab9f91681d69dc39f", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a523b302d07a67d993c1bf24dd979616749abe7d/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=a523b302d07a67d993c1bf24dd979616749abe7d", "patch": "@@ -6708,8 +6708,17 @@ package body Sem_Ch8 is\n             E := First_Entity (S);\n             while Present (E) loop\n                if Is_Child_Unit (E) then\n-                  Set_Is_Immediately_Visible (E,\n-                    Is_Visible_Child_Unit (E) or else In_Open_Scopes (E));\n+                  if not From_With_Type (E) then\n+                     Set_Is_Immediately_Visible (E,\n+                       Is_Visible_Child_Unit (E) or else In_Open_Scopes (E));\n+                  else\n+                     pragma Assert\n+                       (Nkind (Parent (E)) = N_Defining_Program_Unit_Name\n+                          and then\n+                        Nkind (Parent (Parent (E))) = N_Package_Specification);\n+                     Set_Is_Immediately_Visible (E,\n+                       Limited_View_Installed (Parent (Parent (E))));\n+                  end if;\n                else\n                   Set_Is_Immediately_Visible (E, True);\n                end if;"}]}