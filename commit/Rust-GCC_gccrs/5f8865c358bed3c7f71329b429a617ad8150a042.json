{"sha": "5f8865c358bed3c7f71329b429a617ad8150a042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY4ODY1YzM1OGJlZDNjN2Y3MTMyOWI0MjlhNjE3YWQ4MTUwYTA0Mg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-01-13T11:06:03Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-01-13T11:06:03Z"}, "message": "re PR fortran/59345 (_gfortran_internal_pack on compiler generated temps)\n\n2019-01-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/59345\n\t* trans-array.c (gfc_conv_array_parameter): Remove TODO.  Do not\n\tpack/unpack results of functions which return an explicit-shaped\n\tor allocatable array.\n\n2019-01-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/59345\n\t* gfortran.dg/internal_pack_17.f90: New test.\n\t* gfortran.dg/alloc_comp_auto_array_3.f90: Adjust number of calls\n\tto builtin_free.\n\nFrom-SVN: r267903", "tree": {"sha": "0a66079575ac33a1212be350cbd4d286af6fdfcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a66079575ac33a1212be350cbd4d286af6fdfcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f8865c358bed3c7f71329b429a617ad8150a042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8865c358bed3c7f71329b429a617ad8150a042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f8865c358bed3c7f71329b429a617ad8150a042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8865c358bed3c7f71329b429a617ad8150a042/comments", "author": null, "committer": null, "parents": [{"sha": "264201216816c9145e40b856628a6c3e3eec6178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264201216816c9145e40b856628a6c3e3eec6178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264201216816c9145e40b856628a6c3e3eec6178"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "82e122ed1632d75a9abc28e07ee5aa84fc582be5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5f8865c358bed3c7f71329b429a617ad8150a042", "patch": "@@ -1,3 +1,10 @@\n+2019-01-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/59345\n+\t* trans-array.c (gfc_conv_array_parameter): Remove TODO.  Do not\n+\tpack/unpack results of functions which return an explicit-shaped\n+\tor allocatable array.\n+\n 2019-01-12  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/61765"}, {"sha": "ae597e8e4bf1f02cc734d83b0160a54e337c7e45", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=5f8865c358bed3c7f71329b429a617ad8150a042", "patch": "@@ -7756,7 +7756,6 @@ array_parameter_size (tree desc, gfc_expr *expr, tree *size)\n }\n \n /* Convert an array for passing as an actual parameter.  */\n-/* TODO: Optimize passing g77 arrays.  */\n \n void\n gfc_conv_array_parameter (gfc_se * se, gfc_expr * expr, bool g77,\n@@ -7882,11 +7881,23 @@ gfc_conv_array_parameter (gfc_se * se, gfc_expr * expr, bool g77,\n \n   no_pack = contiguous && no_pack;\n \n-  /* If we have an expression, an array temporary will be\n-     generated which does not need to be packed / unpacked\n-     if passed to an explicit-shape dummy array.  */\n+  /* If we have an EXPR_OP or a function returning an explicit-shaped\n+     or allocatable array, an array temporary will be generated which\n+     does not need to be packed / unpacked if passed to an\n+     explicit-shape dummy array.  */\n \n-  no_pack = no_pack || (g77 && expr->expr_type == EXPR_OP);\n+  if (g77)\n+    {\n+      if (expr->expr_type == EXPR_OP)\n+\tno_pack = 1;\n+      else if (expr->expr_type == EXPR_FUNCTION && expr->value.function.esym)\n+\t{\n+\t  gfc_symbol *result = expr->value.function.esym->result;\n+\t  if (result->attr.dimension\n+\t      && (result->as->type == AS_EXPLICIT || result->attr.allocatable))\n+\t    no_pack = 1;\n+\t}\n+    }\n \n   /* Array constructors are always contiguous and do not need packing.  */\n   array_constructor = g77 && !this_array_result && expr->expr_type == EXPR_ARRAY;"}, {"sha": "609320e6f7da058517072e4ebbb1e727c0516723", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f8865c358bed3c7f71329b429a617ad8150a042", "patch": "@@ -1,3 +1,10 @@\n+2019-01-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/59345\n+\t* gfortran.dg/internal_pack_17.f90: New test.\n+\t* gfortran.dg/alloc_comp_auto_array_3.f90: Adjust number of calls\n+\tto builtin_free.\n+\n 2019-01-12  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/61765"}, {"sha": "15f9ecb74de644a2e78dab726d6d7c8c69a4e6d9", "filename": "gcc/testsuite/gfortran.dg/alloc_comp_auto_array_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_auto_array_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_auto_array_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_auto_array_3.f90?ref=5f8865c358bed3c7f71329b429a617ad8150a042", "patch": "@@ -26,5 +26,5 @@ function bar_1d () result (array)\n   end function\n end\n ! { dg-final { scan-tree-dump-times \"builtin_malloc\" 3 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"builtin_free\" 4 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"builtin_free\" 3 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"while \\\\(1\\\\)\" 4 \"original\" } }"}, {"sha": "c1b813b0c91b541a61ed4fb1b3932b1dab4b1bc1", "filename": "gcc/testsuite/gfortran.dg/internal_pack_17.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8865c358bed3c7f71329b429a617ad8150a042/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finternal_pack_17.f90?ref=5f8865c358bed3c7f71329b429a617ad8150a042", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fdump-tree-original\" }\n+! PR 59345 - pack/unpack was not needed here.\n+! Original test case by Joost VandeVondele \n+SUBROUTINE S1(A)\n+ INTERFACE\n+   FUNCTION CONTIGUOUS_F1() RESULT(res)\n+    INTEGER :: res(5)\n+   END FUNCTION\n+ END INTERFACE\n+ CALL S2(CONTIGUOUS_F1())\n+END SUBROUTINE\n+\n+SUBROUTINE S3(A)\n+ INTERFACE\n+   FUNCTION CONTIGOUOS_F2() RESULT(res)\n+    INTEGER, ALLOCATABLE :: res(:)\n+   END FUNCTION\n+ END INTERFACE\n+ PROCEDURE(CONTIGOUOS_F2), POINTER :: A\n+ CALL S2(A())\n+END SUBROUTINE\n+! { dg-final { scan-tree-dump-not \"_gfortran_internal_pack\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"_gfortran_internal_unpack\" \"original\" } }"}]}