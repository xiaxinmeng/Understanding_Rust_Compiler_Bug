{"sha": "265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1ZTdkNTA1Y2FkYzFjN2I1YjBjOTNiMjdjNGE2YzkzMWI4Njg0Zg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2006-01-17T00:09:27Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2006-01-17T00:09:27Z"}, "message": "target-supports.exp (check_effective_target_dfp_nocache, [...]): New.\n\n\t* lib/target-supports.exp (check_effective_target_dfp_nocache,\n\tcheck_effective_target_dfprt_nocache): New.\n\t(check_effective_target_dfp): Use check_effective_target_dfp_nocache.\n\t(check_effective_target_dfprt): New.\n\t* lib/c-compat.exp (check_dfp): Remove.\n\t(compat_dfp_setup): Use check_effective_target_dfprt_nocache.\n\t* gcc.dg/dfp/dfp.exp: Compile, execute, or skip tests based on\n\tlevel of support for decimal float.\n\t* gcc.dg/dfp/call-by-value.c, cast.c, compare-eq-const.c,\n\tcompare-eq-d128.c, compare-eq-d32.c, compare-eq-d64.c,\n\tcompare-eq-dfp.c, compare-rel-const.c, compare-rel-d128.c,\n\tcompare-rel-d32.c, compare-rel-d64.c, compare-rel-dfp.c,\n\tconvert-bfp.c, convert-bfp-fold.c, convert-complex.c, convert-dfp.c,\n\tconvert-dfp-fold.c, convert-dfp-round.c, convert-int-fold.c,\n\tconvert-int-saturate.c, func-array.c, func-mixed.c, func-scalar.c,\n\tfunc-struct.c, func-vararg-dfp.c, func-vararg-mixed.c,\n\tfunc-vararg-size0.c, inf-1.c, loop-index.c, nan-1.c, nan-2.c,\n\toperator-arith-fold.c, operator-assignment.c, operator-comma.c,\n\toperator-cond.c, operator-logical.c, operator-unary.c, snan.c,\n\tstruct-layout-1.c, union-init.c, usual-arith-conv.c: Remove dg-do\n\tdirectives.\n\nFrom-SVN: r109779", "tree": {"sha": "cd1bcd4b60463425318e6505d696026fa0c50f91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd1bcd4b60463425318e6505d696026fa0c50f91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/comments", "author": null, "committer": null, "parents": [{"sha": "acb6e9bedc99cd47b5a76eb2651a033e3d985723", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acb6e9bedc99cd47b5a76eb2651a033e3d985723", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acb6e9bedc99cd47b5a76eb2651a033e3d985723"}], "stats": {"total": 174, "additions": 112, "deletions": 62}, "files": [{"sha": "417a811f891d42b6ddd26638d95d25b0f18bd098", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,3 +1,27 @@\n+2006-01-16  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_dfp_nocache,\n+\tcheck_effective_target_dfprt_nocache): New.\n+\t(check_effective_target_dfp): Use check_effective_target_dfp_nocache.\n+\t(check_effective_target_dfprt): New.\n+\t* lib/c-compat.exp (check_dfp): Remove.\n+\t(compat_dfp_setup): Use check_effective_target_dfprt_nocache.\n+\t* gcc.dg/dfp/dfp.exp: Compile, execute, or skip tests based on\n+\tlevel of support for decimal float.\n+\t* gcc.dg/dfp/call-by-value.c, cast.c, compare-eq-const.c,\n+\tcompare-eq-d128.c, compare-eq-d32.c, compare-eq-d64.c,\n+\tcompare-eq-dfp.c, compare-rel-const.c, compare-rel-d128.c,\n+\tcompare-rel-d32.c, compare-rel-d64.c, compare-rel-dfp.c,\n+\tconvert-bfp.c, convert-bfp-fold.c, convert-complex.c, convert-dfp.c,\n+\tconvert-dfp-fold.c, convert-dfp-round.c, convert-int-fold.c,\n+\tconvert-int-saturate.c, func-array.c, func-mixed.c, func-scalar.c,\n+\tfunc-struct.c, func-vararg-dfp.c, func-vararg-mixed.c,\n+\tfunc-vararg-size0.c, inf-1.c, loop-index.c, nan-1.c, nan-2.c,\n+\toperator-arith-fold.c, operator-assignment.c, operator-comma.c,\n+\toperator-cond.c, operator-logical.c, operator-unary.c, snan.c,\n+\tstruct-layout-1.c, union-init.c, usual-arith-conv.c: Remove dg-do\n+\tdirectives.\n+\n 2006-01-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/25741"}, {"sha": "4232a30186c9f427cab7ede048d4642a66fb43f8", "filename": "gcc/testsuite/gcc.dg/dfp/call-by-value.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcall-by-value.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcall-by-value.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcall-by-value.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.9.1(9) Function definitions; parameter has automatic storage."}, {"sha": "2cc8c1a683a56242be04f496d37eb89322406afc", "filename": "gcc/testsuite/gcc.dg/dfp/cast.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcast.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcast.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcast.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.4 Cast operators."}, {"sha": "dd295200f2a018deb8c8253249146776b6e75d2e", "filename": "gcc/testsuite/gcc.dg/dfp/compare-eq-const.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-const.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.9 Equality operators."}, {"sha": "158e2f90ba5fd4af972e89b4670b6ad16260ac53", "filename": "gcc/testsuite/gcc.dg/dfp/compare-eq-d128.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d128.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.9 Equality operators."}, {"sha": "d5e3bb378c92d86269ad72fc841de2d65269f323", "filename": "gcc/testsuite/gcc.dg/dfp/compare-eq-d32.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d32.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.9 Equality operators."}, {"sha": "8fa39dfcd8fc98acb8514b9955e02cb1466b2e4d", "filename": "gcc/testsuite/gcc.dg/dfp/compare-eq-d64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-d64.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.9 Equality operators."}, {"sha": "4203470a4beb926418a5ebb0e04f74051356381f", "filename": "gcc/testsuite/gcc.dg/dfp/compare-eq-dfp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-dfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-dfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-eq-dfp.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.9 Equality operators."}, {"sha": "d2dda48e6146f340f0c695a458be8b285691d1b4", "filename": "gcc/testsuite/gcc.dg/dfp/compare-rel-const.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-const.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.8 Relational operators."}, {"sha": "0d46925c2bb5ec0a6b4f1ed0cf47b20a8e1b747d", "filename": "gcc/testsuite/gcc.dg/dfp/compare-rel-d128.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d128.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.8 Relational operators."}, {"sha": "257a3c2b4df25a4ace80b42150613e473a5fbf5c", "filename": "gcc/testsuite/gcc.dg/dfp/compare-rel-d32.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d32.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.8 Relational operators."}, {"sha": "73cbcee44d7b76fcbecb6dfb591d173514d80ea9", "filename": "gcc/testsuite/gcc.dg/dfp/compare-rel-d64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-d64.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.8 Relational operators."}, {"sha": "58523b6ab02479a5849ae509da9f8f97d12cf837", "filename": "gcc/testsuite/gcc.dg/dfp/compare-rel-dfp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-dfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-dfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fcompare-rel-dfp.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.8 Relational operators."}, {"sha": "7724e1d2c820f5af4d8ea8df0f35d3c967b04986", "filename": "gcc/testsuite/gcc.dg/dfp/convert-bfp-fold.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-fold.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do compile } */\n /* { dg-options \"-std=gnu99 -O\" } */\n \n /* N1150 5.2 Conversions among decimal floating types and between"}, {"sha": "53258489ebbfadad297cd094fd193453ed27a4fa", "filename": "gcc/testsuite/gcc.dg/dfp/convert-bfp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* N1150 5.2 Conversions among decimal floating types and between"}, {"sha": "9fa8ebe68fb107db36888238da647bef9474b6dc", "filename": "gcc/testsuite/gcc.dg/dfp/convert-complex.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-complex.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-O3\" } */\n \n /* N1150 5.3 Conversions between decimal floating and complex."}, {"sha": "8ccf22e7157b52b4db7a442016f10b8f8efb860e", "filename": "gcc/testsuite/gcc.dg/dfp/convert-dfp-fold.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-fold.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do compile } */\n /* { dg-options \"-std=gnu99 -O\" } */\n \n /* N1150 5.2 Conversions among decimal floating types and between"}, {"sha": "87867fad8b2461914bf4339454759edb071f0f1b", "filename": "gcc/testsuite/gcc.dg/dfp/convert-dfp-round.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-O0 -std=gnu99\" } */\n \n /* N1150 5.2: Conversions among decimal floating types and between"}, {"sha": "bafe0894b63ef4076ede7c72a36df0dd51556428", "filename": "gcc/testsuite/gcc.dg/dfp/convert-dfp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* N1150 5.2 Conversions among decimal floating types and between"}, {"sha": "99eaad833b87159260b33d929a8a519e714dc2c7", "filename": "gcc/testsuite/gcc.dg/dfp/convert-int-fold.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-fold.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do compile } */\n /* { dg-options \"-std=gnu99 -O\" } */\n \n /* N1150 5.1 Conversion between decimal floating integer."}, {"sha": "9aeb1d70c6e054d11177df8130227f76f3cf8c2a", "filename": "gcc/testsuite/gcc.dg/dfp/convert-int-saturate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-saturate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-saturate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-saturate.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* N1150 5.1 Conversion between decimal floating integer."}, {"sha": "db5dde78175125f4e2b49848c251725fafe6d86d", "filename": "gcc/testsuite/gcc.dg/dfp/dfp.exp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdfp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdfp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdfp.exp?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -25,6 +25,19 @@ if { ![check_effective_target_dfp] } {\n     return;\n }\n \n+# If the decimal float is supported in the compiler but not yet in the\n+# runtime, treat all tests as compile-only.\n+global dg-do-what-default\n+set save-dg-do-what-default ${dg-do-what-default}\n+if { ![check_effective_target_dfprt] } {\n+    verbose \"dfp.exp: runtime support for decimal float does not exist\" 2\n+    set dg-do-what-default compile\n+} else {\n+    verbose \"dfp.exp: runtime support for decimal float exists, use it\" 2\n+    set dg-do-what-default run\n+}\n+verbose \"dfp.exp: dg-do-what-default is ${dg-do-what-default}\" 2\n+\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {\n@@ -40,3 +53,6 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n \n # All done.\n dg-finish\n+\n+set dg-do-what-default ${save-dg-do-what-default}\n+verbose \"dfp.exp: dg-do-what-default is ${dg-do-what-default}\" 2"}, {"sha": "04242802071b2d8fd682591aaee0cda2252b8ee6", "filename": "gcc/testsuite/gcc.dg/dfp/func-array.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-array.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.2.2 Function calls."}, {"sha": "0c9fbc98b7d5dde1ba832afda01c33133737c2fa", "filename": "gcc/testsuite/gcc.dg/dfp/func-mixed.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-mixed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-mixed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-mixed.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -Wall\" } */\n \n /* C99 6.5.2.2 Function calls."}, {"sha": "66cf2e24b2949852ae847c70f2270d700762643d", "filename": "gcc/testsuite/gcc.dg/dfp/func-scalar.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-scalar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-scalar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-scalar.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.2.2 Function calls."}, {"sha": "c2674e62009ed313a544b229047d9d95361c9ff2", "filename": "gcc/testsuite/gcc.dg/dfp/func-struct.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-struct.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-struct.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-struct.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.2.2 Function calls."}, {"sha": "0763ca7d4129b59b2789d0efda1a5821691714d1", "filename": "gcc/testsuite/gcc.dg/dfp/func-vararg-dfp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-dfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-dfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-dfp.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.2.2 Function calls."}, {"sha": "b6c2dc05b78ff3528dcd706833c1112e84a15462", "filename": "gcc/testsuite/gcc.dg/dfp/func-vararg-mixed.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-mixed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-mixed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-mixed.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.2.2 Function calls."}, {"sha": "dc94709c108d4871a392c2d0ecae84812f6a471f", "filename": "gcc/testsuite/gcc.dg/dfp/func-vararg-size0.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-size0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-size0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffunc-vararg-size0.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.2.2 Function calls.  */"}, {"sha": "86aa9e4cfaaa64fa46cd55b7d050c16c1e85f7b9", "filename": "gcc/testsuite/gcc.dg/dfp/inf-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Finf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Finf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Finf-1.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* N1150 4: Characteristics of decimal floating types (not explicit)"}, {"sha": "ff52189bc151c8b450fdc7d1192b36eca6865e5a", "filename": "gcc/testsuite/gcc.dg/dfp/loop-index.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Floop-index.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Floop-index.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Floop-index.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.8.5.2: The for statement.  */"}, {"sha": "50972e0eb00602b531d5435332363963c3994047", "filename": "gcc/testsuite/gcc.dg/dfp/nan-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fnan-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fnan-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fnan-1.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* N1150 4: Characteristics of decimal floating types (not explicit)"}, {"sha": "e8a663e74e1c3a852af9b39023220d73e57ef8f7", "filename": "gcc/testsuite/gcc.dg/dfp/nan-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fnan-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fnan-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fnan-2.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* N1150 4: Characteristics of decimal floating types (not explicit)"}, {"sha": "2c09e760a76c0a72c7e8251c691e25576bd3a90b", "filename": "gcc/testsuite/gcc.dg/dfp/operator-arith-fold.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-arith-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-arith-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-arith-fold.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do compile } */\n /* { dg-options \"-std=gnu99 -O\" } */\n \n /* C99 6.5.5: Multiplicative operators."}, {"sha": "490748f50acdc0c4378c813da30679105858baa7", "filename": "gcc/testsuite/gcc.dg/dfp/operator-assignment.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-assignment.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-assignment.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-assignment.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.16 Assignment operators."}, {"sha": "904f9b3a676b89677d77b678ee65a6351a849413", "filename": "gcc/testsuite/gcc.dg/dfp/operator-comma.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-comma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-comma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-comma.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.17: Comma operator."}, {"sha": "ff712bda30b832d7157b1fa19d827c315e886c65", "filename": "gcc/testsuite/gcc.dg/dfp/operator-cond.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-cond.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-cond.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-cond.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* C99 6.5.15 Conditional operator."}, {"sha": "90a94b078fa43fadfd459f922ee2771966e854a1", "filename": "gcc/testsuite/gcc.dg/dfp/operator-logical.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-logical.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-logical.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-logical.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 Logical AND operator."}, {"sha": "bcf50683c0ce9f543e0b4905b616190e7d2b442b", "filename": "gcc/testsuite/gcc.dg/dfp/operator-unary.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-unary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-unary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Foperator-unary.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* C99 6.5.3 Unary operators.  */"}, {"sha": "efc6e70ee83bb631e37823dbd1ea8b7ad164ed9b", "filename": "gcc/testsuite/gcc.dg/dfp/snan.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fsnan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fsnan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fsnan.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"\" } */\n \n /* FIXME: this test needs to be conditional to systems with POSIX signals.  */"}, {"sha": "9e54e48c72646523990dbb2897622df88d0b84b4", "filename": "gcc/testsuite/gcc.dg/dfp/struct-layout-1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fstruct-layout-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fstruct-layout-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fstruct-layout-1.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n #include <stdarg.h>"}, {"sha": "fede76ba3289cf03e047f16b4c7a4a9c350adaf6", "filename": "gcc/testsuite/gcc.dg/dfp/union-init.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Funion-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Funion-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Funion-init.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99\" } */\n \n /* Cast to union is a GNU C extension.  */"}, {"sha": "584058b8cc47315fa786fca66290ce4abb89791c", "filename": "gcc/testsuite/gcc.dg/dfp/usual-arith-conv.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fusual-arith-conv.c?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-options \"-std=gnu99 -O0\" } */\n \n /* N1150 5.4: Usual arithmetic conversions."}, {"sha": "232ed3315db6b0a5675f1b3afe7f52059196828d", "filename": "gcc/testsuite/lib/c-compat.exp", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Flib%2Fc-compat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Flib%2Fc-compat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-compat.exp?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2002, 2003, 2005, 02005 Free Software Foundation, Inc.\n+#   Copyright (C) 2002, 2003, 2005, 2006 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -69,13 +69,13 @@ proc compat_setup_dfp { } {\n     # If there is an alternate compiler, does it support decimal float types?\n     if { $compat_use_alt == 1 && $compat_same_alt == 0 } {\n \tcompat-use-alt-compiler\n-\tset compat_have_dfp [check_dfp]\n+\tset compat_have_dfp [check_effective_target_dfprt_nocache]\n \tcompat-use-tst-compiler\n \tverbose \"compat_have_dfp for alt compiler: $compat_have_dfp\" 2\n     }\n     # Does the compiler under test support it?\n     if { $compat_have_dfp == 1 } {\n-\tset compat_have_dfp [check_dfp]\n+\tset compat_have_dfp [check_effective_target_dfprt_nocache]\n \tverbose \"compat_have_dfp for tst compiler: $compat_have_dfp\" 2\n     }\n \n@@ -87,18 +87,6 @@ proc compat_setup_dfp { } {\n     }\n }\n \n-# Return 1 if the compiler supports decimal float types, 0 otherwise.\n-#\n-# Don't use check_effective_target since this will differ depending\n-# on the compiler, not the target.\n-#\n-proc check_dfp { } {\n-    set result [string match \"\" [get_compiler_messages dfp2 object {\n-\t_Decimal32 x; _Decimal64 y; _Decimal128 z;\n-    }]]\n-    return $result\n-}\n-\n # If either compiler does not support decimal float types, skip this test.\n \n proc dg-require-compat-dfp { args } {"}, {"sha": "cadef960460a29f47f770ae6acab4b8d43242b53", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 69, "deletions": 6, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265e7d505cadc1c7b5b0c93b27c4a6c931b8684f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=265e7d505cadc1c7b5b0c93b27c4a6c931b8684f", "patch": "@@ -1,4 +1,5 @@\n-#   Copyright (C) 1999, 2001, 2003, 2004, 2005 Free Software Foundation, Inc.\n+#   Copyright (C) 1999, 2001, 2003, 2004, 2005, 2006\n+#   Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -1055,7 +1056,54 @@ proc check_effective_target_lp64 { } {\n     return $et_lp64_saved\n }\n \n-# Return 1 if the target supports Decimal Floating Point, 0 otherwise.\n+# Return 1 if the target supports compiling decimal floating point,\n+# 0 otherwise.\n+\n+proc check_effective_target_dfp_nocache { } {\n+    verbose \"check_effective_target_dfp_nocache: compiling source\" 2\n+    set ret [string match \"\" [get_compiler_messages dfp object {\n+        _Decimal32 x; _Decimal64 y; _Decimal128 z;\n+    }]]\n+    verbose \"check_effective_target_dfp_nocache: returning $ret\" 2\n+    return $ret\n+}\n+\n+proc check_effective_target_dfprt_nocache { } {\n+    global tool\n+\n+    set ret 0\n+\n+    verbose \"check_effective_target_dfprt_nocache: compiling source\" 2\n+    # Set up, compile, and execute a test program containing decimal\n+    # float operations.\n+    set src dfprt[pid].c\n+    set exe dfprt[pid].x\n+\n+    set f [open $src \"w\"]\n+    puts $f \"_Decimal32 x = 1.2df; _Decimal64 y = 2.3dd; _Decimal128 z;\"\n+    puts $f \"int main () { z = x + y; return 0; }\"\n+    close $f\n+\n+    verbose \"check_effective_target_dfprt_nocache: compiling testfile $src\" 2\n+    set lines [${tool}_target_compile $src $exe executable \"\"]\n+    file delete $src\n+\n+    if [string match \"\" $lines] then {\n+\t# No error message, compilation succeeded.\n+\tset result [${tool}_load \"./$exe\" \"\" \"\"]\n+\tset status [lindex $result 0]\n+\tremote_file build delete $exe\n+\tverbose \"check_effective_target_dfprt_nocache: testfile status is <$status>\" 2\n+\tif { $status == \"pass\" } then {\n+\t    set ret 1\n+\t}\n+    }\n+    return $ret\n+    verbose \"check_effective_target_dfprt_nocache: returning $ret\" 2\n+}\n+\n+# Return 1 if the target supports compiling Decimal Floating Point,\n+# 0 otherwise.\n #\n # This won't change for different subtargets so cache the result.\n \n@@ -1065,15 +1113,30 @@ proc check_effective_target_dfp { } {\n     if [info exists et_dfp_saved] {\n \tverbose \"check_effective_target_dfp: using cached result\" 2\n     } else {\n-\tverbose \"check_effective_target_dfp: compiling source\" 2\n-\tset et_dfp_saved [string match \"\" [get_compiler_messages dfp object {\n-\t    _Decimal32 x; _Decimal64 y; _Decimal128 z;\n-\t}]]\n+\tset et_dfp_saved [check_effective_target_dfp_nocache]\n     }\n     verbose \"check_effective_target_dfp: returning $et_dfp_saved\" 2\n     return $et_dfp_saved\n }\n \n+# Return 1 if the target supports linking and executing Decimal Floating\n+# Point, # 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_dfprt { } {\n+    global et_dfprt_saved\n+    global tool\n+\n+    if [info exists et_dfprt_saved] {\n+\tverbose \"check_effective_target_dfprt: using cached result\" 2\n+    } else {\n+\tset et_dfprt_saved [check_effective_target_dfprt_nocache]\n+    }\n+    verbose \"check_effective_target_dfprt: returning $et_dfprt_saved\" 2\n+    return $et_dfprt_saved\n+}\n+\n # Return 1 if the target needs a command line argument to enable a SIMD\n # instruction set.\n #"}]}