{"sha": "249eb5068f2182a7c2ef08de73a35e50a0670fd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ5ZWI1MDY4ZjIxODJhN2MyZWYwOGRlNzNhMzVlNTBhMDY3MGZkMw==", "commit": {"author": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2009-06-07T19:29:43Z"}, "committer": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2009-06-07T19:29:43Z"}, "message": "errors.c (internal_error): Commentary typo fix.\n\n2009-06-07  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n\n\t* errors.c (internal_error): Commentary typo fix.\n\t* gimple-iterator.c (gsi_insert_seq_on_edge): Ditto.\n\t* tree-ssa-pre.c: Ditto.\n\nFrom-SVN: r148257", "tree": {"sha": "a76bb84d32a9f579329c702dac34d6d83a0382a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a76bb84d32a9f579329c702dac34d6d83a0382a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/249eb5068f2182a7c2ef08de73a35e50a0670fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/249eb5068f2182a7c2ef08de73a35e50a0670fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/249eb5068f2182a7c2ef08de73a35e50a0670fd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/249eb5068f2182a7c2ef08de73a35e50a0670fd3/comments", "author": null, "committer": null, "parents": [{"sha": "95bca6b063bf69c115695473c2a2ffe06695849d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95bca6b063bf69c115695473c2a2ffe06695849d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95bca6b063bf69c115695473c2a2ffe06695849d"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "9828b16cb48526f6b0821c6fe2b9e4c868abcbd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/249eb5068f2182a7c2ef08de73a35e50a0670fd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/249eb5068f2182a7c2ef08de73a35e50a0670fd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=249eb5068f2182a7c2ef08de73a35e50a0670fd3", "patch": "@@ -1,7 +1,14 @@\n 2009-06-07  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n \n-\t* basic-block.h (ENTRY_BLOCK, EXIT_BLOCK): Document that neither of\n-\tthem is supposed to hold actual statements.\n+\t* errors.c (internal_error): Commentary typo fix.\n+\t* gimple-iterator.c (gsi_insert_seq_on_edge): Ditto.\n+\t* tree-ssa-pre.c: Ditto.\n+\n+2009-06-07  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* errors.c (internal_error): Commentary typo fix.\n+\t* gimple-iterator.c (gsi_insert_seq_on_edge): Ditto.\n+\t* tree-ssa-pre.c: Ditto.\n \n 2009-06-06  Ian Lance Taylor  <iant@google.com>\n "}, {"sha": "c75b361fb0281399884fa31994336c35bae48185", "filename": "gcc/errors.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/249eb5068f2182a7c2ef08de73a35e50a0670fd3/gcc%2Ferrors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/249eb5068f2182a7c2ef08de73a35e50a0670fd3/gcc%2Ferrors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ferrors.c?ref=249eb5068f2182a7c2ef08de73a35e50a0670fd3", "patch": "@@ -104,7 +104,8 @@ internal_error (const char *format, ...)\n    shares no directory elements with the pathname of __FILE__.  This\n    is used by fancy_abort() to print `Internal compiler error in expr.c'\n    instead of `Internal compiler error in ../../GCC/gcc/expr.c'.  This\n-   version if for the gen* programs and so needn't handle subdirectories.  */\n+   version is ment to be used for the gen* programs and therefor need not\n+   handle subdirectories.  */\n \n const char *\n trim_filename (const char *name)"}, {"sha": "666b47b47a8531e90109a8ad0d6cfe8d2af91ecb", "filename": "gcc/gimple-iterator.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/249eb5068f2182a7c2ef08de73a35e50a0670fd3/gcc%2Fgimple-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/249eb5068f2182a7c2ef08de73a35e50a0670fd3/gcc%2Fgimple-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.c?ref=249eb5068f2182a7c2ef08de73a35e50a0670fd3", "patch": "@@ -604,7 +604,7 @@ gsi_insert_seq_on_edge (edge e, gimple_seq seq)\n \n    In all cases, the returned *GSI points to the correct location.  The\n    return value is true if insertion should be done after the location,\n-   or false if it should be done before the location.  If new basic block\n+   or false if it should be done before the location.  If a new basic block\n    has to be created, it is stored in *NEW_BB.  */\n \n static bool"}, {"sha": "11640a8895e0a783fe6165e10272a8191b8eb4d9", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/249eb5068f2182a7c2ef08de73a35e50a0670fd3/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/249eb5068f2182a7c2ef08de73a35e50a0670fd3/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=249eb5068f2182a7c2ef08de73a35e50a0670fd3", "patch": "@@ -134,7 +134,7 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Representation of expressions on value numbers:\n \n-   Expressions consisting of  value numbers are represented the same\n+   Expressions consisting of value numbers are represented the same\n    way as our VN internally represents them, with an additional\n    \"pre_expr\" wrapping around them in order to facilitate storing all\n    of the expressions in the same sets.  */\n@@ -1290,7 +1290,7 @@ translate_vuse_through_block (VEC (vn_reference_op_s, heap) *operands,\n   return NULL_TREE;\n }\n \n-/* Like find_leader, but checks for the value existing in SET1 *or*\n+/* Like bitmap_find_leader, but checks for the value existing in SET1 *or*\n    SET2.  This is used to avoid making a set consisting of the union\n    of PA_IN and ANTIC_IN during insert.  */\n \n@@ -2562,8 +2562,8 @@ is_exception_related (gimple stmt)\n \t      || gimple_assign_rhs_code (stmt) == EXC_PTR_EXPR));\n }\n \n-/* Return true if OP is a tree which we can perform PRE on\n-   on.  This may not match the operations we can value number, but in\n+/* Return true if OP is a tree which we can perform PRE on.\n+   This may not match the operations we can value number, but in\n    a perfect world would.  */\n \n static bool"}]}