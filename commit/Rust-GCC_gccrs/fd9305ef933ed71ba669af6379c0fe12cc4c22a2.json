{"sha": "fd9305ef933ed71ba669af6379c0fe12cc4c22a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ5MzA1ZWY5MzNlZDcxYmE2NjlhZjYzNzljMGZlMTJjYzRjMjJhMg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2001-06-19T16:54:26Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-06-19T16:54:26Z"}, "message": "ssa.c (remove_phi_alternative): Remove declaration.\n\n       * ssa.c (remove_phi_alternative): Remove declaration.  No longer\n        static.  Second argument is a pointer to a basic block structure,\n        not a basic block index.\n        (convert_to_ssa): Do not remove dead code.\n        (convert_from_ssa): Do not remove dead code to create death notes.\n        * ssa.h (remove_phi_alternative): Declare.\n\nFrom-SVN: r43464", "tree": {"sha": "07c8c91fb87a8f7733f18709b6bb7795f1df1631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07c8c91fb87a8f7733f18709b6bb7795f1df1631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd9305ef933ed71ba669af6379c0fe12cc4c22a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9305ef933ed71ba669af6379c0fe12cc4c22a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd9305ef933ed71ba669af6379c0fe12cc4c22a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9305ef933ed71ba669af6379c0fe12cc4c22a2/comments", "author": null, "committer": null, "parents": [{"sha": "164d59e04e9897ab5c82c642e9df1f2f62c9009a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164d59e04e9897ab5c82c642e9df1f2f62c9009a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/164d59e04e9897ab5c82c642e9df1f2f62c9009a"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "42dfd93cdbd1cf59bfe5e3d0311b0a17c7b6e24c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9305ef933ed71ba669af6379c0fe12cc4c22a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9305ef933ed71ba669af6379c0fe12cc4c22a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd9305ef933ed71ba669af6379c0fe12cc4c22a2", "patch": "@@ -6,6 +6,13 @@\n \n Tue Jun 19 07:53:52 2001  Jeffrey A Law  (law@cygnus.com)\n \n+\t* ssa.c (remove_phi_alternative): Remove declaration.  No longer\n+\tstatic.  Second argument is a pointer to a basic block structure,\n+\tnot a basic block index.\n+\t(convert_to_ssa): Do not remove dead code.\n+\t(convert_from_ssa): Do not remove dead code to create death notes.\n+\t* ssa.h (remove_phi_alternative): Declare.\n+\n \t* flow.c (delete_unreachable_blocks): Fix patch error in\n \tprevious change (call to find_unreachable_blocks was lost).\n "}, {"sha": "79382aa7171f2a5cedbe6c9fcf03b9933dbaac88", "filename": "gcc/ssa.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9305ef933ed71ba669af6379c0fe12cc4c22a2/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9305ef933ed71ba669af6379c0fe12cc4c22a2/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=fd9305ef933ed71ba669af6379c0fe12cc4c22a2", "patch": "@@ -1,5 +1,5 @@\n /* Static Single Assignment conversion routines for the GNU compiler.\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -164,8 +164,6 @@ static inline rtx * phi_alternative\n   PARAMS ((rtx, int));\n static rtx first_insn_after_basic_block_note\n   PARAMS ((basic_block));\n-static int remove_phi_alternative\n-  PARAMS ((rtx, int));\n static void compute_dominance_frontiers_1\n   PARAMS ((sbitmap *frontiers, int *idom, int bb, sbitmap done));\n static void compute_dominance_frontiers\n@@ -427,15 +425,16 @@ phi_alternative (set, c)\n    block C.  Return non-zero on success, or zero if no alternative is\n    found for C.  */\n \n-static int\n-remove_phi_alternative (set, c)\n+int\n+remove_phi_alternative (set, block)\n      rtx set;\n-     int c;\n+     basic_block block;\n {\n   rtvec phi_vec = XVEC (SET_SRC (set), 0);\n   int num_elem = GET_NUM_ELEM (phi_vec);\n-  int v;\n+  int v, c;\n \n+  c = block->index;\n   for (v = num_elem - 2; v >= 0; v -= 2)\n     if (INTVAL (RTVEC_ELT (phi_vec, v + 1)) == c)\n       {\n@@ -1155,8 +1154,9 @@ convert_to_ssa ()\n   if (in_ssa_form)\n     abort ();\n \n-  /* Need global_live_at_{start,end} up to date.  */\n-  life_analysis (get_insns (), NULL, PROP_KILL_DEAD_CODE | PROP_SCAN_DEAD_CODE);\n+  /* Need global_live_at_{start,end} up to date.  Do not remove any\n+     dead code.  We'll let the SSA optimizers do that.  */\n+  life_analysis (get_insns (), NULL, 0);\n \n   idom = (int *) alloca (n_basic_blocks * sizeof (int));\n   memset ((void *)idom, -1, (size_t)n_basic_blocks * sizeof (int));\n@@ -2149,9 +2149,12 @@ convert_from_ssa()\n   partition reg_partition;\n   rtx insns = get_insns ();\n \n-  /* Need global_live_at_{start,end} up to date.  */\n-  life_analysis (insns, NULL, \n-\t\t PROP_KILL_DEAD_CODE | PROP_SCAN_DEAD_CODE | PROP_DEATH_NOTES);\n+  /* Need global_live_at_{start,end} up to date.  There should not be\n+     any significant dead code at this point, except perhaps dead\n+     stores.  So do not take the time to perform dead code elimination. \n+\n+     We also do not need death notes, so don't bother creating them.  */\n+  life_analysis (insns, NULL, 0);\n \n   /* Figure out which regs in copies and phi nodes don't conflict and\n      therefore can be coalesced.  */"}, {"sha": "5095319e9978b831f170641d773feab8ac453b64", "filename": "gcc/ssa.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9305ef933ed71ba669af6379c0fe12cc4c22a2/gcc%2Fssa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9305ef933ed71ba669af6379c0fe12cc4c22a2/gcc%2Fssa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.h?ref=fd9305ef933ed71ba669af6379c0fe12cc4c22a2", "patch": "@@ -1,5 +1,5 @@\n /* Static Single Assignment (SSA) definitions for GNU C-Compiler\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n    Written by Jeffrey D. Oldham <oldham@codesourcery.com>.\n \n This file is part of GNU CC.\n@@ -27,9 +27,11 @@ typedef int (*successor_phi_fn)         PARAMS ((rtx, int, int, void *));\n extern int for_each_successor_phi       PARAMS ((basic_block bb,\n \t\t\t\t\t\t successor_phi_fn,\n \t\t\t\t\t\t void *));\n+extern int remove_phi_alternative\tPARAMS ((rtx, basic_block));\n+\n \n /* Optimizations.  */\n-/* In dce.c */\n+/* In ssa-dce.c */\n extern void eliminate_dead_code\t\tPARAMS ((void));\n \n /* SSA definitions and uses.  */"}]}