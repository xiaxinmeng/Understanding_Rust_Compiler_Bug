{"sha": "eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxZWU3NTcwYWRhZWMxYmM0MzliM2FmOTMyYjVmZmQ4OGM5YTZmNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T13:57:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T13:57:16Z"}, "message": "[multiple changes]\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb, sem_ch6.adb: Minor code reorganization.\n\t* inline.adb: Minor reformatting.\n\n2014-07-30  Javier Miranda  <miranda@adacore.com>\n\n\t* a-tags.ads: Add comments.\n\nFrom-SVN: r213272", "tree": {"sha": "821951459deb7358c464d099d82a54dfd2089171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/821951459deb7358c464d099d82a54dfd2089171"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/comments", "author": null, "committer": null, "parents": [{"sha": "2178830b048787f68c0b8b7c3dd3d26580a795aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2178830b048787f68c0b8b7c3dd3d26580a795aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2178830b048787f68c0b8b7c3dd3d26580a795aa"}], "stats": {"total": 79, "additions": 48, "deletions": 31}, "files": [{"sha": "898480695140c1d36ac9ef7daa7777cd693105be", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "patch": "@@ -1,3 +1,12 @@\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb, sem_ch6.adb: Minor code reorganization.\n+\t* inline.adb: Minor reformatting.\n+\n+2014-07-30  Javier Miranda  <miranda@adacore.com>\n+\n+\t* a-tags.ads: Add comments.\n+\n 2014-07-30  Pat Rogers  <rogers@adacore.com>\n \n \t* gnat_rm.texi: Minor word error."}, {"sha": "f8d92b088760454d71230ecd20ea3aa7a7b14198", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "patch": "@@ -33,11 +33,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  The operations in this package provide the guarantee that all dispatching\n---  calls on primitive operations of tagged types and interfaces take constant\n---  time (in terms of source lines executed), that is to say, the cost of these\n---  calls is independent of the number of primitives of the type or interface,\n---  and independent of the number of ancestors or interface progenitors that a\n+--  For performance analysis, take into account that the operations in this\n+--  package provide the guarantee that all dispatching calls on primitive\n+--  operations of tagged types and interfaces take constant time (in terms\n+--  of source lines executed), that is to say, the cost of these calls is\n+--  independent of the number of primitives of the type or interface, and\n+--  independent of the number of ancestors or interface progenitors that a\n --  tagged type may have.\n \n --  The following subprograms of the public part of this package take constant\n@@ -51,9 +52,17 @@\n --  The following subprograms of the public part of this package take non\n --  constant time (in terms of sources line executed):\n \n---    Descendant_Tag (when used with a locally defined tagged type)\n---    Internal_Tag (when used with a locally defined tagged type)\n---    Interface_Ancestor_Tags\n+--    Internal_Tag (when used with a locally defined tagged type), because in\n+--    such case this routine processes the external tag, extract from it an\n+--    address available there, and convert it into the tag value returned by\n+--    this function. The number of instructions executed is not constant since\n+--    it depends on the length of the external tag string.\n+\n+--    Descendant_Tag (when used with a locally defined tagged type), because\n+--    it relies on the subprogram Internal_Tag() to provide its functionality.\n+\n+--    Interface_Ancestor_Tags, because this function returns a table whose\n+--    length depends on the number of interfaces covered by a tagged type.\n \n with System.Storage_Elements;\n "}, {"sha": "f3a04debc810c51ae58ed2503f53a2e496aa9bb1", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "patch": "@@ -1697,9 +1697,9 @@ package body Inline is\n       --  is analyzed, as this is where a pragma SPARK_Mode might be inserted.\n \n       elsif Present (Spec_Id)\n-        and then (No (SPARK_Pragma (Spec_Id))\n-                    or else\n-                  Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Spec_Id)) /= On)\n+        and then\n+          (No (SPARK_Pragma (Spec_Id))\n+            or else Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Spec_Id)) /= On)\n       then\n          return False;\n \n@@ -1709,8 +1709,7 @@ package body Inline is\n       elsif Instantiation_Location (Sloc (Id)) /= No_Location then\n          return False;\n \n-      --  Predicate functions are treated specially by GNATprove. Do not inline\n-      --  them.\n+      --  Don't inline predicate functions (treated specially by GNATprove)\n \n       elsif Is_Predicate_Function (Id) then\n          return False;"}, {"sha": "d98c7c21c764490ae7cc9f810815a8446ff6575f", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "patch": "@@ -3070,12 +3070,13 @@ package body Sem_Ch6 is\n                   declare\n                      Body_Spec : constant Node_Id :=\n                                    Copy_Separate_Tree (Specification (N));\n-                     New_Decl : constant Node_Id :=\n-                                  Make_Subprogram_Declaration (Loc,\n-                                    Copy_Separate_Tree (Specification (N)));\n+                     New_Decl  : constant Node_Id :=\n+                                   Make_Subprogram_Declaration (Loc,\n+                                     Copy_Separate_Tree (Specification (N)));\n+\n                      SPARK_Mode_Aspect : Node_Id;\n-                     Aspects : List_Id;\n-                     Prag, Aspect : Node_Id;\n+                     Aspects           : List_Id;\n+                     Prag, Aspect      : Node_Id;\n \n                   begin\n                      Insert_Before (N, New_Decl);\n@@ -3093,8 +3094,7 @@ package body Sem_Ch6 is\n                      Analyze (New_Decl);\n \n                      --  The analysis of the generated subprogram declaration\n-                     --  may have introduced pragmas, which need to be\n-                     --  analyzed.\n+                     --  may have introduced pragmas that need to be analyzed.\n \n                      Prag := Next (New_Decl);\n                      while Prag /= N loop\n@@ -3113,8 +3113,7 @@ package body Sem_Ch6 is\n                         SPARK_Mode_Aspect :=\n                           New_Copy (Find_Aspect (Spec_Id, Aspect_SPARK_Mode));\n                         Set_Analyzed (SPARK_Mode_Aspect, False);\n-                        Aspects := New_List;\n-                        Append (SPARK_Mode_Aspect, Aspects);\n+                        Aspects := New_List (SPARK_Mode_Aspect);\n                         Set_Aspect_Specifications (N, Aspects);\n                      end if;\n "}, {"sha": "f82548c67ab6ca3b10360d40034d9454561ff7d8", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "patch": "@@ -6216,15 +6216,16 @@ package body Sem_Res is\n          --  being inlined.\n \n          declare\n-            Nam_Alias : constant Entity_Id := Ultimate_Alias (Nam);\n-            Decl : constant Node_Id := Unit_Declaration_Node (Nam_Alias);\n+            Nam_UA : constant Entity_Id := Ultimate_Alias (Nam);\n+            Decl   : constant Node_Id   := Unit_Declaration_Node (Nam_UA);\n+\n          begin\n             --  If the subprogram is not eligible for inlining in GNATprove\n             --  mode, do nothing.\n \n-            if not Can_Be_Inlined_In_GNATprove_Mode (Nam_Alias, Empty)\n-              or else Nkind (Decl) /= N_Subprogram_Declaration\n-              or else not Is_Inlined_Always (Nam_Alias)\n+            if Nkind (Decl) /= N_Subprogram_Declaration\n+              or else not Is_Inlined_Always (Nam_UA)\n+              or else not Can_Be_Inlined_In_GNATprove_Mode (Nam_UA, Empty)\n             then\n                null;\n \n@@ -6234,7 +6235,7 @@ package body Sem_Res is\n             elsif In_Assertion_Expr /= 0 then\n                Error_Msg_NE (\"?cannot inline call to &\", N, Nam);\n                Error_Msg_N (\"\\call appears in assertion expression\", N);\n-               Set_Is_Inlined_Always (Nam_Alias, False);\n+               Set_Is_Inlined_Always (Nam_UA, False);\n \n             --  Inlining should not be performed during pre-analysis\n \n@@ -6246,7 +6247,7 @@ package body Sem_Res is\n                if No (Corresponding_Body (Decl)) then\n                   Error_Msg_NE\n                     (\"?cannot inline call to & (body not seen yet)\", N, Nam);\n-                  Set_Is_Inlined_Always (Nam_Alias, False);\n+                  Set_Is_Inlined_Always (Nam_UA, False);\n \n                --  Nothing to do if there is no body to inline, indicating that\n                --  the subprogram is not suitable for inlining in GNATprove\n@@ -6263,12 +6264,12 @@ package body Sem_Res is\n                   Error_Msg_NE (\"?cannot inline call to &\", N, Nam);\n                   Error_Msg_N\n                     (\"\\call appears in potentially unevaluated context\", N);\n-                  Set_Is_Inlined_Always (Nam_Alias, False);\n+                  Set_Is_Inlined_Always (Nam_UA, False);\n \n                --  Otherwise, inline the call\n \n                else\n-                  Expand_Inlined_Call (N, Nam_Alias, Nam);\n+                  Expand_Inlined_Call (N, Nam_UA, Nam);\n                end if;\n             end if;\n          end;"}]}