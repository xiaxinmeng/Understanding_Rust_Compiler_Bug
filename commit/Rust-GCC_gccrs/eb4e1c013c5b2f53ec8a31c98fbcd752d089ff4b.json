{"sha": "eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI0ZTFjMDEzYzViMmY1M2VjOGEzMWM5OGZiY2Q3NTJkMDg5ZmY0Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-06-19T18:52:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-06-19T18:52:04Z"}, "message": "function.c (free_after_compilation): Do not free computed_goto_common*.\n\n\n\n\t* function.c (free_after_compilation): Do not free computed_goto_common*.\n\t* function.h (struct function): Kill computed_goto_common*.\n\t* stmt.c (expand_computed_goto): Do not commonize the computed gotos.\n\t* tree-cfg.c (disband_implicit_edges): Do not forward across the\n\tcommonized computed goto.\n\nFrom-SVN: r83393", "tree": {"sha": "30da390cd33e90e6db68cf86fe6de34dadaf8ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30da390cd33e90e6db68cf86fe6de34dadaf8ca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/comments", "author": null, "committer": null, "parents": [{"sha": "bc443e6def9f79e0fbfa1d3b70e59a158c85ebd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc443e6def9f79e0fbfa1d3b70e59a158c85ebd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc443e6def9f79e0fbfa1d3b70e59a158c85ebd9"}], "stats": {"total": 44, "additions": 11, "deletions": 33}, "files": [{"sha": "22d6a04a344d05241c691998f0da529269e294c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "patch": "@@ -1,3 +1,11 @@\n+2004-06-19  Jan Hubicka  <jh@suse.cz>\n+\n+\t* function.c (free_after_compilation): Do not free computed_goto_common*.\n+\t* function.h (struct function): Kill computed_goto_common*.\n+\t* stmt.c (expand_computed_goto): Do not commonize the computed gotos.\n+\t* tree-cfg.c (disband_implicit_edges): Do not forward across the\n+\tcommonized computed goto.\n+\n 2004-06-19  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* doc/invoke.texi: Remove obsolete comment regarding PA 2.0 support"}, {"sha": "f4f2940f2ebd24412a15194f9e63a8f44f66229a", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "patch": "@@ -440,8 +440,6 @@ free_after_compilation (struct function *f)\n   f->x_cleanup_label = NULL;\n   f->x_return_label = NULL;\n   f->x_naked_return_label = NULL;\n-  f->computed_goto_common_label = NULL;\n-  f->computed_goto_common_reg = NULL;\n   f->x_save_expr_regs = NULL;\n   f->x_stack_slot_list = NULL;\n   f->x_rtl_expr_chain = NULL;"}, {"sha": "6dd0f3078047061f6422c30c69d092d6167d95e2", "filename": "gcc/function.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "patch": "@@ -259,10 +259,6 @@ struct function GTY(())\n      on machines which require execution of the epilogue on all returns.  */\n   rtx x_naked_return_label;\n \n-  /* Label and register for unswitching computed gotos.  */\n-  rtx computed_goto_common_label;\n-  rtx computed_goto_common_reg;\n-\n   /* List (chain of EXPR_LISTs) of pseudo-regs of SAVE_EXPRs.\n      So we can mark them all live at the end of the function, if nonopt.  */\n   rtx x_save_expr_regs;"}, {"sha": "aa970dfd2fb09f121ab8fe6b5b5f74b3316c3ba5", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "patch": "@@ -502,23 +502,8 @@ expand_computed_goto (tree exp)\n   x = convert_memory_address (Pmode, x);\n \n   emit_queue ();\n-\n-  if (! cfun->computed_goto_common_label)\n-    {\n-      cfun->computed_goto_common_reg = copy_to_mode_reg (Pmode, x);\n-      cfun->computed_goto_common_label = gen_label_rtx ();\n-\n-      do_pending_stack_adjust ();\n-      emit_label (cfun->computed_goto_common_label);\n-      emit_indirect_jump (cfun->computed_goto_common_reg);\n-\n-      current_function_has_computed_jump = 1;\n-    }\n-  else\n-    {\n-      emit_move_insn (cfun->computed_goto_common_reg, x);\n-      emit_jump (cfun->computed_goto_common_label);\n-    }\n+  do_pending_stack_adjust ();\n+  emit_indirect_jump (x);\n }\n \f\n /* Handle goto statements and the labels that they can go to.  */"}, {"sha": "8babdc293c534ff089b35520b344eacc4d63022e", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b", "patch": "@@ -2574,7 +2574,7 @@ disband_implicit_edges (void)\n   basic_block bb;\n   block_stmt_iterator last;\n   edge e;\n-  tree stmt, label, forward;\n+  tree stmt, label;\n \n   FOR_EACH_BB (bb)\n     {\n@@ -2640,15 +2640,6 @@ disband_implicit_edges (void)\n \n       label = tree_block_label (e->dest);\n \n-      /* If this is a goto to a goto, jump to the final destination.\n-         Handles unfactoring of the computed jumps.\n-         ??? Why bother putting this back together when rtl is just\n-\t about to take it apart again?  */\n-      forward = last_and_only_stmt (e->dest);\n-      if (forward\n-\t  && TREE_CODE (forward) == GOTO_EXPR)\n-\tlabel = GOTO_DESTINATION (forward);\n-\n       stmt = build1 (GOTO_EXPR, void_type_node, label);\n       SET_EXPR_LOCUS (stmt, e->goto_locus);\n       bsi_insert_after (&last, stmt, BSI_NEW_STMT);"}]}