{"sha": "1c53d72bec3e943a4f57f9b5530626a2e6882eef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM1M2Q3MmJlYzNlOTQzYTRmNTdmOWI1NTMwNjI2YTJlNjg4MmVlZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-09-06T04:49:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-09-06T04:49:33Z"}, "message": "call.c (implicit_conversion): Fix value-init of enums.\n\n\t* call.c (implicit_conversion): Fix value-init of enums.\n\t(convert_like_real): Likewise.\n\nFrom-SVN: r163897", "tree": {"sha": "415af281e90a9fe5a6b85fcc53d69d7de9260fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/415af281e90a9fe5a6b85fcc53d69d7de9260fd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c53d72bec3e943a4f57f9b5530626a2e6882eef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c53d72bec3e943a4f57f9b5530626a2e6882eef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c53d72bec3e943a4f57f9b5530626a2e6882eef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c53d72bec3e943a4f57f9b5530626a2e6882eef/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be2b93e68af97a17f24c8f0a5695118502f1a71b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2b93e68af97a17f24c8f0a5695118502f1a71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be2b93e68af97a17f24c8f0a5695118502f1a71b"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "389842dd90ba2487f8c4013c86920443f857252d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c53d72bec3e943a4f57f9b5530626a2e6882eef/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c53d72bec3e943a4f57f9b5530626a2e6882eef/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1c53d72bec3e943a4f57f9b5530626a2e6882eef", "patch": "@@ -1,5 +1,8 @@\n 2010-09-06  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (implicit_conversion): Fix value-init of enums.\n+\t(convert_like_real): Likewise.\n+\n \t* decl.c (cp_finish_decl): Don't change init for auto deduction.\n \n \t* pt.c (fold_non_dependent_expr_sfinae): Split out from..."}, {"sha": "54a711af53ca4ebdc4458541003a84252817144f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c53d72bec3e943a4f57f9b5530626a2e6882eef/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c53d72bec3e943a4f57f9b5530626a2e6882eef/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=1c53d72bec3e943a4f57f9b5530626a2e6882eef", "patch": "@@ -1457,7 +1457,7 @@ implicit_conversion (tree to, tree from, tree expr, bool c_cast_p,\n \t  tree elt;\n \n \t  if (nelts == 0)\n-\t    elt = integer_zero_node;\n+\t    elt = build_value_init (to, tf_none);\n \t  else if (nelts == 1)\n \t    elt = CONSTRUCTOR_ELT (expr, 0)->value;\n \t  else\n@@ -5050,7 +5050,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t{\n \t  int nelts = CONSTRUCTOR_NELTS (expr);\n \t  if (nelts == 0)\n-\t    expr = integer_zero_node;\n+\t    expr = build_value_init (totype, tf_warning_or_error);\n \t  else if (nelts == 1)\n \t    expr = CONSTRUCTOR_ELT (expr, 0)->value;\n \t  else"}, {"sha": "da06cd344f98bf3c6c57855ea845717fc781045d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c53d72bec3e943a4f57f9b5530626a2e6882eef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c53d72bec3e943a4f57f9b5530626a2e6882eef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c53d72bec3e943a4f57f9b5530626a2e6882eef", "patch": "@@ -1,5 +1,7 @@\n 2010-09-06  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/initlist42.C: New.\n+\n \t* g++.dg/cpp0x/auto19.C: New.\n \n \t* g++.dg/template/sfinae25.C: New."}, {"sha": "e63959deb21375fdea0943140dbef2e78cde0522", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist42.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c53d72bec3e943a4f57f9b5530626a2e6882eef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c53d72bec3e943a4f57f9b5530626a2e6882eef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist42.C?ref=1c53d72bec3e943a4f57f9b5530626a2e6882eef", "patch": "@@ -0,0 +1,13 @@\n+// { dg-options -std=c++0x }\n+\n+enum Unscoped { };\n+enum class Scoped { };\n+\n+Unscoped bar(Unscoped x) { return x; }\n+Scoped bar(Scoped x) { return x; }\n+\n+auto var1u = bar(Unscoped()); // OK\n+auto var1s = bar(Scoped()); // OK\n+\n+auto var2u = bar(Unscoped{}); // #1 Error, but should work\n+auto var2s = bar(Scoped{}); // #2 Error, but should work"}]}