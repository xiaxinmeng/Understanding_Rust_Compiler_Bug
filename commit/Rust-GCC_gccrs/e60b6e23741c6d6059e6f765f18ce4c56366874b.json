{"sha": "e60b6e23741c6d6059e6f765f18ce4c56366874b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYwYjZlMjM3NDFjNmQ2MDU5ZTZmNzY1ZjE4Y2U0YzU2MzY2ODc0Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-01-09T16:04:35Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-03T10:01:39Z"}, "message": "[Ada] Initial infrastructure for adding a tree checker\n\n2020-06-03  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* frontend.adb (Frontend): Call (dummy for now) tree checker.\n\t* debug.adb: Reserve -gnatd_V for the tree checker.\n\t* vast.ads, vast.adb: New files.\n\t* gcc-interface/Make-lang.in: Add vast.o.", "tree": {"sha": "a9d06feb928b7ea4a945b531cf10cf202d81a6a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9d06feb928b7ea4a945b531cf10cf202d81a6a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e60b6e23741c6d6059e6f765f18ce4c56366874b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60b6e23741c6d6059e6f765f18ce4c56366874b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e60b6e23741c6d6059e6f765f18ce4c56366874b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60b6e23741c6d6059e6f765f18ce4c56366874b/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da566eeb31056d9f40ab48688dc3fe680535ce80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da566eeb31056d9f40ab48688dc3fe680535ce80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da566eeb31056d9f40ab48688dc3fe680535ce80"}], "stats": {"total": 103, "additions": 101, "deletions": 2}, "files": [{"sha": "764228e78fc724119e64fbfe6ce73458b06dd5cd", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=e60b6e23741c6d6059e6f765f18ce4c56366874b", "patch": "@@ -193,7 +193,7 @@ package body Debug is\n    --  d_S\n    --  d_T  Output trace information on invocation path recording\n    --  d_U\n-   --  d_V\n+   --  d_V  Enable verifications on the expanded tree\n    --  d_W\n    --  d_X\n    --  d_Y\n@@ -1012,9 +1012,12 @@ package body Debug is\n    --       it is checked, and the progress of the recursive trace through\n    --       elaboration calls at compile time.\n \n-   --  d_T  The compiler outputs trance information to standard output whenever\n+   --  d_T  The compiler outputs trace information to standard output whenever\n    --       an invocation path is recorded.\n \n+   --  d_V  Enable verification of the expanded code before calling the backend\n+   --       and generate error messages on each inconsistency found.\n+\n    --  d1   Error messages have node numbers where possible. Normally error\n    --       messages have only source locations. This option is useful when\n    --       debugging errors caused by expanded code, where the source location"}, {"sha": "0fd3424b38b5f8305a2930523986e88fc19c3d22", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=e60b6e23741c6d6059e6f765f18ce4c56366874b", "patch": "@@ -66,6 +66,7 @@ with Sinput.L; use Sinput.L;\n with SCIL_LL;\n with Tbuild;   use Tbuild;\n with Types;    use Types;\n+with VAST;\n \n procedure Frontend is\n begin\n@@ -505,6 +506,12 @@ begin\n       null;\n    end if;\n \n+   --  Verify the validity of the tree\n+\n+   if Debug_Flag_Underscore_VV then\n+      VAST.Check_Tree (Cunit (Main_Unit));\n+   end if;\n+\n    --  Dump the source now. Note that we do this as soon as the analysis\n    --  of the tree is complete, because it is not just a dump in the case\n    --  of -gnatD, where it rewrites all source locations in the tree."}, {"sha": "12a0c58d97643983bf66847e14face6e6c018c18", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=e60b6e23741c6d6059e6f765f18ce4c56366874b", "patch": "@@ -481,6 +481,7 @@ GNAT_ADA_OBJS =\t\\\n  ada/urealp.o\t\\\n  ada/usage.o\t\\\n  ada/validsw.o\t\\\n+ ada/vast.o\t\\\n  ada/warnsw.o\t\\\n  ada/widechar.o\n "}, {"sha": "87de26ed8519499f64dd40e62ca9d3eca10bf46d", "filename": "gcc/ada/vast.adb", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Fvast.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Fvast.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvast.adb?ref=e60b6e23741c6d6059e6f765f18ce4c56366874b", "patch": "@@ -0,0 +1,46 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                                 V A S T                                  --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--             Copyright (C) 2020, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Dummy implementation\n+\n+package body VAST is\n+\n+   ----------------\n+   -- Check_Tree --\n+   ----------------\n+\n+   procedure Check_Tree (GNAT_Root : Node_Id) is\n+      pragma Unreferenced (GNAT_Root);\n+   begin\n+      null;\n+   end Check_Tree;\n+\n+end VAST;"}, {"sha": "01dfbfde635fca7df2d009b90b6ac9d348b40c46", "filename": "gcc/ada/vast.ads", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Fvast.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60b6e23741c6d6059e6f765f18ce4c56366874b/gcc%2Fada%2Fvast.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvast.ads?ref=e60b6e23741c6d6059e6f765f18ce4c56366874b", "patch": "@@ -0,0 +1,42 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                                 V A S T                                  --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2020, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package is the entry point for VAST: Verifier for the Ada Semantic\n+--  Tree.\n+\n+with Types; use Types;\n+\n+package VAST is\n+\n+   procedure Check_Tree (GNAT_Root : Node_Id);\n+   --  Check the validity of the given Root tree\n+\n+end VAST;"}]}