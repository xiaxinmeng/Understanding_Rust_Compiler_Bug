{"sha": "bfef3a711a4ee9cd649f03555ffa2764e4e33d54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZlZjNhNzExYTRlZTljZDY0OWYwMzU1NWZmYTI3NjRlNGUzM2Q1NA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2011-07-21T05:48:03Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2011-07-21T05:48:03Z"}, "message": "array (array::at, [...]): Mark constexpr.\n\n2011-07-20  Benjamin Kosnik  <bkoz@redhat.com>\n\t    Daniel Krugler  <daniel.kruegler@googlemail.com>\n\n\t* include/std/array (array::at, array::operator[]): Mark constexpr.\n\t* testsuite/23_containers/array/requirements/\n\tconstexpr_element_access.cc: Add.\n\n\nCo-Authored-By: Daniel Krugler <daniel.kruegler@googlemail.com>\n\nFrom-SVN: r176550", "tree": {"sha": "3307f0f8f04a21abe09deaa14276b8d1498d7353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3307f0f8f04a21abe09deaa14276b8d1498d7353"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfef3a711a4ee9cd649f03555ffa2764e4e33d54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfef3a711a4ee9cd649f03555ffa2764e4e33d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfef3a711a4ee9cd649f03555ffa2764e4e33d54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfef3a711a4ee9cd649f03555ffa2764e4e33d54/comments", "author": null, "committer": null, "parents": [{"sha": "1b97ec17bcaa096bb543a2d96b9290747c18399d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b97ec17bcaa096bb543a2d96b9290747c18399d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b97ec17bcaa096bb543a2d96b9290747c18399d"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "ae002030156f7e3d30c1dacd89f1a958dc3424cb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfef3a711a4ee9cd649f03555ffa2764e4e33d54/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfef3a711a4ee9cd649f03555ffa2764e4e33d54/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bfef3a711a4ee9cd649f03555ffa2764e4e33d54", "patch": "@@ -1,9 +1,16 @@\n+2011-07-20  Benjamin Kosnik  <bkoz@redhat.com>\n+\t    Daniel Krugler  <daniel.kruegler@googlemail.com>\n+\n+\t* include/std/array (array::at, array::operator[]): Mark constexpr.\n+\t* testsuite/23_containers/array/requirements/\n+\tconstexpr_element_access.cc: Add.\n+\n 2011-07-20  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Daniel Krugler  <daniel.kruegler@googlemail.com>\n \n \t* include/std/chrono: (system_clock::is_steady): Update to N3291\n \tfrom is_monotonic.\n-\t(time_point): Add constexpr to nonmember arithmetic operators.\n+\t(time_point): Mark nonmember arithmetic operators constexpr.\n \t* src/chrono.cc: Modify for above.\n \t* src/compatibility-c++0x.cc: Same.\n \t* testsuite/20_util/time_point/nonmember/constexpr.cc: New."}, {"sha": "0abb628aded01fbadbe8fb16a992e2477df80d59", "filename": "libstdc++-v3/include/std/array", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfef3a711a4ee9cd649f03555ffa2764e4e33d54/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfef3a711a4ee9cd649f03555ffa2764e4e33d54/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Farray?ref=bfef3a711a4ee9cd649f03555ffa2764e4e33d54", "patch": "@@ -35,6 +35,7 @@\n # include <bits/c++0x_warning.h>\n #else\n \n+#include <stdexcept>\n #include <bits/stl_algobase.h>\n #include <bits/range_access.h>\n \n@@ -150,8 +151,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       operator[](size_type __n)\n       { return _M_instance[__n]; }\n \n-      const_reference\n-      operator[](size_type __n) const\n+      constexpr const_reference\n+      operator[](size_type __n) const noexcept\n       { return _M_instance[__n]; }\n \n       reference\n@@ -162,12 +163,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn _M_instance[__n];\n       }\n \n-      const_reference\n+      constexpr const_reference\n       at(size_type __n) const\n       {\n-\tif (__n >= _Nm)\n-\t  std::__throw_out_of_range(__N(\"array::at\"));\n-\treturn _M_instance[__n];\n+\treturn __n < _Nm ? _M_instance[__n] : \n+#ifdef __EXCEPTIONS\n+\t                   throw out_of_range(__N(\"array::at\"));\n+#else\n+\t                   _M_instance[0];\n+#endif\n       }\n \n       reference "}, {"sha": "23bc104aeab1e91fda6196c7761000e4ca677d25", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/constexpr_element_access.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfef3a711a4ee9cd649f03555ffa2764e4e33d54/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_element_access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfef3a711a4ee9cd649f03555ffa2764e4e33d54/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_element_access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_element_access.cc?ref=bfef3a711a4ee9cd649f03555ffa2764e4e33d54", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <array>\n+\n+int main()\n+{\n+  // array\n+  typedef std::array<std::size_t, 6> array_type;\n+  constexpr array_type a = { 0, 55, 66, 99, 4115, 2 };\n+  constexpr auto v1 = a[1];\n+  constexpr auto v2 = a.at(2);\n+  return 0;\n+}"}]}