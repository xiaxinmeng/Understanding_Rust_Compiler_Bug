{"sha": "b192711e7c9aceec37d951b32a79d2df8c424f6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE5MjcxMWU3YzlhY2VlYzM3ZDk1MWIzMmE3OWQyZGY4YzQyNGY2Yw==", "commit": {"author": {"name": "Rodney Brown", "email": "RodneyBrown@pmsc.com", "date": "2000-07-06T01:07:01Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-07-06T01:07:01Z"}, "message": "invoke.texi: Fix minor typos\n\n        * invoke.texi: Fix minor typos\n        * md.texi: Fix minor typos\n\nFrom-SVN: r34880", "tree": {"sha": "fdc791fe176ee2bc63de0cccdc07e7fa36251767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdc791fe176ee2bc63de0cccdc07e7fa36251767"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b192711e7c9aceec37d951b32a79d2df8c424f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b192711e7c9aceec37d951b32a79d2df8c424f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b192711e7c9aceec37d951b32a79d2df8c424f6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b192711e7c9aceec37d951b32a79d2df8c424f6c/comments", "author": null, "committer": null, "parents": [{"sha": "ff633c68b3fc1d969a1627c7b2eb2f78e4604bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff633c68b3fc1d969a1627c7b2eb2f78e4604bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff633c68b3fc1d969a1627c7b2eb2f78e4604bab"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "7c41998e9cd7ccc6ba8b082d1d943a37883c6225", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b192711e7c9aceec37d951b32a79d2df8c424f6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b192711e7c9aceec37d951b32a79d2df8c424f6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b192711e7c9aceec37d951b32a79d2df8c424f6c", "patch": "@@ -1,3 +1,8 @@\n+2000-07-05  Rodney Brown  <RodneyBrown@pmsc.com>\n+\n+\t* invoke.texi: Fix minor typos\n+\t* md.texi: Fix minor typos\n+\n 2000-07-05  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cpplib.c (_cpp_parse_assertion): Fix buffer overrun."}, {"sha": "f7643ed1106fd0827c8712c93a6d8a827decdfb6", "filename": "gcc/invoke.texi", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b192711e7c9aceec37d951b32a79d2df8c424f6c/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b192711e7c9aceec37d951b32a79d2df8c424f6c/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=b192711e7c9aceec37d951b32a79d2df8c424f6c", "patch": "@@ -33,7 +33,7 @@ options for compiling C++ programs.\n @cindex grouping options\n @cindex options, grouping\n The @code{gcc} program accepts options and file names as operands.  Many\n-options have multiletter names; therefore multiple single-letter options\n+options have multi-letter names; therefore multiple single-letter options\n may @emph{not} be grouped: @samp{-dr} is very different from @w{@samp{-d\n -r}}.\n \n@@ -1378,7 +1378,7 @@ In this example, g++ will synthesize a default @samp{A& operator =\n @cindex diagnostic messages\n @cindex message formatting\n \n-Traditionally, diagnostic messages have been formatted irrespetive of\n+Traditionally, diagnostic messages have been formatted irrespective of\n the output device's aspect (e.g. its width, ...).  The options described\n below can be used to control the diagnostic messages formatting\n algorithm, e.g. how many characters per line, how often source location\n@@ -1395,7 +1395,7 @@ line-wrapping will be done; each error message will appear on a single\n line.\n \n @item -fdiagnostics-show-location=once\n-Only meaningful in line-wrapping mode.  Intructs the diagnostic messages\n+Only meaningful in line-wrapping mode.  Instructs the diagnostic messages\n reporter to emit @emph{once} source location information; that is, in\n case the message is too long to fit on a single physical line and has to\n be wrapped, the source location won't be emitted (as prefix) again,\n@@ -1406,7 +1406,7 @@ behaviour.\n Only meaningful in line-wrapping mode.  Instructs the diagnostic\n messages reporter to emit the same source location information (as\n prefix) for physical lines that result from the process of breaking a\n-a message which is too long to fit on a signe line.\n+a message which is too long to fit on a single line.\n \n @end table\n \n@@ -1603,7 +1603,7 @@ To suppress this warning cast the expression to @samp{void}.\n All all the above @samp{-Wunused} options combined.\n \n In order to get a warning about an unused function parameter, you must\n-either specify @samp{-W -Wunused} or separatly specify\n+either specify @samp{-W -Wunused} or separately specify\n @samp{-Wunused-parameter}.\n \n @item -Wuninitialized\n@@ -1664,7 +1664,7 @@ another common case:\n This has no bug because @code{save_y} is used only if it is set.\n \n @cindex @code{longjmp} warnings\n-This option also warns when a nonvolatile automatic variable might be\n+This option also warns when a non-volatile automatic variable might be\n changed by a call to @code{longjmp}.  These warnings as well are possible\n only in optimizing compilation.\n \n@@ -2328,7 +2328,7 @@ also printed.\n @item v\n For each of the other indicated dump files (except for\n @file{@var{file}.00.rtl}), dump a representation of the control flow graph\n-suitible for viewing with VCG to @file{@var{file}.@var{pass}.vcg}.\n+suitable for viewing with VCG to @file{@var{file}.@var{pass}.vcg}.\n @item w\n Dump after the second flow pass to @file{@var{file}.19.flow2}. \n @item x\n@@ -2343,7 +2343,7 @@ Dump after the peephole2 pass to @file{@var{file}.21.peephole2}.\n @item -fdump-unnumbered\n When doing debugging dumps (see -d option above), suppress instruction\n numbers and line number note output.  This makes it more feasible to\n-use diff on debugging dumps for compiler invokations with different\n+use diff on debugging dumps for compiler invocations with different\n options, in particular with and without -g.\n \n @item -fdump-translation-unit-@var{file} (C++ only)\n@@ -3663,7 +3663,7 @@ Like %@{@code{S}*@}, but don't put a blank between a switch and its\n argument.  Thus %@{^o*@} would only generate one argument, not two.\n \n @item %@{<@code{S}@}\n-Remove all occurences of @code{S} from the command line.  Note - this\n+Remove all occurrences of @code{S} from the command line.  Note - this\n command is position dependent.  @samp{%} commands in the spec string\n before this option will see @code{S}, @samp{%} commands in the spec\n string after this option will not.\n@@ -4674,7 +4674,7 @@ armv3, armv3m, armv4, armv4t, armv5.\n @itemx -mfp=<number>\n @kindex -mfpe=\n @kindex -mfp=\n-This specifes the version of the floating point emulation available on\n+This specifies the version of the floating point emulation available on\n the target.  Permissible values are 2 and 3.  @samp{-mfp=} is a synonym\n for @samp{-mfpe=} to support older versions of GCC.\n \n@@ -4711,7 +4711,7 @@ which have the @samp{short-call} attribute, functions that are inside\n the scope of a @samp{#pragma no_long_calls} directive and functions whose\n definitions have already been compiled within the current compilation\n unit, will not be turned into long calls.  The exception to this rule is\n-that weak function defintions, functions with the @samp{long-call}\n+that weak function definitions, functions with the @samp{long-call}\n attribute or the @samp{section} attribute, and functions that are within\n the scope of a @samp{#pragma long_calls} directive, will always be\n turned into long calls.\n@@ -5715,7 +5715,7 @@ explanation of the default, and the width of pointers.\n Force long, int, and pointer types to be 32 bits wide.\n \n If none of @samp{-mlong32}, @samp{-mlong64}, or @samp{-mint64} are set,\n-the size of ints, longs, and pointers depends on the ABI and ISA choosen.\n+the size of ints, longs, and pointers depends on the ABI and ISA chosen.\n For @samp{-mabi=32}, and @samp{-mabi=n32}, ints and longs are 32 bits\n wide.  For @samp{-mabi=64}, ints are 32 bits, and longs are 64 bits wide.\n For @samp{-mabi=eabi} and either @samp{-mips1} or @samp{-mips2}, ints\n@@ -6081,7 +6081,7 @@ The stack is required to be aligned on a 4 byte boundary.  On Pentium\n and PentiumPro, @code{double} and @code{long double} values should be\n aligned to an 8 byte boundary (see @samp{-malign-double}) or suffer\n significant run time performance penalties.  On Pentium III, the\n-Streaming SIMD Extention (SSE) data type @code{__m128} suffers similar\n+Streaming SIMD Extension (SSE) data type @code{__m128} suffers similar\n penalties if it is not 16 byte aligned.\n \n To ensure proper alignment of this values on the stack, the stack boundary\n@@ -6108,7 +6108,7 @@ improved scheduling and reduced dependencies.\n @kindex -maccumulate-outgoing-args\n If enabled, the maximum amount of space required for outgoing arguments will be\n computed in the function prologue. This in faster on most modern CPUs\n-because of reduced dependecies, improved scheduling and reduced stack usage\n+because of reduced dependencies, improved scheduling and reduced stack usage\n when preferred stack boundary is not equal to 2.  The drawback is a notable\n increase in code size. This switch implies -mno-push-args.\n \n@@ -6189,7 +6189,7 @@ Such code is suitable for level 0 PA systems and kernels.\n Generate code that assumes calls never cross space boundaries.  This\n allows GCC to emit code which performs faster indirect calls.\n \n-This option will not work in the presense of shared libraries or nested\n+This option will not work in the presence of shared libraries or nested\n functions.\n \n @item -mlong-load-store\n@@ -6543,7 +6543,7 @@ for the EV6) and supports the BWX, CIX, and MAX extensions.\n @item -mmemory-latency=@var{time}\n Sets the latency the scheduler should assume for typical memory\n references as seen by the application.  This number is highly\n-dependant on the memory access patterns used by the application\n+dependent on the memory access patterns used by the application\n and the size of the external cache on the machine.\n \n Valid options for @var{time} are\n@@ -6756,7 +6756,7 @@ emit a RPTS instruction instead of a RPTB.  If no value is specified,\n then a RPTS will be emitted even if the loop count cannot be determined\n at compile time.  Note that the repeated instruction following RPTS does\n not have to be reloaded from memory each iteration, thus freeing up the\n-CPU buses for oeprands.  However, since interrupts are blocked by this\n+CPU buses for operands.  However, since interrupts are blocked by this\n instruction, it is disabled by default.\n \n @item -mloop-unsigned\n@@ -7047,7 +7047,7 @@ Use the divide instruction.  (Enabled by default).\n @item -mrelax-immediate\n @itemx -mrelax-immediate\n @itemx -mno-relax-immediate\n-Allow arbitary sized immediated in bit operations.\n+Allow arbitrary sized immediates in bit operations.\n \n @item -mwide-bitfields\n @itemx -mwide-bitfields\n@@ -7057,7 +7057,7 @@ Always treat bitfields as int-sized.\n @item -m4byte-functions\n @itemx -m4byte-functions\n @itemx -mno-4byte-functions\n-Force all functions to be aligfned to a four byte boundary.\n+Force all functions to be aligned to a four byte boundary.\n \n @item -mcallgraph-data\n @itemx -mcallgraph-data\n@@ -7072,7 +7072,7 @@ Prefer word access when reading byte quantities.\n @item -mlittle-endian\n @itemx -mlittle-endian\n @itemx -mbig-endian\n-Genreate code for a little endian target.\n+Generate code for a little endian target.\n \n @item -m210\n @itemx -m210"}, {"sha": "0d453224ff2c0663f44bc3a3639b1284c8feb667", "filename": "gcc/md.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b192711e7c9aceec37d951b32a79d2df8c424f6c/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b192711e7c9aceec37d951b32a79d2df8c424f6c/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=b192711e7c9aceec37d951b32a79d2df8c424f6c", "patch": "@@ -2691,7 +2691,7 @@ hard register or a stack memory reference.\n @cindex @code{prologue} instruction pattern\n @item @samp{prologue}\n This pattern, if defined, emits RTL for entry to a function.  The function\n-entry is resposible for setting up the stack frame, initializing the frame\n+entry is responsible for setting up the stack frame, initializing the frame\n pointer register, saving callee saved registers, etc.\n \n Using a prologue pattern is generally preferred over defining\n@@ -2703,7 +2703,7 @@ instruction scheduling.\n @cindex @code{epilogue} instruction pattern\n @item @samp{epilogue}\n This pattern, if defined, emits RTL for exit from a function.  The function\n-exit is resposible for deallocating the stack frame, restoring callee saved\n+exit is responsible for deallocating the stack frame, restoring callee saved\n registers and emitting the return instruction.\n \n Using an epilogue pattern is generally preferred over defining\n@@ -3768,7 +3768,7 @@ able to schedule around the memory load latency.  It allocates a single\n @code{SImode} register of class @code{GENERAL_REGS} (@code{\"r\"}) that needs\n to be live only at the point just before the arithmetic.\n \n-A real example requring extended scratch lifetimes is harder to come by,\n+A real example requiring extended scratch lifetimes is harder to come by,\n so here's a silly made-up example:\n \n @smallexample\n@@ -4604,7 +4604,7 @@ the @code{predicable} instruction attribute is made.\n @xref{Insn Attributes}.  This attribute must be boolean (i.e. have\n exactly two elements in its @var{list-of-values}).  Further, it must\n not be used with complex expressions.  That is, the default and all\n-uses in the insns must be a simple constant, not dependant on the \n+uses in the insns must be a simple constant, not dependent on the \n alternative or anything else.\n \n For each @code{define_insn} for which the @code{predicable} "}]}