{"sha": "5e9f814d754be790aec5b69a95699a8af2654058", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU5ZjgxNGQ3NTRiZTc5MGFlYzViNjlhOTU2OTlhOGFmMjY1NDA1OA==", "commit": {"author": {"name": "Xionghu Luo", "email": "luoxhu@linux.ibm.com", "date": "2020-11-27T05:38:33Z"}, "committer": {"name": "Xionghu Luo", "email": "luoxhu@linux.ibm.com", "date": "2020-11-27T05:38:33Z"}, "message": "rs6000: Change rs6000_expand_vector_set param\n\nrs6000_expand_vector_set could accept insert either to constant position\nor variable position, so change the operand to reg_or_cint_operand.\n\ngcc/ChangeLog:\n\n2020-11-27  Xionghu Luo  <luoxhu@linux.ibm.com>\n\n\t* config/rs6000/rs6000-call.c (altivec_expand_vec_set_builtin):\n\tChange call param 2 from type int to rtx.\n\t* config/rs6000/rs6000-protos.h (rs6000_expand_vector_set):\n\tLikewise.\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_init):\n\tChange call param 2 from type int to rtx.\n\t(rs6000_expand_vector_set): Likewise.\n\t* config/rs6000/vector.md (vec_set<mode>): Support both constant\n\tand variable index vec_set.", "tree": {"sha": "5c47353bc9725a87669c2f77667625ef3a2fd8b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c47353bc9725a87669c2f77667625ef3a2fd8b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e9f814d754be790aec5b69a95699a8af2654058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9f814d754be790aec5b69a95699a8af2654058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e9f814d754be790aec5b69a95699a8af2654058", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9f814d754be790aec5b69a95699a8af2654058/comments", "author": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xionghul", "id": 4607154, "node_id": "MDQ6VXNlcjQ2MDcxNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4607154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xionghul", "html_url": "https://github.com/xionghul", "followers_url": "https://api.github.com/users/xionghul/followers", "following_url": "https://api.github.com/users/xionghul/following{/other_user}", "gists_url": "https://api.github.com/users/xionghul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xionghul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xionghul/subscriptions", "organizations_url": "https://api.github.com/users/xionghul/orgs", "repos_url": "https://api.github.com/users/xionghul/repos", "events_url": "https://api.github.com/users/xionghul/events{/privacy}", "received_events_url": "https://api.github.com/users/xionghul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3493b0c32815faf003cbd18dd2c1ff30818f5770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3493b0c32815faf003cbd18dd2c1ff30818f5770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3493b0c32815faf003cbd18dd2c1ff30818f5770"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "45bc048b5c7c5e82a65b91637879597f2ea93c55", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9f814d754be790aec5b69a95699a8af2654058/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9f814d754be790aec5b69a95699a8af2654058/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=5e9f814d754be790aec5b69a95699a8af2654058", "patch": "@@ -10890,7 +10890,7 @@ altivec_expand_vec_set_builtin (tree exp)\n   op0 = force_reg (tmode, op0);\n   op1 = force_reg (mode1, op1);\n \n-  rs6000_expand_vector_set (op0, op1, elt);\n+  rs6000_expand_vector_set (op0, op1, GEN_INT (elt));\n \n   return op0;\n }"}, {"sha": "3c4682b0e266b8d69e74b0394b26857ccbe00f72", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9f814d754be790aec5b69a95699a8af2654058/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9f814d754be790aec5b69a95699a8af2654058/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=5e9f814d754be790aec5b69a95699a8af2654058", "patch": "@@ -57,7 +57,7 @@ extern bool rs6000_move_128bit_ok_p (rtx []);\n extern bool rs6000_split_128bit_ok_p (rtx []);\n extern void rs6000_expand_float128_convert (rtx, rtx, bool);\n extern void rs6000_expand_vector_init (rtx, rtx);\n-extern void rs6000_expand_vector_set (rtx, rtx, int);\n+extern void rs6000_expand_vector_set (rtx, rtx, rtx);\n extern void rs6000_expand_vector_extract (rtx, rtx, rtx);\n extern void rs6000_split_vec_extract_var (rtx, rtx, rtx, rtx, rtx);\n extern rtx rs6000_adjust_vec_address (rtx, rtx, rtx, rtx, machine_mode);"}, {"sha": "517467ebc632782181062acc782ad6abf5c66803", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9f814d754be790aec5b69a95699a8af2654058/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9f814d754be790aec5b69a95699a8af2654058/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5e9f814d754be790aec5b69a95699a8af2654058", "patch": "@@ -6788,7 +6788,8 @@ rs6000_expand_vector_init (rtx target, rtx vals)\n       rs6000_expand_vector_init (target, copy);\n \n       /* Insert variable.  */\n-      rs6000_expand_vector_set (target, XVECEXP (vals, 0, one_var), one_var);\n+      rs6000_expand_vector_set (target, XVECEXP (vals, 0, one_var),\n+\t\t\t\tGEN_INT (one_var));\n       return;\n     }\n \n@@ -6977,10 +6978,10 @@ rs6000_expand_vector_init (rtx target, rtx vals)\n   emit_move_insn (target, mem);\n }\n \n-/* Set field ELT of TARGET to VAL.  */\n+/* Set field ELT_RTX of TARGET to VAL.  */\n \n void\n-rs6000_expand_vector_set (rtx target, rtx val, int elt)\n+rs6000_expand_vector_set (rtx target, rtx val, rtx elt_rtx)\n {\n   machine_mode mode = GET_MODE (target);\n   machine_mode inner_mode = GET_MODE_INNER (mode);\n@@ -6994,7 +6995,6 @@ rs6000_expand_vector_set (rtx target, rtx val, int elt)\n   if (VECTOR_MEM_VSX_P (mode))\n     {\n       rtx insn = NULL_RTX;\n-      rtx elt_rtx = GEN_INT (elt);\n \n       if (mode == V2DFmode)\n \tinsn = gen_vsx_set_v2df (target, target, val, elt_rtx);\n@@ -7021,8 +7021,11 @@ rs6000_expand_vector_set (rtx target, rtx val, int elt)\n \t}\n     }\n \n+  gcc_assert (CONST_INT_P (elt_rtx));\n+\n   /* Simplify setting single element vectors like V1TImode.  */\n-  if (GET_MODE_SIZE (mode) == GET_MODE_SIZE (inner_mode) && elt == 0)\n+  if (GET_MODE_SIZE (mode) == GET_MODE_SIZE (inner_mode)\n+      && INTVAL (elt_rtx) == 0)\n     {\n       emit_move_insn (target, gen_lowpart (mode, val));\n       return;\n@@ -7045,8 +7048,7 @@ rs6000_expand_vector_set (rtx target, rtx val, int elt)\n \n   /* Set permute mask to insert element into target.  */\n   for (i = 0; i < width; ++i)\n-    XVECEXP (mask, 0, elt*width + i)\n-      = GEN_INT (i + 0x10);\n+    XVECEXP (mask, 0, INTVAL (elt_rtx) * width + i) = GEN_INT (i + 0x10);\n   x = gen_rtx_CONST_VECTOR (V16QImode, XVEC (mask, 0));\n \n   if (BYTES_BIG_ENDIAN)"}, {"sha": "7aab1887cf5958a32f626af5e4a8873308ee1fa9", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9f814d754be790aec5b69a95699a8af2654058/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9f814d754be790aec5b69a95699a8af2654058/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=5e9f814d754be790aec5b69a95699a8af2654058", "patch": "@@ -1227,10 +1227,10 @@\n (define_expand \"vec_set<mode>\"\n   [(match_operand:VEC_E 0 \"vlogical_operand\")\n    (match_operand:<VEC_base> 1 \"register_operand\")\n-   (match_operand 2 \"const_int_operand\")]\n+   (match_operand 2 \"reg_or_cint_operand\")]\n   \"VECTOR_MEM_ALTIVEC_OR_VSX_P (<MODE>mode)\"\n {\n-  rs6000_expand_vector_set (operands[0], operands[1], INTVAL (operands[2]));\n+  rs6000_expand_vector_set (operands[0], operands[1], operands[2]);\n   DONE;\n })\n "}]}