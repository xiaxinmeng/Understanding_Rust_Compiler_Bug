{"sha": "9e200aafa53204e1c556d82ee4ab8198ad5da48c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUyMDBhYWZhNTMyMDRlMWM1NTZkODJlZTRhYjgxOThhZDVkYTQ4Yw==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-02-24T03:27:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2004-02-24T03:27:11Z"}, "message": "i386.c: Rename pni to sse3.\n\n2004-02-23  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* config/i386/i386.c: Rename pni to sse3.\n\t* config/i386/i386.h: Likewise.\n        * config/i386/i386.md: Likewise.\n\t* config/i386/pmmintrin.h: Likewise.\n\t* doc/extend.texi: Likewise.\n\t* doc/invoke.texi: Likewise.\n\nFrom-SVN: r78349", "tree": {"sha": "638dc5221fcc82301ed6ea1e9ccf99be062c4dae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/638dc5221fcc82301ed6ea1e9ccf99be062c4dae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e200aafa53204e1c556d82ee4ab8198ad5da48c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e200aafa53204e1c556d82ee4ab8198ad5da48c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e200aafa53204e1c556d82ee4ab8198ad5da48c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e200aafa53204e1c556d82ee4ab8198ad5da48c/comments", "author": null, "committer": null, "parents": [{"sha": "4a368ffd957ae319f3e608cd7c2e77d72857d78a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a368ffd957ae319f3e608cd7c2e77d72857d78a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a368ffd957ae319f3e608cd7c2e77d72857d78a"}], "stats": {"total": 111, "additions": 60, "deletions": 51}, "files": [{"sha": "73349383a33413bc804d7b6a67d0327da15bfc47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e200aafa53204e1c556d82ee4ab8198ad5da48c", "patch": "@@ -1,3 +1,12 @@\n+2004-02-23  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* config/i386/i386.c: Rename pni to sse3.\n+\t* config/i386/i386.h: Likewise.\n+        * config/i386/i386.md: Likewise.\n+\t* config/i386/pmmintrin.h: Likewise.\n+\t* doc/extend.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\n 2004-02-23  Zack Weinberg  <zack@codesourcery.com>\n \t    Kazu Hirata  <kazu@cs.umass.edu>\n "}, {"sha": "02f62f4e74e68a5e6845a40e85d1d3f7ec7f3492", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9e200aafa53204e1c556d82ee4ab8198ad5da48c", "patch": "@@ -1391,8 +1391,8 @@ override_options (void)\n   if (x86_arch_always_fancy_math_387 & (1 << ix86_arch))\n     target_flags &= ~MASK_NO_FANCY_MATH_387;\n \n-  /* Turn on SSE2 builtins for -mpni.  */\n-  if (TARGET_PNI)\n+  /* Turn on SSE2 builtins for -msse3.  */\n+  if (TARGET_SSE3)\n     target_flags |= MASK_SSE2;\n \n   /* Turn on SSE builtins for -msse2.  */\n@@ -13072,13 +13072,13 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_SSE2, CODE_FOR_cvtsd2ss, 0, IX86_BUILTIN_CVTSD2SS, 0, 0 },\n   { MASK_SSE2, CODE_FOR_cvtss2sd, 0, IX86_BUILTIN_CVTSS2SD, 0, 0 },\n \n-  /* PNI MMX */\n-  { MASK_PNI, CODE_FOR_addsubv4sf3, \"__builtin_ia32_addsubps\", IX86_BUILTIN_ADDSUBPS, 0, 0 },\n-  { MASK_PNI, CODE_FOR_addsubv2df3, \"__builtin_ia32_addsubpd\", IX86_BUILTIN_ADDSUBPD, 0, 0 },\n-  { MASK_PNI, CODE_FOR_haddv4sf3, \"__builtin_ia32_haddps\", IX86_BUILTIN_HADDPS, 0, 0 },\n-  { MASK_PNI, CODE_FOR_haddv2df3, \"__builtin_ia32_haddpd\", IX86_BUILTIN_HADDPD, 0, 0 },\n-  { MASK_PNI, CODE_FOR_hsubv4sf3, \"__builtin_ia32_hsubps\", IX86_BUILTIN_HSUBPS, 0, 0 },\n-  { MASK_PNI, CODE_FOR_hsubv2df3, \"__builtin_ia32_hsubpd\", IX86_BUILTIN_HSUBPD, 0, 0 }\n+  /* SSE3 MMX */\n+  { MASK_SSE3, CODE_FOR_addsubv4sf3, \"__builtin_ia32_addsubps\", IX86_BUILTIN_ADDSUBPS, 0, 0 },\n+  { MASK_SSE3, CODE_FOR_addsubv2df3, \"__builtin_ia32_addsubpd\", IX86_BUILTIN_ADDSUBPD, 0, 0 },\n+  { MASK_SSE3, CODE_FOR_haddv4sf3, \"__builtin_ia32_haddps\", IX86_BUILTIN_HADDPS, 0, 0 },\n+  { MASK_SSE3, CODE_FOR_haddv2df3, \"__builtin_ia32_haddpd\", IX86_BUILTIN_HADDPD, 0, 0 },\n+  { MASK_SSE3, CODE_FOR_hsubv4sf3, \"__builtin_ia32_hsubps\", IX86_BUILTIN_HSUBPS, 0, 0 },\n+  { MASK_SSE3, CODE_FOR_hsubv2df3, \"__builtin_ia32_hsubpd\", IX86_BUILTIN_HSUBPD, 0, 0 }\n };\n \n static const struct builtin_description bdesc_1arg[] =\n@@ -13126,10 +13126,10 @@ static const struct builtin_description bdesc_1arg[] =\n \n   { MASK_SSE2, CODE_FOR_sse2_movq, 0, IX86_BUILTIN_MOVQ, 0, 0 },\n \n-  /* PNI */\n-  { MASK_PNI, CODE_FOR_movshdup, 0, IX86_BUILTIN_MOVSHDUP, 0, 0 },\n-  { MASK_PNI, CODE_FOR_movsldup, 0, IX86_BUILTIN_MOVSLDUP, 0, 0 },\n-  { MASK_PNI, CODE_FOR_movddup,  0, IX86_BUILTIN_MOVDDUP, 0, 0 }\n+  /* SSE3 */\n+  { MASK_SSE3, CODE_FOR_movshdup, 0, IX86_BUILTIN_MOVSHDUP, 0, 0 },\n+  { MASK_SSE3, CODE_FOR_movsldup, 0, IX86_BUILTIN_MOVSLDUP, 0, 0 },\n+  { MASK_SSE3, CODE_FOR_movddup,  0, IX86_BUILTIN_MOVDDUP, 0, 0 }\n };\n \n void\n@@ -13755,23 +13755,23 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin (MASK_SSE2, \"__builtin_ia32_pmaddwd128\", v4si_ftype_v8hi_v8hi, IX86_BUILTIN_PMADDWD128);\n \n   /* Prescott New Instructions.  */\n-  def_builtin (MASK_PNI, \"__builtin_ia32_monitor\",\n+  def_builtin (MASK_SSE3, \"__builtin_ia32_monitor\",\n \t       void_ftype_pcvoid_unsigned_unsigned,\n \t       IX86_BUILTIN_MONITOR);\n-  def_builtin (MASK_PNI, \"__builtin_ia32_mwait\",\n+  def_builtin (MASK_SSE3, \"__builtin_ia32_mwait\",\n \t       void_ftype_unsigned_unsigned,\n \t       IX86_BUILTIN_MWAIT);\n-  def_builtin (MASK_PNI, \"__builtin_ia32_movshdup\",\n+  def_builtin (MASK_SSE3, \"__builtin_ia32_movshdup\",\n \t       v4sf_ftype_v4sf,\n \t       IX86_BUILTIN_MOVSHDUP);\n-  def_builtin (MASK_PNI, \"__builtin_ia32_movsldup\",\n+  def_builtin (MASK_SSE3, \"__builtin_ia32_movsldup\",\n \t       v4sf_ftype_v4sf,\n \t       IX86_BUILTIN_MOVSLDUP);\n-  def_builtin (MASK_PNI, \"__builtin_ia32_lddqu\",\n+  def_builtin (MASK_SSE3, \"__builtin_ia32_lddqu\",\n \t       v16qi_ftype_pcchar, IX86_BUILTIN_LDDQU);\n-  def_builtin (MASK_PNI, \"__builtin_ia32_loadddup\",\n+  def_builtin (MASK_SSE3, \"__builtin_ia32_loadddup\",\n \t       v2df_ftype_pcdouble, IX86_BUILTIN_LOADDDUP);\n-  def_builtin (MASK_PNI, \"__builtin_ia32_movddup\",\n+  def_builtin (MASK_SSE3, \"__builtin_ia32_movddup\",\n \t       v2df_ftype_v2df, IX86_BUILTIN_MOVDDUP);\n }\n "}, {"sha": "03e64fff50b57bbe90c49832cce4d7d325d65b3d", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=9e200aafa53204e1c556d82ee4ab8198ad5da48c", "patch": "@@ -121,7 +121,7 @@ extern int target_flags;\n #define MASK_MMX\t\t0x00002000\t/* Support MMX regs/builtins */\n #define MASK_SSE\t\t0x00004000\t/* Support SSE regs/builtins */\n #define MASK_SSE2\t\t0x00008000\t/* Support SSE2 regs/builtins */\n-#define MASK_PNI\t\t0x00010000\t/* Support PNI regs/builtins */\n+#define MASK_SSE3\t\t0x00010000\t/* Support SSE3 regs/builtins */\n #define MASK_3DNOW\t\t0x00020000\t/* Support 3Dnow builtins */\n #define MASK_3DNOW_A\t\t0x00040000\t/* Support Athlon 3Dnow builtins */\n #define MASK_128BIT_LONG_DOUBLE 0x00080000\t/* long double size is 128bit */\n@@ -304,7 +304,7 @@ extern int x86_prefetch_sse;\n \n #define TARGET_SSE ((target_flags & MASK_SSE) != 0)\n #define TARGET_SSE2 ((target_flags & MASK_SSE2) != 0)\n-#define TARGET_PNI ((target_flags & MASK_PNI) != 0)\n+#define TARGET_SSE3 ((target_flags & MASK_SSE3) != 0)\n #define TARGET_SSE_MATH ((ix86_fpmath & FPMATH_SSE) != 0)\n #define TARGET_MIX_SSE_I387 ((ix86_fpmath & FPMATH_SSE) \\\n \t\t\t     && (ix86_fpmath & FPMATH_387))\n@@ -400,10 +400,10 @@ extern int x86_prefetch_sse;\n     N_(\"Support MMX, SSE and SSE2 built-in functions and code generation\") }, \\\n   { \"no-sse2\",\t\t\t -MASK_SSE2,\t\t\t\t      \\\n     N_(\"Do not support MMX, SSE and SSE2 built-in functions and code generation\") },    \\\n-  { \"pni\",\t\t\t MASK_PNI,\t\t\t\t      \\\n-    N_(\"Support MMX, SSE, SSE2 and PNI built-in functions and code generation\") },\\\n-  { \"no-pni\",\t\t\t -MASK_PNI,\t\t\t\t      \\\n-    N_(\"Do not support MMX, SSE, SSE2 and PNI built-in functions and code generation\") },\\\n+  { \"sse3\",\t\t\t MASK_SSE3,\t\t\t\t      \\\n+    N_(\"Support MMX, SSE, SSE2 and SSE3 built-in functions and code generation\") },\\\n+  { \"no-sse3\",\t\t\t -MASK_SSE3,\t\t\t\t      \\\n+    N_(\"Do not support MMX, SSE, SSE2 and SSE3 built-in functions and code generation\") },\\\n   { \"128bit-long-double\",\t MASK_128BIT_LONG_DOUBLE,\t\t      \\\n     N_(\"sizeof(long double) is 16\") },\t\t\t\t\t      \\\n   { \"96bit-long-double\",\t-MASK_128BIT_LONG_DOUBLE,\t\t      \\\n@@ -617,8 +617,8 @@ extern int x86_prefetch_sse;\n \tbuiltin_define (\"__SSE__\");\t\t\t\t\\\n       if (TARGET_SSE2)\t\t\t\t\t\t\\\n \tbuiltin_define (\"__SSE2__\");\t\t\t\t\\\n-      if (TARGET_PNI)\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__PNI__\");\t\t\t\t\\\n+      if (TARGET_SSE3)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__SSE3__\");\t\t\t\t\\\n       if (TARGET_SSE_MATH && TARGET_SSE)\t\t\t\\\n \tbuiltin_define (\"__SSE_MATH__\");\t\t\t\\\n       if (TARGET_SSE_MATH && TARGET_SSE2)\t\t\t\\"}, {"sha": "3ee0ec14b6fa74c858abee573db1dd324119081c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9e200aafa53204e1c556d82ee4ab8198ad5da48c", "patch": "@@ -22930,13 +22930,13 @@\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"memory\" \"unknown\")])\n \n-;; PNI\n+;; SSE3\n \n (define_insn \"mwait\"\n   [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"a\")\n \t\t     (match_operand:SI 1 \"register_operand\" \"c\")]\n \t\t    UNSPECV_MWAIT)]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"mwait\\t%0, %1\"\n   [(set_attr \"length\" \"3\")])\n \n@@ -22945,18 +22945,18 @@\n \t\t     (match_operand:SI 1 \"register_operand\" \"c\")\n \t\t     (match_operand:SI 2 \"register_operand\" \"d\")]\n \t\t    UNSPECV_MONITOR)]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"monitor\\t%0, %1, %2\"\n   [(set_attr \"length\" \"3\")])\n \n-;; PNI arithmetic\n+;; SSE3 arithmetic\n \n (define_insn \"addsubv4sf3\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"0\")\n \t\t      (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")]\n \t\t     UNSPEC_ADDSUB))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"addsubps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -22966,7 +22966,7 @@\n         (unspec:V2DF [(match_operand:V2DF 1 \"register_operand\" \"0\")\n \t\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")]\n \t\t     UNSPEC_ADDSUB))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"addsubpd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V2DF\")])\n@@ -22976,7 +22976,7 @@\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"0\")\n \t\t      (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")]\n \t\t     UNSPEC_HADD))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"haddps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -22986,7 +22986,7 @@\n         (unspec:V2DF [(match_operand:V2DF 1 \"register_operand\" \"0\")\n \t\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")]\n \t\t     UNSPEC_HADD))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"haddpd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V2DF\")])\n@@ -22996,7 +22996,7 @@\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"0\")\n \t\t      (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")]\n \t\t     UNSPEC_HSUB))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"hsubps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -23006,7 +23006,7 @@\n         (unspec:V2DF [(match_operand:V2DF 1 \"register_operand\" \"0\")\n \t\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")]\n \t\t     UNSPEC_HSUB))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"hsubpd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V2DF\")])\n@@ -23015,7 +23015,7 @@\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n         (unspec:V4SF\n \t [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] UNSPEC_MOVSHDUP))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"movshdup\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -23024,7 +23024,7 @@\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n         (unspec:V4SF\n \t [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] UNSPEC_MOVSLDUP))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"movsldup\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -23033,15 +23033,15 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n \t(unspec:V16QI [(match_operand:V16QI 1 \"memory_operand\" \"m\")]\n \t\t       UNSPEC_LDQQU))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"lddqu\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"loadddup\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n \t(vec_duplicate:V2DF (match_operand:DF 1 \"memory_operand\" \"m\")))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"movddup\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"DF\")])\n@@ -23051,7 +23051,7 @@\n \t(vec_duplicate:V2DF\n \t (vec_select:DF (match_operand:V2DF 1 \"register_operand\" \"x\")\n \t\t\t(parallel [(const_int 0)]))))]\n-  \"TARGET_PNI\"\n+  \"TARGET_SSE3\"\n   \"movddup\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"DF\")])"}, {"sha": "3b18e2a11bd27c2f22eb181fb4bfd12debeaa07e", "filename": "gcc/config/i386/pmmintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fconfig%2Fi386%2Fpmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fconfig%2Fi386%2Fpmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpmmintrin.h?ref=9e200aafa53204e1c556d82ee4ab8198ad5da48c", "patch": "@@ -30,7 +30,7 @@\n #ifndef _PMMINTRIN_H_INCLUDED\n #define _PMMINTRIN_H_INCLUDED\n \n-#ifdef __PNI__\n+#ifdef __SSE3__\n #include <xmmintrin.h>\n #include <emmintrin.h>\n \n@@ -127,6 +127,6 @@ _mm_mwait (unsigned int __E, unsigned int __H)\n #define _mm_mwait(E, H)\t\t__builtin_ia32_mwait ((E), (H))\n #endif\n \n-#endif /* __PNI__ */\n+#endif /* __SSE3__ */\n \n #endif /* _PMMINTRIN_H_INCLUDED */"}, {"sha": "b396227bb84f41fb6dee096e152550ed6e49d3d9", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=9e200aafa53204e1c556d82ee4ab8198ad5da48c", "patch": "@@ -5977,7 +5977,7 @@ Generates the @code{movhps} machine instruction as a store to memory.\n Generates the @code{movlps} machine instruction as a store to memory.\n @end table\n \n-The following built-in functions are available when @option{-mpni} is used.\n+The following built-in functions are available when @option{-msse3} is used.\n All of them generate the machine instruction that is part of the name.\n \n @smallexample\n@@ -5995,7 +5995,7 @@ v4sf __builtin_ia32_movsldup (v4sf)\n void __builtin_ia32_mwait (unsigned int, unsigned int)\n @end smallexample\n \n-The following built-in functions are available when @option{-mpni} is used.\n+The following built-in functions are available when @option{-msse3} is used.\n \n @table @code\n @item v2df __builtin_ia32_loadddup (double const *)"}, {"sha": "2607e403246c6170d60ff40bcb630f47ab3a55ae", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e200aafa53204e1c556d82ee4ab8198ad5da48c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9e200aafa53204e1c556d82ee4ab8198ad5da48c", "patch": "@@ -488,7 +488,7 @@ in the following sections.\n -mno-fp-ret-in-387  -msoft-float  -msvr3-shlib @gol\n -mno-wide-multiply  -mrtd  -malign-double @gol\n -mpreferred-stack-boundary=@var{num} @gol\n--mmmx  -msse  -msse2 -mpni -m3dnow @gol\n+-mmmx  -msse  -msse2 -msse3 -m3dnow @gol\n -mthreads  -mno-align-stringops  -minline-all-stringops @gol\n -mpush-args  -maccumulate-outgoing-args  -m128bit-long-double @gol\n -m96bit-long-double  -mregparm=@var{num}  -momit-leaf-frame-pointer @gol\n@@ -8385,8 +8385,8 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @itemx -mno-sse\n @item -msse2\n @itemx -mno-sse2\n-@item -mpni\n-@itemx -mno-pni\n+@item -msse3\n+@itemx -mno-sse3\n @item -m3dnow\n @itemx -mno-3dnow\n @opindex mmmx\n@@ -8396,7 +8396,7 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @opindex m3dnow\n @opindex mno-3dnow\n These switches enable or disable the use of built-in functions that allow\n-direct access to the MMX, SSE, SSE2, PNI and 3Dnow extensions of the\n+direct access to the MMX, SSE, SSE2, SSE3 and 3Dnow extensions of the\n instruction set.\n \n @xref{X86 Built-in Functions}, for details of the functions enabled"}]}