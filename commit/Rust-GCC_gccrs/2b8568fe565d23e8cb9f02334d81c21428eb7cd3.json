{"sha": "2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI4NTY4ZmU1NjVkMjNlOGNiOWYwMjMzNGQ4MWMyMTQyOGViN2NkMw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-01-11T14:44:22Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-01-11T14:44:22Z"}, "message": "[AArch64] PR rtl-optimization/68796: Add patterns for QImode and HImode comparison with zero\n\n\tPR rtl-optimization/68796\n\t* config/aarch64/aarch64.md (*and<mode>_compare0): New pattern.\n\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Handle HImode\n\tand QImode comparisons against zero with CC_NZmode.\n\t* config/aarch64/iterators.md (short_mask): New mode_attr.\n\n\t* gcc.target/aarch64/tst_5.c: New test.\n\t* gcc.target/aarch64/tst_6.c: Likewise.\n\nFrom-SVN: r232228", "tree": {"sha": "5f838f445f94024a719619366722b2aa255063b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f838f445f94024a719619366722b2aa255063b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d58938ed798882063737dedfe897a9b484295ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d58938ed798882063737dedfe897a9b484295ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d58938ed798882063737dedfe897a9b484295ad"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "74875108f04771faa7f5db5268bea3e5eac228ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "patch": "@@ -1,3 +1,11 @@\n+2016-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68796\n+\t* config/aarch64/aarch64.md (*and<mode>_compare0): New pattern.\n+\t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Handle HImode\n+\tand QImode comparisons against zero with CC_NZmode.\n+\t* config/aarch64/iterators.md (short_mask): New mode_attr.\n+\n 2016-01-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/sse.md (<avx512>_load<mode>_mask): Remove"}, {"sha": "6853b0abebd22abae82e5770ca8f8bbb57af59b3", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "patch": "@@ -4142,6 +4142,13 @@ aarch64_select_cc_mode (RTX_CODE code, rtx x, rtx y)\n \t}\n     }\n \n+  /* Equality comparisons of short modes against zero can be performed\n+     using the TST instruction with the appropriate bitmask.  */\n+  if (y == const0_rtx && REG_P (x)\n+      && (code == EQ || code == NE)\n+      && (GET_MODE (x) == HImode || GET_MODE (x) == QImode))\n+    return CC_NZmode;\n+\n   if ((GET_MODE (x) == SImode || GET_MODE (x) == DImode)\n       && y == const0_rtx\n       && (code == EQ || code == NE || code == LT || code == GE)"}, {"sha": "f6c8eb1d9fa41fd53322ea9be9dbb3f9c1ceaeb2", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "patch": "@@ -3672,6 +3672,16 @@\n   }\n )\n \n+(define_insn \"*and<mode>_compare0\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (match_operand:SHORT 0 \"register_operand\" \"r\")\n+\t (const_int 0)))]\n+  \"\"\n+  \"tst\\\\t%<w>0, <short_mask>\"\n+  [(set_attr \"type\" \"alus_imm\")]\n+)\n+\n (define_insn \"*and<mode>3nr_compare0\"\n   [(set (reg:CC_NZ CC_REGNUM)\n \t(compare:CC_NZ"}, {"sha": "49598a2cd9356d2ff9920544c16f48bbb30022fb", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "patch": "@@ -345,6 +345,8 @@\n (define_mode_attr w1 [(SF \"w\") (DF \"x\")])\n (define_mode_attr w2 [(SF \"x\") (DF \"w\")])\n \n+(define_mode_attr short_mask [(HI \"65535\") (QI \"255\")])\n+\n ;; For constraints used in scalar immediate vector moves\n (define_mode_attr hq [(HI \"h\") (QI \"q\")])\n "}, {"sha": "6366b495bceb6f1005aea2f57dc8fdc79b037e9c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "patch": "@@ -1,3 +1,9 @@\n+2016-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68796\n+\t* gcc.target/aarch64/tst_5.c: New test.\n+\t* gcc.target/aarch64/tst_6.c: Likewise.\n+\n 2016-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR rtl-optimization/68841"}, {"sha": "0de40a6c47a7d63c1b7a81aeba438a096c0041b8", "filename": "gcc/testsuite/gcc.target/aarch64/tst_5.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_5.c?ref=2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+f255 (int x)\n+{\n+  if (x & 255)\n+    return 1;\n+  return x;\n+}\n+\n+int\n+f65535 (int x)\n+{\n+  if (x & 65535)\n+    return 1;\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler \"tst\\t(x|w)\\[0-9\\]+,\\[ \\t\\]*255\" } } */\n+/* { dg-final { scan-assembler \"tst\\t(x|w)\\[0-9\\]+,\\[ \\t\\]*65535\" } } */"}, {"sha": "f15ec114c391fed79cc43b7740fde83fb3d4ea53", "filename": "gcc/testsuite/gcc.target/aarch64/tst_6.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8568fe565d23e8cb9f02334d81c21428eb7cd3/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_6.c?ref=2b8568fe565d23e8cb9f02334d81c21428eb7cd3", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+foo (long x)\n+{\n+   return ((short) x != 0) ? x : 1;\n+}\n+\n+/* { dg-final { scan-assembler \"tst\\t(x|w)\\[0-9\\]+,\\[ \\t\\]*65535\" } } */"}]}