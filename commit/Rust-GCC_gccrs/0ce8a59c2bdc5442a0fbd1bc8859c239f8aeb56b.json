{"sha": "0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlOGE1OWMyYmRjNTQ0MmEwZmJkMWJjODg1OWMyMzlmOGFlYjU2Yg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-01-09T14:23:35Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-01-09T14:23:35Z"}, "message": "elfos.h (ASM_OUTPUT_LIMITED_STRING): Add parentheses around assignment used as truth value.\n\n\t* elfos.h (ASM_OUTPUT_LIMITED_STRING): Add parentheses around\n\tassignment used as truth value.\n\n\t* function.c (assign_temp): Mark parameter `dont_promote' with\n\tATTRIBUTE_UNUSED.  Wrap variable `unsignedp' with macro\n\tPROMOTE_FOR_CALL_ONLY.\n\n\t* genrecog.c (write_subroutine): Mark variable `operands' with\n\tATTRIBUTE_UNUSED.\n\n\t* optabs.c (prepare_cmp_insn): Mark parameter `align' with\n\tATTRIBUTE_UNUSED.\n\n\t* sdbout.c (sdbout_init): Likewise for parameter `asm_file'.\n\t(sdbout_begin_block, sdbout_end_block): Likewise for `file'.\n\n\t* toplev.c (note_deferral_of_defined_inline_function): Likewise\n\tfor `decl'.\n\nFrom-SVN: r31293", "tree": {"sha": "75b0e77395b3484b3774824792bfef303b7801ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75b0e77395b3484b3774824792bfef303b7801ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/comments", "author": null, "committer": null, "parents": [{"sha": "975ab1312f8486b7b950dba91733bf81222ecb86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975ab1312f8486b7b950dba91733bf81222ecb86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/975ab1312f8486b7b950dba91733bf81222ecb86"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "95315ed10c0eeb57e321d139942eeb5a86de2671", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "patch": "@@ -1,3 +1,24 @@\n+2000-01-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* elfos.h (ASM_OUTPUT_LIMITED_STRING): Add parentheses around\n+\tassignment used as truth value.\n+\n+\t* function.c (assign_temp): Mark parameter `dont_promote' with\n+\tATTRIBUTE_UNUSED.  Wrap variable `unsignedp' with macro\n+\tPROMOTE_FOR_CALL_ONLY.\n+\n+\t* genrecog.c (write_subroutine): Mark variable `operands' with\n+\tATTRIBUTE_UNUSED.\n+\n+\t* optabs.c (prepare_cmp_insn): Mark parameter `align' with\n+\tATTRIBUTE_UNUSED.\n+\n+\t* sdbout.c (sdbout_init): Likewise for parameter `asm_file'.\n+\t(sdbout_begin_block, sdbout_end_block): Likewise for `file'.\n+\n+\t* toplev.c (note_deferral_of_defined_inline_function): Likewise\n+\tfor `decl'.\n+\n 2000-01-09  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x.h: Tidy up comments."}, {"sha": "a3bfcd3e76427e8aed76b6308ee5d22c96fbe8db", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "patch": "@@ -709,7 +709,7 @@ dtors_section ()\t\t\t\t\t\t\\\n       \t\t\t\t\t\t\t\\\n       fprintf ((FILE), \"\\t%s\\t\\\"\", STRING_ASM_OP);\t\\\n       \t\t\t\t\t\t\t\\\n-      for (; ch = *_limited_str; _limited_str++)\t\\\n+      for (; (ch = *_limited_str); _limited_str++)\t\\\n         {\t\t\t\t\t\t\\\n \t  register int escape;\t\t\t\t\\\n \t  \t\t\t\t\t\t\\"}, {"sha": "5db558fcd4249b96388258bb78478d33ebae58a1", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "patch": "@@ -821,10 +821,12 @@ assign_temp (type, keep, memory_required, dont_promote)\n      tree type;\n      int keep;\n      int memory_required;\n-     int dont_promote;\n+     int dont_promote ATTRIBUTE_UNUSED;\n {\n   enum machine_mode mode = TYPE_MODE (type);\n+#ifndef PROMOTE_FOR_CALL_ONLY\n   int unsignedp = TREE_UNSIGNED (type);\n+#endif\n \n   if (mode == BLKmode || memory_required)\n     {"}, {"sha": "ce5f9104bf6fbcd43d201c3af135e05cdbdbb51c", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "patch": "@@ -2197,7 +2197,7 @@ peephole2%s (x0, insn, _plast_insn)\\n\\\n       break;\n     }\n \n-  printf (\"{\\n  register rtx * const operands = &recog_data.operand[0];\\n\");\n+  printf (\"{\\n  register rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];\\n\");\n   for (i = 1; i <= max_depth; i++)\n     printf (\"  register rtx x%d ATTRIBUTE_UNUSED;\\n\", i);\n "}, {"sha": "578b783eb89c03a2095f04474c9ff65ce454af07", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "patch": "@@ -2893,7 +2893,7 @@ prepare_cmp_insn (px, py, pcomparison, size, pmode, punsignedp, align,\n      rtx size;\n      enum machine_mode *pmode;\n      int *punsignedp;\n-     int align;\n+     int align ATTRIBUTE_UNUSED;\n      enum can_compare_purpose purpose;\n {\n   enum machine_mode mode = *pmode;"}, {"sha": "02a35c25f99d7721f48e88970b0e89843c6eeb7c", "filename": "gcc/sdbout.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "patch": "@@ -336,7 +336,7 @@ static struct sdb_file *current_file;\n \n void\n sdbout_init (asm_file, input_file_name, syms)\n-     FILE *asm_file;\n+     FILE *asm_file ATTRIBUTE_UNUSED;\n      char *input_file_name;\n      tree syms ATTRIBUTE_UNUSED;\n {\n@@ -1524,7 +1524,7 @@ sdbout_reg_parms (parms)\n \n void\n sdbout_begin_block (file, line, n)\n-     FILE *file;\n+     FILE *file ATTRIBUTE_UNUSED;\n      int line;\n      int n;\n {\n@@ -1564,7 +1564,7 @@ sdbout_begin_block (file, line, n)\n \n void\n sdbout_end_block (file, line, n)\n-     FILE *file;\n+     FILE *file ATTRIBUTE_UNUSED;\n      int line;\n      int n ATTRIBUTE_UNUSED;\n {"}, {"sha": "5388d1c1d949f32b2d00108c5ac4323da09e3d28", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=0ce8a59c2bdc5442a0fbd1bc8859c239f8aeb56b", "patch": "@@ -2735,7 +2735,7 @@ rest_of_type_compilation (type, toplev)\n \n void\n note_deferral_of_defined_inline_function (decl)\n-     tree decl;\n+     tree decl ATTRIBUTE_UNUSED;\n {\n #ifdef DWARF_DEBUGGING_INFO\n   /* Generate the DWARF info for the \"abstract\" instance of a function"}]}