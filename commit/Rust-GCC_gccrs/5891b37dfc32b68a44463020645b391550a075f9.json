{"sha": "5891b37dfc32b68a44463020645b391550a075f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg5MWIzN2RmYzMyYjY4YTQ0NDYzMDIwNjQ1YjM5MTU1MGEwNzVmOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-09T20:48:13Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-09T20:48:13Z"}, "message": "Move language subdirectory Makefile processing into configure.lang.\n\nFrom-SVN: r14188", "tree": {"sha": "9f6603756856673a21397ab40931cac1a24d982e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f6603756856673a21397ab40931cac1a24d982e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5891b37dfc32b68a44463020645b391550a075f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5891b37dfc32b68a44463020645b391550a075f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5891b37dfc32b68a44463020645b391550a075f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5891b37dfc32b68a44463020645b391550a075f9/comments", "author": null, "committer": null, "parents": [{"sha": "ee6295f078e3f8045c32fb379e0329a74fd34baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee6295f078e3f8045c32fb379e0329a74fd34baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee6295f078e3f8045c32fb379e0329a74fd34baa"}], "stats": {"total": 340, "additions": 72, "deletions": 268}, "files": [{"sha": "21b286e1976e3ed706889d977a875bbee3cf87b9", "filename": "gcc/configure.in", "status": "modified", "additions": 72, "deletions": 268, "changes": 340, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5891b37dfc32b68a44463020645b391550a075f9/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5891b37dfc32b68a44463020645b391550a075f9/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=5891b37dfc32b68a44463020645b391550a075f9", "patch": "@@ -2640,90 +2640,17 @@ do\n \ttest -d $subdir || mkdir $subdir\n \tcd $subdir\n \n-\t# Create Makefile.tem from Makefile.in.\n-\t# Make it set VPATH if necessary so that the sources are found.\n-\t# Also change its value of srcdir.\n-\t# Also create a .gdbinit file which runs the one in srcdir\n-\t# and tells GDB to look there for source files.\n-\tcase $srcdir in\n-\t. | ./$subdir | .././$subdir)\n-\t\trm -f Makefile.tem\n-\t\tcp Makefile.in Makefile.tem\n-\t\tchmod +w Makefile.tem\n-\t\t;;\n-\t*)\n-\t\trm -f Makefile.tem\n-\t\techo \"VPATH = ${srcdir}\" \\\n-\t\t  | cat - ${srcdir}/Makefile.in \\\n-\t\t  | sed \"s@^srcdir = \\.@srcdir = ${srcdir}@\" > Makefile.tem\n-\t\trm -f .gdbinit\n-\t\techo \"dir .\" > .gdbinit\n-\t\techo \"dir ${srcdir}\" >> .gdbinit\n-\t\tif [[ x$gdb_needs_out_file_path = xyes ]]\n-\t\tthen\n-\t\t\techo \"dir ${srcdir}/config/\"`dirname ${out_file}` >> .gdbinit\n-\t\tfi\n-\t\tif [[ \"x$subdirs\" != x ]]; then\n-\t\t\tfor s in $subdirs\n-\t\t\tdo\n-\t\t\t\techo \"dir ${srcdir}/$s\" >> .gdbinit\n-\t\t\tdone\n-\t\tfi\n-\t\techo \"source ${srcdir}/.gdbinit\" >> .gdbinit\n-\t\t;;\n-\tesac\n-\n \t# Conditionalize the makefile for this host machine.\n \tdep_host_xmake_file=\n-\trm -f Makefile.xx Makefile.ll\n \tmerged_frags=\n \tfor f in .. ${host_xmake_file}\n \tdo\n \t\tif [[ -f ${mainsrcdir}/config/$f ]]\n \t\tthen\n-\t\t\tcat ${mainsrcdir}/config/$f >> Makefile.ll\n-\t\t\tif [[ x\"${merged_frags}\" != x ]]\n-\t\t\tthen\n-\t\t\t\tmerged_frags=\"${merged_frags} and \"\n-\t\t\tfi\n-\t\t\tmerged_frags=\"${merged_frags}${f}\"\n \t\t\tcat ${mainsrcdir}/config/$f >> Make-host\n \t\t\tdep_host_xmake_file=\"${dep_host_xmake_file} \\$(srcdir)/config/$f\"\n \t\tfi\n \tdone\n-\tif [[ x\"${merged_frags}\" != x ]]\n-\tthen\n-\t\tsed -e \"/####host/  r Makefile.ll\" Makefile.tem > Makefile.xx\n-\t\techo \"Merged ${merged_frags}.\"\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\t\trm -f Makefile.ll\n-\tfi\n-\n-\t# Add a definition for MAKE if system wants one.\n-\tcase \"$SET_MAKE\" in\n-\t?*)\n-\t\trm -f Makefile.xx\n-\t\t(echo \"$SET_MAKE\"; cat Makefile.tem) >Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tesac\n-\n-\t# Add a definition for INSTALL if system wants one.\n-\t# This substitutes for lots of x-* files.\n-\tif [[ x$build_broken_install = x ]]\n-\tthen true\n-\telse\n-\t\trm -f Makefile.xx\n-\t\tabssrcdir=`cd ${srcdir}; pwd`\n-\t\tsed \"s|^INSTALL = .*|INSTALL = ${abssrcdir}/install.sh -c|\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n-\t# Some of the following don't make sense in the language makefiles,\n-\t# but rather than introduce another level of nesting, we leave them\n-\t# as is.\n \n \t# Set EXTRA_HEADERS according to extra_headers.\n \t# This substitutes for lots of t-* files.\n@@ -2736,65 +2663,6 @@ do\n \t\tdo\n \t\t\textra_headers_list=\"${extra_headers_list} \\$(srcdir)/ginclude/${file}\"\n \t\tdone\n-\t\trm -f Makefile.xx\n-\t\tsed \"s|^EXTRA_HEADERS =|EXTRA_HEADERS = ${extra_headers_list}|\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n-\t# Set EXTRA_PASSES according to extra_passes.\n-\t# This substitutes for lots of t-* files.\n-\tif [[ \"x$extra_passes\" = x ]]\n-\tthen true\n-\telse\n-\t\trm -f Makefile.xx\n-\t\tsed \"s/^EXTRA_PASSES =/EXTRA_PASSES = $extra_passes/\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n-\t# Set EXTRA_PARTS according to extra_parts.\n-\t# This substitutes for lots of t-* files.\n-\tif [[ \"x$extra_parts\" = x ]]\n-\tthen true\n-\telse\n-\t\trm -f Makefile.xx\n-\t\tsed \"s/^EXTRA_PARTS =/EXTRA_PARTS = $extra_parts/\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n-\t# Set EXTRA_PROGRAMS according to extra_programs.\n-\tif [[ \"x$extra_programs\" = x ]]\n-\tthen true\n-\telse\n-\t\trm -f Makefile.xx\n-\t\tsed \"s/^EXTRA_PROGRAMS =/EXTRA_PROGRAMS = $extra_programs/\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n-\t# Set EXTRA_OBJS according to extra_objs.\n-\t# This substitutes for lots of t-* files.\n-\tif [[ \"x$extra_objs\" = x ]]\n-\tthen true\n-\telse\n-\t\trm -f Makefile.xx\n-\t\tsed \"s|^EXTRA_OBJS =|EXTRA_OBJS = $extra_objs|\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n-\t# Set EXTRA_GCC_OBJS according to host_extra_gcc_objs.\n-\t# This substitutes for lots of x-* files.\n-\tif [[ \"x$host_extra_gcc_objs\" = x ]]\n-\tthen true\n-\telse\n-\t\trm -f Makefile.xx\n-\t\tsed \"s|^EXTRA_GCC_OBJS =|EXTRA_GCC_OBJS = $host_extra_gcc_objs|\"\n-Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n \tfi\n \n \t# Add a definition of USE_COLLECT2 if system wants one.\n@@ -2807,11 +2675,6 @@ Makefile.tem > Makefile.xx\n \telse\n \t\twill_use_collect2=\"ld\"\n \t\tmaybe_use_collect2=\"-DUSE_COLLECT2\"\n-\t\trm -f Makefile.xx\n-\t\t(echo \"USE_COLLECT2 = ld\"; echo \"MAYBE_USE_COLLECT2 = -DUSE_COLLECT2\")\\\n-\t \t   | cat - Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n \tfi\n \n \t# NEED TO CONVERT\n@@ -2825,17 +2688,7 @@ Makefile.tem > Makefile.xx\n \tthen\n \t\tmd_file_sub=$srcdir/config/$md_file\n \telse\n-\t\trm -f Makefile.xx\n-\t  \t(if [[ x$host = x$build ]] ; then\n-\t\t\techo \"MD_DEPS = $(md_file) cpp\" ; echo \"MD_CPP = ./cpp\"\n-\t\telse\n-\t\t\techo \"MD_DEPS = md.pre-cpp\" ; echo \"MD_CPP = \\$(HOST_CC) -x c -E\"\n-\t\tfi\n \t\tmd_file=md\n-\t\techo \"MD_CPPFLAGS = $md_cppflags\") | \\\n-\t\t  cat - Makefile.tem | sed -e \"s|^MD_FILE[[ \t]]*=.*|MD_FILE = md|\" > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n \tfi\n \n \t# If we have gas in the build tree, make a link to it.\n@@ -2852,43 +2705,17 @@ Makefile.tem > Makefile.xx\n \t\tfi\n \tfi\n \n-\t# If using -program-transform-name, override the installation names.\n-\tif [[ \"x${program_transform_set}\" = \"xyes\" ]] ; then\n-\t\tsed -e \"s/^program_transform_name[[ \t]]*=.*$/program_transform_name =\n-$program_transform_name/\" \\\n-\t\t    -e \"s/^program_transform_cross_name[[\n-]]*=.*$/program_transform_cross_name = $program_transform_name/\" \\\n-\t\t    Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n \t# Conditionalize the makefile for this target machine.\n \tdep_tmake_file=\n-\trm -f Makefile.xx Makefile.ll\n \tmerged_frags=\n \tfor f in .. ${tmake_file}\n \tdo\n \t\tif [[ -f ${mainsrcdir}/config/$f ]]\n \t\tthen\n \t\t\tcat ${mainsrcdir}/config/$f >> Make-target\n \t\t\tdep_tmake_file=\"${dep_tmake_file} \\$(srcdir)/config/$f\"\n-\t\t\tcat ${mainsrcdir}/config/$f >> Makefile.ll\n-\t\t\tif [[ x\"${merged_frags}\" != x ]]\n-\t\t\tthen\n-\t\t\t\tmerged_frags=\"${merged_frags} and \"\n-\t\t\tfi\n-\t\t\tmerged_frags=\"${merged_frags}$f\"\n \t\tfi\n \tdone\n-\tif [[ x\"${merged_frags}\" != x ]]\n-\tthen\n-\t\tsed -e \"/####target/  r Makefile.ll\" Makefile.tem > Makefile.xx\n-\t\techo \"Merged ${merged_frags}.\"\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\t\trm -f Makefile.ll\n-\tfi\n \n \t# If this is the top level Makefile, add the language fragments.\n \t# Languages are added via two mechanisms.  Some information must be\n@@ -2898,8 +2725,6 @@ $program_transform_name/\" \\\n \t# like `clean', `install', etc.\n \tif [[ $subdir = . ]]\n \tthen\n-\t\trm -f Makefile.xx Makefile.ll\n-\t\ttouch Makefile.ll\n \t\tfor s in .. $subdirs\n \t\tdo\n \t\t\tif [[ $s != \"..\" ]]\n@@ -2931,22 +2756,6 @@ $program_transform_name/\" \\\n \t\t\t\tcat ${mainsrcdir}/$s/Make-lang.in >> Makefile.ll\n \t\t\tfi\n \t\tdone\n-\t\tsed -e \"/####language fragments/ r Makefile.ll\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\t\tsubdirs=`echo $subdirs`\n-\t\tsed -e \"s|^SUBDIRS[[ \t]]*=.*$|SUBDIRS = $subdirs|\" \\\n-\t\t    -e \"s|^LANGUAGES[[ \t]]*=[[ \t]]*\\(.*\\)$|LANGUAGES = \\1 $all_languages|\" \\\n-\t\t    -e \"s|^BOOT_LANGUAGES[[ \t]]*=[[ \t]]*\\(.*\\)$|BOOT_LANGUAGES = \\1 $all_boot_languages|\" \\\n-\t\t    -e \"s|^COMPILERS[[ \t]]*=[[ \t]]*\\(.*\\)$|COMPILERS = \\1 $all_compilers|\" \\\n-\t\t    -e \"s|^LANG_MAKEFILES[[ \t]]*=.*$|LANG_MAKEFILES = $all_lang_makefiles|\" \\\n-\t\t    -e \"s|^LANG_STAGESTUFF[[ \t]]*=.*$|LANG_STAGESTUFF = $all_stagestuff|\" \\\n-\t\t    -e \"s|^LANG_DIFF_EXCLUDES[[ \t]]*=.*$|LANG_DIFF_EXCLUDES = $all_diff_excludes|\" \\\n-\t\t    -e \"s|^LANG_EXTRA_HEADERS[[ \t]]*=.*$|LANG_EXTRA_HEADERS = $all_headers|\" \\\n-\t\t    -e \"s|^LANG_LIB2FUNCS[[ \t]]*=.*$|LANG_LIB2FUNCS = $all_lib2funcs|\" \\\n-\t\t    Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n \n \t\t# Since we can't use `::' targets, we link each language in\n \t\t# with a set of hooks, reached indirectly via lang.${target}.\n@@ -2957,7 +2766,6 @@ $program_transform_name/\" \\\n \t\t\tuninstall distdir \\\n \t\t\tmostlyclean clean distclean extraclean maintainer-clean \\\n \t\t\tstage1 stage2 stage3 stage4\"\n-\t\trm -f Makefile.ll\n \t\tfor t in $target_list\n \t\tdo\n \t\t\tx=\n@@ -2968,12 +2776,7 @@ $program_transform_name/\" \\\n \t\t\t\tfi\n \t\t\tdone\n \t\t\techo \"lang.$t: $x\" >> Make-hooks\n-\t\t\techo \"lang.$t: $x\" >> Makefile.ll\n \t\tdone\n-\t\tsed -e \"/####language hooks/ r Makefile.ll\" Makefile.tem > Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\t\trm -f Makefile.ll\n \n \t\t# If the host doesn't support symlinks, modify CC in\n \t\t# FLAGS_TO_PASS so CC=\"stage1/xgcc -Bstage1/\" works.\n@@ -2983,27 +2786,10 @@ $program_transform_name/\" \\\n \t\tthen\n \t\t\tcc_set_by_configure=\"\\$(CC)\"\n \t\t\tstage_prefix_set_by_configure=\"\\$(STAGE_PREFIX)\"\n-\t\t\tsed -e 's,CC=set-by-configure,CC=$(CC),' \\\n-\t\t\t    Makefile.tem > Makefile.xx\n-\t\t\tsed -e 's,STAGE_PREFIX=set-by-configure,STAGE_PREFIX=$(STAGE_PREFIX),' \\\n-\t\t\t    Makefile.xx > Makefile.yy\n \t\telse\n \t\t\tcc_set_by_configure=\"\\`case '\\$(CC)' in stage*) echo '\\$(CC)' | sed -e 's|stage|../stage|g';; *) echo '\\$(CC)';; esac\\`,\"\n \n \t\t\tstage_prefix_set_by_configure=\"\\`case '\\$(STAGE_PREFIX)' in stage*) echo '\\$(STAGE_PREFIX)' | sed -e 's|stage|../stage|g';; *) echo '\\$(STAGE_PREFIX)';; esac\\`,\"\n-\t\t\tsed -e \"s,CC=set-by-configure,CC=\\`case '\\$(CC)' in *stage*) echo '\\$(CC)' | sed -e 's|stage|../stage|g';; *) echo '\\$(CC)';; esac\\`,\" \\\n-\t\t\t    Makefile.tem > Makefile.xx\n-\t\t\tsed -e \"s,STAGE_PREFIX=set-by-configure,STAGE_PREFIX=\\`case '\\$(STAGE_PREFIX)' in stage*) echo '\\$(STAGE_PREFIX)' | sed -e 's|stage|../stage|g';; *) echo '\\$(STAGE_PREFIX)';; esac\\`,\" \\\n-\t\t\t    Makefile.xx > Makefile.yy\n-\t\tfi\n-\t\trm -f Makefile.tem Makefile.xx\n-\t\tmv Makefile.yy Makefile.tem\n-\t\trm -f symtest.tem\n-\n-\t\tif [[ \"x$all_languages\" != x ]]\n-\t\tthen\n-\t\t\t# Missing space after `Merged' is intentional.\n-\t\t\techo \"Merged$all_languages fragment(s).\"\n \t\tfi\n \n \t# Otherwise, this is a language subdirectory.  If the host supports\n@@ -3045,51 +2831,22 @@ $program_transform_name/\" \\\n \t# `out_file', `out_object', `md_file', `lang_specs_files',\n \t# `lang_options_files', `INSTALL_HEADERS_DIR', and `CROSS_FLOAT_H'\n \t# values in the Makefile from the values they have in this script.\n-\trm -f Makefile.xx\n-\trm -f aux-output.c aux-output.o md\n-\t# Create an empty Makefile.sed first, to work around a Nextstep 3.3 bug.\n-\techo 's|\f||' > Makefile.sed\n-\trm Makefile.sed\n-\techo 's|\f||' > Makefile.sed\n-\techo \"s|^target=.*$|target=${target}|\" >> Makefile.sed\n-\techo \"s|^target_alias=.*$|target_alias=${target}|\" >> Makefile.sed\n-\techo \"s|^xmake_file=.*$|xmake_file=${dep_host_xmake_file}|\" >> Makefile.sed\n-\techo \"s|^tmake_file=.*$|tmake_file=${dep_tmake_file}|\" >> Makefile.sed\n-\techo \"s|^version=.*$|version=${version}|\" >> Makefile.sed\n-\techo \"s|^version=.*$|version=${version}|\" >> Makefile.sed\n-\techo \"s|^out_file=.*$|out_file=${srcdir}/config/${out_file}|\" >> Makefile.sed\n-\techo \"s|^out_object_file=.*$|out_object_file=${out_object_file}|\" >> Makefile.sed\n-\techo \"s|^md_file=.*$|md_file=${md_file}|\" >> Makefile.sed\n+\n \ttm_file_sub=\n \tfor f in $tm_file; do\n \t\ttm_file_sub=\"${tm_file_sub} ${srcdir}/config/$f\"\n \tdone\n-\techo \"s|^tm_file=.*$|tm_file=${tm_file_sub}|\" >> Makefile.sed\n+\n \thost_xm_file_sub=\n \tfor f in $host_xm_file; do\n \t\thost_xm_file_sub=\"${host_xm_file_sub} ${srcdir}/config/$f\"\n \tdone\n-\techo \"s|^host_xm_file=.*$|host_xm_file=${host_xm_file_sub}|\" >> Makefile.sed\n+\n \tbuild_xm_file_sub=\n \tfor f in $build_xm_file; do\n \t\tbuild_xm_file_sub=\"${build_xm_file_sub} ${srcdir}/config/$f\"\n \tdone\n-\techo \"s|^build_xm_file=.*$|build_xm_file=${build_xm_file_sub}|\" >> Makefile.sed\n-\techo \"s|^lang_specs_files=.*$|lang_specs_files=${lang_specs_files}|\" >> Makefile.sed\n-\techo \"s|^lang_options_files=.*$|lang_options_files=${lang_options_files}|\" >> Makefile.sed\n-\techo \"s|^OBJC_THREAD_FILE=.*$|OBJC_THREAD_FILE=thr-${objc_thread_file}|\" >> Makefile.sed\n-\techo \"s|^prefix[[ \t]]*=.*|prefix = $prefix|\" >> Makefile.sed\n-\techo \"s|^local_prefix[[ \t]]*=.*|local_prefix = $local_prefix|\" >> Makefile.sed\n-\techo \"s|^exec_prefix[[ \t]]*=.*|exec_prefix = $exec_prefix|\" >> Makefile.sed\n-\techo \"s|^FIXINCLUDES[[ \t]]*=.*|FIXINCLUDES = $fixincludes|\" >> Makefile.sed\n-\techo \"s|^INSTALL_HEADERS_DIR[[ \t]]*=.*$|INSTALL_HEADERS_DIR = ${build_install_headers_dir}|\" >> Makefile.sed\n-\techo \"s|^exeext[[ \t]]*=.*$|exeext = ${build_exeext}|\" >> Makefile.sed\n-\techo \"s|^CROSS_FLOAT_H[[\t]]*=.*|CROSS_FLOAT_H=\\$(srcdir)/config/float-${float_format}.h|\" >> Makefile.sed\n-\tsed -f Makefile.sed Makefile.tem > Makefile.xx\n-\trm -f Makefile.tem Makefile.sed\n-\tmv Makefile.xx Makefile.tem\n-\n-\t# Install Makefile for real, after making final changes.\n+\n \t# Define macro CROSS_COMPILE in compilation\n \t# if this is a cross-compiler.\n \t# Also use all.cross instead of all.internal\n@@ -3098,11 +2855,6 @@ $program_transform_name/\" \\\n \tthen\n \t\tcross_defines=\"CROSS=-DCROSS_COMPILE\"\n \t\tcross_overrides=\"./cross-make\"\n-\t\trm -f Makefile.xx\n-\t\techo \"CROSS=-DCROSS_COMPILE\" > Makefile.xx\n-\t\tsed -e \"/####cross/  r ${mainsrcdir}/cross-make\" Makefile.tem >> Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n \tfi\n \n \t# When building gcc with a cross-compiler, we need to fix a few things.\n@@ -3111,21 +2863,6 @@ $program_transform_name/\" \\\n   \tif [[ x$build != x$host ]]\n \tthen\n \t\tbuild_overrides=\"./build-make\"\n-\t\trm -f Makefile.xx\n-\t\techo \"build= $build\" > Makefile.xx\n-\t\techo \"host= $host\" >> Makefile.xx\n-    \t\tsed -e \"s|objc-runtime$||\" \\\n-\t\t    -e \"/####build/  r ${mainsrcdir}/build-make\" Makefile.tem >> Makefile.xx\n-\t\trm -f Makefile.tem\n-\t\tmv Makefile.xx Makefile.tem\n-\tfi\n-\n-\trm -f Makefile\n-\tmv Makefile.tem Makefile\n-\n-\tif [[ $subdir != . ]]\n-\tthen\n-\t\techo \"Created \\`$subdir/Makefile'.\"\n \tfi\n \n \tcd $STARTDIR\n@@ -3209,4 +2946,71 @@ fi\n # AC_CONFIG_SUBDIRS($subdirs)\n \n # Create the Makefile\n-AC_OUTPUT(Makefile)\n+# and configure language subdirectories\n+AC_OUTPUT(Makefile,\n+. $srcdir/configure.lang,\n+host='${host}'\n+build='${build}'\n+target='${target}'\n+srcdir='${srcdir}'\n+subdirs='${subdirs}'\n+symbolic_link='${symbolic_link}'\n+program_transform_set='${program_transform_set}'\n+program_transform_name='${program_transform_name}'\n+all_languages='${all_languages}'\n+all_boot_languages='${all_boot_languages}'\n+all_compilers='${all_compilers}'\n+all_lang_makefiles='${all_lang_makefiles}'\n+all_stagestuff='${all_stagestuff}'\n+all_diff_excludes='${all_diff_excludes}'\n+all_lib2funcs='${all_lib2funcs}'\n+all_headers='${all_headers}'\n+extra_headers='${extra_headers}'\n+extra_passes='${extra_passes}'\n+extra_programs='${extra_programs}'\n+extra_parts='${extra_parts}'\n+extra_objs='${extra_objs}'\n+host_extra_gcc_objs='${host_extra_gcc_objs}'\n+extra_headers_list='${extra_headers_list}'\n+dep_host_xmake_file='${dep_host_xmake_file}'\n+host_xmake_file='${host_xmake_file}'\n+dep_tmake_file='${dep_tmake_file}'\n+tmake_file='${tmake_file}'\n+out_file='${out_file}'\n+out_object_file='${out_object_file}'\n+md_file='${md_file}'\n+md_file_sub='${md_file_sub}'\n+tm_file_list='${tm_file_list}'\n+tm_file_sub='${tm_file_sub}'\n+build_xm_file_list='${build_xm_file_list}'\n+build_xm_file_sub='${build_xm_file_sub}'\n+host_xm_file_list='${host_xm_file_list}'\n+host_xm_file_sub='${host_xm_file_sub}'\n+lang_specs_files='${lang_specs_files}'\n+lang_options_files='${lang_options_files}'\n+objc_thread_file='${objc_thread_file}'\n+version='${version}'\n+local_prefix='${local_prefix}'\n+fixincludes='${fixincludes}'\n+build_install_headers_dir='${build_install_headers_dir}'\n+exeext='${exeext}'\n+float_format='${float_format}'\n+use_collect2='${use_collect2}'\n+will_use_collect2='${will_use_collect2}'\n+maybe_use_collect2='${maybe_use_collect2}'\n+cc_set_by_configure='${cc_set_by_configure}'\n+stage_prefix_set_by_configure='${stage_prefix_set_by_configure}'\n+gdb_needs_out_file_path='${gdb_needs_out_file_path}'\n+SET_MAKE='${SET_MAKE}'\n+build_broken_install='${build_broken_install}'\n+md_cppflags='${md_cppflags}'\n+target_list='${target_list}'\n+\n+target_overrides='${target_overrides}'\n+host_overrides='${host_overrides}'\n+cross_defines='${cross_defines}'\n+cross_overrides='${cross_overrides}'\n+build_overrides='${build_overrides}'\n+language_fragments='${language_fragments}'\n+language_hooks='${language_hooks}'\n+)"}]}