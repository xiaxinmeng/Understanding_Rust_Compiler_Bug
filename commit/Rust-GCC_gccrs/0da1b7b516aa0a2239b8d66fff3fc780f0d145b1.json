{"sha": "0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRhMWI3YjUxNmFhMGEyMjM5YjhkNjZmZmYzZmM3ODBmMGQxNDViMQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-09-15T00:41:11Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-09-15T00:41:11Z"}, "message": "headers_cc.txt: \"Sync\"/copy real file over.\n\n2001-09-14  Phil Edwards  <pme@sources.redhat.com>\n\n\t* docs/html/17_intro/headers_cc.txt:  \"Sync\"/copy real file over.\n\t* docs/html/17_intro/howto.html:  Spacing and HTML markup fixes.\n\t* docs/html/18_support/howto.html:  It won't compile; it's not code.\n\t* docs/html/19_diagnostics/howto.html:  Point diagram seekers to\n\tdoxygen'd pages.\n\t* docs/html/22_locale/howto.html:  Comment for future work.\n\t* docs/html/23_containers/howto.html:  More comments.\n\t* docs/html/25_algorithms/howto.html:  It's a comment, not a\n\tblunt command to the reader.  (English grammar.)\n\nFrom-SVN: r45620", "tree": {"sha": "7c4d5e1f7a3e28a78487354a0bdda0a5aace234f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c4d5e1f7a3e28a78487354a0bdda0a5aace234f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/comments", "author": null, "committer": null, "parents": [{"sha": "653d5d95bcf74064e9cc80423eceebdc3767e9f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/653d5d95bcf74064e9cc80423eceebdc3767e9f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/653d5d95bcf74064e9cc80423eceebdc3767e9f4"}], "stats": {"total": 145, "additions": 99, "deletions": 46}, "files": [{"sha": "76869661c26fbdb0be2e1a4dc3522bf191e7cad3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "patch": "@@ -1,3 +1,15 @@\n+2001-09-14  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* docs/html/17_intro/headers_cc.txt:  \"Sync\"/copy real file over.\n+\t* docs/html/17_intro/howto.html:  Spacing and HTML markup fixes.\n+\t* docs/html/18_support/howto.html:  It won't compile; it's not code.\n+\t* docs/html/19_diagnostics/howto.html:  Point diagram seekers to\n+\tdoxygen'd pages.\n+\t* docs/html/22_locale/howto.html:  Comment for future work.\n+\t* docs/html/23_containers/howto.html:  More comments.\n+\t* docs/html/25_algorithms/howto.html:  It's a comment, not a\n+\tblunt command to the reader.  (English grammar.)\n+\n 2001-09-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/locale/moneypunct_members_gnu.cc: Fix initialization of"}, {"sha": "eb930f1ff00211f0299c61a9e6bc6d564944bb0d", "filename": "libstdc++-v3/docs/html/17_intro/headers_cc.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fheaders_cc.txt?ref=0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "patch": "@@ -80,4 +80,4 @@\n   #include <cwctype>\n #endif\n \n-int main() { }\n+int main() { return 0; }"}, {"sha": "c55f1fba0f84381862197ce03dd87a29024f21cb", "filename": "libstdc++-v3/docs/html/17_intro/howto.html", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fhowto.html?ref=0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "patch": "@@ -8,7 +8,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 17</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.5 2001/05/31 02:45:03 ljrittle Exp $ -->\n+<!-- $Id: howto.html,v 1.6 2001/06/08 03:53:35 ljrittle Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -70,8 +70,7 @@ <H2><A NAME=\"3\">Thread-safety</A></H2>\n       definition that SGI</A> uses for their STL subset.\n       <EM>Please see the many cautions given in HOWTOs on containers.</EM>\n    </P>\n-   <P>\n-      Here is another attempt at explaining the dangers of using the\n+   <P>Here is another attempt at explaining the dangers of using the\n       STL with threading support without understanding some important\n       details.  The STL implementation is currently configured to use\n       the high-speed caching memory allocator.  If you absolutely\n@@ -82,22 +81,21 @@ <H2><A NAME=\"3\">Thread-safety</A></H2>\n       libstdc++-v3 when you provide -D__USE_MALLOC on the command line\n       or make a change to that configuration file.\n    </P>\n-   <P>\n-      If you don't like caches of objects being retained inside the\n-      STL, then you might be tempted to define __USE_MALLOC either on\n-      the command line or by rebuilding c++config.h.  Please note,\n-      once you define __USE_MALLOC, only the malloc allocator is\n-      visible to application code (i.e. the typically higher-speed\n-      allocator is not even available in this configuration).  There\n-      is a better way: It is possible to force the malloc-based\n-      allocator on a per-case-basis for some application code even\n-      when the above macro symbol is not defined.  The author of this\n-      comment believes that is a better way to tune an application for\n-      high-speed using this implementation of the STL.  Here is one\n-      possible example displaying the forcing of the malloc-based\n+   <P>If you don't like caches of objects being retained inside the STL, then\n+      you might be tempted to define __USE_MALLOC either on the command\n+      line or by rebuilding c++config.h.  Please note, once you define\n+      __USE_MALLOC, only the malloc allocator is visible to application code\n+      (i.e. the typically higher-speed allocator is not even available\n+      in this configuration).  There is a better way:  It is possible\n+      to force the malloc-based allocator on a per-case-basis for some\n+      application code even when the above macro symbol is not defined.\n+      The library team generally believes that this is a better way to tune\n+      an application for high-speed using this implementation of the STL.\n+      Here is one possible example displaying the forcing of the malloc-based\n       allocator over the typically higher-speed default allocator:\n-\n-      std::list <void*, std::malloc_alloc> my_malloc_based_list;\n+      <PRE>\n+      std::list &lt;void*, std::malloc_alloc&gt;  my_malloc_based_list;\n+      </PRE>\n    </P>\n    <P>A recent journal article has described &quot;atomic integer\n       operations,&quot; which would allow us to, well, perform updates\n@@ -114,16 +112,18 @@ <H2><A NAME=\"3\">Thread-safety</A></H2>\n       latest-to-oldest order.\n       <UL>\n         <LI><A HREF=\"http://gcc.gnu.org/ml/libstdc++/2001-05/msg00384.html\">\n-\tinspired this most recent updating of issues with threading\n-\tand the SGI STL library.  It also contains some example\n-\tPOSIX-multithreaded STL code.</A>\n-\t<LI> <A HREF=\"http://gcc.gnu.org/ml/libstdc++/2001-05/msg00136.html\">\n-\tan early analysis of why __USE_MALLOC should be disable for\n-\tthe 3.0 release of libstdc++.</A>\n+        inspired this most recent updating of issues with threading\n+        and the SGI STL library.  It also contains some example\n+        POSIX-multithreaded STL code.</A>\n+        <LI> <A HREF=\"http://gcc.gnu.org/ml/libstdc++/2001-05/msg00136.html\">\n+        an early analysis of why __USE_MALLOC should be disabled for\n+        the 3.0 release of libstdc++.</A>\n       </UL>\n       <BR>\n       Here are discussions that took place before the current snapshot;\n-      they are still relevant and instructive.\n+      they are still relevant and instructive.  (Some of them may not work;\n+      as the drive containing some of the 1999 archives crashed, and nobody\n+      has had time to recover the backups.)\n       <BR>\n       <UL>\n         <LI>One way of preventing memory leaks by the old default memory\n@@ -181,7 +181,7 @@ <H2><A NAME=\"4\"><TT>&lt;foo&gt;</TT> vs <TT>&lt;foo.h&gt;</TT></A></H2>\n <P CLASS=\"fineprint\"><EM>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</A>.\n-<BR> $Id: howto.html,v 1.5 2001/05/31 02:45:03 ljrittle Exp $\n+<BR> $Id: howto.html,v 1.6 2001/06/08 03:53:35 ljrittle Exp $\n </EM></P>\n \n "}, {"sha": "04f61aec1e6f13f67bc21ab8464f872ad38e17ba", "filename": "libstdc++-v3/docs/html/18_support/howto.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html?ref=0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "patch": "@@ -8,7 +8,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 18</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.2 2001/04/03 00:26:55 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.3 2001/05/30 21:54:58 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -171,7 +171,7 @@ <H2><A NAME=\"3\">Start and Termination</A></H2>\n             reverse order of registration, once per registration call.\n             (This isn't actually new.)\n         <LI>The previous two actions are &quot;interleaved,&quot; that is,\n-            given this code:\n+            given this pseudocode:\n             <PRE>\n               extern \"C or C++\" void  f1 (void);\n               extern \"C or C++\" void  f2 (void);\n@@ -265,7 +265,7 @@ <H2><A NAME=\"4\">Dynamic memory management</A></H2>\n <P CLASS=\"fineprint\"><EM>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</A>.\n-<BR> $Id: howto.html,v 1.2 2001/04/03 00:26:55 pme Exp $\n+<BR> $Id: howto.html,v 1.3 2001/05/30 21:54:58 pme Exp $\n </EM></P>\n \n "}, {"sha": "f7576061335da3a9a82cf240d66e65ae35190dd5", "filename": "libstdc++-v3/docs/html/19_diagnostics/howto.html", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html?ref=0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "patch": "@@ -8,7 +8,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 19</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.3 2001/04/03 00:26:55 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.4 2001/05/30 21:54:59 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -59,8 +59,15 @@ <H2><A NAME=\"1\">Adding data to exceptions</A></H2>\n \n <HR>\n <H2><A NAME=\"2\">Exception class hierarchy diagram</A></H2>\n-   <P>The <A HREF=\"exceptions_hiearchy.pdf\">diagram</A> is in PDF, or\n-      at least it will be once it gets finished.\n+   <P>At one point we were going to make up a PDF of the exceptions\n+      hierarchy, akin to the one done for the I/O class hierarchy.\n+      Time was our enemy.  Since then we've moved to Doxygen, which has\n+      the useful property of not sucking.  Specifically, when the source\n+      code is changed, the diagrams are automatically brought up to date.\n+      For the old way, we had to update the diagrams separately.\n+   </P>\n+   <P>There are several links to the Doxygen-generated pages from\n+      <A HREF=\"../documentation.html\">here</A>.\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n@@ -108,7 +115,7 @@ <H2><A NAME=\"3\">Concept checkers -- <STRONG>new and improved!</STRONG></A></H2>\n <P CLASS=\"fineprint\"><EM>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</A>.\n-<BR> $Id: howto.html,v 1.3 2001/04/03 00:26:55 pme Exp $\n+<BR> $Id: howto.html,v 1.4 2001/05/30 21:54:59 pme Exp $\n </EM></P>\n \n "}, {"sha": "2edcad94fc279925fe7f42159f378d0193286d20", "filename": "libstdc++-v3/docs/html/22_locale/howto.html", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html?ref=0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "patch": "@@ -8,14 +8,18 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 22</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.3 2001/04/03 00:26:55 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.4 2001/08/08 02:48:58 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n <H1 CLASS=\"centered\"><A NAME=\"top\">Chapter 22:  Localization</A></H1>\n \n <P>Chapter 22 deals with the C++ localization facilities.\n </P>\n+<!-- I wanted to write that sentence in something requiring an exotic font,\n+     like Cryllic or Kanji.  Probably more work than such cuteness is worth,\n+     but I still think it'd be funny.\n+ -->\n \n \n <!-- ####################################################### -->\n@@ -176,7 +180,7 @@ <H2><A NAME=\"7\">Correct Transformations</A></H2>\n    int main ()\n    {\n       std::string  s (\"Some Kind Of Initial Input Goes Here\");\n-      Toupper      up ( std::locale(\"C\") );\n+      Toupper      up   ( std::locale(\"C\") );\n       Tolower      down ( std::locale(\"C\") );\n    \n       // Change everything into upper case\n@@ -210,7 +214,7 @@ <H2><A NAME=\"7\">Correct Transformations</A></H2>\n <P CLASS=\"fineprint\"><EM>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</A>.\n-<BR> $Id: howto.html,v 1.3 2001/04/03 00:26:55 pme Exp $\n+<BR> $Id: howto.html,v 1.4 2001/08/08 02:48:58 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "7ae920bc86d74d1380c676fc9b26455510efca73", "filename": "libstdc++-v3/docs/html/23_containers/howto.html", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F23_containers%2Fhowto.html?ref=0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "patch": "@@ -8,7 +8,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 23</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.6 2001/06/08 03:53:35 ljrittle Exp $ -->\n+<!-- $Id: howto.html,v 1.7 2001/08/24 20:34:34 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -26,6 +26,7 @@ <H1>Contents</H1>\n    <LI><A HREF=\"#2\">Variable-sized bitmasks</A>\n    <LI><A HREF=\"#3\">Containers and multithreading</A>\n    <LI><A HREF=\"#4\">&quot;Hinting&quot; during insertion</A>\n+   <LI><A HREF=\"#5\">Bitmasks and string arguments</A>\n </UL>\n \n <HR>\n@@ -298,13 +299,19 @@ <H2><A NAME=\"4\">&quot;Hinting&quot; during insertion</A></H2>\n           between <TT>h</TT> and <TT>h</TT>'s predecessor.\n      </UL>\n    </P>\n+   <P>For <TT>multimap</TT> and <TT>multiset</TT>, the restrictions are\n+      slightly looser:  &quot;greater than&quot; should be replaced by\n+      &quot;not less than&quot; and &quot;less than&quot; should be replaced\n+      by &quot;not greater than.&quot;  (Why not replace greater with\n+      greater-than-or-equal-to?  You probably could in your head, but the\n+      mathematicians will tell you that it isn't the same thing.)\n+   </P>\n    <P>If the conditions are not met, then the hint is not used, and the\n       insertion proceeds as if you had called <TT> a.insert(t) </TT>\n       instead.  (<STRONG>Note </STRONG> that GCC releases prior to 3.0.2\n-      had a bug in the case with <TT>hint == begin()</TT>.  You should not\n-      use a hint argument in those releases.)\n-(Was it just with map or with all the rbtree-using containers?  Still need\n-to check that.)\n+      had a bug in the case with <TT>hint == begin()</TT> for the\n+      <TT>map</TT> and <TT>set</TT> classes.  You should not use a hint\n+      argument in those releases.)\n    </P>\n    <P>This behavior goes well with other container's <TT>insert()</TT>\n       functions which take an iterator:  if used, the new item will be\n@@ -326,14 +333,37 @@ <H2><A NAME=\"4\">&quot;Hinting&quot; during insertion</A></H2>\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n    </P>\n \n+<HR>\n+<H2><A NAME=\"5\">Bitmasks and string arguments</A></H2>\n+   <P>Bitmasks do not take char* nor const char* arguments in their\n+      constructors.  This is something of an accident, but you can read\n+      about the problem:  follow the library's &quot;Links&quot; from the\n+      homepage, and from the C++ information &quot;defect reflector&quot;\n+      link, select the library issues list.  Issue number 116 describes the\n+      problem.\n+   </P>\n+   <P>For now you can simply make a temporary string object using the\n+      constructor expression:\n+      <PRE>\n+      std::bitset&lt;5&gt; b ( std::string(&quot;10110&quot;) );\n+      </PRE>\n+      instead of\n+      <PRE>\n+      std::bitset&lt;5&gt; b ( &quot;10110&quot; );    // invalid\n+      </PRE>\n+   </P>\n+   <P>Return <A HREF=\"#top\">to top of page</A> or\n+      <A HREF=\"../faq/index.html\">to the FAQ</A>.\n+   </P>\n+ \n \n <!-- ####################################################### -->\n \n <HR>\n <P CLASS=\"fineprint\"><EM>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</A>.\n-<BR> $Id: howto.html,v 1.6 2001/06/08 03:53:35 ljrittle Exp $\n+<BR> $Id: howto.html,v 1.7 2001/08/24 20:34:34 pme Exp $\n </EM></P>\n \n "}, {"sha": "1e1ea29d62dee2a569d76555bd23aa547382d56a", "filename": "libstdc++-v3/docs/html/25_algorithms/howto.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da1b7b516aa0a2239b8d66fff3fc780f0d145b1/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F25_algorithms%2Fhowto.html?ref=0da1b7b516aa0a2239b8d66fff3fc780f0d145b1", "patch": "@@ -8,7 +8,7 @@\n    <META NAME=\"GENERATOR\" CONTENT=\"vi and eight fingers\">\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 25</TITLE>\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.2 2001/04/03 00:26:56 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.3 2001/05/30 21:55:02 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -38,7 +38,7 @@ <H2><A NAME=\"1\">Prerequisites</A></H2>\n       <OL>\n         <LI>Anything that behaves like an iterator can be used in one of\n             these algorithms.  Raw pointers make great candidates, thus\n-            built-in arrays are fine containers.  So do your own iterators.\n+            built-in arrays are fine containers, as well as your own iterators.\n         <LI>The algorithms do not (and cannot) affect the container as a\n             whole; only the things between the two iterator endpoints.  If\n             you pass a range of iterators only enclosing the middle third of\n@@ -87,7 +87,7 @@ <H2><A NAME=\"2\">Topic</A></H2>\n <P CLASS=\"fineprint\"><EM>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:libstdc++@gcc.gnu.org\">the mailing list</A>.\n-<BR> $Id: howto.html,v 1.2 2001/04/03 00:26:56 pme Exp $\n+<BR> $Id: howto.html,v 1.3 2001/05/30 21:55:02 pme Exp $\n </EM></P>\n \n "}]}