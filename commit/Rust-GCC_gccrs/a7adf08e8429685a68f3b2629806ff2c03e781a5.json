{"sha": "a7adf08e8429685a68f3b2629806ff2c03e781a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdhZGYwOGU4NDI5Njg1YTY4ZjNiMjYyOTgwNmZmMmMwM2U3ODFhNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-03-11T14:01:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-03-11T14:01:27Z"}, "message": "alpha.h (HARD_REGNO_MODE_OK): Disallow QI/HImode in fp regs.\n\n        * alpha.h (HARD_REGNO_MODE_OK): Disallow QI/HImode in fp regs.\n        (MODES_TIEABLE_P): Update.\n\nFrom-SVN: r25704", "tree": {"sha": "4c9f53097f0d288aa15df524ffd89ad6d03c6b2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9f53097f0d288aa15df524ffd89ad6d03c6b2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7adf08e8429685a68f3b2629806ff2c03e781a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7adf08e8429685a68f3b2629806ff2c03e781a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7adf08e8429685a68f3b2629806ff2c03e781a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7adf08e8429685a68f3b2629806ff2c03e781a5/comments", "author": null, "committer": null, "parents": [{"sha": "27922c1362c0c8b3edf757a216195eceae3f51e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27922c1362c0c8b3edf757a216195eceae3f51e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27922c1362c0c8b3edf757a216195eceae3f51e2"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "21a9c221a83799d31557bed88a8ea41311234b4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7adf08e8429685a68f3b2629806ff2c03e781a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7adf08e8429685a68f3b2629806ff2c03e781a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7adf08e8429685a68f3b2629806ff2c03e781a5", "patch": "@@ -1,3 +1,8 @@\n+Thu Mar 11 14:00:58 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.h (HARD_REGNO_MODE_OK): Disallow QI/HImode in fp regs.\n+\t(MODES_TIEABLE_P): Update.\n+\n Thu Mar 11 13:55:52 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* machmode.h (smallest_mode_for_size): Prototype."}, {"sha": "3e119a70afdd54e2b0ba3c655557e5f95d6945df", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7adf08e8429685a68f3b2629806ff2c03e781a5/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7adf08e8429685a68f3b2629806ff2c03e781a5/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=a7adf08e8429685a68f3b2629806ff2c03e781a5", "patch": "@@ -620,18 +620,20 @@ extern void override_options ();\n /* Value is 1 if hard register REGNO can hold a value of machine-mode MODE.\n    On Alpha, the integer registers can hold any mode.  The floating-point\n    registers can hold 32-bit and 64-bit integers as well, but not 16-bit\n-   or 8-bit values.  If we only allowed the larger integers into FP registers,\n-   we'd have to say that QImode and SImode aren't tiable, which is a\n-   pain.  So say all registers can hold everything and see how that works.  */\n+   or 8-bit values.  */\n \n-#define HARD_REGNO_MODE_OK(REGNO, MODE) 1\n+#define HARD_REGNO_MODE_OK(REGNO, MODE) \t\t\t\\\n+  ((REGNO) < 32 || ((MODE) != QImode && (MODE) != HImode))\n \n /* Value is 1 if it is a good idea to tie two pseudo registers\n    when one has mode MODE1 and one has mode MODE2.\n    If HARD_REGNO_MODE_OK could produce different values for MODE1 and MODE2,\n    for any hard reg, then this must be 0 for correct output.  */\n \n-#define MODES_TIEABLE_P(MODE1, MODE2) 1\n+#define MODES_TIEABLE_P(MODE1, MODE2) \t\t\t\t\\\n+  ((MODE1) == QImode || (MODE1) == HImode\t\t\t\\\n+   ? (MODE2) == QImode || (MODE2) == HImode\t\t\t\\\n+   : 1)\n \n /* Specify the registers used for certain standard purposes.\n    The values of these macros are register numbers.  */"}]}