{"sha": "c31049fdc100956733d8388beb92584e116f0e66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMxMDQ5ZmRjMTAwOTU2NzMzZDgzODhiZWI5MjU4NGUxMTZmMGU2Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-12T21:59:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-12T21:59:18Z"}, "message": "Don't define emit_float_lib_cmp now that no longer static.\n\nFrom-SVN: r6760", "tree": {"sha": "e51aa924562f4ffaf0766614f9eb96f984c6c42f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e51aa924562f4ffaf0766614f9eb96f984c6c42f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c31049fdc100956733d8388beb92584e116f0e66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c31049fdc100956733d8388beb92584e116f0e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c31049fdc100956733d8388beb92584e116f0e66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c31049fdc100956733d8388beb92584e116f0e66/comments", "author": null, "committer": null, "parents": [{"sha": "cb2cab79ebd72e07221b068cfef138bc708fc426", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2cab79ebd72e07221b068cfef138bc708fc426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb2cab79ebd72e07221b068cfef138bc708fc426"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3de64715d5bd36e6aa9002e47aae2521b7c6eaa7", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c31049fdc100956733d8388beb92584e116f0e66/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c31049fdc100956733d8388beb92584e116f0e66/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c31049fdc100956733d8388beb92584e116f0e66", "patch": "@@ -204,8 +204,8 @@ rtxfun bcc_gen_fctn[NUM_RTX_CODE];\n enum insn_code setcc_gen_code[NUM_RTX_CODE];\n \n static int add_equal_note\tPROTO((rtx, rtx, enum rtx_code, rtx, rtx));\n-static rtx widen_operand\tPROTO((rtx, enum machine_mode, enum machine_mode, int, int));\n-void emit_float_lib_cmp\tPROTO((rtx, rtx, enum rtx_code));\n+static rtx widen_operand\tPROTO((rtx, enum machine_mode,\n+\t\t\t\t       enum machine_mode, int, int));\n static enum insn_code can_fix_p\tPROTO((enum machine_mode, enum machine_mode,\n \t\t\t\t       int, int *));\n static enum insn_code can_float_p PROTO((enum machine_mode, enum machine_mode,"}]}