{"sha": "3bfa96895b3219afd93a7038850baef4b63c1f82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JmYTk2ODk1YjMyMTlhZmQ5M2E3MDM4ODUwYmFlZjRiNjNjMWY4Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-18T15:21:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-18T15:21:52Z"}, "message": "c++: Fix -std=c++20 ICE on virtual method call [PR99132]\n\nOn the following testcase we ICE in C++20 mode during cp_get_callee_fndecl\n-> constexpr evaluation.\nIt is only in C++20 mode on this testcase because virtual methods can't\nbe constexpr in C++17 and earlier and so potential_constant_expression_1\nrejects it earlier.\nAnd the ICE is caused by genericization changing the h PARM_DECL from having\nB<C *> type to B<C *> & DECL_BY_REFERENCE and the constexpr evaluation\nnot being able to deal with that.\nI think this just shows that we shouldn't do the constexpr evaluation during\ngenericization and later, and other spots e.g. during gimplification\nalso don't call cp_get_callee_fndecl but cp_get_callee_fndecl_nofold.\nAfter all, cp_fold has already been run and it did the folding if there\nwas any opportunity to do so.  And furthermore, what that cp_genericize_r\nspot does is check for any left-over immediate function calls (which can be\nATM just std::source_location::current() call) and immediate functions\noutside of immediate functions can't have addresses leaked into the IL,\nso it will be always a direct call anyway.  And immediate functions\nthemselves don't make it into genericization/gimplification.\n\n2021-02-18  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/99132\n\t* cp-gimplify.c (cp_genericize_r) <case CALL_EXPR>: Use\n\tcp_get_callee_fndecl_nofold instead of cp_get_callee_fndecl to check\n\tfor immediate function calls.\n\n\t* g++.dg/cpp2a/constexpr-virtual18.C: New test.", "tree": {"sha": "db0554af17b92c82762da9c050e3df83db7c429c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db0554af17b92c82762da9c050e3df83db7c429c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bfa96895b3219afd93a7038850baef4b63c1f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bfa96895b3219afd93a7038850baef4b63c1f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bfa96895b3219afd93a7038850baef4b63c1f82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bfa96895b3219afd93a7038850baef4b63c1f82/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ee164dcfe390fc030028db9112d44255637b1aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee164dcfe390fc030028db9112d44255637b1aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee164dcfe390fc030028db9112d44255637b1aa"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "abb8a6ef0789ea37ad37157e25bd8dd9b96a8a44", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfa96895b3219afd93a7038850baef4b63c1f82/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfa96895b3219afd93a7038850baef4b63c1f82/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=3bfa96895b3219afd93a7038850baef4b63c1f82", "patch": "@@ -1386,7 +1386,7 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n \t  break;\n \t}\n \n-      if (tree fndecl = cp_get_callee_fndecl (stmt))\n+      if (tree fndecl = cp_get_callee_fndecl_nofold (stmt))\n \tif (DECL_IMMEDIATE_FUNCTION_P (fndecl))\n \t  {\n \t    gcc_assert (source_location_current_p (fndecl));"}, {"sha": "2fbf0b22da346aa09fee16491271a162f160ccc1", "filename": "gcc/testsuite/g++.dg/cpp2a/constexpr-virtual18.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfa96895b3219afd93a7038850baef4b63c1f82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfa96895b3219afd93a7038850baef4b63c1f82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual18.C?ref=3bfa96895b3219afd93a7038850baef4b63c1f82", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/99132\n+// { dg-do compile { target c++11 } }\n+\n+template <class T> struct A { T c; };\n+template <class T> struct B {\n+  A<T> d;\n+  constexpr T operator-> () { return d.c; }\n+  B (B &&);\n+};\n+struct C {\n+  virtual void foo ();\n+  void bar (B<C *> h) { h->foo (); }\n+};"}]}