{"sha": "9304f876116aae3d297ab5bf7341749f09406a50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMwNGY4NzYxMTZhYWUzZDI5N2FiNWJmNzM0MTc0OWYwOTQwNmE1MA==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2013-10-31T17:08:16Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2013-10-31T17:08:16Z"}, "message": "Add new nds32 port, including machine description, libgcc, and documentation.\n\n[gcc/ChangeLog]\n\t* config.gcc (nds32*-*-*): Add nds32 target.\n\t* config/nds32/nds32.c: New file.\n\t* config/nds32/nds32.h: New file.\n\t* config/nds32/nds32.md: New file.\n\t* config/nds32/constants.md: New file.\n\t* config/nds32/constraints.md: New file.\n\t* config/nds32/iterators.md: New file.\n\t* config/nds32/nds32-doubleword.md: New file.\n\t* config/nds32/nds32-intrinsic.md: New file.\n\t* config/nds32/nds32_intrinsic.h: New file.\n\t* config/nds32/nds32-modes.def: New file.\n\t* config/nds32/nds32-multiple.md: New file.\n\t* config/nds32/nds32.opt: New file.\n\t* config/nds32/nds32-opts.h: New file.\n\t* config/nds32/nds32-protos.h: New file.\n\t* config/nds32/nds32-peephole2.md: New file.\n\t* config/nds32/pipelines.md: New file.\n\t* config/nds32/predicates.md: New file.\n\t* config/nds32/t-mlibs: New file.\n\t* common/config/nds32: New directory and files.\n\n\t* doc/invoke.texi (NDS32 options): Document nds32 specific options.\n\t* doc/md.texi (NDS32 family): Document nds32 specific constraints.\n\t* doc/install.texi (Cross-Compiler-Specific Options): Document\n\t--with-nds32-lib for nds32 target.\n\t* doc/extend.texi (Function Attributes, Target Builtins): Document\n\tnds32 specific attributes.\n\t\n[libgcc/ChangeLog]\n\t* config.host (nds32*-elf*): Add nds32 target.\n\t* config/nds32 : New directory and files.\n\t\n[contrib/ChangeLog]\n\t* config-list.mk (nds32le-elf, nds32be-elf): Add nds32 target.\n\nCo-Authored-By: Shiva Chen <shiva0217@gmail.com>\n\nFrom-SVN: r204269", "tree": {"sha": "5479731a485c268d194925363d10034093696843", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5479731a485c268d194925363d10034093696843"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9304f876116aae3d297ab5bf7341749f09406a50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9304f876116aae3d297ab5bf7341749f09406a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9304f876116aae3d297ab5bf7341749f09406a50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9304f876116aae3d297ab5bf7341749f09406a50/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7214306b3e376bff94b20e468018fb356264b33a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7214306b3e376bff94b20e468018fb356264b33a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7214306b3e376bff94b20e468018fb356264b33a"}], "stats": {"total": 26218, "additions": 26215, "deletions": 3}, "files": [{"sha": "3b0d76349e2efa329c494aeab31b2ffea9ce19e9", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -1,3 +1,7 @@\n+2013-10-31  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config-list.mk (nds32le-elf, nds32be-elf): Add nds32 target.\n+\n 2013-10-29  Tobias Burnus  <burnus@net-b.de>\n \n \t* gcc_update (files_and_dependencies): Add rules for"}, {"sha": "23d6e4aaddada71c837ad3561c7677addfdbb2c8", "filename": "contrib/config-list.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -47,6 +47,7 @@ LIST = aarch64-elf aarch64-linux-gnu \\\n   mips-wrs-vxworks mipstx39-elf mmix-knuth-mmixware mn10300-elf moxie-elf \\\n   moxie-uclinux moxie-rtems pdp11-aout picochip-elfOPT-enable-obsolete \\\n   msp430-elf \\\n+  nds32le-elf nds32be-elf \\\n   powerpc-darwin8 \\\n   powerpc-darwin7 powerpc64-darwin powerpc-freebsd6 powerpc-netbsd \\\n   powerpc-eabispe powerpc-eabisimaltivec powerpc-eabisim ppc-elf \\"}, {"sha": "c2e139faaff9ffe3ac031bd36e43b48de56491f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -1,3 +1,34 @@\n+2013-10-31  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\t    Shiva Chen  <shiva0217@gmail.com>\n+\n+\t* config.gcc (nds32*-*-*): Add nds32 target.\n+\t* config/nds32/nds32.c: New file.\n+\t* config/nds32/nds32.h: New file.\n+\t* config/nds32/nds32.md: New file.\n+\t* config/nds32/constants.md: New file.\n+\t* config/nds32/constraints.md: New file.\n+\t* config/nds32/iterators.md: New file.\n+\t* config/nds32/nds32-doubleword.md: New file.\n+\t* config/nds32/nds32-intrinsic.md: New file.\n+\t* config/nds32/nds32_intrinsic.h: New file.\n+\t* config/nds32/nds32-modes.def: New file.\n+\t* config/nds32/nds32-multiple.md: New file.\n+\t* config/nds32/nds32.opt: New file.\n+\t* config/nds32/nds32-opts.h: New file.\n+\t* config/nds32/nds32-protos.h: New file.\n+\t* config/nds32/nds32-peephole2.md: New file.\n+\t* config/nds32/pipelines.md: New file.\n+\t* config/nds32/predicates.md: New file.\n+\t* config/nds32/t-mlibs: New file.\n+\t* common/config/nds32: New directory and files.\n+\n+\t* doc/invoke.texi (NDS32 options): Document nds32 specific options.\n+\t* doc/md.texi (NDS32 family): Document nds32 specific constraints.\n+\t* doc/install.texi (Cross-Compiler-Specific Options): Document\n+\t--with-nds32-lib for nds32 target.\n+\t* doc/extend.texi (Function Attributes, Target Builtins): Document\n+\tnds32 specific attributes.\n+\n 2013-10-31  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* lra-constraints (process_alt_operands): Use the result"}, {"sha": "f82f725af14edcb268d9e301dcb7704233ba01fb", "filename": "gcc/common/config/nds32/nds32-common.c", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fcommon%2Fconfig%2Fnds32%2Fnds32-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fcommon%2Fconfig%2Fnds32%2Fnds32-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fnds32%2Fnds32-common.c?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,117 @@\n+/* Common hooks of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"diagnostic-core.h\"\n+#include \"tm.h\"\n+#include \"common/common-target.h\"\n+#include \"common/common-target-def.h\"\n+#include \"opts.h\"\n+#include \"flags.h\"\n+\n+/* ------------------------------------------------------------------------ */\n+\n+/* Implement TARGET_HANDLE_OPTION.  */\n+static bool\n+nds32_handle_option (struct gcc_options *opts ATTRIBUTE_UNUSED,\n+\t\t     struct gcc_options *opts_set ATTRIBUTE_UNUSED,\n+\t\t     const struct cl_decoded_option *decoded,\n+\t\t     location_t loc)\n+{\n+  size_t     code  = decoded->opt_index;\n+  int        value = decoded->value;\n+\n+  switch (code)\n+    {\n+    case OPT_misr_vector_size_:\n+      /* Check the valid vector size: 4 or 16.  */\n+      if (value != 4 && value != 16)\n+\t{\n+\t  error_at (loc, \"for the option -misr-vector-size=X, the valid X \"\n+\t\t\t \"must be: 4 or 16\");\n+\t  return false;\n+\t}\n+\n+      return true;\n+\n+    case OPT_mcache_block_size_:\n+      /* Check valid value: 4 8 16 32 64 128 256 512.  */\n+      if (exact_log2 (value) < 2 || exact_log2 (value) > 9)\n+\t{\n+\t  error_at (loc, \"for the option -mcache-block-size=X, the valid X \"\n+\t\t\t \"must be: 4, 8, 16, 32, 64, 128, 256, or 512\");\n+\t  return false;\n+\t}\n+\n+      return true;\n+\n+    default:\n+      return true;\n+    }\n+}\n+\n+/* ------------------------------------------------------------------------ */\n+\n+/* Implement TARGET_OPTION_OPTIMIZATION_TABLE.  */\n+static const struct default_options nds32_option_optimization_table[] =\n+{\n+  /* Enable -fomit-frame-pointer by default at -O1 or higher.  */\n+  { OPT_LEVELS_1_PLUS, OPT_fomit_frame_pointer, NULL, 1 },\n+  /* Enable -mv3push by default at -Os, but it is useless under V2 ISA.  */\n+  { OPT_LEVELS_SIZE,   OPT_mv3push,             NULL, 1 },\n+\n+  { OPT_LEVELS_NONE,   0,                       NULL, 0 }\n+};\n+\n+/* ------------------------------------------------------------------------ */\n+\f\n+/* Run-time Target Specification.  */\n+\n+/* Default enable\n+     TARGET_GP_DIRECT: Generate gp-imply instruction.\n+     TARGET_16_BIT   : Generate 16/32 bit mixed length instruction.\n+     TARGET_PERF_EXT : Generate performance extention instrcution.\n+     TARGET_CMOV     : Generate conditional move instruction.  */\n+#undef TARGET_DEFAULT_TARGET_FLAGS\n+#define TARGET_DEFAULT_TARGET_FLAGS\t\t\\\n+  (MASK_GP_DIRECT\t\t\t\t\\\n+   | MASK_16_BIT\t\t\t\t\\\n+   | MASK_PERF_EXT\t\t\t\t\\\n+   | MASK_CMOV)\n+\n+#undef TARGET_HANDLE_OPTION\n+#define TARGET_HANDLE_OPTION nds32_handle_option\n+\n+#undef TARGET_OPTION_OPTIMIZATION_TABLE\n+#define TARGET_OPTION_OPTIMIZATION_TABLE nds32_option_optimization_table\n+\n+\f\n+/* Defining the Output Assembler Language.  */\n+\n+#undef TARGET_EXCEPT_UNWIND_INFO\n+#define TARGET_EXCEPT_UNWIND_INFO sjlj_except_unwind_info\n+\n+/* ------------------------------------------------------------------------ */\n+\n+struct gcc_targetm_common targetm_common = TARGETM_COMMON_INITIALIZER;\n+\n+/* ------------------------------------------------------------------------ */"}, {"sha": "e1878bd8b457d63218d95189dfd4611acf4251ae", "filename": "gcc/config.gcc", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -421,6 +421,10 @@ mips*-*-*)\n \textra_headers=\"loongson.h\"\n \textra_options=\"${extra_options} g.opt mips/mips-tables.opt\"\n \t;;\n+nds32*)\n+\tcpu_type=nds32\n+\textra_headers=\"nds32_intrinsic.h\"\n+\t;;\n picochip-*-*)\n         cpu_type=picochip\n         ;;\n@@ -2091,6 +2095,18 @@ msp430*-*-*)\n \ttarget_has_targetm_common=no\n \ttmake_file=\"${tmake_file} msp430/t-msp430\"\n \t;;\n+nds32le-*-*)\n+\ttarget_cpu_default=\"0\"\n+\ttm_defines=\"${tm_defines}\"\n+\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttmake_file=\"nds32/t-mlibs\"\n+\t;;\n+nds32be-*-*)\n+\ttarget_cpu_default=\"0|MASK_BIG_ENDIAN\"\n+\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n+\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttmake_file=\"nds32/t-mlibs\"\n+\t;;\n pdp11-*-*)\n \ttm_file=\"${tm_file} newlib-stdint.h\"\n \tuse_gcc_stdint=wrap\n@@ -3754,6 +3770,39 @@ case \"${target}\" in\n \t\tesac\n \t\t;;\n \n+\tnds32*-*-*)\n+\t\tsupported_defaults=\"arch nds32_lib\"\n+\n+\t\t# process --with-arch\n+\t\tcase \"${with_arch}\" in\n+\t\t\"\" | v2 | v3 | v3m)\n+\t\t\t# OK\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Cannot accept --with-arch=$with_arch, available values are: v2 v3 v3m\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n+\n+\t\t# process --with-nds32-lib\n+\t\tcase \"${with_nds32_lib}\" in\n+\t\t\"\")\n+\t\t\t# the default library is newlib\n+\t\t\twith_nds32_lib=newlib\n+\t\t\t;;\n+\t\tnewlib)\n+\t\t\t# OK\n+\t\t\t;;\n+\t\tmculib)\n+\t\t\t# OK\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Cannot accept --with-nds32-lib=$with_nds32_lib, available values are: newlib mculib\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\n \tpowerpc*-*-* | rs6000-*-*)\n \t\tsupported_defaults=\"cpu cpu_32 cpu_64 float tune tune_32 tune_64\"\n "}, {"sha": "03a21dba1b2e893aa10ac3b212b8da50b00ea082", "filename": "gcc/config/nds32/constants.md", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fconstants.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fconstants.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fconstants.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,46 @@\n+;; Constant defintions of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+\n+;; Register numbers.\n+(define_constants\n+  [(R8_REGNUM  8)\n+   (TA_REGNUM 15)\n+   (FP_REGNUM 28)\n+   (GP_REGNUM 29)\n+   (LP_REGNUM 30)\n+   (SP_REGNUM 31)\n+  ])\n+\n+\n+;; The unspec_volatile operation index.\n+(define_c_enum \"unspec_volatile_element\" [\n+  UNSPEC_VOLATILE_FUNC_RETURN\n+  UNSPEC_VOLATILE_ISYNC\n+  UNSPEC_VOLATILE_ISB\n+  UNSPEC_VOLATILE_MFSR\n+  UNSPEC_VOLATILE_MFUSR\n+  UNSPEC_VOLATILE_MTSR\n+  UNSPEC_VOLATILE_MTUSR\n+  UNSPEC_VOLATILE_SETGIE_EN\n+  UNSPEC_VOLATILE_SETGIE_DIS\n+])\n+\n+;; ------------------------------------------------------------------------"}, {"sha": "b4ae6c7258c588a6a1ff91e75e74b575434534ce", "filename": "gcc/config/nds32/constraints.md", "status": "added", "additions": 254, "deletions": 0, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fconstraints.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,254 @@\n+;; Constraint definitions of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; Check 16.8.7 Defining Machine-Specific Constraints for detail.\n+\n+;; NO contrains can be prefixed with: E F V X g i m n o p r s\n+;; Machine-dependent integer: I J K L M N O P\n+;; Machine-dependent floating: G H\n+\n+\n+(define_register_constraint \"w\" \"(TARGET_ISA_V3 || TARGET_ISA_V3M) ? LOW_REGS : NO_REGS\"\n+  \"LOW register class $r0 ~ $r7 constraint for V3/V3M ISA\")\n+\n+(define_register_constraint \"l\" \"LOW_REGS\"\n+  \"LOW register class $r0 ~ $r7\")\n+\n+(define_register_constraint \"d\" \"MIDDLE_REGS\"\n+  \"MIDDLE register class $r0 ~ $r11, $r16 ~ $r19\")\n+\n+(define_register_constraint \"h\" \"HIGH_REGS\"\n+  \"HIGH register class $r12 ~ $r14, $r20 ~ $r31\")\n+\n+\n+(define_register_constraint \"t\" \"R15_TA_REG\"\n+  \"Temporary Assist register $ta (i.e. $r15)\")\n+\n+(define_register_constraint \"k\" \"STACK_REG\"\n+  \"Stack register $sp\")\n+\n+\n+(define_constraint \"Iu03\"\n+  \"Unsigned immediate 3-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 3) && ival >= 0\")))\n+\n+(define_constraint \"In03\"\n+  \"Negative immediate 3-bit value in the range of -7 to 0\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (ival, -7, 0)\")))\n+\n+(define_constraint \"Iu04\"\n+  \"Unsigned immediate 4-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 4) && ival >= 0\")))\n+\n+(define_constraint \"Is05\"\n+  \"Signed immediate 5-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 4) && ival >= -(1 << 4)\")))\n+\n+(define_constraint \"Iu05\"\n+  \"Unsigned immediate 5-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 5) && ival >= 0\")))\n+\n+(define_constraint \"In05\"\n+  \"Negative immediate 5-bit value in the range of -31 to 0\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (ival, -31, 0)\")))\n+\n+;; Ip05 is special and dedicated for v3 movpi45 instruction.\n+;; movpi45 has imm5u field but the range is 16 ~ 47.\n+(define_constraint \"Ip05\"\n+  \"Unsigned immediate 5-bit value for movpi45 instruction with range 16-47\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < ((1 << 5) + 16)\n+\t\t    && ival >= (0 + 16)\n+\t\t    && (TARGET_ISA_V3 || TARGET_ISA_V3M)\")))\n+\n+(define_constraint \"Iu06\"\n+  \"Unsigned immediate 6-bit value constraint for addri36.sp instruction\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 6)\n+\t\t    && ival >= 0\n+\t\t    && (ival % 4 == 0)\n+\t\t    && (TARGET_ISA_V3 || TARGET_ISA_V3M)\")))\n+\n+(define_constraint \"Iu08\"\n+  \"Unsigned immediate 8-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 8) && ival >= 0\")))\n+\n+(define_constraint \"Iu09\"\n+  \"Unsigned immediate 9-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 9) && ival >= 0\")))\n+\n+\n+(define_constraint \"Is10\"\n+  \"Signed immediate 10-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 9) && ival >= -(1 << 9)\")))\n+\n+(define_constraint \"Is11\"\n+  \"Signed immediate 11-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 10) && ival >= -(1 << 10)\")))\n+\n+\n+(define_constraint \"Is15\"\n+  \"Signed immediate 15-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 14) && ival >= -(1 << 14)\")))\n+\n+(define_constraint \"Iu15\"\n+  \"Unsigned immediate 15-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 15) && ival >= 0\")))\n+\n+\n+;; Ic15 is special and dedicated for performance extension\n+;; 'bclr' (single-bit-clear) instruction.\n+;; It is used in andsi3 pattern and recognized for the immediate\n+;; which is NOT in the range of imm15u but OK for 'bclr' instruction.\n+;; (If the immediate value IS in the range of imm15u,\n+;;  we can directly use 'andi' instruction.)\n+(define_constraint \"Ic15\"\n+  \"A constant which is not in the range of imm15u but ok for bclr instruction\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(ival & 0xffff8000) && nds32_can_use_bclr_p (ival)\")))\n+\n+;; Ie15 is special and dedicated for performance extension\n+;; 'bset' (single-bit-set) instruction.\n+;; It is used in iorsi3 pattern and recognized for the immediate\n+;; which is NOT in the range of imm15u but OK for 'bset' instruction.\n+;; (If the immediate value IS in the range of imm15u,\n+;;  we can directly use 'ori' instruction.)\n+(define_constraint \"Ie15\"\n+  \"A constant which is not in the range of imm15u but ok for bset instruction\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(ival & 0xffff8000) && nds32_can_use_bset_p (ival)\")))\n+\n+;; It15 is special and dedicated for performance extension\n+;; 'btgl' (single-bit-toggle) instruction.\n+;; It is used in xorsi3 pattern and recognized for the immediate\n+;; which is NOT in the range of imm15u but OK for 'btgl' instruction.\n+;; (If the immediate value IS in the range of imm15u,\n+;;  we can directly use 'xori' instruction.)\n+(define_constraint \"It15\"\n+  \"A constant which is not in the range of imm15u but ok for btgl instruction\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(ival & 0xffff8000) && nds32_can_use_btgl_p (ival)\")))\n+\n+\n+;; Ii15 is special and dedicated for v3 isa\n+;; 'bitci' (bit-clear-immediate) instruction.\n+;; It is used in andsi3 pattern and recognized for the immediate whose\n+;; (~ival) value is in the range of imm15u and OK for 'bitci' instruction.\n+;; For example, 'andi $r0,$r0,0xfffffffc' can be presented\n+;  with 'bitci $r0,$r0,3'.\n+(define_constraint \"Ii15\"\n+  \"A constant whose compliment value is in the range of imm15u\n+   and ok for bitci instruction\"\n+  (and (match_code \"const_int\")\n+       (match_test \"nds32_can_use_bitci_p (ival)\")))\n+\n+\n+(define_constraint \"Is16\"\n+  \"Signed immediate 16-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 15) && ival >= -(1 << 15)\")))\n+\n+(define_constraint \"Is17\"\n+  \"Signed immediate 17-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 16) && ival >= -(1 << 16)\")))\n+\n+\n+(define_constraint \"Is19\"\n+  \"Signed immediate 19-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 18) && ival >= -(1 << 18)\")))\n+\n+\n+(define_constraint \"Is20\"\n+  \"Signed immediate 20-bit value\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival < (1 << 19) && ival >= -(1 << 19)\")))\n+\n+\n+(define_constraint \"Ihig\"\n+  \"The immediate value that can be simply set high 20-bit\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(ival != 0) && ((ival & 0xfff) == 0)\")))\n+\n+(define_constraint \"Izeb\"\n+  \"The immediate value 0xff\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(ival == 0xff)\")))\n+\n+(define_constraint \"Izeh\"\n+  \"The immediate value 0xffff\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(ival == 0xffff)\")))\n+\n+(define_constraint \"Ixls\"\n+  \"The immediate value 0x01\"\n+  (and (match_code \"const_int\")\n+       (match_test \"TARGET_PERF_EXT && (ival == 0x1)\")))\n+\n+(define_constraint \"Ix11\"\n+  \"The immediate value 0x7ff\"\n+  (and (match_code \"const_int\")\n+       (match_test \"TARGET_PERF_EXT && (ival == 0x7ff)\")))\n+\n+(define_constraint \"Ibms\"\n+  \"The immediate value with power of 2\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(TARGET_ISA_V3 || TARGET_ISA_V3M)\n+\t\t    && (IN_RANGE (exact_log2 (ival), 0, 7))\")))\n+\n+(define_constraint \"Ifex\"\n+  \"The immediate value with power of 2 minus 1\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(TARGET_ISA_V3 || TARGET_ISA_V3M)\n+\t\t    && (IN_RANGE (exact_log2 (ival + 1), 1, 8))\")))\n+\n+\n+(define_memory_constraint \"U33\"\n+  \"Memory constraint for 333 format\"\n+  (and (match_code \"mem\")\n+       (match_test \"nds32_mem_format (op) == ADDRESS_LO_REG_IMM3U\")))\n+\n+(define_memory_constraint \"U45\"\n+  \"Memory constraint for 45 format\"\n+  (and (match_code \"mem\")\n+       (match_test \"(nds32_mem_format (op) == ADDRESS_REG)\n+\t\t    && (GET_MODE (op) == SImode)\")))\n+\n+(define_memory_constraint \"U37\"\n+  \"Memory constraint for 37 format\"\n+  (and (match_code \"mem\")\n+       (match_test \"(nds32_mem_format (op) == ADDRESS_SP_IMM7U\n+\t\t    || nds32_mem_format (op) == ADDRESS_FP_IMM7U)\n+\t\t    && (GET_MODE (op) == SImode)\")))\n+\n+;; ------------------------------------------------------------------------"}, {"sha": "6ec519618a91fef2944d2cfaac1c42012de54d50", "filename": "gcc/config/nds32/iterators.md", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fiterators.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,55 @@\n+;; Code and mode itertator and attribute definitions\n+;; of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;;----------------------------------------------------------------------------\n+;; Mode iterators.\n+;;----------------------------------------------------------------------------\n+\n+;; A list of integer modes that are up to one word long.\n+(define_mode_iterator QIHISI [QI HI SI])\n+\n+;; A list of integer modes that are up to one half-word long.\n+(define_mode_iterator QIHI [QI HI])\n+\n+;; A list of the modes that are up to double-word long.\n+(define_mode_iterator DIDF [DI DF])\n+\n+\n+;;----------------------------------------------------------------------------\n+;; Mode attributes.\n+;;----------------------------------------------------------------------------\n+\n+(define_mode_attr size [(QI \"b\") (HI \"h\") (SI \"w\")])\n+\n+(define_mode_attr byte [(QI \"1\") (HI \"2\") (SI \"4\")])\n+\n+\n+;;----------------------------------------------------------------------------\n+;; Code iterators.\n+;;----------------------------------------------------------------------------\n+\n+\n+;;----------------------------------------------------------------------------\n+;; Code attributes.\n+;;----------------------------------------------------------------------------\n+\n+\n+;;----------------------------------------------------------------------------"}, {"sha": "4bfede4236ad3f7bfba4de210d7b07981240d15c", "filename": "gcc/config/nds32/nds32-doubleword.md", "status": "added", "additions": 251, "deletions": 0, "changes": 251, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-doubleword.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-doubleword.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-doubleword.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,251 @@\n+;; DImode/DFmode patterns description of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+\n+;; -------------------------------------------------------------\n+;; Move DImode/DFmode instructions.\n+;; -------------------------------------------------------------\n+\n+\n+(define_expand \"movdi\"\n+  [(set (match_operand:DI 0 \"general_operand\" \"\")\n+\t(match_operand:DI 1 \"general_operand\" \"\"))]\n+  \"\"\n+{\n+  /* Need to force register if mem <- !reg.  */\n+  if (MEM_P (operands[0]) && !REG_P (operands[1]))\n+    operands[1] = force_reg (DImode, operands[1]);\n+})\n+\n+(define_expand \"movdf\"\n+  [(set (match_operand:DF 0 \"general_operand\" \"\")\n+\t(match_operand:DF 1 \"general_operand\" \"\"))]\n+  \"\"\n+{\n+  /* Need to force register if mem <- !reg.  */\n+  if (MEM_P (operands[0]) && !REG_P (operands[1]))\n+    operands[1] = force_reg (DFmode, operands[1]);\n+})\n+\n+\n+(define_insn \"move_<mode>\"\n+  [(set (match_operand:DIDF 0 \"nonimmediate_operand\" \"=r, r, r, m\")\n+\t(match_operand:DIDF 1 \"general_operand\"      \" r, i, m, r\"))]\n+  \"\"\n+{\n+  rtx addr;\n+  rtx otherops[5];\n+\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"movd44\\t%0, %1\";\n+\n+    case 1:\n+      /* reg <- const_int, we ask gcc to split instruction.  */\n+      return \"#\";\n+\n+    case 2:\n+      /* Refer to nds32_legitimate_address_p() in nds32.c,\n+         we only allow \"reg\", \"symbol_ref\", \"const\", and \"reg + const_int\"\n+         as address rtx for DImode/DFmode memory access.  */\n+      addr = XEXP (operands[1], 0);\n+\n+      otherops[0] = gen_rtx_REG (SImode, REGNO (operands[0]));\n+      otherops[1] = gen_rtx_REG (SImode, REGNO (operands[0]) + 1);\n+      otherops[2] = addr;\n+\n+      if (REG_P (addr))\n+\t{\n+\t  /* (reg) <- (mem (reg)) */\n+\t  output_asm_insn (\"lmw.bi\\t%0, [%2], %1, 0\", otherops);\n+\t}\n+      else if (GET_CODE (addr) == PLUS)\n+\t{\n+\t  /* (reg) <- (mem (plus (reg) (const_int))) */\n+\t  rtx op0 = XEXP (addr, 0);\n+\t  rtx op1 = XEXP (addr, 1);\n+\n+\t  if (REG_P (op0))\n+\t    {\n+\t      otherops[2] = op0;\n+\t      otherops[3] = op1;\n+\t      otherops[4] = gen_int_mode (INTVAL (op1) + 4, SImode);\n+\t    }\n+\t  else\n+\t    {\n+\t      otherops[2] = op1;\n+\t      otherops[3] = op0;\n+\t      otherops[4] = gen_int_mode (INTVAL (op0) + 4, SImode);\n+\t    }\n+\n+\t  /* To avoid base overwrite when REGNO(%0) == REGNO(%2).  */\n+\t  if (REGNO (otherops[0]) != REGNO (otherops[2]))\n+\t    {\n+\t      output_asm_insn (\"lwi\\t%0, [%2 + (%3)]\", otherops);\n+\t      output_asm_insn (\"lwi\\t%1, [%2 + (%4)]\", otherops);\n+\t    }\n+\t  else\n+\t    {\n+\t      output_asm_insn (\"lwi\\t%1, [%2 + (%4)]\", otherops);\n+\t      output_asm_insn (\"lwi\\t%0,[ %2 + (%3)]\", otherops);\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  /* (reg) <- (mem (symbol_ref ...))\n+\t     (reg) <- (mem (const ...)) */\n+\t  output_asm_insn (\"lwi.gp\\t%0, [ + %2]\", otherops);\n+\t  output_asm_insn (\"lwi.gp\\t%1, [ + %2 + 4]\", otherops);\n+\t}\n+\n+      /* We have already used output_asm_insn() by ourself,\n+         so return an empty string.  */\n+      return \"\";\n+\n+    case 3:\n+      /* Refer to nds32_legitimate_address_p() in nds32.c,\n+         we only allow \"reg\", \"symbol_ref\", \"const\", and \"reg + const_int\"\n+         as address rtx for DImode/DFmode memory access.  */\n+      addr = XEXP (operands[0], 0);\n+\n+      otherops[0] = gen_rtx_REG (SImode, REGNO (operands[1]));\n+      otherops[1] = gen_rtx_REG (SImode, REGNO (operands[1]) + 1);\n+      otherops[2] = addr;\n+\n+      if (REG_P (addr))\n+\t{\n+\t  /* (mem (reg)) <- (reg) */\n+\t  output_asm_insn (\"smw.bi\\t%0, [%2], %1, 0\", otherops);\n+\t}\n+      else if (GET_CODE (addr) == PLUS)\n+\t{\n+\t  /* (mem (plus (reg) (const_int))) <- (reg) */\n+\t  rtx op0 = XEXP (addr, 0);\n+\t  rtx op1 = XEXP (addr, 1);\n+\n+\t  if (REG_P (op0))\n+\t    {\n+\t      otherops[2] = op0;\n+\t      otherops[3] = op1;\n+\t      otherops[4] = gen_int_mode (INTVAL (op1) + 4, SImode);\n+\t    }\n+\t  else\n+\t    {\n+\t      otherops[2] = op1;\n+\t      otherops[3] = op0;\n+\t      otherops[4] = gen_int_mode (INTVAL (op0) + 4, SImode);\n+\t    }\n+\n+\t  /* To avoid base overwrite when REGNO(%0) == REGNO(%2).  */\n+\t  if (REGNO (otherops[0]) != REGNO (otherops[2]))\n+\t    {\n+\t      output_asm_insn (\"swi\\t%0, [%2 + (%3)]\", otherops);\n+\t      output_asm_insn (\"swi\\t%1, [%2 + (%4)]\", otherops);\n+\t    }\n+\t  else\n+\t    {\n+\t      output_asm_insn (\"swi\\t%1, [%2 + (%4)]\", otherops);\n+\t      output_asm_insn (\"swi\\t%0, [%2 + (%3)]\", otherops);\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  /* (mem (symbol_ref ...)) <- (reg)\n+\t     (mem (const ...))      <- (reg) */\n+\t  output_asm_insn (\"swi.gp\\t%0, [ + %2]\", otherops);\n+\t  output_asm_insn (\"swi.gp\\t%1, [ + %2 + 4]\", otherops);\n+\t}\n+\n+      /* We have already used output_asm_insn() by ourself,\n+         so return an empty string.  */\n+      return \"\";\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"move,move,move,move\")\n+   (set_attr \"length\" \"   4,  16,   8,   8\")])\n+\n+(define_split\n+  [(set (match_operand:DIDF 0 \"register_operand\"     \"\")\n+\t(match_operand:DIDF 1 \"const_double_operand\" \"\"))]\n+  \"reload_completed\"\n+  [(set (match_dup 2) (match_dup 3))\n+   (set (match_dup 4) (match_dup 5))]\n+{\n+  /* Construct lowpart rtx.  */\n+  operands[2] = gen_lowpart (SImode, operands[0]);\n+  operands[3] = gen_lowpart (SImode, operands[1]);\n+\n+  /* Construct highpart rtx.  */\n+  /* Note that operands[1] can be VOIDmode constant,\n+     so we need to use gen_highpart_mode().\n+     Refer to gcc/emit-rtl.c for more information.  */\n+  operands[4] = gen_highpart (SImode, operands[0]);\n+  operands[5] = gen_highpart_mode (SImode,\n+\t\t\t\t   GET_MODE (operands[0]), operands[1]);\n+\n+  /* Actually we would like to create move behavior by ourself.\n+     So that movsi expander could have chance to split large constant.  */\n+  emit_move_insn (operands[2], operands[3]);\n+  emit_move_insn (operands[4], operands[5]);\n+  DONE;\n+})\n+\n+;; There is 'movd44' instruction for DImode/DFmode movement under V3/V3M ISA.\n+;; We only need to split it under V2 ISA or none-16-bit code generation.\n+(define_split\n+  [(set (match_operand:DIDF 0 \"register_operand\" \"\")\n+\t(match_operand:DIDF 1 \"register_operand\" \"\"))]\n+  \"reload_completed\n+   && (TARGET_ISA_V2 || !TARGET_16_BIT)\"\n+  [(set (match_dup 0) (match_dup 1))\n+   (set (match_dup 2) (match_dup 3))]\n+{\n+  operands[2] = gen_highpart (SImode, operands[0]);\n+  operands[3] = gen_highpart (SImode, operands[1]);\n+  operands[0] = gen_lowpart (SImode, operands[0]);\n+  operands[1] = gen_lowpart (SImode, operands[1]);\n+\n+  /* Handle a partial overlap.  */\n+  if (rtx_equal_p (operands[0], operands[3]))\n+    {\n+      rtx tmp0 = operands[0];\n+      rtx tmp1 = operands[1];\n+\n+      operands[0] = operands[2];\n+      operands[1] = operands[3];\n+      operands[2] = tmp0;\n+      operands[3] = tmp1;\n+    }\n+})\n+\n+;; -------------------------------------------------------------\n+;; Boolean DImode instructions.\n+;; -------------------------------------------------------------\n+\n+;; Nowadays, the generic code is supposed to split the DImode\n+;; boolean operations and have good code generation.\n+;; Unless we find out some bad cases, there is no need to\n+;; define DImode boolean operations by ourself.\n+\n+;; -------------------------------------------------------------"}, {"sha": "4ee2d851023fbe8e5e3ec976d52d831d4a667786", "filename": "gcc/config/nds32/nds32-intrinsic.md", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,97 @@\n+;; Intrinsic patterns description of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; ------------------------------------------------------------------------\n+\n+;; Register Transfer.\n+\n+(define_insn \"unspec_volatile_mfsr\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec_volatile:SI [(match_operand:SI 1 \"immediate_operand\" \"i\")] UNSPEC_VOLATILE_MFSR))]\n+  \"\"\n+  \"mfsr\\t%0, %V1\"\n+  [(set_attr \"type\"   \"misc\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"unspec_volatile_mfusr\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec_volatile:SI [(match_operand:SI 1 \"immediate_operand\" \"i\")] UNSPEC_VOLATILE_MFUSR))]\n+  \"\"\n+  \"mfusr\\t%0, %V1\"\n+  [(set_attr \"type\"   \"misc\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"unspec_volatile_mtsr\"\n+  [(unspec_volatile:SI [(match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t\t(match_operand:SI 1 \"immediate_operand\" \"i\")] UNSPEC_VOLATILE_MTSR)]\n+  \"\"\n+  \"mtsr\\t%0, %V1\"\n+  [(set_attr \"type\"   \"misc\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"unspec_volatile_mtusr\"\n+  [(unspec_volatile:SI [(match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t\t(match_operand:SI 1 \"immediate_operand\" \"i\")] UNSPEC_VOLATILE_MTUSR)]\n+  \"\"\n+  \"mtusr\\t%0, %V1\"\n+  [(set_attr \"type\"   \"misc\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+;; ------------------------------------------------------------------------\n+\n+;; Interrupt Instructions.\n+\n+(define_insn \"unspec_volatile_setgie_en\"\n+  [(unspec_volatile:SI [(const_int 0)] UNSPEC_VOLATILE_SETGIE_EN)]\n+  \"\"\n+  \"setgie.e\"\n+  [(set_attr \"type\" \"misc\")]\n+)\n+\n+(define_insn \"unspec_volatile_setgie_dis\"\n+  [(unspec_volatile:SI [(const_int 0)] UNSPEC_VOLATILE_SETGIE_DIS)]\n+  \"\"\n+  \"setgie.d\"\n+  [(set_attr \"type\" \"misc\")]\n+)\n+\n+;; ------------------------------------------------------------------------\n+\n+;; Cache Synchronization Instructions\n+\n+(define_insn \"unspec_volatile_isync\"\n+  [(unspec_volatile:SI [(match_operand:SI 0 \"register_operand\" \"r\")] UNSPEC_VOLATILE_ISYNC)]\n+  \"\"\n+  \"isync\\t%0\"\n+  [(set_attr \"type\" \"misc\")]\n+)\n+\n+(define_insn \"unspec_volatile_isb\"\n+  [(unspec_volatile:SI [(const_int 0)] UNSPEC_VOLATILE_ISB)]\n+  \"\"\n+  \"isb\"\n+  [(set_attr \"type\" \"misc\")]\n+)\n+\n+;; ------------------------------------------------------------------------"}, {"sha": "9d32ada0ce8afb84059a8aadb0824db7e3f7680f", "filename": "gcc/config/nds32/nds32-modes.def", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-modes.def?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,21 @@\n+/* Extra machine modes of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* So far, there is no need to define any modes for nds32 target.  */"}, {"sha": "da89a490d3a110c6541b864c8b9728926c537e31", "filename": "gcc/config/nds32/nds32-multiple.md", "status": "added", "additions": 410, "deletions": 0, "changes": 410, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,410 @@\n+;; Load/Store Multiple patterns description of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.for NDS32.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+\n+;; Load Multiple Insns.\n+;;\n+;; operands[0] is the first of the consecutive registers.\n+;; operands[1] is the first memory location.\n+;; operands[2] is the number of consecutive registers.\n+\n+(define_expand \"load_multiple\"\n+  [(match_par_dup 3 [(set (match_operand:SI 0 \"\" \"\")\n+\t\t\t  (match_operand:SI 1 \"\" \"\"))\n+\t\t     (use (match_operand:SI 2 \"\" \"\"))])]\n+  \"\"\n+{\n+  int maximum;\n+\n+  /* Because reduced-set regsiters has few registers\n+     (r0~r5, r6~10, r15, r28~r31, where 'r15' and 'r28~r31' cannot\n+     be used for register allocation),\n+     using 8 registers for load_multiple may easily consume all of them.\n+     It makes register allocation/spilling hard to work.\n+     So we only allow maximum=4 registers for load_multiple\n+     under reduced-set registers.  */\n+  if (TARGET_REDUCED_REGS)\n+    maximum = 4;\n+  else\n+    maximum = 8;\n+\n+  /* Here are the conditions that must be all passed,\n+     otherwise we have to FAIL this rtx generation:\n+       1. The number of consecutive registers must be integer.\n+       2. Maximum 4 or 8 registers for lmw.bi instruction\n+          (based on this nds32-multiple.md design).\n+       3. Minimum 2 registers for lmw.bi instruction\n+          (based on this nds32-multiple.md design).\n+       4. operands[0] must be register for sure.\n+       5. operands[1] must be memory for sure.\n+       6. Do not cross $r15 register because it is not allocatable.  */\n+  if (GET_CODE (operands[2]) != CONST_INT\n+      || INTVAL (operands[2]) > maximum\n+      || INTVAL (operands[2]) < 2\n+      || GET_CODE (operands[0]) != REG\n+      || GET_CODE (operands[1]) != MEM\n+      || REGNO (operands[0]) + INTVAL (operands[2]) > TA_REGNUM)\n+    FAIL;\n+\n+  /* For (mem addr), we force_reg on addr here,\n+     so that nds32_expand_load_multiple can easily use it.  */\n+  operands[3] = nds32_expand_load_multiple (REGNO (operands[0]),\n+\t\t\t\t\t    INTVAL (operands[2]),\n+\t\t\t\t\t    force_reg (SImode,\n+\t\t\t\t\t\t       XEXP (operands[1], 0)),\n+\t\t\t\t\t    operands[1]);\n+})\n+\n+;; Ordinary Load Multiple.\n+\n+(define_insn \"*lmwsi8\"\n+  [(match_parallel 0 \"nds32_load_multiple_operation\"\n+    [(set (match_operand:SI 2 \"register_operand\" \"\")\n+\t  (mem:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+     (set (match_operand:SI 3 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 4))))\n+     (set (match_operand:SI 4 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 8))))\n+     (set (match_operand:SI 5 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 12))))\n+     (set (match_operand:SI 6 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 16))))\n+     (set (match_operand:SI 7 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 20))))\n+     (set (match_operand:SI 8 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 24))))\n+     (set (match_operand:SI 9 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 28))))])]\n+  \"(XVECLEN (operands[0], 0) == 8)\"\n+  \"lmw.bi\\t%2, [%1], %9, 0x0\"\n+  [(set_attr \"type\"   \"load\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"*lmwsi7\"\n+  [(match_parallel 0 \"nds32_load_multiple_operation\"\n+    [(set (match_operand:SI 2 \"register_operand\" \"\")\n+\t  (mem:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+     (set (match_operand:SI 3 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 4))))\n+     (set (match_operand:SI 4 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 8))))\n+     (set (match_operand:SI 5 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 12))))\n+     (set (match_operand:SI 6 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 16))))\n+     (set (match_operand:SI 7 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 20))))\n+     (set (match_operand:SI 8 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 24))))])]\n+  \"(XVECLEN (operands[0], 0) == 7)\"\n+  \"lmw.bi\\t%2, [%1], %8, 0x0\"\n+  [(set_attr \"type\"   \"load\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"*lmwsi6\"\n+  [(match_parallel 0 \"nds32_load_multiple_operation\"\n+    [(set (match_operand:SI 2 \"register_operand\" \"\")\n+\t  (mem:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+     (set (match_operand:SI 3 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 4))))\n+     (set (match_operand:SI 4 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 8))))\n+     (set (match_operand:SI 5 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 12))))\n+     (set (match_operand:SI 6 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 16))))\n+     (set (match_operand:SI 7 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 20))))])]\n+  \"(XVECLEN (operands[0], 0) == 6)\"\n+  \"lmw.bi\\t%2, [%1], %7, 0x0\"\n+  [(set_attr \"type\"   \"load\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"*lmwsi5\"\n+  [(match_parallel 0 \"nds32_load_multiple_operation\"\n+    [(set (match_operand:SI 2 \"register_operand\" \"\")\n+\t  (mem:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+     (set (match_operand:SI 3 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 4))))\n+     (set (match_operand:SI 4 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 8))))\n+     (set (match_operand:SI 5 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 12))))\n+     (set (match_operand:SI 6 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 16))))])]\n+  \"(XVECLEN (operands[0], 0) == 5)\"\n+  \"lmw.bi\\t%2, [%1], %6, 0x0\"\n+  [(set_attr \"type\"   \"load\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"*lmwsi4\"\n+  [(match_parallel 0 \"nds32_load_multiple_operation\"\n+    [(set (match_operand:SI 2 \"register_operand\" \"\")\n+\t  (mem:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+     (set (match_operand:SI 3 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 4))))\n+     (set (match_operand:SI 4 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 8))))\n+     (set (match_operand:SI 5 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 12))))])]\n+  \"(XVECLEN (operands[0], 0) == 4)\"\n+  \"lmw.bi\\t%2, [%1], %5, 0x0\"\n+  [(set_attr \"type\"   \"load\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"*lmwsi3\"\n+  [(match_parallel 0 \"nds32_load_multiple_operation\"\n+    [(set (match_operand:SI 2 \"register_operand\" \"\")\n+\t  (mem:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+     (set (match_operand:SI 3 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 4))))\n+     (set (match_operand:SI 4 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 8))))])]\n+  \"(XVECLEN (operands[0], 0) == 3)\"\n+  \"lmw.bi\\t%2, [%1], %4, 0x0\"\n+  [(set_attr \"type\"   \"load\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+(define_insn \"*lmwsi2\"\n+  [(match_parallel 0 \"nds32_load_multiple_operation\"\n+    [(set (match_operand:SI 2 \"register_operand\" \"\")\n+\t  (mem:SI (match_operand:SI 1 \"register_operand\" \"r\")))\n+     (set (match_operand:SI 3 \"register_operand\" \"\")\n+\t  (mem:SI (plus:SI (match_dup 1) (const_int 4))))])]\n+  \"(XVECLEN (operands[0], 0) == 2)\"\n+  \"lmw.bi\\t%2, [%1], %3, 0x0\"\n+  [(set_attr \"type\"   \"load\")\n+   (set_attr \"length\"    \"4\")]\n+)\n+\n+\n+;; Store Multiple Insns.\n+;;\n+;; operands[0] is the first memory location.\n+;; opernads[1] is the first of the consecutive registers.\n+;; operands[2] is the number of consecutive registers.\n+\n+(define_expand \"store_multiple\"\n+  [(match_par_dup 3 [(set (match_operand:SI 0 \"\" \"\")\n+\t\t\t  (match_operand:SI 1 \"\" \"\"))\n+\t\t     (use (match_operand:SI 2 \"\" \"\"))])]\n+  \"\"\n+{\n+  int maximum;\n+\n+  /* Because reduced-set regsiters has few registers\n+     (r0~r5, r6~10, r15, r28~r31, where 'r15' and 'r28~r31' cannot\n+     be used for register allocation),\n+     using 8 registers for store_multiple may easily consume all of them.\n+     It makes register allocation/spilling hard to work.\n+     So we only allow maximum=4 registers for store_multiple\n+     under reduced-set registers.  */\n+  if (TARGET_REDUCED_REGS)\n+    maximum = 4;\n+  else\n+    maximum = 8;\n+\n+  /* Here are the conditions that must be all passed,\n+     otherwise we have to FAIL this rtx generation:\n+       1. The number of consecutive registers must be integer.\n+       2. Maximum 4 or 8 registers for smw.bi instruction\n+          (based on this nds32-multiple.md design).\n+       3. Minimum 2 registers for smw.bi instruction\n+          (based on this nds32-multiple.md design).\n+       4. operands[0] must be memory for sure.\n+       5. operands[1] must be register for sure.\n+       6. Do not cross $r15 register because it is not allocatable.  */\n+  if (GET_CODE (operands[2]) != CONST_INT\n+      || INTVAL (operands[2]) > maximum\n+      || INTVAL (operands[2]) < 2\n+      || GET_CODE (operands[0]) != MEM\n+      || GET_CODE (operands[1]) != REG\n+      || REGNO (operands[1]) + INTVAL (operands[2]) > TA_REGNUM)\n+    FAIL;\n+\n+  /* For (mem addr), we force_reg on addr here,\n+     so that nds32_expand_store_multiple can easily use it.  */\n+  operands[3] = nds32_expand_store_multiple (REGNO (operands[1]),\n+\t\t\t\t\t     INTVAL (operands[2]),\n+\t\t\t\t\t     force_reg (SImode,\n+\t\t\t\t\t\t\tXEXP (operands[0], 0)),\n+\t\t\t\t\t     operands[0]);\n+})\n+\n+;; Ordinary Store Multiple.\n+\n+(define_insn \"*stmsi8\"\n+  [(match_parallel 0 \"nds32_store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t  (match_operand:SI 2 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 3 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 4 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 5 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 16)))\n+\t  (match_operand:SI 6 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 20)))\n+\t  (match_operand:SI 7 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 24)))\n+\t  (match_operand:SI 8 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 28)))\n+\t  (match_operand:SI 9 \"register_operand\" \"\"))])]\n+  \"(XVECLEN (operands[0], 0) == 8)\"\n+  \"smw.bi\\t%2, [%1], %9, 0x0\"\n+  [(set_attr \"type\"   \"store\")\n+   (set_attr \"length\"     \"4\")]\n+)\n+\n+(define_insn \"*stmsi7\"\n+  [(match_parallel 0 \"nds32_store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t  (match_operand:SI 2 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 3 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 4 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 5 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 16)))\n+\t  (match_operand:SI 6 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 20)))\n+\t  (match_operand:SI 7 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 24)))\n+\t  (match_operand:SI 8 \"register_operand\" \"\"))])]\n+  \"(XVECLEN (operands[0], 0) == 7)\"\n+  \"smw.bi\\t%2, [%1], %8, 0x0\"\n+  [(set_attr \"type\"   \"store\")\n+   (set_attr \"length\"     \"4\")]\n+)\n+\n+(define_insn \"*stmsi6\"\n+  [(match_parallel 0 \"nds32_store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t  (match_operand:SI 2 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 3 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 4 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 5 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 16)))\n+\t  (match_operand:SI 6 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 20)))\n+\t  (match_operand:SI 7 \"register_operand\" \"\"))])]\n+  \"(XVECLEN (operands[0], 0) == 6)\"\n+  \"smw.bi\\t%2, [%1], %7, 0x0\"\n+  [(set_attr \"type\"   \"store\")\n+   (set_attr \"length\"     \"4\")]\n+)\n+\n+(define_insn \"*stmsi5\"\n+  [(match_parallel 0 \"nds32_store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t  (match_operand:SI 2 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 3 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 4 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 5 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 16)))\n+\t  (match_operand:SI 6 \"register_operand\" \"\"))])]\n+  \"(XVECLEN (operands[0], 0) == 5)\"\n+  \"smw.bi\\t%2, [%1], %6, 0x0\"\n+  [(set_attr \"type\"   \"store\")\n+   (set_attr \"length\"     \"4\")]\n+)\n+\n+(define_insn \"*stmsi4\"\n+  [(match_parallel 0 \"nds32_store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t  (match_operand:SI 2 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 3 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 4 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 5 \"register_operand\" \"\"))])]\n+  \"(XVECLEN (operands[0], 0) == 4)\"\n+  \"smw.bi\\t%2, [%1], %5, 0x0\"\n+  [(set_attr \"type\"   \"store\")\n+   (set_attr \"length\"     \"4\")]\n+)\n+\n+(define_insn \"*stmsi3\"\n+  [(match_parallel 0 \"nds32_store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t  (match_operand:SI 2 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 3 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 4 \"register_operand\" \"\"))])]\n+  \"(XVECLEN (operands[0], 0) == 3)\"\n+  \"smw.bi\\t%2, [%1], %4, 0x0\"\n+  [(set_attr \"type\"   \"store\")\n+   (set_attr \"length\"     \"4\")]\n+)\n+\n+(define_insn \"*stmsi2\"\n+  [(match_parallel 0 \"nds32_store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t  (match_operand:SI 2 \"register_operand\" \"\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 3 \"register_operand\" \"\"))])]\n+  \"(XVECLEN (operands[0], 0) == 2)\"\n+  \"smw.bi\\t%2, [%1], %3, 0x0\"\n+  [(set_attr \"type\"   \"store\")\n+   (set_attr \"length\"     \"4\")]\n+)\n+\n+;; Move a block of memory if it is word aligned and MORE than 2 words long.\n+;; We could let this apply for blocks of less than this, but it clobbers so\n+;; many registers that there is then probably a better way.\n+;;\n+;; operands[0] is the destination block of memory.\n+;; operands[1] is the source block of memory.\n+;; operands[2] is the number of bytes to move.\n+;; operands[3] is the known shared alignment.\n+\n+(define_expand \"movmemqi\"\n+  [(match_operand:BLK 0 \"general_operand\" \"\")\n+   (match_operand:BLK 1 \"general_operand\" \"\")\n+   (match_operand:SI 2 \"const_int_operand\" \"\")\n+   (match_operand:SI 3 \"const_int_operand\" \"\")]\n+  \"\"\n+{\n+  if (nds32_expand_movmemqi (operands[0],\n+\t\t\t     operands[1],\n+\t\t\t     operands[2],\n+\t\t\t     operands[3]))\n+    DONE;\n+\n+  FAIL;\n+})\n+\n+;; ------------------------------------------------------------------------"}, {"sha": "b38672f0e2f5009c2ca8350097c49784eb33d1e2", "filename": "gcc/config/nds32/nds32-opts.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-opts.h?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,35 @@\n+/* Definitions for option handling of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef NDS32_OPTS_H\n+#define NDS32_OPTS_H\n+\n+#define NDS32_DEFAULT_CACHE_BLOCK_SIZE 16\n+#define NDS32_DEFAULT_ISR_VECTOR_SIZE (TARGET_ISA_V3 ? 4 : 16)\n+\n+/* The various ANDES ISA.  */\n+enum nds32_arch_type\n+{\n+  ARCH_V2,\n+  ARCH_V3,\n+  ARCH_V3M\n+};\n+\n+#endif"}, {"sha": "dbe2d6c8a62ebcd17b4ace207d358dbf88372070", "filename": "gcc/config/nds32/nds32-peephole2.md", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-peephole2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-peephole2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-peephole2.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,25 @@\n+;; define_peephole2 optimization patterns of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+\n+;; Use define_peephole and define_peephole2 to handle possible\n+;; target-specific optimization in this file.\n+\n+;; ------------------------------------------------------------------------"}, {"sha": "2bc405db0f49c4d78add6aca5bbe94155104c55f", "filename": "gcc/config/nds32/nds32-protos.h", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,128 @@\n+/* Prototypes for exported functions of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\n+/* ------------------------------------------------------------------------ */\n+\f\n+/* Defining Data Structures for Per-function Information.  */\n+\n+extern void nds32_init_expanders (void);\n+\n+\f\n+/* Register Usage.  */\n+\n+/* -- How Values Fit in Registers.  */\n+\n+extern int nds32_hard_regno_nregs (int, enum machine_mode);\n+extern int nds32_hard_regno_mode_ok (int, enum machine_mode);\n+\n+\f\n+/* Register Classes.  */\n+\n+extern enum reg_class nds32_regno_reg_class (int);\n+\n+\f\n+/* Stack Layout and Calling Conventions.  */\n+\n+/* -- Basic Stack Layout.  */\n+\n+extern rtx nds32_return_addr_rtx (int, rtx);\n+\n+/* -- Eliminating Frame Pointer and Arg Pointer.  */\n+\n+extern HOST_WIDE_INT nds32_initial_elimination_offset (unsigned int,\n+\t\t\t\t\t\t       unsigned int);\n+\n+/* -- Passing Arguments in Registers.  */\n+\n+extern void nds32_init_cumulative_args (CUMULATIVE_ARGS *,\n+\t\t\t\t\ttree, rtx, tree, int);\n+\n+/* -- Function Entry and Exit.  */\n+\n+extern void nds32_expand_prologue (void);\n+extern void nds32_expand_epilogue (void);\n+extern void nds32_expand_prologue_v3push (void);\n+extern void nds32_expand_epilogue_v3pop (void);\n+\n+/* ------------------------------------------------------------------------ */\n+\n+/* Auxiliary functions for auxiliary macros in nds32.h.  */\n+\n+extern bool nds32_ls_333_p (rtx, rtx, rtx, enum machine_mode);\n+\n+/* Auxiliary functions for expanding rtl used in nds32-multiple.md.  */\n+\n+extern rtx nds32_expand_load_multiple (int, int, rtx, rtx);\n+extern rtx nds32_expand_store_multiple (int, int, rtx, rtx);\n+extern int nds32_expand_movmemqi (rtx, rtx, rtx, rtx);\n+\n+/* Auxiliary functions for multiple load/store predicate checking.  */\n+\n+extern bool nds32_valid_multiple_load_store (rtx, bool);\n+\n+/* Auxiliary functions for stack operation predicate checking.  */\n+\n+extern bool nds32_valid_stack_push_pop (rtx, bool);\n+\n+/* Auxiliary functions for bit operation detection.  */\n+\n+extern int nds32_can_use_bclr_p (int);\n+extern int nds32_can_use_bset_p (int);\n+extern int nds32_can_use_btgl_p (int);\n+\n+extern int nds32_can_use_bitci_p (int);\n+\n+/* Auxiliary function for 'Computing the Length of an Insn'.  */\n+\n+extern int nds32_adjust_insn_length (rtx, int);\n+\n+/* Auxiliary functions for FP_AS_GP detection.  */\n+\n+extern bool nds32_symbol_load_store_p (rtx);\n+extern int nds32_fp_as_gp_check_available (void);\n+\n+/* Auxiliary functions for jump table generation.  */\n+\n+extern const char *nds32_output_casesi_pc_relative (rtx *);\n+extern const char *nds32_output_casesi (rtx *);\n+\n+/* Auxiliary functions to identify 16 bit addresing mode.  */\n+\n+extern enum nds32_16bit_address_type nds32_mem_format (rtx);\n+\n+/* Auxiliary functions to output assembly code.  */\n+\n+extern const char *nds32_output_16bit_store (rtx *, int);\n+extern const char *nds32_output_16bit_load (rtx *, int);\n+extern const char *nds32_output_32bit_store (rtx *, int);\n+extern const char *nds32_output_32bit_load (rtx *, int);\n+extern const char *nds32_output_32bit_load_s (rtx *, int);\n+\n+/* Auxiliary functions to output stack push/pop instruction.  */\n+\n+extern const char *nds32_output_stack_push (void);\n+extern const char *nds32_output_stack_pop (void);\n+\n+/* Auxiliary functions to decide output alignment or not.  */\n+\n+extern int nds32_target_alignment (rtx);\n+\n+/* ------------------------------------------------------------------------ */"}, {"sha": "2700a8723602683906e47fc085acce88e57ff219", "filename": "gcc/config/nds32/nds32.c", "status": "added", "additions": 5721, "deletions": 0, "changes": 5721, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=9304f876116aae3d297ab5bf7341749f09406a50"}, {"sha": "74f126cecc48a86fe020e6ab2609ef2e0b0f6fa8", "filename": "gcc/config/nds32/nds32.h", "status": "added", "additions": 982, "deletions": 0, "changes": 982, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,982 @@\n+/* Definitions of target machine of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\n+/* ------------------------------------------------------------------------ */\n+\n+/* The following are auxiliary macros or structure declarations\n+   that are used all over the nds32.c and nds32.h.  */\n+\n+\n+/* Computing the Length of an Insn.  */\n+#define ADJUST_INSN_LENGTH(INSN, LENGTH) \\\n+  (LENGTH = nds32_adjust_insn_length (INSN, LENGTH))\n+\n+/* Check instruction LS-37-FP-implied form.\n+   Note: actually its immediate range is imm9u\n+         since it is used for lwi37/swi37 instructions.  */\n+#define NDS32_LS_37_FP_P(rt, ra, imm)       \\\n+  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS \\\n+   && REGNO (ra) == FP_REGNUM               \\\n+   && satisfies_constraint_Iu09 (imm))\n+\n+/* Check instruction LS-37-SP-implied form.\n+   Note: actually its immediate range is imm9u\n+         since it is used for lwi37/swi37 instructions.  */\n+#define NDS32_LS_37_SP_P(rt, ra, imm)       \\\n+  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS \\\n+   && REGNO (ra) == SP_REGNUM               \\\n+   && satisfies_constraint_Iu09 (imm))\n+\n+\n+/* Check load/store instruction form : Rt3, Ra3, imm3u.  */\n+#define NDS32_LS_333_P(rt, ra, imm, mode) nds32_ls_333_p (rt, ra, imm, mode)\n+\n+/* Check load/store instruction form : Rt4, Ra5, const_int_0.\n+   Note: no need to check ra because Ra5 means it covers all registers.  */\n+#define NDS32_LS_450_P(rt, ra, imm)                     \\\n+  ((imm == const0_rtx)                                  \\\n+   && (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS         \\\n+       || REGNO_REG_CLASS (REGNO (rt)) == MIDDLE_REGS))\n+\n+/* Check instruction RRI-333-form.  */\n+#define NDS32_RRI_333_P(rt, ra, imm)           \\\n+  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS    \\\n+   && REGNO_REG_CLASS (REGNO (ra)) == LOW_REGS \\\n+   && satisfies_constraint_Iu03 (imm))\n+\n+/* Check instruction RI-45-form.  */\n+#define NDS32_RI_45_P(rt, ra, imm)                     \\\n+  (REGNO (rt) == REGNO (ra)                            \\\n+   && (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS        \\\n+       || REGNO_REG_CLASS (REGNO (rt)) == MIDDLE_REGS) \\\n+   && satisfies_constraint_Iu05 (imm))\n+\n+\n+/* Check instruction RR-33-form.  */\n+#define NDS32_RR_33_P(rt, ra)                   \\\n+  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS     \\\n+   && REGNO_REG_CLASS (REGNO (ra)) == LOW_REGS)\n+\n+/* Check instruction RRR-333-form.  */\n+#define NDS32_RRR_333_P(rt, ra, rb)             \\\n+  (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS     \\\n+   && REGNO_REG_CLASS (REGNO (ra)) == LOW_REGS  \\\n+   && REGNO_REG_CLASS (REGNO (rb)) == LOW_REGS)\n+\n+/* Check instruction RR-45-form.\n+   Note: no need to check rb because Rb5 means it covers all registers.  */\n+#define NDS32_RR_45_P(rt, ra, rb)               \\\n+  (REGNO (rt) == REGNO (ra)                     \\\n+   && (REGNO_REG_CLASS (REGNO (rt)) == LOW_REGS \\\n+       || REGNO_REG_CLASS (REGNO (rt)) == MIDDLE_REGS))\n+\n+/* Classifies address type to distinguish 16-bit/32-bit format.  */\n+enum nds32_16bit_address_type\n+{\n+  /* [reg]: 45 format address.  */\n+  ADDRESS_REG,\n+  /* [lo_reg + imm3u]: 333 format address.  */\n+  ADDRESS_LO_REG_IMM3U,\n+  /* post_inc [lo_reg + imm3u]: 333 format address.  */\n+  ADDRESS_POST_INC_LO_REG_IMM3U,\n+  /* [$fp + imm7u]: fp imply address.  */\n+  ADDRESS_FP_IMM7U,\n+  /* [$sp + imm7u]: sp imply address.  */\n+  ADDRESS_SP_IMM7U,\n+  /* Other address format.  */\n+  ADDRESS_NOT_16BIT_FORMAT\n+};\n+\n+\n+/* ------------------------------------------------------------------------ */\n+\n+/* Define maximum numbers of registers for passing arguments.  */\n+#define NDS32_MAX_REGS_FOR_ARGS 6\n+\n+/* Define the register number for first argument.  */\n+#define NDS32_GPR_ARG_FIRST_REGNUM 0\n+\n+/* Define the register number for return value.  */\n+#define NDS32_GPR_RET_FIRST_REGNUM 0\n+\n+\n+/* Define double word alignment bits.  */\n+#define NDS32_DOUBLE_WORD_ALIGNMENT 64\n+\n+/* Define alignment checking macros for convenience.  */\n+#define NDS32_HALF_WORD_ALIGN_P(value)   (((value) & 0x01) == 0)\n+#define NDS32_SINGLE_WORD_ALIGN_P(value) (((value) & 0x03) == 0)\n+#define NDS32_DOUBLE_WORD_ALIGN_P(value) (((value) & 0x07) == 0)\n+\n+/* Round X up to the nearest double word.  */\n+#define NDS32_ROUND_UP_DOUBLE_WORD(value)  (((value) + 7) & ~7)\n+\n+\n+/* This macro is used to calculate the numbers of registers for\n+   containing 'size' bytes of the argument.\n+   The size of a register is a word in nds32 target.\n+   So we use UNITS_PER_WORD to do the calculation.  */\n+#define NDS32_NEED_N_REGS_FOR_ARG(mode, type)                            \\\n+  ((mode == BLKmode)                                                     \\\n+   ? ((int_size_in_bytes (type) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)  \\\n+   : ((GET_MODE_SIZE (mode)     + UNITS_PER_WORD - 1) / UNITS_PER_WORD))\n+\n+/* This macro is used to return the register number for passing argument.\n+   We need to obey the following rules:\n+     1. If it is required MORE THAN one register,\n+        make sure the register number is a even value.\n+     2. If it is required ONLY one register,\n+        the register number can be odd or even value.  */\n+#define NDS32_AVAILABLE_REGNUM_FOR_ARG(reg_offset, mode, type) \\\n+  ((NDS32_NEED_N_REGS_FOR_ARG (mode, type) > 1)                \\\n+   ? (((reg_offset) + NDS32_GPR_ARG_FIRST_REGNUM + 1) & ~1)    \\\n+   : ((reg_offset) + NDS32_GPR_ARG_FIRST_REGNUM))\n+\n+/* This macro is to check if there are still available registers\n+   for passing argument.  */\n+#define NDS32_ARG_PASS_IN_REG_P(reg_offset, mode, type)      \\\n+  (((reg_offset) < NDS32_MAX_REGS_FOR_ARGS)                  \\\n+   && ((reg_offset) + NDS32_NEED_N_REGS_FOR_ARG (mode, type) \\\n+       <= NDS32_MAX_REGS_FOR_ARGS))\n+\n+/* This macro is to check if the register is required to be saved on stack.\n+   If call_used_regs[regno] == 0, regno is the callee-saved register.\n+   If df_regs_ever_live_p(regno) == true, it is used in the current function.\n+   As long as the register satisfies both criteria above,\n+   it is required to be saved.  */\n+#define NDS32_REQUIRED_CALLEE_SAVED_P(regno)                  \\\n+  ((!call_used_regs[regno]) && (df_regs_ever_live_p (regno)))\n+\n+/* ------------------------------------------------------------------------ */\n+\n+/* A C structure for machine-specific, per-function data.\n+   This is added to the cfun structure.  */\n+struct GTY(()) machine_function\n+{\n+  /* Number of bytes allocated on the stack for variadic args\n+     if we want to push them into stack as pretend arguments by ourself.  */\n+  int va_args_size;\n+  /* Number of bytes reserved on the stack for\n+     local and temporary variables.  */\n+  int local_size;\n+  /* Number of bytes allocated on the stack for outgoing arguments.  */\n+  int out_args_size;\n+\n+  /* Number of bytes on the stack for saving $fp.  */\n+  int fp_size;\n+  /* Number of bytes on the stack for saving $gp.  */\n+  int gp_size;\n+  /* Number of bytes on the stack for saving $lp.  */\n+  int lp_size;\n+\n+  /* Number of bytes on the stack for saving callee-saved registers.  */\n+  int callee_saved_regs_size;\n+  /* The padding bytes in callee-saved area may be required.  */\n+  int callee_saved_area_padding_bytes;\n+\n+  /* The first required register that should be saved on stack\n+     for va_args (one named argument + nameless arguments).  */\n+  int va_args_first_regno;\n+  /* The last required register that should be saved on stack\n+     for va_args (one named argument + nameless arguments).  */\n+  int va_args_last_regno;\n+\n+  /* The first required callee-saved register.  */\n+  int callee_saved_regs_first_regno;\n+  /* The last required callee-saved register.  */\n+  int callee_saved_regs_last_regno;\n+\n+  /* Indicate that whether this function needs\n+     prologue/epilogue code generation.  */\n+  int naked_p;\n+  /* Indicate that whether this function\n+     uses fp_as_gp optimization.  */\n+  int fp_as_gp_p;\n+};\n+\n+/* A C structure that contains the arguments information.  */\n+typedef struct\n+{\n+  unsigned int reg_offset;\n+} nds32_cumulative_args;\n+\n+/* ------------------------------------------------------------------------ */\n+\n+/* The following we define C-ISR related stuff.\n+   In nds32 architecture, we have 73 vectors for interrupt/exception.\n+   For each vector (except for vector 0, which is used for reset behavior),\n+   we allow users to set its register saving scheme and interrupt level.  */\n+\n+/* There are 73 vectors in nds32 architecture.\n+   0 for reset handler,\n+   1-8 for exception handler,\n+   and 9-72 for interrupt handler.\n+   We use an array, which is defined in nds32.c, to record\n+   essential information for each vector.  */\n+#define NDS32_N_ISR_VECTORS 73\n+\n+/* Define possible isr category.  */\n+enum nds32_isr_category\n+{\n+  NDS32_ISR_NONE,\n+  NDS32_ISR_INTERRUPT,\n+  NDS32_ISR_EXCEPTION,\n+  NDS32_ISR_RESET\n+};\n+\n+/* Define isr register saving scheme.  */\n+enum nds32_isr_save_reg\n+{\n+  NDS32_SAVE_ALL,\n+  NDS32_PARTIAL_SAVE\n+};\n+\n+/* Define isr nested type.  */\n+enum nds32_isr_nested_type\n+{\n+  NDS32_NESTED,\n+  NDS32_NOT_NESTED,\n+  NDS32_NESTED_READY\n+};\n+\n+/* Define structure to record isr information.\n+   The isr vector array 'isr_vectors[]' with this structure\n+   is defined in nds32.c.  */\n+struct nds32_isr_info\n+{\n+  /* The field to identify isr category.\n+     It should be set to NDS32_ISR_NONE by default.\n+     If user specifies a function as isr by using attribute,\n+     this field will be set accordingly.  */\n+  enum nds32_isr_category category;\n+\n+  /* A string for the applied function name.\n+     It should be set to empty string by default.  */\n+  char func_name[100];\n+\n+  /* The register saving scheme.\n+     It should be set to NDS32_PARTIAL_SAVE by default\n+     unless user specifies attribute to change it.  */\n+  enum nds32_isr_save_reg save_reg;\n+\n+  /* The nested type.\n+     It should be set to NDS32_NOT_NESTED by default\n+     unless user specifies attribute to change it.  */\n+  enum nds32_isr_nested_type nested_type;\n+\n+  /* Total vectors.\n+     The total vectors = interrupt + exception numbers + reset.\n+     It should be set to 0 by default.\n+     This field is ONLY used in NDS32_ISR_RESET category.  */\n+  unsigned int total_n_vectors;\n+\n+  /* A string for nmi handler name.\n+     It should be set to empty string by default.\n+     This field is ONLY used in NDS32_ISR_RESET category.  */\n+  char nmi_name[100];\n+\n+  /* A string for warm handler name.\n+     It should be set to empty string by default.\n+     This field is ONLY used in NDS32_ISR_RESET category.  */\n+  char warm_name[100];\n+};\n+\n+/* ------------------------------------------------------------------------ */\n+\n+/* Define code for all nds32 builtins.  */\n+enum nds32_builtins\n+{\n+  NDS32_BUILTIN_ISYNC,\n+  NDS32_BUILTIN_ISB,\n+  NDS32_BUILTIN_MFSR,\n+  NDS32_BUILTIN_MFUSR,\n+  NDS32_BUILTIN_MTSR,\n+  NDS32_BUILTIN_MTUSR,\n+  NDS32_BUILTIN_SETGIE_EN,\n+  NDS32_BUILTIN_SETGIE_DIS\n+};\n+\n+/* ------------------------------------------------------------------------ */\n+\n+#define TARGET_ISA_V2   (nds32_arch_option == ARCH_V2)\n+#define TARGET_ISA_V3   (nds32_arch_option == ARCH_V3)\n+#define TARGET_ISA_V3M  (nds32_arch_option == ARCH_V3M)\n+\n+/* ------------------------------------------------------------------------ */\n+\f\n+/* Controlling the Compilation Driver.  */\n+\n+#define OPTION_DEFAULT_SPECS \\\n+  {\"arch\", \"%{!march=*:-march=%(VALUE)}\" }\n+\n+#define CC1_SPEC \\\n+  \"\"\n+\n+#define ASM_SPEC \\\n+  \" %{mbig-endian:-EB} %{mlittle-endian:-EL}\"\n+\n+/* If user issues -mrelax, -mforce-fp-as-gp, or -mex9,\n+   we need to pass '--relax' to linker.\n+   Besides, for -mex9, we need to further pass '--mex9'.  */\n+#define LINK_SPEC \\\n+  \" %{mbig-endian:-EB} %{mlittle-endian:-EL}\" \\\n+  \" %{mrelax|mforce-fp-as-gp|mex9:--relax}\" \\\n+  \" %{mex9:--mex9}\"\n+\n+#define LIB_SPEC \\\n+  \" -lc -lgloss\"\n+\n+/* The option -mno-ctor-dtor can disable constructor/destructor feature\n+   by applying different crt stuff.  In the convention, crt0.o is the\n+   startup file without constructor/destructor;\n+   crt1.o, crti.o, crtbegin.o, crtend.o, and crtn.o are the\n+   startup files with constructor/destructor.\n+   Note that crt0.o, crt1.o, crti.o, and crtn.o are provided\n+   by newlib/mculib/glibc/ublic, while crtbegin.o and crtend.o are\n+   currently provided by GCC for nds32 target.\n+\n+   For nds32 target so far:\n+   If -mno-ctor-dtor, we are going to link\n+   \"crt0.o [user objects]\".\n+   If general cases, we are going to link\n+   \"crt1.o crtbegin1.o [user objects] crtend1.o\".  */\n+#define STARTFILE_SPEC \\\n+  \" %{!mno-ctor-dtor:crt1.o%s;:crt0.o%s}\" \\\n+  \" %{!mno-ctor-dtor:crtbegin1.o%s}\"\n+#define ENDFILE_SPEC \\\n+  \" %{!mno-ctor-dtor:crtend1.o%s}\"\n+\n+/* The TARGET_BIG_ENDIAN_DEFAULT is defined if we configure gcc\n+   with --target=nds32be-* setting.\n+   Check gcc/config.gcc for more information.\n+   In addition, currently we only have elf toolchain,\n+   where mgp-direct is always the default.  */\n+#ifdef TARGET_BIG_ENDIAN_DEFAULT\n+#define MULTILIB_DEFAULTS { \"mbig-endian\", \"mgp-direct\" }\n+#else\n+#define MULTILIB_DEFAULTS { \"mlittle-endian\", \"mgp-direct\" }\n+#endif\n+\n+\f\n+/* Run-time Target Specification.  */\n+\n+#define TARGET_CPU_CPP_BUILTINS()                     \\\n+  do                                                  \\\n+    {                                                 \\\n+      builtin_define (\"__nds32__\");                   \\\n+                                                      \\\n+      if (TARGET_ISA_V2)                              \\\n+        builtin_define (\"__NDS32_ISA_V2__\");          \\\n+      if (TARGET_ISA_V3)                              \\\n+        builtin_define (\"__NDS32_ISA_V3__\");          \\\n+      if (TARGET_ISA_V3M)                             \\\n+        builtin_define (\"__NDS32_ISA_V3M__\");         \\\n+                                                      \\\n+      if (TARGET_BIG_ENDIAN)                          \\\n+        builtin_define (\"__big_endian__\");            \\\n+      if (TARGET_REDUCED_REGS)                        \\\n+        builtin_define (\"__NDS32_REDUCED_REGS__\");    \\\n+      if (TARGET_CMOV)                                \\\n+        builtin_define (\"__NDS32_CMOV__\");            \\\n+      if (TARGET_PERF_EXT)                            \\\n+        builtin_define (\"__NDS32_PERF_EXT__\");        \\\n+      if (TARGET_16_BIT)                              \\\n+        builtin_define (\"__NDS32_16_BIT__\");          \\\n+      if (TARGET_GP_DIRECT)                           \\\n+        builtin_define (\"__NDS32_GP_DIRECT__\");       \\\n+                                                      \\\n+      builtin_assert (\"cpu=nds32\");                   \\\n+      builtin_assert (\"machine=nds32\");               \\\n+    } while (0)\n+\n+\f\n+/* Defining Data Structures for Per-function Information.  */\n+\n+/* This macro is called once per function,\n+   before generation of any RTL has begun.  */\n+#define INIT_EXPANDERS  nds32_init_expanders ()\n+\n+\f\n+/* Storage Layout.  */\n+\n+#define BITS_BIG_ENDIAN 0\n+\n+#define BYTES_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n+\n+#define WORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n+\n+#define UNITS_PER_WORD 4\n+\n+#define PROMOTE_MODE(m, unsignedp, type)                                    \\\n+  if (GET_MODE_CLASS (m) == MODE_INT && GET_MODE_SIZE (m) < UNITS_PER_WORD) \\\n+    {                                                                       \\\n+      (m) = SImode;                                                         \\\n+    }\n+\n+#define PARM_BOUNDARY 32\n+\n+#define STACK_BOUNDARY 64\n+\n+#define FUNCTION_BOUNDARY 32\n+\n+#define BIGGEST_ALIGNMENT 64\n+\n+#define EMPTY_FIELD_BOUNDARY 32\n+\n+#define STRUCTURE_SIZE_BOUNDARY 8\n+\n+#define STRICT_ALIGNMENT 1\n+\n+#define PCC_BITFIELD_TYPE_MATTERS 1\n+\n+\f\n+/* Layout of Source Language Data Types.  */\n+\n+#define INT_TYPE_SIZE           32\n+#define SHORT_TYPE_SIZE         16\n+#define LONG_TYPE_SIZE          32\n+#define LONG_LONG_TYPE_SIZE     64\n+\n+#define FLOAT_TYPE_SIZE         32\n+#define DOUBLE_TYPE_SIZE        64\n+#define LONG_DOUBLE_TYPE_SIZE   64\n+\n+#define DEFAULT_SIGNED_CHAR 1\n+\n+#define SIZE_TYPE \"long unsigned int\"\n+#define PTRDIFF_TYPE \"long int\"\n+#define WCHAR_TYPE \"short unsigned int\"\n+#define WCHAR_TYPE_SIZE 16\n+\n+\f\n+/* Register Usage.  */\n+\n+/* Number of actual hardware registers.\n+   The hardware registers are assigned numbers for the compiler\n+   from 0 to just below FIRST_PSEUDO_REGISTER.\n+   All registers that the compiler knows about must be given numbers,\n+   even those that are not normally considered general registers.  */\n+#define FIRST_PSEUDO_REGISTER 34\n+\n+/* An initializer that says which registers are used for fixed\n+   purposes all throughout the compiled code and are therefore\n+   not available for general allocation.\n+\n+   $r28 : $fp\n+   $r29 : $gp\n+   $r30 : $lp\n+   $r31 : $sp\n+\n+   caller-save registers: $r0 ~ $r5, $r16 ~ $r23\n+   callee-save registers: $r6 ~ $r10, $r11 ~ $r14\n+\n+   reserved for assembler : $r15\n+   reserved for other use : $r24, $r25, $r26, $r27 */\n+#define FIXED_REGISTERS                 \\\n+{ /* r0  r1  r2  r3  r4  r5  r6  r7  */ \\\n+      0,  0,  0,  0,  0,  0,  0,  0,    \\\n+  /* r8  r9  r10 r11 r12 r13 r14 r15 */ \\\n+      0,  0,  0,  0,  0,  0,  0,  1,    \\\n+  /* r16 r17 r18 r19 r20 r21 r22 r23 */ \\\n+      0,  0,  0,  0,  0,  0,  0,  0,    \\\n+  /* r24 r25 r26 r27 r28 r29 r30 r31 */ \\\n+      1,  1,  1,  1,  0,  1,  0,  1,    \\\n+  /* ARG_POINTER:32 */                  \\\n+      1,                                \\\n+  /* FRAME_POINTER:33 */                \\\n+      1                                 \\\n+}\n+\n+/* Identifies the registers that are not available for\n+   general allocation of values that must live across\n+   function calls -- so they are caller-save registers.\n+\n+   0 : callee-save registers\n+   1 : caller-save registers */\n+#define CALL_USED_REGISTERS             \\\n+{ /* r0  r1  r2  r3  r4  r5  r6  r7  */ \\\n+      1,  1,  1,  1,  1,  1,  0,  0,    \\\n+  /* r8  r9  r10 r11 r12 r13 r14 r15 */ \\\n+      0,  0,  0,  0,  0,  0,  0,  1,    \\\n+  /* r16 r17 r18 r19 r20 r21 r22 r23 */ \\\n+      1,  1,  1,  1,  1,  1,  1,  1,    \\\n+  /* r24 r25 r26 r27 r28 r29 r30 r31 */ \\\n+      1,  1,  1,  1,  0,  1,  0,  1,    \\\n+  /* ARG_POINTER:32 */                  \\\n+      1,                                \\\n+  /* FRAME_POINTER:33 */                \\\n+      1                                 \\\n+}\n+\n+/* In nds32 target, we have three levels of registers:\n+     LOW_COST_REGS    : $r0 ~ $r7\n+     MIDDLE_COST_REGS : $r8 ~ $r11, $r16 ~ $r19\n+     HIGH_COST_REGS   : $r12 ~ $r14, $r20 ~ $r31 */\n+#define REG_ALLOC_ORDER           \\\n+{                                 \\\n+   0,  1,  2,  3,  4,  5,  6,  7, \\\n+   8,  9, 10, 11, 16, 17, 18, 19, \\\n+  12, 13, 14, 15, 20, 21, 22, 23, \\\n+  24, 25, 26, 27, 28, 29, 30, 31, \\\n+  32,                             \\\n+  33                              \\\n+}\n+\n+/* Tell IRA to use the order we define rather than messing it up with its\n+   own cost calculations.  */\n+#define HONOR_REG_ALLOC_ORDER\n+\n+/* The number of consecutive hard regs needed starting at\n+   reg \"regno\" for holding a value of mode \"mode\".  */\n+#define HARD_REGNO_NREGS(regno, mode) nds32_hard_regno_nregs (regno, mode)\n+\n+/* Value is 1 if hard register \"regno\" can hold a value\n+   of machine-mode \"mode\".  */\n+#define HARD_REGNO_MODE_OK(regno, mode) nds32_hard_regno_mode_ok (regno, mode)\n+\n+/* A C expression that is nonzero if a value of mode1\n+   is accessible in mode2 without copying.\n+   Define this macro to return nonzero in as many cases as possible\n+   since doing so will allow GCC to perform better register allocation.\n+   We can use general registers to tie QI/HI/SI modes together.  */\n+#define MODES_TIEABLE_P(mode1, mode2)          \\\n+  (GET_MODE_CLASS (mode1) == MODE_INT          \\\n+   && GET_MODE_CLASS (mode2) == MODE_INT       \\\n+   && GET_MODE_SIZE (mode1) <= UNITS_PER_WORD  \\\n+   && GET_MODE_SIZE (mode2) <= UNITS_PER_WORD)\n+\n+\f\n+/* Register Classes.  */\n+\n+/* In nds32 target, we have three levels of registers:\n+     Low cost regsiters    : $r0 ~ $r7\n+     Middle cost registers : $r8 ~ $r11, $r16 ~ $r19\n+     High cost registers   : $r12 ~ $r14, $r20 ~ $r31\n+\n+   In practice, we have MIDDLE_REGS cover LOW_REGS register class contents\n+   so that it provides more chance to use low cost registers.  */\n+enum reg_class\n+{\n+  NO_REGS,\n+  R15_TA_REG,\n+  STACK_REG,\n+  LOW_REGS,\n+  MIDDLE_REGS,\n+  HIGH_REGS,\n+  GENERAL_REGS,\n+  FRAME_REGS,\n+  ALL_REGS,\n+  LIM_REG_CLASSES\n+};\n+\n+#define N_REG_CLASSES (int) LIM_REG_CLASSES\n+\n+#define REG_CLASS_NAMES \\\n+{                       \\\n+  \"NO_REGS\",            \\\n+  \"R15_TA_REG\",         \\\n+  \"STACK_REG\",          \\\n+  \"LOW_REGS\",           \\\n+  \"MIDDLE_REGS\",        \\\n+  \"HIGH_REGS\",          \\\n+  \"GENERAL_REGS\",       \\\n+  \"FRAME_REGS\",         \\\n+  \"ALL_REGS\"            \\\n+}\n+\n+#define REG_CLASS_CONTENTS \\\n+{                                                            \\\n+  {0x00000000, 0x00000000}, /* NO_REGS     :              */ \\\n+  {0x00008000, 0x00000000}, /* R15_TA_REG  : 15           */ \\\n+  {0x80000000, 0x00000000}, /* STACK_REG   : 31           */ \\\n+  {0x000000ff, 0x00000000}, /* LOW_REGS    : 0-7          */ \\\n+  {0x000f0fff, 0x00000000}, /* MIDDLE_REGS : 0-11, 16-19  */ \\\n+  {0xfff07000, 0x00000000}, /* HIGH_REGS   : 12-14, 20-31 */ \\\n+  {0xffffffff, 0x00000000}, /* GENERAL_REGS: 0-31         */ \\\n+  {0x00000000, 0x00000003}, /* FRAME_REGS  : 32, 33       */ \\\n+  {0xffffffff, 0x00000003}  /* ALL_REGS    : 0-31, 32, 33 */ \\\n+}\n+\n+#define REGNO_REG_CLASS(regno) nds32_regno_reg_class (regno)\n+\n+#define BASE_REG_CLASS GENERAL_REGS\n+#define INDEX_REG_CLASS GENERAL_REGS\n+\n+/* Return nonzero if it is suitable for use as a\n+   base register in operand addresses.\n+   So far, we return nonzero only if \"num\" is a hard reg\n+   of the suitable class or a pseudo register which is\n+   allocated to a suitable hard reg.  */\n+#define REGNO_OK_FOR_BASE_P(num) \\\n+  ((num) < 32 || (unsigned) reg_renumber[num] < 32)\n+\n+/* Return nonzero if it is suitable for use as a\n+   index register in operand addresses.\n+   So far, we return nonzero only if \"num\" is a hard reg\n+   of the suitable class or a pseudo register which is\n+   allocated to a suitable hard reg.\n+   The difference between an index register and a base register is that\n+   the index register may be scaled.  */\n+#define REGNO_OK_FOR_INDEX_P(num) \\\n+  ((num) < 32 || (unsigned) reg_renumber[num] < 32)\n+\n+\f\n+/* Obsolete Macros for Defining Constraints.  */\n+\n+\f\n+/* Stack Layout and Calling Conventions.  */\n+\n+#define STACK_GROWS_DOWNWARD\n+\n+#define FRAME_GROWS_DOWNWARD 1\n+\n+#define STARTING_FRAME_OFFSET 0\n+\n+#define STACK_POINTER_OFFSET 0\n+\n+#define FIRST_PARM_OFFSET(fundecl) 0\n+\n+#define RETURN_ADDR_RTX(count, frameaddr) \\\n+  nds32_return_addr_rtx (count, frameaddr)\n+\n+/* A C expression whose value is RTL representing the location\n+   of the incoming return address at the beginning of any function\n+   before the prologue.\n+   If this RTL is REG, you should also define\n+   DWARF_FRAME_RETURN_COLUMN to DWARF_FRAME_REGNUM (REGNO).  */\n+#define INCOMING_RETURN_ADDR_RTX    gen_rtx_REG (Pmode, LP_REGNUM)\n+#define DWARF_FRAME_RETURN_COLUMN   DWARF_FRAME_REGNUM (LP_REGNUM)\n+\n+#define STACK_POINTER_REGNUM SP_REGNUM\n+\n+#define FRAME_POINTER_REGNUM 33\n+\n+#define HARD_FRAME_POINTER_REGNUM FP_REGNUM\n+\n+#define ARG_POINTER_REGNUM 32\n+\n+#define STATIC_CHAIN_REGNUM 16\n+\n+#define ELIMINABLE_REGS                                \\\n+{ { ARG_POINTER_REGNUM,   STACK_POINTER_REGNUM },      \\\n+  { ARG_POINTER_REGNUM,   HARD_FRAME_POINTER_REGNUM }, \\\n+  { FRAME_POINTER_REGNUM, STACK_POINTER_REGNUM },      \\\n+  { FRAME_POINTER_REGNUM, HARD_FRAME_POINTER_REGNUM } }\n+\n+#define INITIAL_ELIMINATION_OFFSET(from_reg, to_reg, offset_var) \\\n+  (offset_var) = nds32_initial_elimination_offset (from_reg, to_reg)\n+\n+#define ACCUMULATE_OUTGOING_ARGS 1\n+\n+#define OUTGOING_REG_PARM_STACK_SPACE(fntype) 1\n+\n+#define CUMULATIVE_ARGS nds32_cumulative_args\n+\n+#define INIT_CUMULATIVE_ARGS(cum, fntype, libname, fndecl, n_named_args) \\\n+  nds32_init_cumulative_args (&cum, fntype, libname, fndecl, n_named_args)\n+\n+/* The REGNO is an unsigned integer but NDS32_GPR_ARG_FIRST_REGNUM may be 0.\n+   We better cast REGNO into signed integer so that we can avoid\n+   'comparison of unsigned expression >= 0 is always true' warning.  */\n+#define FUNCTION_ARG_REGNO_P(regno)                                        \\\n+  (((int) regno - NDS32_GPR_ARG_FIRST_REGNUM >= 0)                         \\\n+   && ((int) regno - NDS32_GPR_ARG_FIRST_REGNUM < NDS32_MAX_REGS_FOR_ARGS))\n+\n+#define DEFAULT_PCC_STRUCT_RETURN 0\n+\n+/* EXIT_IGNORE_STACK should be nonzero if, when returning\n+   from a function, the stack pointer does not matter.\n+   The value is tested only in functions that have frame pointers.\n+   In nds32 target, the function epilogue recovers the\n+   stack pointer from the frame.  */\n+#define EXIT_IGNORE_STACK 1\n+\n+#define FUNCTION_PROFILER(file, labelno) \\\n+  fprintf (file, \"/* profiler %d */\", (labelno))\n+\n+\f\n+/* Implementing the Varargs Macros.  */\n+\n+\f\n+/* Trampolines for Nested Functions.  */\n+\n+/* Giving A-function and B-function,\n+   if B-function wants to call A-function's nested function,\n+   we need to fill trampoline code into A-function's stack\n+   so that B-function can execute the code in stack to indirectly\n+   jump to (like 'trampoline' action) desired nested function.\n+\n+   The trampoline code for nds32 target must contains following parts:\n+\n+     1. instructions (4 * 4 = 16 bytes):\n+          get $pc first\n+          load chain_value to static chain register via $pc\n+          load nested function address to $r15 via $pc\n+          jump to desired nested function via $r15\n+     2. data (4 * 2 = 8 bytes):\n+          chain_value\n+          nested function address\n+\n+   Please check nds32.c implementation for more information.  */\n+#define TRAMPOLINE_SIZE 24\n+\n+/* Because all instructions/data in trampoline template are 4-byte size,\n+   we set trampoline alignment 8*4=32 bits.  */\n+#define TRAMPOLINE_ALIGNMENT 32\n+\n+\f\n+/* Implicit Calls to Library Routines.  */\n+\n+\f\n+/* Addressing Modes.  */\n+\n+/* We can use \"LWI.bi  Rt, [Ra], 4\" to support post increment.  */\n+#define HAVE_POST_INCREMENT 1\n+/* We can use \"LWI.bi  Rt, [Ra], -4\" to support post decrement.  */\n+#define HAVE_POST_DECREMENT 1\n+\n+/* We have \"LWI.bi  Rt, [Ra], imm\" instruction form.  */\n+#define HAVE_POST_MODIFY_DISP 1\n+/* We have \"LW.bi   Rt, [Ra], Rb\" instruction form.  */\n+#define HAVE_POST_MODIFY_REG  1\n+\n+#define CONSTANT_ADDRESS_P(x) (CONSTANT_P (x) && GET_CODE (x) != CONST_DOUBLE)\n+\n+#define MAX_REGS_PER_ADDRESS 2\n+\n+\f\n+/* Anchored Addresses.  */\n+\n+\f\n+/* Condition Code Status.  */\n+\n+\f\n+/* Describing Relative Costs of Operations.  */\n+\n+/* A C expression for the cost of a branch instruction.\n+   A value of 1 is the default;\n+   other values are interpreted relative to that.  */\n+#define BRANCH_COST(speed_p, predictable_p) ((speed_p) ? 2 : 0)\n+\n+#define SLOW_BYTE_ACCESS 1\n+\n+#define NO_FUNCTION_CSE\n+\n+\f\n+/* Adjusting the Instruction Scheduler.  */\n+\n+\f\n+/* Dividing the Output into Sections (Texts, Data, . . . ).  */\n+\n+#define TEXT_SECTION_ASM_OP     \"\\t.text\"\n+#define DATA_SECTION_ASM_OP     \"\\t.data\"\n+\n+/* Currently, nds32 assembler does NOT handle '.bss' pseudo-op.\n+   So we use '.section .bss' alternatively.  */\n+#define BSS_SECTION_ASM_OP      \"\\t.section\\t.bss\"\n+\n+/* Define this macro to be an expression with a nonzero value if jump tables\n+   (for tablejump insns) should be output in the text section,\n+   along with the assembler instructions.\n+   Otherwise, the readonly data section is used.  */\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n+\n+\f\n+/* Position Independent Code.  */\n+\n+\f\n+/* Defining the Output Assembler Language.  */\n+\n+#define ASM_COMMENT_START \"!\"\n+\n+#define ASM_APP_ON \"! #APP\"\n+\n+#define ASM_APP_OFF \"! #NO_APP\\n\"\n+\n+#define ASM_OUTPUT_LABELREF(stream, name) \\\n+  asm_fprintf (stream, \"%U%s\", (*targetm.strip_name_encoding) (name))\n+\n+#define ASM_OUTPUT_SYMBOL_REF(stream, sym) \\\n+  assemble_name (stream, XSTR (sym, 0))\n+\n+#define ASM_OUTPUT_LABEL_REF(stream, buf) \\\n+  assemble_name (stream, buf)\n+\n+#define LOCAL_LABEL_PREFIX \".\"\n+\n+#define REGISTER_NAMES                                            \\\n+{                                                                 \\\n+  \"$r0\",  \"$r1\",  \"$r2\",  \"$r3\",  \"$r4\",  \"$r5\",  \"$r6\",  \"$r7\",  \\\n+  \"$r8\",  \"$r9\",  \"$r10\", \"$r11\", \"$r12\", \"$r13\", \"$r14\", \"$ta\",  \\\n+  \"$r16\", \"$r17\", \"$r18\", \"$r19\", \"$r20\", \"$r21\", \"$r22\", \"$r23\", \\\n+  \"$r24\", \"$r25\", \"$r26\", \"$r27\", \"$fp\",  \"$gp\",  \"$lp\",  \"$sp\",  \\\n+  \"$AP\",                                                          \\\n+  \"$SFP\"                                                          \\\n+}\n+\n+/* Output normal jump table entry.  */\n+#define ASM_OUTPUT_ADDR_VEC_ELT(stream, value) \\\n+  asm_fprintf (stream, \"\\t.word\\t%LL%d\\n\", value)\n+\n+/* Output pc relative jump table entry.  */\n+#define ASM_OUTPUT_ADDR_DIFF_ELT(stream, body, value, rel)              \\\n+  do                                                                    \\\n+    {                                                                   \\\n+      switch (GET_MODE (body))                                          \\\n+        {                                                               \\\n+        case QImode:                                                    \\\n+          asm_fprintf (stream, \"\\t.byte\\t.L%d-.L%d\\n\", value, rel);     \\\n+          break;                                                        \\\n+        case HImode:                                                    \\\n+          asm_fprintf (stream, \"\\t.short\\t.L%d-.L%d\\n\", value, rel);    \\\n+          break;                                                        \\\n+        case SImode:                                                    \\\n+          asm_fprintf (stream, \"\\t.word\\t.L%d-.L%d\\n\", value, rel);     \\\n+          break;                                                        \\\n+        default:                                                        \\\n+          gcc_unreachable();                                            \\\n+        }                                                               \\\n+    } while (0)\n+\n+/* We have to undef it first because elfos.h formerly define it\n+   check gcc/config.gcc and gcc/config/elfos.h for more information.  */\n+#undef  ASM_OUTPUT_CASE_LABEL\n+#define ASM_OUTPUT_CASE_LABEL(stream, prefix, num, table)          \\\n+  do                                                               \\\n+    {                                                              \\\n+      asm_fprintf (stream, \"\\t! Jump Table Begin\\n\");              \\\n+      (*targetm.asm_out.internal_label) (stream, prefix, num);     \\\n+    } while (0)\n+\n+#define ASM_OUTPUT_CASE_END(stream, num, table)        \\\n+  do                                                   \\\n+    {                                                  \\\n+      /* Because our jump table is in text section,    \\\n+         we need to make sure 2-byte alignment after   \\\n+         the jump table for instructions fetch.  */    \\\n+      if (GET_MODE (PATTERN (table)) == QImode)        \\\n+        ASM_OUTPUT_ALIGN (stream, 1);                  \\\n+      asm_fprintf (stream, \"\\t! Jump Table End\\n\");    \\\n+    }  while (0)\n+\n+/* This macro is not documented yet.\n+   But we do need it to make jump table vector aligned.  */\n+#define ADDR_VEC_ALIGN(JUMPTABLE) 2\n+\n+#define DWARF2_UNWIND_INFO 1\n+\n+#define JUMP_ALIGN(x) \\\n+  (align_jumps_log ? align_jumps_log : nds32_target_alignment (x))\n+\n+#define LOOP_ALIGN(x) \\\n+  (align_loops_log ? align_loops_log : nds32_target_alignment (x))\n+\n+#define LABEL_ALIGN(x) \\\n+  (align_labels_log ? align_labels_log : nds32_target_alignment (x))\n+\n+#define ASM_OUTPUT_ALIGN(stream, power) \\\n+  fprintf (stream, \"\\t.align\\t%d\\n\", power)\n+\n+\f\n+/* Controlling Debugging Information Format.  */\n+\n+#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n+\n+#define DWARF2_DEBUGGING_INFO 1\n+\n+#define DWARF2_ASM_LINE_DEBUG_INFO 1\n+\n+\f\n+/* Cross Compilation and Floating Point.  */\n+\n+\f\n+/* Mode Switching Instructions.  */\n+\n+\f\n+/* Defining target-specific uses of __attribute__.  */\n+\n+\f\n+/* Emulating TLS.  */\n+\n+\f\n+/* Defining coprocessor specifics for MIPS targets.  */\n+\n+\f\n+/* Parameters for Precompiled Header Validity Checking.  */\n+\n+\f\n+/* C++ ABI parameters.  */\n+\n+\f\n+/* Adding support for named address spaces.  */\n+\n+\f\n+/* Miscellaneous Parameters.  */\n+\n+/* This is the machine mode that elements of a jump-table should have.  */\n+#define CASE_VECTOR_MODE Pmode\n+\n+/* Return the preferred mode for and addr_diff_vec when the mininum\n+   and maximum offset are known.  */\n+#define CASE_VECTOR_SHORTEN_MODE(min_offset, max_offset, body)  \\\n+   ((min_offset < 0 || max_offset >= 0x2000 ) ? SImode          \\\n+   : (max_offset >= 100) ? HImode                               \\\n+   : QImode)\n+\n+/* Generate pc relative jump table when -fpic or -Os.  */\n+#define CASE_VECTOR_PC_RELATIVE (flag_pic || optimize_size)\n+\n+/* Define this macro if operations between registers with integral mode\n+   smaller than a word are always performed on the entire register.  */\n+#define WORD_REGISTER_OPERATIONS\n+\n+/* A C expression indicating when insns that read memory in mem_mode,\n+   an integral mode narrower than a word, set the bits outside of mem_mode\n+   to be either the sign-extension or the zero-extension of the data read.  */\n+#define LOAD_EXTEND_OP(MODE) ZERO_EXTEND\n+\n+/* The maximum number of bytes that a single instruction can move quickly\n+   between memory and registers or between two memory locations.  */\n+#define MOVE_MAX 4\n+\n+/* A C expression that is nonzero if on this machine the number of bits\n+   actually used for the count of a shift operation is equal to the number\n+   of bits needed to represent the size of the object being shifted.  */\n+#define SHIFT_COUNT_TRUNCATED 1\n+\n+/* A C expression which is nonzero if on this machine it is safe to \"convert\"\n+   an integer of 'inprec' bits to one of 'outprec' bits by merely operating\n+   on it as if it had only 'outprec' bits.  */\n+#define TRULY_NOOP_TRUNCATION(outprec, inprec) 1\n+\n+/* A C expression describing the value returned by a comparison operator with\n+   an integral mode and stored by a store-flag instruction ('cstoremode4')\n+   when the condition is true.  */\n+#define STORE_FLAG_VALUE 1\n+\n+/* An alias for the machine mode for pointers.  */\n+#define Pmode SImode\n+\n+/* An alias for the machine mode used for memory references to functions\n+   being called, in call RTL expressions.  */\n+#define FUNCTION_MODE SImode\n+\n+/* ------------------------------------------------------------------------ */"}, {"sha": "4a832eaf86b256b2fe6977649bb4c35bfe117e0d", "filename": "gcc/config/nds32/nds32.md", "status": "added", "additions": 2221, "deletions": 0, "changes": 2221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,2221 @@\n+;; Machine description of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n+\n+;; Include predicates definition.\n+(include \"predicates.md\")\n+\n+;; Include constraints definition.\n+(include \"constraints.md\")\n+\n+;; Include iterators definition.\n+(include \"iterators.md\")\n+\n+;; Include pipelines definition.\n+(include \"pipelines.md\")\n+\n+\n+;; Include constants definition.\n+(include \"constants.md\")\n+\n+\n+;; Include intrinsic functions definition.\n+(include \"nds32-intrinsic.md\")\n+\n+;; Include block move for nds32 multiple load/store behavior.\n+(include \"nds32-multiple.md\")\n+\n+;; Include DImode/DFmode operations.\n+(include \"nds32-doubleword.md\")\n+\n+;; Include peephole patterns.\n+(include \"nds32-peephole2.md\")\n+\n+\n+;; Insn type, it is used to default other attribute values.\n+(define_attr \"type\"\n+  \"unknown,move,load,store,alu,compare,branch,call,misc\"\n+  (const_string \"unknown\"))\n+\n+\n+;; Length, in bytes, default is 4-bytes.\n+(define_attr \"length\" \"\" (const_int 4))\n+\n+\n+;; Enabled, which is used to enable/disable insn alternatives.\n+;; Note that we use length and TARGET_16_BIT here as criteria.\n+;; If the instruction pattern already check TARGET_16_BIT to\n+;; determine the length by itself, its enabled attribute should be\n+;; always 1 to avoid the conflict with the settings here.\n+(define_attr \"enabled\" \"\"\n+  (cond [(and (eq_attr \"length\" \"2\")\n+\t      (match_test \"!TARGET_16_BIT\"))\n+\t (const_int 0)]\n+\t(const_int 1)))\n+\n+\n+;; ----------------------------------------------------------------------------\n+\n+\n+;; Move instructions.\n+\n+;; For QImode and HImode, the immediate value can be fit in imm20s.\n+;; So there is no need to split rtx for QI and HI patterns.\n+\n+(define_expand \"movqi\"\n+  [(set (match_operand:QI 0 \"general_operand\" \"\")\n+\t(match_operand:QI 1 \"general_operand\" \"\"))]\n+  \"\"\n+{\n+  /* Need to force register if mem <- !reg.  */\n+  if (MEM_P (operands[0]) && !REG_P (operands[1]))\n+    operands[1] = force_reg (QImode, operands[1]);\n+})\n+\n+(define_expand \"movhi\"\n+  [(set (match_operand:HI 0 \"general_operand\" \"\")\n+\t(match_operand:HI 1 \"general_operand\" \"\"))]\n+  \"\"\n+{\n+  /* Need to force register if mem <- !reg.  */\n+  if (MEM_P (operands[0]) && !REG_P (operands[1]))\n+    operands[1] = force_reg (HImode, operands[1]);\n+})\n+\n+(define_expand \"movsi\"\n+  [(set (match_operand:SI 0 \"general_operand\" \"\")\n+\t(match_operand:SI 1 \"general_operand\" \"\"))]\n+  \"\"\n+{\n+  /* Need to force register if mem <- !reg.  */\n+  if (MEM_P (operands[0]) && !REG_P (operands[1]))\n+    operands[1] = force_reg (SImode, operands[1]);\n+\n+  /* If operands[1] is a large constant and cannot be performed\n+     by a single instruction, we need to split it.  */\n+  if (CONST_INT_P (operands[1])\n+      && !satisfies_constraint_Is20 (operands[1])\n+      && !satisfies_constraint_Ihig (operands[1]))\n+    {\n+      rtx high20_rtx;\n+      HOST_WIDE_INT low12_int;\n+      rtx tmp_rtx;\n+\n+      tmp_rtx = can_create_pseudo_p () ? gen_reg_rtx (SImode) : operands[0];\n+\n+      high20_rtx = gen_int_mode ((INTVAL (operands[1]) >> 12) << 12, SImode);\n+      low12_int = INTVAL (operands[1]) & 0xfff;\n+\n+      emit_move_insn (tmp_rtx, high20_rtx);\n+      emit_move_insn (operands[0], plus_constant (SImode,\n+\t\t\t\t\t\t  tmp_rtx,\n+\t\t\t\t\t\t  low12_int));\n+      DONE;\n+    }\n+})\n+\n+(define_insn \"*mov<mode>\"\n+  [(set (match_operand:QIHISI 0 \"nonimmediate_operand\" \"=r, r, U45, U33, U37, U45, m,   l,   l,   l,   d, r,    d,    r,    r,    r\")\n+\t(match_operand:QIHISI 1 \"nds32_move_operand\"   \" r, r,   l,   l,   l,   d, r, U45, U33, U37, U45, m, Ip05, Is05, Is20, Ihig\"))]\n+  \"\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"mov55\\t%0, %1\";\n+    case 1:\n+      return \"ori\\t%0, %1, 0\";\n+    case 2:\n+    case 3:\n+    case 4:\n+    case 5:\n+      return nds32_output_16bit_store (operands, <byte>);\n+    case 6:\n+      return nds32_output_32bit_store (operands, <byte>);\n+    case 7:\n+    case 8:\n+    case 9:\n+    case 10:\n+      return nds32_output_16bit_load (operands, <byte>);\n+    case 11:\n+      return nds32_output_32bit_load (operands, <byte>);\n+    case 12:\n+      return \"movpi45\\t%0, %1\";\n+    case 13:\n+      return \"movi55\\t%0, %1\";\n+    case 14:\n+      return \"movi\\t%0, %1\";\n+    case 15:\n+      return \"sethi\\t%0, hi20(%1)\";\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"alu,alu,store,store,store,store,store,load,load,load,load,load,alu,alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  4,    2,    2,    2,    2,    4,   2,   2,   2,   2,   4,  2,  2,  4,  4\")])\n+\n+\n+;; We use nds32_symbolic_operand to limit that only CONST/SYMBOL_REF/LABEL_REF\n+;; are able to match such instruction template.\n+(define_insn \"*move_addr\"\n+  [(set (match_operand:SI 0 \"register_operand\"       \"=l, r\")\n+\t(match_operand:SI 1 \"nds32_symbolic_operand\" \" i, i\"))]\n+  \"\"\n+  \"la\\t%0, %1\"\n+  [(set_attr \"type\" \"move\")\n+   (set_attr \"length\"  \"8\")])\n+\n+\n+(define_insn \"*sethi\"\n+  [(set (match_operand:SI 0 \"register_operand\"                \"=r\")\n+\t(high:SI (match_operand:SI 1 \"nds32_symbolic_operand\" \" i\")))]\n+  \"\"\n+  \"sethi\\t%0, hi20(%1)\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+\n+(define_insn \"*lo_sum\"\n+  [(set (match_operand:SI 0 \"register_operand\"                  \"=r\")\n+\t(lo_sum:SI (match_operand:SI 1 \"register_operand\"       \" r\")\n+\t\t   (match_operand:SI 2 \"nds32_symbolic_operand\" \" i\")))]\n+  \"\"\n+  \"ori\\t%0, %1, lo12(%2)\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+\n+;; Zero extension instructions.\n+\n+(define_insn \"zero_extend<mode>si2\"\n+  [(set (match_operand:SI 0 \"register_operand\"                       \"=l, r,   l, *r\")\n+\t(zero_extend:SI (match_operand:QIHI 1 \"nonimmediate_operand\" \" l, r, U33,  m\")))]\n+  \"\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"ze<size>33\\t%0, %1\";\n+    case 1:\n+      return \"ze<size>\\t%0, %1\";\n+    case 2:\n+      return nds32_output_16bit_load (operands, <byte>);\n+    case 3:\n+      return nds32_output_32bit_load (operands, <byte>);\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"alu,alu,load,load\")\n+   (set_attr \"length\" \"  2,  4,   2,   4\")])\n+\n+\n+;; Sign extension instructions.\n+\n+(define_insn \"extend<mode>si2\"\n+  [(set (match_operand:SI 0 \"register_operand\"                       \"=l, r, r\")\n+\t(sign_extend:SI (match_operand:QIHI 1 \"nonimmediate_operand\" \" l, r, m\")))]\n+  \"\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"se<size>33\\t%0, %1\";\n+    case 1:\n+      return \"se<size>\\t%0, %1\";\n+    case 2:\n+      return nds32_output_32bit_load_s (operands, <byte>);\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"alu,alu,load\")\n+   (set_attr \"length\" \"  2,  4,   4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+\n+;; Arithmetic instructions.\n+\n+(define_insn \"add<mode>3\"\n+  [(set (match_operand:QIHISI 0 \"register_operand\"                   \"=   d,    l,    d,    l,  d, l,    k,    l,    r, r\")\n+\t(plus:QIHISI (match_operand:QIHISI 1 \"register_operand\"      \"    0,    l,    0,    l, %0, l,    0,    k,    r, r\")\n+\t\t     (match_operand:QIHISI 2 \"nds32_rimm15s_operand\" \" In05, In03, Iu05, Iu03,  r, l, Is10, Iu06, Is15, r\")))]\n+  \"\"\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      /* addi Rt4,Rt4,-x  ==>  subi45 Rt4,x\n+         where 0 <= x <= 31 */\n+      operands[2] = gen_int_mode (-INTVAL (operands[2]), SImode);\n+      return \"subi45\\t%0, %2\";\n+    case 1:\n+      /* addi Rt3,Ra3,-x  ==>  subi333 Rt3,Ra3,x\n+         where 0 <= x <= 7 */\n+      operands[2] = gen_int_mode (-INTVAL (operands[2]), SImode);\n+      return \"subi333\\t%0, %1, %2\";\n+    case 2:\n+      return \"addi45\\t%0, %2\";\n+    case 3:\n+      return \"addi333\\t%0, %1, %2\";\n+    case 4:\n+      return \"add45\\t%0, %2\";\n+    case 5:\n+      return \"add333\\t%0, %1, %2\";\n+    case 6:\n+      return \"addi10.sp\\t%2\";\n+    case 7:\n+      return \"addri36.sp\\t%0, %2\";\n+    case 8:\n+      return \"addi\\t%0, %1, %2\";\n+    case 9:\n+      return \"add\\t%0, %1, %2\";\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"alu,alu,alu,alu,alu,alu,alu,alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  2,  2,  2,  2,  2,  2,  2,  4,  4\")])\n+\n+(define_insn \"sub<mode>3\"\n+  [(set (match_operand:QIHISI 0 \"register_operand\"                    \"=d, l,    r, r\")\n+\t(minus:QIHISI (match_operand:QIHISI 1 \"nds32_rimm15s_operand\" \" 0, l, Is15, r\")\n+\t\t      (match_operand:QIHISI 2 \"register_operand\"      \" r, l,    r, r\")))]\n+  \"\"\n+  \"@\n+  sub45\\t%0, %2\n+  sub333\\t%0, %1, %2\n+  subri\\t%0, %2, %1\n+  sub\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu,alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  2,  4,  4\")])\n+\n+\n+;; GCC intends to simplify (plus (ashift ...) (reg))\n+;; into (plus (mult ...) (reg)), so our matching pattern takes 'mult'\n+;; and needs to ensure it is exact_log2 value.\n+(define_insn \"*add_slli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                    \"=r\")\n+        (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\"  \" r\")\n+\t\t\t  (match_operand:SI 2 \"immediate_operand\" \" i\"))\n+\t\t (match_operand:SI 3 \"register_operand\"           \" r\")))]\n+  \"TARGET_ISA_V3\n+   && (exact_log2 (INTVAL (operands[2])) != -1)\n+   && (exact_log2 (INTVAL (operands[2])) <= 31)\"\n+{\n+  /* Get floor_log2 of the immediate value\n+     so that we can generate 'add_slli' instruction.  */\n+  operands[2] = GEN_INT (floor_log2 (INTVAL (operands[2])));\n+\n+  return \"add_slli\\t%0, %3, %1, %2\";\n+}\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*add_srli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                        \"=   r\")\n+\t(plus:SI (lshiftrt:SI (match_operand:SI 1 \"register_operand\"  \"    r\")\n+\t\t\t      (match_operand:SI 2 \"immediate_operand\" \" Iu05\"))\n+\t\t (match_operand:SI 3 \"register_operand\"               \"    r\")))]\n+  \"TARGET_ISA_V3\"\n+  \"add_srli\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+\n+;; GCC intends to simplify (minus (reg) (ashift ...))\n+;; into (minus (reg) (mult ...)), so our matching pattern takes 'mult'\n+;; and needs to ensure it is exact_log2 value.\n+(define_insn \"*sub_slli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                     \"=r\")\n+\t(minus:SI (match_operand:SI 1 \"register_operand\"           \" r\")\n+\t\t  (mult:SI (match_operand:SI 2 \"register_operand\"  \" r\")\n+\t\t\t   (match_operand:SI 3 \"immediate_operand\" \" i\"))))]\n+  \"TARGET_ISA_V3\n+   && (exact_log2 (INTVAL (operands[3])) != -1)\n+   && (exact_log2 (INTVAL (operands[3])) <= 31)\"\n+{\n+  /* Get floor_log2 of the immediate value\n+     so that we can generate 'sub_slli' instruction.  */\n+  operands[3] = GEN_INT (floor_log2 (INTVAL (operands[3])));\n+\n+  return \"sub_slli\\t%0, %1, %2, %3\";\n+}\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*sub_srli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                         \"=   r\")\n+\t(minus:SI (match_operand:SI 1 \"register_operand\"               \"    r\")\n+\t\t  (lshiftrt:SI (match_operand:SI 2 \"register_operand\"  \"    r\")\n+\t\t\t       (match_operand:SI 3 \"immediate_operand\" \" Iu05\"))))]\n+  \"TARGET_ISA_V3\"\n+  \"sub_srli\\t%0, %1, %2, %3\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+\n+;; Multiplication instructions.\n+\n+(define_insn \"mulsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"          \"= w, r\")\n+\t(mult:SI (match_operand:SI 1 \"register_operand\" \" %0, r\")\n+\t\t (match_operand:SI 2 \"register_operand\" \"  w, r\")))]\n+  \"\"\n+  \"@\n+  mul33\\t%0, %2\n+  mul\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu,alu\")\n+   (set_attr \"length\" \"  2,  4\")])\n+\n+(define_insn \"mulsidi3\"\n+  [(set (match_operand:DI 0 \"register_operand\"                          \"=r\")\n+\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \" r\"))\n+\t\t (sign_extend:DI (match_operand:SI 2 \"register_operand\" \" r\"))))]\n+  \"TARGET_ISA_V2 || TARGET_ISA_V3\"\n+  \"mulsr64\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu\")\n+   (set_attr \"length\"   \"4\")])\n+\n+(define_insn \"umulsidi3\"\n+  [(set (match_operand:DI 0 \"register_operand\"                          \"=r\")\n+\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \" r\"))\n+\t\t (zero_extend:DI (match_operand:SI 2 \"register_operand\" \" r\"))))]\n+  \"TARGET_ISA_V2 || TARGET_ISA_V3\"\n+  \"mulr64\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu\")\n+   (set_attr \"length\"   \"4\")])\n+\n+\n+;; Multiply-accumulate instructions.\n+\n+(define_insn \"*maddr32_0\"\n+  [(set (match_operand:SI 0 \"register_operand\"                   \"=r\")\n+        (plus:SI (match_operand:SI 3 \"register_operand\"          \" 0\")\n+                 (mult:SI (match_operand:SI 1 \"register_operand\" \" r\")\n+                          (match_operand:SI 2 \"register_operand\" \" r\"))))]\n+  \"\"\n+  \"maddr32\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu\")\n+   (set_attr \"length\"   \"4\")])\n+\n+(define_insn \"*maddr32_1\"\n+  [(set (match_operand:SI 0 \"register_operand\"                   \"=r\")\n+        (plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \" r\")\n+                          (match_operand:SI 2 \"register_operand\" \" r\"))\n+                 (match_operand:SI 3 \"register_operand\"          \" 0\")))]\n+  \"\"\n+  \"maddr32\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu\")\n+   (set_attr \"length\"   \"4\")])\n+\n+(define_insn \"*msubr32\"\n+  [(set (match_operand:SI 0 \"register_operand\"                    \"=r\")\n+        (minus:SI (match_operand:SI 3 \"register_operand\"          \" 0\")\n+                  (mult:SI (match_operand:SI 1 \"register_operand\" \" r\")\n+                           (match_operand:SI 2 \"register_operand\" \" r\"))))]\n+  \"\"\n+  \"msubr32\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu\")\n+   (set_attr \"length\"   \"4\")])\n+\n+\n+;; Div Instructions.\n+\n+(define_insn \"divmodsi4\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"=r\")\n+        (div:SI (match_operand:SI 1 \"register_operand\" \" r\")\n+                (match_operand:SI 2 \"register_operand\" \" r\")))\n+   (set (match_operand:SI 3 \"register_operand\"         \"=r\")\n+        (mod:SI (match_dup 1) (match_dup 2)))]\n+  \"\"\n+  \"divsr\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\"   \"alu\")\n+   (set_attr \"length\"   \"4\")])\n+\n+(define_insn \"udivmodsi4\"\n+  [(set (match_operand:SI 0 \"register_operand\"          \"=r\")\n+        (udiv:SI (match_operand:SI 1 \"register_operand\" \" r\")\n+                (match_operand:SI 2 \"register_operand\"  \" r\")))\n+   (set (match_operand:SI 3 \"register_operand\"          \"=r\")\n+        (umod:SI (match_dup 1) (match_dup 2)))]\n+  \"\"\n+  \"divr\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\"   \"alu\")\n+   (set_attr \"length\"   \"4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+\n+;; Boolean instructions.\n+;; Note: We define the DImode versions in nds32-doubleword.md.\n+\n+;; ----------------------------------------------------------------------------\n+;; 'AND' operation\n+;; ----------------------------------------------------------------------------\n+\n+(define_insn \"bitc\"\n+  [(set (match_operand:SI 0 \"register_operand\"                 \"=r\")\n+\t(and:SI (not:SI (match_operand:SI 1 \"register_operand\" \" r\"))\n+\t\t(match_operand:SI 2 \"register_operand\"         \" r\")))]\n+  \"TARGET_ISA_V3\"\n+  \"bitc\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")]\n+)\n+\n+(define_insn \"andsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"= w, r,    l,    l,    l,    l,    l,    l,    r,   r,     r,    r,    r\")\n+\t(and:SI (match_operand:SI 1 \"register_operand\" \" %0, r,    l,    l,    l,    l,    0,    0,    r,   r,     r,    r,    r\")\n+\t\t(match_operand:SI 2 \"general_operand\"  \"  w, r, Izeb, Izeh, Ixls, Ix11, Ibms, Ifex, Izeb, Izeh, Iu15, Ii15, Ic15\")))]\n+  \"\"\n+{\n+  HOST_WIDE_INT mask = INTVAL (operands[2]);\n+  int zero_position;\n+\n+  /* 16-bit andi instructions:\n+     andi Rt3,Ra3,0xff   -> zeb33  Rt3,Ra3\n+     andi Rt3,Ra3,0xffff -> zeh33  Rt3,Ra3\n+     andi Rt3,Ra3,0x01   -> xlsb33 Rt3,Ra3\n+     andi Rt3,Ra3,0x7ff  -> x11b33 Rt3,Ra3\n+     andi Rt3,Rt3,2^imm3u          -> bmski33 Rt3,imm3u\n+     andi Rt3,Rt3,(2^(imm3u+1))-1  -> fexti33 Rt3,imm3u.  */\n+\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"and33\\t%0, %2\";\n+    case 1:\n+      return \"and\\t%0, %1, %2\";\n+    case 2:\n+      return \"zeb33\\t%0, %1\";\n+    case 3:\n+      return \"zeh33\\t%0, %1\";\n+    case 4:\n+      return \"xlsb33\\t%0, %1\";\n+    case 5:\n+      return \"x11b33\\t%0, %1\";\n+    case 6:\n+      operands[2] = GEN_INT (floor_log2 (mask));\n+      return \"bmski33\\t%0, %2\";\n+    case 7:\n+      operands[2] = GEN_INT (floor_log2 (mask + 1) - 1);\n+      return \"fexti33\\t%0, %2\";\n+    case 8:\n+      return \"zeb\\t%0, %1\";\n+    case 9:\n+      return \"zeh\\t%0, %1\";\n+    case 10:\n+      return \"andi\\t%0, %1, %2\";\n+    case 11:\n+      operands[2] = GEN_INT (~mask);\n+      return \"bitci\\t%0, %1, %2\";\n+    case 12:\n+      /* If we reach this alternative,\n+         it must pass the nds32_can_use_bclr_p() test,\n+         so that we can guarantee there is only one 0-bit\n+         within the immediate value.  */\n+      for (zero_position = 31; zero_position >= 0; zero_position--)\n+\t{\n+\t  if ((INTVAL (operands[2]) & (1 << zero_position)) == 0)\n+\t    {\n+\t      /* Found the 0-bit position.  */\n+\t      operands[2] = GEN_INT (zero_position);\n+\t      break;\n+\t    }\n+\t}\n+      return \"bclr\\t%0, %1, %2\";\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"alu,alu,alu,alu,alu,alu,alu,alu,alu,alu,alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  4,  2,  2,  2,  2,  2,  2,  4,  4,  4,  4,  4\")])\n+\n+(define_insn \"*and_slli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                      \"=   r\")\n+\t(and:SI (ashift:SI (match_operand:SI 1 \"register_operand\"   \"    r\")\n+\t\t\t    (match_operand:SI 2 \"immediate_operand\" \" Iu05\"))\n+\t\t(match_operand:SI 3 \"register_operand\"              \"    r\")))]\n+  \"TARGET_ISA_V3\"\n+  \"and_slli\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*and_srli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                       \"=   r\")\n+\t(and:SI (lshiftrt:SI (match_operand:SI 1 \"register_operand\"  \"    r\")\n+\t\t\t     (match_operand:SI 2 \"immediate_operand\" \" Iu05\"))\n+\t\t(match_operand:SI 3 \"register_operand\"               \"    r\")))]\n+  \"TARGET_ISA_V3\"\n+  \"and_srli\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+;; 'OR' operation\n+;; ----------------------------------------------------------------------------\n+\n+;; For V3/V3M ISA, we have 'or33' instruction.\n+;; So we can identify 'or Rt3,Rt3,Ra3' case and set its length to be 2.\n+(define_insn \"iorsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"= w, r,    r,    r\")\n+\t(ior:SI (match_operand:SI 1 \"register_operand\" \" %0, r,    r,    r\")\n+\t\t(match_operand:SI 2 \"general_operand\"  \"  w, r, Iu15, Ie15\")))]\n+  \"\"\n+{\n+  int one_position;\n+\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"or33\\t%0, %2\";\n+    case 1:\n+      return \"or\\t%0, %1, %2\";\n+    case 2:\n+      return \"ori\\t%0, %1, %2\";\n+    case 3:\n+      /* If we reach this alternative,\n+         it must pass the nds32_can_use_bset_p() test,\n+         so that we can guarantee there is only one 1-bit\n+         within the immediate value.  */\n+      /* Use exact_log2() to search the 1-bit position.  */\n+      one_position = exact_log2 (INTVAL (operands[2]));\n+      operands[2] = GEN_INT (one_position);\n+      return \"bset\\t%0, %1, %2\";\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"alu,alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  4,  4,  4\")])\n+\n+(define_insn \"*or_slli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                     \"=   r\")\n+\t(ior:SI (ashift:SI (match_operand:SI 1 \"register_operand\"  \"    r\")\n+\t\t\t   (match_operand:SI 2 \"immediate_operand\" \" Iu05\"))\n+\t\t(match_operand:SI 3 \"register_operand\"             \"    r\")))]\n+  \"TARGET_ISA_V3\"\n+  \"or_slli\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*or_srli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                       \"=   r\")\n+\t(ior:SI (lshiftrt:SI (match_operand:SI 1 \"register_operand\"  \"    r\")\n+\t\t\t     (match_operand:SI 2 \"immediate_operand\" \" Iu05\"))\n+\t\t(match_operand:SI 3 \"register_operand\"               \"    r\")))]\n+  \"TARGET_ISA_V3\"\n+  \"or_srli\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+;; 'XOR' operation\n+;; ----------------------------------------------------------------------------\n+\n+;; For V3/V3M ISA, we have 'xor33' instruction.\n+;; So we can identify 'xor Rt3,Rt3,Ra3' case and set its length to be 2.\n+(define_insn \"xorsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"= w, r,    r,    r\")\n+\t(xor:SI (match_operand:SI 1 \"register_operand\" \" %0, r,    r,    r\")\n+\t\t(match_operand:SI 2 \"general_operand\"  \"  w, r, Iu15, It15\")))]\n+  \"\"\n+{\n+  int one_position;\n+\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"xor33\\t%0, %2\";\n+    case 1:\n+      return \"xor\\t%0, %1, %2\";\n+    case 2:\n+      return \"xori\\t%0, %1, %2\";\n+    case 3:\n+      /* If we reach this alternative,\n+         it must pass the nds32_can_use_btgl_p() test,\n+         so that we can guarantee there is only one 1-bit\n+         within the immediate value.  */\n+      /* Use exact_log2() to search the 1-bit position.  */\n+      one_position = exact_log2 (INTVAL (operands[2]));\n+      operands[2] = GEN_INT (one_position);\n+      return \"btgl\\t%0, %1, %2\";\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"alu,alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  4,  4,  4\")])\n+\n+(define_insn \"*xor_slli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                     \"=   r\")\n+\t(xor:SI (ashift:SI (match_operand:SI 1 \"register_operand\"  \"    r\")\n+\t\t\t   (match_operand:SI 2 \"immediate_operand\" \" Iu05\"))\n+\t\t(match_operand:SI 3 \"register_operand\"             \"    r\")))]\n+  \"TARGET_ISA_V3\"\n+  \"xor_slli\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*xor_srli\"\n+  [(set (match_operand:SI 0 \"register_operand\"                       \"=   r\")\n+\t(xor:SI (lshiftrt:SI (match_operand:SI 1 \"register_operand\"  \"    r\")\n+\t\t\t     (match_operand:SI 2 \"immediate_operand\" \" Iu05\"))\n+\t\t(match_operand:SI 3 \"register_operand\"               \"    r\")))]\n+  \"TARGET_ISA_V3\"\n+  \"xor_srli\\t%0, %3, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+;; Rotate Right Instructions.\n+\n+(define_insn \"rotrsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"                 \"=   r, r\")\n+\t  (rotatert:SI (match_operand:SI 1 \"register_operand\"  \"    r, r\")\n+\t\t       (match_operand:SI 2 \"nonmemory_operand\" \" Iu05, r\")))]\n+  \"\"\n+  \"@\n+  rotri\\t%0, %1, %2\n+  rotr\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu,alu\")\n+   (set_attr \"length\" \"  4,  4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+;; 'NEG' operation\n+;; ----------------------------------------------------------------------------\n+\n+;; For V3/V3M ISA, we have 'neg33' instruction.\n+;; So we can identify 'xor Rt3,Ra3' case and set its length to be 2.\n+;; And for V2 ISA, there is NO 'neg33' instruction.\n+;; The only option is to use 'subri A,B,0' (its semantic is 'A = 0 - B').\n+(define_insn \"negsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"=w, r\")\n+\t(neg:SI (match_operand:SI 1 \"register_operand\" \" w, r\")))]\n+  \"\"\n+  \"@\n+   neg33\\t%0, %1\n+   subri\\t%0, %1, 0\"\n+  [(set_attr \"type\"   \"alu,alu\")\n+   (set_attr \"length\" \"  2,  4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+;; 'ONE_COMPLIMENT' operation\n+;; ----------------------------------------------------------------------------\n+\n+;; For V3/V3M ISA, we have 'not33' instruction.\n+;; So we can identify 'not Rt3,Ra3' case and set its length to be 2.\n+(define_insn \"one_cmplsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"=w, r\")\n+\t(not:SI (match_operand:SI 1 \"register_operand\" \" w, r\")))]\n+  \"\"\n+  \"@\n+   not33\\t%0, %1\n+   nor\\t%0, %1, %1\"\n+  [(set_attr \"type\"   \"alu,alu\")\n+   (set_attr \"length\" \"  2,  4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+\n+;; Shift instructions.\n+\n+(define_insn \"ashlsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"             \"=   l,    r, r\")\n+\t(ashift:SI (match_operand:SI 1 \"register_operand\"  \"    l,    r, r\")\n+\t\t   (match_operand:SI 2 \"nonmemory_operand\" \" Iu03, Iu05, r\")))]\n+  \"\"\n+  \"@\n+  slli333\\t%0, %1, %2\n+  slli\\t%0, %1, %2\n+  sll\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  4,  4\")])\n+\n+(define_insn \"ashrsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"               \"=   d,    r, r\")\n+\t(ashiftrt:SI (match_operand:SI 1 \"register_operand\"  \"    0,    r, r\")\n+\t\t     (match_operand:SI 2 \"nonmemory_operand\" \" Iu05, Iu05, r\")))]\n+  \"\"\n+  \"@\n+  srai45\\t%0, %2\n+  srai\\t%0, %1, %2\n+  sra\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  4,  4\")])\n+\n+(define_insn \"lshrsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"               \"=   d,    r, r\")\n+\t(lshiftrt:SI (match_operand:SI 1 \"register_operand\"  \"    0,    r, r\")\n+\t\t     (match_operand:SI 2 \"nonmemory_operand\" \" Iu05, Iu05, r\")))]\n+  \"\"\n+  \"@\n+  srli45\\t%0, %2\n+  srli\\t%0, %1, %2\n+  srl\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"alu,alu,alu\")\n+   (set_attr \"length\" \"  2,  4,  4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+\n+;; ----------------------------------------------------------------------------\n+;; Conditional Move patterns\n+;; ----------------------------------------------------------------------------\n+\n+(define_expand \"movsicc\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(if_then_else:SI (match_operand 1 \"comparison_operator\" \"\")\n+\t\t\t (match_operand:SI 2 \"register_operand\" \"\")\n+\t\t\t (match_operand:SI 3 \"register_operand\" \"\")))]\n+  \"TARGET_CMOV\"\n+{\n+  if ((GET_CODE (operands[1]) == EQ || GET_CODE (operands[1]) == NE)\n+      && GET_MODE (XEXP (operands[1], 0)) == SImode\n+      && XEXP (operands[1], 1) == const0_rtx)\n+    {\n+      /* If the operands[1] rtx is already (eq X 0) or (ne X 0),\n+         we have gcc generate original template rtx.  */\n+      goto create_template;\n+    }\n+  else\n+    {\n+      /* Since there is only 'slt'(Set when Less Than) instruction for\n+         comparison in Andes ISA, the major strategy we use here is to\n+         convert conditional move into 'LT + EQ' or 'LT + NE' rtx combination.\n+         We design constraints properly so that the reload phase will assist\n+         to make one source operand to use same register as result operand.\n+         Then we can use cmovz/cmovn to catch the other source operand\n+         which has different register.  */\n+      enum rtx_code code = GET_CODE (operands[1]);\n+      enum rtx_code new_code = code;\n+      rtx cmp_op0 = XEXP (operands[1], 0);\n+      rtx cmp_op1 = XEXP (operands[1], 1);\n+      rtx tmp;\n+      int reverse = 0;\n+\n+      /* Main Goal: Use 'LT + EQ' or 'LT + NE' to target \"then\" part\n+         Strategy : Reverse condition and swap comparison operands\n+\n+         For example:\n+\n+             a <= b ? P : Q   (LE or LEU)\n+         --> a >  b ? Q : P   (reverse condition)\n+         --> b <  a ? Q : P   (swap comparison operands to achieve 'LT/LTU')\n+\n+             a >= b ? P : Q   (GE or GEU)\n+         --> a <  b ? Q : P   (reverse condition to achieve 'LT/LTU')\n+\n+             a <  b ? P : Q   (LT or LTU)\n+         --> (NO NEED TO CHANGE, it is already 'LT/LTU')\n+\n+             a >  b ? P : Q   (GT or GTU)\n+         --> b <  a ? P : Q   (swap comparison operands to achieve 'LT/LTU') */\n+      switch (code)\n+\t{\n+\tcase NE:\n+\t  /*   (a != b ? P : Q)\n+\t     can be expressed as\n+\t       (a == b ? Q : P)\n+\t     so, fall through to reverse condition */\n+\tcase GE: case GEU: case LE: case LEU:\n+\t  new_code = reverse_condition (code);\n+\t  reverse = 1;\n+\t  break;\n+\tcase EQ: case GT: case GTU: case LT: case LTU:\n+\t  /* no need to reverse condition */\n+\t  break;\n+\tdefault:\n+\t  FAIL;\n+\t}\n+\n+      /* For '>' comparison operator, we swap operands\n+         so that we can have 'LT/LTU' operator.  */\n+      if (new_code == GT || new_code == GTU)\n+\t{\n+\t  tmp     = cmp_op0;\n+\t  cmp_op0 = cmp_op1;\n+\t  cmp_op1 = tmp;\n+\n+\t  new_code = swap_condition (new_code);\n+\t}\n+\n+      /* Use a temporary register to store slt/slts result.  */\n+      tmp = gen_reg_rtx (SImode);\n+\n+      /* Split EQ and NE because we don't have direct comparison of EQ and NE.\n+         If we don't split it, the conditional move transformation will fail\n+         when producing (SET A (EQ B C)) or (SET A (NE B C)).  */\n+      if (new_code == EQ)\n+\t{\n+\t  emit_insn (gen_xorsi3 (tmp, cmp_op0, cmp_op1));\n+\t  emit_insn (gen_slt_compare (tmp, tmp, GEN_INT (1)));\n+\t}\n+      else if (new_code == NE)\n+\t{\n+\t  emit_insn (gen_xorsi3 (tmp, cmp_op0, cmp_op1));\n+\t  emit_insn (gen_slt_compare (tmp, GEN_INT (0), tmp));\n+        }\n+      else\n+\t/* This emit_insn will create corresponding 'slt/slts' insturction.  */\n+\temit_insn (gen_rtx_SET (VOIDmode, tmp,\n+\t\t\t\tgen_rtx_fmt_ee (new_code, SImode,\n+\t\t\t\t\t\tcmp_op0, cmp_op1)));\n+\n+      /* Change comparison semantic into (eq X 0) or (ne X 0) behavior\n+         so that cmovz or cmovn will be matched later.\n+\n+         For reverse condition cases, we want to create a semantic that:\n+           (eq X 0) --> pick up \"else\" part\n+         For normal cases, we want to create a semantic that:\n+           (ne X 0) --> pick up \"then\" part\n+\n+         Later we will have cmovz/cmovn instruction pattern to\n+         match corresponding behavior and output instruction.  */\n+      operands[1] = gen_rtx_fmt_ee (reverse ? EQ : NE,\n+\t\t\t\t    VOIDmode, tmp, const0_rtx);\n+    }\n+\n+create_template:\n+  do {} while(0); /* dummy line */\n+})\n+\n+(define_insn \"cmovz\"\n+  [(set (match_operand:SI 0 \"register_operand\"                      \"=r, r\")\n+        (if_then_else:SI (eq (match_operand:SI 1 \"register_operand\" \" r, r\")\n+\t\t\t     (const_int 0))\n+\t\t\t (match_operand:SI 2 \"register_operand\"     \" r, 0\")\n+\t\t\t (match_operand:SI 3 \"register_operand\"     \" 0, r\")))]\n+  \"TARGET_CMOV\"\n+  \"@\n+   cmovz\\t%0, %2, %1\n+   cmovn\\t%0, %3, %1\"\n+  [(set_attr \"type\" \"move\")\n+   (set_attr \"length\"  \"4\")])\n+\n+(define_insn \"cmovn\"\n+  [(set (match_operand:SI 0 \"register_operand\"                      \"=r, r\")\n+\t(if_then_else:SI (ne (match_operand:SI 1 \"register_operand\" \" r, r\")\n+\t\t\t     (const_int 0))\n+\t\t\t (match_operand:SI 2 \"register_operand\"     \" r, 0\")\n+\t\t\t (match_operand:SI 3 \"register_operand\"     \" 0, r\")))]\n+  \"TARGET_CMOV\"\n+  \"@\n+   cmovn\\t%0, %2, %1\n+   cmovz\\t%0, %3, %1\"\n+  [(set_attr \"type\" \"move\")\n+   (set_attr \"length\"  \"4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+;; Conditional Branch patterns\n+;; ----------------------------------------------------------------------------\n+\n+(define_expand \"cbranchsi4\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 0 \"comparison_operator\"\n+\t\t\t[(match_operand:SI 1 \"register_operand\"           \"\")\n+\t\t\t (match_operand:SI 2 \"nds32_reg_constant_operand\" \"\")])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"\"\n+{\n+  rtx tmp_reg;\n+  enum rtx_code code;\n+\n+  code = GET_CODE (operands[0]);\n+\n+  /* If operands[2] is (const_int 0),\n+     we can use beqz,bnez,bgtz,bgez,bltz,or blez instructions.\n+     So we have gcc generate original template rtx.  */\n+  if (GET_CODE (operands[2]) == CONST_INT)\n+    if (INTVAL (operands[2]) == 0)\n+      if ((code != GTU)\n+\t  && (code != GEU)\n+\t  && (code != LTU)\n+\t  && (code != LEU))\n+\tgoto create_template;\n+\n+  /* For other comparison, NDS32 ISA only has slt (Set-on-Less-Than)\n+     behavior for the comparison, we might need to generate other\n+     rtx patterns to achieve same semantic.  */\n+  switch (code)\n+    {\n+    case GT:\n+    case GTU:\n+      if (GET_CODE (operands[2]) == CONST_INT)\n+\t{\n+\t  /* GT  reg_A, const_int  =>  !(LT  reg_A, const_int + 1) */\n+\t  tmp_reg = gen_rtx_REG (SImode, TA_REGNUM);\n+\n+\t  /* We want to plus 1 into the integer value\n+\t     of operands[2] to create 'slt' instruction.\n+\t     This caculation is performed on the host machine,\n+\t     which may be 64-bit integer.\n+\t     So the meaning of caculation result may be\n+\t     different from the 32-bit nds32 target.\n+\n+\t     For example:\n+\t       0x7fffffff + 0x1 -> 0x80000000,\n+\t       this value is POSITIVE on 64-bit machine,\n+\t       but the expected value on 32-bit nds32 target\n+\t       should be NEGATIVE value.\n+\n+\t     Hence, instead of using GEN_INT(), we use gen_int_mode() to\n+\t     explicitly create SImode constant rtx.  */\n+\t  operands[2] = gen_int_mode (INTVAL (operands[2]) + 1, SImode);\n+\n+\t  if (code == GT)\n+\t    {\n+\t      /* GT, use slts instruction */\n+\t      emit_insn (gen_slts_compare (tmp_reg, operands[1], operands[2]));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* GTU, use slt instruction */\n+\t      emit_insn (gen_slt_compare  (tmp_reg, operands[1], operands[2]));\n+\t    }\n+\n+\t  PUT_CODE (operands[0], EQ);\n+\t  operands[1] = tmp_reg;\n+\t  operands[2] = const0_rtx;\n+\t  emit_insn (gen_cbranchsi4 (operands[0], operands[1],\n+\t\t\t\t     operands[2], operands[3]));\n+\n+\t  DONE;\n+\t}\n+      else\n+\t{\n+\t  /* GT  reg_A, reg_B  =>  LT  reg_B, reg_A */\n+\t  tmp_reg = gen_rtx_REG (SImode, TA_REGNUM);\n+\n+\t  if (code == GT)\n+\t    {\n+\t      /* GT, use slts instruction */\n+\t      emit_insn (gen_slts_compare (tmp_reg, operands[2], operands[1]));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* GTU, use slt instruction */\n+\t      emit_insn (gen_slt_compare  (tmp_reg, operands[2], operands[1]));\n+\t    }\n+\n+\t  PUT_CODE (operands[0], NE);\n+\t  operands[1] = tmp_reg;\n+\t  operands[2] = const0_rtx;\n+\t  emit_insn (gen_cbranchsi4 (operands[0], operands[1],\n+\t\t\t\t     operands[2], operands[3]));\n+\n+\t  DONE;\n+\t}\n+\n+    case GE:\n+    case GEU:\n+      /* GE  reg_A, reg_B      =>  !(LT  reg_A, reg_B) */\n+      /* GE  reg_A, const_int  =>  !(LT  reg_A, const_int) */\n+      tmp_reg = gen_rtx_REG (SImode, TA_REGNUM);\n+\n+      if (code == GE)\n+\t{\n+\t  /* GE, use slts instruction */\n+\t  emit_insn (gen_slts_compare (tmp_reg, operands[1], operands[2]));\n+\t}\n+      else\n+\t{\n+\t  /* GEU, use slt instruction */\n+\t  emit_insn (gen_slt_compare  (tmp_reg, operands[1], operands[2]));\n+\t}\n+\n+      PUT_CODE (operands[0], EQ);\n+      operands[1] = tmp_reg;\n+      operands[2] = const0_rtx;\n+      emit_insn (gen_cbranchsi4 (operands[0], operands[1],\n+\t\t\t\t operands[2], operands[3]));\n+\n+      DONE;\n+\n+    case LT:\n+    case LTU:\n+      /* LT  reg_A, reg_B      =>  LT  reg_A, reg_B */\n+      /* LT  reg_A, const_int  =>  LT  reg_A, const_int */\n+      tmp_reg = gen_rtx_REG (SImode, TA_REGNUM);\n+\n+      if (code == LT)\n+\t{\n+\t  /* LT, use slts instruction */\n+\t  emit_insn (gen_slts_compare (tmp_reg, operands[1], operands[2]));\n+\t}\n+      else\n+\t{\n+\t  /* LTU, use slt instruction */\n+\t  emit_insn (gen_slt_compare  (tmp_reg, operands[1], operands[2]));\n+\t}\n+\n+      PUT_CODE (operands[0], NE);\n+      operands[1] = tmp_reg;\n+      operands[2] = const0_rtx;\n+      emit_insn (gen_cbranchsi4 (operands[0], operands[1],\n+\t\t\t\t operands[2], operands[3]));\n+\n+      DONE;\n+\n+    case LE:\n+    case LEU:\n+      if (GET_CODE (operands[2]) == CONST_INT)\n+\t{\n+\t  /* LE  reg_A, const_int  =>  LT  reg_A, const_int + 1 */\n+\t  tmp_reg = gen_rtx_REG (SImode, TA_REGNUM);\n+\n+\t  /* Note that (le:SI X INT_MAX) is not the same as (lt:SI X INT_MIN).\n+\t     We better have an assert here in case GCC does not properly\n+\t     optimize it away.  The INT_MAX here is 0x7fffffff for target.  */\n+\t  gcc_assert (code != LE || INTVAL (operands[2]) != 0x7fffffff);\n+\t  operands[2] = gen_int_mode (INTVAL (operands[2]) + 1, SImode);\n+\n+\t  if (code == LE)\n+\t    {\n+\t      /* LE, use slts instruction */\n+\t      emit_insn (gen_slts_compare (tmp_reg, operands[1], operands[2]));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* LEU, use slt instruction */\n+\t      emit_insn (gen_slt_compare  (tmp_reg, operands[1], operands[2]));\n+\t    }\n+\n+\t  PUT_CODE (operands[0], NE);\n+\t  operands[1] = tmp_reg;\n+\t  operands[2] = const0_rtx;\n+\t  emit_insn (gen_cbranchsi4 (operands[0], operands[1],\n+\t\t\t\t     operands[2], operands[3]));\n+\n+\t  DONE;\n+\t}\n+      else\n+\t{\n+\t  /* LE  reg_A, reg_B  =>  !(LT  reg_B, reg_A) */\n+\t  tmp_reg = gen_rtx_REG (SImode, TA_REGNUM);\n+\n+\t  if (code == LE)\n+\t    {\n+\t      /* LE, use slts instruction */\n+\t      emit_insn (gen_slts_compare (tmp_reg, operands[2], operands[1]));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* LEU, use slt instruction */\n+\t      emit_insn (gen_slt_compare  (tmp_reg, operands[2], operands[1]));\n+\t    }\n+\n+\t  PUT_CODE (operands[0], EQ);\n+\t  operands[1] = tmp_reg;\n+\t  operands[2] = const0_rtx;\n+\t  emit_insn (gen_cbranchsi4 (operands[0], operands[1],\n+\t\t\t\t     operands[2], operands[3]));\n+\n+\t  DONE;\n+\t}\n+\n+    case EQ:\n+    case NE:\n+      /* NDS32 ISA has various form for eq/ne behavior no matter\n+         what kind of the operand is.\n+         So just generate original template rtx.  */\n+      goto create_template;\n+\n+    default:\n+      FAIL;\n+    }\n+\n+create_template:\n+  do {} while(0); /* dummy line */\n+})\n+\n+\n+(define_insn \"*cbranchsi4_equality_zero\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 0 \"nds32_equality_comparison_operator\"\n+\t\t\t[(match_operand:SI 1 \"register_operand\"  \"t, l, r\")\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"\"\n+{\n+  enum rtx_code code;\n+\n+  code = GET_CODE (operands[0]);\n+\n+  /* This zero-comparison conditional branch has two forms:\n+       32-bit instruction =>          beqz/bnez           imm16s << 1\n+       16-bit instruction => beqzs8/bnezs8/beqz38/bnez38  imm8s << 1\n+\n+     For 32-bit case,\n+     we assume it is always reachable. (but check range -65500 ~ 65500)\n+\n+     For 16-bit case,\n+     it must satisfy { 255 >= (label - pc) >= -256 } condition.\n+     However, since the $pc for nds32 is at the beginning of the instruction,\n+     we should leave some length space for current insn.\n+     So we use range -250 ~ 250.  */\n+\n+  switch (get_attr_length (insn))\n+    {\n+    case 2:\n+      if (which_alternative == 0)\n+\t{\n+\t  /* constraint: t */\n+\t  return (code == EQ) ? \"beqzs8\\t%2\" : \"bnezs8\\t%2\";\n+\t}\n+      else if (which_alternative == 1)\n+\t{\n+\t  /* constraint: l */\n+\t  return (code == EQ) ? \"beqz38\\t%1, %2\" : \"bnez38\\t%1, %2\";\n+\t}\n+      else\n+\t{\n+\t  /* constraint: r */\n+\t  /* For which_alternative==2, it should not be here.  */\n+\t  gcc_unreachable ();\n+\t}\n+    case 4:\n+      /* including constraints: t, l, and r */\n+      return (code == EQ) ? \"beqz\\t%1, %2\" : \"bnez\\t%1, %2\";\n+    case 6:\n+      if (which_alternative == 0)\n+\t{\n+\t  /* constraint: t */\n+\t  if (code == EQ)\n+\t    {\n+\t      /*    beqzs8  .L0\n+\t          =>\n+\t            bnezs8  .LCB0\n+\t            j  .L0\n+\t          .LCB0:\n+\t       */\n+\t      return \"bnezs8\\t.LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\t    }\n+\t  else\n+\t    {\n+\t      /*    bnezs8  .L0\n+\t          =>\n+\t            beqzs8  .LCB0\n+\t            j  .L0\n+\t          .LCB0:\n+\t       */\n+\t      return \"beqzs8\\t.LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\t    }\n+\t}\n+      else if (which_alternative == 1)\n+\t{\n+\t  /* constraint: l */\n+\t  if (code == EQ)\n+\t    {\n+\t      /*    beqz38  $r0, .L0\n+\t          =>\n+\t            bnez38  $r0, .LCB0\n+\t            j  .L0\n+\t          .LCB0:\n+\t       */\n+\t      return \"bnez38\\t%1, .LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\t    }\n+\t  else\n+\t    {\n+\t      /*    bnez38  $r0, .L0\n+\t          =>\n+\t            beqz38  $r0, .LCB0\n+\t            j  .L0\n+\t          .LCB0:\n+\t       */\n+\t      return \"beqz38\\t%1, .LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  /* constraint: r */\n+\t  /* For which_alternative==2, it should not be here.  */\n+\t  gcc_unreachable ();\n+\t}\n+    case 8:\n+      /* constraint: t, l, r.  */\n+      if (code == EQ)\n+\t{\n+\t  /*    beqz  $r8, .L0\n+\t      =>\n+\t        bnez  $r8, .LCB0\n+\t        j  .L0\n+\t      .LCB0:\n+\t   */\n+\t  return \"bnez\\t%1, .LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\t}\n+      else\n+\t{\n+\t  /*    bnez  $r8, .L0\n+\t      =>\n+\t        beqz  $r8, .LCB0\n+\t        j  .L0\n+\t      .LCB0:\n+\t   */\n+\t  return \"beqz\\t%1, .LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\t}\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"enabled\" \"1\")\n+   (set_attr_alternative \"length\"\n+     [\n+       ;; Alternative 0\n+       (if_then_else (and (ge (minus (match_dup 2) (pc)) (const_int -250))\n+\t\t\t  (le (minus (match_dup 2) (pc)) (const_int  250)))\n+\t\t     (if_then_else (match_test \"TARGET_16_BIT\")\n+\t\t\t\t   (const_int 2)\n+\t\t\t\t   (const_int 4))\n+\t\t     (if_then_else (and (ge (minus (match_dup 2) (pc)) (const_int -65500))\n+\t\t\t\t\t(le (minus (match_dup 2) (pc)) (const_int  65500)))\n+\t\t\t\t   (const_int 4)\n+\t\t\t\t   (if_then_else (match_test \"TARGET_16_BIT\")\n+\t\t\t\t\t\t (const_int 6)\n+\t\t\t\t\t\t (const_int 8))))\n+       ;; Alternative 1\n+       (if_then_else (and (ge (minus (match_dup 2) (pc)) (const_int -250))\n+\t\t\t  (le (minus (match_dup 2) (pc)) (const_int  250)))\n+\t\t     (if_then_else (match_test \"TARGET_16_BIT\")\n+\t\t\t\t   (const_int 2)\n+\t\t\t\t   (const_int 4))\n+\t\t     (if_then_else (and (ge (minus (match_dup 2) (pc)) (const_int -65500))\n+\t\t\t\t\t(le (minus (match_dup 2) (pc)) (const_int  65500)))\n+\t\t\t\t   (const_int 4)\n+\t\t\t\t   (if_then_else (match_test \"TARGET_16_BIT\")\n+\t\t\t\t\t\t (const_int 6)\n+\t\t\t\t\t\t (const_int 8))))\n+       ;; Alternative 2\n+       (if_then_else (and (ge (minus (match_dup 2) (pc)) (const_int -65500))\n+\t\t\t  (le (minus (match_dup 2) (pc)) (const_int  65500)))\n+\t\t     (const_int 4)\n+\t\t     (const_int 8))\n+     ])])\n+\n+\n+;; This pattern is dedicated to V2 ISA,\n+;; because V2 DOES NOT HAVE beqc/bnec instruction.\n+(define_insn \"*cbranchsi4_equality_reg\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 0 \"nds32_equality_comparison_operator\"\n+\t\t\t[(match_operand:SI 1 \"register_operand\"           \"r\")\n+\t\t\t (match_operand:SI 2 \"nds32_reg_constant_operand\" \"r\")])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"TARGET_ISA_V2\"\n+{\n+  enum rtx_code code;\n+\n+  code = GET_CODE (operands[0]);\n+\n+  /* This register-comparison conditional branch has one form:\n+       32-bit instruction =>          beq/bne           imm14s << 1\n+\n+     For 32-bit case,\n+     we assume it is always reachable. (but check range -16350 ~ 16350).  */\n+\n+  switch (code)\n+    {\n+    case EQ:\n+      /* r, r */\n+      switch (get_attr_length (insn))\n+\t{\n+\tcase 4:\n+\t  return \"beq\\t%1, %2, %3\";\n+\tcase 8:\n+\t  /*    beq  $r0, $r1, .L0\n+\t      =>\n+\t        bne  $r0, $r1, .LCB0\n+\t        j  .L0\n+\t      .LCB0:\n+\t   */\n+\t  return \"bne\\t%1, %2, .LCB%=\\;j\\t%3\\n.LCB%=:\";\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n+\n+    case NE:\n+      /* r, r */\n+      switch (get_attr_length (insn))\n+\t{\n+\tcase 4:\n+\t  return \"bne\\t%1, %2, %3\";\n+\tcase 8:\n+\t  /*    bne  $r0, $r1, .L0\n+\t      =>\n+\t        beq  $r0, $r1, .LCB0\n+\t        j  .L0\n+\t      .LCB0:\n+\t   */\n+\t  return \"beq\\t%1, %2, .LCB%=\\;j\\t%3\\n.LCB%=:\";\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"branch\")\n+   (set (attr \"length\")\n+\t(if_then_else (and (ge (minus (match_dup 3) (pc)) (const_int -16350))\n+\t\t\t   (le (minus (match_dup 3) (pc)) (const_int  16350)))\n+\t\t      (const_int 4)\n+\t\t      (const_int 8)))])\n+\n+\n+;; This pattern is dedicated to V3/V3M,\n+;; because V3/V3M DO HAVE beqc/bnec instruction.\n+(define_insn \"*cbranchsi4_equality_reg_or_const_int\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 0 \"nds32_equality_comparison_operator\"\n+\t\t\t[(match_operand:SI 1 \"register_operand\"           \"r,    r\")\n+\t\t\t (match_operand:SI 2 \"nds32_reg_constant_operand\" \"r, Is11\")])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"TARGET_ISA_V3 || TARGET_ISA_V3M\"\n+{\n+  enum rtx_code code;\n+\n+  code = GET_CODE (operands[0]);\n+\n+  /* This register-comparison conditional branch has one form:\n+       32-bit instruction =>          beq/bne           imm14s << 1\n+       32-bit instruction =>         beqc/bnec          imm8s << 1\n+\n+     For 32-bit case, we assume it is always reachable.\n+     (but check range -16350 ~ 16350 and -250 ~ 250).  */\n+\n+  switch (code)\n+    {\n+    case EQ:\n+      if (which_alternative == 0)\n+\t{\n+\t  /* r, r */\n+\t  switch (get_attr_length (insn))\n+\t    {\n+\t    case 4:\n+\t      return \"beq\\t%1, %2, %3\";\n+\t    case 8:\n+\t      /*    beq  $r0, $r1, .L0\n+\t          =>\n+\t            bne  $r0, $r1, .LCB0\n+\t            j  .L0\n+\t          .LCB0:\n+\t       */\n+\t      return \"bne\\t%1, %2, .LCB%=\\;j\\t%3\\n.LCB%=:\";\n+\t    default:\n+\t      gcc_unreachable ();\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  /* r, Is11 */\n+\t  switch (get_attr_length (insn))\n+\t    {\n+\t    case 4:\n+\t      return \"beqc\\t%1, %2, %3\";\n+\t    case 8:\n+\t      /*    beqc  $r0, constant, .L0\n+\t          =>\n+\t            bnec  $r0, constant, .LCB0\n+\t            j  .L0\n+\t          .LCB0:\n+\t       */\n+\t      return \"bnec\\t%1, %2, .LCB%=\\;j\\t%3\\n.LCB%=:\";\n+\t    default:\n+\t      gcc_unreachable ();\n+\t    }\n+\t}\n+    case NE:\n+      if (which_alternative == 0)\n+\t{\n+\t  /* r, r */\n+\t  switch (get_attr_length (insn))\n+\t    {\n+\t    case 4:\n+\t      return \"bne\\t%1, %2, %3\";\n+\t    case 8:\n+\t      /*    bne  $r0, $r1, .L0\n+\t          =>\n+\t            beq  $r0, $r1, .LCB0\n+\t            j  .L0\n+\t          .LCB0:\n+\t       */\n+\t      return \"beq\\t%1, %2, .LCB%=\\;j\\t%3\\n.LCB%=:\";\n+\t    default:\n+\t      gcc_unreachable ();\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  /* r, Is11 */\n+\t  switch (get_attr_length (insn))\n+\t    {\n+\t    case 4:\n+\t      return \"bnec\\t%1, %2, %3\";\n+\t    case 8:\n+\t      /*    bnec  $r0, constant, .L0\n+\t          =>\n+\t            beqc  $r0, constant, .LCB0\n+\t            j  .L0\n+\t          .LCB0:\n+\t       */\n+\t      return \"beqc\\t%1, %2, .LCB%=\\;j\\t%3\\n.LCB%=:\";\n+\t    default:\n+\t      gcc_unreachable ();\n+\t    }\n+\t}\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"branch\")\n+   (set_attr_alternative \"length\"\n+     [\n+       ;; Alternative 0\n+       (if_then_else (and (ge (minus (match_dup 3) (pc)) (const_int -16350))\n+\t\t\t  (le (minus (match_dup 3) (pc)) (const_int  16350)))\n+\t\t     (const_int 4)\n+\t\t     (const_int 8))\n+       ;; Alternative 1\n+       (if_then_else (and (ge (minus (match_dup 3) (pc)) (const_int -250))\n+\t\t\t  (le (minus (match_dup 3) (pc)) (const_int  250)))\n+\t\t     (const_int 4)\n+\t\t     (const_int 8))\n+     ])])\n+\n+\n+(define_insn \"*cbranchsi4_greater_less_zero\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 0 \"nds32_greater_less_comparison_operator\"\n+\t\t\t[(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"\"\n+{\n+  enum rtx_code code;\n+\n+  code = GET_CODE (operands[0]);\n+\n+  /* This zero-greater-less-comparison conditional branch has one form:\n+       32-bit instruction =>      bgtz/bgez/bltz/blez     imm16s << 1\n+\n+     For 32-bit case, we assume it is always reachable.\n+     (but check range -65500 ~ 65500).  */\n+\n+  if (get_attr_length (insn) == 8)\n+    {\n+      /* The branch target is too far to simply use one\n+         bgtz/bgez/bltz/blez instruction.\n+         We need to reverse condition and use 'j' to jump to the target.  */\n+      switch (code)\n+\t{\n+\tcase GT:\n+\t  /*   bgtz  $r8, .L0\n+\t     =>\n+\t       blez  $r8, .LCB0\n+\t       j  .L0\n+\t     .LCB0:\n+\t   */\n+\t  return \"blez\\t%1, .LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\tcase GE:\n+\t  /*   bgez  $r8, .L0\n+\t     =>\n+\t       bltz  $r8, .LCB0\n+\t       j  .L0\n+\t     .LCB0:\n+\t   */\n+\t  return \"bltz\\t%1, .LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\tcase LT:\n+\t  /*   bltz  $r8, .L0\n+\t     =>\n+\t       bgez  $r8, .LCB0\n+\t       j  .L0\n+\t     .LCB0:\n+\t   */\n+\t  return \"bgez\\t%1, .LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\tcase LE:\n+\t  /*   blez  $r8, .L0\n+\t     =>\n+\t       bgtz  $r8, .LCB0\n+\t       j  .L0\n+\t     .LCB0:\n+\t   */\n+\t  return \"bgtz\\t%1, .LCB%=\\;j\\t%2\\n.LCB%=:\";\n+\tdefault:\n+\t  gcc_unreachable ();\n+\t}\n+    }\n+\n+  switch (code)\n+    {\n+    case GT:\n+      return \"bgtz\\t%1, %2\";\n+    case GE:\n+      return \"bgez\\t%1, %2\";\n+    case LT:\n+      return \"bltz\\t%1, %2\";\n+    case LE:\n+      return \"blez\\t%1, %2\";\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"   \"branch\")\n+   (set (attr \"length\")\n+        (if_then_else (and (ge (minus (match_dup 2) (pc)) (const_int -65500))\n+\t\t\t   (le (minus (match_dup 2) (pc)) (const_int  65500)))\n+\t\t      (const_int 4)\n+\t\t      (const_int 8)))])\n+\n+\n+(define_expand \"cstoresi4\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(match_operator:SI 1 \"comparison_operator\"\n+\t  [(match_operand:SI 2 \"register_operand\" \"\")\n+\t   (match_operand:SI 3 \"nonmemory_operand\" \"\")]))]\n+  \"\"\n+{\n+  rtx tmp_reg;\n+  enum rtx_code code;\n+\n+  code = GET_CODE (operands[1]);\n+\n+  switch (code)\n+    {\n+    case EQ:\n+      if (GET_CODE (operands[3]) == CONST_INT)\n+\t{\n+\t  /* reg_R = (reg_A == const_int_B)\n+\t     --> addi reg_C, reg_A, -const_int_B\n+\t         slti reg_R, reg_C, const_int_1 */\n+\t  tmp_reg = gen_reg_rtx (SImode);\n+\t  operands[3] = gen_int_mode (-INTVAL (operands[3]), SImode);\n+\t  /* If the integer value is not in the range of imm15s,\n+\t     we need to force register first because our addsi3 pattern\n+\t     only accept nds32_rimm15s_operand predicate.  */\n+\t  if (!satisfies_constraint_Is15 (operands[3]))\n+\t    operands[3] = force_reg (SImode, operands[3]);\n+\t  emit_insn (gen_addsi3 (tmp_reg, operands[2], operands[3]));\n+\t  emit_insn (gen_slt_compare (operands[0], tmp_reg, const1_rtx));\n+\n+\t  DONE;\n+\t}\n+      else\n+\t{\n+\t  /* reg_R = (reg_A == reg_B)\n+\t     --> xor  reg_C, reg_A, reg_B\n+\t         slti reg_R, reg_C, const_int_1 */\n+\t  tmp_reg = gen_reg_rtx (SImode);\n+\t  emit_insn (gen_xorsi3 (tmp_reg, operands[2], operands[3]));\n+\t  emit_insn (gen_slt_compare (operands[0], tmp_reg, const1_rtx));\n+\n+\t  DONE;\n+\t}\n+\n+    case NE:\n+      if (GET_CODE (operands[3]) == CONST_INT)\n+\t{\n+\t  /* reg_R = (reg_A != const_int_B)\n+\t     --> addi reg_C, reg_A, -const_int_B\n+\t         slti reg_R, const_int_0, reg_C */\n+\t  tmp_reg = gen_reg_rtx (SImode);\n+\t  operands[3] = gen_int_mode (-INTVAL (operands[3]), SImode);\n+\t  /* If the integer value is not in the range of imm15s,\n+\t     we need to force register first because our addsi3 pattern\n+\t     only accept nds32_rimm15s_operand predicate.  */\n+\t  if (!satisfies_constraint_Is15 (operands[3]))\n+\t    operands[3] = force_reg (SImode, operands[3]);\n+\t  emit_insn (gen_addsi3 (tmp_reg, operands[2], operands[3]));\n+\t  emit_insn (gen_slt_compare (operands[0], const0_rtx, tmp_reg));\n+\n+\t  DONE;\n+\t}\n+      else\n+\t{\n+\t  /* reg_R = (reg_A != reg_B)\n+\t     --> xor  reg_C, reg_A, reg_B\n+\t         slti reg_R, const_int_0, reg_C */\n+\t  tmp_reg = gen_reg_rtx (SImode);\n+\t  emit_insn (gen_xorsi3 (tmp_reg, operands[2], operands[3]));\n+\t  emit_insn (gen_slt_compare (operands[0], const0_rtx, tmp_reg));\n+\n+\t  DONE;\n+\t}\n+\n+    case GT:\n+    case GTU:\n+      /* reg_R = (reg_A > reg_B)       --> slt reg_R, reg_B, reg_A */\n+      /* reg_R = (reg_A > const_int_B) --> slt reg_R, const_int_B, reg_A */\n+      if (code == GT)\n+\t{\n+\t  /* GT, use slts instruction */\n+\t  emit_insn (gen_slts_compare (operands[0], operands[3], operands[2]));\n+\t}\n+      else\n+\t{\n+\t  /* GTU, use slt instruction */\n+\t  emit_insn (gen_slt_compare  (operands[0], operands[3], operands[2]));\n+\t}\n+\n+      DONE;\n+\n+    case GE:\n+    case GEU:\n+      if (GET_CODE (operands[3]) == CONST_INT)\n+\t{\n+\t  /* reg_R = (reg_A >= const_int_B)\n+\t     --> movi reg_C, const_int_B - 1\n+\t         slt  reg_R, reg_C, reg_A */\n+\t  tmp_reg = gen_reg_rtx (SImode);\n+\n+\t  emit_insn (gen_movsi (tmp_reg,\n+\t\t\t\tgen_int_mode (INTVAL (operands[3]) - 1,\n+\t\t\t\t\t      SImode)));\n+\t  if (code == GE)\n+\t    {\n+\t      /* GE, use slts instruction */\n+\t      emit_insn (gen_slts_compare (operands[0], tmp_reg, operands[2]));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* GEU, use slt instruction */\n+\t      emit_insn (gen_slt_compare  (operands[0], tmp_reg, operands[2]));\n+\t    }\n+\n+\t  DONE;\n+\t}\n+      else\n+\t{\n+\t  /* reg_R = (reg_A >= reg_B)\n+\t     --> slt  reg_R, reg_A, reg_B\n+\t         xori reg_R, reg_R, const_int_1 */\n+\t  if (code == GE)\n+\t    {\n+\t      /* GE, use slts instruction */\n+\t      emit_insn (gen_slts_compare (operands[0],\n+\t\t\t\t\t   operands[2], operands[3]));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* GEU, use slt instruction */\n+\t      emit_insn (gen_slt_compare  (operands[0],\n+\t\t\t\t\t   operands[2], operands[3]));\n+\t    }\n+\n+\t  /* perform 'not' behavior */\n+\t  emit_insn (gen_xorsi3 (operands[0], operands[0], const1_rtx));\n+\n+\t  DONE;\n+\t}\n+\n+    case LT:\n+    case LTU:\n+      /* reg_R = (reg_A < reg_B)       --> slt reg_R, reg_A, reg_B */\n+      /* reg_R = (reg_A < const_int_B) --> slt reg_R, reg_A, const_int_B */\n+      if (code == LT)\n+\t{\n+\t  /* LT, use slts instruction */\n+\t  emit_insn (gen_slts_compare (operands[0], operands[2], operands[3]));\n+\t}\n+      else\n+\t{\n+\t  /* LTU, use slt instruction */\n+\t  emit_insn (gen_slt_compare  (operands[0], operands[2], operands[3]));\n+\t}\n+\n+      DONE;\n+\n+    case LE:\n+    case LEU:\n+      if (GET_CODE (operands[3]) == CONST_INT)\n+\t{\n+\t  /* reg_R = (reg_A <= const_int_B)\n+\t     --> movi reg_C, const_int_B + 1\n+\t         slt  reg_R, reg_A, reg_C */\n+\t  tmp_reg = gen_reg_rtx (SImode);\n+\n+\t  emit_insn (gen_movsi (tmp_reg,\n+\t\t\t\tgen_int_mode (INTVAL (operands[3]) + 1,\n+\t\t\t\t\t\t      SImode)));\n+\t  if (code == LE)\n+\t    {\n+\t      /* LE, use slts instruction */\n+\t      emit_insn (gen_slts_compare (operands[0], operands[2], tmp_reg));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* LEU, use slt instruction */\n+\t      emit_insn (gen_slt_compare  (operands[0], operands[2], tmp_reg));\n+\t    }\n+\n+\t  DONE;\n+\t}\n+      else\n+\t{\n+\t  /* reg_R = (reg_A <= reg_B) --> slt  reg_R, reg_B, reg_A\n+\t                                  xori reg_R, reg_R, const_int_1 */\n+\t  if (code == LE)\n+\t    {\n+\t      /* LE, use slts instruction */\n+\t      emit_insn (gen_slts_compare (operands[0],\n+\t\t\t\t\t   operands[3], operands[2]));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* LEU, use slt instruction */\n+\t      emit_insn (gen_slt_compare  (operands[0],\n+\t\t\t\t\t   operands[3], operands[2]));\n+\t    }\n+\n+\t  /* perform 'not' behavior */\n+\t  emit_insn (gen_xorsi3 (operands[0], operands[0], const1_rtx));\n+\n+\t  DONE;\n+\t}\n+\n+\n+    default:\n+      gcc_unreachable ();\n+    }\n+})\n+\n+\n+(define_insn \"slts_compare\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"=t,    t, r,    r\")\n+\t(lt:SI (match_operand:SI 1 \"nonmemory_operand\" \" d,    d, r,    r\")\n+\t       (match_operand:SI 2 \"nonmemory_operand\" \" r, Iu05, r, Is15\")))]\n+  \"\"\n+  \"@\n+   slts45\\t%1, %2\n+   sltsi45\\t%1, %2\n+   slts\\t%0, %1, %2\n+   sltsi\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"compare,compare,compare,compare\")\n+   (set_attr \"length\" \"      2,      2,      4,      4\")])\n+\n+(define_insn \"slt_compare\"\n+  [(set (match_operand:SI 0 \"register_operand\"          \"=t,    t, r,    r\")\n+\t(ltu:SI (match_operand:SI 1 \"nonmemory_operand\" \" d,    d, r,    r\")\n+\t\t(match_operand:SI 2 \"nonmemory_operand\" \" r, Iu05, r, Is15\")))]\n+  \"\"\n+  \"@\n+   slt45\\t%1, %2\n+   slti45\\t%1, %2\n+   slt\\t%0, %1, %2\n+   slti\\t%0, %1, %2\"\n+  [(set_attr \"type\"   \"compare,compare,compare,compare\")\n+   (set_attr \"length\" \"      2,      2,      4,      4\")])\n+\n+\n+;; ----------------------------------------------------------------------------\n+\n+;; Unconditional and other jump instructions.\n+\n+(define_insn \"jump\"\n+  [(set (pc) (label_ref (match_operand 0 \"\" \"\")))]\n+  \"\"\n+{\n+  /* This unconditional jump has two forms:\n+       32-bit instruction => j   imm24s << 1\n+       16-bit instruction => j8  imm8s << 1\n+\n+     For 32-bit case,\n+     we assume it is always reachable.\n+     For 16-bit case,\n+     it must satisfy { 255 >= (label - pc) >= -256 } condition.\n+     However, since the $pc for nds32 is at the beginning of the instruction,\n+     we should leave some length space for current insn.\n+     So we use range -250 ~ 250.  */\n+  switch (get_attr_length (insn))\n+    {\n+    case 2:\n+      return \"j8\\t%0\";\n+    case 4:\n+      return \"j\\t%0\";\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\" \"branch\")\n+   (set_attr \"enabled\" \"1\")\n+   (set (attr \"length\")\n+\t(if_then_else (and (ge (minus (match_dup 0) (pc)) (const_int -250))\n+\t\t\t   (le (minus (match_dup 0) (pc)) (const_int  250)))\n+\t\t      (if_then_else (match_test \"TARGET_16_BIT\")\n+\t\t\t\t    (const_int 2)\n+\t\t\t\t    (const_int 4))\n+\t\t      (const_int 4)))])\n+\n+(define_insn \"indirect_jump\"\n+  [(set (pc) (match_operand:SI 0 \"register_operand\" \"r, r\"))]\n+  \"\"\n+  \"@\n+  jr5\\t%0\n+  jr\\t%0\"\n+  [(set_attr \"type\"   \"branch,branch\")\n+   (set_attr \"length\" \"     2,     4\")])\n+\n+;; Subroutine call instruction returning no value.\n+;;   operands[0]: It should be a mem RTX whose address is\n+;;                the the address of the function.\n+;;   operands[1]: It is the number of bytes of arguments pushed as a const_int.\n+;;   operands[2]: It is the number of registers used as operands.\n+\n+(define_expand \"call\"\n+  [(parallel [(call (match_operand 0 \"memory_operand\" \"\")\n+\t\t    (match_operand 1))\n+\t      (clobber (reg:SI LP_REGNUM))])]\n+  \"\"\n+  \"\"\n+)\n+\n+(define_insn \"*call_register\"\n+  [(parallel [(call (mem (match_operand:SI 0 \"register_operand\" \"r, r\"))\n+\t\t    (match_operand 1))\n+\t      (clobber (reg:SI LP_REGNUM))])]\n+  \"\"\n+  \"@\n+  jral5\\t%0\n+  jral\\t%0\"\n+  [(set_attr \"type\"   \"branch,branch\")\n+   (set_attr \"length\" \"     2,     4\")])\n+\n+(define_insn \"*call_immediate\"\n+  [(parallel [(call (mem (match_operand:SI 0 \"immediate_operand\" \"i\"))\n+\t\t    (match_operand 1))\n+\t      (clobber (reg:SI LP_REGNUM))])]\n+  \"\"\n+  \"jal\\t%0\"\n+  [(set_attr \"type\"   \"branch\")\n+   (set_attr \"length\"      \"4\")])\n+\n+\n+;; Subroutine call instruction returning a value.\n+;;   operands[0]: It is the hard regiser in which the value is returned.\n+;;   The rest three operands are the same as the\n+;;   three operands of the 'call' instruction.\n+;;   (but with numbers increased by one)\n+\n+(define_expand \"call_value\"\n+  [(parallel [(set (match_operand 0)\n+\t\t   (call (match_operand 1 \"memory_operand\" \"\")\n+\t\t         (match_operand 2)))\n+\t      (clobber (reg:SI LP_REGNUM))])]\n+  \"\"\n+  \"\"\n+)\n+\n+(define_insn \"*call_value_register\"\n+  [(parallel [(set (match_operand 0)\n+\t\t   (call (mem (match_operand:SI 1 \"register_operand\" \"r, r\"))\n+\t\t         (match_operand 2)))\n+\t      (clobber (reg:SI LP_REGNUM))])]\n+  \"\"\n+  \"@\n+  jral5\\t%1\n+  jral\\t%1\"\n+  [(set_attr \"type\"   \"branch,branch\")\n+   (set_attr \"length\" \"     2,     4\")])\n+\n+(define_insn \"*call_value_immediate\"\n+  [(parallel [(set (match_operand 0)\n+\t\t   (call (mem (match_operand:SI 1 \"immediate_operand\" \"i\"))\n+\t\t\t (match_operand 2)))\n+\t      (clobber (reg:SI LP_REGNUM))])]\n+  \"\"\n+  \"jal\\t%1\"\n+  [(set_attr \"type\"   \"branch\")\n+   (set_attr \"length\"      \"4\")])\n+\n+\n+;; prologue and epilogue.\n+\n+(define_expand \"prologue\" [(const_int 0)]\n+  \"\"\n+{\n+  /* Note that only under V3/V3M ISA, we could use v3push prologue.  */\n+  if (TARGET_V3PUSH)\n+    nds32_expand_prologue_v3push ();\n+  else\n+    nds32_expand_prologue ();\n+  DONE;\n+})\n+\n+(define_expand \"epilogue\" [(const_int 0)]\n+  \"\"\n+{\n+  /* Note that only under V3/V3M ISA, we could use v3pop epilogue.  */\n+  if (TARGET_V3PUSH)\n+    nds32_expand_epilogue_v3pop ();\n+  else\n+    nds32_expand_epilogue ();\n+  DONE;\n+})\n+\n+\n+;; nop instruction.\n+\n+(define_insn \"nop\"\n+  [(const_int 0)]\n+  \"\"\n+{\n+  if (TARGET_16_BIT)\n+    return \"nop16\";\n+  else\n+    return \"nop\";\n+}\n+  [(set_attr \"type\" \"misc\")\n+   (set_attr \"enabled\" \"1\")\n+   (set (attr \"length\")\n+\t(if_then_else (match_test \"TARGET_16_BIT\")\n+\t\t      (const_int 2)\n+\t\t      (const_int 4)))])\n+\n+\n+;; ----------------------------------------------------------------------------\n+;; Stack push/pop operations\n+;; ----------------------------------------------------------------------------\n+\n+;; The pattern for stack push.\n+;; Both stack_push_multiple and stack_v3push use the following pattern.\n+;; So we need to use TARGET_V3PUSH to determine the instruction length.\n+(define_insn \"*stack_push\"\n+  [(match_parallel 0 \"nds32_stack_push_operation\"\n+     [(set (mem:SI (plus:SI (reg:SI SP_REGNUM)\n+\t\t\t    (match_operand:SI 1 \"const_int_operand\" \"\")))\n+\t   (match_operand:SI 2 \"register_operand\" \"\"))\n+     ])]\n+  \"\"\n+{\n+  return nds32_output_stack_push ();\n+}\n+  [(set_attr \"type\" \"misc\")\n+   (set_attr \"enabled\" \"1\")\n+   (set (attr \"length\")\n+\t(if_then_else (match_test \"TARGET_V3PUSH\")\n+\t\t      (const_int 2)\n+\t\t      (const_int 4)))])\n+\n+\n+;; The pattern for stack pop.\n+;; Both stack_pop_multiple and stack_v3pop use the following pattern.\n+;; So we need to use TARGET_V3PUSH to determine the instruction length.\n+(define_insn \"*stack_pop\"\n+  [(match_parallel 0 \"nds32_stack_pop_operation\"\n+     [(set (match_operand:SI 1 \"register_operand\" \"\")\n+\t   (mem:SI (reg:SI SP_REGNUM)))\n+     ])]\n+  \"\"\n+{\n+  return nds32_output_stack_pop ();\n+}\n+  [(set_attr \"type\" \"misc\")\n+   (set_attr \"enabled\" \"1\")\n+   (set (attr \"length\")\n+\t(if_then_else (match_test \"TARGET_V3PUSH\")\n+\t\t      (const_int 2)\n+\t\t      (const_int 4)))])\n+\n+\n+;; ----------------------------------------------------------------------------\n+;; unspec operation patterns\n+;; ----------------------------------------------------------------------------\n+\n+;; In nds32 target, the 'ret5' instuction is actually 'jr5 $lp'.\n+;; This pattern is designed to distinguish function return\n+;; from general indirect_jump pattern so that we can directly\n+;; generate 'ret5' for readability.\n+\n+(define_insn \"unspec_volatile_func_return\"\n+  [(set (pc)\n+\t(unspec_volatile:SI [(reg:SI LP_REGNUM)] UNSPEC_VOLATILE_FUNC_RETURN))]\n+  \"\"\n+{\n+  if (TARGET_16_BIT)\n+    return \"ret5\";\n+  else\n+    return \"ret\";\n+}\n+  [(set_attr \"type\" \"misc\")\n+   (set_attr \"enabled\" \"1\")\n+   (set (attr \"length\")\n+\t(if_then_else (match_test \"TARGET_16_BIT\")\n+\t\t      (const_int 2)\n+\t\t      (const_int 4)))])\n+\n+\n+;; ----------------------------------------------------------------------------\n+;; Jump Table patterns\n+;; ----------------------------------------------------------------------------\n+;; Need to implement ASM_OUTPUT_ADDR_VEC_ELT (for normal jump table)\n+;; or ASM_OUTPUT_ADDR_DIFF_ELT (for pc relative jump table) as well.\n+;;\n+;; operands[0]: The index to dispatch on.\n+;; operands[1]: The lower bound for indices in the table.\n+;; operands[2]: The total range of indices int the table.\n+;;              i.e. The largest index minus the smallest one.\n+;; operands[3]: A label that precedes the table itself.\n+;; operands[4]: A label to jump to if the index has a value outside the bounds.\n+;;\n+;; We need to create following sequences for jump table code generation:\n+;;   A) k <-- (plus (operands[0]) (-operands[1]))\n+;;   B) if (gtu k operands[2]) then goto operands[4]\n+;;   C) t <-- operands[3]\n+;;   D) z <-- (mem (plus (k << 0 or 1 or 2) t))\n+;;   E) z <-- t + z (NOTE: This is only required for pc relative jump table.)\n+;;   F) jump to target with register t or z\n+;;\n+;; The steps C, D, E, and F are performed by casesi_internal pattern.\n+(define_expand \"casesi\"\n+  [(match_operand:SI 0 \"register_operand\"  \"r\") ; index to jump on\n+   (match_operand:SI 1 \"immediate_operand\" \"i\") ; lower bound\n+   (match_operand:SI 2 \"immediate_operand\" \"i\") ; total range\n+   (match_operand:SI 3 \"\" \"\")                   ; table label\n+   (match_operand:SI 4 \"\" \"\")]                  ; Out of range label\n+  \"\"\n+{\n+  rtx add_tmp;\n+  rtx reg, test;\n+\n+  /* Step A: \"k <-- (plus (operands[0]) (-operands[1]))\".  */\n+  if (operands[1] != const0_rtx)\n+    {\n+      reg = gen_reg_rtx (SImode);\n+      add_tmp = gen_int_mode (-INTVAL (operands[1]), SImode);\n+\n+      /* If the integer value is not in the range of imm15s,\n+         we need to force register first because our addsi3 pattern\n+         only accept nds32_rimm15s_operand predicate.  */\n+      add_tmp = force_reg (SImode, add_tmp);\n+\n+      emit_insn (gen_addsi3 (reg, operands[0], add_tmp));\n+      operands[0] = reg;\n+    }\n+\n+  /* Step B: \"if (gtu k operands[2]) then goto operands[4]\".  */\n+  test = gen_rtx_GTU (VOIDmode, operands[0], operands[2]);\n+  emit_jump_insn (gen_cbranchsi4 (test, operands[0], operands[2],\n+\t\t\t\t  operands[4]));\n+\n+  operands[5] = gen_reg_rtx (SImode);\n+  /* Step C, D, E, and F, using another temporary register operands[5].  */\n+  emit_jump_insn (gen_casesi_internal (operands[0],\n+\t\t\t\t       operands[3],\n+\t\t\t\t       operands[5]));\n+  DONE;\n+})\n+\n+;; We are receiving operands from casesi pattern:\n+;;\n+;; operands[0]: The index that have been substracted with lower bound.\n+;; operands[1]: A label that precedes the table itself.\n+;; operands[2]: A temporary register to retrieve value in table.\n+;;\n+;; We need to perform steps C, D, E, and F:\n+;;\n+;;   C) t <-- operands[1]\n+;;   D) z <-- (mem (plus (operands[0] << m) t))\n+;;            m is 2 for normal jump table.\n+;;            m is 0, 1, or 2 for pc relative jump table based on diff size.\n+;;   E) t <-- z + t (NOTE: This is only required for pc relative jump table.)\n+;;   F) Jump to target with register t or z.\n+;;\n+;; The USE in this pattern is needed to tell flow analysis that this is\n+;; a CASESI insn.  It has no other purpose.\n+(define_insn \"casesi_internal\"\n+  [(parallel [(set (pc)\n+\t\t   (mem:SI (plus:SI (mult:SI (match_operand:SI 0 \"register_operand\" \"r\")\n+\t\t\t\t\t     (const_int 4))\n+\t\t\t\t    (label_ref (match_operand 1 \"\" \"\")))))\n+\t      (use (label_ref (match_dup 1)))\n+\t      (clobber (match_operand:SI 2 \"register_operand\" \"\"))\n+\t      (clobber (reg:SI TA_REGNUM))])]\n+  \"\"\n+{\n+  if (CASE_VECTOR_PC_RELATIVE)\n+    return nds32_output_casesi_pc_relative (operands);\n+  else\n+    return nds32_output_casesi (operands);\n+}\n+  [(set_attr \"length\" \"20\")\n+   (set_attr \"type\" \"alu\")])\n+\n+;; ----------------------------------------------------------------------------\n+\n+;; Performance Extension\n+\n+(define_insn \"clzsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"=r\")\n+\t(clz:SI (match_operand:SI 1 \"register_operand\" \" r\")))]\n+  \"TARGET_PERF_EXT\"\n+  \"clz\\t%0, %1\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"smaxsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"          \"=r\")\n+\t(smax:SI (match_operand:SI 1 \"register_operand\" \" r\")\n+\t\t (match_operand:SI 2 \"register_operand\" \" r\")))]\n+  \"TARGET_PERF_EXT\"\n+  \"max\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"sminsi3\"\n+  [(set (match_operand:SI 0 \"register_operand\"          \"=r\")\n+\t(smin:SI (match_operand:SI 1 \"register_operand\" \" r\")\n+\t\t (match_operand:SI 2 \"register_operand\" \" r\")))]\n+  \"TARGET_PERF_EXT\"\n+  \"min\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*btst\"\n+  [(set (match_operand:SI 0 \"register_operand\"                   \"=   r\")\n+\t(zero_extract:SI (match_operand:SI 1 \"register_operand\"  \"    r\")\n+\t\t\t (const_int 1)\n+\t\t\t (match_operand:SI 2 \"immediate_operand\" \" Iu05\")))]\n+  \"TARGET_PERF_EXT\"\n+  \"btst\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n+;; ----------------------------------------------------------------------------"}, {"sha": "b2b45bb3e02c9f1b6a70487f911ab5c165b76338", "filename": "gcc/config/nds32/nds32.opt", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.opt?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,102 @@\n+; Options of Andes NDS32 cpu for GNU compiler\n+; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+; Contributed by Andes Technology Corporation.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it\n+; under the terms of the GNU General Public License as published\n+; by the Free Software Foundation; either version 3, or (at your\n+; option) any later version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT\n+; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+; License for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+HeaderInclude\n+config/nds32/nds32-opts.h\n+\n+mbig-endian\n+Target Report RejectNegative Negative(mlittle-endian) Mask(BIG_ENDIAN)\n+Generate code in big-endian mode.\n+\n+mlittle-endian\n+Target Report RejectNegative Negative(mbig-endian) InverseMask(BIG_ENDIAN)\n+Generate code in little-endian mode.\n+\n+mreduced-regs\n+Target Report RejectNegative Negative(mfull-regs) Mask(REDUCED_REGS)\n+Use reduced-set registers for register allocation.\n+\n+mfull-regs\n+Target Report RejectNegative Negative(mreduced-regs) InverseMask(REDUCED_REGS)\n+Use full-set registers for register allocation.\n+\n+mcmov\n+Target Report Mask(CMOV)\n+Generate conditional move instructions.\n+\n+mperf-ext\n+Target Report Mask(PERF_EXT)\n+Generate performance extension instructions.\n+\n+mv3push\n+Target Report Mask(V3PUSH)\n+Generate v3 push25/pop25 instructions.\n+\n+m16-bit\n+Target Report Mask(16_BIT)\n+Generate 16-bit instructions.\n+\n+mgp-direct\n+Target Report Mask(GP_DIRECT)\n+Generate GP base instructions directly.\n+\n+misr-vector-size=\n+Target RejectNegative Joined UInteger Var(nds32_isr_vector_size) Init(NDS32_DEFAULT_ISR_VECTOR_SIZE)\n+Specify the size of each interrupt vector, which must be 4 or 16.\n+\n+mcache-block-size=\n+Target RejectNegative Joined UInteger Var(nds32_cache_block_size) Init(NDS32_DEFAULT_CACHE_BLOCK_SIZE)\n+Specify the size of each cache block, which must be a power of 2 between 4 and 512.\n+\n+march=\n+Target RejectNegative Joined Enum(nds32_arch_type) Var(nds32_arch_option) Init(ARCH_V3)\n+Specify the name of the target architecture.\n+\n+Enum\n+Name(nds32_arch_type) Type(enum nds32_arch_type)\n+\n+EnumValue\n+Enum(nds32_arch_type) String(v2) Value(ARCH_V2)\n+\n+EnumValue\n+Enum(nds32_arch_type) String(v3) Value(ARCH_V3)\n+\n+EnumValue\n+Enum(nds32_arch_type) String(v3m) Value(ARCH_V3M)\n+\n+mforce-fp-as-gp\n+Target Report Mask(FORCE_FP_AS_GP)\n+Prevent $fp being allocated during register allocation so that compiler is able to force performing fp-as-gp optimization.\n+\n+mforbid-fp-as-gp\n+Target Report Mask(FORBID_FP_AS_GP)\n+Forbid using $fp to access static and global variables.  This option strictly forbids fp-as-gp optimization regardless of '-mforce-fp-as-gp'.\n+\n+mex9\n+Target Report Mask(EX9)\n+Use special directives to guide linker doing ex9 optimization.\n+\n+mctor-dtor\n+Target Report\n+Enable constructor/destructor feature.\n+\n+mrelax\n+Target Report\n+Guide linker to relax instructions."}, {"sha": "33064a966ed46a5a4eee9a8e54405fdbe5b07fba", "filename": "gcc/config/nds32/nds32_intrinsic.h", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32_intrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fnds32_intrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32_intrinsic.h?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,37 @@\n+/* Intrinsic definitions of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef _NDS32_INTRINSIC_H\n+#define _NDS32_INTRINSIC_H\n+\n+enum nds32_intrinsic_registers\n+{\n+  __NDS32_REG_PSW__ = 1024,\n+  __NDS32_REG_IPSW__,\n+  __NDS32_REG_ITYPE__,\n+  __NDS32_REG_IPC__\n+};\n+\n+#endif /* nds32_intrinsic.h */"}, {"sha": "9c8c56bab834264e3e7238352c07f34db786bc2f", "filename": "gcc/config/nds32/pipelines.md", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fpipelines.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fpipelines.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fpipelines.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,29 @@\n+;; Pipeline descriptions of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_automaton \"nds32_machine\")\n+\n+(define_cpu_unit \"general_unit\" \"nds32_machine\")\n+\n+(define_insn_reservation \"simple_insn\" 1\n+\t\t\t (eq_attr \"type\" \"unknown,load,store,move,alu,compare,branch,call,misc\")\n+\t\t\t \"general_unit\")\n+\n+;; ------------------------------------------------------------------------"}, {"sha": "df4eccdb8913da82bc2f7d3b6e2b9c67e8cbddea", "filename": "gcc/config/nds32/predicates.md", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fpredicates.md?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,92 @@\n+;; Predicate definitions of Andes NDS32 cpu for GNU compiler\n+;; Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+;; Contributed by Andes Technology Corporation.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_predicate \"nds32_equality_comparison_operator\"\n+  (match_code \"eq,ne\"))\n+\n+(define_predicate \"nds32_greater_less_comparison_operator\"\n+  (match_code \"gt,ge,lt,le\"))\n+\n+(define_special_predicate \"nds32_logical_binary_operator\"\n+  (match_code \"and,ior,xor\"))\n+\n+(define_predicate \"nds32_symbolic_operand\"\n+  (match_code \"const,symbol_ref,label_ref\"))\n+\n+(define_predicate \"nds32_reg_constant_operand\"\n+  (ior (match_operand 0 \"register_operand\")\n+       (match_operand 0 \"const_int_operand\")))\n+\n+(define_predicate \"nds32_rimm15s_operand\"\n+  (ior (match_operand 0 \"register_operand\")\n+       (and (match_operand 0 \"const_int_operand\")\n+\t    (match_test \"satisfies_constraint_Is15 (op)\"))))\n+\n+(define_predicate \"nds32_imm5u_operand\"\n+  (and (match_operand 0 \"const_int_operand\")\n+       (match_test \"satisfies_constraint_Iu05 (op)\")))\n+\n+(define_predicate \"nds32_move_operand\"\n+  (and (match_operand 0 \"general_operand\")\n+       (not (match_code \"high,const,symbol_ref,label_ref\")))\n+{\n+  /* If the constant op does NOT satisfy Is20 nor Ihig,\n+     we can not perform move behavior by a single instruction.  */\n+  if (CONST_INT_P (op)\n+      && !satisfies_constraint_Is20 (op)\n+      && !satisfies_constraint_Ihig (op))\n+    return false;\n+\n+  return true;\n+})\n+\n+(define_special_predicate \"nds32_load_multiple_operation\"\n+  (match_code \"parallel\")\n+{\n+  /* To verify 'load' operation, pass 'true' for the second argument.\n+     See the implementation in nds32.c for details.  */\n+  return nds32_valid_multiple_load_store (op, true);\n+})\n+\n+(define_special_predicate \"nds32_store_multiple_operation\"\n+  (match_code \"parallel\")\n+{\n+  /* To verify 'store' operation, pass 'false' for the second argument.\n+     See the implementation in nds32.c for details.  */\n+  return nds32_valid_multiple_load_store (op, false);\n+})\n+\n+(define_special_predicate \"nds32_stack_push_operation\"\n+  (match_code \"parallel\")\n+{\n+  /* To verify 'push' operation, pass 'true' for the second argument.\n+     See the implementation in nds32.c for details.  */\n+  return nds32_valid_stack_push_pop (op, true);\n+})\n+\n+(define_special_predicate \"nds32_stack_pop_operation\"\n+  (match_code \"parallel\")\n+{\n+  /* To verify 'pop' operation, pass 'false' for the second argument.\n+     See the implementation in nds32.c for details.  */\n+  return nds32_valid_stack_push_pop (op, false);\n+})\n+\n+;; ------------------------------------------------------------------------"}, {"sha": "ec546e48c1b856faae4a84dc6f318a193e6ceb6b", "filename": "gcc/config/nds32/t-mlibs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Ft-mlibs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fconfig%2Fnds32%2Ft-mlibs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Ft-mlibs?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,38 @@\n+# The multilib settings of Andes NDS32 cpu for GNU compiler\n+# Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+# Contributed by Andes Technology Corporation.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published\n+# by the Free Software Foundation; either version 3, or (at your\n+# option) any later version.\n+#\n+# GCC is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+# License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# We need to build following multilibs combinations:\n+#\n+#   1. <None multilibs>\n+#   2. -mlittle-endian\n+#   3. -mbig-endian\n+#   4. -mgp-direct\n+#   5. -mno-gp-direct\n+#   6. -mlittle-endian -mgp-direct\n+#   7. -mlittle-endian -mno-gp-direct\n+#   8. -mbig-endian -mgp-direct\n+#   9. -mlittle-endian -mno-gp-direct\n+#\n+# We also define a macro MULTILIB_DEFAULTS in nds32.h that tells the\n+# driver program which options are defaults for this target and thus\n+# do not need to be handled specially.\n+MULTILIB_OPTIONS = mlittle-endian/mbig-endian mgp-direct/mno-gp-direct\n+\n+# ------------------------------------------------------------------------"}, {"sha": "799ede1ec955298e26f60ce4c63728a1fecd551b", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 90, "deletions": 3, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -2505,6 +2505,12 @@ on data in the eight-bit data area.  Note the eight-bit data area is limited to\n You must use GAS and GLD from GNU binutils version 2.7 or later for\n this attribute to work correctly.\n \n+@item exception\n+@cindex exception handler functions\n+Use this attribute on the NDS32 target to indicate that the specified function\n+is an exception handler.  The compiler will generate corresponding sections\n+for use in an exception handler.\n+\n @item exception_handler\n @cindex exception handler functions on the Blackfin processor\n Use this attribute on the Blackfin to indicate that the specified function\n@@ -2965,6 +2971,32 @@ void __attribute__ ((interrupt, use_shadow_register_set,\n                      use_debug_exception_return)) v7 ();\n @end smallexample\n \n+On NDS32 target, this attribute is to indicate that the specified function\n+is an interrupt handler.  The compiler will generate corresponding sections\n+for use in an interrupt handler.  You can use the following attributes\n+to modify the behavior:\n+@table @code\n+@item nested\n+@cindex @code{nested} attribute\n+This interrupt service routine is interruptible.\n+@item not_nested\n+@cindex @code{not_nested} attribute\n+This interrupt service routine is not interruptible.\n+@item nested_ready\n+@cindex @code{nested_ready} attribute\n+This interrupt service routine is interruptible after @code{PSW.GIE}\n+(global interrupt enable) is set.  This allows interrupt service routine to\n+finish some short critical code before enabling interrupts.\n+@item save_all\n+@cindex @code{save_all} attribute\n+The system will help save all registers into stack before entering\n+interrupt handler.\n+@item partial_save\n+@cindex @code{partial_save} attribute\n+The system will help save caller registers into stack before entering\n+interrupt handler.\n+@end table\n+\n On RL78, use @code{brk_interrupt} instead of @code{interrupt} for\n handlers intended to be used with the @code{BRK} opcode (i.e.@: those\n that must end with @code{RETB} instead of @code{RETI}).\n@@ -3201,9 +3233,10 @@ and newer.\n \n @item naked\n @cindex function without a prologue/epilogue code\n-Use this attribute on the ARM, AVR, MCORE, MSP430, RL78, RX and SPU ports to indicate that\n-the specified function does not need prologue/epilogue sequences generated by\n-the compiler.  It is up to the programmer to provide these sequences. The\n+Use this attribute on the ARM, AVR, MCORE, MSP430, NDS32, RL78, RX and SPU\n+ports to indicate that the specified function does not need prologue/epilogue\n+sequences generated by the compiler.\n+It is up to the programmer to provide these sequences. The\n only statements that can be safely included in naked functions are\n @code{asm} statements that do not have operands.  All other statements,\n including declarations of local variables, @code{if} statements, and so\n@@ -3575,6 +3608,21 @@ safe since the loaders there save EAX, EDX and ECX.  (Lazy binding can be\n disabled with the linker or the loader if desired, to avoid the\n problem.)\n \n+@item reset\n+@cindex reset handler functions\n+Use this attribute on the NDS32 target to indicate that the specified function\n+is a reset handler.  The compiler will generate corresponding sections\n+for use in a reset handler.  You can use the following attributes\n+to provide extra exception handling:\n+@table @code\n+@item nmi\n+@cindex @code{nmi} attribute\n+Provide a user-defined function to handle NMI exception.\n+@item warm\n+@cindex @code{warm} attribute\n+Provide a user-defined function to handle warm reset exception.\n+@end table\n+\n @item sseregparm\n @cindex @code{sseregparm} attribute\n On the Intel 386 with SSE support, the @code{sseregparm} attribute\n@@ -9131,6 +9179,7 @@ instructions, but allow the compiler to schedule those calls.\n * MIPS Loongson Built-in Functions::\n * Other MIPS Built-in Functions::\n * MSP430 Built-in Functions::\n+* NDS32 Built-in Functions::\n * picoChip Built-in Functions::\n * PowerPC Built-in Functions::\n * PowerPC AltiVec/VSX Built-in Functions::\n@@ -12584,6 +12633,44 @@ handlers and the changes to the status register will only take affect\n once the handler returns.\n @end table\n \n+@node NDS32 Built-in Functions\n+@subsection NDS32 Built-in Functions\n+\n+These built-in functions are available for the NDS32 target:\n+\n+@deftypefn {Built-in Function} void __builtin_nds32_isync (int *@var{addr})\n+Insert an ISYNC instruction into the instruction stream where\n+@var{addr} is an instruction address for serialization.\n+@end deftypefn\n+\n+@deftypefn {Built-in Function} void __builtin_nds32_isb (void)\n+Insert an ISB instruction into the instruction stream.\n+@end deftypefn\n+\n+@deftypefn {Built-in Function} int __builtin_nds32_mfsr (int @var{sr})\n+Return the content of a system register which is mapped by @var{sr}.\n+@end deftypefn\n+\n+@deftypefn {Built-in Function} int __builtin_nds32_mfusr (int @var{usr})\n+Return the content of a user space register which is mapped by @var{usr}.\n+@end deftypefn\n+\n+@deftypefn {Built-in Function} void __builtin_nds32_mtsr (int @var{value}, int @var{sr})\n+Move the @var{value} to a system register which is mapped by @var{sr}.\n+@end deftypefn\n+\n+@deftypefn {Built-in Function} void __builtin_nds32_mtusr (int @var{value}, int @var{usr})\n+Move the @var{value} to a user space register which is mapped by @var{usr}.\n+@end deftypefn\n+\n+@deftypefn {Built-in Function} void __builtin_nds32_setgie_en (void)\n+Enable global interrupt.\n+@end deftypefn\n+\n+@deftypefn {Built-in Function} void __builtin_nds32_setgie_dis (void)\n+Disable global interrupt.\n+@end deftypefn\n+\n @node picoChip Built-in Functions\n @subsection picoChip Built-in Functions\n "}, {"sha": "fa5d6e5a611f32f3b8be71e55ed3c6a1f93ee3c5", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -1862,6 +1862,11 @@ This option is only supported for the AVR target.  It is not supported for\n RTEMS configurations, which currently use newlib.  The option is\n supported since version 4.7.2 and is the default in 4.8.0 and newer.\n \n+@item --with-nds32-lib=@var{library}\n+Specifies that @var{library} setting is used for building @file{libgcc.a}.\n+Currently, the valid @var{library} is @samp{newlib} or @samp{mculib}.\n+This option is only supported for the NDS32 target.\n+\n @item --with-build-time-tools=@var{dir}\n Specifies where to find the set of target tools (assembler, linker, etc.)\n that will be used while building GCC itself.  This option can be useful"}, {"sha": "e84bca30ab2237cda18e5d61d368747faa6a38f6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -822,6 +822,20 @@ Objective-C and Objective-C++ Dialects}.\n @emph{MSP430 Options}\n @gccoptlist{-msim -masm-hex -mmcu= -mlarge -msmall -mrelax}\n \n+@emph{NDS32 Options}\n+@gccoptlist{-mbig-endian -mlittle-endian @gol\n+-mreduced-regs -mfull-regs @gol\n+-mcmov -mno-cmov @gol\n+-mperf-ext -mno-perf-ext @gol\n+-mv3push -mno-v3push @gol\n+-m16bit -mno-16bit @gol\n+-mgp-direct -mno-gp-direct @gol\n+-misr-vector-size=@var{num} @gol\n+-mcache-block-size=@var{num} @gol\n+-march=@var{arch} @gol\n+-mforce-fp-as-gp -mforbid-fp-as-gp @gol\n+-mex9 -mctor-dtor -mrelax}\n+\n @emph{PDP-11 Options}\n @gccoptlist{-mfpu  -msoft-float  -mac0  -mno-ac0  -m40  -m45  -m10 @gol\n -mbcopy  -mbcopy-builtin  -mint32  -mno-int16 @gol\n@@ -10991,6 +11005,7 @@ platform.\n * MN10300 Options::\n * Moxie Options::\n * MSP430 Options::\n+* NDS32 Options::\n * PDP-11 Options::\n * picoChip Options::\n * PowerPC Options::\n@@ -17792,6 +17807,108 @@ the final link.\n \n @end table\n \n+@node NDS32 Options\n+@subsection NDS32 Options\n+@cindex NDS32 Options\n+\n+These options are defined for NDS32 implementations:\n+\n+@table @gcctabopt\n+\n+@item -mbig-endian\n+@opindex mbig-endian\n+Generate code in big-endian mode.\n+\n+@item -mlittle-endian\n+@opindex mlittle-endian\n+Generate code in little-endian mode.\n+\n+@item -mreduced-regs\n+@opindex mreduced-regs\n+Use reduced-set registers for register allocation.\n+\n+@item -mfull-regs\n+@opindex mfull-regs\n+Use full-set registers for register allocation.\n+\n+@item -mcmov\n+@opindex mcmov\n+Generate conditional move instructions.\n+\n+@item -mno-cmov\n+@opindex mno-cmov\n+Do not generate conditional move instructions.\n+\n+@item -mperf-ext\n+@opindex mperf-ext\n+Generate performance extension instructions.\n+\n+@item -mno-perf-ext\n+@opindex mno-perf-ext\n+Do not generate performance extension instructions.\n+\n+@item -mv3push\n+@opindex mv3push\n+Generate v3 push25/pop25 instructions.\n+\n+@item -mno-v3push\n+@opindex mno-v3push\n+Do not generate v3 push25/pop25 instructions.\n+\n+@item -m16-bit\n+@opindex m16-bit\n+Generate 16-bit instructions.\n+\n+@item -mno-16-bit\n+@opindex mno-16-bit\n+Do not generate 16-bit instructions.\n+\n+@item -mgp-direct\n+@opindex mgp-direct\n+Generate GP base instructions directly.\n+\n+@item -mno-gp-direct\n+@opindex mno-gp-direct\n+Do no generate GP base instructions directly.\n+\n+@item -misr-vector-size=@var{num}\n+@opindex misr-vector-size\n+Specify the size of each interrupt vector, which must be 4 or 16.\n+\n+@item -mcache-block-size=@var{num}\n+@opindex mcache-block-size\n+Specify the size of each cache block,\n+which must be a power of 2 between 4 and 512.\n+\n+@item -march=@var{arch}\n+@opindex march\n+Specify the name of the target architecture.\n+\n+@item -mforce-fp-as-gp\n+@opindex mforce-fp-as-gp\n+Prevent $fp being allocated during register allocation so that compiler\n+is able to force performing fp-as-gp optimization.\n+\n+@item -mforbid-fp-as-gp\n+@opindex mforbid-fp-as-gp\n+Forbid using $fp to access static and global variables.\n+This option strictly forbids fp-as-gp optimization\n+regardless of @option{-mforce-fp-as-gp}.\n+\n+@item -mex9\n+@opindex mex9\n+Use special directives to guide linker doing ex9 optimization.\n+\n+@item -mctor-dtor\n+@opindex mctor-dtor\n+Enable constructor/destructor feature.\n+\n+@item -mrelax\n+@opindex mrelax\n+Guide linker to relax instructions.\n+\n+@end table\n+\n @node PDP-11 Options\n @subsection PDP-11 Options\n @cindex PDP-11 Options"}, {"sha": "ac10a0ad03c6ca51eb73124c456090644b804996", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -3152,6 +3152,87 @@ Memory reference, stack only.\n \n @end table\n \n+@item NDS32---@file{config/nds32/constraints.md}\n+@table @code\n+@item w\n+LOW register class $r0 to $r7 constraint for V3/V3M ISA.\n+@item l\n+LOW register class $r0 to $r7.\n+@item d\n+MIDDLE register class $r0 to $r11, $r16 to $r19.\n+@item h\n+HIGH register class $r12 to $r14, $r20 to $r31.\n+@item t\n+Temporary assist register $ta (i.e.@: $r15).\n+@item k\n+Stack register $sp.\n+@item Iu03\n+Unsigned immediate 3-bit value.\n+@item In03\n+Negative immediate 3-bit value in the range of @minus{}7--0.\n+@item Iu04\n+Unsigned immediate 4-bit value.\n+@item Is05\n+Signed immediate 5-bit value.\n+@item Iu05\n+Unsigned immediate 5-bit value.\n+@item In05\n+Negative immediate 5-bit value in the range of @minus{}31--0.\n+@item Ip05\n+Unsigned immediate 5-bit value for movpi45 instruction with range 16--47.\n+@item Iu06\n+Unsigned immediate 6-bit value constraint for addri36.sp instruction.\n+@item Iu08\n+Unsigned immediate 8-bit value.\n+@item Iu09\n+Unsigned immediate 9-bit value.\n+@item Is10\n+Signed immediate 10-bit value.\n+@item Is11\n+Signed immediate 11-bit value.\n+@item Is15\n+Signed immediate 15-bit value.\n+@item Iu15\n+Unsigned immediate 15-bit value.\n+@item Ic15\n+A constant which is not in the range of imm15u but ok for bclr instruction.\n+@item Ie15\n+A constant which is not in the range of imm15u but ok for bset instruction.\n+@item It15\n+A constant which is not in the range of imm15u but ok for btgl instruction.\n+@item Ii15\n+A constant whose compliment value is in the range of imm15u\n+and ok for bitci instruction.\n+@item Is16\n+Signed immediate 16-bit value.\n+@item Is17\n+Signed immediate 17-bit value.\n+@item Is19\n+Signed immediate 19-bit value.\n+@item Is20\n+Signed immediate 20-bit value.\n+@item Ihig\n+The immediate value that can be simply set high 20-bit.\n+@item Izeb\n+The immediate value 0xff.\n+@item Izeh\n+The immediate value 0xffff.\n+@item Ixls\n+The immediate value 0x01.\n+@item Ix11\n+The immediate value 0x7ff.\n+@item Ibms\n+The immediate value with power of 2.\n+@item Ifex\n+The immediate value with power of 2 minus 1.\n+@item U33\n+Memory constraint for 333 format.\n+@item U45\n+Memory constraint for 45 format.\n+@item U37\n+Memory constraint for 37 format.\n+@end table\n+\n @item PDP-11---@file{config/pdp11/constraints.md}\n @table @code\n @item a"}, {"sha": "650867041d987d0563df749a87fd95caa8f74ac4", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -1,3 +1,9 @@\n+2013-10-31  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\t    Shiva Chen  <shiva0217@gmail.com>\n+\n+\t* config.host (nds32*-elf*): Add nds32 target.\n+\t* config/nds32 : New directory and files.\n+\n 2013-10-16  Hans-Peter Nilsson  <hp@axis.com>\n \n \tFor CRIS ports, switch to soft-fp.  Improve arit.c and longlong.h."}, {"sha": "905b816b0dd4f13136042630c7587065901c3038", "filename": "libgcc/config.host", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -143,6 +143,9 @@ mips*-*-*)\n \tcpu_type=mips\n \ttmake_file=mips/t-mips\n \t;;\n+nds32*-*)\n+\tcpu_type=nds32\n+\t;;\n powerpc*-*-*)\n \tcpu_type=rs6000\n \t;;\n@@ -850,6 +853,29 @@ moxie-*-rtems*)\n msp430*-*-elf)\n \ttmake_file=\"$tm_file t-crtstuff t-fdpbit msp430/t-msp430\"\n \t;;\n+nds32*-elf*)\n+\t# Basic makefile fragment and extra_parts for crt stuff.\n+\t# We also append c-isr library implementation.\n+\ttmake_file=\"${tmake_file} nds32/t-nds32 nds32/t-nds32-isr\"\n+\textra_parts=\"crtbegin1.o crtend1.o libnds32_isr.a\"\n+\t# Append library definition makefile fragment according to --with-nds32-lib=X setting.\n+\tcase \"${with_nds32_lib}\" in\n+\t\"\" | newlib)\n+\t\t# Append library definition makefile fragment t-nds32-newlib.\n+\t\t# Append 'soft-fp' software floating point make rule fragment provided by gcc.\n+\t\ttmake_file=\"${tmake_file} nds32/t-nds32-newlib t-softfp-sfdf t-softfp\"\n+\t\t;;\n+\tmculib)\n+\t\t# Append library definition makefile fragment t-nds32-mculib.\n+\t\t# The software floating point library is included in mculib.\n+\t\ttmake_file=\"${tmake_file} nds32/t-nds32-mculib\"\n+\t\t;;\n+\t*)\n+\t\techo \"Cannot accept --with-nds32-lib=$with_nds32_lib, available values are: newlib mculib\" 1>&2\n+\t\texit 1\n+\t\t;;\n+\tesac\n+\t;;\n pdp11-*-*)\n \ttmake_file=\"pdp11/t-pdp11 t-fdpbit\"\n \t;;"}, {"sha": "65098698dba428939ae5dd353d9620fa251b75f4", "filename": "libgcc/config/nds32/crtzero.S", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fcrtzero.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fcrtzero.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fcrtzero.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,103 @@\n+/* The startup code sample of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+!!==============================================================================\n+!!\n+!!      crtzero.S\n+!!\n+!!      This is JUST A SAMPLE of nds32 startup code !!\n+!!      You can refer this content and implement\n+!!      the actual one in newlib/mculib.\n+!!\n+!!==============================================================================\n+\n+!!------------------------------------------------------------------------------\n+!! Jump to start up code\n+!!------------------------------------------------------------------------------\n+\t.section\t.nds32_init, \"ax\"\n+\tj\t_start\n+\n+!!------------------------------------------------------------------------------\n+!! Startup code implementation\n+!!------------------------------------------------------------------------------\n+\t.section\t.text\n+\t.global\t_start\n+\t.weak\t_SDA_BASE_\n+\t.weak\t_FP_BASE_\n+\t.align\t2\n+\t.func\t_start\n+\t.type\t_start, @function\n+_start:\n+.L_fp_gp_lp_init:\n+\tla\t$fp, _FP_BASE_\t\t! init $fp\n+\tla\t$gp, _SDA_BASE_\t\t! init $gp for small data access\n+\tmovi\t$lp, 0\t\t\t! init $lp\n+\n+.L_stack_init:\n+\tla\t$sp, _stack\t\t! init $sp\n+\tmovi\t$r0, -8\t\t\t! align $sp to 8-byte (use 0xfffffff8)\n+\tand\t$sp, $sp, $r0\t\t! align $sp to 8-byte (filter out lower 3-bit)\n+\n+.L_bss_init:\n+\t! clear BSS, this process can be 4 time faster if data is 4 byte aligned\n+\t! if so, use swi.p instead of sbi.p\n+\t! the related stuff are defined in linker script\n+\tla\t$r0, _edata\t\t! get the starting addr of bss\n+\tla\t$r2, _end\t\t! get ending addr of bss\n+\tbeq\t$r0, $r2, .L_call_main\t! if no bss just do nothing\n+\tmovi\t$r1, 0\t\t\t! should be cleared to 0\n+.L_clear_bss:\n+\tsbi.p\t$r1, [$r0], 1\t\t! Set 0 to bss\n+\tbne\t$r0, $r2, .L_clear_bss\t! Still bytes left to set\n+\n+!.L_stack_heap_check:\n+!\tla\t$r0, _end\t\t! init heap_end\n+!\ts.w\t$r0, heap_end\t\t! save it\n+\n+\n+!.L_init_argc_argv:\n+!\t! argc/argv initialization if necessary; default implementation is in crt1.o\n+!\tla\t$r9, _arg_init\t\t! load address of _arg_init?\n+!\tbeqz\t$r9, .L4\t\t! has _arg_init? no, go check main()\n+!\taddi\t$sp, $sp, -512\t\t! allocate space for command line + arguments\n+!\tmove\t$r6, $sp\t\t! r6 = buffer addr of cmd line\n+!\tmove\t$r0, $r6\t\t! r0 = buffer addr of cmd line\n+!\tsyscall\t6002\t\t\t! get cmd line\n+!\tmove\t$r0, $r6\t\t! r0 = buffer addr of cmd line\n+!\taddi\t$r1, $r6, 256\t\t! r1 = argv\n+!\tjral\t$r9\t\t\t! init argc/argv\n+!\taddi\t$r1, $r6, 256\t\t! r1 = argv\n+\n+.L_call_main:\n+\t! call main() if main() is provided\n+\tla\t$r15, main\t\t! load address of main\n+\tjral\t$r15\t\t\t! call main\n+\n+.L_terminate_program:\n+\tsyscall\t0x1\t\t\t! use syscall 0x1 to terminate program\n+\t.size\t_start, .-_start\n+\t.end\n+\n+!! ------------------------------------------------------------------------"}, {"sha": "7235148c5e3e28d5b86a4a88e32e0b2715c60259", "filename": "libgcc/config/nds32/initfini.c", "status": "added", "additions": 159, "deletions": 0, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Finitfini.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Finitfini.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Finitfini.c?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,159 @@\n+/* .init/.fini section handling + C++ global constructor/destructor\n+   handling of Andes NDS32 cpu for GNU compiler.\n+   This file is based on crtstuff.c, sol2-crti.asm, sol2-crtn.asm.\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/*  Declare a pointer to void function type.  */\n+typedef void (*func_ptr) (void);\n+\n+#ifdef CRT_BEGIN\n+\n+/* NOTE:  In order to be able to support SVR4 shared libraries, we arrange\n+   to have one set of symbols { __CTOR_LIST__, __DTOR_LIST__, __CTOR_END__,\n+   __DTOR_END__ } per root executable and also one set of these symbols\n+   per shared library.  So in any given whole process image, we may have\n+   multiple definitions of each of these symbols.  In order to prevent\n+   these definitions from conflicting with one another, and in order to\n+   ensure that the proper lists are used for the initialization/finalization\n+   of each individual shared library (respectively), we give these symbols\n+   only internal (i.e. `static') linkage, and we also make it a point to\n+   refer to only the __CTOR_END__ symbol in crtfini.o and the __DTOR_LIST__\n+   symbol in crtinit.o, where they are defined.  */\n+\n+static func_ptr __CTOR_LIST__[1] __attribute__ ((section (\".ctors\")))\n+     = { (func_ptr) (-1) };\n+\n+static func_ptr __DTOR_LIST__[1] __attribute__ ((section (\".dtors\")))\n+     = { (func_ptr) (-1) };\n+\n+/* Run all the global destructors on exit from the program.  */\n+\n+/* Some systems place the number of pointers in the first word of the\n+   table.  On SVR4 however, that word is -1.  In all cases, the table is\n+   null-terminated.  On SVR4, we start from the beginning of the list and\n+   invoke each per-compilation-unit destructor routine in order\n+   until we find that null.\n+\n+   Note that this function MUST be static.  There will be one of these\n+   functions in each root executable and one in each shared library, but\n+   although they all have the same code, each one is unique in that it\n+   refers to one particular associated `__DTOR_LIST__' which belongs to the\n+   same particular root executable or shared library file.  */\n+\n+static void __do_global_dtors (void)\n+asm (\"__do_global_dtors\") __attribute__ ((section (\".text\")));\n+\n+static void\n+__do_global_dtors (void)\n+{\n+  func_ptr *p;\n+  for (p = __DTOR_LIST__ + 1; *p; p++)\n+    (*p) ();\n+}\n+\n+/* .init section start.\n+   This must appear at the start of the .init section.  */\n+\n+asm (\"\\n\\\n+\t.section .init\\n\\\n+\t.global _init\\n\\\n+\t.type\t_init, @function\\n\\\n+_init:\\n\\\n+\t! 1. store $fp\\n\\\n+\t! 2. adjust $fp by $sp\\n\\\n+\t! 3. adjust $sp\\n\\\n+\");\n+\n+/* .fini section start.\n+   This must appear at the start of the .fini section.  */\n+\n+asm (\"\\n\\\n+\t.section .fini\\n\\\n+\t.global _fini\\n\\\n+\t.type\t_fini, @function\\n\\\n+_fini:\\n\\\n+\t! 1. store $fp\\n\\\n+\t! 2. adjust $fp by $sp\\n\\\n+\t! 3. adjust $sp\\n\\\n+\t! 4. call __do_global_dtors\\n\\\n+\tj\t__do_global_dtors\\n\\\n+\");\n+\n+#endif /* CRT_BEGIN */\n+\n+#ifdef CRT_END\n+\n+/* Define __dso_handle which would be needed for C++ library.\n+   Since our elf-toolchain only builds programs with static link,\n+   we can directly define 'void *__dso_handle = 0'.  */\n+void *__dso_handle = 0;\n+\n+/* Put a word containing zero at the end of each of our two lists of function\n+   addresses.  Note that the words defined here go into the .ctors and .dtors\n+   sections of the crtend.o file, and since that file is always linked in\n+   last, these words naturally end up at the very ends of the two lists\n+   contained in these two sections.  */\n+\n+static func_ptr __CTOR_END__[1] __attribute__ ((section (\".ctors\")))\n+     = { (func_ptr) 0 };\n+\n+static func_ptr __DTOR_END__[1] __attribute__ ((section (\".dtors\")))\n+     = { (func_ptr) 0 };\n+\n+/* Run all global constructors for the program.\n+   Note that they are run in reverse order.  */\n+\n+static void __do_global_ctors (void)\n+asm (\"__do_global_ctors\") __attribute__ ((section (\".text\")));\n+\n+static void\n+__do_global_ctors (void)\n+{\n+  func_ptr *p;\n+  for (p = __CTOR_END__ - 1; *p != (func_ptr) -1; p--)\n+    (*p) ();\n+}\n+\n+/* .init section end.\n+   This must live at the end of the .init section.  */\n+\n+asm (\"\\n\\\n+\t.section .init\\n\\\n+\t! 1. call __do_global_ctors\\n\\\n+\t! 2. adjust back $sp\\n\\\n+\t! 3. restore $fp\\n\\\n+\tj\t__do_global_ctors\\n\\\n+\");\n+\n+/* .fini section end.\n+   This must live at the end of the .fini section.  */\n+\n+asm (\"\\n\\\n+\t.section .fini\\n\\\n+\t! 1. adjust back $sp\\n\\\n+\t! 2. restore $fp\\n\\\n+\");\n+\n+#endif /* CRT_END */"}, {"sha": "6c0c8aaebadb7d60242ba179280b1b8dfe4c299a", "filename": "libgcc/config/nds32/isr-library/adj_intr_lvl.inc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fadj_intr_lvl.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fadj_intr_lvl.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fadj_intr_lvl.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,38 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro ADJ_INTR_LVL\n+#if defined(NDS32_NESTED) /* Nested handler.  */\n+\tmfsr\t$r3, $PSW\n+\taddi\t$r3, $r3, #-0x1\n+\tmtsr\t$r3, $PSW\n+#elif defined(NDS32_NESTED_READY) /* Nested ready handler.  */\n+\t/* Save ipc and ipsw and lower INT level.  */\n+\tmfsr\t$r3, $PSW\n+\taddi\t$r3, $r3, #-0x2\n+\tmtsr\t$r3, $PSW\n+#else /* Not nested handler.  */\n+#endif\n+.endm"}, {"sha": "a68a8ec3313c09e7245358e8aa18435421b26d33", "filename": "libgcc/config/nds32/isr-library/excp_isr.S", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fexcp_isr.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fexcp_isr.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fexcp_isr.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,132 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"save_mac_regs.inc\"\n+#include \"save_fpu_regs.inc\"\n+#include \"save_fpu_regs_00.inc\"\n+#include \"save_fpu_regs_01.inc\"\n+#include \"save_fpu_regs_02.inc\"\n+#include \"save_fpu_regs_03.inc\"\n+#include \"save_all.inc\"\n+#include \"save_partial.inc\"\n+#include \"adj_intr_lvl.inc\"\n+#include \"restore_mac_regs.inc\"\n+#include \"restore_fpu_regs_00.inc\"\n+#include \"restore_fpu_regs_01.inc\"\n+#include \"restore_fpu_regs_02.inc\"\n+#include \"restore_fpu_regs_03.inc\"\n+#include \"restore_fpu_regs.inc\"\n+#include \"restore_all.inc\"\n+#include \"restore_partial.inc\"\n+\t.section .nds32_isr, \"ax\"       /* Put it in the section of 1st level handler. */\n+\t.align\t1\n+/*\n+  First Level Handlers\n+  1. First Level Handlers are invokded in vector section via jump instruction\n+  with specific names for different configurations.\n+  2. Naming Format: _nds32_e_SR_NT for exception handlers.\n+\t\t    _nds32_i_SR_NT for interrupt handlers.\n+  2.1 All upper case letters are replaced with specific lower case letters encodings.\n+  2.2 SR: Saved Registers\n+      sa: Save All regs (context)\n+      ps: Partial Save (all caller-saved regs)\n+  2.3 NT: Nested Type\n+      ns: nested\n+      nn: not nested\n+      nr: nested ready\n+*/\n+\n+/*\n+  This is original 16-byte vector size version.\n+*/\n+#ifdef NDS32_SAVE_ALL_REGS\n+#if defined(NDS32_NESTED)\n+\t.globl\t_nds32_e_sa_ns\n+\t.type\t_nds32_e_sa_ns, @function\n+_nds32_e_sa_ns:\n+#elif defined(NDS32_NESTED_READY)\n+\t.globl\t_nds32_e_sa_nr\n+\t.type\t_nds32_e_sa_nr, @function\n+_nds32_e_sa_nr:\n+#else /* Not nested handler. */\n+\t.globl\t_nds32_e_sa_nn\n+\t.type\t_nds32_e_sa_nn, @function\n+_nds32_e_sa_nn:\n+#endif /* endif for Nest Type */\n+#else /* not NDS32_SAVE_ALL_REGS */\n+#if defined(NDS32_NESTED)\n+\t.globl\t_nds32_e_ps_ns\n+\t.type\t_nds32_e_ps_ns, @function\n+_nds32_e_ps_ns:\n+#elif defined(NDS32_NESTED_READY)\n+\t.globl\t_nds32_e_ps_nr\n+\t.type\t_nds32_e_ps_nr, @function\n+_nds32_e_ps_nr:\n+#else /* Not nested handler. */\n+\t.globl\t_nds32_e_ps_nn\n+\t.type\t_nds32_e_ps_nn, @function\n+_nds32_e_ps_nn:\n+#endif /* endif for Nest Type */\n+#endif /* not NDS32_SAVE_ALL_REGS */\n+\n+/*\n+  This is 16-byte vector size version.\n+  The vector id was restored into $r0 in vector by compiler.\n+*/\n+#ifdef NDS32_SAVE_ALL_REGS\n+        SAVE_ALL\n+#else\n+        SAVE_PARTIAL\n+#endif\n+\t/* Prepare to call 2nd level handler. */\n+\tla\t$r2, _nds32_jmptbl_00\n+\tlw\t$r2, [$r2 + $r0 << #2]\n+\tADJ_INTR_LVL\t/* Adjust INTR level. $r3 is clobbered.  */\n+\tjral    $r2\n+\t/* Restore used registers. */\n+#ifdef NDS32_SAVE_ALL_REGS\n+\tRESTORE_ALL\n+#else\n+\tRESTORE_PARTIAL\n+#endif\n+\tiret\n+\n+#ifdef NDS32_SAVE_ALL_REGS\n+#if defined(NDS32_NESTED)\n+\t.size\t_nds32_e_sa_ns, .-_nds32_e_sa_ns\n+#elif defined(NDS32_NESTED_READY)\n+\t.size\t_nds32_e_sa_nr, .-_nds32_e_sa_nr\n+#else /* Not nested handler. */\n+\t.size\t_nds32_e_sa_nn, .-_nds32_e_sa_nn\n+#endif /* endif for Nest Type */\n+#else /* not NDS32_SAVE_ALL_REGS */\n+#if defined(NDS32_NESTED)\n+\t.size\t_nds32_e_ps_ns, .-_nds32_e_ps_ns\n+#elif defined(NDS32_NESTED_READY)\n+\t.size\t_nds32_e_ps_nr, .-_nds32_e_ps_nr\n+#else /* Not nested handler. */\n+\t.size\t_nds32_e_ps_nn, .-_nds32_e_ps_nn\n+#endif /* endif for Nest Type */\n+#endif /* not NDS32_SAVE_ALL_REGS */"}, {"sha": "e37c2f62dd206821d420b99ca07a6e1c0bd11ad4", "filename": "libgcc/config/nds32/isr-library/excp_isr_4b.S", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fexcp_isr_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fexcp_isr_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fexcp_isr_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,133 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"save_mac_regs.inc\"\n+#include \"save_fpu_regs.inc\"\n+#include \"save_fpu_regs_00.inc\"\n+#include \"save_fpu_regs_01.inc\"\n+#include \"save_fpu_regs_02.inc\"\n+#include \"save_fpu_regs_03.inc\"\n+#include \"save_all.inc\"\n+#include \"save_partial.inc\"\n+#include \"adj_intr_lvl.inc\"\n+#include \"restore_mac_regs.inc\"\n+#include \"restore_fpu_regs_00.inc\"\n+#include \"restore_fpu_regs_01.inc\"\n+#include \"restore_fpu_regs_02.inc\"\n+#include \"restore_fpu_regs_03.inc\"\n+#include \"restore_fpu_regs.inc\"\n+#include \"restore_all.inc\"\n+#include \"restore_partial.inc\"\n+\t.section .nds32_isr, \"ax\"       /* Put it in the section of 1st level handler. */\n+\t.align\t1\n+/*\n+  First Level Handlers\n+  1. First Level Handlers are invokded in vector section via jump instruction\n+  with specific names for different configurations.\n+  2. Naming Format: _nds32_e_SR_NT for exception handlers.\n+\t\t    _nds32_i_SR_NT for interrupt handlers.\n+  2.1 All upper case letters are replaced with specific lower case letters encodings.\n+  2.2 SR: Saved Registers\n+      sa: Save All regs (context)\n+      ps: Partial Save (all caller-saved regs)\n+  2.3 NT: Nested Type\n+      ns: nested\n+      nn: not nested\n+      nr: nested ready\n+*/\n+\n+/*\n+  This is 4-byte vector size version.\n+  The \"_4b\" postfix was added for 4-byte version symbol.\n+*/\n+#ifdef NDS32_SAVE_ALL_REGS\n+#if defined(NDS32_NESTED)\n+\t.globl\t_nds32_e_sa_ns_4b\n+\t.type\t_nds32_e_sa_ns_4b, @function\n+_nds32_e_sa_ns_4b:\n+#elif defined(NDS32_NESTED_READY)\n+\t.globl\t_nds32_e_sa_nr_4b\n+\t.type\t_nds32_e_sa_nr_4b, @function\n+_nds32_e_sa_nr_4b:\n+#else /* Not nested handler. */\n+\t.globl\t_nds32_e_sa_nn_4b\n+\t.type\t_nds32_e_sa_nn_4b, @function\n+_nds32_e_sa_nn_4b:\n+#endif /* endif for Nest Type */\n+#else /* not NDS32_SAVE_ALL_REGS */\n+#if defined(NDS32_NESTED)\n+\t.globl\t_nds32_e_ps_ns_4b\n+\t.type\t_nds32_e_ps_ns_4b, @function\n+_nds32_e_ps_ns_4b:\n+#elif defined(NDS32_NESTED_READY)\n+\t.globl\t_nds32_e_ps_nr_4b\n+\t.type\t_nds32_e_ps_nr_4b, @function\n+_nds32_e_ps_nr_4b:\n+#else /* Not nested handler. */\n+\t.globl\t_nds32_e_ps_nn_4b\n+\t.type\t_nds32_e_ps_nn_4b, @function\n+_nds32_e_ps_nn_4b:\n+#endif /* endif for Nest Type */\n+#endif /* not NDS32_SAVE_ALL_REGS */\n+\n+/*\n+  This is 4-byte vector size version.\n+  The vector id was restored into $lp in vector by compiler.\n+*/\n+#ifdef NDS32_SAVE_ALL_REGS\n+\tSAVE_ALL_4B\n+#else\n+\tSAVE_PARTIAL_4B\n+#endif\n+\t/* Prepare to call 2nd level handler. */\n+\tla\t$r2, _nds32_jmptbl_00\n+\tlw\t$r2, [$r2 + $r0 << #2]\n+\tADJ_INTR_LVL\t/* Adjust INTR level. $r3 is clobbered.  */\n+\tjral    $r2\n+\t/* Restore used registers. */\n+#ifdef NDS32_SAVE_ALL_REGS\n+\tRESTORE_ALL\n+#else\n+\tRESTORE_PARTIAL\n+#endif\n+\tiret\n+\n+#ifdef NDS32_SAVE_ALL_REGS\n+#if defined(NDS32_NESTED)\n+\t.size\t_nds32_e_sa_ns_4b, .-_nds32_e_sa_ns_4b\n+#elif defined(NDS32_NESTED_READY)\n+\t.size\t_nds32_e_sa_nr_4b, .-_nds32_e_sa_nr_4b\n+#else /* Not nested handler. */\n+\t.size\t_nds32_e_sa_nn_4b, .-_nds32_e_sa_nn_4b\n+#endif /* endif for Nest Type */\n+#else /* not NDS32_SAVE_ALL_REGS */\n+#if defined(NDS32_NESTED)\n+\t.size\t_nds32_e_ps_ns_4b, .-_nds32_e_ps_ns_4b\n+#elif defined(NDS32_NESTED_READY)\n+\t.size\t_nds32_e_ps_nr_4b, .-_nds32_e_ps_nr_4b\n+#else /* Not nested handler. */\n+\t.size\t_nds32_e_ps_nn_4b, .-_nds32_e_ps_nn_4b\n+#endif /* endif for Nest Type */\n+#endif /* not NDS32_SAVE_ALL_REGS */"}, {"sha": "4d9537474b963e5eddb12f140d3b0975a6686fc7", "filename": "libgcc/config/nds32/isr-library/intr_isr.S", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fintr_isr.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fintr_isr.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fintr_isr.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,132 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"save_mac_regs.inc\"\n+#include \"save_fpu_regs.inc\"\n+#include \"save_fpu_regs_00.inc\"\n+#include \"save_fpu_regs_01.inc\"\n+#include \"save_fpu_regs_02.inc\"\n+#include \"save_fpu_regs_03.inc\"\n+#include \"save_all.inc\"\n+#include \"save_partial.inc\"\n+#include \"adj_intr_lvl.inc\"\n+#include \"restore_mac_regs.inc\"\n+#include \"restore_fpu_regs_00.inc\"\n+#include \"restore_fpu_regs_01.inc\"\n+#include \"restore_fpu_regs_02.inc\"\n+#include \"restore_fpu_regs_03.inc\"\n+#include \"restore_fpu_regs.inc\"\n+#include \"restore_all.inc\"\n+#include \"restore_partial.inc\"\n+\t.section .nds32_isr, \"ax\"       /* Put it in the section of 1st level handler. */\n+\t.align\t1\n+/*\n+  First Level Handlers\n+  1. First Level Handlers are invokded in vector section via jump instruction\n+  with specific names for different configurations.\n+  2. Naming Format: _nds32_e_SR_NT for exception handlers.\n+\t\t    _nds32_i_SR_NT for interrupt handlers.\n+  2.1 All upper case letters are replaced with specific lower case letters encodings.\n+  2.2 SR: Saved Registers\n+      sa: Save All regs (context)\n+      ps: Partial Save (all caller-saved regs)\n+  2.3 NT: Nested Type\n+      ns: nested\n+      nn: not nested\n+      nr: nested ready\n+*/\n+\n+/*\n+  This is original 16-byte vector size version.\n+*/\n+#ifdef NDS32_SAVE_ALL_REGS\n+#if defined(NDS32_NESTED)\n+\t.globl\t_nds32_i_sa_ns\n+\t.type\t_nds32_i_sa_ns, @function\n+_nds32_i_sa_ns:\n+#elif defined(NDS32_NESTED_READY)\n+\t.globl\t_nds32_i_sa_nr\n+\t.type\t_nds32_i_sa_nr, @function\n+_nds32_i_sa_nr:\n+#else /* Not nested handler. */\n+\t.globl\t_nds32_i_sa_nn\n+\t.type\t_nds32_i_sa_nn, @function\n+_nds32_i_sa_nn:\n+#endif /* endif for Nest Type */\n+#else /* not NDS32_SAVE_ALL_REGS */\n+#if defined(NDS32_NESTED)\n+\t.globl\t_nds32_i_ps_ns\n+\t.type\t_nds32_i_ps_ns, @function\n+_nds32_i_ps_ns:\n+#elif defined(NDS32_NESTED_READY)\n+\t.globl\t_nds32_i_ps_nr\n+\t.type\t_nds32_i_ps_nr, @function\n+_nds32_i_ps_nr:\n+#else /* Not nested handler. */\n+\t.globl\t_nds32_i_ps_nn\n+\t.type\t_nds32_i_ps_nn, @function\n+_nds32_i_ps_nn:\n+#endif /* endif for Nest Type */\n+#endif /* not NDS32_SAVE_ALL_REGS */\n+\n+/*\n+  This is 16-byte vector size version.\n+  The vector id was restored into $r0 in vector by compiler.\n+*/\n+#ifdef NDS32_SAVE_ALL_REGS\n+        SAVE_ALL\n+#else\n+        SAVE_PARTIAL\n+#endif\n+\t/* Prepare to call 2nd level handler. */\n+\tla\t$r2, _nds32_jmptbl_09\t/* For zero-based vcetor id.  */\n+\tlw\t$r2, [$r2 + $r0 << #2]\n+\tADJ_INTR_LVL\t/* Adjust INTR level. $r3 is clobbered.  */\n+\tjral    $r2\n+\t/* Restore used registers. */\n+#ifdef NDS32_SAVE_ALL_REGS\n+\tRESTORE_ALL\n+#else\n+\tRESTORE_PARTIAL\n+#endif\n+\tiret\n+\n+#ifdef NDS32_SAVE_ALL_REGS\n+#if defined(NDS32_NESTED)\n+\t.size\t_nds32_i_sa_ns, .-_nds32_i_sa_ns\n+#elif defined(NDS32_NESTED_READY)\n+\t.size\t_nds32_i_sa_nr, .-_nds32_i_sa_nr\n+#else /* Not nested handler. */\n+\t.size\t_nds32_i_sa_nn, .-_nds32_i_sa_nn\n+#endif /* endif for Nest Type */\n+#else /* not NDS32_SAVE_ALL_REGS */\n+#if defined(NDS32_NESTED)\n+\t.size\t_nds32_i_ps_ns, .-_nds32_i_ps_ns\n+#elif defined(NDS32_NESTED_READY)\n+\t.size\t_nds32_i_ps_nr, .-_nds32_i_ps_nr\n+#else /* Not nested handler. */\n+\t.size\t_nds32_i_ps_nn, .-_nds32_i_ps_nn\n+#endif /* endif for Nest Type */\n+#endif /* not NDS32_SAVE_ALL_REGS */"}, {"sha": "21e60e72ed77436e6dfcc883a14e06e46e2e7739", "filename": "libgcc/config/nds32/isr-library/intr_isr_4b.S", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fintr_isr_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fintr_isr_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fintr_isr_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,134 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"save_mac_regs.inc\"\n+#include \"save_fpu_regs.inc\"\n+#include \"save_fpu_regs_00.inc\"\n+#include \"save_fpu_regs_01.inc\"\n+#include \"save_fpu_regs_02.inc\"\n+#include \"save_fpu_regs_03.inc\"\n+#include \"save_all.inc\"\n+#include \"save_partial.inc\"\n+#include \"adj_intr_lvl.inc\"\n+#include \"restore_mac_regs.inc\"\n+#include \"restore_fpu_regs_00.inc\"\n+#include \"restore_fpu_regs_01.inc\"\n+#include \"restore_fpu_regs_02.inc\"\n+#include \"restore_fpu_regs_03.inc\"\n+#include \"restore_fpu_regs.inc\"\n+#include \"restore_all.inc\"\n+#include \"restore_partial.inc\"\n+\t.section .nds32_isr, \"ax\"       /* Put it in the section of 1st level handler. */\n+\t.align\t1\n+/*\n+  First Level Handlers\n+  1. First Level Handlers are invokded in vector section via jump instruction\n+  with specific names for different configurations.\n+  2. Naming Format: _nds32_e_SR_NT for exception handlers.\n+\t\t    _nds32_i_SR_NT for interrupt handlers.\n+  2.1 All upper case letters are replaced with specific lower case letters encodings.\n+  2.2 SR: Saved Registers\n+      sa: Save All regs (context)\n+      ps: Partial Save (all caller-saved regs)\n+  2.3 NT: Nested Type\n+      ns: nested\n+      nn: not nested\n+      nr: nested ready\n+*/\n+\n+/*\n+  This is 4-byte vector size version.\n+  The \"_4b\" postfix was added for 4-byte version symbol.\n+*/\n+#ifdef NDS32_SAVE_ALL_REGS\n+#if defined(NDS32_NESTED)\n+\t.globl\t_nds32_i_sa_ns_4b\n+\t.type\t_nds32_i_sa_ns_4b, @function\n+_nds32_i_sa_ns_4b:\n+#elif defined(NDS32_NESTED_READY)\n+\t.globl\t_nds32_i_sa_nr_4b\n+\t.type\t_nds32_i_sa_nr_4b, @function\n+_nds32_i_sa_nr_4b:\n+#else /* Not nested handler. */\n+\t.globl\t_nds32_i_sa_nn_4b\n+\t.type\t_nds32_i_sa_nn_4b, @function\n+_nds32_i_sa_nn_4b:\n+#endif /* endif for Nest Type */\n+#else /* not NDS32_SAVE_ALL_REGS */\n+#if defined(NDS32_NESTED)\n+\t.globl\t_nds32_i_ps_ns_4b\n+\t.type\t_nds32_i_ps_ns_4b, @function\n+_nds32_i_ps_ns_4b:\n+#elif defined(NDS32_NESTED_READY)\n+\t.globl\t_nds32_i_ps_nr_4b\n+\t.type\t_nds32_i_ps_nr_4b, @function\n+_nds32_i_ps_nr_4b:\n+#else /* Not nested handler. */\n+\t.globl\t_nds32_i_ps_nn_4b\n+\t.type\t_nds32_i_ps_nn_4b, @function\n+_nds32_i_ps_nn_4b:\n+#endif /* endif for Nest Type */\n+#endif /* not NDS32_SAVE_ALL_REGS */\n+\n+/*\n+  This is 4-byte vector size version.\n+  The vector id was restored into $lp in vector by compiler.\n+*/\n+#ifdef NDS32_SAVE_ALL_REGS\n+\tSAVE_ALL_4B\n+#else\n+        SAVE_PARTIAL_4B\n+#endif\n+\t/* Prepare to call 2nd level handler. */\n+\tla\t$r2, _nds32_jmptbl_00\n+\tlw\t$r2, [$r2 + $r0 << #2]\n+\taddi    $r0, $r0, #-9\t/* Make interrput vector id zero-based.  */\n+\tADJ_INTR_LVL\t/* Adjust INTR level. $r3 is clobbered.  */\n+\tjral    $r2\n+\t/* Restore used registers. */\n+#ifdef NDS32_SAVE_ALL_REGS\n+\tRESTORE_ALL\n+#else\n+\tRESTORE_PARTIAL\n+#endif\n+\tiret\n+\n+#ifdef NDS32_SAVE_ALL_REGS\n+#if defined(NDS32_NESTED)\n+\t.size\t_nds32_i_sa_ns_4b, .-_nds32_i_sa_ns_4b\n+#elif defined(NDS32_NESTED_READY)\n+\t.size\t_nds32_i_sa_nr_4b, .-_nds32_i_sa_nr_4b\n+#else /* Not nested handler. */\n+\t.size\t_nds32_i_sa_nn_4b, .-_nds32_i_sa_nn_4b\n+#endif /* endif for Nest Type */\n+#else /* not NDS32_SAVE_ALL_REGS */\n+#if defined(NDS32_NESTED)\n+\t.size\t_nds32_i_ps_ns_4b, .-_nds32_i_ps_ns_4b\n+#elif defined(NDS32_NESTED_READY)\n+\t.size\t_nds32_i_ps_nr_4b, .-_nds32_i_ps_nr_4b\n+#else /* Not nested handler. */\n+\t.size\t_nds32_i_ps_nn_4b, .-_nds32_i_ps_nn_4b\n+#endif /* endif for Nest Type */\n+#endif /* not NDS32_SAVE_ALL_REGS */"}, {"sha": "f0ed85a82759bfde3d78c55ddb716ebdb4b89e34", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid00.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid00.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid00.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid00.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.00, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_00\n+\t.type\t_nds32_jmptbl_00, @object\n+_nds32_jmptbl_00:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_00, .-_nds32_jmptbl_00"}, {"sha": "4c6b9c1d73d9c787c831ecb154d8a1bb2e9b23e2", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid01.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid01.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid01.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid01.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.01, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_01\n+\t.type\t_nds32_jmptbl_01, @object\n+_nds32_jmptbl_01:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_01, .-_nds32_jmptbl_01"}, {"sha": "83ba980ad365b8646a3eae1c03126ceb7d445f54", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid02.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid02.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid02.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid02.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.02, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_02\n+\t.type\t_nds32_jmptbl_02, @object\n+_nds32_jmptbl_02:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_02, .-_nds32_jmptbl_02"}, {"sha": "47f11a4b86a352e8d37ff4d3c412e2eb1fb1d6a0", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid03.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid03.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid03.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid03.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.03, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_03\n+\t.type\t_nds32_jmptbl_03, @object\n+_nds32_jmptbl_03:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_03, .-_nds32_jmptbl_03"}, {"sha": "e3e7fb8c1dab134581949beaf349fe32fe984edb", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid04.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid04.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid04.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid04.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.04, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_04\n+\t.type\t_nds32_jmptbl_04, @object\n+_nds32_jmptbl_04:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_04, .-_nds32_jmptbl_04"}, {"sha": "32fa7eafd7bf985143eeae90c865459b9b4d3034", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid05.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid05.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid05.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid05.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.05, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_05\n+\t.type\t_nds32_jmptbl_05, @object\n+_nds32_jmptbl_05:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_05, .-_nds32_jmptbl_05"}, {"sha": "df2d83acaa30e4a0852cd561674bf07784372e16", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid06.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid06.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid06.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid06.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.06, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_06\n+\t.type\t_nds32_jmptbl_06, @object\n+_nds32_jmptbl_06:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_06, .-_nds32_jmptbl_06"}, {"sha": "0070f7f5ae8f8bfbe87c5da87aad8363b3399f2d", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid07.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid07.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid07.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid07.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.07, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_07\n+\t.type\t_nds32_jmptbl_07, @object\n+_nds32_jmptbl_07:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_07, .-_nds32_jmptbl_07"}, {"sha": "0b19e60b9df018cdcef7c74d428d6b95d9821d8f", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid08.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid08.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid08.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid08.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.08, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_08\n+\t.type\t_nds32_jmptbl_08, @object\n+_nds32_jmptbl_08:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_08, .-_nds32_jmptbl_08"}, {"sha": "b0e216b752024d763046d2d573a76e91776599cd", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid09.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid09.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid09.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid09.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.09, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_09\n+\t.type\t_nds32_jmptbl_09, @object\n+_nds32_jmptbl_09:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_09, .-_nds32_jmptbl_09"}, {"sha": "bd378ed5f7a5ea917fde298d7a05de92afbb3f72", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid10.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid10.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid10.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid10.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.10, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_10\n+\t.type\t_nds32_jmptbl_10, @object\n+_nds32_jmptbl_10:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_10, .-_nds32_jmptbl_10"}, {"sha": "9648ef347f0cf7d9f475f2eb97f131c59c3fe65f", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid11.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid11.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid11.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid11.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.11, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_11\n+\t.type\t_nds32_jmptbl_11, @object\n+_nds32_jmptbl_11:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_11, .-_nds32_jmptbl_11"}, {"sha": "0ab14e2249c8f13024af7919e1e2cbae31c0b638", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid12.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid12.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid12.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid12.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.12, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_12\n+\t.type\t_nds32_jmptbl_12, @object\n+_nds32_jmptbl_12:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_12, .-_nds32_jmptbl_12"}, {"sha": "31664689df43e2557d020a1b775da6555d8311bf", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid13.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid13.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid13.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid13.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.13, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_13\n+\t.type\t_nds32_jmptbl_13, @object\n+_nds32_jmptbl_13:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_13, .-_nds32_jmptbl_13"}, {"sha": "cb8d129d81f72f57d9d536a582a978aa71d3566a", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid14.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid14.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid14.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid14.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.14, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_14\n+\t.type\t_nds32_jmptbl_14, @object\n+_nds32_jmptbl_14:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_14, .-_nds32_jmptbl_14"}, {"sha": "bac9bc98407d930837cee6836e3a6023def7554a", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid15.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid15.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid15.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid15.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.15, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_15\n+\t.type\t_nds32_jmptbl_15, @object\n+_nds32_jmptbl_15:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_15, .-_nds32_jmptbl_15"}, {"sha": "9066f81cfde9c0e5a3008d6dc7cf7d1762619b42", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid16.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid16.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid16.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid16.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.16, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_16\n+\t.type\t_nds32_jmptbl_16, @object\n+_nds32_jmptbl_16:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_16, .-_nds32_jmptbl_16"}, {"sha": "60a8ba9ac4d1095be7c37141afbc0c61fd5081df", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid17.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid17.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid17.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid17.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.17, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_17\n+\t.type\t_nds32_jmptbl_17, @object\n+_nds32_jmptbl_17:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_17, .-_nds32_jmptbl_17"}, {"sha": "a926fecc0b61a7961fdc83f08c3bd784cfbf664a", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid18.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid18.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid18.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid18.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.18, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_18\n+\t.type\t_nds32_jmptbl_18, @object\n+_nds32_jmptbl_18:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_18, .-_nds32_jmptbl_18"}, {"sha": "064ace009bb40b94e035103da8c710ac6e8ed6c7", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid19.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid19.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid19.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid19.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.19, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_19\n+\t.type\t_nds32_jmptbl_19, @object\n+_nds32_jmptbl_19:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_19, .-_nds32_jmptbl_19"}, {"sha": "e75bc71fbb638da77ee403ea9867b3d396c1f6d2", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid20.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid20.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid20.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid20.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.20, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_20\n+\t.type\t_nds32_jmptbl_20, @object\n+_nds32_jmptbl_20:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_20, .-_nds32_jmptbl_20"}, {"sha": "0c3d2b871c7fac711e7839d176d3bd43b8a09449", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid21.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid21.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid21.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid21.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.21, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_21\n+\t.type\t_nds32_jmptbl_21, @object\n+_nds32_jmptbl_21:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_21, .-_nds32_jmptbl_21"}, {"sha": "415bf9f75e8583a215c9b011bb30df2b9166f579", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid22.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid22.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid22.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid22.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.22, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_22\n+\t.type\t_nds32_jmptbl_22, @object\n+_nds32_jmptbl_22:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_22, .-_nds32_jmptbl_22"}, {"sha": "1efe31099c22ff395bb11a0b4443f844116397b2", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid23.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid23.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid23.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid23.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.23, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_23\n+\t.type\t_nds32_jmptbl_23, @object\n+_nds32_jmptbl_23:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_23, .-_nds32_jmptbl_23"}, {"sha": "bb27eaa0812c1c418d480cd004e414bba7907da2", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid24.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid24.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid24.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid24.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.24, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_24\n+\t.type\t_nds32_jmptbl_24, @object\n+_nds32_jmptbl_24:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_24, .-_nds32_jmptbl_24"}, {"sha": "ca64f8c8badcce302fb720a0d523408ad7717a85", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid25.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid25.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid25.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid25.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.25, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_25\n+\t.type\t_nds32_jmptbl_25, @object\n+_nds32_jmptbl_25:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_25, .-_nds32_jmptbl_25"}, {"sha": "95feab094fd8f1a515c1cbe3d1b7b59ebcf90993", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid26.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid26.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid26.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid26.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.26, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_26\n+\t.type\t_nds32_jmptbl_26, @object\n+_nds32_jmptbl_26:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_26, .-_nds32_jmptbl_26"}, {"sha": "2bb9eabe6a4ac722edf53ccd70377c75b59aff4c", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid27.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid27.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid27.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid27.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.27, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_27\n+\t.type\t_nds32_jmptbl_27, @object\n+_nds32_jmptbl_27:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_27, .-_nds32_jmptbl_27"}, {"sha": "57772ba494dcad8dddeca53e48904aa454cf93a6", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid28.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid28.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid28.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid28.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.28, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_28\n+\t.type\t_nds32_jmptbl_28, @object\n+_nds32_jmptbl_28:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_28, .-_nds32_jmptbl_28"}, {"sha": "c69d7398eb1e221ae78b170f51fb59682ec30e30", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid29.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid29.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid29.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid29.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.29, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_29\n+\t.type\t_nds32_jmptbl_29, @object\n+_nds32_jmptbl_29:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_29, .-_nds32_jmptbl_29"}, {"sha": "f739c5821d7d648e4df562e9409f67b25f601f1d", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid30.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid30.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid30.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid30.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.30, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_30\n+\t.type\t_nds32_jmptbl_30, @object\n+_nds32_jmptbl_30:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_30, .-_nds32_jmptbl_30"}, {"sha": "4997f4e9cc82f4c6feb670b04117c7132b29f1d1", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid31.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid31.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid31.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid31.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.31, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_31\n+\t.type\t_nds32_jmptbl_31, @object\n+_nds32_jmptbl_31:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_31, .-_nds32_jmptbl_31"}, {"sha": "1cde3fab09799f9b69be0a2e2a363e86e156fec8", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid32.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid32.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.32, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_32\n+\t.type\t_nds32_jmptbl_32, @object\n+_nds32_jmptbl_32:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_32, .-_nds32_jmptbl_32"}, {"sha": "84edda3675197226e8178039b5d0e24bdf129585", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid33.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid33.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid33.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid33.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.33, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_33\n+\t.type\t_nds32_jmptbl_33, @object\n+_nds32_jmptbl_33:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_33, .-_nds32_jmptbl_33"}, {"sha": "82dc9f1dc24e01556cf9323c630bfce4199ddf4e", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid34.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid34.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid34.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid34.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.34, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_34\n+\t.type\t_nds32_jmptbl_34, @object\n+_nds32_jmptbl_34:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_34, .-_nds32_jmptbl_34"}, {"sha": "c99fc6cd996f60c949f6e5174ada19bf64fcc731", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid35.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid35.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid35.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid35.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.35, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_35\n+\t.type\t_nds32_jmptbl_35, @object\n+_nds32_jmptbl_35:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_35, .-_nds32_jmptbl_35"}, {"sha": "9154d713c4058fc3974322778dc5545d76b930e5", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid36.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid36.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid36.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid36.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.36, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_36\n+\t.type\t_nds32_jmptbl_36, @object\n+_nds32_jmptbl_36:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_36, .-_nds32_jmptbl_36"}, {"sha": "1f3acfd2c49d0bcb642dc5a630a2d8e11aa63676", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid37.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid37.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid37.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid37.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.37, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_37\n+\t.type\t_nds32_jmptbl_37, @object\n+_nds32_jmptbl_37:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_37, .-_nds32_jmptbl_37"}, {"sha": "0ff99b02235dfa0afb3f42f306c0dbe13ffafa03", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid38.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid38.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid38.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid38.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.38, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_38\n+\t.type\t_nds32_jmptbl_38, @object\n+_nds32_jmptbl_38:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_38, .-_nds32_jmptbl_38"}, {"sha": "3fe74367c4661c59356eec3a025598afd54bce69", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid39.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid39.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid39.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid39.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.39, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_39\n+\t.type\t_nds32_jmptbl_39, @object\n+_nds32_jmptbl_39:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_39, .-_nds32_jmptbl_39"}, {"sha": "fcd05dc627de342db999c6e2310ce2c38ccea389", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid40.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid40.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid40.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid40.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.40, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_40\n+\t.type\t_nds32_jmptbl_40, @object\n+_nds32_jmptbl_40:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_40, .-_nds32_jmptbl_40"}, {"sha": "0ec546a7f5b38e64dd1906ec5ad90199e8e0417d", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid41.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid41.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid41.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid41.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.41, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_41\n+\t.type\t_nds32_jmptbl_41, @object\n+_nds32_jmptbl_41:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_41, .-_nds32_jmptbl_41"}, {"sha": "761ef7690896ef2a347c909f275a42ad35988180", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid42.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid42.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid42.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid42.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.42, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_42\n+\t.type\t_nds32_jmptbl_42, @object\n+_nds32_jmptbl_42:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_42, .-_nds32_jmptbl_42"}, {"sha": "0b2fc0eeedd768b82811d4087780648ed566c8d5", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid43.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid43.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid43.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid43.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.43, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_43\n+\t.type\t_nds32_jmptbl_43, @object\n+_nds32_jmptbl_43:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_43, .-_nds32_jmptbl_43"}, {"sha": "0fc7e7e1662909733e657eecc24a98a9b2d9d445", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid44.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid44.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid44.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid44.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.44, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_44\n+\t.type\t_nds32_jmptbl_44, @object\n+_nds32_jmptbl_44:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_44, .-_nds32_jmptbl_44"}, {"sha": "725d14483bf8afd41c708762766fdc33a451a033", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid45.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid45.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid45.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid45.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.45, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_45\n+\t.type\t_nds32_jmptbl_45, @object\n+_nds32_jmptbl_45:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_45, .-_nds32_jmptbl_45"}, {"sha": "6b4253ada9d2b87a493aa3ac52d9102da605ef92", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid46.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid46.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid46.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid46.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.46, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_46\n+\t.type\t_nds32_jmptbl_46, @object\n+_nds32_jmptbl_46:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_46, .-_nds32_jmptbl_46"}, {"sha": "460e8509bcca9911d459e31d03577e7c39dd80f4", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid47.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid47.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid47.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid47.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.47, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_47\n+\t.type\t_nds32_jmptbl_47, @object\n+_nds32_jmptbl_47:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_47, .-_nds32_jmptbl_47"}, {"sha": "d481e50e290d820ada7bccb4239959a5f45731a0", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid48.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid48.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid48.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid48.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.48, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_48\n+\t.type\t_nds32_jmptbl_48, @object\n+_nds32_jmptbl_48:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_48, .-_nds32_jmptbl_48"}, {"sha": "4cea0b7e4346f441027294ee0d68807029abc349", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid49.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid49.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid49.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid49.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.49, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_49\n+\t.type\t_nds32_jmptbl_49, @object\n+_nds32_jmptbl_49:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_49, .-_nds32_jmptbl_49"}, {"sha": "dd15a3845701f4ebf857c17ec1cfd45c97c6b383", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid50.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid50.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid50.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid50.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.50, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_50\n+\t.type\t_nds32_jmptbl_50, @object\n+_nds32_jmptbl_50:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_50, .-_nds32_jmptbl_50"}, {"sha": "02cf8dfb2f57b8985679cd1b9b824972f0b6de85", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid51.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid51.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid51.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid51.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.51, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_51\n+\t.type\t_nds32_jmptbl_51, @object\n+_nds32_jmptbl_51:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_51, .-_nds32_jmptbl_51"}, {"sha": "5bc784611ddb1fc0232a26a252f69c1aef045d71", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid52.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid52.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid52.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid52.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.52, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_52\n+\t.type\t_nds32_jmptbl_52, @object\n+_nds32_jmptbl_52:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_52, .-_nds32_jmptbl_52"}, {"sha": "94f0dabcb44d450dff6cd8c4d3e19e4736139796", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid53.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid53.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid53.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid53.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.53, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_53\n+\t.type\t_nds32_jmptbl_53, @object\n+_nds32_jmptbl_53:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_53, .-_nds32_jmptbl_53"}, {"sha": "f13d6895bedadbf8fea55f0a41cf64eaa7ae7ee8", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid54.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid54.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid54.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid54.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.54, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_54\n+\t.type\t_nds32_jmptbl_54, @object\n+_nds32_jmptbl_54:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_54, .-_nds32_jmptbl_54"}, {"sha": "521af640669167830301e08e288e8eead21362ce", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid55.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid55.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid55.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid55.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.55, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_55\n+\t.type\t_nds32_jmptbl_55, @object\n+_nds32_jmptbl_55:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_55, .-_nds32_jmptbl_55"}, {"sha": "2c01ed2c34123b85188b12f4cd0898d81612a542", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid56.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid56.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid56.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid56.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.56, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_56\n+\t.type\t_nds32_jmptbl_56, @object\n+_nds32_jmptbl_56:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_56, .-_nds32_jmptbl_56"}, {"sha": "58d4c1d72b0c1fab716a31ebcfcd1100912cbc8a", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid57.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid57.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid57.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid57.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.57, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_57\n+\t.type\t_nds32_jmptbl_57, @object\n+_nds32_jmptbl_57:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_57, .-_nds32_jmptbl_57"}, {"sha": "ceb7711c3cf19ce870a622ebb0652e658ebf2826", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid58.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid58.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid58.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid58.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.58, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_58\n+\t.type\t_nds32_jmptbl_58, @object\n+_nds32_jmptbl_58:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_58, .-_nds32_jmptbl_58"}, {"sha": "527a1f52be63decdd9c016289be11909b0392c3d", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid59.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid59.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid59.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid59.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.59, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_59\n+\t.type\t_nds32_jmptbl_59, @object\n+_nds32_jmptbl_59:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_59, .-_nds32_jmptbl_59"}, {"sha": "eedd8b88807cf6723d8a1ad26af96186f1ac74c3", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid60.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid60.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid60.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid60.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.60, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_60\n+\t.type\t_nds32_jmptbl_60, @object\n+_nds32_jmptbl_60:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_60, .-_nds32_jmptbl_60"}, {"sha": "e9813128491cf780d0885f2f925bacb130ccc554", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid61.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid61.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid61.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid61.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.61, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_61\n+\t.type\t_nds32_jmptbl_61, @object\n+_nds32_jmptbl_61:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_61, .-_nds32_jmptbl_61"}, {"sha": "ef66f2b7e07c8ee6f2d1239e848fd777f79ffa06", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid62.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid62.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid62.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid62.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.62, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_62\n+\t.type\t_nds32_jmptbl_62, @object\n+_nds32_jmptbl_62:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_62, .-_nds32_jmptbl_62"}, {"sha": "95e38ba5eb1159b60983a2ca3fac4cd4fae97503", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid63.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid63.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid63.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid63.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.63, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_63\n+\t.type\t_nds32_jmptbl_63, @object\n+_nds32_jmptbl_63:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_63, .-_nds32_jmptbl_63"}, {"sha": "f27b6df9439437c590cc4109f60a3a053078eba1", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid64.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid64.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.64, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_64\n+\t.type\t_nds32_jmptbl_64, @object\n+_nds32_jmptbl_64:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_64, .-_nds32_jmptbl_64"}, {"sha": "69d83c6746796a93b8c569fe8ac14bb01dd952e7", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid65.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid65.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid65.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid65.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.65, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_65\n+\t.type\t_nds32_jmptbl_65, @object\n+_nds32_jmptbl_65:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_65, .-_nds32_jmptbl_65"}, {"sha": "3474d05a5d9d3aa0bc208be48e8f55206d1e2e7e", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid66.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid66.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid66.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid66.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.66, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_66\n+\t.type\t_nds32_jmptbl_66, @object\n+_nds32_jmptbl_66:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_66, .-_nds32_jmptbl_66"}, {"sha": "8bbb5163f69189ea4fd4bb1a0324fcd3a7aa87ef", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid67.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid67.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid67.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid67.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.67, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_67\n+\t.type\t_nds32_jmptbl_67, @object\n+_nds32_jmptbl_67:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_67, .-_nds32_jmptbl_67"}, {"sha": "fc875055818aa9d5c00d2439141102c175189c60", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid68.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid68.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid68.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid68.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.68, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_68\n+\t.type\t_nds32_jmptbl_68, @object\n+_nds32_jmptbl_68:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_68, .-_nds32_jmptbl_68"}, {"sha": "78847706f51ba7143ce3789f4df44e5ba147cf4b", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid69.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid69.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid69.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid69.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.69, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_69\n+\t.type\t_nds32_jmptbl_69, @object\n+_nds32_jmptbl_69:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_69, .-_nds32_jmptbl_69"}, {"sha": "0f41e21d4db95a53121b0086d1cb5e315bfce40f", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid70.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid70.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid70.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid70.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.70, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_70\n+\t.type\t_nds32_jmptbl_70, @object\n+_nds32_jmptbl_70:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_70, .-_nds32_jmptbl_70"}, {"sha": "5aab1252e1bbe49016bd12d0dc2a31633758943b", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid71.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid71.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid71.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid71.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.71, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_71\n+\t.type\t_nds32_jmptbl_71, @object\n+_nds32_jmptbl_71:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_71, .-_nds32_jmptbl_71"}, {"sha": "6d40bfffb75b44325771218d724250005d062983", "filename": "libgcc/config/nds32/isr-library/jmptbl_vid72.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid72.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid72.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fjmptbl_vid72.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_jmptbl.72, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_jmptbl_72\n+\t.type\t_nds32_jmptbl_72, @object\n+_nds32_jmptbl_72:\n+\t.word\t0\n+\t.size\t_nds32_jmptbl_72, .-_nds32_jmptbl_72"}, {"sha": "083ec98023cb6942a7774f28b4e2dbe12f6d9716", "filename": "libgcc/config/nds32/isr-library/nmih.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fnmih.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fnmih.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fnmih.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_nmih, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_nmih\n+\t.type\t_nds32_nmih, @object\n+_nds32_nmih:\n+\t.word\t0\n+\t.size\t_nds32_nmih, .-_nds32_nmih"}, {"sha": "3f539de48ea0dbc4c7e09c26f1112ad1622f159d", "filename": "libgcc/config/nds32/isr-library/reset.S", "status": "added", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Freset.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Freset.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Freset.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,130 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section .nds32_isr, \"ax\"\t/* Put it in the section of 1st level handler.  */\n+\t.align\t1\n+\t.weak\t_SDA_BASE_\t/* For reset handler only.  */\n+\t.weak\t_FP_BASE_\t/* For reset handler only.  */\n+\t.weak\t_nds32_init_mem\t/* User defined memory initialization function.  */\n+\t.globl\t_start\n+\t.globl\t_nds32_reset\n+\t.type\t_nds32_reset, @function\n+_nds32_reset:\n+_start:\n+#ifdef  NDS32_EXT_EX9\n+\t.no_ex9_begin\n+#endif\n+\t/* Handle NMI and warm boot if any of them exists.  */\n+\tbeqz\t$sp, 1f\t\t/* Reset, NMI or warm boot?  */\n+\t/* Either NMI or warm boot; save all regs.  */\n+\n+\t/* Preserve registers for context-switching.  */\n+#ifdef __NDS32_REDUCED_REGS__\n+\t/* For 16-reg mode.  */\n+\tsmw.adm $r0, [$sp], $r10, #0x0\n+\tsmw.adm $r15, [$sp], $r15, #0xf\n+#else\n+\t/* For 32-reg mode.  */\n+\tsmw.adm $r0, [$sp], $r27, #0xf\n+#endif\n+#ifdef NDS32_EXT_IFC\n+\tmfusr   $r1, $IFC_LP\n+\tsmw.adm $r1, [$sp], $r2, #0x0\t/* Save extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+#endif\n+\n+\tla\t$gp, _SDA_BASE_\t/* Init GP for small data access.  */\n+\tmove\t$r0, $sp\t/* Init parameter.  */\n+\tmfsr\t$r1, $ITYPE\t/* Check ITYPE for NMI or warm boot.  */\n+\tandi\t$r1, $r1, #0xf\n+\taddi\t$r1, $r1, #-1\n+\tbeqz\t$r1, 2f\t\t/* Warm boot if true.  */\n+\tl.w\t$r15, _nds32_nmih\t/* Load NMI handler.  */\n+\tj\t3f\n+2:\n+\tl.w\t$r15, _nds32_wrh\t/* Load warm boot handler.  */\n+3:\n+\tbeqz    $r15, 1f\t/* If no handler, do cold boot.  */\n+\tjral    $r15\t\t/* Call handler.  */\n+\tbnez    $r0, 1f\t\t/* If fail to resume, do cold boot.  */\n+\n+\t/* Restore registers for context-switching.  */\n+#ifdef NDS32_EXT_IFC\n+\tlmw.bim\t$r1, [$sp], $r2, #0x0\t/* Restore extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+\tmtusr   $r1, $IFC_LP\n+#endif\n+#ifdef __NDS32_REDUCED_REGS__\n+\t/* For 16-reg mode.  */\n+\tlmw.bim\t$r15, [$sp], $r15, #0xf\n+\tlmw.bim\t$r0, [$sp], $r10, #0x0\n+#else\n+\t/* For 32-reg mode.  */\n+\tlmw.bim $r0, [$sp], $r27, #0xf\n+#endif\n+\tiret\t/* Resume operation.  */\n+\n+\n+1:\t/* Cold boot.  */\n+\t/* Set IVB.ESZ = 1 (vector table entry size = 16 bytes)  */\n+\tmfsr    $r0, $IVB\n+\tli\t$r1, #0xffff3fff\n+\tand\t$r0, $r0, $r1\n+\tori\t$r0, $r0, #0x4000\n+\tmtsr    $r0, $IVB\n+\tdsb\n+\n+\tla\t$gp, _SDA_BASE_\t\t/* Init $gp.  */\n+\tla\t$fp, _FP_BASE_\t\t/* Init $fp.  */\n+\tla\t$sp, _stack\t\t/* Init $sp.  */\n+#ifdef  NDS32_EXT_EX9\n+/*\n+ *\tInitialize the table base of EX9 instruction\n+ *\tex9 generation needs to disable before the ITB is set\n+ */\n+\tmfsr    $r0, $MSC_CFG\t/* Check if HW support of EX9.  */\n+\tsrli\t$r0, $r0, 24\n+\tandi\t$r0, $r0, 0x1\n+\tbeqz\t$r0, 4f\t\t/* Zero means HW does not support EX9.  */\n+\tla      $r0, _ITB_BASE_\t/* Init $ITB.  */\n+\tmtusr   $r0, $ITB\n+\t.no_ex9_end\n+4:\n+#endif\n+\tla\t$r15, _nds32_init_mem\t/* Call DRAM init. _nds32_init_mem\n+\t\t\t\t\t  may written by C language.  */\n+\tbeqz\t$r15, 6f\n+\tjral\t$r15\n+6:\n+\tl.w\t$r15, _nds32_jmptbl_00\t/* Load reset handler.  */\n+\tjral\t$r15\n+/* Reset handler() should never return in a RTOS or non-OS system.\n+   In case it does return, an exception will be generated.\n+   This exception will be caught either by default break handler or by EDM.\n+   Default break handle may just do an infinite loop.\n+   EDM will notify GDB and GDB will regain control when the ID is 0x7fff. */\n+5:\n+\tbreak    #0x7fff\n+\t.size\t_nds32_reset, .-_nds32_reset"}, {"sha": "23b821a1aaf1308e8ebe7883f34c9f5c4f95d54f", "filename": "libgcc/config/nds32/isr-library/reset_4b.S", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Freset_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Freset_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Freset_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,131 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section .nds32_isr, \"ax\"\t/* Put it in the section of 1st level handler.  */\n+\t.align\t1\n+\t.weak\t_SDA_BASE_\t/* For reset handler only.  */\n+\t.weak\t_FP_BASE_\t/* For reset handler only.  */\n+\t.weak\t_nds32_init_mem\t/* User defined memory initialization function.  */\n+\t.globl\t_start\n+\t.globl\t_nds32_reset_4b\n+\t.type\t_nds32_reset_4b, @function\n+_nds32_reset_4b:\n+_start:\n+#ifdef  NDS32_EXT_EX9\n+\t.no_ex9_begin\n+#endif\n+\t/* Handle NMI and warm boot if any of them exists.  */\n+\tbeqz\t$sp, 1f\t\t/* Reset, NMI or warm boot?  */\n+\t/* Either NMI or warm boot; save all regs.  */\n+\n+\t/* Preserve registers for context-switching.  */\n+#ifdef __NDS32_REDUCED_REGS__\n+\t/* For 16-reg mode.  */\n+\tsmw.adm $r0, [$sp], $r10, #0x0\n+\tsmw.adm $r15, [$sp], $r15, #0xf\n+#else\n+\t/* For 32-reg mode.  */\n+\tsmw.adm $r0, [$sp], $r27, #0xf\n+#endif\n+#ifdef NDS32_EXT_IFC\n+\tmfusr   $r1, $IFC_LP\n+\tsmw.adm $r1, [$sp], $r2, #0x0\t/* Save extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+#endif\n+\n+\tla\t$gp, _SDA_BASE_\t/* Init GP for small data access.  */\n+\tmove\t$r0, $sp\t/* Init parameter.  */\n+\tmfsr\t$r1, $ITYPE\t/* Check ITYPE for NMI or warm boot.  */\n+\tandi\t$r1, $r1, #0xf\n+\taddi\t$r1, $r1, #-1\n+\tbeqz\t$r1, 2f\t\t/* Warm boot if true.  */\n+\tl.w\t$r15, _nds32_nmih\t/* Load NMI handler.  */\n+\tj\t3f\n+2:\n+\tl.w\t$r15, _nds32_wrh\t/* Load warm boot handler.  */\n+3:\n+\tbeqz    $r15, 1f\t/* If no handler, do cold boot.  */\n+\tjral    $r15\t\t/* Call handler.  */\n+\tbnez    $r0, 1f\t\t/* If fail to resume, do cold boot.  */\n+\n+\t/* Restore registers for context-switching.  */\n+#ifdef NDS32_EXT_IFC\n+\tlmw.bim\t$r1, [$sp], $r2, #0x0\t/* Restore extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+\tmtusr   $r1, $IFC_LP\n+#endif\n+#ifdef __NDS32_REDUCED_REGS__\n+\t/* For 16-reg mode.  */\n+\tlmw.bim\t$r15, [$sp], $r15, #0xf\n+\tlmw.bim\t$r0, [$sp], $r10, #0x0\n+#else\n+\t/* For 32-reg mode.  */\n+\tlmw.bim $r0, [$sp], $r27, #0xf\n+#endif\n+\tiret\t/* Resume operation.  */\n+\n+\n+1:\t/* Cold boot.  */\n+\t/* With vector ID feature, set default vector size to 4B.  */\n+\t/* Set IVB.ESZ = 0 (vector table entry size = 4 bytes)  */\n+\tmfsr    $r0, $IVB\n+\tli      $r1, #0xc000\n+\tor      $r0, $r0, $r1\n+\txor     $r0, $r0, $r1\n+\tmtsr    $r0, $IVB\n+\tdsb\n+\n+\tla\t$gp, _SDA_BASE_\t\t/* Init $gp.  */\n+\tla\t$fp, _FP_BASE_\t\t/* Init $fp.  */\n+\tla\t$sp, _stack\t\t/* Init $sp.  */\n+#ifdef  NDS32_EXT_EX9\n+/*\n+ *\tInitialize the table base of EX9 instruction\n+ *\tex9 generation needs to disable before the ITB is set\n+ */\n+\tmfsr    $r0, $MSC_CFG\t/* Check if HW support of EX9.  */\n+\tsrli\t$r0, $r0, 24\n+\tandi\t$r0, $r0, 0x1\n+\tbeqz\t$r0, 4f\t\t/* Zero means HW does not support EX9.  */\n+\tla      $r0, _ITB_BASE_\t/* Init $ITB.  */\n+\tmtusr   $r0, $ITB\n+\t.no_ex9_end\n+4:\n+#endif\n+\tla\t$r15, _nds32_init_mem\t/* Call DRAM init. _nds32_init_mem\n+\t\t\t\t\t  may written by C language.  */\n+\tbeqz\t$r15, 6f\n+\tjral\t$r15\n+6:\n+\tl.w\t$r15, _nds32_jmptbl_00\t/* Load reset handler.  */\n+\tjral\t$r15\n+/* Reset handler() should never return in a RTOS or non-OS system.\n+   In case it does return, an exception will be generated.\n+   This exception will be caught either by default break handler or by EDM.\n+   Default break handle may just do an infinite loop.\n+   EDM will notify GDB and GDB will regain control when the ID is 0x7fff. */\n+5:\n+\tbreak    #0x7fff\n+\t.size\t_nds32_reset_4b, .-_nds32_reset_4b"}, {"sha": "a07995403582c07e8c3ddf17a492d6d0048acf58", "filename": "libgcc/config/nds32/isr-library/restore_all.inc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_all.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_all.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_all.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,45 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro RESTORE_ALL\n+\tsetgie.d\n+\tdsb\n+\tlmw.bim $r1, [$sp], $r2, #0x0   /* Restore IPC, IPSW.  */\n+\tmtsr\t$r1, $IPC\n+\tmtsr\t$r2, $IPSW\n+\tRESTORE_FPU_REGS\n+\tRESTORE_MAC_REGS\n+#ifdef NDS32_EXT_IFC\n+\tlmw.bim\t$r1, [$sp], $r2, #0x0\t/* Restore extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+\tmtusr   $r1, $IFC_LP\n+#endif\n+#ifdef __NDS32_REDUCED_REGS__\n+\tlmw.bim $r0, [$sp], $r10, #0x0\t/* Restore all regs.  */\n+\tlmw.bim $r15, [$sp], $r15, #0xf\n+#else /* not __NDS32_REDUCED_REGS__ */\n+\tlmw.bim $r0, [$sp], $r27, #0xf\t/* Restore all regs.  */\n+#endif\n+.endm"}, {"sha": "23a86c424a96e7bc918d2c2d23db5a4126c8d1db", "filename": "libgcc/config/nds32/isr-library/restore_fpu_regs.inc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,36 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro RESTORE_FPU_REGS\n+#if defined(NDS32_EXT_FPU_CONFIG_0)\n+\tRESTORE_FPU_REGS_00\n+#elif defined(NDS32_EXT_FPU_CONFIG_1)\n+\tRESTORE_FPU_REGS_01\n+#elif defined(NDS32_EXT_FPU_CONFIG_2)\n+\tRESTORE_FPU_REGS_02\n+#elif defined(NDS32_EXT_FPU_CONFIG_3)\n+\tRESTORE_FPU_REGS_03\n+#endif\n+.endm"}, {"sha": "a90a368fecf42537e34872e30a663b6c0c68de5d", "filename": "libgcc/config/nds32/isr-library/restore_fpu_regs_00.inc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_00.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_00.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_00.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,31 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro RESTORE_FPU_REGS_00\n+\tfldi.bi\t$fd0, [$sp], #8\n+\tfldi.bi\t$fd1, [$sp], #8\n+\tfldi.bi\t$fd2, [$sp], #8\n+\tfldi.bi\t$fd3, [$sp], #8\n+.endm"}, {"sha": "615e453092473a053bb038d965690f92c66006b7", "filename": "libgcc/config/nds32/isr-library/restore_fpu_regs_01.inc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_01.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_01.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_01.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,35 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro RESTORE_FPU_REGS_01\n+\tfldi.bi\t$fd0, [$sp], #8\n+\tfldi.bi\t$fd1, [$sp], #8\n+\tfldi.bi\t$fd2, [$sp], #8\n+\tfldi.bi\t$fd3, [$sp], #8\n+\tfldi.bi\t$fd4, [$sp], #8\n+\tfldi.bi\t$fd5, [$sp], #8\n+\tfldi.bi\t$fd6, [$sp], #8\n+\tfldi.bi\t$fd7, [$sp], #8\n+.endm"}, {"sha": "cfeed32451dfb7b03ecfa8f43bec167f9a20d373", "filename": "libgcc/config/nds32/isr-library/restore_fpu_regs_02.inc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_02.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_02.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_02.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,43 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro RESTORE_FPU_REGS_02\n+\tfldi.bi\t$fd0, [$sp], 8\n+\tfldi.bi\t$fd1, [$sp], 8\n+\tfldi.bi\t$fd2, [$sp], 8\n+\tfldi.bi\t$fd3, [$sp], 8\n+\tfldi.bi\t$fd4, [$sp], 8\n+\tfldi.bi\t$fd5, [$sp], 8\n+\tfldi.bi\t$fd6, [$sp], 8\n+\tfldi.bi\t$fd7, [$sp], 8\n+\tfldi.bi\t$fd8, [$sp], 8\n+\tfldi.bi\t$fd9, [$sp], 8\n+\tfldi.bi\t$fd10, [$sp], 8\n+\tfldi.bi\t$fd11, [$sp], 8\n+\tfldi.bi\t$fd12, [$sp], 8\n+\tfldi.bi\t$fd13, [$sp], 8\n+\tfldi.bi\t$fd14, [$sp], 8\n+\tfldi.bi\t$fd15, [$sp], 8\n+.endm"}, {"sha": "61391c9125957ddaa8f1bc931f594fd48ea54e66", "filename": "libgcc/config/nds32/isr-library/restore_fpu_regs_03.inc", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_03.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_03.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_fpu_regs_03.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,59 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro RESTORE_FPU_REGS_03\n+\tfldi.bi\t$fd0, [$sp], #8\n+\tfldi.bi\t$fd1, [$sp], #8\n+\tfldi.bi\t$fd2, [$sp], #8\n+\tfldi.bi\t$fd3, [$sp], #8\n+\tfldi.bi\t$fd4, [$sp], #8\n+\tfldi.bi\t$fd5, [$sp], #8\n+\tfldi.bi\t$fd6, [$sp], #8\n+\tfldi.bi\t$fd7, [$sp], #8\n+\tfldi.bi\t$fd8, [$sp], #8\n+\tfldi.bi\t$fd9, [$sp], #8\n+\tfldi.bi\t$fd10, [$sp], #8\n+\tfldi.bi\t$fd11, [$sp], #8\n+\tfldi.bi\t$fd12, [$sp], #8\n+\tfldi.bi\t$fd13, [$sp], #8\n+\tfldi.bi\t$fd14, [$sp], #8\n+\tfldi.bi\t$fd15, [$sp], #8\n+\tfldi.bi\t$fd16, [$sp], #8\n+\tfldi.bi\t$fd17, [$sp], #8\n+\tfldi.bi\t$fd18, [$sp], #8\n+\tfldi.bi\t$fd19, [$sp], #8\n+\tfldi.bi\t$fd20, [$sp], #8\n+\tfldi.bi\t$fd21, [$sp], #8\n+\tfldi.bi\t$fd22, [$sp], #8\n+\tfldi.bi\t$fd23, [$sp], #8\n+\tfldi.bi\t$fd24, [$sp], #8\n+\tfldi.bi\t$fd25, [$sp], #8\n+\tfldi.bi\t$fd26, [$sp], #8\n+\tfldi.bi\t$fd27, [$sp], #8\n+\tfldi.bi\t$fd28, [$sp], #8\n+\tfldi.bi\t$fd29, [$sp], #8\n+\tfldi.bi\t$fd30, [$sp], #8\n+\tfldi.bi\t$fd31, [$sp], #8\n+.endm"}, {"sha": "770817dd8175e7725b73822dab8abfbe2faf3f11", "filename": "libgcc/config/nds32/isr-library/restore_mac_regs.inc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_mac_regs.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_mac_regs.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_mac_regs.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro RESTORE_MAC_REGS\n+#ifdef NDS32_DX_REGS\n+\tlmw.bim\t$r1, [$sp], $r4, #0x0\n+\tmtusr\t$r1, $d0.lo\n+\tmtusr\t$r2, $d0.hi\n+\tmtusr\t$r3, $d1.lo\n+\tmtusr\t$r4, $d1.hi\n+#endif\n+.endm"}, {"sha": "eeb815f93d631f6856c2b10b728ed32cae6e7a1b", "filename": "libgcc/config/nds32/isr-library/restore_partial.inc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_partial.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_partial.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Frestore_partial.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,47 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro RESTORE_PARTIAL\n+#if defined(NDS32_NESTED) || defined(NDS32_NESTED_READY)\n+\tsetgie.d\n+\tdsb\n+\tlmw.bim $r1, [$sp], $r2, #0x0\t/* Restore IPC, IPSW.  */\n+\tmtsr $r1, $IPC\t/* Set IPC.  */\n+\tmtsr $r2, $IPSW\t/* Set IPSW.  */\n+#endif\n+\tRESTORE_FPU_REGS\n+\tRESTORE_MAC_REGS\n+#ifdef NDS32_EXT_IFC\n+\tlmw.bim\t$r1, [$sp], $r2, #0x0\t/* Restore extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+\tmtusr   $r1, $IFC_LP\n+#endif\n+\tlmw.bim $r0, [$sp], $r5, #0x0\t/* Restore all regs.  */\n+#ifdef __NDS32_REDUCED_REGS__\n+\tlmw.bim $r15, [$sp], $r15, #0x2\n+#else\n+\tlmw.bim $r15, [$sp], $r27, #0x2\t/* Restore all regs.  */\n+#endif\n+.endm"}, {"sha": "2ac053d71f8d53eb8b678aa8dc2c4d5f185b5fd5", "filename": "libgcc/config/nds32/isr-library/save_all.inc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_all.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_all.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_all.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,67 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro SAVE_ALL_4B\n+#ifdef __NDS32_REDUCED_REGS__\n+\tsmw.adm $r15, [$sp], $r15, #0xf\n+\tsmw.adm $r0, [$sp], $r10, #0x0\n+#else /* not __NDS32_REDUCED_REGS__ */\n+\tsmw.adm $r0, [$sp], $r27, #0xf\n+#endif /* not __NDS32_REDUCED_REGS__ */\n+#ifdef NDS32_EXT_IFC\n+\tmfusr   $r1, $IFC_LP\n+\tsmw.adm $r1, [$sp], $r2, #0x0\t/* Save extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+#endif\n+\tSAVE_MAC_REGS\n+\tSAVE_FPU_REGS\n+\tmfsr\t$r1, $IPC\t/* Get IPC.  */\n+\tmfsr\t$r2, $IPSW\t/* Get IPSW.  */\n+\tsmw.adm\t$r1, [$sp], $r2, #0x0\t/* Push IPC, IPSW.  */\n+\tmove\t$r1, $sp\t/* $r1 is ptr to NDS32_CONTEXT.  */\n+\tmfsr\t$r0, $ITYPE\t/* Get VID to $r0.  */\n+\tsrli\t$r0, $r0, #5\n+#ifdef __NDS32_ISA_V2__\n+\tandi\t$r0, $r0, #127\n+#else\n+\tfexti33\t$r0, #6\n+#endif\n+.endm\n+\n+.macro SAVE_ALL\n+/* SAVE_REG_TBL code has been moved to\n+   vector table generated by compiler.  */\n+#ifdef NDS32_EXT_IFC\n+\tmfusr   $r1, $IFC_LP\n+\tsmw.adm $r1, [$sp], $r2, #0x0\t/* Save extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+#endif\n+\tSAVE_MAC_REGS\n+\tSAVE_FPU_REGS\n+\tmfsr\t$r1, $IPC\t/* Get IPC.  */\n+\tmfsr\t$r2, $IPSW\t/* Get IPSW.  */\n+\tsmw.adm\t$r1, [$sp], $r2, #0x0\t/* Push IPC, IPSW.  */\n+\tmove\t$r1, $sp\t/* $r1 is ptr to NDS32_CONTEXT.  */\n+.endm"}, {"sha": "be3a504e440360a9f7c70188daa14ecccd5a8011", "filename": "libgcc/config/nds32/isr-library/save_fpu_regs.inc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,36 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro SAVE_FPU_REGS\n+#if defined(NDS32_EXT_FPU_CONFIG_0)\n+\tSAVE_FPU_REGS_00\n+#elif defined(NDS32_EXT_FPU_CONFIG_1)\n+\tSAVE_FPU_REGS_01\n+#elif defined(NDS32_EXT_FPU_CONFIG_2)\n+\tSAVE_FPU_REGS_02\n+#elif defined(NDS32_EXT_FPU_CONFIG_3)\n+\tSAVE_FPU_REGS_03\n+#endif\n+.endm"}, {"sha": "2514f59b90e1de8da3d38accc950931e84b126a3", "filename": "libgcc/config/nds32/isr-library/save_fpu_regs_00.inc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_00.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_00.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_00.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,33 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro SAVE_FPU_REGS_00\n+\taddi\t$sp, $sp, #-8\n+\tfsdi.bi\t$fd3, [$sp], #-8\n+\tfsdi.bi\t$fd2, [$sp], #-8\n+\tfsdi.bi\t$fd1, [$sp], #-8\n+\tfsdi.bi\t$fd0, [$sp], #-8\n+\taddi\t$sp, $sp, #8\n+.endm"}, {"sha": "1d605f2acdd536c2f1cb803f1e2d9061bf6bfbd7", "filename": "libgcc/config/nds32/isr-library/save_fpu_regs_01.inc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_01.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_01.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_01.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,37 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro SAVE_FPU_REGS_01\n+\taddi\t$sp, $sp, #-8\n+\tfsdi.bi\t$fd7, [$sp], #-8\n+\tfsdi.bi\t$fd6, [$sp], #-8\n+\tfsdi.bi\t$fd5, [$sp], #-8\n+\tfsdi.bi\t$fd4, [$sp], #-8\n+\tfsdi.bi\t$fd3, [$sp], #-8\n+\tfsdi.bi\t$fd2, [$sp], #-8\n+\tfsdi.bi\t$fd1, [$sp], #-8\n+\tfsdi.bi\t$fd0, [$sp], #-8\n+\taddi\t$sp, $sp, #8\n+.endm"}, {"sha": "30cb833ad0f1dfd1a5d83054e29ca7d6969fb27c", "filename": "libgcc/config/nds32/isr-library/save_fpu_regs_02.inc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_02.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_02.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_02.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,45 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro SAVE_FPU_REGS_02\n+\taddi\t$sp, $sp, #-8\n+\tfsdi.bi\t$fd15, [$sp], #-8\n+\tfsdi.bi\t$fd14, [$sp], #-8\n+\tfsdi.bi\t$fd13, [$sp], #-8\n+\tfsdi.bi\t$fd12, [$sp], #-8\n+\tfsdi.bi\t$fd11, [$sp], #-8\n+\tfsdi.bi\t$fd10, [$sp], #-8\n+\tfsdi.bi\t$fd9, [$sp], #-8\n+\tfsdi.bi\t$fd8, [$sp], #-8\n+\tfsdi.bi\t$fd7, [$sp], #-8\n+\tfsdi.bi\t$fd6, [$sp], #-8\n+\tfsdi.bi\t$fd5, [$sp], #-8\n+\tfsdi.bi\t$fd4, [$sp], #-8\n+\tfsdi.bi\t$fd3, [$sp], #-8\n+\tfsdi.bi\t$fd2, [$sp], #-8\n+\tfsdi.bi\t$fd1, [$sp], #-8\n+\tfsdi.bi\t$fd0, [$sp], #-8\n+\taddi\t$sp, $sp, #8\n+.endm"}, {"sha": "693e051a8478ecb873f699e7ed9323f863f8cc4c", "filename": "libgcc/config/nds32/isr-library/save_fpu_regs_03.inc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_03.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_03.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_fpu_regs_03.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,61 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro SAVE_FPU_REGS_03\n+\taddi\t$sp, $sp, #-8\n+\tfsdi.bi\t$fd31, [$sp], #-8\n+\tfsdi.bi\t$fd30, [$sp], #-8\n+\tfsdi.bi\t$fd29, [$sp], #-8\n+\tfsdi.bi\t$fd28, [$sp], #-8\n+\tfsdi.bi\t$fd27, [$sp], #-8\n+\tfsdi.bi\t$fd26, [$sp], #-8\n+\tfsdi.bi\t$fd25, [$sp], #-8\n+\tfsdi.bi\t$fd24, [$sp], #-8\n+\tfsdi.bi\t$fd23, [$sp], #-8\n+\tfsdi.bi\t$fd22, [$sp], #-8\n+\tfsdi.bi\t$fd21, [$sp], #-8\n+\tfsdi.bi\t$fd20, [$sp], #-8\n+\tfsdi.bi\t$fd19, [$sp], #-8\n+\tfsdi.bi\t$fd18, [$sp], #-8\n+\tfsdi.bi\t$fd17, [$sp], #-8\n+\tfsdi.bi\t$fd16, [$sp], #-8\n+\tfsdi.bi\t$fd15, [$sp], #-8\n+\tfsdi.bi\t$fd14, [$sp], #-8\n+\tfsdi.bi\t$fd13, [$sp], #-8\n+\tfsdi.bi\t$fd12, [$sp], #-8\n+\tfsdi.bi\t$fd11, [$sp], #-8\n+\tfsdi.bi\t$fd10, [$sp], #-8\n+\tfsdi.bi\t$fd9, [$sp], #-8\n+\tfsdi.bi\t$fd8, [$sp], #-8\n+\tfsdi.bi\t$fd7, [$sp], #-8\n+\tfsdi.bi\t$fd6, [$sp], #-8\n+\tfsdi.bi\t$fd5, [$sp], #-8\n+\tfsdi.bi\t$fd4, [$sp], #-8\n+\tfsdi.bi\t$fd3, [$sp], #-8\n+\tfsdi.bi\t$fd2, [$sp], #-8\n+\tfsdi.bi\t$fd1, [$sp], #-8\n+\tfsdi.bi\t$fd0, [$sp], #-8\n+\taddi\t$sp, $sp, #8\n+.endm"}, {"sha": "14c1851736fa92253bbbf0410af50c9435f64c9f", "filename": "libgcc/config/nds32/isr-library/save_mac_regs.inc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_mac_regs.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_mac_regs.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_mac_regs.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro SAVE_MAC_REGS\n+#ifdef NDS32_DX_REGS\n+\tmfusr\t$r1, $d0.lo\n+\tmfusr\t$r2, $d0.hi\n+\tmfusr\t$r3, $d1.lo\n+\tmfusr\t$r4, $d1.hi\n+\tsmw.adm\t$r1, [$sp], $r4, #0x0\n+#endif\n+.endm"}, {"sha": "61df3966d1e09535cca7df70c547fac25555338c", "filename": "libgcc/config/nds32/isr-library/save_partial.inc", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_partial.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_partial.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fsave_partial.inc?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,69 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+.macro SAVE_PARTIAL_4B\n+#ifdef __NDS32_REDUCED_REGS__\n+\tsmw.adm $r15, [$sp], $r15, #0x2\n+#else /* not __NDS32_REDUCED_REGS__ */\n+\tsmw.adm $r15, [$sp], $r27, #0x2\n+#endif /* not __NDS32_REDUCED_REGS__ */\n+\tsmw.adm $r0, [$sp], $r5, #0x0\n+#ifdef NDS32_EXT_IFC\n+\tmfusr   $r1, $IFC_LP\n+\tsmw.adm $r1, [$sp], $r2, #0x0\t/* Save extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+#endif\n+\tSAVE_MAC_REGS\n+\tSAVE_FPU_REGS\n+#if defined(NDS32_NESTED) || defined(NDS32_NESTED_READY)\n+       mfsr    $r1, $IPC       /* Get IPC.  */\n+       mfsr    $r2, $IPSW      /* Get IPSW.  */\n+       smw.adm $r1, [$sp], $r2, #0x0   /* Push IPC, IPSW.  */\n+#endif\n+\tmfsr\t$r0, $ITYPE\t/* Get VID to $r0.  */\n+\tsrli\t$r0, $r0, #5\n+#ifdef __NDS32_ISA_V2__\n+\tandi\t$r0, $r0, #127\n+#else\n+\tfexti33\t$r0, #6\n+#endif\n+.endm\n+\n+.macro SAVE_PARTIAL\n+/* SAVE_CALLER_REGS code has been moved to\n+   vector table generated by compiler.  */\n+#ifdef NDS32_EXT_IFC\n+\tmfusr   $r1, $IFC_LP\n+\tsmw.adm $r1, [$sp], $r2, #0x0\t/* Save extra $r2 to keep\n+\t\t\t\t\t   stack 8-byte alignment.  */\n+#endif\n+\tSAVE_MAC_REGS\n+\tSAVE_FPU_REGS\n+#if defined(NDS32_NESTED) || defined(NDS32_NESTED_READY)\n+       mfsr    $r1, $IPC       /* Get IPC.  */\n+       mfsr    $r2, $IPSW      /* Get IPSW.  */\n+       smw.adm $r1, [$sp], $r2, #0x0   /* Push IPC, IPSW.  */\n+#endif\n+.endm"}, {"sha": "cef2df23b21c36eaba6aba6a9b26c08d9032f93c", "filename": "libgcc/config/nds32/isr-library/vec_vid00.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid00.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid00.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid00.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.00, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_00\n+\t.type\t_nds32_vector_00, @function\n+_nds32_vector_00:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_00, .-_nds32_vector_00"}, {"sha": "957ac485e2aee6f73da5eaf99cfcc809d44c4852", "filename": "libgcc/config/nds32/isr-library/vec_vid00_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid00_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid00_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid00_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.00, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_00_4b\n+\t.type\t_nds32_vector_00_4b, @function\n+_nds32_vector_00_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_00_4b, .-_nds32_vector_00_4b"}, {"sha": "319d64bcd2049a3209656d409ba81ddf04a428ad", "filename": "libgcc/config/nds32/isr-library/vec_vid01.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid01.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid01.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid01.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.01, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_01\n+\t.type\t_nds32_vector_01, @function\n+_nds32_vector_01:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_01, .-_nds32_vector_01"}, {"sha": "ad52fcb9cc10d059e483e1c0d444b73ac89599cd", "filename": "libgcc/config/nds32/isr-library/vec_vid01_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid01_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid01_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid01_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.01, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_01_4b\n+\t.type\t_nds32_vector_01_4b, @function\n+_nds32_vector_01_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_01_4b, .-_nds32_vector_01_4b"}, {"sha": "4c98c5cebb523594ca9feb88a091fa7a32239751", "filename": "libgcc/config/nds32/isr-library/vec_vid02.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid02.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid02.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid02.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.02, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_02\n+\t.type\t_nds32_vector_02, @function\n+_nds32_vector_02:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_02, .-_nds32_vector_02"}, {"sha": "790356bc655fb11e054772e7fe72f11880544715", "filename": "libgcc/config/nds32/isr-library/vec_vid02_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid02_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid02_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid02_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.02, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_02_4b\n+\t.type\t_nds32_vector_02_4b, @function\n+_nds32_vector_02_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_02_4b, .-_nds32_vector_02_4b"}, {"sha": "7cca9aa754491a8253254dfd87bdc5d5d9a75450", "filename": "libgcc/config/nds32/isr-library/vec_vid03.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid03.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid03.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid03.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.03, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_03\n+\t.type\t_nds32_vector_03, @function\n+_nds32_vector_03:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_03, .-_nds32_vector_03"}, {"sha": "be756bf3d1dbbb1f14cf9ef4a0eaba42fe7182de", "filename": "libgcc/config/nds32/isr-library/vec_vid03_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid03_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid03_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid03_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.03, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_03_4b\n+\t.type\t_nds32_vector_03_4b, @function\n+_nds32_vector_03_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_03_4b, .-_nds32_vector_03_4b"}, {"sha": "ec9ea16cc911e7eae07f47df68cb680d3736ad00", "filename": "libgcc/config/nds32/isr-library/vec_vid04.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid04.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid04.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid04.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.04, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_04\n+\t.type\t_nds32_vector_04, @function\n+_nds32_vector_04:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_04, .-_nds32_vector_04"}, {"sha": "6883718814eefdf7337e71f163d08f2cf6899602", "filename": "libgcc/config/nds32/isr-library/vec_vid04_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid04_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid04_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid04_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.04, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_04_4b\n+\t.type\t_nds32_vector_04_4b, @function\n+_nds32_vector_04_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_04_4b, .-_nds32_vector_04_4b"}, {"sha": "38aa4d99d52665e2e0792359da35519d2ffb0394", "filename": "libgcc/config/nds32/isr-library/vec_vid05.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid05.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid05.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid05.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.05, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_05\n+\t.type\t_nds32_vector_05, @function\n+_nds32_vector_05:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_05, .-_nds32_vector_05"}, {"sha": "914287f69d411fcfedc7c15bc7745dc6919bd4cb", "filename": "libgcc/config/nds32/isr-library/vec_vid05_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid05_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid05_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid05_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.05, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_05_4b\n+\t.type\t_nds32_vector_05_4b, @function\n+_nds32_vector_05_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_05_4b, .-_nds32_vector_05_4b"}, {"sha": "8b1bcfb7ee8e1f25338594e1a02279cd27211f32", "filename": "libgcc/config/nds32/isr-library/vec_vid06.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid06.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid06.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid06.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.06, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_06\n+\t.type\t_nds32_vector_06, @function\n+_nds32_vector_06:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_06, .-_nds32_vector_06"}, {"sha": "c0bd26e2e6e9aef920a68a41bf5f104ff024d916", "filename": "libgcc/config/nds32/isr-library/vec_vid06_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid06_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid06_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid06_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.06, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_06_4b\n+\t.type\t_nds32_vector_06_4b, @function\n+_nds32_vector_06_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_06_4b, .-_nds32_vector_06_4b"}, {"sha": "b708ada47e94329a46c80d7006ac48885809e7c9", "filename": "libgcc/config/nds32/isr-library/vec_vid07.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid07.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid07.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid07.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.07, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_07\n+\t.type\t_nds32_vector_07, @function\n+_nds32_vector_07:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_07, .-_nds32_vector_07"}, {"sha": "3532551ab5e5af5b01c76c625210fe05f323430e", "filename": "libgcc/config/nds32/isr-library/vec_vid07_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid07_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid07_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid07_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.07, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_07_4b\n+\t.type\t_nds32_vector_07_4b, @function\n+_nds32_vector_07_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_07_4b, .-_nds32_vector_07_4b"}, {"sha": "3afb6e6cb1d71be6e7726f6b1f117483ba4b0e6c", "filename": "libgcc/config/nds32/isr-library/vec_vid08.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid08.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid08.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid08.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.08, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_08\n+\t.type\t_nds32_vector_08, @function\n+_nds32_vector_08:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_08, .-_nds32_vector_08"}, {"sha": "0493fefde64e1f6d33519bf1201fae37987bcb7c", "filename": "libgcc/config/nds32/isr-library/vec_vid08_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid08_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid08_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid08_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.08, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_08_4b\n+\t.type\t_nds32_vector_08_4b, @function\n+_nds32_vector_08_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_08_4b, .-_nds32_vector_08_4b"}, {"sha": "35747ec212d4f472f1a90ab81ccaf960ff118d08", "filename": "libgcc/config/nds32/isr-library/vec_vid09.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid09.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid09.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid09.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.09, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_09\n+\t.type\t_nds32_vector_09, @function\n+_nds32_vector_09:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_09, .-_nds32_vector_09"}, {"sha": "d44f9b22ac085825c403a0a132294eaedaea0bf8", "filename": "libgcc/config/nds32/isr-library/vec_vid09_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid09_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid09_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid09_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.09, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_09_4b\n+\t.type\t_nds32_vector_09_4b, @function\n+_nds32_vector_09_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_09_4b, .-_nds32_vector_09_4b"}, {"sha": "71ab8ac056b9b861ff60ef73c8eac38ee4f2ac43", "filename": "libgcc/config/nds32/isr-library/vec_vid10.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid10.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid10.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid10.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.10, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_10\n+\t.type\t_nds32_vector_10, @function\n+_nds32_vector_10:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_10, .-_nds32_vector_10"}, {"sha": "49fd669f10dd623c6eef1798928d0b31254b229c", "filename": "libgcc/config/nds32/isr-library/vec_vid10_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid10_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid10_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid10_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.10, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_10_4b\n+\t.type\t_nds32_vector_10_4b, @function\n+_nds32_vector_10_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_10_4b, .-_nds32_vector_10_4b"}, {"sha": "732559d17e2e6aa908225f8fec759434a4b2db84", "filename": "libgcc/config/nds32/isr-library/vec_vid11.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid11.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid11.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid11.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.11, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_11\n+\t.type\t_nds32_vector_11, @function\n+_nds32_vector_11:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_11, .-_nds32_vector_11"}, {"sha": "e878e36c947d67032472658d6b5aaa18d42bd35d", "filename": "libgcc/config/nds32/isr-library/vec_vid11_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid11_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid11_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid11_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.11, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_11_4b\n+\t.type\t_nds32_vector_11_4b, @function\n+_nds32_vector_11_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_11_4b, .-_nds32_vector_11_4b"}, {"sha": "5d78fbb2e6821dfb00ded1aaf5cb3d91d1e9557c", "filename": "libgcc/config/nds32/isr-library/vec_vid12.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid12.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid12.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid12.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.12, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_12\n+\t.type\t_nds32_vector_12, @function\n+_nds32_vector_12:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_12, .-_nds32_vector_12"}, {"sha": "a03e8d89b6d1f54f3d800f8a7e1eb359fdf72452", "filename": "libgcc/config/nds32/isr-library/vec_vid12_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid12_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid12_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid12_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.12, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_12_4b\n+\t.type\t_nds32_vector_12_4b, @function\n+_nds32_vector_12_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_12_4b, .-_nds32_vector_12_4b"}, {"sha": "3df6a1e4299dd20064971780f46d614ac1ef28e7", "filename": "libgcc/config/nds32/isr-library/vec_vid13.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid13.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid13.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid13.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.13, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_13\n+\t.type\t_nds32_vector_13, @function\n+_nds32_vector_13:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_13, .-_nds32_vector_13"}, {"sha": "2117edb43ce0d315efb804e9834bbb50b21840e9", "filename": "libgcc/config/nds32/isr-library/vec_vid13_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid13_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid13_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid13_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.13, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_13_4b\n+\t.type\t_nds32_vector_13_4b, @function\n+_nds32_vector_13_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_13_4b, .-_nds32_vector_13_4b"}, {"sha": "8a554bebad985ccb8c82c2145c444239fb6fc7df", "filename": "libgcc/config/nds32/isr-library/vec_vid14.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid14.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid14.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid14.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.14, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_14\n+\t.type\t_nds32_vector_14, @function\n+_nds32_vector_14:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_14, .-_nds32_vector_14"}, {"sha": "1c5bf2dbdaa0bac83a098aa69148a01154813e18", "filename": "libgcc/config/nds32/isr-library/vec_vid14_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid14_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid14_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid14_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.14, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_14_4b\n+\t.type\t_nds32_vector_14_4b, @function\n+_nds32_vector_14_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_14_4b, .-_nds32_vector_14_4b"}, {"sha": "1d49d62f42fa9226a9466a5a6f2cc6ef391f3f3e", "filename": "libgcc/config/nds32/isr-library/vec_vid15.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid15.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid15.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid15.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.15, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_15\n+\t.type\t_nds32_vector_15, @function\n+_nds32_vector_15:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_15, .-_nds32_vector_15"}, {"sha": "ffa8ea9aec8ec458ef2a6cc0a0a59a0eccb1b422", "filename": "libgcc/config/nds32/isr-library/vec_vid15_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid15_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid15_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid15_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.15, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_15_4b\n+\t.type\t_nds32_vector_15_4b, @function\n+_nds32_vector_15_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_15_4b, .-_nds32_vector_15_4b"}, {"sha": "70d6ab365927a1f71596d630f5cc91bfd0543b9b", "filename": "libgcc/config/nds32/isr-library/vec_vid16.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid16.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid16.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid16.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.16, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_16\n+\t.type\t_nds32_vector_16, @function\n+_nds32_vector_16:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_16, .-_nds32_vector_16"}, {"sha": "133fe6a2123eb5e1239f2682c0cf28666cb44176", "filename": "libgcc/config/nds32/isr-library/vec_vid16_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid16_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid16_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid16_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.16, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_16_4b\n+\t.type\t_nds32_vector_16_4b, @function\n+_nds32_vector_16_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_16_4b, .-_nds32_vector_16_4b"}, {"sha": "8eb871eb7f5d66be284420bdfd4ed2885881c724", "filename": "libgcc/config/nds32/isr-library/vec_vid17.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid17.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid17.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid17.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.17, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_17\n+\t.type\t_nds32_vector_17, @function\n+_nds32_vector_17:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_17, .-_nds32_vector_17"}, {"sha": "e10e7d6596318b426440b005028758d274563cb6", "filename": "libgcc/config/nds32/isr-library/vec_vid17_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid17_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid17_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid17_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.17, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_17_4b\n+\t.type\t_nds32_vector_17_4b, @function\n+_nds32_vector_17_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_17_4b, .-_nds32_vector_17_4b"}, {"sha": "3699454153ea044fbba3f9ccc137016f8a30c527", "filename": "libgcc/config/nds32/isr-library/vec_vid18.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid18.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid18.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid18.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.18, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_18\n+\t.type\t_nds32_vector_18, @function\n+_nds32_vector_18:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_18, .-_nds32_vector_18"}, {"sha": "e52910210a8c12c8c66b52e064c7f2504304a77f", "filename": "libgcc/config/nds32/isr-library/vec_vid18_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid18_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid18_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid18_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.18, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_18_4b\n+\t.type\t_nds32_vector_18_4b, @function\n+_nds32_vector_18_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_18_4b, .-_nds32_vector_18_4b"}, {"sha": "b572bf9516ab21c13bed96d86b380f0f9be85084", "filename": "libgcc/config/nds32/isr-library/vec_vid19.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid19.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid19.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid19.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.19, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_19\n+\t.type\t_nds32_vector_19, @function\n+_nds32_vector_19:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_19, .-_nds32_vector_19"}, {"sha": "49462674f2a6358f371f33093885a5808609218f", "filename": "libgcc/config/nds32/isr-library/vec_vid19_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid19_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid19_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid19_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.19, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_19_4b\n+\t.type\t_nds32_vector_19_4b, @function\n+_nds32_vector_19_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_19_4b, .-_nds32_vector_19_4b"}, {"sha": "c8fa4194cfc97f6093b17e7937af8904a18dd061", "filename": "libgcc/config/nds32/isr-library/vec_vid20.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid20.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid20.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid20.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.20, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_20\n+\t.type\t_nds32_vector_20, @function\n+_nds32_vector_20:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_20, .-_nds32_vector_20"}, {"sha": "95ab917030866976af4af2ddd9f192b31269f578", "filename": "libgcc/config/nds32/isr-library/vec_vid20_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid20_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid20_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid20_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.20, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_20_4b\n+\t.type\t_nds32_vector_20_4b, @function\n+_nds32_vector_20_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_20_4b, .-_nds32_vector_20_4b"}, {"sha": "8fc8cc706b764d24d6c6f400a3fb3020b3e04cc2", "filename": "libgcc/config/nds32/isr-library/vec_vid21.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid21.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid21.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid21.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.21, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_21\n+\t.type\t_nds32_vector_21, @function\n+_nds32_vector_21:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_21, .-_nds32_vector_21"}, {"sha": "33956bbbc33a8cfca24ccbe4e707ab431edb4867", "filename": "libgcc/config/nds32/isr-library/vec_vid21_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid21_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid21_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid21_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.21, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_21_4b\n+\t.type\t_nds32_vector_21_4b, @function\n+_nds32_vector_21_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_21_4b, .-_nds32_vector_21_4b"}, {"sha": "8e71ecb856a283a4603779f589caad267f46ea6a", "filename": "libgcc/config/nds32/isr-library/vec_vid22.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid22.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid22.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid22.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.22, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_22\n+\t.type\t_nds32_vector_22, @function\n+_nds32_vector_22:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_22, .-_nds32_vector_22"}, {"sha": "5ecd38261e774b6a4416249b5e249b914bfb3efa", "filename": "libgcc/config/nds32/isr-library/vec_vid22_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid22_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid22_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid22_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.22, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_22_4b\n+\t.type\t_nds32_vector_22_4b, @function\n+_nds32_vector_22_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_22_4b, .-_nds32_vector_22_4b"}, {"sha": "c9f2ae3bfb9eb75767f8aaae1751c55bf712dcf9", "filename": "libgcc/config/nds32/isr-library/vec_vid23.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid23.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid23.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid23.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.23, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_23\n+\t.type\t_nds32_vector_23, @function\n+_nds32_vector_23:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_23, .-_nds32_vector_23"}, {"sha": "eb7ea1f15ee557ca16412083f4eaba0e0d4e18f4", "filename": "libgcc/config/nds32/isr-library/vec_vid23_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid23_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid23_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid23_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.23, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_23_4b\n+\t.type\t_nds32_vector_23_4b, @function\n+_nds32_vector_23_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_23_4b, .-_nds32_vector_23_4b"}, {"sha": "dc16e56267d12274497f025a3f56b6cc5cdbe863", "filename": "libgcc/config/nds32/isr-library/vec_vid24.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid24.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid24.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid24.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.24, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_24\n+\t.type\t_nds32_vector_24, @function\n+_nds32_vector_24:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_24, .-_nds32_vector_24"}, {"sha": "023cee9e83aabab37843e308dfbf9126354d4e8f", "filename": "libgcc/config/nds32/isr-library/vec_vid24_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid24_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid24_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid24_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.24, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_24_4b\n+\t.type\t_nds32_vector_24_4b, @function\n+_nds32_vector_24_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_24_4b, .-_nds32_vector_24_4b"}, {"sha": "cc0c06231507801450b51f9e57156dc3d616a6f9", "filename": "libgcc/config/nds32/isr-library/vec_vid25.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid25.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid25.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid25.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.25, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_25\n+\t.type\t_nds32_vector_25, @function\n+_nds32_vector_25:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_25, .-_nds32_vector_25"}, {"sha": "f9c747829c243d21a141e8545b9817453362b0f7", "filename": "libgcc/config/nds32/isr-library/vec_vid25_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid25_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid25_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid25_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.25, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_25_4b\n+\t.type\t_nds32_vector_25_4b, @function\n+_nds32_vector_25_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_25_4b, .-_nds32_vector_25_4b"}, {"sha": "8afb5f78850067734524b29029faad7ad71c42bb", "filename": "libgcc/config/nds32/isr-library/vec_vid26.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid26.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid26.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid26.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.26, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_26\n+\t.type\t_nds32_vector_26, @function\n+_nds32_vector_26:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_26, .-_nds32_vector_26"}, {"sha": "51aea6c5ffb1bdef4e689d11480f2d37ed226c08", "filename": "libgcc/config/nds32/isr-library/vec_vid26_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid26_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid26_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid26_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.26, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_26_4b\n+\t.type\t_nds32_vector_26_4b, @function\n+_nds32_vector_26_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_26_4b, .-_nds32_vector_26_4b"}, {"sha": "5babf0761c56b7a298c6903a2a099f2677c4d7b7", "filename": "libgcc/config/nds32/isr-library/vec_vid27.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid27.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid27.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid27.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.27, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_27\n+\t.type\t_nds32_vector_27, @function\n+_nds32_vector_27:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_27, .-_nds32_vector_27"}, {"sha": "7a6e8705f0f426f52ceec35b9a7f4de9152497cb", "filename": "libgcc/config/nds32/isr-library/vec_vid27_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid27_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid27_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid27_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.27, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_27_4b\n+\t.type\t_nds32_vector_27_4b, @function\n+_nds32_vector_27_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_27_4b, .-_nds32_vector_27_4b"}, {"sha": "3600b9c17386e0817581c6196b988f2df3908546", "filename": "libgcc/config/nds32/isr-library/vec_vid28.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid28.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid28.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid28.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.28, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_28\n+\t.type\t_nds32_vector_28, @function\n+_nds32_vector_28:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_28, .-_nds32_vector_28"}, {"sha": "5c7529562695e9438cb48eb6e9fb43e11651508a", "filename": "libgcc/config/nds32/isr-library/vec_vid28_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid28_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid28_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid28_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.28, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_28_4b\n+\t.type\t_nds32_vector_28_4b, @function\n+_nds32_vector_28_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_28_4b, .-_nds32_vector_28_4b"}, {"sha": "02f8e9ceb62804550c81b404cdd57dd6bfac544a", "filename": "libgcc/config/nds32/isr-library/vec_vid29.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid29.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid29.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid29.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.29, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_29\n+\t.type\t_nds32_vector_29, @function\n+_nds32_vector_29:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_29, .-_nds32_vector_29"}, {"sha": "48412f0c6b9f1db4962d27969c22053c189cf695", "filename": "libgcc/config/nds32/isr-library/vec_vid29_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid29_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid29_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid29_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.29, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_29_4b\n+\t.type\t_nds32_vector_29_4b, @function\n+_nds32_vector_29_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_29_4b, .-_nds32_vector_29_4b"}, {"sha": "e08d7e8be0f41132cbd81e51fd442a424e75ab7a", "filename": "libgcc/config/nds32/isr-library/vec_vid30.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid30.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid30.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid30.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.30, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_30\n+\t.type\t_nds32_vector_30, @function\n+_nds32_vector_30:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_30, .-_nds32_vector_30"}, {"sha": "362657273773437d8e78efed475f81272aa985cc", "filename": "libgcc/config/nds32/isr-library/vec_vid30_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid30_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid30_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid30_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.30, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_30_4b\n+\t.type\t_nds32_vector_30_4b, @function\n+_nds32_vector_30_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_30_4b, .-_nds32_vector_30_4b"}, {"sha": "b6aba1d2c40495899de82c9e314f995d48e488c5", "filename": "libgcc/config/nds32/isr-library/vec_vid31.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid31.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid31.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid31.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.31, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_31\n+\t.type\t_nds32_vector_31, @function\n+_nds32_vector_31:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_31, .-_nds32_vector_31"}, {"sha": "460bf5266dada189aab23c80dc9c56c983da3176", "filename": "libgcc/config/nds32/isr-library/vec_vid31_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid31_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid31_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid31_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.31, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_31_4b\n+\t.type\t_nds32_vector_31_4b, @function\n+_nds32_vector_31_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_31_4b, .-_nds32_vector_31_4b"}, {"sha": "278e191b43e08097bc89445be94ccd010148b757", "filename": "libgcc/config/nds32/isr-library/vec_vid32.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid32.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.32, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_32\n+\t.type\t_nds32_vector_32, @function\n+_nds32_vector_32:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_32, .-_nds32_vector_32"}, {"sha": "d3b74f8129cec8028942358bf3128e1935751d77", "filename": "libgcc/config/nds32/isr-library/vec_vid32_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid32_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid32_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid32_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.32, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_32_4b\n+\t.type\t_nds32_vector_32_4b, @function\n+_nds32_vector_32_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_32_4b, .-_nds32_vector_32_4b"}, {"sha": "320289db05e8256470ce5aec2e0df7c4bfeac4d8", "filename": "libgcc/config/nds32/isr-library/vec_vid33.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid33.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid33.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid33.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.33, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_33\n+\t.type\t_nds32_vector_33, @function\n+_nds32_vector_33:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_33, .-_nds32_vector_33"}, {"sha": "fd3c997697e7e09988d370f94f16fa275d6c4484", "filename": "libgcc/config/nds32/isr-library/vec_vid33_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid33_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid33_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid33_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.33, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_33_4b\n+\t.type\t_nds32_vector_33_4b, @function\n+_nds32_vector_33_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_33_4b, .-_nds32_vector_33_4b"}, {"sha": "b9a99893386591b59bc49b533de9011249f0063b", "filename": "libgcc/config/nds32/isr-library/vec_vid34.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid34.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid34.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid34.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.34, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_34\n+\t.type\t_nds32_vector_34, @function\n+_nds32_vector_34:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_34, .-_nds32_vector_34"}, {"sha": "0b726f6790cc7320e6483676a6d3aac8955d7ffc", "filename": "libgcc/config/nds32/isr-library/vec_vid34_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid34_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid34_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid34_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.34, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_34_4b\n+\t.type\t_nds32_vector_34_4b, @function\n+_nds32_vector_34_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_34_4b, .-_nds32_vector_34_4b"}, {"sha": "e53017d88da8520d8a331b5bcc48161506cbf35d", "filename": "libgcc/config/nds32/isr-library/vec_vid35.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid35.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid35.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid35.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.35, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_35\n+\t.type\t_nds32_vector_35, @function\n+_nds32_vector_35:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_35, .-_nds32_vector_35"}, {"sha": "7ac998faa6d09e12cf0923d32e174b494da4adbd", "filename": "libgcc/config/nds32/isr-library/vec_vid35_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid35_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid35_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid35_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.35, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_35_4b\n+\t.type\t_nds32_vector_35_4b, @function\n+_nds32_vector_35_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_35_4b, .-_nds32_vector_35_4b"}, {"sha": "2d3779c9ef50d60cd1b456e4d907ab9bf24ef160", "filename": "libgcc/config/nds32/isr-library/vec_vid36.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid36.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid36.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid36.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.36, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_36\n+\t.type\t_nds32_vector_36, @function\n+_nds32_vector_36:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_36, .-_nds32_vector_36"}, {"sha": "54230ac22b7d70c29e85ae1a64aa7724ccb82934", "filename": "libgcc/config/nds32/isr-library/vec_vid36_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid36_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid36_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid36_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.36, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_36_4b\n+\t.type\t_nds32_vector_36_4b, @function\n+_nds32_vector_36_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_36_4b, .-_nds32_vector_36_4b"}, {"sha": "1b4066f99d324f94e6183f67dfeccff5d43019a2", "filename": "libgcc/config/nds32/isr-library/vec_vid37.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid37.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid37.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid37.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.37, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_37\n+\t.type\t_nds32_vector_37, @function\n+_nds32_vector_37:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_37, .-_nds32_vector_37"}, {"sha": "f3a50b2f60e3484b89466dc8b3d3653f4068f06d", "filename": "libgcc/config/nds32/isr-library/vec_vid37_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid37_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid37_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid37_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.37, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_37_4b\n+\t.type\t_nds32_vector_37_4b, @function\n+_nds32_vector_37_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_37_4b, .-_nds32_vector_37_4b"}, {"sha": "d626d3c3703112130e601c3da90bca75559723fd", "filename": "libgcc/config/nds32/isr-library/vec_vid38.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid38.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid38.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid38.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.38, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_38\n+\t.type\t_nds32_vector_38, @function\n+_nds32_vector_38:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_38, .-_nds32_vector_38"}, {"sha": "677145fea4d2b144e4af75b4956de32bf533c757", "filename": "libgcc/config/nds32/isr-library/vec_vid38_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid38_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid38_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid38_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.38, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_38_4b\n+\t.type\t_nds32_vector_38_4b, @function\n+_nds32_vector_38_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_38_4b, .-_nds32_vector_38_4b"}, {"sha": "bbb376378e05154a71de6219da7f996ea578465f", "filename": "libgcc/config/nds32/isr-library/vec_vid39.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid39.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid39.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid39.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.39, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_39\n+\t.type\t_nds32_vector_39, @function\n+_nds32_vector_39:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_39, .-_nds32_vector_39"}, {"sha": "b5cd07e6a6d29045f954d47ed0b91678e7b8581c", "filename": "libgcc/config/nds32/isr-library/vec_vid39_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid39_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid39_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid39_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.39, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_39_4b\n+\t.type\t_nds32_vector_39_4b, @function\n+_nds32_vector_39_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_39_4b, .-_nds32_vector_39_4b"}, {"sha": "48c2eea75376d6fdf2b53b1454ef1168b480c0ab", "filename": "libgcc/config/nds32/isr-library/vec_vid40.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid40.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid40.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid40.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.40, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_40\n+\t.type\t_nds32_vector_40, @function\n+_nds32_vector_40:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_40, .-_nds32_vector_40"}, {"sha": "201988c43db46962d832616d4b6b7ad9ad11c7de", "filename": "libgcc/config/nds32/isr-library/vec_vid40_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid40_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid40_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid40_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.40, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_40_4b\n+\t.type\t_nds32_vector_40_4b, @function\n+_nds32_vector_40_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_40_4b, .-_nds32_vector_40_4b"}, {"sha": "7be5dfdf55d9e318ae909bf65cfd20757e0413fc", "filename": "libgcc/config/nds32/isr-library/vec_vid41.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid41.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid41.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid41.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.41, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_41\n+\t.type\t_nds32_vector_41, @function\n+_nds32_vector_41:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_41, .-_nds32_vector_41"}, {"sha": "1b8b57132ea09d62e76761aa88fe98bde3cc76b2", "filename": "libgcc/config/nds32/isr-library/vec_vid41_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid41_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid41_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid41_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.41, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_41_4b\n+\t.type\t_nds32_vector_41_4b, @function\n+_nds32_vector_41_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_41_4b, .-_nds32_vector_41_4b"}, {"sha": "f16127ba843b66113f711bfbe6602fc87f37f954", "filename": "libgcc/config/nds32/isr-library/vec_vid42.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid42.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid42.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid42.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.42, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_42\n+\t.type\t_nds32_vector_42, @function\n+_nds32_vector_42:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_42, .-_nds32_vector_42"}, {"sha": "9bf7a5dff32f57140cb580afae0fe619a67a44de", "filename": "libgcc/config/nds32/isr-library/vec_vid42_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid42_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid42_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid42_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.42, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_42_4b\n+\t.type\t_nds32_vector_42_4b, @function\n+_nds32_vector_42_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_42_4b, .-_nds32_vector_42_4b"}, {"sha": "eecfa98e5c2bd90998a273d962f8df99955915ec", "filename": "libgcc/config/nds32/isr-library/vec_vid43.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid43.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid43.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid43.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.43, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_43\n+\t.type\t_nds32_vector_43, @function\n+_nds32_vector_43:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_43, .-_nds32_vector_43"}, {"sha": "0c9e5a44ffb502e535f3fa8ebcb369a0af366397", "filename": "libgcc/config/nds32/isr-library/vec_vid43_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid43_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid43_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid43_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.43, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_43_4b\n+\t.type\t_nds32_vector_43_4b, @function\n+_nds32_vector_43_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_43_4b, .-_nds32_vector_43_4b"}, {"sha": "47e24a41831b90a4e2a7af57ac0d6f617dea6a2f", "filename": "libgcc/config/nds32/isr-library/vec_vid44.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid44.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid44.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid44.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.44, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_44\n+\t.type\t_nds32_vector_44, @function\n+_nds32_vector_44:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_44, .-_nds32_vector_44"}, {"sha": "43aa995b1e54374256f9d02e47f7e2a015145568", "filename": "libgcc/config/nds32/isr-library/vec_vid44_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid44_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid44_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid44_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.44, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_44_4b\n+\t.type\t_nds32_vector_44_4b, @function\n+_nds32_vector_44_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_44_4b, .-_nds32_vector_44_4b"}, {"sha": "711aba55969691c70b8fe41ffe7c6e54ffd75cb5", "filename": "libgcc/config/nds32/isr-library/vec_vid45.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid45.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid45.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid45.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.45, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_45\n+\t.type\t_nds32_vector_45, @function\n+_nds32_vector_45:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_45, .-_nds32_vector_45"}, {"sha": "96b505ead26fca0f8b80bf998c0cb8be8646ea4c", "filename": "libgcc/config/nds32/isr-library/vec_vid45_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid45_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid45_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid45_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.45, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_45_4b\n+\t.type\t_nds32_vector_45_4b, @function\n+_nds32_vector_45_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_45_4b, .-_nds32_vector_45_4b"}, {"sha": "0c86a8c4eb408d3273b245613e277cea8bc8bca7", "filename": "libgcc/config/nds32/isr-library/vec_vid46.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid46.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid46.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid46.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.46, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_46\n+\t.type\t_nds32_vector_46, @function\n+_nds32_vector_46:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_46, .-_nds32_vector_46"}, {"sha": "1e3dee61f5c05df8d23de0f1572dfefc6ef24ac7", "filename": "libgcc/config/nds32/isr-library/vec_vid46_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid46_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid46_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid46_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.46, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_46_4b\n+\t.type\t_nds32_vector_46_4b, @function\n+_nds32_vector_46_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_46_4b, .-_nds32_vector_46_4b"}, {"sha": "729540185595ec8c2547343c212582bff1402759", "filename": "libgcc/config/nds32/isr-library/vec_vid47.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid47.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid47.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid47.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.47, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_47\n+\t.type\t_nds32_vector_47, @function\n+_nds32_vector_47:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_47, .-_nds32_vector_47"}, {"sha": "e8556c21fbc2f3029baa6429a8069b786e6cf1fc", "filename": "libgcc/config/nds32/isr-library/vec_vid47_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid47_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid47_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid47_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.47, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_47_4b\n+\t.type\t_nds32_vector_47_4b, @function\n+_nds32_vector_47_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_47_4b, .-_nds32_vector_47_4b"}, {"sha": "92c583aecb44fe896338f5cd13e5d9f2b4780054", "filename": "libgcc/config/nds32/isr-library/vec_vid48.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid48.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid48.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid48.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.48, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_48\n+\t.type\t_nds32_vector_48, @function\n+_nds32_vector_48:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_48, .-_nds32_vector_48"}, {"sha": "c998a55f90fce96cf3dfec7f3107ee9fd653c157", "filename": "libgcc/config/nds32/isr-library/vec_vid48_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid48_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid48_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid48_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.48, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_48_4b\n+\t.type\t_nds32_vector_48_4b, @function\n+_nds32_vector_48_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_48_4b, .-_nds32_vector_48_4b"}, {"sha": "c1b1677d0327cfa336ba8ed074d3ca43d1369511", "filename": "libgcc/config/nds32/isr-library/vec_vid49.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid49.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid49.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid49.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.49, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_49\n+\t.type\t_nds32_vector_49, @function\n+_nds32_vector_49:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_49, .-_nds32_vector_49"}, {"sha": "0c18eee1761fd0c8ccec5441fcca6a1171b22d3c", "filename": "libgcc/config/nds32/isr-library/vec_vid49_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid49_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid49_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid49_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.49, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_49_4b\n+\t.type\t_nds32_vector_49_4b, @function\n+_nds32_vector_49_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_49_4b, .-_nds32_vector_49_4b"}, {"sha": "910ad0284365e00c48925851049a7cc5c5a0f17d", "filename": "libgcc/config/nds32/isr-library/vec_vid50.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid50.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid50.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid50.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.50, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_50\n+\t.type\t_nds32_vector_50, @function\n+_nds32_vector_50:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_50, .-_nds32_vector_50"}, {"sha": "1ec0b700244be507e7de5039ba9a404c559741b9", "filename": "libgcc/config/nds32/isr-library/vec_vid50_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid50_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid50_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid50_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.50, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_50_4b\n+\t.type\t_nds32_vector_50_4b, @function\n+_nds32_vector_50_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_50_4b, .-_nds32_vector_50_4b"}, {"sha": "2053ebccf3a68767874dcf34751600263f09efdb", "filename": "libgcc/config/nds32/isr-library/vec_vid51.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid51.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid51.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid51.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.51, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_51\n+\t.type\t_nds32_vector_51, @function\n+_nds32_vector_51:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_51, .-_nds32_vector_51"}, {"sha": "38c02107ce577a8012f7485ab795b6fc36cc0c1d", "filename": "libgcc/config/nds32/isr-library/vec_vid51_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid51_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid51_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid51_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.51, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_51_4b\n+\t.type\t_nds32_vector_51_4b, @function\n+_nds32_vector_51_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_51_4b, .-_nds32_vector_51_4b"}, {"sha": "6eaac798038040838e20ad89d6fa88eae193e0de", "filename": "libgcc/config/nds32/isr-library/vec_vid52.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid52.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid52.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid52.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.52, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_52\n+\t.type\t_nds32_vector_52, @function\n+_nds32_vector_52:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_52, .-_nds32_vector_52"}, {"sha": "de8a92830426bbb07770e7746c729036f70a6e08", "filename": "libgcc/config/nds32/isr-library/vec_vid52_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid52_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid52_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid52_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.52, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_52_4b\n+\t.type\t_nds32_vector_52_4b, @function\n+_nds32_vector_52_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_52_4b, .-_nds32_vector_52_4b"}, {"sha": "8ac761394b116ed3293e0ba8db5409eecc7c1444", "filename": "libgcc/config/nds32/isr-library/vec_vid53.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid53.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid53.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid53.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.53, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_53\n+\t.type\t_nds32_vector_53, @function\n+_nds32_vector_53:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_53, .-_nds32_vector_53"}, {"sha": "564346c23470b621087a5161b681f92a29feb6e4", "filename": "libgcc/config/nds32/isr-library/vec_vid53_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid53_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid53_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid53_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.53, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_53_4b\n+\t.type\t_nds32_vector_53_4b, @function\n+_nds32_vector_53_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_53_4b, .-_nds32_vector_53_4b"}, {"sha": "ef222ada15d76179fe79f50e26a62e041e6c6323", "filename": "libgcc/config/nds32/isr-library/vec_vid54.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid54.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid54.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid54.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.54, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_54\n+\t.type\t_nds32_vector_54, @function\n+_nds32_vector_54:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_54, .-_nds32_vector_54"}, {"sha": "104b7e7958e3d929d387e2a93040f1a79fc91953", "filename": "libgcc/config/nds32/isr-library/vec_vid54_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid54_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid54_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid54_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.54, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_54_4b\n+\t.type\t_nds32_vector_54_4b, @function\n+_nds32_vector_54_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_54_4b, .-_nds32_vector_54_4b"}, {"sha": "c061e69f1b9cae3c05ee349f51fe7567e0758685", "filename": "libgcc/config/nds32/isr-library/vec_vid55.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid55.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid55.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid55.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.55, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_55\n+\t.type\t_nds32_vector_55, @function\n+_nds32_vector_55:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_55, .-_nds32_vector_55"}, {"sha": "15fced687f27047fae487669abb0008f7232be88", "filename": "libgcc/config/nds32/isr-library/vec_vid55_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid55_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid55_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid55_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.55, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_55_4b\n+\t.type\t_nds32_vector_55_4b, @function\n+_nds32_vector_55_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_55_4b, .-_nds32_vector_55_4b"}, {"sha": "d7c305a87549458f0910e8843968ef2c7ea0693f", "filename": "libgcc/config/nds32/isr-library/vec_vid56.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid56.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid56.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid56.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.56, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_56\n+\t.type\t_nds32_vector_56, @function\n+_nds32_vector_56:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_56, .-_nds32_vector_56"}, {"sha": "e8b975c8f4121fb85f42a2ffa3afc09504b1a2ef", "filename": "libgcc/config/nds32/isr-library/vec_vid56_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid56_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid56_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid56_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.56, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_56_4b\n+\t.type\t_nds32_vector_56_4b, @function\n+_nds32_vector_56_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_56_4b, .-_nds32_vector_56_4b"}, {"sha": "b701bbab67f312e28758830ad0d13c4c819b0061", "filename": "libgcc/config/nds32/isr-library/vec_vid57.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid57.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid57.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid57.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.57, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_57\n+\t.type\t_nds32_vector_57, @function\n+_nds32_vector_57:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_57, .-_nds32_vector_57"}, {"sha": "ef29203f607ff8c5230b00897470626fe0b237c4", "filename": "libgcc/config/nds32/isr-library/vec_vid57_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid57_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid57_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid57_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.57, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_57_4b\n+\t.type\t_nds32_vector_57_4b, @function\n+_nds32_vector_57_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_57_4b, .-_nds32_vector_57_4b"}, {"sha": "211b27dae595aa2d9e7189fe31a62a6977e3c930", "filename": "libgcc/config/nds32/isr-library/vec_vid58.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid58.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid58.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid58.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.58, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_58\n+\t.type\t_nds32_vector_58, @function\n+_nds32_vector_58:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_58, .-_nds32_vector_58"}, {"sha": "9eaefca6c493cac6d72bbf2a620b2435bfd1afbd", "filename": "libgcc/config/nds32/isr-library/vec_vid58_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid58_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid58_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid58_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.58, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_58_4b\n+\t.type\t_nds32_vector_58_4b, @function\n+_nds32_vector_58_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_58_4b, .-_nds32_vector_58_4b"}, {"sha": "227edf2e097372b0f83f68a86829527dff6cc65b", "filename": "libgcc/config/nds32/isr-library/vec_vid59.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid59.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid59.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid59.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.59, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_59\n+\t.type\t_nds32_vector_59, @function\n+_nds32_vector_59:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_59, .-_nds32_vector_59"}, {"sha": "30fccab1ca34007e11c9d80f22e3576c93dadc87", "filename": "libgcc/config/nds32/isr-library/vec_vid59_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid59_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid59_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid59_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.59, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_59_4b\n+\t.type\t_nds32_vector_59_4b, @function\n+_nds32_vector_59_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_59_4b, .-_nds32_vector_59_4b"}, {"sha": "688896858252e6632137150f88610653f2678843", "filename": "libgcc/config/nds32/isr-library/vec_vid60.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid60.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid60.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid60.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.60, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_60\n+\t.type\t_nds32_vector_60, @function\n+_nds32_vector_60:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_60, .-_nds32_vector_60"}, {"sha": "26d94ac5f963b96cb44763d4a56c1236034c6f79", "filename": "libgcc/config/nds32/isr-library/vec_vid60_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid60_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid60_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid60_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.60, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_60_4b\n+\t.type\t_nds32_vector_60_4b, @function\n+_nds32_vector_60_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_60_4b, .-_nds32_vector_60_4b"}, {"sha": "b3111e75c35934823b355ce5e705c433fc78687c", "filename": "libgcc/config/nds32/isr-library/vec_vid61.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid61.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid61.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid61.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.61, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_61\n+\t.type\t_nds32_vector_61, @function\n+_nds32_vector_61:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_61, .-_nds32_vector_61"}, {"sha": "845125cf3ec2ef53493ca0f31e288fd595c42860", "filename": "libgcc/config/nds32/isr-library/vec_vid61_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid61_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid61_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid61_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.61, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_61_4b\n+\t.type\t_nds32_vector_61_4b, @function\n+_nds32_vector_61_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_61_4b, .-_nds32_vector_61_4b"}, {"sha": "d6342381b225ca77ea329b067f114c5474249302", "filename": "libgcc/config/nds32/isr-library/vec_vid62.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid62.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid62.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid62.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.62, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_62\n+\t.type\t_nds32_vector_62, @function\n+_nds32_vector_62:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_62, .-_nds32_vector_62"}, {"sha": "d4c4413dd7399dd3f8b0c1083c225064ccf2f4bc", "filename": "libgcc/config/nds32/isr-library/vec_vid62_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid62_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid62_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid62_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.62, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_62_4b\n+\t.type\t_nds32_vector_62_4b, @function\n+_nds32_vector_62_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_62_4b, .-_nds32_vector_62_4b"}, {"sha": "8d2770c3f21295d4a3b2aaf624337167331f1b8f", "filename": "libgcc/config/nds32/isr-library/vec_vid63.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid63.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid63.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid63.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.63, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_63\n+\t.type\t_nds32_vector_63, @function\n+_nds32_vector_63:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_63, .-_nds32_vector_63"}, {"sha": "6403a7b6ed73787972c959ebe28856d9fb09c43d", "filename": "libgcc/config/nds32/isr-library/vec_vid63_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid63_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid63_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid63_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.63, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_63_4b\n+\t.type\t_nds32_vector_63_4b, @function\n+_nds32_vector_63_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_63_4b, .-_nds32_vector_63_4b"}, {"sha": "269bdf92f75ed8e09a5d9721a0655bcb20535715", "filename": "libgcc/config/nds32/isr-library/vec_vid64.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid64.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.64, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_64\n+\t.type\t_nds32_vector_64, @function\n+_nds32_vector_64:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_64, .-_nds32_vector_64"}, {"sha": "64691899043a2ee1eaa5b00b5695c0b3082661e2", "filename": "libgcc/config/nds32/isr-library/vec_vid64_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid64_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid64_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid64_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.64, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_64_4b\n+\t.type\t_nds32_vector_64_4b, @function\n+_nds32_vector_64_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_64_4b, .-_nds32_vector_64_4b"}, {"sha": "4fbf3e43b8c8f2e8e68a2a716b02696c106b5d38", "filename": "libgcc/config/nds32/isr-library/vec_vid65.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid65.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid65.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid65.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.65, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_65\n+\t.type\t_nds32_vector_65, @function\n+_nds32_vector_65:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_65, .-_nds32_vector_65"}, {"sha": "25f0a8773f71c9d1bf0996d7cbcc471ff8a19b04", "filename": "libgcc/config/nds32/isr-library/vec_vid65_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid65_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid65_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid65_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.65, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_65_4b\n+\t.type\t_nds32_vector_65_4b, @function\n+_nds32_vector_65_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_65_4b, .-_nds32_vector_65_4b"}, {"sha": "ad8d6d2a4757316a71f668f1ac647cc5b0060985", "filename": "libgcc/config/nds32/isr-library/vec_vid66.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid66.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid66.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid66.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.66, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_66\n+\t.type\t_nds32_vector_66, @function\n+_nds32_vector_66:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_66, .-_nds32_vector_66"}, {"sha": "d283d4337cffa9438a6f8e02560c3cb3dd95b287", "filename": "libgcc/config/nds32/isr-library/vec_vid66_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid66_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid66_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid66_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.66, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_66_4b\n+\t.type\t_nds32_vector_66_4b, @function\n+_nds32_vector_66_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_66_4b, .-_nds32_vector_66_4b"}, {"sha": "f3a97a6db7e735d9a3f604e20183a38fd26cd992", "filename": "libgcc/config/nds32/isr-library/vec_vid67.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid67.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid67.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid67.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.67, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_67\n+\t.type\t_nds32_vector_67, @function\n+_nds32_vector_67:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_67, .-_nds32_vector_67"}, {"sha": "fb8283dcf9f5a64c4e6cdcabc76821fec18af17f", "filename": "libgcc/config/nds32/isr-library/vec_vid67_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid67_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid67_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid67_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.67, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_67_4b\n+\t.type\t_nds32_vector_67_4b, @function\n+_nds32_vector_67_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_67_4b, .-_nds32_vector_67_4b"}, {"sha": "815f436863374f863590a6145fb7b5eb407ba031", "filename": "libgcc/config/nds32/isr-library/vec_vid68.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid68.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid68.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid68.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.68, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_68\n+\t.type\t_nds32_vector_68, @function\n+_nds32_vector_68:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_68, .-_nds32_vector_68"}, {"sha": "94959a8cd1de730d7981289e2bb65ff15f3d5fe5", "filename": "libgcc/config/nds32/isr-library/vec_vid68_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid68_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid68_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid68_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.68, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_68_4b\n+\t.type\t_nds32_vector_68_4b, @function\n+_nds32_vector_68_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_68_4b, .-_nds32_vector_68_4b"}, {"sha": "cd1d17c605de4d0661a57492f92fc63fb38b3773", "filename": "libgcc/config/nds32/isr-library/vec_vid69.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid69.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid69.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid69.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.69, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_69\n+\t.type\t_nds32_vector_69, @function\n+_nds32_vector_69:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_69, .-_nds32_vector_69"}, {"sha": "df0f7d36842377d045d71ac2cd5c7d7ed17e81eb", "filename": "libgcc/config/nds32/isr-library/vec_vid69_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid69_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid69_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid69_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.69, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_69_4b\n+\t.type\t_nds32_vector_69_4b, @function\n+_nds32_vector_69_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_69_4b, .-_nds32_vector_69_4b"}, {"sha": "4a2edce903bf649ce882fb3d0e7f9ff51fe6cfdf", "filename": "libgcc/config/nds32/isr-library/vec_vid70.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid70.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid70.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid70.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.70, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_70\n+\t.type\t_nds32_vector_70, @function\n+_nds32_vector_70:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_70, .-_nds32_vector_70"}, {"sha": "cb12f9f3fd2fdc86b04105374d4c1c96c1402969", "filename": "libgcc/config/nds32/isr-library/vec_vid70_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid70_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid70_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid70_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.70, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_70_4b\n+\t.type\t_nds32_vector_70_4b, @function\n+_nds32_vector_70_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_70_4b, .-_nds32_vector_70_4b"}, {"sha": "9ae82659ce50e4463a4ecfbc0f9b6dcaa5ea8030", "filename": "libgcc/config/nds32/isr-library/vec_vid71.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid71.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid71.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid71.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.71, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_71\n+\t.type\t_nds32_vector_71, @function\n+_nds32_vector_71:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_71, .-_nds32_vector_71"}, {"sha": "4f640b9b340fb82f41fac9b9b51f592cf773e15e", "filename": "libgcc/config/nds32/isr-library/vec_vid71_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid71_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid71_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid71_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.71, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_71_4b\n+\t.type\t_nds32_vector_71_4b, @function\n+_nds32_vector_71_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_71_4b, .-_nds32_vector_71_4b"}, {"sha": "ab07fdb0dd3a159f112fd921527256eff0a7c284", "filename": "libgcc/config/nds32/isr-library/vec_vid72.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid72.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid72.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid72.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.72, \"ax\"\n+\t.vec_size\t16\n+\t.align\t4\n+\t.weak\t_nds32_vector_72\n+\t.type\t_nds32_vector_72, @function\n+_nds32_vector_72:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_72, .-_nds32_vector_72"}, {"sha": "d3864e1024c172caf0147538d64c15b104237741", "filename": "libgcc/config/nds32/isr-library/vec_vid72_4b.S", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid72_4b.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid72_4b.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fvec_vid72_4b.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_vector.72, \"ax\"\n+\t.vec_size\t4\n+\t.align\t2\n+\t.weak\t_nds32_vector_72_4b\n+\t.type\t_nds32_vector_72_4b, @function\n+_nds32_vector_72_4b:\n+1:\n+\tj\t1b\n+\t.size\t_nds32_vector_72_4b, .-_nds32_vector_72_4b"}, {"sha": "fe964a5157898338aabf58715d9eee4128463970", "filename": "libgcc/config/nds32/isr-library/wrh.S", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fwrh.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fwrh.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fisr-library%2Fwrh.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,32 @@\n+/* c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.nds32_wrh, \"a\"\n+\t.align\t2\n+\t.weak\t_nds32_wrh\n+\t.type\t_nds32_wrh, @object\n+_nds32_wrh:\n+\t.word\t0\n+\t.size\t_nds32_wrh, .-_nds32_wrh"}, {"sha": "25295b6a9f2ae33427ee51942db9c3e05b35b04a", "filename": "libgcc/config/nds32/lib1asmsrc-mculib.S", "status": "added", "additions": 5213, "deletions": 0, "changes": 5213, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Flib1asmsrc-mculib.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Flib1asmsrc-mculib.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Flib1asmsrc-mculib.S?ref=9304f876116aae3d297ab5bf7341749f09406a50"}, {"sha": "6eb3fb0a753276ac0f8b58fc85f62e7e6c611d15", "filename": "libgcc/config/nds32/lib1asmsrc-newlib.S", "status": "added", "additions": 204, "deletions": 0, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Flib1asmsrc-newlib.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Flib1asmsrc-newlib.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Flib1asmsrc-newlib.S?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,204 @@\n+/* newlib libgcc routines of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+\t.section\t.mdebug.abi_nds32\n+\t.previous\n+\n+#ifdef L_divsi3\n+\n+\t.text\n+\t.align\t2\n+\t.globl\t__divsi3\n+\t.type\t__divsi3, @function\n+__divsi3:\n+\tmovi\t$r5, 0\t\t! res = 0\n+\txor\t$r4, $r0, $r1\t! neg\n+\tbltz\t$r0, .L1\n+\tbltz\t$r1, .L2\n+.L3:\n+\tmovi\t$r2, 1\t\t! bit = 1\n+\tslt\t$r3, $r1, $r0\t! test if dividend is smaller than or equal to divisor\n+\tbeqz\t$r3, .L5\n+\tbltz\t$r1, .L5\n+\n+.L4:\n+\tslli\t$r2, $r2, 1\n+\tbeqz\t$r2, .L6\n+\tslli\t$r1, $r1, 1\n+\tslt\t$r3, $r1, $r0\n+\tbeqz\t$r3, .L5\n+\tbgez\t$r1, .L4\n+\n+.L5:\n+\tslt\t$r3, $r0, $r1\n+\tbnez\t$r3, .L8\n+\tsub\t$r0, $r0, $r1\n+\tor\t$r5, $r5, $r2\n+.L8:\n+\tsrli\t$r1, $r1, 1\n+\tsrli\t$r2, $r2, 1\n+\tbnez\t$r2, .L5\n+.L6:\n+\tbgez\t$r4, .L7\n+\tsubri\t$r5, $r5, 0\t! negate if $r4 < 0\n+.L7:\n+\tmove\t$r0, $r5\n+\tret\n+.L1:\n+\tsubri\t$r0, $r0, 0\t! change neg to pos\n+\tbgez\t$r1, .L3\n+.L2:\n+\tsubri\t$r1, $r1, 0\t! change neg to pos\n+\tj\t.L3\n+\t.size\t__divsi3, .-__divsi3\n+\n+#endif /* L_divsi3 */\n+\n+\n+#ifdef L_modsi3\n+\n+\t.text\n+\t.align\t2\n+\t.globl\t__modsi3\n+\t.type\t__modsi3, @function\n+__modsi3:\n+\tmovi\t$r5, 0\t\t! res = 0\n+\tmove\t$r4, $r0\t! neg\n+\tbltz\t$r0, .L1\n+\tbltz\t$r1, .L2\n+.L3:\n+\tmovi\t$r2, 1\t\t! bit = 1\n+\tslt\t$r3, $r1, $r0\t! test if dividend is smaller than or equal to divisor\n+\tbeqz\t$r3, .L5\n+\tbltz\t$r1, .L5\n+\n+.L4:\n+\tslli\t$r2, $r2, 1\n+\tbeqz\t$r2, .L6\n+\tslli\t$r1, $r1, 1\n+\tslt\t$r3, $r1, $r0\n+\tbeqz\t$r3, .L5\n+\tbgez\t$r1, .L4\n+\n+.L5:\n+\tslt\t$r3, $r0, $r1\n+\tbnez\t$r3, .L8\n+\tsub\t$r0, $r0, $r1\n+\tor\t$r5, $r5, $r2\n+.L8:\n+\tsrli\t$r1, $r1, 1\n+\tsrli\t$r2, $r2, 1\n+\tbnez\t$r2, .L5\n+.L6:\n+\tbgez\t$r4, .L7\n+\tsubri\t$r0, $r0, 0\t! negate if $r4 < 0\n+.L7:\n+\tret\n+.L1:\n+\tsubri\t$r0, $r0, 0\t! change neg to pos\n+\tbgez\t$r1, .L3\n+.L2:\n+\tsubri\t$r1, $r1, 0\t! change neg to pos\n+\tj\t.L3\n+\t.size\t__modsi3, .-__modsi3\n+\n+#endif /* L_modsi3  */\n+\n+\n+#ifdef L_udivsi3\n+\n+\t.text\n+\t.align\t2\n+\t.globl\t__udivsi3\n+\t.type\t__udivsi3, @function\n+__udivsi3:\n+\tmovi\t$r5, 0\t\t! res = 0\n+\tmovi\t$r2, 1\t\t! bit = 1\n+\tslt\t$r3, $r1, $r0\t! test if dividend is smaller than or equal to divisor\n+\tbeqz\t$r3, .L5\n+\tbltz\t$r1, .L5\n+\n+.L4:\n+\tslli\t$r2, $r2, 1\n+\tbeqz\t$r2, .L6\n+\tslli\t$r1, $r1, 1\n+\tslt\t$r3, $r1, $r0\n+\tbeqz\t$r3, .L5\n+\tbgez\t$r1, .L4\n+\n+.L5:\n+\tslt\t$r3, $r0, $r1\n+\tbnez\t$r3, .L8\n+\tsub\t$r0, $r0, $r1\n+\tor\t$r5, $r5, $r2\n+.L8:\n+\tsrli\t$r1, $r1, 1\n+\tsrli\t$r2, $r2, 1\n+\tbnez\t$r2, .L5\n+.L6:\n+\tmove\t$r0, $r5\n+\tret\n+\t.size\t__udivsi3, .-__udivsi3\n+\n+#endif /* L_udivsi3  */\n+\n+\n+#ifdef L_umodsi3\n+\n+\t.text\n+\t.align\t2\n+\t.globl\t__umodsi3\n+\t.type\t__umodsi3, @function\n+__umodsi3:\n+\tmovi\t$r5, 0\t\t! res = 0\n+\tmovi\t$r2, 1\t\t! bit = 1\n+\tslt\t$r3, $r1, $r0\t! test if dividend is smaller than or equal to divisor\n+\tbeqz\t$r3, .L5\n+\tbltz\t$r1, .L5\n+\n+.L4:\n+\tslli\t$r2, $r2, 1\n+\tbeqz\t$r2, .L6\n+\tslli\t$r1, $r1, 1\n+\tslt\t$r3, $r1, $r0\n+\tbeqz\t$r3, .L5\n+\tbgez\t$r1, .L4\n+\n+.L5:\n+\tslt\t$r3, $r0, $r1\n+\tbnez\t$r3, .L8\n+\tsub\t$r0, $r0, $r1\n+\tor\t$r5, $r5, $r2\n+.L8:\n+\tsrli\t$r1, $r1, 1\n+\tsrli\t$r2, $r2, 1\n+\tbnez\t$r2, .L5\n+.L6:\n+\tret\n+\t.size\t__umodsi3, .-__umodsi3\n+\n+#endif /* L_umodsi3  */\n+\n+/* ----------------------------------------------------------- */"}, {"sha": "7d39ea85b7afa2ba62950e7d7bb35ec577b2b57e", "filename": "libgcc/config/nds32/lib2csrc-mculib/_clzdi2.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Flib2csrc-mculib%2F_clzdi2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Flib2csrc-mculib%2F_clzdi2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Flib2csrc-mculib%2F_clzdi2.c?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,38 @@\n+/* mculib libgcc routines of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+extern int __clzsi2 (int val);\n+int\n+__clzdi2 (long long val)\n+{\n+  if (val >> 32)\n+    {\n+      return __clzsi2 (val >> 32);\n+    }\n+  else\n+    {\n+      return __clzsi2 (val) + 32;\n+    }\n+}"}, {"sha": "9d0bdd96d807b89a9d783ebc892ade5b72c9447a", "filename": "libgcc/config/nds32/lib2csrc-mculib/_clzsi2.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Flib2csrc-mculib%2F_clzsi2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Flib2csrc-mculib%2F_clzsi2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Flib2csrc-mculib%2F_clzsi2.c?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,49 @@\n+/* mculib libgcc routines of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+int\n+__clzsi2 (int val)\n+{\n+  int i = 32;\n+  int j = 16;\n+  int temp;\n+\n+  for (; j; j >>= 1)\n+    {\n+      if (temp = val >> j)\n+\t{\n+\t  if (j == 1)\n+\t    {\n+\t      return (i - 2);\n+\t    }\n+\t  else\n+\t    {\n+\t      i -= j;\n+\t      val = temp;\n+\t    }\n+\t}\n+    }\n+  return (i - val);\n+}"}, {"sha": "62a1532de6041a38697ba6b611cb8d1bb3067966", "filename": "libgcc/config/nds32/sfp-machine.h", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fsfp-machine.h?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,91 @@\n+/* Machine settings for software floating-point emulation\n+   of Andes NDS32 cpu for GNU compiler\n+   Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+   Contributed by Andes Technology Corporation.\n+\n+   This file is part of GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n+\n+   In addition to the permissions in the GNU Lesser General Public\n+   License, the Free Software Foundation gives you unlimited\n+   permission to link the compiled version of this file into\n+   combinations with other programs, and to distribute those\n+   combinations without any restriction coming from the use of this\n+   file.  (The Lesser General Public License restrictions do apply in\n+   other respects; for example, they cover modification of the file,\n+   and distribution when not linked into a combine executable.)\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#define _FP_W_TYPE_SIZE\t\t32\n+#define _FP_W_TYPE\t\tunsigned long\n+#define _FP_WS_TYPE\t\tsigned long\n+#define _FP_I_TYPE\t\tlong\n+\n+/* The type of the result of a floating point comparison.  This must\n+   match `__libgcc_cmp_return__' in GCC for the target.  */\n+typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n+#define CMPtype __gcc_CMPtype\n+\n+#define _FP_MUL_MEAT_S(R,X,Y)\t\t\t\t\\\n+  _FP_MUL_MEAT_1_wide(_FP_WFRACBITS_S,R,X,Y,umul_ppmm)\n+#define _FP_MUL_MEAT_D(R,X,Y)\t\t\t\t\\\n+  _FP_MUL_MEAT_2_wide(_FP_WFRACBITS_D,R,X,Y,umul_ppmm)\n+#define _FP_MUL_MEAT_Q(R,X,Y)\t\t\t\t\\\n+  _FP_MUL_MEAT_4_wide(_FP_WFRACBITS_Q,R,X,Y,umul_ppmm)\n+\n+#define _FP_DIV_MEAT_S(R,X,Y)\t_FP_DIV_MEAT_1_loop(S,R,X,Y)\n+#define _FP_DIV_MEAT_D(R,X,Y)\t_FP_DIV_MEAT_2_udiv(D,R,X,Y)\n+#define _FP_DIV_MEAT_Q(R,X,Y)\t_FP_DIV_MEAT_4_udiv(Q,R,X,Y)\n+\n+#define _FP_NANFRAC_S\t\t((_FP_QNANBIT_S << 1) - 1)\n+#define _FP_NANFRAC_D\t\t((_FP_QNANBIT_D << 1) - 1), -1\n+#define _FP_NANFRAC_Q\t\t((_FP_QNANBIT_Q << 1) - 1), -1, -1, -1\n+#define _FP_NANSIGN_S\t\t0\n+#define _FP_NANSIGN_D\t\t0\n+#define _FP_NANSIGN_Q\t\t0\n+\n+#define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n+\n+/* Someone please check this.  */\n+#define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    if ((_FP_FRAC_HIGH_RAW_##fs(X) & _FP_QNANBIT_##fs)\t\t\\\n+\t&& !(_FP_FRAC_HIGH_RAW_##fs(Y) & _FP_QNANBIT_##fs))\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\tR##_s = Y##_s;\t\t\t\t\t\t\\\n+\t_FP_FRAC_COPY_##wc(R,Y);\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\tR##_s = X##_s;\t\t\t\t\t\t\\\n+\t_FP_FRAC_COPY_##wc(R,X);\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+    R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n+  } while (0)\n+\n+#define\t__LITTLE_ENDIAN\t1234\n+#define\t__BIG_ENDIAN\t4321\n+\n+#if defined __big_endian__\n+# define __BYTE_ORDER __BIG_ENDIAN\n+#else\n+# define __BYTE_ORDER __LITTLE_ENDIAN\n+#endif\n+\n+/* Define ALIASNAME as a strong alias for NAME.  */\n+# define strong_alias(name, aliasname) _strong_alias(name, aliasname)\n+# define _strong_alias(name, aliasname) \\\n+  extern __typeof (name) aliasname __attribute__ ((alias (#name)));"}, {"sha": "25c184aa2a9f3243a5d1c4ff36c414fc475e4d93", "filename": "libgcc/config/nds32/t-nds32", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Ft-nds32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Ft-nds32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Ft-nds32?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,58 @@\n+# Rules of libgcc and crtstuff of Andes NDS32 cpu for GNU compiler\n+# Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+# Contributed by Andes Technology Corporation.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published\n+# by the Free Software Foundation; either version 3, or (at your\n+# option) any later version.\n+#\n+# GCC is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+# License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+\n+# Note:\n+#   Because GCC has its own make rules for crtbegin.o and crtend.o,\n+#   we cannot use crtbegin.o and crtend.o rules.\n+#   So we create crtbegin1.o and crtend1.o instead.\n+#   Make sure the linker script include these two objects\n+#   for building .ctors/.dtors sections.\n+\n+# Use -DCRT_BEGIN to create beginning parts of .init and .fini content\n+# Make sure you are building crtbegin1.o with -O0 optimization,\n+# otherwise the static function will be optimized out\n+crtbegin1.o: $(srcdir)/config/nds32/initfini.c $(GCC_PASSES) $(CONFIG_H)\n+\t$(GCC_FOR_TARGET) $(INCLUDES) \\\n+\t$(CFLAGS) \\\n+\t-DCRT_BEGIN \\\n+\t-finhibit-size-directive -fno-inline-functions \\\n+\t-O0 -c $(srcdir)/config/nds32/initfini.c -o crtbegin1.o\n+\n+# Use -DCRT_END to create ending parts of .init and .fini content\n+# Make sure you are building crtend1.o with -O0 optimization,\n+# otherwise the static function will be optimized out\n+crtend1.o: $(srcdir)/config/nds32/initfini.c $(GCC_PASSES) $(CONFIG_H)\n+\t$(GCC_FOR_TARGET) $(INCLUDES) \\\n+\t$(CFLAGS) \\\n+\t-DCRT_END \\\n+\t-finhibit-size-directive -fno-inline-functions \\\n+\t-O0 -c $(srcdir)/config/nds32/initfini.c -o crtend1.o\n+\n+# Use this rule if and only if your crt0.o does not come from library\n+# Also, be sure to add 'crtzero.o' in extra_parts in libgcc/config.host\n+# and change STARTFILE_SPEC in nds32.h\n+#\n+#crtzero.o: $(srcdir)/config/nds32/crtzero.S $(GCC_PASSES) $(CONFIG_H)\n+#\t$(GCC_FOR_TARGET) $(INCLUDES) \\\n+#\t-c $(srcdir)/config/nds32/crtzero.S -o crtzero.o\n+\n+\n+# ------------------------------------------------------------------------"}, {"sha": "24f798c3a5623deb36b5f0f55e01956088151519", "filename": "libgcc/config/nds32/t-nds32-isr", "status": "added", "additions": 212, "deletions": 0, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Ft-nds32-isr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Ft-nds32-isr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Ft-nds32-isr?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,212 @@\n+# Rules of c-isr library stuff of Andes NDS32 cpu for GNU compiler\n+# Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+# Contributed by Andes Technology Corporation.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published\n+# by the Free Software Foundation; either version 3, or (at your\n+# option) any later version.\n+#\n+# GCC is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+# License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+\n+###############################################################################\n+# Makfile fragment rules for libnds32_isr.a to support ISR attribute extension\n+###############################################################################\n+\n+# basic flags setting\n+ISR_CFLAGS = $(CFLAGS) -c\n+\n+# the object files we would like to create\n+LIBNDS32_ISR_16B_OBJS = \\\n+\t\tvec_vid00.o vec_vid01.o vec_vid02.o vec_vid03.o \\\n+\t\tvec_vid04.o vec_vid05.o vec_vid06.o vec_vid07.o \\\n+\t\tvec_vid08.o vec_vid09.o vec_vid10.o vec_vid11.o \\\n+\t\tvec_vid12.o vec_vid13.o vec_vid14.o vec_vid15.o \\\n+\t\tvec_vid16.o vec_vid17.o vec_vid18.o vec_vid19.o \\\n+\t\tvec_vid20.o vec_vid21.o vec_vid22.o vec_vid23.o \\\n+\t\tvec_vid24.o vec_vid25.o vec_vid26.o vec_vid27.o \\\n+\t\tvec_vid28.o vec_vid29.o vec_vid30.o vec_vid31.o \\\n+\t\tvec_vid32.o vec_vid33.o vec_vid34.o vec_vid35.o \\\n+\t\tvec_vid36.o vec_vid37.o vec_vid38.o vec_vid39.o \\\n+\t\tvec_vid40.o vec_vid41.o vec_vid42.o vec_vid43.o \\\n+\t\tvec_vid44.o vec_vid45.o vec_vid46.o vec_vid47.o \\\n+\t\tvec_vid48.o vec_vid49.o vec_vid50.o vec_vid51.o \\\n+\t\tvec_vid52.o vec_vid53.o vec_vid54.o vec_vid55.o \\\n+\t\tvec_vid56.o vec_vid57.o vec_vid58.o vec_vid59.o \\\n+\t\tvec_vid60.o vec_vid61.o vec_vid62.o vec_vid63.o \\\n+\t\tvec_vid64.o vec_vid65.o vec_vid66.o vec_vid67.o \\\n+\t\tvec_vid68.o vec_vid69.o vec_vid70.o vec_vid71.o \\\n+\t\tvec_vid72.o \\\n+\t\texcp_isr_ps_nn.o excp_isr_ps_ns.o excp_isr_ps_nr.o \\\n+\t\texcp_isr_sa_nn.o excp_isr_sa_ns.o excp_isr_sa_nr.o \\\n+\t\tintr_isr_ps_nn.o intr_isr_ps_ns.o intr_isr_ps_nr.o \\\n+\t\tintr_isr_sa_nn.o intr_isr_sa_ns.o intr_isr_sa_nr.o \\\n+\t\treset.o\n+\n+LIBNDS32_ISR_4B_OBJS = \\\n+\t\tvec_vid00_4b.o vec_vid01_4b.o vec_vid02_4b.o vec_vid03_4b.o \\\n+\t\tvec_vid04_4b.o vec_vid05_4b.o vec_vid06_4b.o vec_vid07_4b.o \\\n+\t\tvec_vid08_4b.o vec_vid09_4b.o vec_vid10_4b.o vec_vid11_4b.o \\\n+\t\tvec_vid12_4b.o vec_vid13_4b.o vec_vid14_4b.o vec_vid15_4b.o \\\n+\t\tvec_vid16_4b.o vec_vid17_4b.o vec_vid18_4b.o vec_vid19_4b.o \\\n+\t\tvec_vid20_4b.o vec_vid21_4b.o vec_vid22_4b.o vec_vid23_4b.o \\\n+\t\tvec_vid24_4b.o vec_vid25_4b.o vec_vid26_4b.o vec_vid27_4b.o \\\n+\t\tvec_vid28_4b.o vec_vid29_4b.o vec_vid30_4b.o vec_vid31_4b.o \\\n+\t\tvec_vid32_4b.o vec_vid33_4b.o vec_vid34_4b.o vec_vid35_4b.o \\\n+\t\tvec_vid36_4b.o vec_vid37_4b.o vec_vid38_4b.o vec_vid39_4b.o \\\n+\t\tvec_vid40_4b.o vec_vid41_4b.o vec_vid42_4b.o vec_vid43_4b.o \\\n+\t\tvec_vid44_4b.o vec_vid45_4b.o vec_vid46_4b.o vec_vid47_4b.o \\\n+\t\tvec_vid48_4b.o vec_vid49_4b.o vec_vid50_4b.o vec_vid51_4b.o \\\n+\t\tvec_vid52_4b.o vec_vid53_4b.o vec_vid54_4b.o vec_vid55_4b.o \\\n+\t\tvec_vid56_4b.o vec_vid57_4b.o vec_vid58_4b.o vec_vid59_4b.o \\\n+\t\tvec_vid60_4b.o vec_vid61_4b.o vec_vid62_4b.o vec_vid63_4b.o \\\n+\t\tvec_vid64_4b.o vec_vid65_4b.o vec_vid66_4b.o vec_vid67_4b.o \\\n+\t\tvec_vid68_4b.o vec_vid69_4b.o vec_vid70_4b.o vec_vid71_4b.o \\\n+\t\tvec_vid72_4b.o \\\n+\t\texcp_isr_ps_nn_4b.o excp_isr_ps_ns_4b.o excp_isr_ps_nr_4b.o \\\n+\t\texcp_isr_sa_nn_4b.o excp_isr_sa_ns_4b.o excp_isr_sa_nr_4b.o \\\n+\t\tintr_isr_ps_nn_4b.o intr_isr_ps_ns_4b.o intr_isr_ps_nr_4b.o \\\n+\t\tintr_isr_sa_nn_4b.o intr_isr_sa_ns_4b.o intr_isr_sa_nr_4b.o \\\n+\t\treset_4b.o\n+\n+LIBNDS32_ISR_COMMON_OBJS = \\\n+\t\tjmptbl_vid00.o jmptbl_vid01.o jmptbl_vid02.o jmptbl_vid03.o \\\n+\t\tjmptbl_vid04.o jmptbl_vid05.o jmptbl_vid06.o jmptbl_vid07.o \\\n+\t\tjmptbl_vid08.o jmptbl_vid09.o jmptbl_vid10.o jmptbl_vid11.o \\\n+\t\tjmptbl_vid12.o jmptbl_vid13.o jmptbl_vid14.o jmptbl_vid15.o \\\n+\t\tjmptbl_vid16.o jmptbl_vid17.o jmptbl_vid18.o jmptbl_vid19.o \\\n+\t\tjmptbl_vid20.o jmptbl_vid21.o jmptbl_vid22.o jmptbl_vid23.o \\\n+\t\tjmptbl_vid24.o jmptbl_vid25.o jmptbl_vid26.o jmptbl_vid27.o \\\n+\t\tjmptbl_vid28.o jmptbl_vid29.o jmptbl_vid30.o jmptbl_vid31.o \\\n+\t\tjmptbl_vid32.o jmptbl_vid33.o jmptbl_vid34.o jmptbl_vid35.o \\\n+\t\tjmptbl_vid36.o jmptbl_vid37.o jmptbl_vid38.o jmptbl_vid39.o \\\n+\t\tjmptbl_vid40.o jmptbl_vid41.o jmptbl_vid42.o jmptbl_vid43.o \\\n+\t\tjmptbl_vid44.o jmptbl_vid45.o jmptbl_vid46.o jmptbl_vid47.o \\\n+\t\tjmptbl_vid48.o jmptbl_vid49.o jmptbl_vid50.o jmptbl_vid51.o \\\n+\t\tjmptbl_vid52.o jmptbl_vid53.o jmptbl_vid54.o jmptbl_vid55.o \\\n+\t\tjmptbl_vid56.o jmptbl_vid57.o jmptbl_vid58.o jmptbl_vid59.o \\\n+\t\tjmptbl_vid60.o jmptbl_vid61.o jmptbl_vid62.o jmptbl_vid63.o \\\n+\t\tjmptbl_vid64.o jmptbl_vid65.o jmptbl_vid66.o jmptbl_vid67.o \\\n+\t\tjmptbl_vid68.o jmptbl_vid69.o jmptbl_vid70.o jmptbl_vid71.o \\\n+\t\tjmptbl_vid72.o \\\n+\t\tnmih.o \\\n+\t\twrh.o\n+\n+LIBNDS32_ISR_COMPLETE_OBJS = $(LIBNDS32_ISR_16B_OBJS) $(LIBNDS32_ISR_4B_OBJS) $(LIBNDS32_ISR_COMMON_OBJS)\n+\n+\n+# Build common objects for ISR library\n+nmih.o: $(srcdir)/config/nds32/isr-library/nmih.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $(srcdir)/config/nds32/isr-library/nmih.S -o nmih.o\n+\n+wrh.o: $(srcdir)/config/nds32/isr-library/wrh.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $(srcdir)/config/nds32/isr-library/wrh.S -o wrh.o\n+\n+jmptbl_vid%.o: $(srcdir)/config/nds32/isr-library/jmptbl_vid%.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $< -o $@\n+\n+\n+\n+# Build 16b version objects for ISR library. (no \"_4b\" postfix string)\n+vec_vid%.o: $(srcdir)/config/nds32/isr-library/vec_vid%.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $< -o $@\n+\n+excp_isr_ps_nn.o: $(srcdir)/config/nds32/isr-library/excp_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $(srcdir)/config/nds32/isr-library/excp_isr.S -o excp_isr_ps_nn.o\n+\n+excp_isr_ps_ns.o: $(srcdir)/config/nds32/isr-library/excp_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_NESTED $(srcdir)/config/nds32/isr-library/excp_isr.S -o excp_isr_ps_ns.o\n+\n+excp_isr_ps_nr.o: $(srcdir)/config/nds32/isr-library/excp_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_NESTED_READY $(srcdir)/config/nds32/isr-library/excp_isr.S -o excp_isr_ps_nr.o\n+\n+excp_isr_sa_nn.o: $(srcdir)/config/nds32/isr-library/excp_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS $(srcdir)/config/nds32/isr-library/excp_isr.S -o excp_isr_sa_nn.o\n+\n+excp_isr_sa_ns.o: $(srcdir)/config/nds32/isr-library/excp_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS -DNDS32_NESTED $(srcdir)/config/nds32/isr-library/excp_isr.S -o excp_isr_sa_ns.o\n+\n+excp_isr_sa_nr.o: $(srcdir)/config/nds32/isr-library/excp_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS -DNDS32_NESTED_READY $(srcdir)/config/nds32/isr-library/excp_isr.S -o excp_isr_sa_nr.o\n+\n+intr_isr_ps_nn.o: $(srcdir)/config/nds32/isr-library/intr_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $(srcdir)/config/nds32/isr-library/intr_isr.S -o intr_isr_ps_nn.o\n+\n+intr_isr_ps_ns.o: $(srcdir)/config/nds32/isr-library/intr_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_NESTED $(srcdir)/config/nds32/isr-library/intr_isr.S -o intr_isr_ps_ns.o\n+\n+intr_isr_ps_nr.o: $(srcdir)/config/nds32/isr-library/intr_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_NESTED_READY $(srcdir)/config/nds32/isr-library/intr_isr.S -o intr_isr_ps_nr.o\n+\n+intr_isr_sa_nn.o: $(srcdir)/config/nds32/isr-library/intr_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS $(srcdir)/config/nds32/isr-library/intr_isr.S -o intr_isr_sa_nn.o\n+\n+intr_isr_sa_ns.o: $(srcdir)/config/nds32/isr-library/intr_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS -DNDS32_NESTED $(srcdir)/config/nds32/isr-library/intr_isr.S -o intr_isr_sa_ns.o\n+\n+intr_isr_sa_nr.o: $(srcdir)/config/nds32/isr-library/intr_isr.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS -DNDS32_NESTED_READY $(srcdir)/config/nds32/isr-library/intr_isr.S -o intr_isr_sa_nr.o\n+\n+reset.o: $(srcdir)/config/nds32/isr-library/reset.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $(srcdir)/config/nds32/isr-library/reset.S -o reset.o\n+\n+# Build 4b version objects for ISR library.\n+vec_vid%_4b.o: $(srcdir)/config/nds32/isr-library/vec_vid%_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $< -o $@\n+\n+excp_isr_ps_nn_4b.o: $(srcdir)/config/nds32/isr-library/excp_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $(srcdir)/config/nds32/isr-library/excp_isr_4b.S -o excp_isr_ps_nn_4b.o\n+\n+excp_isr_ps_ns_4b.o: $(srcdir)/config/nds32/isr-library/excp_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_NESTED $(srcdir)/config/nds32/isr-library/excp_isr_4b.S -o excp_isr_ps_ns_4b.o\n+\n+excp_isr_ps_nr_4b.o: $(srcdir)/config/nds32/isr-library/excp_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_NESTED_READY $(srcdir)/config/nds32/isr-library/excp_isr_4b.S -o excp_isr_ps_nr_4b.o\n+\n+excp_isr_sa_nn_4b.o: $(srcdir)/config/nds32/isr-library/excp_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS $(srcdir)/config/nds32/isr-library/excp_isr_4b.S -o excp_isr_sa_nn_4b.o\n+\n+excp_isr_sa_ns_4b.o: $(srcdir)/config/nds32/isr-library/excp_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS -DNDS32_NESTED $(srcdir)/config/nds32/isr-library/excp_isr_4b.S -o excp_isr_sa_ns_4b.o\n+\n+excp_isr_sa_nr_4b.o: $(srcdir)/config/nds32/isr-library/excp_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS -DNDS32_NESTED_READY $(srcdir)/config/nds32/isr-library/excp_isr_4b.S -o excp_isr_sa_nr_4b.o\n+\n+intr_isr_ps_nn_4b.o: $(srcdir)/config/nds32/isr-library/intr_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $(srcdir)/config/nds32/isr-library/intr_isr_4b.S -o intr_isr_ps_nn_4b.o\n+\n+intr_isr_ps_ns_4b.o: $(srcdir)/config/nds32/isr-library/intr_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_NESTED $(srcdir)/config/nds32/isr-library/intr_isr_4b.S -o intr_isr_ps_ns_4b.o\n+\n+intr_isr_ps_nr_4b.o: $(srcdir)/config/nds32/isr-library/intr_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_NESTED_READY $(srcdir)/config/nds32/isr-library/intr_isr_4b.S -o intr_isr_ps_nr_4b.o\n+\n+intr_isr_sa_nn_4b.o: $(srcdir)/config/nds32/isr-library/intr_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS $(srcdir)/config/nds32/isr-library/intr_isr_4b.S -o intr_isr_sa_nn_4b.o\n+\n+intr_isr_sa_ns_4b.o: $(srcdir)/config/nds32/isr-library/intr_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS -DNDS32_NESTED $(srcdir)/config/nds32/isr-library/intr_isr_4b.S -o intr_isr_sa_ns_4b.o\n+\n+intr_isr_sa_nr_4b.o: $(srcdir)/config/nds32/isr-library/intr_isr_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) -DNDS32_SAVE_ALL_REGS -DNDS32_NESTED_READY $(srcdir)/config/nds32/isr-library/intr_isr_4b.S -o intr_isr_sa_nr_4b.o\n+\n+reset_4b.o: $(srcdir)/config/nds32/isr-library/reset_4b.S\n+\t$(GCC_FOR_TARGET) $(ISR_CFLAGS) $(srcdir)/config/nds32/isr-library/reset_4b.S -o reset_4b.o\n+\n+\n+# The rule to create libnds32_isr.a file\n+libnds32_isr.a: $(LIBNDS32_ISR_COMPLETE_OBJS)\n+\t$(AR) rc libnds32_isr.a $(LIBNDS32_ISR_COMPLETE_OBJS)\n+\n+\n+# ------------------------------------------------------------------------"}, {"sha": "4fbcf4ff52ee8b2a268a2a2bf2a0d8241befd310", "filename": "libgcc/config/nds32/t-nds32-mculib", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Ft-nds32-mculib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Ft-nds32-mculib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Ft-nds32-mculib?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,77 @@\n+# Rules of mculib library makefile of Andes NDS32 cpu for GNU compiler\n+# Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+# Contributed by Andes Technology Corporation.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published\n+# by the Free Software Foundation; either version 3, or (at your\n+# option) any later version.\n+#\n+# GCC is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+# License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Compiler flags to use when compiling 'libgcc2.c'\n+HOST_LIBGCC2_CFLAGS = -Os\n+\n+\n+LIB1ASMSRC   = nds32/lib1asmsrc-mculib.S\n+\n+LIB1ASMFUNCS =   \\\n+\t_addsub_sf   \\\n+\t_sf_to_si    \\\n+\t_divsi3      \\\n+\t_divdi3      \\\n+\t_modsi3      \\\n+\t_moddi3      \\\n+\t_mulsi3      \\\n+\t_udivsi3     \\\n+\t_udivdi3     \\\n+\t_udivmoddi4  \\\n+\t_umodsi3     \\\n+\t_umoddi3     \\\n+\t_muldi3      \\\n+\t_addsub_df   \\\n+\t_mul_sf      \\\n+\t_mul_df      \\\n+\t_div_sf      \\\n+\t_div_df      \\\n+\t_negate_sf   \\\n+\t_negate_df   \\\n+\t_sf_to_df    \\\n+\t_df_to_sf    \\\n+\t_df_to_si    \\\n+\t_fixsfdi     \\\n+\t_fixdfdi     \\\n+\t_fixunssfsi  \\\n+\t_fixunsdfsi  \\\n+\t_fixunssfdi  \\\n+\t_fixunsdfdi  \\\n+\t_si_to_sf    \\\n+\t_si_to_df    \\\n+\t_floatdisf   \\\n+\t_floatdidf   \\\n+\t_floatunsisf \\\n+\t_floatunsidf \\\n+\t_floatundisf \\\n+\t_floatundidf \\\n+\t_compare_sf  \\\n+\t_compare_df  \\\n+\t_unord_sf    \\\n+\t_unord_df\n+\n+# List of functions not to build from libgcc2.c.\n+LIB2FUNCS_EXCLUDE = _clzsi2 _clzdi2\n+\n+# List of extra C and assembler files(*.S) to add to static libgcc2.\n+LIB2ADD_ST += $(srcdir)/config/nds32/lib2csrc-mculib/_clzsi2.c\n+LIB2ADD_ST += $(srcdir)/config/nds32/lib2csrc-mculib/_clzdi2.c\n+\n+# ------------------------------------------------------------------------"}, {"sha": "b2549a084e9b53373b569904cb38a3d500079024", "filename": "libgcc/config/nds32/t-nds32-newlib", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Ft-nds32-newlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9304f876116aae3d297ab5bf7341749f09406a50/libgcc%2Fconfig%2Fnds32%2Ft-nds32-newlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Ft-nds32-newlib?ref=9304f876116aae3d297ab5bf7341749f09406a50", "patch": "@@ -0,0 +1,34 @@\n+# Rules of newlib library makefile of Andes NDS32 cpu for GNU compiler\n+# Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+# Contributed by Andes Technology Corporation.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published\n+# by the Free Software Foundation; either version 3, or (at your\n+# option) any later version.\n+#\n+# GCC is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+# License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Compiler flags to use when compiling 'libgcc2.c'\n+HOST_LIBGCC2_CFLAGS = -O2\n+\n+\n+#LIB1ASMSRC   = nds32/lib1asmsrc-newlib.S\n+#LIB1ASMFUNCS = _divsi3 _modsi3 _udivsi3 _umodsi3\n+\n+# List of functions not to build from libgcc2.c.\n+#LIB2FUNCS_EXCLUDE = _clzsi2\n+\n+# List of extra C and assembler files(*.S) to add to static libgcc2.\n+#LIB2ADD_ST += $(srcdir)/config/nds32/lib2csrc-newlib/_clzsi2.c\n+\n+# ------------------------------------------------------------------------"}]}