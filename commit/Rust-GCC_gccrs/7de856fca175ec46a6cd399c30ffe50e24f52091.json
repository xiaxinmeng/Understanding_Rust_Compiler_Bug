{"sha": "7de856fca175ec46a6cd399c30ffe50e24f52091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RlODU2ZmNhMTc1ZWM0NmE2Y2QzOTljMzBmZmU1MGUyNGY1MjA5MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-10-11T12:05:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-10-11T12:05:59Z"}, "message": "11.cc: New.\n\n2006-10-11  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/22_locale/num_put/put/char/11.cc: New.\n\t* testsuite/22_locale/num_put/put/wchar_t/11.cc: Likewise.\n\nFrom-SVN: r117632", "tree": {"sha": "191f42019a42f197110f82c25352227159617f69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/191f42019a42f197110f82c25352227159617f69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7de856fca175ec46a6cd399c30ffe50e24f52091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de856fca175ec46a6cd399c30ffe50e24f52091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de856fca175ec46a6cd399c30ffe50e24f52091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de856fca175ec46a6cd399c30ffe50e24f52091/comments", "author": null, "committer": null, "parents": [{"sha": "8556236bec5ff11e25d881e11e9043c6c190b485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8556236bec5ff11e25d881e11e9043c6c190b485", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8556236bec5ff11e25d881e11e9043c6c190b485"}], "stats": {"total": 147, "additions": 147, "deletions": 0}, "files": [{"sha": "35d54f21146a5df521eba0f72a560110be899355", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de856fca175ec46a6cd399c30ffe50e24f52091/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de856fca175ec46a6cd399c30ffe50e24f52091/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7de856fca175ec46a6cd399c30ffe50e24f52091", "patch": "@@ -1,3 +1,8 @@\n+2006-10-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/22_locale/num_put/put/char/11.cc: New.\n+\t* testsuite/22_locale/num_put/put/wchar_t/11.cc: Likewise.\n+\n 2006-10-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/lib/libstdc++.exp (v3-build_support): Link"}, {"sha": "315719b61205d8d183d2d0667080e9c40332df58", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/char/11.cc", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de856fca175ec46a6cd399c30ffe50e24f52091/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de856fca175ec46a6cd399c30ffe50e24f52091/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F11.cc?ref=7de856fca175ec46a6cd399c30ffe50e24f52091", "patch": "@@ -0,0 +1,71 @@\n+// 2006-10-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2006 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+struct Punct1: std::numpunct<char>\n+{ std::string do_grouping() const { return \"\\003\\002\\001\"; } };\n+\n+struct Punct2: std::numpunct<char>\n+{ std::string do_grouping() const { return \"\\001\\003\"; } };\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  ostringstream oss1, oss2;\n+  string result1, result2, result3;\n+  const string empty;\n+\n+  oss1.imbue(locale(oss1.getloc(), new Punct1));\n+  oss2.imbue(locale(oss2.getloc(), new Punct2));\n+  const num_put<char>& ng1 = use_facet<num_put<char> >(oss1.getloc());\n+  const num_put<char>& ng2 = use_facet<num_put<char> >(oss2.getloc());\n+\n+  long l1 = 12345678l;\n+  double d1 = 1234567.0;\n+  double d2 = 123456.0;\n+\n+  ng1.put(oss1.rdbuf(), oss1, '+', l1);\n+  result1 = oss1.str();\n+  VERIFY( result1 == \"1,2,3,45,678\" );\n+\n+  oss2.precision(1);\n+  oss2.setf(ios_base::fixed, ios_base::floatfield);\n+  ng2.put(oss2.rdbuf(), oss2, '+', d1);\n+  result2 = oss2.str();\n+  VERIFY( result2 == \"123,456,7.0\" );\n+\n+  oss2.str(empty);\n+  ng2.put(oss2.rdbuf(), oss2, '+', d2);\n+  result3 = oss2.str();\n+  VERIFY( result3 == \"12,345,6.0\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "a6670e6b57131f56be1804c7a2136a05090dba87", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/11.cc", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de856fca175ec46a6cd399c30ffe50e24f52091/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de856fca175ec46a6cd399c30ffe50e24f52091/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F11.cc?ref=7de856fca175ec46a6cd399c30ffe50e24f52091", "patch": "@@ -0,0 +1,71 @@\n+// 2006-10-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2006 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+struct Punct1: std::numpunct<wchar_t>\n+{ std::string do_grouping() const { return \"\\003\\002\\001\"; } };\n+\n+struct Punct2: std::numpunct<wchar_t>\n+{ std::string do_grouping() const { return \"\\001\\003\"; } };\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wostringstream oss1, oss2;\n+  wstring result1, result2, result3;\n+  const wstring empty;\n+\n+  oss1.imbue(locale(oss1.getloc(), new Punct1));\n+  oss2.imbue(locale(oss2.getloc(), new Punct2));\n+  const num_put<wchar_t>& ng1 = use_facet<num_put<wchar_t> >(oss1.getloc());\n+  const num_put<wchar_t>& ng2 = use_facet<num_put<wchar_t> >(oss2.getloc());\n+\n+  long l1 = 12345678l;\n+  double d1 = 1234567.0;\n+  double d2 = 123456.0;\n+\n+  ng1.put(oss1.rdbuf(), oss1, L'+', l1);\n+  result1 = oss1.str();\n+  VERIFY( result1 == L\"1,2,3,45,678\" );\n+\n+  oss2.precision(1);\n+  oss2.setf(ios_base::fixed, ios_base::floatfield);\n+  ng2.put(oss2.rdbuf(), oss2, L'+', d1);\n+  result2 = oss2.str();\n+  VERIFY( result2 == L\"123,456,7.0\" );\n+\n+  oss2.str(empty);\n+  ng2.put(oss2.rdbuf(), oss2, L'+', d2);\n+  result3 = oss2.str();\n+  VERIFY( result3 == L\"12,345,6.0\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}