{"sha": "a4a51a5262b8a12475fd7811dac3fd05f02886ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRhNTFhNTI2MmI4YTEyNDc1ZmQ3ODExZGFjM2ZkMDVmMDI4ODZjZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-06-30T19:30:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-06-30T19:30:52Z"}, "message": "except.c (emit_note_eh_region_end): New helper function.\n\n\t* except.c (emit_note_eh_region_end): New helper function.\n\t(convert_to_eh_region_ranges): Use emit_note_eh_region_end to\n\temit EH_REGION_END note.\n\t* jump.c (cleanup_barriers): Do not split a call and its\n\tcorresponding CALL_ARG_LOCATION note.\n\nFrom-SVN: r212171", "tree": {"sha": "cf5d008b99533b789a9ab08b5f2b935cabf526b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf5d008b99533b789a9ab08b5f2b935cabf526b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4a51a5262b8a12475fd7811dac3fd05f02886ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a51a5262b8a12475fd7811dac3fd05f02886ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4a51a5262b8a12475fd7811dac3fd05f02886ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a51a5262b8a12475fd7811dac3fd05f02886ce/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5acd5cf07262141100da18e8dc227ed4e073ac8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5acd5cf07262141100da18e8dc227ed4e073ac8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5acd5cf07262141100da18e8dc227ed4e073ac8c"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "a571eef7fa04f837e7296ec7889d6f927bee6680", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a51a5262b8a12475fd7811dac3fd05f02886ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a51a5262b8a12475fd7811dac3fd05f02886ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4a51a5262b8a12475fd7811dac3fd05f02886ce", "patch": "@@ -1,3 +1,11 @@\n+2014-06-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* except.c (emit_note_eh_region_end): New helper function.\n+\t(convert_to_eh_region_ranges): Use emit_note_eh_region_end to\n+\temit EH_REGION_END note.\n+\t* jump.c (cleanup_barriers): Do not split a call and its\n+\tcorresponding CALL_ARG_LOCATION note.\n+\n 2014-06-30  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/61607"}, {"sha": "7ac114fda27e8dabe8d528f5864ece51eba649fa", "filename": "gcc/except.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a51a5262b8a12475fd7811dac3fd05f02886ce/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a51a5262b8a12475fd7811dac3fd05f02886ce/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=a4a51a5262b8a12475fd7811dac3fd05f02886ce", "patch": "@@ -2466,6 +2466,20 @@ add_call_site (rtx landing_pad, int action, int section)\n   return call_site_base + crtl->eh.call_site_record_v[section]->length () - 1;\n }\n \n+static rtx\n+emit_note_eh_region_end (rtx insn)\n+{\n+  rtx next = NEXT_INSN (insn);\n+\n+  /* Make sure we do not split a call and its corresponding\n+     CALL_ARG_LOCATION note.  */\n+  if (next && NOTE_P (next)\n+      && NOTE_KIND (next) == NOTE_INSN_CALL_ARG_LOCATION)\n+    insn = next;\n+\n+  return emit_note_after (NOTE_INSN_EH_REGION_END, insn);\n+}\n+\n /* Turn REG_EH_REGION notes back into NOTE_INSN_EH_REGION notes.\n    The new note numbers will not refer to region numbers, but\n    instead to call site entries.  */\n@@ -2544,8 +2558,8 @@ convert_to_eh_region_ranges (void)\n \t\tnote = emit_note_before (NOTE_INSN_EH_REGION_BEG,\n \t\t\t\t\t first_no_action_insn_before_switch);\n \t\tNOTE_EH_HANDLER (note) = call_site;\n-\t\tnote = emit_note_after (NOTE_INSN_EH_REGION_END,\n-\t\t\t\t\tlast_no_action_insn_before_switch);\n+\t\tnote\n+\t\t  = emit_note_eh_region_end (last_no_action_insn_before_switch);\n \t\tNOTE_EH_HANDLER (note) = call_site;\n \t\tgcc_assert (last_action != -3\n \t\t\t    || (last_action_insn\n@@ -2569,8 +2583,7 @@ convert_to_eh_region_ranges (void)\n \t\t    first_no_action_insn = NULL_RTX;\n \t\t  }\n \n-\t\tnote = emit_note_after (NOTE_INSN_EH_REGION_END,\n-\t\t\t\t\tlast_action_insn);\n+\t\tnote = emit_note_eh_region_end (last_action_insn);\n \t\tNOTE_EH_HANDLER (note) = call_site;\n \t      }\n \n@@ -2617,7 +2630,7 @@ convert_to_eh_region_ranges (void)\n \n   if (last_action >= -1 && ! first_no_action_insn)\n     {\n-      note = emit_note_after (NOTE_INSN_EH_REGION_END, last_action_insn);\n+      note = emit_note_eh_region_end (last_action_insn);\n       NOTE_EH_HANDLER (note) = call_site;\n     }\n "}, {"sha": "a5e5f528e75763393677533bb7b0ae10620428a0", "filename": "gcc/jump.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4a51a5262b8a12475fd7811dac3fd05f02886ce/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4a51a5262b8a12475fd7811dac3fd05f02886ce/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=a4a51a5262b8a12475fd7811dac3fd05f02886ce", "patch": "@@ -121,15 +121,26 @@ rebuild_jump_labels_chain (rtx chain)\n static unsigned int\n cleanup_barriers (void)\n {\n-  rtx insn, next, prev;\n-  for (insn = get_insns (); insn; insn = next)\n+  rtx insn;\n+  for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     {\n-      next = NEXT_INSN (insn);\n       if (BARRIER_P (insn))\n \t{\n-\t  prev = prev_nonnote_insn (insn);\n+\t  rtx prev = prev_nonnote_insn (insn);\n \t  if (!prev)\n \t    continue;\n+\n+\t  if (CALL_P (prev))\n+\t    {\n+\t      /* Make sure we do not split a call and its corresponding\n+\t\t CALL_ARG_LOCATION note.  */\n+\t      rtx next = NEXT_INSN (prev);\n+\n+\t      if (NOTE_P (next)\n+\t\t  && NOTE_KIND (next) == NOTE_INSN_CALL_ARG_LOCATION)\n+\t\tprev = next;\n+\t    }\n+\n \t  if (BARRIER_P (prev))\n \t    delete_insn (insn);\n \t  else if (prev != PREV_INSN (insn))"}]}