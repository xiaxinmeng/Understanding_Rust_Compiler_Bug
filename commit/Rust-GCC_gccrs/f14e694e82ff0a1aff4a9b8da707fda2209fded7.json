{"sha": "f14e694e82ff0a1aff4a9b8da707fda2209fded7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE0ZTY5NGU4MmZmMGExYWZmNGE5YjhkYTcwN2ZkYTIyMDlmZGVkNw==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-08-09T04:21:26Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-08-09T04:21:26Z"}, "message": "re PR c/23161 (Labels and empty statement warnings)\n\n2005-08-09  James A. Morrison  <phython@gcc.gnu.org>\n\n        PR c/23161\n        PR c/23165\n        * c-typeck.c (c_finish_if_stmt): Look into STATEMENT_LISTs to see\n        if the if is really empty.\n\nFrom-SVN: r102896", "tree": {"sha": "c109122a3afbc79c870fd4e7a196f2c92de42a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c109122a3afbc79c870fd4e7a196f2c92de42a6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f14e694e82ff0a1aff4a9b8da707fda2209fded7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14e694e82ff0a1aff4a9b8da707fda2209fded7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f14e694e82ff0a1aff4a9b8da707fda2209fded7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14e694e82ff0a1aff4a9b8da707fda2209fded7/comments", "author": null, "committer": null, "parents": [{"sha": "2ef571e2c282999a7c3f46e6a0b85a1a46500135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef571e2c282999a7c3f46e6a0b85a1a46500135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef571e2c282999a7c3f46e6a0b85a1a46500135"}], "stats": {"total": 51, "additions": 41, "deletions": 10}, "files": [{"sha": "a712bb9d9ab9e5e0910fddb11e64155a2972b834", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14e694e82ff0a1aff4a9b8da707fda2209fded7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14e694e82ff0a1aff4a9b8da707fda2209fded7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f14e694e82ff0a1aff4a9b8da707fda2209fded7", "patch": "@@ -1,3 +1,10 @@\n+2005-08-09  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\tPR c/23161\n+\tPR c/23165\n+\t* c-typeck.c (c_finish_if_stmt): Look into STATEMENT_LISTs to see\n+\tif the if is really empty.\n+\n 2005-08-09  Steven Bosscher  <stevenb@suse.de>\n \n \tPR tree-optimization/23234"}, {"sha": "29d90675a713e19bc47890f57d4527229315c873", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14e694e82ff0a1aff4a9b8da707fda2209fded7/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14e694e82ff0a1aff4a9b8da707fda2209fded7/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=f14e694e82ff0a1aff4a9b8da707fda2209fded7", "patch": "@@ -7003,20 +7003,31 @@ c_finish_if_stmt (location_t if_locus, tree cond, tree then_block,\n   /* Diagnose \";\" via the special empty statement node that we create.  */\n   if (extra_warnings)\n     {\n-      if (TREE_CODE (then_block) == NOP_EXPR && !TREE_TYPE (then_block))\n+      tree *inner_then = &then_block, *inner_else = &else_block;\n+\n+      if (TREE_CODE (*inner_then) == STATEMENT_LIST\n+\t  && STATEMENT_LIST_TAIL (*inner_then))\n+\tinner_then = &STATEMENT_LIST_TAIL (*inner_then)->stmt;\n+      if (*inner_else && TREE_CODE (*inner_else) == STATEMENT_LIST\n+\t  && STATEMENT_LIST_TAIL (*inner_else))\n+\tinner_else = &STATEMENT_LIST_TAIL (*inner_else)->stmt;\n+\n+      if (TREE_CODE (*inner_then) == NOP_EXPR && !TREE_TYPE (*inner_then))\n \t{\n-\t  if (!else_block)\n+\t  if (!*inner_else)\n \t    warning (0, \"%Hempty body in an if-statement\",\n-\t\t     EXPR_LOCUS (then_block));\n-\t  then_block = alloc_stmt_list ();\n+\t\t     EXPR_LOCUS (*inner_then));\n+\n+\t  *inner_then = alloc_stmt_list ();\n \t}\n-      if (else_block\n-\t  && TREE_CODE (else_block) == NOP_EXPR\n-\t  && !TREE_TYPE (else_block))\n+      if (*inner_else\n+\t  && TREE_CODE (*inner_else) == NOP_EXPR\n+\t  && !TREE_TYPE (*inner_else))\n \t{\n \t  warning (0, \"%Hempty body in an else-statement\",\n-\t\t   EXPR_LOCUS (else_block));\n-\t  else_block = alloc_stmt_list ();\n+\t\t   EXPR_LOCUS (*inner_else));\n+\n+\t  *inner_else = alloc_stmt_list ();\n \t}\n     }\n "}, {"sha": "7a0cbd5af738bd99affd2ea08428bd35adf018bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14e694e82ff0a1aff4a9b8da707fda2209fded7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14e694e82ff0a1aff4a9b8da707fda2209fded7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f14e694e82ff0a1aff4a9b8da707fda2209fded7", "patch": "@@ -1,4 +1,8 @@\n-2005-08-09  Stevem Bosscher  <stevenb@suse.de>\n+2005-08-09  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* gcc.dg/pr23165.c: New test.\n+\n+2005-08-09  Steven Bosscher  <stevenb@suse.de>\n \n \tPR tree-optimization/23234\n \t* gcc.dg/tree-ssa/pr23234.c: New test."}, {"sha": "2c63eb160903e7db645996965985a5da43bc64a3", "filename": "gcc/testsuite/gcc.dg/pr23165.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14e694e82ff0a1aff4a9b8da707fda2209fded7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23165.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14e694e82ff0a1aff4a9b8da707fda2209fded7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23165.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23165.c?ref=f14e694e82ff0a1aff4a9b8da707fda2209fded7", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wextra\" } */\n+void foo (void)\n+{\n+\tif (0)\n+\t  a: ; /* { dg-warning \"empty body in an if-statement\" } */\n+\n+\n+}"}]}