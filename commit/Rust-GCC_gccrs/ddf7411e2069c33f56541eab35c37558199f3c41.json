{"sha": "ddf7411e2069c33f56541eab35c37558199f3c41", "node_id": "C_kwDOANBUbNoAKGRkZjc0MTFlMjA2OWMzM2Y1NjU0MWVhYjM1YzM3NTU4MTk5ZjNjNDE", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2023-03-03T04:47:04Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2023-03-03T05:31:59Z"}, "message": "[vxworks] make wint_t and wchar_t the same distinct type\n\nWe used to define WINT_TYPE to WCHAR_TYPE, so that both wint_t and\nwchar_t mapped to the same underlying type, but this caused a glitch\nin Wstringop-overflow-6.C: on vxworks, wint_t is typedef'ed to\nwchar_t, headers got included in the test that declared functions that\ntake wint_t parameters, and those conflicted with the builtin\ndeclarations that had wint_t mapped to the underlying integral type.\n\nThe problem is that, in C++, wchar_t is a distinct type.  Having\nwint_t be a typedef to wchar_t in the headers, but a typedef to\nwchar_t's underlying integral type in builtins, makes for mismatches\nbetween the declarations.\n\nThis patch defines WINT_TYPE to \"wchar_t\" for vxworks, and adjusts the\nfallout, namely:\n\n- since wchar_t may not have been defined yet when\n  c_common_nodes_and_builtins runs, use the node already reserved for\n  wchar_t for wint_t when WINT_TYPE is defined to wchar_t.\n\n- for the same reason, when WINT_TYPE is wchar_t and we're not\n  compiling C++ where wchar_t is a compiler built-in, define\n  __WINT_TYPE__ to WCHAR_TYPE rather than WINT_TYPE, because wchar_t\n  may not even be defined in the translation unit.\n\n- recognize and handle wchar_type_node when type_suffix is called for\n  wint_type_node.\n\n\nfor  gcc/ChangeLog\n\n\t* config/vx-common.h (WINT_TYPE): Alias to \"wchar_t\".\n\nfor  gcc/c-family/ChangeLog\n\n\t* c-common.cc (c_common_nodes_and_builtins): Take\n\twchar_type_node for wint_type_node when aliased.\n\t(c_stddef_cpp_builtins): Define __WINT_TYPE__, when aliased to\n\twchar_t, to the underlying type rather than wchar_t in\n\tnon-C++.\n\t* c-cppbuiltin.cc (type_suffix): Handle wchar_type_node.", "tree": {"sha": "5e17a60582a6790180f7b66727311e657995f3ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e17a60582a6790180f7b66727311e657995f3ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddf7411e2069c33f56541eab35c37558199f3c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf7411e2069c33f56541eab35c37558199f3c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddf7411e2069c33f56541eab35c37558199f3c41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf7411e2069c33f56541eab35c37558199f3c41/comments", "author": null, "committer": null, "parents": [{"sha": "2e8686cb51896e0f89b353ae599c2c1ac5b960d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8686cb51896e0f89b353ae599c2c1ac5b960d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e8686cb51896e0f89b353ae599c2c1ac5b960d6"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "bfb950e56dbb15b7f52ce84462d4cc47a6833edb", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf7411e2069c33f56541eab35c37558199f3c41/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf7411e2069c33f56541eab35c37558199f3c41/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=ddf7411e2069c33f56541eab35c37558199f3c41", "patch": "@@ -4576,8 +4576,11 @@ c_common_nodes_and_builtins (void)\n   char32_array_type_node\n     = build_array_type (char32_type_node, array_domain_type);\n \n-  wint_type_node =\n-    TREE_TYPE (identifier_global_value (get_identifier (WINT_TYPE)));\n+  if (strcmp (WINT_TYPE, \"wchar_t\") == 0)\n+    wint_type_node = wchar_type_node;\n+  else\n+    wint_type_node =\n+      TREE_TYPE (identifier_global_value (get_identifier (WINT_TYPE)));\n \n   intmax_type_node =\n     TREE_TYPE (identifier_global_value (get_identifier (INTMAX_TYPE)));\n@@ -5359,7 +5362,14 @@ c_stddef_cpp_builtins(void)\n   builtin_define_with_value (\"__SIZE_TYPE__\", SIZE_TYPE, 0);\n   builtin_define_with_value (\"__PTRDIFF_TYPE__\", PTRDIFF_TYPE, 0);\n   builtin_define_with_value (\"__WCHAR_TYPE__\", MODIFIED_WCHAR_TYPE, 0);\n-  builtin_define_with_value (\"__WINT_TYPE__\", WINT_TYPE, 0);\n+  /* C++ has wchar_t as a builtin type, C doesn't, so if WINT_TYPE\n+     maps to wchar_t, define it to the underlying WCHAR_TYPE in C, and\n+     to wchar_t in C++, so the desired type equivalence holds.  */\n+  if (!c_dialect_cxx ()\n+      && strcmp (WINT_TYPE, \"wchar_t\") == 0)\n+    builtin_define_with_value (\"__WINT_TYPE__\", WCHAR_TYPE, 0);\n+  else\n+    builtin_define_with_value (\"__WINT_TYPE__\", WINT_TYPE, 0);\n   builtin_define_with_value (\"__INTMAX_TYPE__\", INTMAX_TYPE, 0);\n   builtin_define_with_value (\"__UINTMAX_TYPE__\", UINTMAX_TYPE, 0);\n   if (flag_char8_t)"}, {"sha": "98f5aef2af95d81eb353f12ab894158d793772af", "filename": "gcc/c-family/c-cppbuiltin.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf7411e2069c33f56541eab35c37558199f3c41/gcc%2Fc-family%2Fc-cppbuiltin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf7411e2069c33f56541eab35c37558199f3c41/gcc%2Fc-family%2Fc-cppbuiltin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.cc?ref=ddf7411e2069c33f56541eab35c37558199f3c41", "patch": "@@ -1903,6 +1903,8 @@ type_suffix (tree type)\n \t      systems use it anyway.  */\n \t   || type == char_type_node)\n     is_long = 0;\n+  else if (type == wchar_type_node)\n+    return type_suffix (underlying_wchar_type_node);\n   else\n     gcc_unreachable ();\n "}, {"sha": "9733c90fe4c6f48d3c37406bb7fdd1ea84dd5f32", "filename": "gcc/config/vx-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf7411e2069c33f56541eab35c37558199f3c41/gcc%2Fconfig%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf7411e2069c33f56541eab35c37558199f3c41/gcc%2Fconfig%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvx-common.h?ref=ddf7411e2069c33f56541eab35c37558199f3c41", "patch": "@@ -69,7 +69,7 @@ along with GCC; see the file COPYING3.  If not see\n #undef WINT_TYPE_SIZE\n #define WINT_TYPE_SIZE WCHAR_TYPE_SIZE\n #undef WINT_TYPE\n-#define WINT_TYPE WCHAR_TYPE\n+#define WINT_TYPE \"wchar_t\"\n \n /* ---------------------- Debug and unwind info formats ------------------  */\n "}]}