{"sha": "a2444ce97021c7a1e9afe05d014435c4c6933659", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0NDRjZTk3MDIxYzdhMWU5YWZlMDVkMDE0NDM1YzRjNjkzMzY1OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-02-27T02:45:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-02-27T02:45:12Z"}, "message": "PR c++/84441 - ICE with base initialized from ?:\n\n\t* call.c (unsafe_copy_elision_p): Handle COND_EXPR.\n\nFrom-SVN: r258022", "tree": {"sha": "e2fbfb8b75f6eb16b0beabd4d2cbf3b92fcdae25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2fbfb8b75f6eb16b0beabd4d2cbf3b92fcdae25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2444ce97021c7a1e9afe05d014435c4c6933659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2444ce97021c7a1e9afe05d014435c4c6933659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2444ce97021c7a1e9afe05d014435c4c6933659", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2444ce97021c7a1e9afe05d014435c4c6933659/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab5f26bba1270e16317188fe1070df05ab89bb00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab5f26bba1270e16317188fe1070df05ab89bb00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab5f26bba1270e16317188fe1070df05ab89bb00"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "e34611324c44beb56123521092e47930a48d664a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2444ce97021c7a1e9afe05d014435c4c6933659/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2444ce97021c7a1e9afe05d014435c4c6933659/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a2444ce97021c7a1e9afe05d014435c4c6933659", "patch": "@@ -1,5 +1,8 @@\n 2018-02-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/84441 - ICE with base initialized from ?:\n+\t* call.c (unsafe_copy_elision_p): Handle COND_EXPR.\n+\n \tPR c++/84520 - ICE with generic lambda in NSDMI.\n \t* lambda.c (lambda_expr_this_capture): Don't look for fake NSDMI\n \t'this' in a generic lambda instantiation."}, {"sha": "11fe28292fb105c10e0937672d036efa60e8ec6d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2444ce97021c7a1e9afe05d014435c4c6933659/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2444ce97021c7a1e9afe05d014435c4c6933659/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a2444ce97021c7a1e9afe05d014435c4c6933659", "patch": "@@ -7580,6 +7580,15 @@ unsafe_copy_elision_p (tree target, tree exp)\n   /* build_compound_expr pushes COMPOUND_EXPR inside TARGET_EXPR.  */\n   while (TREE_CODE (init) == COMPOUND_EXPR)\n     init = TREE_OPERAND (init, 1);\n+  if (TREE_CODE (init) == COND_EXPR)\n+    {\n+      /* We'll end up copying from each of the arms of the COND_EXPR directly\n+\t into the target, so look at them. */\n+      if (tree op = TREE_OPERAND (init, 1))\n+\tif (unsafe_copy_elision_p (target, op))\n+\t  return true;\n+      return unsafe_copy_elision_p (target, TREE_OPERAND (init, 2));\n+    }\n   return (TREE_CODE (init) == AGGR_INIT_EXPR\n \t  && !AGGR_INIT_VIA_CTOR_P (init));\n }"}, {"sha": "7c5c8b9f0b9ffe7f357512768fb710e15851cb7f", "filename": "gcc/testsuite/g++.dg/cpp0x/elision3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2444ce97021c7a1e9afe05d014435c4c6933659/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Felision3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2444ce97021c7a1e9afe05d014435c4c6933659/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Felision3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Felision3.C?ref=a2444ce97021c7a1e9afe05d014435c4c6933659", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/84441\n+// { dg-do compile { target c++11 } }\n+\n+struct B {\n+  int *b;\n+};\n+struct A {\n+  B b;\n+  A (A &&);\n+};\n+struct C {\n+  A c;\n+  int d;\n+};\n+C bar ();\n+struct D : C {\n+  D ()\n+    : C (0 ? bar () : bar ())\n+  {}\n+};\n+D d;"}]}