{"sha": "bf2dbec420f5c7a05af6ca3185a4ab297b80a905", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYyZGJlYzQyMGY1YzdhMDVhZjZjYTMxODVhNGFiMjk3YjgwYTkwNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-09-17T09:47:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-09-17T09:47:43Z"}, "message": "passes.c (rest_of_decl_compilation): Always call early_global_decl debug hook when we created a varpool node.\n\n2015-09-17  Richard Biener  <rguenther@suse.de>\n\n\t* passes.c (rest_of_decl_compilation): Always call early_global_decl\n\tdebug hook when we created a varpool node.\n\t* dwarf2out.c (dwarf2out_late_global_decl): When in LTO call\n\tdwarf2out_early_global_decl, when not just add location or\n\tvalue attributes to existing DIEs.\n\nFrom-SVN: r227857", "tree": {"sha": "6e2ef835fcb80c96a6f0fdaa4402ece9839684f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e2ef835fcb80c96a6f0fdaa4402ece9839684f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf2dbec420f5c7a05af6ca3185a4ab297b80a905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2dbec420f5c7a05af6ca3185a4ab297b80a905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf2dbec420f5c7a05af6ca3185a4ab297b80a905", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2dbec420f5c7a05af6ca3185a4ab297b80a905/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3b5d7bae1c9cc9bd1faa905c0526dce2ee90924"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "ffa966e00fb17fd9819cfc0a3a4098bf66677d96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2dbec420f5c7a05af6ca3185a4ab297b80a905/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2dbec420f5c7a05af6ca3185a4ab297b80a905/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf2dbec420f5c7a05af6ca3185a4ab297b80a905", "patch": "@@ -1,3 +1,11 @@\n+2015-09-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* passes.c (rest_of_decl_compilation): Always call early_global_decl\n+\tdebug hook when we created a varpool node.\n+\t* dwarf2out.c (dwarf2out_late_global_decl): When in LTO call\n+\tdwarf2out_early_global_decl, when not just add location or\n+\tvalue attributes to existing DIEs.\n+\n 2015-09-17  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.md (copysigndf3): New."}, {"sha": "04d593b16a2fb9ff38b22253a9b55b499029012c", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2dbec420f5c7a05af6ca3185a4ab297b80a905/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2dbec420f5c7a05af6ca3185a4ab297b80a905/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=bf2dbec420f5c7a05af6ca3185a4ab297b80a905", "patch": "@@ -21626,14 +21626,20 @@ dwarf2out_early_global_decl (tree decl)\n static void\n dwarf2out_late_global_decl (tree decl)\n {\n-  /* Output any global decls we missed or fill-in any location\n-     information we were unable to determine on the first pass.\n+  /* We have to generate early debug late for LTO.  */\n+  if (in_lto_p)\n+    dwarf2out_early_global_decl (decl);\n \n-     Skip over functions because they were handled by the\n-     debug_hooks->function_decl() call in rest_of_handle_final.  */\n-  if ((TREE_CODE (decl) != FUNCTION_DECL || !DECL_INITIAL (decl))\n+    /* Fill-in any location information we were unable to determine\n+       on the first pass.  */\n+  if (TREE_CODE (decl) == VAR_DECL\n       && !POINTER_BOUNDS_P (decl))\n-    dwarf2out_decl (decl);\n+    {\n+      dw_die_ref die = lookup_decl_die (decl);\n+      if (die)\n+\tadd_location_or_const_value_attribute (die, decl, false,\n+\t\t\t\t\t       DW_AT_location);\n+    }\n }\n \n /* Output debug information for type decl DECL.  Called from toplev.c"}, {"sha": "274e508f62d956f8f4ff46b1edfc3d4b9f147ccf", "filename": "gcc/passes.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2dbec420f5c7a05af6ca3185a4ab297b80a905/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2dbec420f5c7a05af6ca3185a4ab297b80a905/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=bf2dbec420f5c7a05af6ca3185a4ab297b80a905", "patch": "@@ -318,7 +318,17 @@ rest_of_decl_compilation (tree decl,\n       && !decl_function_context (decl)\n       && !current_function_decl\n       && DECL_SOURCE_LOCATION (decl) != BUILTINS_LOCATION\n-      && !decl_type_context (decl)\n+      && (!decl_type_context (decl)\n+\t  /* If we created a varpool node for the decl make sure to\n+\t     call early_global_decl.  Otherwise we miss changes\n+\t     introduced by member definitions like\n+\t\tstruct A { static int staticdatamember; };\n+\t\tint A::staticdatamember;\n+\t     and thus have incomplete early debug and late debug\n+\t     called from varpool node removal fails to handle it\n+\t     properly.  */\n+\t  || (TREE_CODE (decl) == VAR_DECL\n+\t      && TREE_STATIC (decl) && !DECL_EXTERNAL (decl)))\n       /* Avoid confusing the debug information machinery when there are\n \t errors.  */\n       && !seen_error ())"}]}