{"sha": "e198f14cbdf400c17d9d894377ebb5dee9f29759", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE5OGYxNGNiZGY0MDBjMTdkOWQ4OTQzNzdlYmI1ZGVlOWYyOTc1OQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-06-06T19:38:03Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-06-06T19:38:03Z"}, "message": "using.xml: Outline exception topics.\n\n2008-06-06  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* doc/xml/manual/using.xml: Outline exception topics.\n\n\t* include/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp: Format.\n\t* include/ext/pb_ds/detail/left_child_next_sibling_heap_/\n\tpolicy_access_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/priority_queue.hpp: Same.\n\t* include/ext/throw_allocator.h: Same.\n\n\t* include/ext/pb_ds/tag_and_trait.hpp (string_tag): New tag.\n\t(sequence_tag): New tag. Doxygen markup fixes.\n\n\t* testsuite/lib/libstdc++.exp: Remove twister_ran_gen.cc source file.\n\n\t* testsuite/performance/ext/pb_ds/text_find_timing.cc: Fix\n\tcomment typo, include paths, format.\n\t* testsuite/performance/ext/pb_ds/tree_text_insert_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/\n\thash_random_int_erase_mem_usage.cc: Same.\n\t* testsuite/performance/ext/pb_ds/\n\trandom_int_subscript_find_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/\n\tpriority_queue_text_push_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/tree_split_join_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/random_int_find_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/multimap_text_insert_mem_usage.hpp\n\t* testsuite/performance/ext/pb_ds/multimap_text_find_timing.hpp\n\t* testsuite/performance/ext/pb_ds/\n\tpriority_queue_random_int_push_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/priority_queue_text_modify_timing.hpp\n\t* testsuite/performance/ext/pb_ds/tree_order_statistics_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/\n\tpriority_queue_text_push_pop_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/\n\tpriority_queue_text_join_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/\n\tpriority_queue_random_int_push_pop_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/\n\trandom_int_subscript_insert_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/tree_text_lor_find_timing.cc: Same.\n\t* testsuite/performance/ext/pb_ds/multimap_text_insert_timing.hpp\n\t* testsuite/performance/ext/pb_ds/\n\tpriority_queue_text_pop_mem_usage.cc: Same.\n\t* testsuite/performance/ext/pb_ds/\n\thash_zlob_random_int_find_timing.cc: Same.\n\t* testsuite/ext/pb_ds/regression/hash_data_map_rand.cc: Same.\n\t* testsuite/ext/pb_ds/regression/trie_data_map_rand.cc: Same.\n\t* testsuite/ext/pb_ds/regression/list_update_no_data_map_rand.cc: Same.\n\t* testsuite/ext/pb_ds/regression/tree_no_data_map_rand.cc: Same.\n\t* testsuite/ext/pb_ds/regression/list_update_data_map_rand.cc: Same.\n\t* testsuite/ext/pb_ds/regression/hash_no_data_map_rand.cc: Same.\n\t* testsuite/ext/pb_ds/regression/priority_queue_rand.cc: Same.\n\t* testsuite/ext/pb_ds/regression/tree_data_map_rand.cc: Same.\n\t* testsuite/ext/pb_ds/regression/trie_no_data_map_rand.cc: Same.\n\t* testsuite/util/regression/trait/priority_queue/trait.hpp: Same.\n\t* testsuite/util/regression/trait/erase_if_fn.hpp: Same.\n\t* testsuite/util/regression/trait/assoc/native_type_trait.hpp: Same.\n\t* testsuite/util/regression/trait/assoc/node_update_trait.hpp: Same.\n\t* testsuite/util/regression/trait/assoc/get_set_load_trait.hpp: Same.\n\t* testsuite/util/regression/trait/assoc/get_set_loads_trait.hpp: Same.\n\t* testsuite/util/regression/trait/assoc/trait.hpp: Same.\n\t* testsuite/util/regression/trait/assoc/resize_trait.hpp: Same.\n\t* testsuite/util/regression/trait/assoc/type_trait.hpp: Same.\n\t* testsuite/util/regression/trait/assoc/to_string.hpp: Same.\n\t* testsuite/util/regression/basic_type.hpp: Same.\n\t* testsuite/util/common_type/priority_queue/string_form.hpp: Same.\n\t* testsuite/util/common_type/priority_queue/detail/\n\tds_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/detail/\n\tresize_policy_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/detail/\n\ttrigger_policy_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/detail/\n\tcomb_hash_fn_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/detail/ds_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/detail/\n\tsize_policy_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/detail/\n\tprobe_fn_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/detail/\n\tlist_update_policy_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/detail/\n\tstore_hash_string_form.hpp: Same.\n\t* testsuite/util/common_type/assoc/native_set.hpp: Same.\n\t* testsuite/util/io/prog_bar.cc: Same.\n\n\t* testsuite/util/regression/rand/io: Remove.\n\t* testsuite/util/regression/rand/io/priority_queue: Same.\n\t* testsuite/util/regression/rand/io/assoc: Same.\n\t* testsuite/util/regression/rand/io/priority_queue/\n\txml_formatter.hpp: Consolidate this...\n\t* testsuite/util/regression/rand/io/assoc/xml_formatter.hpp: ...this\n\t* testsuite/util/regression/rand/io/xml_formatter.hpp: ... and this\n\t* testsuite/util/regression/rand/xml_formatter.hpp: ...here.\n\n\t* testsuite/util/regression/rand/priority_queue/\n\tcontainer_rand_regression_test.hpp:To ...\n\tcontainer_rand_regression_test.h: ... this.\n\t* testsuite/util/regression/rand/priority_queue/detail/*.hpp:To ...\n\t* testsuite/util/regression/rand/priority_queue/\n\tcontainer_rand_regression_test.tcc: ... this.\n\tPB_DS_THROW_IF_FAIL: Change to _GLIBCXX_THROW_IF, adjust predicate.\n\tPB_DS_SET_DESTRUCT_PRINT: Fold inline.\n\tPB_DS_CANCEL_DESTRUCT_PRINT: Fold inline.\n\t* testsuite/util/regression/rand/priority_queue/\n\trand_regression_test.hpp: Adjust includes.\n\n\t* testsuite/util/regression/rand/assoc/\n\tcontainer_rand_regression_test.hpp: To ...\n\t* testsuite/util/regression/rand/assoc/\n\tcontainer_rand_regression_test.h: ... this.\n\t* testsuite/util/regression/rand/assoc/detail/*.hpp:To ...\n\t* testsuite/util/regression/rand/assoc/\n\tcontainer_rand_regression_test.tcc: ...this.\n\t* testsuite/util/regression/rand/assoc/rand_regression_test.hpp: Adjust\n\tincludes.\n\n\t* testsuite/util/regression/priority_queue: Remove.\n\t* testsuite/util/regression/assoc: Remove.\n\t* testsuite/util/regression/priority_queue/\n\tcommon_type.hpp: Consolidate this...\n\t* testsuite/util/regression/assoc/common_type.hpp: ... and this\n\t* testsuite/util/regression/common_type.hpp: ...here.\n\n\t* testsuite/util/rng: Remove.\n\t* testsuite/util/rng/twister_rand_gen.cc: Consolidate...\n\t* testsuite/util/rng/twister_rand_gen.hpp: ... and this\n\t* testsuite/util/testsuite_rng.h: ...here.\n\n\t* testsuite/util/native_type/priority_queue: Remove.\n\t* testsuite/util/native_type/priority_queue/\n\tnative_priority_queue.hpp: To...\n\t* testsuite/util/native_type/native_priority_queue.hpp: ...here.\n\n\t* testsuite/util/native_type/assoc: Remove.\n\t* testsuite/util/native_type/assoc/native_multimap.hpp: To...\n\t* testsuite/util/native_type/assoc/native_tree_tag.hpp: To...\n\t* testsuite/util/native_type/assoc/native_hash_multimap.hpp: To...\n\t* testsuite/util/native_type/assoc/native_set.hpp: To...\n\t* testsuite/util/native_type/assoc/native_map.hpp: To...\n\t* testsuite/util/native_type/assoc/native_hash_set.hpp: To...\n\t* testsuite/util/native_type/assoc/native_hash_tag.hpp: To...\n\t* testsuite/util/native_type/assoc/native_hash_map.hpp: To...\n\t* testsuite/util/native_type/native_multimap.hpp: ...here.\n\t* testsuite/util/native_type/native_tree_tag.hpp: ...here.\n\t* testsuite/util/native_type/native_hash_multimap.hpp: ...here.\n\t* testsuite/util/native_type/native_set.hpp: ...here.\n\t* testsuite/util/native_type/native_map.hpp: ...here.\n\t* testsuite/util/native_type/native_hash_set.hpp: ...here.\n\t* testsuite/util/native_type/native_hash_tag.hpp: ...here.\n\t* testsuite/util/native_type/native_hash_map.hpp: ...here.\n\n\t* testsuite/util/common_type/priority_queue/common_type.hpp:\n\tMake include guard distinct.\n\t* testsuite/util/common_type/assoc/common_type.hpp: Same.\n\nFrom-SVN: r136498", "tree": {"sha": "d076e57d474a3810918a7434147e03040abfd7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d076e57d474a3810918a7434147e03040abfd7ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e198f14cbdf400c17d9d894377ebb5dee9f29759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e198f14cbdf400c17d9d894377ebb5dee9f29759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e198f14cbdf400c17d9d894377ebb5dee9f29759", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e198f14cbdf400c17d9d894377ebb5dee9f29759/comments", "author": null, "committer": null, "parents": [{"sha": "2e3f9c21d5c3091c6cfdc99f94c7b269eaec8f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3f9c21d5c3091c6cfdc99f94c7b269eaec8f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e3f9c21d5c3091c6cfdc99f94c7b269eaec8f54"}], "stats": {"total": 334, "additions": 0, "deletions": 334}, "files": [{"sha": "dadf8b4d7b58db6bb4fb66afd50ec0a374b40363", "filename": "libstdc++-v3/testsuite/util/regression/rand/priority_queue/container_rand_regression_test.hpp", "status": "removed", "additions": 0, "deletions": 334, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3f9c21d5c3091c6cfdc99f94c7b269eaec8f54/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fcontainer_rand_regression_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3f9c21d5c3091c6cfdc99f94c7b269eaec8f54/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fcontainer_rand_regression_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fregression%2Frand%2Fpriority_queue%2Fcontainer_rand_regression_test.hpp?ref=2e3f9c21d5c3091c6cfdc99f94c7b269eaec8f54", "patch": "@@ -1,334 +0,0 @@\n-// -*- C++ -*-\n-\n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the terms\n-// of the GNU General Public License as published by the Free Software\n-// Foundation; either version 2, or (at your option) any later\n-// version.\n-\n-// This library is distributed in the hope that it will be useful, but\n-// WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-// General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n-// MA 02111-1307, USA.\n-\n-// As a special exception, you may use this file as part of a free\n-// software library without restriction.  Specifically, if other files\n-// instantiate templates or use macros or inline functions from this\n-// file, or you compile this file and link it with other files to\n-// produce an executable, this file does not by itself cause the\n-// resulting executable to be covered by the GNU General Public\n-// License.  This exception does not however invalidate any other\n-// reasons why the executable file might be covered by the GNU General\n-// Public License.\n-\n-// Copyright (C) 2004 Ami Tavory and Vladimir Dreizin, IBM-HRL.\n-\n-// Permission to use, copy, modify, sell, and distribute this software\n-// is hereby granted without fee, provided that the above copyright\n-// notice appears in all copies, and that both that copyright notice\n-// and this permission notice appear in supporting documentation. None\n-// of the above authors, nor IBM Haifa Research Laboratories, make any\n-// representation about the suitability of this software for any\n-// purpose. It is provided \"as is\" without express or implied\n-// warranty.\n-\n-/**\n- * @file container_rand_regression_test.hpp\n- * Contains a random regression test for a specific container type.\n- */\n-\n-#ifndef PB_DS_CONTAINER_RAND_REGRESSION_TEST_HPP\n-#define PB_DS_CONTAINER_RAND_REGRESSION_TEST_HPP\n-\n-#include <algorithm>\n-#include <string>\n-#include <sstream>\n-#include <utility>\n-#include <cassert>\n-#include <regression/basic_type.hpp>\n-#include <ext/pb_ds/priority_queue.hpp>\n-#include <io/prog_bar.hpp>\n-#include <rng/twister_rand_gen.hpp>\n-#include <common_type/priority_queue/string_form.hpp>\n-#include <regression/rand/io/priority_queue/xml_formatter.hpp>\n-#include <regression/trait/priority_queue/trait.hpp>\n-\n-namespace __gnu_pbds\n-{\n-\n-  namespace test\n-  {\n-\n-    namespace detail\n-    {\n-\n-#ifdef PB_DS_REGRESSION_TRACE\n-#define PB_DS_TRACE(X) std::cerr << X << std::endl\n-#else // #ifdef PB_DS_REGRESSION_TRACE\n-#define PB_DS_TRACE(X)\n-#endif // #ifdef PB_DS_REGRESSION_TRACE\n-\n-#define PB_DS_CLASS_T_DEC\t\t\t\\\n-      template<typename Cntnr>\n-\n-#define PB_DS_CLASS_C_DEC\t\t\t\t\\\n-      container_rand_regression_test<\t\t\t\\\n-\t\t\t\t\t\tCntnr>\n-\n-#define PB_DS_COND_COMPARE(L, R)\t\t\\\n-      if (m_g.get_prob() < m_mp)\t\t\\\n-        cmp(L, R, __FUNCTION__);\n-\n-#define PB_DS_RUN_MTHD(MTHD)\t\t\t\\\n-      {\t\t\t\t\t\t\\\n-        bool done = false;\t\t\t\\\n-\t\t\t\t\t\t\\\n-        while (!done)\t\t\t\t\\\n-\t  done = MTHD();\t\t\t\\\n-      }\n-\n-#define PB_DS_THROW_IF_FAILED_(PRED, MORE, P_C, P_NC, F, L)\t\t\\\n-      if (!(PRED))\t\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  std::cerr << \"Failure at \" << F << \": \" << L << std::endl;\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  std::cerr << MORE << std::endl;\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  std::cerr << \"container:\" << std::endl;\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  print_container(*(P_C));\t\t\t\t\t\\\n-\t  std::cerr << std::endl;\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  std::cerr << \"native container:\" << std::endl;\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  print_container(*(P_NC));\t\t\t\t\t\\\n-\t  std::cerr << std::endl;\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  throw std::logic_error(\"fucked!\");\t\t\t\t\\\n-\t}\n-\n-#define PB_DS_THROW_IF_FAILED(PRED, MORE, P_C, P_NC)\t\t\t\\\n-      PB_DS_THROW_IF_FAILED_(PRED, MORE, P_C, P_NC, __FILE__, __LINE__)\n-\n-#define PB_DS_SET_DESTRUCT_PRINT\t\t\t\\\n-      destructor_printer dest_print___(__FUNCTION__);\n-\n-#define PB_DS_CANCEL_DESTRUCT_PRINT\t\t\\\n-      dest_print___.cancel_print();\n-\n-      // Rand test specialized for a specific container.\n-      template<typename Cntnr>\n-      class container_rand_regression_test\n-      {\n-\n-      public:\n-\n-        container_rand_regression_test(unsigned long seed, size_t n, size_t m, double tp, double ip, double dp, double ep, double cp, double mp, bool disp);\n-\n-\tvirtual\n-        ~container_rand_regression_test();\n-\n-\tvoid\n-        operator()();\n-\n-      private:\n-\ttypedef Cntnr cntnr;\n-\n-\ttypedef typename cntnr::allocator_type allocator_type;\n-\n-\ttypedef typename cntnr::size_type size_type;\n-\n-\ttypedef twister_rand_gen gen;\n-\n-\ttypedef basic_type value_type;\n-\n-\ttypedef native_priority_queue<std::string, true> native_type;\n-\n-\tenum op\n-\t  {\n-\t    insert_op,\n-\t    modify_op,\n-\t    erase_op,\n-\t    clear_op,\n-\t    other_op\n-\t  };\n-\n-\ttypedef __gnu_cxx::throw_allocator<char> alloc_t;\n-\n-\ttypedef regression_test_traits<Cntnr> test_traits;\n-\n-      private:\n-\n-\top\n-        get_next_op();\n-\n-\tsize_t\n-        get_next_sub_op(size_t max);\n-\n-\tstatic void\n-        defs();\n-\n-\tstatic void\n-        value_defs();\n-\n-\tstatic void\n-        ds_defs();\n-\n-\tstatic void\n-        iterator_defs();\n-\n-\tstatic void\n-        policy_defs();\n-\n-\tvoid\n-        policy_access();\n-\n-\tvoid\n-        it_copy();\n-\n-\tvoid\n-        it_assign();\n-\n-\tbool\n-        default_constructor();\n-\n-\tvoid\n-        swap();\n-\n-\tbool\n-        copy_constructor();\n-\n-\tbool\n-        assignment_operator();\n-\n-\tbool\n-        it_constructor();\n-\n-\tbool\n-        push();\n-\n-\tbool\n-        modify();\n-\n-\tbool\n-        pop();\n-\n-\tbool\n-        erase_if();\n-\n-\tbool\n-        erase_it();\n-\n-\tbool\n-        clear();\n-\n-\tbool\n-        split_join();\n-\n-\tvoid\n-        cmp(const Cntnr& r_container, const native_type& r_native_c, const std::string& r_call_fn);\n-\n-\tvoid\n-        print_container(const native_type& r_cnt, std::ostream& r_os = std::cerr) const;\n-\n-\tvoid\n-        print_container(const cntnr& r_cnt, std::ostream& r_os = std::cerr) const;\n-\n-      private:\n-\tstruct destructor_printer\n-\t{\n-\t  destructor_printer(const std::string& r_msg) : m_msg(r_msg),\n-\t\t\t\t\t\t\t m_print(true)\n-\t  { }\n-\n-\t  void\n-\t  cancel_print()\n-\t  {\n-            m_print = false;\n-\t  }\n-\n-\t  ~destructor_printer()\n-\t  {\n-            if (!m_print)\n-\t      return;\n-\n-            std::cerr << std::endl <<\n-\t      \"Uncaught exception: \" << std::endl <<\n-\t      m_msg << std::endl;\n-\t  }\n-\n-\tprivate:\n-\t  const std::string m_msg;\n-\n-\t  bool m_print;\n-\t};\n-\n-      private:\n-\tconst unsigned long m_seed;\n-\n-\tconst size_t m_n;\n-\tconst size_t m_m;\n-\tconst double m_tp;\n-\tconst double m_ip;\n-\tconst double m_dp;\n-\tconst double m_ep;\n-\tconst double m_cp;\n-\tconst double m_mp;\n-\tconst bool m_disp;\n-\n-\ttwister_rand_gen m_g;\n-\n-\tCntnr* m_p_c;\n-\n-\tnative_type m_native_c;\n-\n-\talloc_t m_alloc;\n-\n-\tsize_t m_i;\n-      };\n-\n-#include <regression/rand/priority_queue/detail/constructor_destructor_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/cmp_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/operator_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/insert_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/modify_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/clear_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/erase_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/defs_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/policy_access_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/split_join_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/it_conversion_fn_imps.hpp>\n-#include <regression/rand/priority_queue/detail/diagnostic_fn_imps.hpp>\n-\n-#undef PB_DS_COND_COMPARE\n-\n-#undef PB_DS_RUN_MTHD\n-\n-#undef PB_DS_CLASS_T_DEC\n-\n-#undef PB_DS_CLASS_C_DEC\n-\n-#undef PB_DS_THROW_IF_FAILED_\n-\n-#undef PB_DS_THROW_IF_FAILED\n-\n-#undef PB_DS_SET_DESTRUCT_PRINT\n-\n-#undef PB_DS_CANCEL_DESTRUCT_PRINT\n-\n-#undef PB_DS_TRACE\n-\n-    } // namespace detail\n-\n-  } // namespace test\n-\n-} // namespace __gnu_pbds\n-\n-#endif // #ifndef PB_DS_CONTAINER_RAND_REGRESSION_TEST_HPP"}]}