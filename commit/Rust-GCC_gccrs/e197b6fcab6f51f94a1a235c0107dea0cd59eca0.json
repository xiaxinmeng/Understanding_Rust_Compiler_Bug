{"sha": "e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE5N2I2ZmNhYjZmNTFmOTRhMWEyMzVjMDEwN2RlYTBjZDU5ZWNhMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-10-11T22:42:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-10-11T22:42:31Z"}, "message": "re PR rtl-optimization/8165 (builtin string functions SEGV on alpha-pc-linux-gnu at -O2)\n\n\tPR opt/8165\n\t* gcse.c (adjust_libcall_notes): Also adjust notes for INSN.\n\t* gcc.c-torture/execute/20021011-1.c: New.\n\nFrom-SVN: r58071", "tree": {"sha": "3203c3eb64bd45773f8e749fed4cdc25520e0110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3203c3eb64bd45773f8e749fed4cdc25520e0110"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e197b6fcab6f51f94a1a235c0107dea0cd59eca0/comments", "author": null, "committer": null, "parents": [{"sha": "37d2b7e2dc7cd33b71e889f77520de7404aa3a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d2b7e2dc7cd33b71e889f77520de7404aa3a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d2b7e2dc7cd33b71e889f77520de7404aa3a62"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "c84e8eb94690d85625837dea1159859cec0fd43d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e197b6fcab6f51f94a1a235c0107dea0cd59eca0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e197b6fcab6f51f94a1a235c0107dea0cd59eca0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "patch": "@@ -1,3 +1,8 @@\n+2002-10-11  Richard Henderson  <rth@redhat.com>\n+\n+\tPR opt/8165\n+\t* gcse.c (adjust_libcall_notes): Also adjust notes for INSN.\n+\n 2002-10-11  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* cfganal.c (dfs_enumerate_from): Use PARAMS."}, {"sha": "bdde90f4e0c2e8128fe092f32c90a4ea04d91885", "filename": "gcc/gcse.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e197b6fcab6f51f94a1a235c0107dea0cd59eca0/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e197b6fcab6f51f94a1a235c0107dea0cd59eca0/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "patch": "@@ -4251,6 +4251,7 @@ cprop_insn (insn, alter_jumps)\n \n /* LIBCALL_SP is a zero-terminated array of insns at the end of a libcall;\n    their REG_EQUAL notes need updating.  */\n+\n static bool\n do_local_cprop (x, insn, alter_jumps, libcall_sp)\n      rtx x;\n@@ -4260,10 +4261,12 @@ do_local_cprop (x, insn, alter_jumps, libcall_sp)\n {\n   rtx newreg = NULL, newcnst = NULL;\n \n-  /* Rule out USE instructions and ASM statements as we don't want to change the hard registers mentioned.  */\n+  /* Rule out USE instructions and ASM statements as we don't want to\n+     change the hard registers mentioned.  */\n   if (GET_CODE (x) == REG\n       && (REGNO (x) >= FIRST_PSEUDO_REGISTER\n-          || (GET_CODE (PATTERN (insn)) != USE && asm_noperands (PATTERN (insn)) < 0)))\n+          || (GET_CODE (PATTERN (insn)) != USE\n+\t      && asm_noperands (PATTERN (insn)) < 0)))\n     {\n       cselib_val *val = cselib_lookup (x, GET_MODE (x), 0);\n       struct elt_loc_list *l;\n@@ -4327,17 +4330,23 @@ do_local_cprop (x, insn, alter_jumps, libcall_sp)\n \n /* LIBCALL_SP is a zero-terminated array of insns at the end of a libcall;\n    their REG_EQUAL notes need updating to reflect that OLDREG has been\n-   replaced with NEWVAL in INSN.  Return true if all substitutions could\n-   be made.  */\n+   replaced with NEWVAL in INSN.  Also update the REG_EQUAL notes in INSN.\n+\n+   Return true if all substitutions could be made.  */\n+\n static bool\n adjust_libcall_notes (oldreg, newval, insn, libcall_sp)\n      rtx oldreg, newval, insn, *libcall_sp;\n {\n-  rtx end;\n+  rtx end, note;\n+\n+  note = find_reg_equal_equiv_note (insn);\n+  if (note)\n+    XEXP (note, 0) = replace_rtx (XEXP (note, 0), oldreg, newval);\n \n   while ((end = *libcall_sp++))\n     {\n-      rtx note = find_reg_equal_equiv_note (end);\n+      note = find_reg_equal_equiv_note (end);\n \n       if (! note)\n \tcontinue;"}, {"sha": "b1b2c406a712e28308611c8f2620e04ae412a0ad", "filename": "gcc/testsuite/gcc.c-torture/execute/20021011-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e197b6fcab6f51f94a1a235c0107dea0cd59eca0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021011-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e197b6fcab6f51f94a1a235c0107dea0cd59eca0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021011-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021011-1.c?ref=e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "patch": "@@ -0,0 +1,24 @@\n+/* PR opt/8165.  */\n+\n+extern void abort (void);\n+\n+char buf[64];\n+\n+int\n+main (void)\n+{\n+  int i;\n+\n+  __builtin_strcpy (buf, \"mystring\");\n+  if (__builtin_strcmp (buf, \"mystring\") != 0)\n+    abort ();\n+\n+  for (i = 0; i < 16; ++i)\n+    {\n+      __builtin_strcpy (buf + i, \"mystring\");\n+      if (__builtin_strcmp (buf + i, \"mystring\") != 0)\n+\tabort ();\n+    }\n+\n+  return 0;\n+}"}]}