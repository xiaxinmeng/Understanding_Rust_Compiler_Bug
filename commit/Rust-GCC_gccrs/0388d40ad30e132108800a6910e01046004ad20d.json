{"sha": "0388d40ad30e132108800a6910e01046004ad20d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4OGQ0MGFkMzBlMTMyMTA4ODAwYTY5MTBlMDEwNDYwMDRhZDIwZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-02-10T20:13:21Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-02-10T20:13:21Z"}, "message": "cse.c, [...]: Fix comment typos.\n\n\t* cse.c, tree-ssa-loop-ivopts.c, config/rs6000/linux-unwind.h:\n\tFix comment typos.\n\nFrom-SVN: r94845", "tree": {"sha": "3631a492225fa7bd390f3c8a207719fbf73e30ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3631a492225fa7bd390f3c8a207719fbf73e30ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0388d40ad30e132108800a6910e01046004ad20d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0388d40ad30e132108800a6910e01046004ad20d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0388d40ad30e132108800a6910e01046004ad20d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0388d40ad30e132108800a6910e01046004ad20d/comments", "author": null, "committer": null, "parents": [{"sha": "f00485cc36b4e2c34f5e4f8942ada21298593055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00485cc36b4e2c34f5e4f8942ada21298593055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f00485cc36b4e2c34f5e4f8942ada21298593055"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "d8da914663b353b30b425a538bc66aef1bb745d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0388d40ad30e132108800a6910e01046004ad20d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0388d40ad30e132108800a6910e01046004ad20d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0388d40ad30e132108800a6910e01046004ad20d", "patch": "@@ -1,3 +1,8 @@\n+2005-02-10  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cse.c, tree-ssa-loop-ivopts.c, config/rs6000/linux-unwind.h:\n+\tFix comment typos.\n+\n 2005-02-10  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-ssa-loop-ivopts.c (determine_base_object): Ignore casts."}, {"sha": "13afdfa4fb2343db33252430dfd5c7c40ef906a0", "filename": "gcc/config/rs6000/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0388d40ad30e132108800a6910e01046004ad20d/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0388d40ad30e132108800a6910e01046004ad20d/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h?ref=0388d40ad30e132108800a6910e01046004ad20d", "patch": "@@ -194,7 +194,7 @@ get_regs (struct _Unwind_Context *context)\n }\n #endif\n \n-/* Find an entry in the process auxilliary vector.  The canonical way to\n+/* Find an entry in the process auxiliary vector.  The canonical way to\n    test for VMX is to look at AT_HWCAP.  */\n \n static long"}, {"sha": "e9f6c2f4724fd72cccb6bbbc6c27ce2910db22bf", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0388d40ad30e132108800a6910e01046004ad20d/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0388d40ad30e132108800a6910e01046004ad20d/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=0388d40ad30e132108800a6910e01046004ad20d", "patch": "@@ -335,7 +335,7 @@ static unsigned int cse_reg_info_table_size;\n static unsigned int cse_reg_info_table_first_uninitialized;\n \n /* The timestamp at the beginning of the current run of\n-   cse_basic_block.  We increment this variable at at the beginning of\n+   cse_basic_block.  We increment this variable at the beginning of\n    the current run of cse_basic_block.  The timestamp field of a\n    cse_reg_info entry matches the value of this variable if and only\n    if the entry has been initialized during the current run of"}, {"sha": "40661bea109bd1d46332d2f68a97e4b44eea1dd9", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0388d40ad30e132108800a6910e01046004ad20d/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0388d40ad30e132108800a6910e01046004ad20d/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=0388d40ad30e132108800a6910e01046004ad20d", "patch": "@@ -647,7 +647,7 @@ struct nfe_cache_elt\n   /* The edge for that the number of iterations is cached.  */\n   edge exit;\n \n-  /* True if the # of iterations was succesfully determined.  */\n+  /* True if the # of iterations was successfully determined.  */\n   bool valid_p;\n \n   /* Description of # of iterations.  */"}]}