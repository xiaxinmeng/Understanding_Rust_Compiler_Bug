{"sha": "cdeba3e07a1b54f9ab74d12c04c40672a1d17b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlYmEzZTA3YTFiNTRmOWFiNzRkMTJjMDRjNDA2NzJhMWQxN2I4OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-20T10:59:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-20T10:59:26Z"}, "message": "re PR target/84845 (ICE: in extract_insn, at recog.c:2304: unrecognizable insn at -O2 and above at aarch64)\n\n\tPR target/84845\n\t* config/aarch64/aarch64.md (*aarch64_reg_<mode>3_neg_mask2): Rename\n\tto ...\n\t(*aarch64_<optab>_reg_<mode>3_neg_mask2): ... this.  If pseudos can't\n\tbe created, use lowpart_subreg of operands[0] rather than operands[0]\n\titself.\n\t(*aarch64_reg_<mode>3_minus_mask): Rename to ...\n\t(*aarch64_ashl_reg_<mode>3_minus_mask): ... this.\n\t(*aarch64_<optab>_reg_di3_mask2): Use const_int_operand predicate\n\tand n constraint instead of aarch64_shift_imm_di and Usd.\n\t(*aarch64_reg_<optab>_minus<mode>3): Rename to ...\n\t(*aarch64_<optab>_reg_minus<mode>3): ... this.\n\n\t* gcc.c-torture/compile/pr84845.c: New test.\n\nFrom-SVN: r258678", "tree": {"sha": "f616c6eeb2707140926f5ed6a3d5696b92eaf033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f616c6eeb2707140926f5ed6a3d5696b92eaf033"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "094daefb7b79201ee5b39b07a64f9947524e6b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094daefb7b79201ee5b39b07a64f9947524e6b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094daefb7b79201ee5b39b07a64f9947524e6b2d"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "b90871616df14f713f4ed9e86ff5693ef78a9544", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cdeba3e07a1b54f9ab74d12c04c40672a1d17b89", "patch": "@@ -1,3 +1,18 @@\n+2018-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84845\n+\t* config/aarch64/aarch64.md (*aarch64_reg_<mode>3_neg_mask2): Rename\n+\tto ...\n+\t(*aarch64_<optab>_reg_<mode>3_neg_mask2): ... this.  If pseudos can't\n+\tbe created, use lowpart_subreg of operands[0] rather than operands[0]\n+\titself.\n+\t(*aarch64_reg_<mode>3_minus_mask): Rename to ...\n+\t(*aarch64_ashl_reg_<mode>3_minus_mask): ... this.\n+\t(*aarch64_<optab>_reg_di3_mask2): Use const_int_operand predicate\n+\tand n constraint instead of aarch64_shift_imm_di and Usd.\n+\t(*aarch64_reg_<optab>_minus<mode>3): Rename to ...\n+\t(*aarch64_<optab>_reg_minus<mode>3): ... this.\n+\n 2018-03-20  Sudakshina Das  <sudi.das@arm.com>\n \n \tPR target/82989"}, {"sha": "10fcde6a1b6a5251857f2dd623d61c0dbff06993", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=cdeba3e07a1b54f9ab74d12c04c40672a1d17b89", "patch": "@@ -4282,7 +4282,7 @@\n   [(set_attr \"type\" \"shift_reg\")]\n )\n \n-(define_insn_and_split \"*aarch64_reg_<mode>3_neg_mask2\"\n+(define_insn_and_split \"*aarch64_<optab>_reg_<mode>3_neg_mask2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=&r\")\n \t(SHIFT:GPI\n \t  (match_operand:GPI 1 \"register_operand\" \"r\")\n@@ -4295,7 +4295,7 @@\n   [(const_int 0)]\n   {\n     rtx tmp = (can_create_pseudo_p () ? gen_reg_rtx (SImode)\n-\t       : operands[0]);\n+\t       : lowpart_subreg (SImode, operands[0], <MODE>mode));\n     emit_insn (gen_negsi2 (tmp, operands[2]));\n \n     rtx and_op = gen_rtx_AND (SImode, tmp, operands[3]);\n@@ -4306,7 +4306,7 @@\n   }\n )\n \n-(define_insn_and_split \"*aarch64_reg_<mode>3_minus_mask\"\n+(define_insn_and_split \"*aarch64_ashl_reg_<mode>3_minus_mask\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=&r\")\n \t(ashift:GPI\n \t  (match_operand:GPI 1 \"register_operand\" \"r\")\n@@ -4340,8 +4340,8 @@\n \t  (match_operand:DI 1 \"register_operand\" \"r\")\n \t  (match_operator 4 \"subreg_lowpart_operator\"\n \t   [(and:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t     (match_operand 3 \"aarch64_shift_imm_di\" \"Usd\"))])))]\n-  \"((~INTVAL (operands[3]) & (GET_MODE_BITSIZE (DImode)-1)) == 0)\"\n+\t\t    (match_operand 3 \"const_int_operand\" \"n\"))])))]\n+  \"((~INTVAL (operands[3]) & (GET_MODE_BITSIZE (DImode) - 1)) == 0)\"\n {\n   rtx xop[3];\n   xop[0] = operands[0];\n@@ -4353,7 +4353,7 @@\n   [(set_attr \"type\" \"shift_reg\")]\n )\n \n-(define_insn_and_split \"*aarch64_reg_<optab>_minus<mode>3\"\n+(define_insn_and_split \"*aarch64_<optab>_reg_minus<mode>3\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=&r\")\n \t(ASHIFT:GPI\n \t  (match_operand:GPI 1 \"register_operand\" \"r\")"}, {"sha": "26b7e58c9865ec4bc3a0d8ee8156f1225ee17c6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cdeba3e07a1b54f9ab74d12c04c40672a1d17b89", "patch": "@@ -1,3 +1,8 @@\n+2018-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84845\n+\t* gcc.c-torture/compile/pr84845.c: New test.\n+\n 2018-03-20  Sudakshina Das  <sudi.das@arm.com>\n \n \tPR target/82989"}, {"sha": "1d4ef4a4dcbcbbd8fb729a833a1051e5f5d7a76a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr84845.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr84845.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdeba3e07a1b54f9ab74d12c04c40672a1d17b89/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr84845.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr84845.c?ref=cdeba3e07a1b54f9ab74d12c04c40672a1d17b89", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/84845 */\n+\n+int a, b, c;\n+unsigned long d;\n+\n+void\n+foo (void)\n+{\n+  b = -1;\n+  b <<= c >= 0;\n+  d = d << (63 & (short)-b) | d >> (63 & -(short)-b);\n+}"}]}