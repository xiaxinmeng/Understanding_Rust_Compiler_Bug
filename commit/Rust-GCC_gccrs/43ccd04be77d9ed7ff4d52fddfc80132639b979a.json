{"sha": "43ccd04be77d9ed7ff4d52fddfc80132639b979a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjY2QwNGJlNzdkOWVkN2ZmNGQ1MmZkZGZjODAxMzI2MzliOTc5YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T12:02:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T12:02:49Z"}, "message": "[multiple changes]\n\n2009-11-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj.adb, prj.ads, prj-nmsc.adb (Has_Multi_Unit_Sources): New field in\n\tproject_data.\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* osint.adb (Executable_Name): Correctly decide if the executable\n\tsuffix should be added when Only_If_No_Suffix is True.\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* frontend.adb, gnatlink.adb, prj-conf.adb, prj-tree.adb,\n\tprj-tree.ads: Minor reformatting\n\nFrom-SVN: r154793", "tree": {"sha": "ebc4ad5ed92f287b3b39d8dc7712fcf5e8ff665e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebc4ad5ed92f287b3b39d8dc7712fcf5e8ff665e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43ccd04be77d9ed7ff4d52fddfc80132639b979a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ccd04be77d9ed7ff4d52fddfc80132639b979a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ccd04be77d9ed7ff4d52fddfc80132639b979a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ccd04be77d9ed7ff4d52fddfc80132639b979a/comments", "author": null, "committer": null, "parents": [{"sha": "828781519a85aa04c47b5057555938017cec3ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828781519a85aa04c47b5057555938017cec3ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/828781519a85aa04c47b5057555938017cec3ae2"}], "stats": {"total": 163, "additions": 104, "deletions": 59}, "files": [{"sha": "5b55b1c59f430451c68f09c1c905721783860cee", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -1,3 +1,18 @@\n+2009-11-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj.adb, prj.ads, prj-nmsc.adb (Has_Multi_Unit_Sources): New field in\n+\tproject_data.\n+\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* osint.adb (Executable_Name): Correctly decide if the executable\n+\tsuffix should be added when Only_If_No_Suffix is True.\n+\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* frontend.adb, gnatlink.adb, prj-conf.adb, prj-tree.adb,\n+\tprj-tree.ads: Minor reformatting\n+\n 2009-11-30  Vincent Celier  <celier@adacore.com>\n \n \t* gnatlink.adb (Process_Args): Call Executable_Name on argument of -o"}, {"sha": "89746b880353a7fdc728a6a3df4c761955d792bf", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -400,6 +400,7 @@ begin\n          then\n             Initialize_Scalars := True;\n          end if;\n+\n          Next (Item);\n       end loop;\n    end;"}, {"sha": "708e1794d0401786c3751ab975ab81c4fbcc2768", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -447,8 +447,8 @@ procedure Gnatlink is\n \n                         Output_File_Name :=\n                           new String'(Executable_Name\n-                            (Argument (Next_Arg),\n-                             Only_If_No_Suffix => True));\n+                                        (Argument (Next_Arg),\n+                                         Only_If_No_Suffix => True));\n \n                      when 'R' =>\n                         Opt.Run_Path_Option := False;"}, {"sha": "1fcff593c259843941d2d8c029fc796ca5617799", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 50, "deletions": 36, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -813,12 +813,16 @@ package body Osint is\n       end if;\n \n       if Exec_Suffix'Length /= 0 then\n-         Add_Suffix := not Only_If_No_Suffix;\n-\n-         if not Add_Suffix then\n-            for J in 1 .. Name_Len loop\n+         Add_Suffix := True;\n+         if Only_If_No_Suffix then\n+            for J in reverse 1 .. Name_Len loop\n                if Name_Buffer (J) = '.' then\n-                  Add_Suffix := True;\n+                  Add_Suffix := False;\n+                  exit;\n+\n+               elsif Name_Buffer (J) = '/' or else\n+                     Name_Buffer (J) = Directory_Separator\n+               then\n                   exit;\n                end if;\n             end loop;\n@@ -875,40 +879,50 @@ package body Osint is\n          Exec_Suffix := new String'(Name_Buffer (1 .. Name_Len));\n       end if;\n \n-      declare\n-         Suffix : constant String := Exec_Suffix.all;\n-\n-      begin\n+      if Exec_Suffix'Length = 0 then\n          Free (Exec_Suffix);\n-         Canonical_Case_File_Name (Canonical_Name);\n-         Add_Suffix := not Only_If_No_Suffix;\n+         return Name;\n \n-         if not Add_Suffix then\n-            for J in 1 .. Name_Len loop\n-               if Name_Buffer (J) = '.' then\n-                  Add_Suffix := True;\n-                  exit;\n-               end if;\n-            end loop;\n-         end if;\n+      else\n+         declare\n+            Suffix : constant String := Exec_Suffix.all;\n \n-         if Suffix'Length = 0 and then\n-           Add_Suffix and then\n-           (Canonical_Name'Length <= Suffix'Length\n-            or else Canonical_Name (Canonical_Name'Last - Suffix'Length + 1\n-                                    .. Canonical_Name'Last) /= Suffix)\n-         then\n-            declare\n-               Result : String (1 .. Name'Length + Suffix'Length);\n-            begin\n-               Result (1 .. Name'Length) := Name;\n-               Result (Name'Length + 1 .. Result'Last) := Suffix;\n-               return Result;\n-            end;\n-         else\n-            return Name;\n-         end if;\n-      end;\n+         begin\n+            Free (Exec_Suffix);\n+            Canonical_Case_File_Name (Canonical_Name);\n+\n+            Add_Suffix := True;\n+            if Only_If_No_Suffix then\n+               for J in reverse 1 .. Name_Len loop\n+                  if Name_Buffer (J) = '.' then\n+                     Add_Suffix := False;\n+                     exit;\n+\n+                  elsif Name_Buffer (J) = '/' or else\n+                    Name_Buffer (J) = Directory_Separator\n+                  then\n+                     exit;\n+                  end if;\n+               end loop;\n+            end if;\n+\n+            if Add_Suffix and then\n+              (Canonical_Name'Length <= Suffix'Length\n+               or else Canonical_Name (Canonical_Name'Last - Suffix'Length + 1\n+                                       .. Canonical_Name'Last) /= Suffix)\n+            then\n+               declare\n+                  Result : String (1 .. Name'Length + Suffix'Length);\n+               begin\n+                  Result (1 .. Name'Length) := Name;\n+                  Result (Name'Length + 1 .. Result'Last) := Suffix;\n+                  return Result;\n+               end;\n+            else\n+               return Name;\n+            end if;\n+         end;\n+      end if;\n    end Executable_Name;\n \n    -----------------------"}, {"sha": "30823a3862dafad2dd87261d23e9ad8db7c38629", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -1188,10 +1188,12 @@ package body Prj.Conf is\n          Index : String := \"\";\n          Pkg   : Project_Node_Id := Empty_Node)\n       is\n-         Attr : Project_Node_Id;\n-         Val, Expr  : Name_Id := No_Name;\n-         Parent : Project_Node_Id := Config_File;\n+         Attr       : Project_Node_Id;\n          pragma Unreferenced (Attr);\n+\n+         Expr   : Name_Id         := No_Name;\n+         Val    : Name_Id         := No_Name;\n+         Parent : Project_Node_Id := Config_File;\n       begin\n          if Index /= \"\" then\n             Name_Len := Index'Length;\n@@ -1216,6 +1218,8 @@ package body Prj.Conf is\n             Value      => Create_Literal_String (Expr, Project_Tree));\n       end Create_Attribute;\n \n+      --  Local variables\n+\n       Name   : Name_Id;\n       Naming : Project_Node_Id;\n "}, {"sha": "b56d05f0ed9308237a27cdcfd05a47186970d899", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -777,6 +777,10 @@ package body Prj.Nmsc is\n          Source_Paths_Htable.Set (Data.Tree.Source_Paths_HT, Path.Name, Id);\n       end if;\n \n+      if Index /= 0 then\n+         Project.Has_Multi_Unit_Sources := True;\n+      end if;\n+\n       --  Add the source to the language list\n \n       Id.Next_In_Lang := Lang_Id.First_Source;"}, {"sha": "be8f5fcfedad303d0bc048e7c68b583a4783fc73", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -3083,15 +3083,17 @@ package body Prj.Tree is\n               Optional_Index_Case_Insensitive_Associative_Array\n          then\n             --  Results in:   for Name (\"index\" at index) use \"value\";\n-            --  This is currently only used for executables\n+            --  This is currently only used for executables.\n+\n             Set_Source_Index_Of (Node, Tree, To => Int (At_Index));\n+\n          else\n             --  Results in:   for Name (\"index\") use \"value\" at index;\n \n             --  ??? This limitation makes no sense, we should be able to\n-            --  set the source index on an expression\n-            pragma Assert (Kind_Of (Value, Tree) = N_Literal_String);\n+            --  set the source index on an expression.\n \n+            pragma Assert (Kind_Of (Value, Tree) = N_Literal_String);\n             Set_Source_Index_Of (Value, Tree, To => Int (At_Index));\n          end if;\n       end if;"}, {"sha": "fa8c132e565641fa3c706c6f587e4647587da597", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -614,24 +614,25 @@ package Prj.Tree is\n      (Tree       : Project_Node_Tree_Ref;\n       Prj_Or_Pkg : Project_Node_Id;\n       Name       : Name_Id;\n-      Index_Name : Name_Id       := No_Name;\n-      Kind       : Variable_Kind := List;\n-      At_Index   : Integer       := 0;\n+      Index_Name : Name_Id         := No_Name;\n+      Kind       : Variable_Kind   := List;\n+      At_Index   : Integer         := 0;\n       Value      : Project_Node_Id := Empty_Node) return Project_Node_Id;\n    --  Create a new attribute. The new declaration is added at the end of the\n    --  declarative item list for Prj_Or_Pkg (a project or a package), but\n    --  before any package declaration). No addition is done if Prj_Or_Pkg is\n    --  Empty_Node. If Index_Name is not \"\", then if creates an attribute value\n    --  for a specific index. At_Index is used for the \" at <idx>\" in the naming\n    --  exceptions.\n-   --  To set the value of the attribute, either provide a value for\n-   --  Value, or use Set_Expression_Of to set the value of the attribute\n-   --  (in which case Enclose_In_Expression might be useful). The former is\n-   --  recommended since it will more correctly handle cases where the index\n-   --  needs to be set on the expression rather than on the index of the\n-   --  attribute ('for Specification (\"unit\") use \"file\" at 3', versus\n-   --  'for Executable (\"file\" at 3) use \"name\"'). Value must be a\n-   --  N_String_Literal if an index will be added to it\n+   --\n+   --  To set the value of the attribute, either provide a value for Value, or\n+   --  use Set_Expression_Of to set the value of the attribute (in which case\n+   --  Enclose_In_Expression might be useful). The former is recommended since\n+   --  it will more correctly handle cases where the index needs to be set on\n+   --  the expression rather than on the index of the attribute (i.e. 'for\n+   --  Specification (\"unit\") use \"file\" at 3', versus 'for Executable (\"file\"\n+   --  at 3) use \"name\"'). Value must be a N_String_Literal if an index will be\n+   --  added to it.\n \n    function Create_Literal_String\n      (Str  : Namet.Name_Id;\n@@ -657,7 +658,7 @@ package Prj.Tree is\n      (Node : Project_Node_Id;\n       Tree : Project_Node_Tree_Ref) return Project_Node_Id;\n    --  Enclose the Node inside a N_Expression node, and return this expression.\n-   --  This does nothing if Node is already a N_Expression\n+   --  This does nothing if Node is already a N_Expression.\n \n    --------------------\n    -- Set Procedures --"}, {"sha": "0bae53c23fc297e5b3caf01483ac0e7a472c6f68", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -23,9 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Characters.Handling; use Ada.Characters.Handling;\n-with Ada.Unchecked_Deallocation;\n-\n with Debug;\n with Osint;    use Osint;\n with Output;   use Output;\n@@ -34,6 +31,9 @@ with Prj.Err;  use Prj.Err;\n with Snames;   use Snames;\n with Uintp;    use Uintp;\n \n+with Ada.Characters.Handling;    use Ada.Characters.Handling;\n+with Ada.Unchecked_Deallocation;\n+\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n with System.Case_Util; use System.Case_Util;\n@@ -107,6 +107,7 @@ package body Prj is\n                       Config_File_Temp               => False,\n                       Config_Checked                 => False,\n                       Need_To_Build_Lib              => False,\n+                      Has_Multi_Unit_Sources         => False,\n                       Depth                          => 0,\n                       Unkept_Comments                => False);\n "}, {"sha": "88f1ecd338118e96b1333cb5ca0599a614adf000", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ccd04be77d9ed7ff4d52fddfc80132639b979a/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=43ccd04be77d9ed7ff4d52fddfc80132639b979a", "patch": "@@ -1207,6 +1207,9 @@ package Prj is\n       --  use this field directly outside of the project manager, use\n       --  Prj.Env.Ada_Include_Path instead.\n \n+      Has_Multi_Unit_Sources : Boolean := False;\n+      --  Whether there is at least one source file containing multiple units\n+\n       -------------------\n       -- Miscellaneous --\n       -------------------"}]}