{"sha": "226ada7a41dba4d02def08367ed1b66199d6e472", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2YWRhN2E0MWRiYTRkMDJkZWYwODM2N2VkMWI2NjE5OWQ2ZTQ3Mg==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-16T00:56:17Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-16T00:56:17Z"}, "message": "osint.adb (Create_Debug_File): When an object file is specified...\n\n\t* osint.adb(Create_Debug_File): When an object file is specified,\n\tput the .dg file in the same directory as the object file.\n\n\t* osint.adb: Minor reformatting\n\n\t* lib-xref.adb (Output_Instantiation): New procedure to generate\n\tinstantiation references.\n\n\t* lib-xref.ads: Add documentation of handling of generic references.\n\n\t* ali.adb (Read_Instantiation_Ref): New procedure to read\n\tinstantiation references\n\n\t* ali.ads: Add spec for storing instantiation references\n\n\t* bindusg.adb: Minor reformatting\n\n\t* switch.adb: Add entry for Latin-5 (Cyrillic ISO-8859-5)\n\n\t* usage.adb: Add entry for Latin-5 (Cyrillic ISO-8859-5)\n\n\t* gnatcmd.adb: Add entry for Latin-5 (Cyrillic ISO-8859-5)\n\n\t* csets.adb: Add entry for Latin-5 (Cyrillic ISO-8859-5)\n\n\t* csets.ads:\n\tFix header format\n\tAdd 2001 to copyright date\n\tAdd entry for Latin-5 (Cyrillic ISO-8859-5)\n\n\t* adaint.c: mktemp is a macro on Lynx and can not be used as an\n\texpression.\n\n\t* misc.c (gnat_expand_constant): Do not strip UNCHECKED_CONVERT_EXPR\n\tif operand is CONSTRUCTOR.\n\n\t* trans.c (tree_transform, case N_Assignment_Statement): Set lineno\n\tbefore emiting check on right-hand side, so that exception information\n\tis correct.\n\n\t* utils.c (create_var_decl): Throw away initializing expression\n\tif just annotating types and non-constant.\n\n\t* prj-nmsc.adb: (Ada_Check): Migrate drom Ada_Default_... to\n\tDefault_Ada_...\n\n\t* prj.adb: (Ada_Default_Spec_Suffix, Ada_Default_Impl_Suffix):\n\tRemove functions.\n\t(Default_Ada_Spec_Suffix, Default_Ada_Impl_Suffix): Move to spec.\n\n\t* prj.ads: (Ada_Default_Spec_Suffix, Ada_Default_Impl_Suffix):\n\tRemove functions.\n\t(Default_Ada_Spec_Suffix, Default_Ada_Impl_Suffix): Move from body.\n\nFrom-SVN: r48052", "tree": {"sha": "3003511da2454d74ebb9520df6ddedbf1690fdaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3003511da2454d74ebb9520df6ddedbf1690fdaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/226ada7a41dba4d02def08367ed1b66199d6e472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226ada7a41dba4d02def08367ed1b66199d6e472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226ada7a41dba4d02def08367ed1b66199d6e472", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226ada7a41dba4d02def08367ed1b66199d6e472/comments", "author": null, "committer": null, "parents": [{"sha": "9b94bf9e05b0243ad2e5b5b801e00bf3c61261a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b94bf9e05b0243ad2e5b5b801e00bf3c61261a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b94bf9e05b0243ad2e5b5b801e00bf3c61261a8"}], "stats": {"total": 396, "additions": 351, "deletions": 45}, "files": [{"sha": "96b05ac34803653b44331c88625b9599badb0639", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -1,3 +1,71 @@\n+2001-12-14  Vincent Celier <celier@gnat.com>\n+\n+\t* osint.adb(Create_Debug_File): When an object file is specified, \n+\tput the .dg file in the same directory as the object file.\n+\t\n+2001-12-14  Robert Dewar <dewar@gnat.com>\n+\n+\t* osint.adb: Minor reformatting\n+\t\n+\t* lib-xref.adb (Output_Instantiation): New procedure to generate \n+\tinstantiation references.\n+\t\n+\t* lib-xref.ads: Add documentation of handling of generic references.\n+\t\n+\t* ali.adb (Read_Instantiation_Ref): New procedure to read \n+\tinstantiation references\n+\t\n+\t* ali.ads: Add spec for storing instantiation references\n+\t\n+\t* bindusg.adb: Minor reformatting\n+\t\n+\t* switch.adb: Add entry for Latin-5 (Cyrillic ISO-8859-5)\n+\t\n+\t* usage.adb: Add entry for Latin-5 (Cyrillic ISO-8859-5)\n+\t\n+\t* gnatcmd.adb: Add entry for Latin-5 (Cyrillic ISO-8859-5)\n+\t\n+\t* csets.adb: Add entry for Latin-5 (Cyrillic ISO-8859-5)\n+\t\n+\t* csets.ads:\n+\tFix header format\n+\tAdd 2001 to copyright date\n+\tAdd entry for Latin-5 (Cyrillic ISO-8859-5)\n+\t\n+2001-12-14  Matt Gingell <gingell@gnat.com>\n+\n+\t* adaint.c: mktemp is a macro on Lynx and can not be used as an \n+\texpression.\n+\t\n+2001-12-14  Richard Kenner <kenner@gnat.com>\n+\n+\t* misc.c (gnat_expand_constant): Do not strip UNCHECKED_CONVERT_EXPR \n+\tif operand is CONSTRUCTOR.\n+\t\n+2001-12-14  Ed Schonberg <schonber@gnat.com>\n+\n+\t* trans.c (tree_transform, case N_Assignment_Statement): Set lineno \n+\tbefore emiting check on right-hand side, so that exception information \n+\tis correct.\n+\n+2001-12-14  Richard Kenner <kenner@gnat.com>\n+\t\n+\t* utils.c (create_var_decl): Throw away initializing expression \n+\tif just annotating types and non-constant.\n+\t\n+2001-12-14  Vincent Celier <celier@gnat.com>\n+\n+\t* prj-nmsc.adb: (Ada_Check): Migrate drom Ada_Default_... to\n+\tDefault_Ada_...\n+\t\n+\t* prj.adb: (Ada_Default_Spec_Suffix, Ada_Default_Impl_Suffix): \n+\tRemove functions.\n+\t(Default_Ada_Spec_Suffix, Default_Ada_Impl_Suffix): Move to spec.\n+\t\n+\t* prj.ads: (Ada_Default_Spec_Suffix, Ada_Default_Impl_Suffix): \n+\tRemove functions.\n+\t(Default_Ada_Spec_Suffix, Default_Ada_Impl_Suffix): Move from body.\n+\n 2001-12-16  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* ChangeLog: Remove piece of diff output."}, {"sha": "e284236f34ff6b6b3b07a13d1b774e38e60db852", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -622,7 +622,8 @@ __gnat_open_new_temp (path, fmode)\n \n #if defined (linux) && !defined (__vxworks)\n   return mkstemp (path);\n-\n+#elif defined (__Lynx__)\n+  mktemp (path);\n #else\n   if (mktemp (path) == NULL)\n     return -1;"}, {"sha": "8ce631efa1c2f50e3be33b783753465476a44144", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 62, "deletions": 4, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -1218,7 +1218,7 @@ package body ALI is\n \n          Xref_Section.Increment_Last;\n \n-         declare\n+         Read_Refs_For_One_File : declare\n             XS : Xref_Section_Record renames\n                    Xref_Section.Table (Xref_Section.Last);\n \n@@ -1240,12 +1240,64 @@ package body ALI is\n             while C /= 'X' and then C /= EOF loop\n                Xref_Entity.Increment_Last;\n \n-               declare\n+               Read_Refs_For_One_Entity : declare\n+\n                   XE : Xref_Entity_Record renames\n                          Xref_Entity.Table (Xref_Entity.Last);\n \n                   N : Nat;\n \n+                  procedure Read_Instantiation_Reference;\n+                  --  Acquire instantiation reference. Caller has checked\n+                  --  that current character is '[' and on return the cursor\n+                  --  is skipped past the corresponding closing ']'.\n+\n+                  ----------------------------------\n+                  -- Read_Instantiation_Reference --\n+                  ----------------------------------\n+\n+                  procedure Read_Instantiation_Reference is\n+                  begin\n+                     Xref.Increment_Last;\n+\n+                     declare\n+                        XR : Xref_Record renames Xref.Table (Xref.Last);\n+\n+                     begin\n+                        P := P + 1; -- skip [\n+                        N := Get_Nat;\n+\n+                        if Nextc = '|' then\n+                           XR.File_Num :=\n+                             Sdep_Id (N + Nat (First_Sdep_Entry) - 1);\n+                           Current_File_Num := XR.File_Num;\n+                           P := P + 1;\n+                           N := Get_Nat;\n+\n+                        else\n+                           XR.File_Num := Current_File_Num;\n+                        end if;\n+\n+                        XR.Line  := N;\n+                        XR.Rtype := ' ';\n+                        XR.Col   := 0;\n+\n+                        --  Recursive call for next reference\n+\n+                        if Nextc = '[' then\n+                           pragma Warnings (Off); -- kill recursion warning\n+                           Read_Instantiation_Reference;\n+                           pragma Warnings (On);\n+                        end if;\n+\n+                        --  Skip closing bracket after recursive call\n+\n+                        P := P + 1;\n+                     end;\n+                  end Read_Instantiation_Reference;\n+\n+               --  Start of processing for Read_Refs_For_One_Entity\n+\n                begin\n                   XE.Line   := Get_Nat;\n                   XE.Etype  := Getc;\n@@ -1343,20 +1395,26 @@ package body ALI is\n                         XR.Line  := N;\n                         XR.Rtype := Getc;\n                         XR.Col   := Get_Nat;\n+\n+                        if Nextc = '[' then\n+                           Read_Instantiation_Reference;\n+                        end if;\n                      end;\n                   end loop;\n \n                   --  Record last cross-reference\n \n                   XE.Last_Xref := Xref.Last;\n                   C := Nextc;\n-               end;\n+\n+               end Read_Refs_For_One_Entity;\n             end loop;\n \n             --  Record last entity\n \n             XS.Last_Entity := Xref_Entity.Last;\n-         end;\n+\n+         end Read_Refs_For_One_File;\n \n          C := Getc;\n       end loop;"}, {"sha": "488fb63141d46a3176e597111c34ca50278722dd", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -687,8 +687,11 @@ package ALI is\n       --    i = implicit reference\n       --  See description in lib-xref.ads for further details\n \n-      Col : Pos;\n+      Col : Nat;\n       --  Column number for the reference\n+\n+      --  Note: for instantiation references, Rtype is set to ' ', and Col is\n+      --  set to zero. One or more such entries can follow any other reference.\n    end record;\n \n    package Xref is new Table.Table ("}, {"sha": "cc7fdb9303920eef3ed2e0387aaa9e8c80db8655", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -110,14 +110,12 @@ begin\n    Write_Str (\"mation\");\n    Write_Eol;\n \n-   --  Line for -I switch\n+   --  Lines for -I switch\n \n    Write_Switch_Char;\n    Write_Str (\"Idir     Specify library and source files search path\");\n    Write_Eol;\n \n-   --  Line for -I- switch\n-\n    Write_Switch_Char;\n    Write_Str (\"I-       Don't look for sources & library files\");\n    Write_Str (\" in default directory\");"}, {"sha": "9bf755acf61826cdfaef21d580b52d0998afb115", "filename": "gcc/ada/csets.adb", "status": "modified", "additions": 79, "deletions": 1, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fcsets.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fcsets.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.adb?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.25 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -468,6 +468,81 @@ package body Csets is\n \n       others => ' ');\n \n+   ---------------------------------------------------\n+   -- Definitions for Latin-5 (Cyrillic ISO-8859-5) --\n+   ---------------------------------------------------\n+\n+   Fold_Latin_5 : Translate_Table := Translate_Table'(\n+\n+      'a' => 'A',  X_D0 => X_B0,  X_E0 => X_C0,\n+      'b' => 'B',  X_D1 => X_B1,  X_E1 => X_C1,  X_F1 => X_A1,\n+      'c' => 'C',  X_D2 => X_B2,  X_E2 => X_C2,  X_F2 => X_A2,\n+      'd' => 'D',  X_D3 => X_B3,  X_E3 => X_C3,  X_F3 => X_A3,\n+      'e' => 'E',  X_D4 => X_B4,  X_E4 => X_C4,  X_F4 => X_A4,\n+      'f' => 'F',  X_D5 => X_B5,  X_E5 => X_C5,  X_F5 => X_A5,\n+      'g' => 'G',  X_D6 => X_B6,  X_E6 => X_C6,  X_F6 => X_A6,\n+      'h' => 'H',  X_D7 => X_B7,  X_E7 => X_C7,  X_F7 => X_A7,\n+      'i' => 'I',  X_D8 => X_B8,  X_E8 => X_C8,  X_F8 => X_A8,\n+      'j' => 'J',  X_D9 => X_B9,  X_E9 => X_C9,  X_F9 => X_A9,\n+      'k' => 'K',  X_DA => X_BA,  X_EA => X_CA,  X_FA => X_AA,\n+      'l' => 'L',  X_DB => X_BB,  X_EB => X_CB,  X_FB => X_AB,\n+      'm' => 'M',  X_DC => X_BC,  X_EC => X_CC,  X_FC => X_AC,\n+      'n' => 'N',  X_DD => X_BD,  X_ED => X_CD,\n+      'o' => 'O',  X_DE => X_BE,  X_EE => X_CE,  X_FE => X_AE,\n+      'p' => 'P',  X_DF => X_BF,  X_EF => X_CF,  X_FF => X_AF,\n+      'q' => 'Q',\n+      'r' => 'R',\n+      's' => 'S',\n+      't' => 'T',\n+      'u' => 'U',\n+      'v' => 'V',\n+      'w' => 'W',\n+      'x' => 'X',\n+      'y' => 'Y',\n+      'z' => 'Z',\n+\n+      'A' => 'A',  X_B0 => X_B0,  X_C0 => X_C0,\n+      'B' => 'B',  X_B1 => X_B1,  X_C1 => X_C1,  X_A1 => X_A1,\n+      'C' => 'C',  X_B2 => X_B2,  X_C2 => X_C2,  X_A2 => X_A2,\n+      'D' => 'D',  X_B3 => X_B3,  X_C3 => X_C3,  X_A3 => X_A3,\n+      'E' => 'E',  X_B4 => X_B4,  X_C4 => X_C4,  X_A4 => X_A4,\n+      'F' => 'F',  X_B5 => X_B5,  X_C5 => X_C5,  X_A5 => X_A5,\n+      'G' => 'G',  X_B6 => X_B6,  X_C6 => X_C6,  X_A6 => X_A6,\n+      'H' => 'H',  X_B7 => X_B7,  X_C7 => X_C7,  X_A7 => X_A7,\n+      'I' => 'I',  X_B8 => X_B8,  X_C8 => X_C8,  X_A8 => X_A8,\n+      'J' => 'J',  X_B9 => X_B9,  X_C9 => X_C9,  X_A9 => X_A9,\n+      'K' => 'K',  X_BA => X_BA,  X_CA => X_CA,  X_AA => X_AA,\n+      'L' => 'L',  X_BB => X_BB,  X_CB => X_CB,  X_AB => X_AB,\n+      'M' => 'M',  X_BC => X_BC,  X_CC => X_CC,  X_AC => X_AC,\n+      'N' => 'N',  X_BD => X_BD,  X_CD => X_CD,\n+      'O' => 'O',  X_BE => X_BE,  X_CE => X_CE,  X_AE => X_AE,\n+      'P' => 'P',  X_BF => X_BF,  X_CF => X_CF,  X_AF => X_AF,\n+      'Q' => 'Q',\n+      'R' => 'R',\n+      'S' => 'S',\n+      'T' => 'T',\n+      'U' => 'U',\n+      'V' => 'V',\n+      'W' => 'W',\n+      'X' => 'X',\n+      'Y' => 'Y',\n+      'Z' => 'Z',\n+\n+      '0' => '0',\n+      '1' => '1',\n+      '2' => '2',\n+      '3' => '3',\n+      '4' => '4',\n+      '5' => '5',\n+      '6' => '6',\n+      '7' => '7',\n+      '8' => '8',\n+      '9' => '9',\n+\n+      '_' => '_',\n+\n+      others => ' ');\n+\n    --------------------------------------------\n    -- Definitions for IBM PC (Code Page 437) --\n    --------------------------------------------\n@@ -966,6 +1041,9 @@ package body Csets is\n       elsif Identifier_Character_Set = '4' then\n          Fold_Upper := Fold_Latin_4;\n \n+      elsif Identifier_Character_Set = '5' then\n+         Fold_Upper := Fold_Latin_5;\n+\n       elsif Identifier_Character_Set = 'p' then\n          Fold_Upper := Fold_IBM_PC_437;\n "}, {"sha": "c69fc9da98686010689e181702a5adb9c22f49a3", "filename": "gcc/ada/csets.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fcsets.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fcsets.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.ads?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.16 $                             --\n+--                            $Revision$\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,6 +68,7 @@ pragma Elaborate_Body (Csets);\n    --    '2'  Latin-2\n    --    '3'  Latin-3\n    --    '4'  Latin-4\n+   --    '5'  Latin-5 (Cyrillic ISO-8859-5)\n    --    'p'  IBM PC (code page 437)\n    --    '8'  IBM PC (code page 850)\n    --    'f'  Full upper set (all distinct)"}, {"sha": "8f7b2e259852ef4311420c77f848389a688d336c", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -464,6 +464,8 @@ procedure GNATCmd is\n                                                 \"-gnati3 \"                 &\n                                              \"4 \"                          &\n                                                 \"-gnati4 \"                 &\n+                                             \"5 \"                          &\n+                                                \"-gnati5 \"                 &\n                                              \"PC \"                         &\n                                                 \"-gnatip \"                 &\n                                              \"PC850 \"                      &"}, {"sha": "931e02fda7521c96f1ad095db3f492e776a0f168", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -481,7 +481,9 @@ package body Lib.Xref is\n          Crloc  := No_Location;\n \n          for Refno in 1 .. Nrefs loop\n-            declare\n+\n+            Output_One_Ref : declare\n+\n                XE : Xref_Entry renames Xrefs.Table (Rnums (Refno));\n                --  The current entry to be accessed\n \n@@ -498,6 +500,57 @@ package body Lib.Xref is\n                Right : Character;\n                --  Used for {} or <> for type reference\n \n+               procedure Output_Instantiation_Refs (Loc : Source_Ptr);\n+               --  Recursive procedure to output instantiation references for\n+               --  the given source ptr in [file|line[...]] form. No output\n+               --  if the given location is not a generic template reference.\n+\n+               -------------------------------\n+               -- Output_Instantiation_Refs --\n+               -------------------------------\n+\n+               procedure Output_Instantiation_Refs (Loc : Source_Ptr) is\n+                  Iloc : constant Source_Ptr := Instantiation_Location (Loc);\n+                  Lun  : Unit_Number_Type;\n+\n+               begin\n+                  --  Nothing to do if this is not an instantiation\n+\n+                  if Iloc = No_Location then\n+                     return;\n+                  end if;\n+\n+                  --  For now, nothing to do unless special debug flag set\n+\n+                  if not Debug_Flag_MM then\n+                     return;\n+                  end if;\n+\n+                  --  Output instantiation reference\n+\n+                  Write_Info_Char ('[');\n+                  Lun := Get_Source_Unit (Iloc);\n+\n+                  if Lun /= Curru then\n+                     Curru := XE.Lun;\n+                     Write_Info_Nat (Dependency_Num (Curru));\n+                     Write_Info_Char ('|');\n+                  end if;\n+\n+                  Write_Info_Nat (Int (Get_Logical_Line_Number (Iloc)));\n+\n+                  --  Recursive call to get nested instantiations\n+\n+                  Output_Instantiation_Refs (Iloc);\n+\n+                  --  Output final ] after call to get proper nesting\n+\n+                  Write_Info_Char (']');\n+                  return;\n+               end Output_Instantiation_Refs;\n+\n+            --  Start of processing for Output_One_Ref\n+\n             begin\n                Ent := XE.Ent;\n                Ctyp := Xref_Entity_Letters (Ekind (Ent));\n@@ -841,9 +894,11 @@ package body Lib.Xref is\n                      Write_Info_Nat  (Int (Get_Logical_Line_Number (XE.Loc)));\n                      Write_Info_Char (XE.Typ);\n                      Write_Info_Nat  (Int (Get_Column_Number (XE.Loc)));\n+\n+                     Output_Instantiation_Refs (Sloc (XE.Ent));\n                   end if;\n                end if;\n-            end;\n+            end Output_One_Ref;\n \n          <<Continue>>\n             null;"}, {"sha": "2d5566c527166f602d5891032ca7c55430c4aab3", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -101,7 +101,7 @@ package Lib.Xref is\n    --\n    --     There may be zero or more ref entries on each line\n    --\n-   --        file | line type col\n+   --        file | line type col [...]\n    --\n    --           file is the dependency number of the file with the reference.\n    --           It and the following vertical bar are omitted if the file is\n@@ -173,9 +173,21 @@ package Lib.Xref is\n    --           Note that in the case of accept statements, there can\n    --           be multiple b and T/t entries for the same entity.\n    --\n+   --           [..] is used for generic instantiation references. These\n+   --           references are present only if the entity in question is\n+   --           a generic entity, and in that case the [..] contains the\n+   --           reference for the instantiation. In the case of nested\n+   --           instantiations, this can be nested [...[...[...]]] etc.\n+   --           The reference is of the form [file|line] no column is\n+   --           present since it is assumed that only one instantiation\n+   --           appears on a single source line. Note that the appearence\n+   --           of file numbers in such references follows the normal\n+   --           rules (present only if needed, and resets the current\n+   --           file for subsequent references).\n+   --\n    --     Examples:\n    --\n-   --        44B5*Flag_Type 5r23 6m45 3|9r35 11r56\n+   --        44B5*Flag_Type{boolean} 5r23 6m45 3|9r35 11r56\n    --\n    --           This line gives references for the publicly visible Boolean\n    --           type Flag_Type declared on line 44, column 5. There are four\n@@ -216,6 +228,13 @@ package Lib.Xref is\n    --              a reference (e.g. a variable declaration) at line 18 column\n    --              4 of the current file.\n    --\n+   --        10I3*Genv{integer} 3|4I10[6|12]\n+   --\n+   --           This line gives a reference for the entity Genv in a generic\n+   --           package. The reference in file 3, line 4, col 10, refers to\n+   --           an instance of the generic where the instantiation can be\n+   --           found in file 6 at line 12.\n+   --\n    --  Continuation lines are used if the reference list gets too long,\n    --  a continuation line starts with a period, and then has references\n    --  continuing from the previous line. The references are sorted first"}, {"sha": "9a01430b7be0d8400df56d745595350615e73b97", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                           C Implementation File                          *\n  *                                                                          *\n- *                             $Revision: 1.14 $\n+ *                             $Revision$\n  *                                                                          *\n  *          Copyright (C) 1992-2001 Free Software Foundation, Inc.          *\n  *                                                                          *\n@@ -696,12 +696,13 @@ gnat_expand_constant (exp)\n      tree exp;\n {\n   /* If this is an unchecked conversion that does not change the size of the\n-     object, return the operand since the underlying constant is still\n-     the same.  Otherwise, return our operand.  */\n+     object and the object is not a CONSTRUCTOR return the operand since the\n+     underlying constant is still the same.  Otherwise, return our operand.  */\n   if (TREE_CODE (exp) == UNCHECKED_CONVERT_EXPR\n       && operand_equal_p (TYPE_SIZE_UNIT (TREE_TYPE (exp)),\n \t\t\t  TYPE_SIZE_UNIT (TREE_TYPE (TREE_OPERAND (exp, 0))),\n-\t\t\t  1))\n+\t\t\t  1)\n+      && TREE_CODE (TREE_OPERAND (exp, 0)) != CONSTRUCTOR)\n     return TREE_OPERAND (exp, 0);\n \n   return exp;"}, {"sha": "ba527b41b02e2195c324edf993f6f180af6480c5", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -725,12 +725,38 @@ package body Osint is\n \n    begin\n       Get_Name_String (Src);\n+\n       if Hostparm.OpenVMS then\n          Name_Buffer (Name_Len + 1 .. Name_Len + 3) := \"_dg\";\n       else\n          Name_Buffer (Name_Len + 1 .. Name_Len + 3) := \".dg\";\n       end if;\n+\n       Name_Len := Name_Len + 3;\n+\n+      if Output_Object_File_Name /= null then\n+\n+         for Index in reverse Output_Object_File_Name'Range loop\n+\n+            if Output_Object_File_Name (Index) = Directory_Separator then\n+               declare\n+                  File_Name : constant String := Name_Buffer (1 .. Name_Len);\n+\n+               begin\n+                  Name_Len := Index - Output_Object_File_Name'First + 1;\n+                  Name_Buffer (1 .. Name_Len) :=\n+                    Output_Object_File_Name\n+                      (Output_Object_File_Name'First .. Index);\n+                  Name_Buffer (Name_Len + 1 .. Name_Len + File_Name'Length) :=\n+                    File_Name;\n+                  Name_Len := Name_Len + File_Name'Length;\n+               end;\n+\n+               exit;\n+            end if;\n+         end loop;\n+      end if;\n+\n       Result := Name_Find;\n       Name_Buffer (Name_Len + 1) := ASCII.NUL;\n       Create_File_And_Check (Output_FD, Text);"}, {"sha": "9b06500d55e4ad78c618325de27dc3a7971c6c3d", "filename": "gcc/ada/switch.adb", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fswitch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fswitch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.adb?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -255,15 +255,12 @@ package body Switch is\n             Ptr := Ptr + 1;\n             C := Switch_Chars (Ptr);\n \n-            if C = '1' or else\n-               C = '2' or else\n-               C = '3' or else\n-               C = '4' or else\n-               C = '8' or else\n-               C = 'p' or else\n-               C = 'f' or else\n-               C = 'n' or else\n-               C = 'w'\n+            if C in  '1' .. '5'\n+              or else C = '8'\n+              or else C = 'p'\n+              or else C = 'f'\n+              or else C = 'n'\n+              or else C = 'w'\n             then\n                Identifier_Character_Set := C;\n                Ptr := Ptr + 1;\n@@ -681,15 +678,12 @@ package body Switch is\n                Ptr := Ptr + 1;\n                C := Switch_Chars (Ptr);\n \n-               if C = '1' or else\n-                  C = '2' or else\n-                  C = '3' or else\n-                  C = '4' or else\n-                  C = '8' or else\n-                  C = 'p' or else\n-                  C = 'f' or else\n-                  C = 'n' or else\n-                  C = 'w'\n+               if C in '1' .. '5'\n+                 or else C = '8'\n+                 or else C = 'p'\n+                 or else C = 'f'\n+                 or else C = 'n'\n+                 or else C = 'w'\n                then\n                   Identifier_Character_Set := C;\n                   Ptr := Ptr + 1;"}, {"sha": "e158a6e9dbfd164a72083175128653c411b8d668", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                            $Revision: 1.6 $\n+ *                            $Revision$\n  *                                                                          *\n  *          Copyright (C) 1992-2001, Free Software Foundation, Inc.         *\n  *                                                                          *\n@@ -2051,12 +2051,12 @@ tree_transform (gnat_node)\n       gnu_rhs\n \t= maybe_unconstrained_array (gnat_to_gnu (Expression (gnat_node)));\n \n+      set_lineno (gnat_node, 1);\n+\n       /* If range check is needed, emit code to generate it */\n       if (Do_Range_Check (Expression (gnat_node)))\n \tgnu_rhs = emit_range_check (gnu_rhs, Etype (Name (gnat_node)));\n \n-      set_lineno (gnat_node, 1);\n-\n       /* If either side's type has a size that overflows, convert this\n \t into raise of Storage_Error: execution shouldn't have gotten\n \t here anyway.  */"}, {"sha": "7d64c148c5fabea22d1ce958d4f8168207a68c7c", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -188,7 +188,7 @@ begin\n    --  Line for -gnati switch\n \n    Write_Switch_Char (\"i?\");\n-   Write_Line (\"Identifier char set (?=1/2/3/4/8/p/f/n/w)\");\n+   Write_Line (\"Identifier char set (?=1/2/3/4/5/8/p/f/n/w)\");\n \n    --  Line for -gnatk switch\n "}, {"sha": "089770b5b73e1ab9f56dd59f4650832ea19d6227", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226ada7a41dba4d02def08367ed1b66199d6e472/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=226ada7a41dba4d02def08367ed1b66199d6e472", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                            $Revision: 1.4 $\n+ *                            $Revision$\n  *                                                                          *\n  *          Copyright (C) 1992-2001, Free Software Foundation, Inc.         *\n  *                                                                          *\n@@ -1314,9 +1314,11 @@ create_var_decl (var_name, asm_name, type, var_init, const_flag, public_flag,\n      any variable elaborations for the elaboration routine.  Otherwise, if\n      the initializing expression is not the same as TYPE, generate the\n      initialization with an assignment statement, since it knows how\n-     to do the required adjustents.  */\n+     to do the required adjustents.  If we are just annotating types,\n+     throw away the initialization if it isn't a constant.  */\n \n-  if (extern_flag && TREE_CODE (var_decl) != CONST_DECL)\n+  if ((extern_flag && TREE_CODE (var_decl) != CONST_DECL)\n+      || (type_annotate_only && var_init != 0 && ! TREE_CONSTANT (var_init)))\n     var_init = 0;\n \n   if (global_bindings_p () && var_init != 0 && ! init_const)"}]}