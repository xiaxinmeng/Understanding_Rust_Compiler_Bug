{"sha": "ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE3MGYzZDBjMWM4YzgzOTM1OGNlZjM1YmYxY2NhZmM5NGJjYTljMw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-16T14:06:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T14:06:44Z"}, "message": "snames.ads-tmpl, [...]: Same_Storage attribute is renamed Has_Same_Storage.\n\n2014-07-16  Robert Dewar  <dewar@adacore.com>\n\n\t* snames.ads-tmpl, sem_attr.adb, exp_attr.adb: Same_Storage attribute\n\tis renamed Has_Same_Storage.\n\t* gnat_rm.texi: Document missing SPARK pragmas and attributes.\n\t* sem_prag.adb: Minor comment fix (use LOCAL_NAME in syntax\n\tdescriptions).\n\nFrom-SVN: r212649", "tree": {"sha": "e40577c0d6fca00ae88df2bdd0cec68fef9b662c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e40577c0d6fca00ae88df2bdd0cec68fef9b662c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/comments", "author": null, "committer": null, "parents": [{"sha": "9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ab5d86b4a800a98ab7065e87b5096daabdb4c2e"}], "stats": {"total": 362, "additions": 254, "deletions": 108}, "files": [{"sha": "707f57acf1b09ff118330edd7a52450d594b8458", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "patch": "@@ -1,3 +1,11 @@\n+2014-07-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* snames.ads-tmpl, sem_attr.adb, exp_attr.adb: Same_Storage attribute\n+\tis renamed Has_Same_Storage.\n+\t* gnat_rm.texi: Document missing SPARK pragmas and attributes.\n+\t* sem_prag.adb: Minor comment fix (use LOCAL_NAME in syntax\n+\tdescriptions).\n+\n 2014-07-16  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_util.adb, sem_attr.adb, exp_ch4.adb, a-cohase.ads,"}, {"sha": "4e191642f3a27d34f58b1094bc7ef6d727b8ca66", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 67, "deletions": 67, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "patch": "@@ -3012,6 +3012,73 @@ package body Exp_Attr is\n          Analyze_And_Resolve (N, P_Type);\n       end From_Any;\n \n+      ----------------------\n+      -- Has_Same_Storage --\n+      ----------------------\n+\n+      when Attribute_Has_Same_Storage => Has_Same_Storage : declare\n+            Loc : constant Source_Ptr := Sloc (N);\n+\n+            X   : constant Node_Id := Prefix (N);\n+            Y   : constant Node_Id := First (Expressions (N));\n+            --  The arguments\n+\n+            X_Addr, Y_Addr : Node_Id;\n+            --  Rhe expressions for their addresses\n+\n+            X_Size, Y_Size : Node_Id;\n+            --  Rhe expressions for their sizes\n+\n+      begin\n+         --  The attribute is expanded as:\n+\n+         --    (X'address = Y'address)\n+         --      and then (X'Size = Y'Size)\n+\n+         --  If both arguments have the same Etype the second conjunct can be\n+         --  omitted.\n+\n+         X_Addr :=\n+           Make_Attribute_Reference (Loc,\n+                                     Attribute_Name => Name_Address,\n+                                     Prefix         => New_Copy_Tree (X));\n+\n+         Y_Addr :=\n+           Make_Attribute_Reference (Loc,\n+                                     Attribute_Name => Name_Address,\n+                                     Prefix         => New_Copy_Tree (Y));\n+\n+         X_Size :=\n+           Make_Attribute_Reference (Loc,\n+                                     Attribute_Name => Name_Size,\n+                                     Prefix         => New_Copy_Tree (X));\n+\n+         Y_Size :=\n+           Make_Attribute_Reference (Loc,\n+                                     Attribute_Name => Name_Size,\n+                                     Prefix         => New_Copy_Tree (Y));\n+\n+         if Etype (X) = Etype (Y) then\n+            Rewrite (N,\n+                     (Make_Op_Eq (Loc,\n+                      Left_Opnd  => X_Addr,\n+                      Right_Opnd => Y_Addr)));\n+         else\n+            Rewrite (N,\n+                     Make_Op_And (Loc,\n+                       Left_Opnd  =>\n+                         Make_Op_Eq (Loc,\n+                           Left_Opnd  => X_Addr,\n+                           Right_Opnd => Y_Addr),\n+                       Right_Opnd =>\n+                         Make_Op_Eq (Loc,\n+                           Left_Opnd  => X_Size,\n+                           Right_Opnd => Y_Size)));\n+         end if;\n+\n+         Analyze_And_Resolve (N, Standard_Boolean);\n+      end Has_Same_Storage;\n+\n       --------------\n       -- Identity --\n       --------------\n@@ -4989,73 +5056,6 @@ package body Exp_Attr is\n       when Attribute_Rounding =>\n          Expand_Fpt_Attribute_R (N);\n \n-      ------------------\n-      -- Same_Storage --\n-      ------------------\n-\n-      when Attribute_Same_Storage => Same_Storage : declare\n-         Loc : constant Source_Ptr := Sloc (N);\n-\n-         X   : constant Node_Id := Prefix (N);\n-         Y   : constant Node_Id := First (Expressions (N));\n-         --  The arguments\n-\n-         X_Addr, Y_Addr : Node_Id;\n-         --  Rhe expressions for their addresses\n-\n-         X_Size, Y_Size : Node_Id;\n-         --  Rhe expressions for their sizes\n-\n-      begin\n-         --  The attribute is expanded as:\n-\n-         --    (X'address = Y'address)\n-         --      and then (X'Size = Y'Size)\n-\n-         --  If both arguments have the same Etype the second conjunct can be\n-         --  omitted.\n-\n-         X_Addr :=\n-           Make_Attribute_Reference (Loc,\n-             Attribute_Name => Name_Address,\n-             Prefix         => New_Copy_Tree (X));\n-\n-         Y_Addr :=\n-           Make_Attribute_Reference (Loc,\n-             Attribute_Name => Name_Address,\n-             Prefix         => New_Copy_Tree (Y));\n-\n-         X_Size :=\n-           Make_Attribute_Reference (Loc,\n-             Attribute_Name => Name_Size,\n-             Prefix         => New_Copy_Tree (X));\n-\n-         Y_Size :=\n-           Make_Attribute_Reference (Loc,\n-             Attribute_Name => Name_Size,\n-             Prefix         => New_Copy_Tree (Y));\n-\n-         if Etype (X) = Etype (Y) then\n-            Rewrite (N,\n-              (Make_Op_Eq (Loc,\n-                 Left_Opnd  => X_Addr,\n-                 Right_Opnd => Y_Addr)));\n-         else\n-            Rewrite (N,\n-              Make_Op_And (Loc,\n-                Left_Opnd  =>\n-                  Make_Op_Eq (Loc,\n-                    Left_Opnd  => X_Addr,\n-                    Right_Opnd => Y_Addr),\n-                Right_Opnd =>\n-                  Make_Op_Eq (Loc,\n-                    Left_Opnd  => X_Size,\n-                    Right_Opnd => Y_Size)));\n-         end if;\n-\n-         Analyze_And_Resolve (N, Standard_Boolean);\n-      end Same_Storage;\n-\n       -------------\n       -- Scaling --\n       -------------"}, {"sha": "8aa0244bcd207a79f575318265817d87ca6e0be6", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "patch": "@@ -110,6 +110,8 @@ Implementation Defined Pragmas\n * Pragma Assertion_Policy::\n * Pragma Assume::\n * Pragma Assume_No_Invalid_Values::\n+* Pragma Async_Readers::\n+* Pragma Async_Writers::\n * Pragma Attribute_Definition::\n * Pragma Ast_Entry::\n * Pragma C_Pass_By_Copy::\n@@ -141,6 +143,8 @@ Implementation Defined Pragmas\n * Pragma Detect_Blocking::\n * Pragma Disable_Atomic_Synchronization::\n * Pragma Dispatching_Domain::\n+* Pragma Effective_Reads::\n+* Pragma Effective_Writes::\n * Pragma Elaboration_Checks::\n * Pragma Eliminate::\n * Pragma Enable_Atomic_Synchronization::\n@@ -208,6 +212,7 @@ Implementation Defined Pragmas\n * Pragma Overflow_Mode::\n * Pragma Overriding_Renamings::\n * Pragma Partition_Elaboration_Policy::\n+* Pragma Part_Of::\n * Pragma Passive::\n * Pragma Persistent_BSS::\n * Pragma Polling::\n@@ -227,6 +232,9 @@ Implementation Defined Pragmas\n * Pragma Psect_Object::\n * Pragma Pure_Function::\n * Pragma Ravenscar::\n+* Pragma Refined_Depends::\n+* Pragma Refined_Global::\n+* Pragma Refined_Post::\n * Pragma Refined_State::\n * Pragma Relative_Deadline::\n * Pragma Remote_Access_Type::\n@@ -279,10 +287,14 @@ Implementation Defined Pragmas\n Implementation Defined Aspects\n \n * Aspect Abstract_State::\n+* Aspect Async_Readers::\n+* Aspect Async_Writers::\n * Aspect Contract_Cases::\n * Aspect Depends::\n * Aspect Dimension::\n * Aspect Dimension_System::\n+* Aspect Effective_Reads::\n+* Aspect Effective_Writes::\n * Aspect Favor_Top_Level::\n * Aspect Global::\n * Aspect Initial_Condition::\n@@ -291,9 +303,13 @@ Implementation Defined Aspects\n * Aspect Invariant::\n * Aspect Linker_Section::\n * Aspect Object_Size::\n+* Aspect Part_Of::\n * Aspect Persistent_BSS::\n * Aspect Predicate::\n * Aspect Pure_Function::\n+* Aspect Refined_Depends::\n+* Aspect Refined_Global::\n+* Aspect Refined_Post::\n * Aspect Refined_State::\n * Aspect Remote_Access_Type::\n * Aspect Scalar_Storage_Order::\n@@ -939,6 +955,8 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Assertion_Policy::\n * Pragma Assume::\n * Pragma Assume_No_Invalid_Values::\n+* Pragma Async_Readers::\n+* Pragma Async_Writers::\n * Pragma Attribute_Definition::\n * Pragma Ast_Entry::\n * Pragma C_Pass_By_Copy::\n@@ -970,6 +988,8 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Detect_Blocking::\n * Pragma Disable_Atomic_Synchronization::\n * Pragma Dispatching_Domain::\n+* Pragma Effective_Reads::\n+* Pragma Effective_Writes::\n * Pragma Elaboration_Checks::\n * Pragma Eliminate::\n * Pragma Enable_Atomic_Synchronization::\n@@ -1037,6 +1057,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Overflow_Mode::\n * Pragma Overriding_Renamings::\n * Pragma Partition_Elaboration_Policy::\n+* Pragma Part_Of::\n * Pragma Passive::\n * Pragma Persistent_BSS::\n * Pragma Polling::\n@@ -1056,6 +1077,9 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Psect_Object::\n * Pragma Pure_Function::\n * Pragma Ravenscar::\n+* Pragma Refined_Depends::\n+* Pragma Refined_Global::\n+* Pragma Refined_Post::\n * Pragma Refined_State::\n * Pragma Relative_Deadline::\n * Pragma Remote_Access_Type::\n@@ -1611,6 +1635,20 @@ values will generally give an exception, though formally the program\n is erroneous so there are no guarantees that this will always be the\n case, and it is recommended that these two options not be used together.\n \n+@node Pragma Async_Readers\n+@unnumberedsec Pragma Async_Readers\n+@findex Async_Readers\n+@noindent\n+For the description of this pragma, see SPARK 2014 Reference Manual,\n+section 7.1.2.\n+\n+@node Pragma Async_Writers\n+@unnumberedsec Pragma Async_Writers\n+@findex Async_Writers\n+@noindent\n+For the description of this pragma, see SPARK 2014 Reference Manual,\n+section 7.1.2.\n+\n @node Pragma Ast_Entry\n @unnumberedsec Pragma Ast_Entry\n @cindex OpenVMS\n@@ -2540,6 +2578,20 @@ This pragma is standard in Ada 2012, but is available in all earlier\n versions of Ada as an implementation-defined pragma.\n See Ada 2012 Reference Manual for details.\n \n+@node Pragma Effective_Reads\n+@unnumberedsec Pragma Effective_Reads\n+@findex Effective_Reads\n+@noindent\n+For the description of this pragma, see SPARK 2014 Reference Manual,\n+section 7.1.2.\n+\n+@node Pragma Effective_Writes\n+@unnumberedsec Pragma Effective_Writes\n+@findex Effective_Writes\n+@noindent\n+For the description of this pragma, see SPARK 2014 Reference Manual,\n+section 7.1.2.\n+\n @node Pragma Elaboration_Checks\n @unnumberedsec Pragma Elaboration_Checks\n @cindex Elaboration control\n@@ -5117,6 +5169,13 @@ This pragma is standard in Ada 2005, but is available in all earlier\n versions of Ada as an implementation-defined pragma.\n See Ada 2012 Reference Manual for details.\n \n+@node Pragma Part_Of\n+@unnumberedsec Pragma Part_Of\n+@findex Part_Of\n+@noindent\n+For the description of this pragma, see SPARK 2014 Reference Manual,\n+section 7.2.6.\n+\n @node Pragma Passive\n @unnumberedsec Pragma Passive\n @findex Passive\n@@ -5956,6 +6015,27 @@ pragma Profile (Ravenscar);\n @noindent\n which is the preferred method of setting the @code{Ravenscar} profile.\n \n+@node Pragma Refined_Depends\n+@unnumberedsec Pragma Refined_Depends\n+@findex Refined_Depends\n+@noindent\n+For the description of this pragma, see SPARK 2014 Reference Manual,\n+section 6.1.5.\n+\n+@node Pragma Refined_Global\n+@unnumberedsec Pragma Refined_Global\n+@findex Refined_Global\n+@noindent\n+For the description of this pragma, see SPARK 2014 Reference Manual,\n+section 6.1.4.\n+\n+@node Pragma Refined_Post\n+@unnumberedsec Pragma Refined_Post\n+@findex Refined_Post\n+@noindent\n+For the description of this pragma, see SPARK 2014 Reference Manual,\n+section 7.2.7.\n+\n @node Pragma Refined_State\n @unnumberedsec Pragma Refined_State\n @findex Refined_State\n@@ -7817,10 +7897,14 @@ clause.\n \n @menu\n * Aspect Abstract_State::\n+* Aspect Async_Readers::\n+* Aspect Async_Writers::\n * Aspect Contract_Cases::\n * Aspect Depends::\n * Aspect Dimension::\n * Aspect Dimension_System::\n+* Aspect Effective_Reads::\n+* Aspect Effective_Writes::\n * Aspect Favor_Top_Level::\n * Aspect Global::\n * Aspect Initial_Condition::\n@@ -7830,9 +7914,13 @@ clause.\n * Aspect Linker_Section::\n * Aspect Lock_Free::\n * Aspect Object_Size::\n+* Aspect Part_Of::\n * Aspect Persistent_BSS::\n * Aspect Predicate::\n * Aspect Pure_Function::\n+* Aspect Refined_Depends::\n+* Aspect Refined_Global::\n+* Aspect Refined_Post::\n * Aspect Refined_State::\n * Aspect Remote_Access_Type::\n * Aspect Scalar_Storage_Order::\n@@ -7858,6 +7946,18 @@ clause.\n @noindent\n This aspect is equivalent to pragma @code{Abstract_State}.\n \n+@node Aspect Async_Readers\n+@unnumberedsec Aspect Async_Readers\n+@findex Async_Readers\n+@noindent\n+This aspect is equivalent to pragma @code{Async_Readers}.\n+\n+@node Aspect Async_Writers\n+@unnumberedsec Aspect Async_Writers\n+@findex Async_Writers\n+@noindent\n+This aspect is equivalent to pragma @code{Async_Writers}.\n+\n @node Aspect Contract_Cases\n @unnumberedsec Aspect Contract_Cases\n @findex Contract_Cases\n@@ -7962,6 +8062,18 @@ following aspect:\n See section ``Performing Dimensionality Analysis in GNAT'' in the GNAT Users\n Guide for detailed examples of use of the dimension system.\n \n+@node Aspect Effective_Reads\n+@unnumberedsec Aspect Effective_Reads\n+@findex Effective_Reads\n+@noindent\n+This aspect is equivalent to pragma @code{Effective_Reads}.\n+\n+@node Aspect Effective_Writes\n+@unnumberedsec Aspect Effective_Writes\n+@findex Effective_Writes\n+@noindent\n+This aspect is equivalent to pragma @code{Effective_Writes}.\n+\n @node Aspect Favor_Top_Level\n @unnumberedsec Aspect Favor_Top_Level\n @findex Favor_Top_Level\n@@ -8019,6 +8131,12 @@ This aspect is equivalent to pragma @code{Lock_Free}.\n This aspect is equivalent to an @code{Object_Size} attribute definition\n clause.\n \n+@node Aspect Part_Of\n+@unnumberedsec Aspect Part_Of\n+@findex Part_Of\n+@noindent\n+This aspect is equivalent to pragma @code{Part_Of}.\n+\n @node Aspect Persistent_BSS\n @unnumberedsec Aspect Persistent_BSS\n @findex Persistent_BSS\n@@ -8042,6 +8160,24 @@ expression. It is also separately controllable using pragma\n @noindent\n This aspect is equivalent to pragma @code{Pure_Function}.\n \n+@node Aspect Refined_Depends\n+@unnumberedsec Aspect Refined_Depends\n+@findex Refined_Depends\n+@noindent\n+This aspect is equivalent to pragma @code{Refined_Depends}.\n+\n+@node Aspect Refined_Global\n+@unnumberedsec Aspect Refined_Global\n+@findex Refined_Global\n+@noindent\n+This aspect is equivalent to pragma @code{Refined_Global}.\n+\n+@node Aspect Refined_Post\n+@unnumberedsec Aspect Refined_Post\n+@findex Refined_Post\n+@noindent\n+This aspect is equivalent to pragma @code{Refined_Post}.\n+\n @node Aspect Refined_State\n @unnumberedsec Aspect Refined_State\n @findex Refined_State"}, {"sha": "22e2d5ba4b0da46f7ebdfbeba6980e8ac2ebe237", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "patch": "@@ -3550,6 +3550,22 @@ package body Sem_Attr is\n          Check_E0;\n          Set_Etype (N, Standard_Boolean);\n \n+      ----------------------\n+      -- Has_Same_Storage --\n+      ----------------------\n+\n+      when Attribute_Has_Same_Storage =>\n+         Check_Ada_2012_Attribute;\n+         Check_E1;\n+\n+         --  The arguments must be objects of any type\n+\n+         Analyze_And_Resolve (P);\n+         Analyze_And_Resolve (E1);\n+         Check_Object_Reference (P);\n+         Check_Object_Reference (E1);\n+         Set_Etype (N, Standard_Boolean);\n+\n       -----------------------\n       -- Has_Tagged_Values --\n       -----------------------\n@@ -5407,22 +5423,6 @@ package body Sem_Attr is\n          Check_Real_Type;\n          Set_Etype (N, Universal_Real);\n \n-      ------------------\n-      -- Same_Storage --\n-      ------------------\n-\n-      when Attribute_Same_Storage =>\n-         Check_Ada_2012_Attribute;\n-         Check_E1;\n-\n-         --  The arguments must be objects of any type\n-\n-         Analyze_And_Resolve (P);\n-         Analyze_And_Resolve (E1);\n-         Check_Object_Reference (P);\n-         Check_Object_Reference (E1);\n-         Set_Etype (N, Standard_Boolean);\n-\n       --------------------------\n       -- Scalar_Storage_Order --\n       --------------------------\n@@ -7964,6 +7964,13 @@ package body Sem_Attr is\n            Boolean_Literals (Has_Discriminants (P_Entity)), Loc));\n          Analyze_And_Resolve (N, Standard_Boolean);\n \n+      ----------------------\n+      -- Has_Same_Storage --\n+      ----------------------\n+\n+      when Attribute_Has_Same_Storage =>\n+         null;\n+\n       -----------------------\n       -- Has_Tagged_Values --\n       -----------------------\n@@ -8866,13 +8873,6 @@ package body Sem_Attr is\n             Fold_Ureal (N, Model_Small_Value (P_Type), Static);\n          end if;\n \n-      ------------------\n-      -- Same_Storage --\n-      ------------------\n-\n-      when Attribute_Same_Storage =>\n-         null;\n-\n       -----------\n       -- Scale --\n       -----------"}, {"sha": "bd75f02834f322d7a8e5a9beb936fd87f69b1372", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "patch": "@@ -11491,10 +11491,12 @@ package body Sem_Prag is\n          -- Async_Readers/Async_Writers/Effective_Reads/Effective_Writes --\n          ------------------------------------------------------------------\n \n-         --  pragma Asynch_Readers   ( identifier [, boolean_EXPRESSION] );\n-         --  pragma Asynch_Writers   ( identifier [, boolean_EXPRESSION] );\n-         --  pragma Effective_Reads  ( identifier [, boolean_EXPRESSION] );\n-         --  pragma Effective_Writes ( identifier [, boolean_EXPRESSION] );\n+         --  pragma Asynch_Readers   ( object_LOCAL_NAME [, FLAG] );\n+         --  pragma Asynch_Writers   ( object_LOCAL_NAME [, FLAG] );\n+         --  pragma Effective_Reads  ( object_LOCAL_NAME [, FLAG] );\n+         --  pragma Effective_Writes ( object_LOCAL_NAME [, FLAG] );\n+\n+         --  FLAG ::= boolean_EXPRESSION\n \n          when Pragma_Async_Readers    |\n               Pragma_Async_Writers    |\n@@ -12635,7 +12637,7 @@ package body Sem_Prag is\n          -- CPP_Class --\n          ---------------\n \n-         --  pragma CPP_Class ([Entity =>] local_NAME)\n+         --  pragma CPP_Class ([Entity =>] LOCAL_NAME)\n \n          when Pragma_CPP_Class => CPP_Class : declare\n          begin\n@@ -13606,7 +13608,7 @@ package body Sem_Prag is\n \n          --  pragma Export (\n          --    [   Convention    =>] convention_IDENTIFIER,\n-         --    [   Entity        =>] local_NAME\n+         --    [   Entity        =>] LOCAL_NAME\n          --    [, [External_Name =>] static_string_EXPRESSION ]\n          --    [, [Link_Name     =>] static_string_EXPRESSION ]);\n \n@@ -14044,7 +14046,7 @@ package body Sem_Prag is\n \n          --  pragma External (\n          --    [   Convention    =>] convention_IDENTIFIER,\n-         --    [   Entity        =>] local_NAME\n+         --    [   Entity        =>] LOCAL_NAME\n          --    [, [External_Name =>] static_string_EXPRESSION ]\n          --    [, [Link_Name     =>] static_string_EXPRESSION ]);\n \n@@ -14491,7 +14493,7 @@ package body Sem_Prag is\n          -- Implementation_Defined --\n          ----------------------------\n \n-         --  pragma Implementation_Defined (local_NAME);\n+         --  pragma Implementation_Defined (LOCAL_NAME);\n \n          --  Marks previously declared entity as implementation defined. For\n          --  an overloaded entity, applies to the most recent homonym.\n@@ -14645,7 +14647,7 @@ package body Sem_Prag is\n \n          --  pragma Import (\n          --       [Convention    =>] convention_IDENTIFIER,\n-         --       [Entity        =>] local_NAME\n+         --       [Entity        =>] LOCAL_NAME\n          --    [, [External_Name =>] static_string_EXPRESSION ]\n          --    [, [Link_Name     =>] static_string_EXPRESSION ]);\n \n@@ -15343,7 +15345,7 @@ package body Sem_Prag is\n \n          --  pragma Interface (\n          --    [   Convention    =>] convention_IDENTIFIER,\n-         --    [   Entity        =>] local_NAME\n+         --    [   Entity        =>] LOCAL_NAME\n          --    [, [External_Name =>] static_string_EXPRESSION ]\n          --    [, [Link_Name     =>] static_string_EXPRESSION ]);\n \n@@ -15379,7 +15381,7 @@ package body Sem_Prag is\n          --------------------\n \n          --  pragma Interface_Name (\n-         --    [  Entity        =>] local_NAME\n+         --    [  Entity        =>] LOCAL_NAME\n          --    [,[External_Name =>] static_string_EXPRESSION ]\n          --    [,[Link_Name     =>] static_string_EXPRESSION ]);\n \n@@ -16093,7 +16095,7 @@ package body Sem_Prag is\n          -- Keep_Names --\n          ----------------\n \n-         --  pragma Keep_Names ([On => ] local_NAME);\n+         --  pragma Keep_Names ([On => ] LOCAL_NAME);\n \n          when Pragma_Keep_Names => Keep_Names : declare\n             Arg : Node_Id;\n@@ -17517,7 +17519,7 @@ package body Sem_Prag is\n \n          --  pragma Part_Of (ABSTRACT_STATE);\n \n-         --  ABSTRACT_STATE ::= name\n+         --  ABSTRACT_STATE ::= NAME\n \n          when Pragma_Part_Of => Part_Of : declare\n             procedure Propagate_Part_Of\n@@ -20902,7 +20904,7 @@ package body Sem_Prag is\n          -- Unmodified --\n          ----------------\n \n-         --  pragma Unmodified (local_Name {, local_Name});\n+         --  pragma Unmodified (LOCAL_NAME {, LOCAL_NAME});\n \n          when Pragma_Unmodified => Unmodified : declare\n             Arg_Node : Node_Id;\n@@ -20950,7 +20952,7 @@ package body Sem_Prag is\n          -- Unreferenced --\n          ------------------\n \n-         --  pragma Unreferenced (local_Name {, local_Name});\n+         --  pragma Unreferenced (LOCAL_NAME {, LOCAL_NAME});\n \n          --    or when used in a context clause:\n \n@@ -21045,7 +21047,7 @@ package body Sem_Prag is\n          -- Unreferenced_Objects --\n          --------------------------\n \n-         --  pragma Unreferenced_Objects (local_Name {, local_Name});\n+         --  pragma Unreferenced_Objects (LOCAL_NAME {, LOCAL_NAME});\n \n          when Pragma_Unreferenced_Objects => Unreferenced_Objects : declare\n             Arg_Node : Node_Id;"}, {"sha": "ec99f317bf887139fdee78a3b058830d41c6d7b0", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=ea70f3d0c1c8c839358cef35bf1ccafc94bca9c3", "patch": "@@ -868,6 +868,7 @@ package Snames is\n    Name_Fore                           : constant Name_Id := N + $;\n    Name_Has_Access_Values              : constant Name_Id := N + $; -- GNAT\n    Name_Has_Discriminants              : constant Name_Id := N + $; -- GNAT\n+   Name_Has_Same_Storage               : constant Name_Id := N + $; -- Ada 12\n    Name_Has_Tagged_Values              : constant Name_Id := N + $; -- GNAT\n    Name_Identity                       : constant Name_Id := N + $;\n    Name_Img                            : constant Name_Id := N + $; -- GNAT\n@@ -925,7 +926,6 @@ package Snames is\n    Name_Safe_Large                     : constant Name_Id := N + $; -- Ada 83\n    Name_Safe_Last                      : constant Name_Id := N + $;\n    Name_Safe_Small                     : constant Name_Id := N + $; -- Ada 83\n-   Name_Same_Storage                   : constant Name_Id := N + $; -- Ada 12\n    Name_Scalar_Storage_Order           : constant Name_Id := N + $; -- GNAT\n    Name_Scale                          : constant Name_Id := N + $;\n    Name_Scaling                        : constant Name_Id := N + $;\n@@ -1494,6 +1494,7 @@ package Snames is\n       Attribute_Fore,\n       Attribute_Has_Access_Values,\n       Attribute_Has_Discriminants,\n+      Attribute_Has_Same_Storage,\n       Attribute_Has_Tagged_Values,\n       Attribute_Identity,\n       Attribute_Img,\n@@ -1551,7 +1552,6 @@ package Snames is\n       Attribute_Safe_Large,\n       Attribute_Safe_Last,\n       Attribute_Safe_Small,\n-      Attribute_Same_Storage,\n       Attribute_Scalar_Storage_Order,\n       Attribute_Scale,\n       Attribute_Scaling,"}]}