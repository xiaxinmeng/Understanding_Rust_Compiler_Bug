{"sha": "bf425ddd466469e89f4d3d8ffdfb10f51fd6787a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY0MjVkZGQ0NjY0NjllODlmNGQzZDhmZmRmYjEwZjUxZmQ2Nzg3YQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-10-28T19:59:07Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-10-28T19:59:07Z"}, "message": "stormy16-protos.h (xstormy16_function_arg): Delete.\n\n\t* config/stormy16/stormy16-protos.h (xstormy16_function_arg): Delete.\n\t(xstormy16_function_arg_advance): Delete.\n\t* config/stormy16/stormy16.h (FUNCTION_ARG): Delete.\n\t(FUNCTION_ARG_ADVANCE): Delete.\n\t* config/stormy16/stormy16.c (xstormy16_function_arg): Make static.\n\tTake a const_tree and a bool.\n\t(xstormy16_function_arg_advance): Likewise.  Return void, updating\n\tthe CUM parameter instead.\n\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n\nFrom-SVN: r166038", "tree": {"sha": "45ea10855bdb7b469aa4ae01ba6659e6f23c17f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45ea10855bdb7b469aa4ae01ba6659e6f23c17f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/comments", "author": null, "committer": null, "parents": [{"sha": "4c05cbb2a7e272fc046e62c19c5a1c1b17a9be05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c05cbb2a7e272fc046e62c19c5a1c1b17a9be05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c05cbb2a7e272fc046e62c19c5a1c1b17a9be05"}], "stats": {"total": 61, "additions": 31, "deletions": 30}, "files": [{"sha": "ae687f1d1ad6623cba19ea401d3f63c6ec4e90b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf425ddd466469e89f4d3d8ffdfb10f51fd6787a", "patch": "@@ -1,3 +1,15 @@\n+2010-10-28  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/stormy16/stormy16-protos.h (xstormy16_function_arg): Delete.\n+\t(xstormy16_function_arg_advance): Delete.\n+\t* config/stormy16/stormy16.h (FUNCTION_ARG): Delete.\n+\t(FUNCTION_ARG_ADVANCE): Delete.\n+\t* config/stormy16/stormy16.c (xstormy16_function_arg): Make static.\n+\tTake a const_tree and a bool.\n+\t(xstormy16_function_arg_advance): Likewise.  Return void, updating\n+\tthe CUM parameter instead.\n+\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n+\n 2010-10-28  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/moxie/moxie-protos.h (moxie_function_arg): Delete."}, {"sha": "d41bb80f4da2d5363706b508ee2ceeee40532c07", "filename": "gcc/config/stormy16/stormy16-protos.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h?ref=bf425ddd466469e89f4d3d8ffdfb10f51fd6787a", "patch": "@@ -35,13 +35,6 @@ extern void xstormy16_asm_output_aligned_common (FILE *, tree, const char *,\n \t\t\t\t\t\t int, int, int);\n #endif\n \n-#if defined (TREE_CODE) && defined (HAVE_MACHINE_MODES)\n-extern CUMULATIVE_ARGS xstormy16_function_arg_advance \n- (CUMULATIVE_ARGS, enum machine_mode, tree, int);\n-extern rtx xstormy16_function_arg\n- (CUMULATIVE_ARGS, enum machine_mode, tree, int);\n-#endif\n-\n #if defined (TREE_CODE) && defined (RTX_CODE)\n extern void xstormy16_initialize_trampoline (rtx, rtx, rtx);\n extern rtx xstormy16_function_value (const_tree, const_tree);"}, {"sha": "e5bf08b45f201229a295046cfa1ddae62cbaa9d3", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=bf425ddd466469e89f4d3d8ffdfb10f51fd6787a", "patch": "@@ -1247,37 +1247,34 @@ xstormy16_function_profiler (void)\n   sorry (\"function_profiler support\");\n }\n \f\n-/* Return an updated summarizer variable CUM to advance past an\n-   argument in the argument list.  The values MODE, TYPE and NAMED\n-   describe that argument.  Once this is done, the variable CUM is\n-   suitable for analyzing the *following* argument with\n-   `FUNCTION_ARG', etc.\n+/* Update CUM to advance past an argument in the argument list.  The\n+   values MODE, TYPE and NAMED describe that argument.  Once this is\n+   done, the variable CUM is suitable for analyzing the *following*\n+   argument with `TARGET_FUNCTION_ARG', etc.\n \n    This function need not do anything if the argument in question was\n    passed on the stack.  The compiler knows how to track the amount of\n    stack space used for arguments without any special help.  However,\n    it makes life easier for xstormy16_build_va_list if it does update\n    the word count.  */\n \n-CUMULATIVE_ARGS\n-xstormy16_function_arg_advance (CUMULATIVE_ARGS cum, enum machine_mode mode,\n-\t\t\t\ttree type, int named ATTRIBUTE_UNUSED)\n+static void\n+xstormy16_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t\t\tconst_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   /* If an argument would otherwise be passed partially in registers,\n      and partially on the stack, the whole of it is passed on the\n      stack.  */\n-  if (cum < NUM_ARGUMENT_REGISTERS\n-      && cum + XSTORMY16_WORD_SIZE (type, mode) > NUM_ARGUMENT_REGISTERS)\n-    cum = NUM_ARGUMENT_REGISTERS;\n-\n-  cum += XSTORMY16_WORD_SIZE (type, mode);\n+  if (*cum < NUM_ARGUMENT_REGISTERS\n+      && *cum + XSTORMY16_WORD_SIZE (type, mode) > NUM_ARGUMENT_REGISTERS)\n+    *cum = NUM_ARGUMENT_REGISTERS;\n \n-  return cum;\n+  *cum += XSTORMY16_WORD_SIZE (type, mode);\n }\n \n-rtx\n-xstormy16_function_arg (CUMULATIVE_ARGS cum, enum machine_mode mode,\n-\t\t\ttree type, int named ATTRIBUTE_UNUSED)\n+static rtx\n+xstormy16_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t\tconst_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   if (mode == VOIDmode)\n     return const0_rtx;\n@@ -2663,6 +2660,11 @@ static const struct default_options xstorym16_option_optimization_table[] =\n #undef  TARGET_PROMOTE_PROTOTYPES\n #define TARGET_PROMOTE_PROTOTYPES hook_bool_const_tree_true\n \n+#undef  TARGET_FUNCTION_ARG\n+#define TARGET_FUNCTION_ARG xstormy16_function_arg\n+#undef  TARGET_FUNCTION_ARG_ADVANCE\n+#define TARGET_FUNCTION_ARG_ADVANCE xstormy16_function_arg_advance\n+\n #undef  TARGET_RETURN_IN_MEMORY\n #define TARGET_RETURN_IN_MEMORY xstormy16_return_in_memory\n "}, {"sha": "1ac73c41b9b3a3192004a53667629ad330b9b93b", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf425ddd466469e89f4d3d8ffdfb10f51fd6787a/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=bf425ddd466469e89f4d3d8ffdfb10f51fd6787a", "patch": "@@ -337,19 +337,13 @@ enum reg_class\n     + 1) \t\t\t\t\t\t\t\\\n    / 2)\n \n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) \\\n-\txstormy16_function_arg (CUM, MODE, TYPE, NAMED)\n-\n /* For this platform, the value of CUMULATIVE_ARGS is the number of words\n    of arguments that have been passed in registers so far.  */\n #define CUMULATIVE_ARGS int\n \n #define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, INDIRECT, N_NAMED_ARGS) \\\n   (CUM) = 0\n \n-#define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)\t\t\t\\\n-  ((CUM) = xstormy16_function_arg_advance (CUM, MODE, TYPE, NAMED))\n-\n #define FUNCTION_ARG_REGNO_P(REGNO)\t\t\t\t\t\\\n   ((REGNO) >= FIRST_ARGUMENT_REGISTER \t\t\t\t\t\\\n    && (REGNO) < FIRST_ARGUMENT_REGISTER + NUM_ARGUMENT_REGISTERS)"}]}