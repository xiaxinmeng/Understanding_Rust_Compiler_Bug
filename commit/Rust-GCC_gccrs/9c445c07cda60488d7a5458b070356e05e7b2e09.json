{"sha": "9c445c07cda60488d7a5458b070356e05e7b2e09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM0NDVjMDdjZGE2MDQ4OGQ3YTU0NThiMDcwMzU2ZTA1ZTdiMmUwOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-29T09:30:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-29T09:30:09Z"}, "message": "expand: Fix up find_bb_boundaries [PR98331]\n\nWhen expansion emits some control flow insns etc. inside of a former GIMPLE\nbasic block, find_bb_boundaries needs to split it into multiple basic\nblocks.\nThe code needs to ignore debug insns in decisions how many splits to do or\nwhere in between some non-debug insns the split should be done, but it can\ndecide where to put debug insns if they can be kept and otherwise throws\nthem away (they can't stay outside of basic blocks).\nOn the following testcase, we end up in the bb from expander with\ncontrol flow insn\ndebug insns\nbarrier\nsome other insn\n(the some other insn is effectively dead after __builtin_unreachable and\nwe'll optimize that out later).\nWithout debug insns, we'd do the split when encountering some other insn\nand split after PREV_INSN (some other insn), i.e. after barrier (and the\nsplitting code then moves the barrier in between basic blocks).\nBut if there are debug insns, we actually split before the first debug insn\nthat appeared after the control flow insn, so after control flow insn,\nand get a basic block that starts with debug insns and then has a barrier\nin the middle that nothing moves it out of the bb.  This leads to ICEs and\neven if it wouldn't, different behavior from -g0.\nThe reason for treating debug insns that way is a different case, e.g.\ncontrol flow insn\ndebug insns\nsome other insn\nor even\ncontrol flow insn\nbarrier\ndebug insns\nsome other insn\nwhere splitting before the first such debug insn allows us to keep them\nwhile otherwise we would have to drop them on the floor, and in those\nsituations we behave the same with -g0 and -g.\n\nSo, the following patch fixes it by resetting debug_insn not just when\nsplitting the blocks (it is set only after seeing a control flow insn and\nbefore splitting for it if needed), but also when seeing a barrier,\nwhich effectively means we always throw away debug insns after a control\nflow insn and before following barrier if any, but there is no way around\nthat, control flow insn must be the last in the bb (BB_END) and BARRIER\nafter it, debug insns aren't allowed outside of bb.\nWe still handle the other cases fine (when there is no barrier or when\ndebug insns appear only after the barrier).\n\n2021-01-29  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/98331\n\t* cfgbuild.c (find_bb_boundaries): Reset debug_insn when seeing\n\ta BARRIER.\n\n\t* gcc.dg/pr98331.c: New test.", "tree": {"sha": "dab7e9bb152ae218c28102e6748241f9fd83a129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dab7e9bb152ae218c28102e6748241f9fd83a129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c445c07cda60488d7a5458b070356e05e7b2e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c445c07cda60488d7a5458b070356e05e7b2e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c445c07cda60488d7a5458b070356e05e7b2e09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c445c07cda60488d7a5458b070356e05e7b2e09/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "280a59d9211b36f8ddb8ca18e8dcba29643ca5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/280a59d9211b36f8ddb8ca18e8dcba29643ca5da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/280a59d9211b36f8ddb8ca18e8dcba29643ca5da"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "41654ec8ed601f2b2cea3cac02a4e4f89630dc22", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c445c07cda60488d7a5458b070356e05e7b2e09/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c445c07cda60488d7a5458b070356e05e7b2e09/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=9c445c07cda60488d7a5458b070356e05e7b2e09", "patch": "@@ -545,6 +545,7 @@ find_bb_boundaries (basic_block bb)\n \t     if the barrier were preceded by a control_flow_insn_p insn.  */\n \t  if (!flow_transfer_insn)\n \t    flow_transfer_insn = prev_nonnote_nondebug_insn_bb (insn);\n+\t  debug_insn = NULL;\n \t}\n \n       if (control_flow_insn_p (insn))"}, {"sha": "951b7586a28b82a4ee33be9f6d638b5502d4278a", "filename": "gcc/testsuite/gcc.dg/pr98331.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c445c07cda60488d7a5458b070356e05e7b2e09/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98331.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c445c07cda60488d7a5458b070356e05e7b2e09/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98331.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr98331.c?ref=9c445c07cda60488d7a5458b070356e05e7b2e09", "patch": "@@ -0,0 +1,18 @@\n+/* PR debug/98331 */\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O2 -fcompare-debug\" } */\n+/* { dg-additional-options \"-march=x86-64\" { target { i?86-*-* x86_64-*-* } } } */\n+\n+void bar (const char *);\n+unsigned long long x;\n+\n+void\n+foo (void)\n+{\n+  int a = 1;\n+  bar (\"foo\");\n+  int b = 2;\n+  __atomic_fetch_add (&x, 1, 0);\n+  int c = 3;\n+  __builtin_unreachable ();\n+}"}]}