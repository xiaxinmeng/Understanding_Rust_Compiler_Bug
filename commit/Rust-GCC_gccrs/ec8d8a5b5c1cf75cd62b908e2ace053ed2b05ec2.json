{"sha": "ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM4ZDhhNWI1YzFjZjc1Y2Q2MmI5MDhlMmFjZTA1M2VkMmIwNWVjMg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-03-31T03:05:35Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-03-31T03:05:35Z"}, "message": "rs6000: Fix _mm_min_ps and _mm_max_ps (PR83315)\n\nThis makes _mm_{min,max}_ps work correctly for QNaNs.\n\n\n\tPR target/83315\n\t* config/rs6000/xmmintrin.h (_mm_set_ps, _mm_max_ps): Handle (quiet)\n\tNaN inputs correctly.\n\ngcc/testsuite/\n\tPR target/83315\n\t* gcc.target/powerpc/sse-maxps-2.c: New test.\n\t* gcc.target/powerpc/sse-minps-2.c: New test.\n\nFrom-SVN: r258988", "tree": {"sha": "af910576a2b61b8e2417e9c3c05bbcfbd62ea8e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af910576a2b61b8e2417e9c3c05bbcfbd62ea8e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c32170880197cf6bc9a1a08b084b3624b1cd6474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c32170880197cf6bc9a1a08b084b3624b1cd6474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c32170880197cf6bc9a1a08b084b3624b1cd6474"}], "stats": {"total": 104, "additions": 102, "deletions": 2}, "files": [{"sha": "56a63a044b9113fdd4ca2dbd2234cf920391d0f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "patch": "@@ -1,3 +1,9 @@\n+2018-03-31  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/83315\n+\t* config/rs6000/xmmintrin.h (_mm_set_ps, _mm_max_ps): Handle (quiet)\n+\tNaN inputs correctly.\n+\n 2018-03-30  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/80546"}, {"sha": "aa2823f5f4800db3e954f8697bb9c5a159a5bf8d", "filename": "gcc/config/rs6000/xmmintrin.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2Fconfig%2Frs6000%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2Fconfig%2Frs6000%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxmmintrin.h?ref=ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "patch": "@@ -438,13 +438,15 @@ _mm_max_ss (__m128 __A, __m128 __B)\n extern __inline __m128 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_min_ps (__m128 __A, __m128 __B)\n {\n-  return ((__m128)vec_min ((__v4sf)__A,(__v4sf) __B));\n+  __m128 m = (__m128) vec_vcmpgtfp ((__v4sf) __B, (__v4sf) __A);\n+  return vec_sel (__B, __A, m);\n }\n \n extern __inline __m128 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_max_ps (__m128 __A, __m128 __B)\n {\n-  return ((__m128)vec_max ((__v4sf)__A, (__v4sf)__B));\n+  __m128 m = (__m128) vec_vcmpgtfp ((__v4sf) __A, (__v4sf) __B);\n+  return vec_sel (__B, __A, m);\n }\n \n /* Perform logical bit-wise operations on 128-bit values.  */"}, {"sha": "16ffbd6d963a228a109a0b3fa608f9e5ac3cb2df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "patch": "@@ -1,3 +1,9 @@\n+2018-03-31  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/83315\n+\t* gcc.target/powerpc/sse-maxps-2.c: New test.\n+\t* gcc.target/powerpc/sse-minps-2.c: New test.\n+\n 2018-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/84791"}, {"sha": "5cf9c3f99260f825a3e3ba6c2ef98d8f75dd28b0", "filename": "gcc/testsuite/gcc.target/powerpc/sse-maxps-2.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-maxps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-maxps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-maxps-2.c?ref=ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target p8vector_hw } */\n+\n+#define NO_WARN_X86_INTRINSICS 1\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse-check.h\"\n+#endif\n+\n+#include CHECK_H\n+\n+#ifndef TEST\n+#define TEST sse_test_maxps_2\n+#endif\n+\n+#include <xmmintrin.h>\n+\n+static __m128\n+__attribute__((noinline, unused))\n+test (__m128 s1, __m128 s2)\n+{\n+  return _mm_max_ps (s1, s2);\n+}\n+\n+static void\n+TEST (void)\n+{\n+  union128 u, s1, s2;\n+  float e[4];\n+  int i;\n+\n+  s1.x = _mm_set_ps (24.43, __builtin_nanf(\"1\"), __builtin_nanf(\"2\"), 546.46);\n+  s2.x = _mm_set_ps (__builtin_nanf(\"3\"), __builtin_nanf(\"4\"), 3.15, 4.14);\n+  u.x = test (s1.x, s2.x);\n+\n+  for (i = 0; i < 4; i++)\n+    e[i] = s1.a[i] > s2.a[i] ? s1.a[i] : s2.a[i];\n+\n+  if (__builtin_memcmp (&u, e, 16))\n+    abort ();\n+}"}, {"sha": "4cb4b731903adad41cacb8d26ec7d8ba55dc6537", "filename": "gcc/testsuite/gcc.target/powerpc/sse-minps-2.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-minps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-minps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse-minps-2.c?ref=ec8d8a5b5c1cf75cd62b908e2ace053ed2b05ec2", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target p8vector_hw } */\n+\n+#define NO_WARN_X86_INTRINSICS 1\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse-check.h\"\n+#endif\n+\n+#include CHECK_H\n+\n+#ifndef TEST\n+#define TEST sse_test_minps_2\n+#endif\n+\n+#include <xmmintrin.h>\n+\n+static __m128\n+__attribute__((noinline, unused))\n+test (__m128 s1, __m128 s2)\n+{\n+  return _mm_min_ps (s1, s2);\n+}\n+\n+static void\n+TEST (void)\n+{\n+  union128 u, s1, s2;\n+  float e[4];\n+  int i;\n+\n+  s1.x = _mm_set_ps (24.43, __builtin_nanf(\"1\"), __builtin_nanf(\"2\"), 546.46);\n+  s2.x = _mm_set_ps (__builtin_nanf(\"3\"), __builtin_nanf(\"4\"), 3.15, 4.14);\n+  u.x = test (s1.x, s2.x);\n+\n+  for (i = 0; i < 4; i++)\n+    e[i] = s1.a[i] < s2.a[i] ? s1.a[i] : s2.a[i];\n+\n+  if (__builtin_memcmp (&u, e, 16))\n+    abort ();\n+}"}]}