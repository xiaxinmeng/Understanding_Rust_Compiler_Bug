{"sha": "074e8addc5d8e92d9446357b961c003fe06dcc50", "node_id": "C_kwDOANBUbNoAKDA3NGU4YWRkYzVkOGU5MmQ5NDQ2MzU3Yjk2MWMwMDNmZTA2ZGNjNTA", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-06-06T11:02:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-05T08:28:18Z"}, "message": "[Ada] Fix comments mentioning ancient flags related to objects references\n\nFlag May_Be_Modified under go a series of renamings between 1996 and\n2002.  It was changed to Not_Assigned, then to Not_Source_Assigned and\nfinally to Never_Set_In_Source. Fix remaining references in comments.\n\ngcc/ada/\n\n\t* sem_util.ads (Note_Possible_Modification): Fix occurrence of\n\tMay_Be_Modified in comment.\n\t* sem_warn.ads (Check_Unset_Reference): Fix occurrence of\n\tNot_Assigned in comment.", "tree": {"sha": "590f4921288023c3123ae59d338a6b26358908b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/590f4921288023c3123ae59d338a6b26358908b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/074e8addc5d8e92d9446357b961c003fe06dcc50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/074e8addc5d8e92d9446357b961c003fe06dcc50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/074e8addc5d8e92d9446357b961c003fe06dcc50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/074e8addc5d8e92d9446357b961c003fe06dcc50/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f85342b42b4bf9fee3cd23bc38498a3565bc9f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f85342b42b4bf9fee3cd23bc38498a3565bc9f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f85342b42b4bf9fee3cd23bc38498a3565bc9f1"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "de7883c2a388f4ec596189f8f27b9a459af991dd", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/074e8addc5d8e92d9446357b961c003fe06dcc50/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/074e8addc5d8e92d9446357b961c003fe06dcc50/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=074e8addc5d8e92d9446357b961c003fe06dcc50", "patch": "@@ -2872,7 +2872,7 @@ package Sem_Util is\n    --  This routine is called if the sub-expression N maybe the target of\n    --  an assignment (e.g. it is the left side of an assignment, used as\n    --  an out parameters, or used as prefixes of access attributes). It\n-   --  sets May_Be_Modified in the associated entity if there is one,\n+   --  sets Never_Set_In_Source in the associated entity if there is one,\n    --  taking into account the rule that in the case of renamed objects,\n    --  it is the flag in the renamed object that must be set.\n    --"}, {"sha": "1894f36f4b0c6052f2decaf028c379ff91b4c9e7", "filename": "gcc/ada/sem_warn.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/074e8addc5d8e92d9446357b961c003fe06dcc50/gcc%2Fada%2Fsem_warn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/074e8addc5d8e92d9446357b961c003fe06dcc50/gcc%2Fada%2Fsem_warn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.ads?ref=074e8addc5d8e92d9446357b961c003fe06dcc50", "patch": "@@ -86,15 +86,15 @@ package Sem_Warn is\n    --  N is the node for an expression which occurs in a reference position,\n    --  e.g. as the right side of an assignment. This procedure checks to see\n    --  if the node is a reference to a variable entity where the entity has\n-   --  Not_Assigned set. If so, the Unset_Reference field is set if it is not\n-   --  the first occurrence. No warning is posted, instead warnings will be\n-   --  posted later by Check_References. The reason we do things that\n-   --  way is that if there are no assignments anywhere, we prefer to flag\n-   --  the entity, rather than a reference to it. Note that for the purposes\n-   --  of this routine, a type conversion or qualified expression whose\n-   --  expression is an entity is also processed. The reason that we do not\n-   --  process these at the point of occurrence is that both these constructs\n-   --  can occur in non-reference positions (e.g. as out parameters).\n+   --  Never_Set_In_Source set. If so, the Unset_Reference field is set if it\n+   --  is not the first occurrence. No warning is posted, instead warnings will\n+   --  be posted later by Check_References. The reason we do things that way is\n+   --  that if there are no assignments anywhere, we prefer to flag the entity,\n+   --  rather than a reference to it. Note that for the purposes of this\n+   --  routine, a type conversion or qualified expression whose expression is\n+   --  an entity is also processed. The reason that we do not process these\n+   --  at the point of occurrence is that both these constructs can occur in\n+   --  non-reference positions (e.g. as out parameters).\n \n    procedure Check_Unused_Withs (Spec_Unit : Unit_Number_Type := No_Unit);\n    --  This routine performs two kinds of checks. It checks that all with'ed"}]}