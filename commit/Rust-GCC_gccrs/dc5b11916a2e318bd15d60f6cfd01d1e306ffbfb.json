{"sha": "dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1YjExOTE2YTJlMzE4YmQxNWQ2MGY2Y2ZkMDFkMWUzMDZmZmJmYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-09-11T08:22:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-09-11T08:22:51Z"}, "message": "revert: match.pd: Add flag_unsafe_math_optimizations check before deciding on the widest type in...\n\n2019-09-11  Richard Biener  <rguenther@suse.de>\n\n\tRevert\n\t2019-09-09  Barnaby Wilks  <barnaby.wilks@arm.com>\n\n\t* match.pd: Add flag_unsafe_math_optimizations check\n\tbefore deciding on the widest type in a binary math operation.\n\n\t* gcc.dg/fold-binary-math-casts.c: New test.\n\nFrom-SVN: r275632", "tree": {"sha": "dd0d5d06c0d4a33dc39c300327569ab15d817659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd0d5d06c0d4a33dc39c300327569ab15d817659"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d34b7afaeeb9422493873041c2aa14474eac129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d34b7afaeeb9422493873041c2aa14474eac129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d34b7afaeeb9422493873041c2aa14474eac129"}], "stats": {"total": 85, "additions": 17, "deletions": 68}, "files": [{"sha": "0aa93bceb4b887d69fa00c35f17dd375ff6f2b06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "patch": "@@ -1,3 +1,11 @@\n+2019-09-11  Richard Biener  <rguenther@suse.de>\n+\n+\tRevert\n+\t2019-09-09  Barnaby Wilks  <barnaby.wilks@arm.com>\n+\n+\t* match.pd: Add flag_unsafe_math_optimizations check\n+\tbefore deciding on the widest type in a binary math operation.\n+\n 2019-09-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/tm.texi.in: Document that exactly one of CALL_USED_REGISTERS"}, {"sha": "05009bb7a5ac8ded105fadb9e517b2a704d950a0", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "patch": "@@ -5056,18 +5056,10 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t      && newtype == type\n \t      && types_match (newtype, type))\n \t    (op (convert:newtype @1) (convert:newtype @2))\n-\t    (with\n-\t      {\n-\t\tif (!flag_unsafe_math_optimizations)\n-\t\t  {\n-\t\t    if (TYPE_PRECISION (ty1) > TYPE_PRECISION (newtype))\n+\t    (with { if (TYPE_PRECISION (ty1) > TYPE_PRECISION (newtype))\n \t\t      newtype = ty1;\n-\n \t\t    if (TYPE_PRECISION (ty2) > TYPE_PRECISION (newtype))\n-\t\t      newtype = ty2;\n-\t\t  }\n-\t      }\n-\n+\t\t      newtype = ty2; }\n \t       /* Sometimes this transformation is safe (cannot\n \t\t  change results through affecting double rounding\n \t\t  cases) and sometimes it is not.  If NEWTYPE is"}, {"sha": "8b3dfbbecf00bc74aaa7910c9e5f9ed04e19031b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dc5b11916a2e318bd15d60f6cfd01d1e306ffbfb", "patch": "@@ -1,3 +1,10 @@\n+2019-09-11  Richard Biener  <rguenther@suse.de>\n+\n+\tRevert\n+\t2019-09-09  Barnaby Wilks  <barnaby.wilks@arm.com>\n+\n+\t* gcc.dg/fold-binary-math-casts.c: New test.\n+\n 2019-09-10  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91673 - ICE with noexcept in alias-declaration."}, {"sha": "53c247fa14360c9e5719b432aa213f899caa2d25", "filename": "gcc/testsuite/gcc.dg/fold-binary-math-casts.c", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d34b7afaeeb9422493873041c2aa14474eac129/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-binary-math-casts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d34b7afaeeb9422493873041c2aa14474eac129/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-binary-math-casts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-binary-math-casts.c?ref=3d34b7afaeeb9422493873041c2aa14474eac129", "patch": "@@ -1,58 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-Ofast -fdump-tree-optimized\" } */\n-\n-#include <math.h>\n-\n-float\n-f (float x, float y)\n-{\n-  double z = 1.0 / x;\n-  return z * y;\n-}\n-\n-float\n-g (float x, float y)\n-{\n-  double a = 1.0 / x;\n-  double b = 1.0 / y;\n-  long double k = x*x*x*x*x*x;\n-\n-  return a + b - k;\n-}\n-\n-float\n-h (float x)\n-{\n-  double a = x * 2.0;\n-  double b = a / 3.5f;\n-  return a + b;\n-}\n-\n-float\n-i (float y, float z)\n-{\n-  return pow (y, 2.0) / (double) (y + z);\n-}\n-\n-float\n-j (float x, float y)\n-{\n-  double t = 4.0 * x;\n-  double z = t + y;\n-  return z;\n-}\n-\n-float\n-k (float a)\n-{\n-  return 1.0 / sqrtf (a);\n-}\n-\n-float\n-l (float a)\n-{\n-  return (double) a * (a / 2.0);\n-}\n-\n-/* { dg-final { scan-tree-dump-not \"\\\\(double\\\\)\" \"optimized\" } } */\n-/* { dg-final { scan-tree-dump-not \"\\\\(float\\\\)\" \"optimized\" } } */"}]}