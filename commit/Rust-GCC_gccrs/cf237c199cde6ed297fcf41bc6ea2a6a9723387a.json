{"sha": "cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YyMzdjMTk5Y2RlNmVkMjk3ZmNmNDFiYzZlYTJhNmE5NzIzMzg3YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-03-11T22:43:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-03-11T22:43:44Z"}, "message": "re PR c++/9820 (ice in build_baselink (templates))\n\n        PR c++/9820\n        * search.c (lookup_member): Fix handling of functions in a class\n        being defined.\n\nFrom-SVN: r64193", "tree": {"sha": "b9e1f312dd3771fa7604f4de2dfa9976baf38be7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9e1f312dd3771fa7604f4de2dfa9976baf38be7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf237c199cde6ed297fcf41bc6ea2a6a9723387a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea45c4b0b3c2ea92cb571e7ad6d44113745769ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea45c4b0b3c2ea92cb571e7ad6d44113745769ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea45c4b0b3c2ea92cb571e7ad6d44113745769ad"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "679cd1158c996bb70b063815ca7a9ab851d32f49", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf237c199cde6ed297fcf41bc6ea2a6a9723387a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf237c199cde6ed297fcf41bc6ea2a6a9723387a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "patch": "@@ -1,3 +1,9 @@\n+2003-03-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/9820\n+\t* search.c (lookup_member): Fix handling of functions in a class \n+\tbeing defined.\n+\n 2003-03-11  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/8700"}, {"sha": "3d23766d1527703e226c5a84b8866784d30133d4", "filename": "gcc/cp/search.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf237c199cde6ed297fcf41bc6ea2a6a9723387a/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf237c199cde6ed297fcf41bc6ea2a6a9723387a/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "patch": "@@ -1212,11 +1212,15 @@ lookup_member (tree xbasetype, tree name, int protect, bool want_type)\n \n   const char *errstr = 0;\n \n+  /* Sanity check.  */\n+  if (TREE_CODE (name) != IDENTIFIER_NODE)\n+    abort ();\n+\n   if (xbasetype == current_class_type && TYPE_BEING_DEFINED (xbasetype)\n       && IDENTIFIER_CLASS_VALUE (name))\n     {\n       tree field = IDENTIFIER_CLASS_VALUE (name);\n-      if (TREE_CODE (field) != FUNCTION_DECL\n+      if (! is_overloaded_fn (field)\n \t  && ! (want_type && TREE_CODE (field) != TYPE_DECL))\n \t/* We're in the scope of this class, and the value has already\n \t   been looked up.  Just return the cached value.  */"}, {"sha": "b81e4be94b790930a7a67db5f962ebc3515576a2", "filename": "gcc/testsuite/g++.dg/template/init2.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf237c199cde6ed297fcf41bc6ea2a6a9723387a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf237c199cde6ed297fcf41bc6ea2a6a9723387a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finit2.C?ref=cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/9820\n+\n+template <typename T> struct X {\n+  template<typename> static int test(...);\n+  template<typename> static int test(int *);\n+\n+  static const int i = sizeof(X<T>::template test<int>(0));\n+};\n+\n+template class X<int>;"}]}