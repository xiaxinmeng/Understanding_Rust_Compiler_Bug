{"sha": "212f4988f37ccf788c8c72b1dc952980bc9be3b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEyZjQ5ODhmMzdjY2Y3ODhjOGM3MmIxZGM5NTI5ODBiYzliZTNiNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-03-23T14:45:36Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-03-23T14:45:36Z"}, "message": "Fortran: Fix func decl mismatch [PR93660]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/93660\n\t* trans-decl.c (build_function_decl): Add comment;\n\tincrement hidden_typelist for caf_token/caf_offset.\n\t* trans-types.c (gfc_get_function_type): Add comment;\n\tadd missing caf_token/caf_offset args.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/93660\n\t* gfortran.dg/gomp/declare-simd-coarray-lib.f90: New test.", "tree": {"sha": "f598fe094efce00a0bbd382a79d54287b80656f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f598fe094efce00a0bbd382a79d54287b80656f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/212f4988f37ccf788c8c72b1dc952980bc9be3b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212f4988f37ccf788c8c72b1dc952980bc9be3b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/212f4988f37ccf788c8c72b1dc952980bc9be3b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212f4988f37ccf788c8c72b1dc952980bc9be3b7/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7cea7ceff9a2be7436108030c598628c51fba0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7cea7ceff9a2be7436108030c598628c51fba0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7cea7ceff9a2be7436108030c598628c51fba0f"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "34a0d49bae7e2629c2079b2d2d6584052d76d869", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212f4988f37ccf788c8c72b1dc952980bc9be3b7/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212f4988f37ccf788c8c72b1dc952980bc9be3b7/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=212f4988f37ccf788c8c72b1dc952980bc9be3b7", "patch": "@@ -2488,7 +2488,9 @@ build_function_decl (gfc_symbol * sym, bool global)\n }\n \n \n-/* Create the DECL_ARGUMENTS for a procedure.  */\n+/* Create the DECL_ARGUMENTS for a procedure.\n+   NOTE: The arguments added here must match the argument type created by\n+   gfc_get_function_type ().  */\n \n static void\n create_function_arglist (gfc_symbol * sym)\n@@ -2807,6 +2809,7 @@ create_function_arglist (gfc_symbol * sym)\n \t  DECL_ARG_TYPE (token) = TREE_VALUE (typelist);\n \t  TREE_READONLY (token) = 1;\n \t  hidden_arglist = chainon (hidden_arglist, token);\n+\t  hidden_typelist = TREE_CHAIN (hidden_typelist);\n \t  gfc_finish_decl (token);\n \n \t  offset = build_decl (input_location, PARM_DECL,\n@@ -2832,6 +2835,7 @@ create_function_arglist (gfc_symbol * sym)\n \t  DECL_ARG_TYPE (offset) = TREE_VALUE (typelist);\n \t  TREE_READONLY (offset) = 1;\n \t  hidden_arglist = chainon (hidden_arglist, offset);\n+\t  hidden_typelist = TREE_CHAIN (hidden_typelist);\n \t  gfc_finish_decl (offset);\n \t}\n "}, {"sha": "bc7aac1f3d912cf35480a05ed78f74f519ab2ec2", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212f4988f37ccf788c8c72b1dc952980bc9be3b7/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212f4988f37ccf788c8c72b1dc952980bc9be3b7/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=212f4988f37ccf788c8c72b1dc952980bc9be3b7", "patch": "@@ -3011,6 +3011,10 @@ create_fn_spec (gfc_symbol *sym, tree fntype)\n   return build_type_attribute_variant (fntype, tmp);\n }\n \n+\n+/* NOTE: The returned function type must match the argument list created by\n+   create_function_arglist.  */\n+\n tree\n gfc_get_function_type (gfc_symbol * sym, gfc_actual_arglist *actual_args,\n \t\t       const char *fnspec)\n@@ -3119,10 +3123,11 @@ gfc_get_function_type (gfc_symbol * sym, gfc_actual_arglist *actual_args,\n         }\n     }\n \n-  /* Add hidden string length parameters.  */\n+  /* Add hidden arguments.  */\n   for (f = gfc_sym_get_dummy_args (sym); f; f = f->next)\n     {\n       arg = f->sym;\n+      /* Add hidden string length parameters.  */\n       if (arg && arg->ts.type == BT_CHARACTER && !sym->attr.is_bind_c)\n \t{\n \t  if (!arg->ts.deferred)\n@@ -3145,6 +3150,20 @@ gfc_get_function_type (gfc_symbol * sym, gfc_actual_arglist *actual_args,\n \t       && arg->ts.type != BT_CLASS\n \t       && !gfc_bt_struct (arg->ts.type))\n \tvec_safe_push (typelist, boolean_type_node);\n+      /* Coarrays which are descriptorless or assumed-shape pass with\n+\t -fcoarray=lib the token and the offset as hidden arguments.  */\n+      else if (arg\n+\t       && flag_coarray == GFC_FCOARRAY_LIB\n+\t       && ((arg->ts.type != BT_CLASS\n+\t\t    && arg->attr.codimension\n+\t\t    && !arg->attr.allocatable)\n+\t\t   || (arg->ts.type == BT_CLASS\n+\t\t       && CLASS_DATA (arg)->attr.codimension\n+\t\t       && !CLASS_DATA (arg)->attr.allocatable)))\n+\t{\n+\t  vec_safe_push (typelist, pvoid_type_node);  /* caf_token.  */\n+\t  vec_safe_push (typelist, gfc_array_index_type);  /* caf_offset.  */\n+\t}\n     }\n \n   if (!vec_safe_is_empty (typelist)"}, {"sha": "1f74da76ffe3f45b85e7f89534b7bf2ab923b4ff", "filename": "gcc/testsuite/gfortran.dg/gomp/declare-simd-coarray-lib.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/212f4988f37ccf788c8c72b1dc952980bc9be3b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-coarray-lib.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/212f4988f37ccf788c8c72b1dc952980bc9be3b7/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-coarray-lib.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-coarray-lib.f90?ref=212f4988f37ccf788c8c72b1dc952980bc9be3b7", "patch": "@@ -0,0 +1,12 @@\n+! { dg-additional-options \"-fcoarray=lib\" }\n+!\n+! PR fortran/93660\n+!\n+! Failed as TREE_TYPE(fndecl) did not include the\n+! hidden caf_token/caf_offset arguments.\n+!\n+integer function f(x)\n+   integer :: x[*]\n+   !$omp declare simd\n+   f = x[1]\n+end"}]}