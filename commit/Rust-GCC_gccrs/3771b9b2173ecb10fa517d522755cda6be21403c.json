{"sha": "3771b9b2173ecb10fa517d522755cda6be21403c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3MWI5YjIxNzNlY2IxMGZhNTE3ZDUyMjc1NWNkYTZiZTIxNDAzYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-02T18:06:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-02T18:06:03Z"}, "message": "(make_decl_rtl): Set TREE_SIDE_EFFECTS on global if -fvolatile-global.\n\nFrom-SVN: r5559", "tree": {"sha": "d03e43fa8fd7f966ec32824b96f03ca5851ad3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d03e43fa8fd7f966ec32824b96f03ca5851ad3e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3771b9b2173ecb10fa517d522755cda6be21403c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3771b9b2173ecb10fa517d522755cda6be21403c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3771b9b2173ecb10fa517d522755cda6be21403c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3771b9b2173ecb10fa517d522755cda6be21403c/comments", "author": null, "committer": null, "parents": [{"sha": "3cd252c3204b88d0f862ce2e2dd9b5ece16a151f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd252c3204b88d0f862ce2e2dd9b5ece16a151f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd252c3204b88d0f862ce2e2dd9b5ece16a151f"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "e39f54686d6155a642217c23e3c88b9ca50241f9", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3771b9b2173ecb10fa517d522755cda6be21403c/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3771b9b2173ecb10fa517d522755cda6be21403c/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=3771b9b2173ecb10fa517d522755cda6be21403c", "patch": "@@ -468,10 +468,17 @@ make_decl_rtl (decl, asmspec, top_level)\n \n \t  DECL_RTL (decl) = gen_rtx (MEM, DECL_MODE (decl),\n \t\t\t\t     gen_rtx (SYMBOL_REF, Pmode, name));\n-\t  if (TREE_THIS_VOLATILE (decl)\n-\t    || (flag_volatile_global && TREE_CODE (decl) == VAR_DECL\n-\t\t&& TREE_PUBLIC (decl)))\n+\n+\t  /* If this variable is to be treated as volatile, show its\n+\t     tree node has side effects.  If it has side effects, either\n+\t     because of this test or from TREE_THIS_VOLATILE also\n+\t     being set, show the MEM is volatile.  */\n+\t  if (flag_volatile_global && TREE_CODE (decl) == VAR_DECL\n+\t      && TREE_PUBLIC (decl))\n+\t    TREE_SIDE_EFFECTS (decl) = 1;\n+\t  if (TREE_SIDE_EFFECTS (decl))\n \t    MEM_VOLATILE_P (DECL_RTL (decl)) = 1;\n+\n \t  if (TREE_READONLY (decl))\n \t    RTX_UNCHANGING_P (DECL_RTL (decl)) = 1;\n \t  MEM_IN_STRUCT_P (DECL_RTL (decl))"}]}