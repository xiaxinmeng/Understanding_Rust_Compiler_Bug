{"sha": "115d1851826d533e0676c991ca4e4216ff32782e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE1ZDE4NTE4MjZkNTMzZTA2NzZjOTkxY2E0ZTQyMTZmZjMyNzgyZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2013-11-12T23:09:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-11-12T23:09:09Z"}, "message": "gimple-ssa-isolate-paths.c (check_loadstore): Mark discovered memory references as volatile.\n\n\t* gimple-ssa-isolate-paths.c (check_loadstore): Mark discovered\n\tmemory references as volatile.\n\t(insert_trap_and_remove_trailing_statements): Fix comment.\n\n\t* gcc.dg/tree-ssa/isolate-1.c: Update expected output.\n\t* gcc.dg/tree-ssa/isolate-5.c: Verify the load survives through\n\tthe SSA optimizers.\n\nFrom-SVN: r204722", "tree": {"sha": "4e1d17e7b892481344d86fd6de1da8db9cbc861a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e1d17e7b892481344d86fd6de1da8db9cbc861a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/115d1851826d533e0676c991ca4e4216ff32782e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115d1851826d533e0676c991ca4e4216ff32782e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/115d1851826d533e0676c991ca4e4216ff32782e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115d1851826d533e0676c991ca4e4216ff32782e/comments", "author": null, "committer": null, "parents": [{"sha": "6e022c863a03fed1c9bc811bd16fba639db40f3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e022c863a03fed1c9bc811bd16fba639db40f3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e022c863a03fed1c9bc811bd16fba639db40f3e"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "4b7209ec74599606e5a57fce087320da3e6f3dcf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=115d1851826d533e0676c991ca4e4216ff32782e", "patch": "@@ -1,3 +1,9 @@\n+2013-11-12  Jeff Law  <law@redhat.com>\n+\n+\t* gimple-ssa-isolate-paths.c (check_loadstore): Mark discovered\n+\tmemory references as volatile.\n+\t(insert_trap_and_remove_trailing_statements): Fix comment.\n+\n 2013-11-12  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR other/58712"}, {"sha": "2d8f176c4b9af741900f27571d226493fc602d72", "filename": "gcc/gimple-ssa-isolate-paths.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2Fgimple-ssa-isolate-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2Fgimple-ssa-isolate-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-isolate-paths.c?ref=115d1851826d533e0676c991ca4e4216ff32782e", "patch": "@@ -51,7 +51,12 @@ check_loadstore (gimple stmt ATTRIBUTE_UNUSED, tree op, void *data)\n {\n   if ((TREE_CODE (op) == MEM_REF || TREE_CODE (op) == TARGET_MEM_REF)\n       && operand_equal_p (TREE_OPERAND (op, 0), (tree)data, 0))\n-    return true;\n+    {\n+      TREE_THIS_VOLATILE (op) = 1;\n+      TREE_SIDE_EFFECTS (op) = 1;\n+      update_stmt (stmt);\n+      return true;\n+    }\n   return false;\n }\n \n@@ -64,7 +69,7 @@ insert_trap_and_remove_trailing_statements (gimple_stmt_iterator *si_p, tree op)\n      code that wishes to catch the signal can do so.\n \n      If the dereference is a load, then there's nothing to do as the\n-     LHS will be a throw-away SSA_NAME and the LHS is the NULL dereference.\n+     LHS will be a throw-away SSA_NAME and the RHS is the NULL dereference.\n \n      If the dereference is a store and we can easily transform the RHS,\n      then simplify the RHS to enable more DCE.  */"}, {"sha": "e3460efad24ff2387edd5a6940c6d6c0a1cd365c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=115d1851826d533e0676c991ca4e4216ff32782e", "patch": "@@ -1,3 +1,9 @@\n+2013-11-12  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/isolate-1.c: Update expected output.\n+\t* gcc.dg/tree-ssa/isolate-5.c: Verify the load survives through\n+\tthe SSA optimizers.\n+\n 2013-11-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/59054"}, {"sha": "f1f3101d3d2b945515c0059ca03c60c6ba537702", "filename": "gcc/testsuite/gcc.dg/tree-ssa/isolate-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-1.c?ref=115d1851826d533e0676c991ca4e4216ff32782e", "patch": "@@ -50,7 +50,7 @@ d_type (struct d_info *di)\n    and finally that we set the RHS of the store to zero.  */\n /* { dg-final { scan-tree-dump-times \"__builtin_trap\" 1 \"isolate-paths\"} } */\n /* { dg-final { scan-tree-dump-times \"->type = 42\" 1 \"isolate-paths\"} } */\n-/* { dg-final { scan-tree-dump-times \"->type = 0\" 1 \"isolate-paths\"} } */\n+/* { dg-final { scan-tree-dump-times \"->type ={v} 0\" 1 \"isolate-paths\"} } */\n /* { dg-final { scan-tree-dump-times \"->zzz\" 1 \"isolate-paths\"} } */\n /* { dg-final { cleanup-tree-dump \"isolate-paths\" } } */\n "}, {"sha": "ee587d2320d1b31e714f0d948d3adb5fd3e68b6d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/isolate-5.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115d1851826d533e0676c991ca4e4216ff32782e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c?ref=115d1851826d533e0676c991ca4e4216ff32782e", "patch": "@@ -1,6 +1,6 @@\n \n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-isolate-paths\" } */\n+/* { dg-options \"-O2 -fdump-tree-isolate-paths -fdump-tree-optimized\" } */\n \n \n struct demangle_component\n@@ -51,9 +51,11 @@ d_type (struct d_info *di)\n    We leave the 0->type in the IL, so expect to see ->type twice.  */\n /* { dg-final { scan-tree-dump-times \"__builtin_trap\" 1 \"isolate-paths\"} } */\n /* { dg-final { scan-tree-dump-times \"->type\" 2 \"isolate-paths\"} } */\n+/* { dg-final { scan-tree-dump-times \"->type\" 1 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"\\\\.type\" 1 \"optimized\"} } */\n /* { dg-final { scan-tree-dump-times \"->zzz\" 1 \"isolate-paths\"} } */\n /* { dg-final { cleanup-tree-dump \"isolate-paths\" } } */\n-\n+/* { dg-final { cleanup-tree-dump \"optimized-paths\" } } */\n \n \n "}]}