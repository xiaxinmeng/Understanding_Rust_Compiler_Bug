{"sha": "0170f33ca07c5029df38c8e95477d6040fda280e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE3MGYzM2NhMDdjNTAyOWRmMzhjOGU5NTQ3N2Q2MDQwZmRhMjgwZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-08-29T16:23:40Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-08-29T16:23:40Z"}, "message": "lto.c (compare_tree_sccs_1): Compare DECL_FINAL_P...\n\n\n\t* lto.c (compare_tree_sccs_1): Compare  DECL_FINAL_P,\n\tDECL_CXX_CONSTRUCTOR_P, DECL_CXX_DESTRUCTOR_P and\n\tTYPE_FINAL_P.\n\n\t* lto-streamer-out.c (hash_tree): Stream DECL_FINAL_P.\n\tDECL_CXX_CONSTRUCTOR_P. DECL_CXX_DESTRUCTOR_P.\n\tTYPE_FINAL_P.\n\t* lto-streamer-in.c (unpack_ts_decl_with_vis_value_fields):\n\tDECL_FINAL_P. DECL_CXX_CONSTRUCTOR_P and DECL_CXX_DESTRUCTOR_P.\n\t(unpack_ts_type_common_value_fields): Stream TYPE_FINAL_P.\n\t* tree-streamer-out.c (pack_ts_decl_with_vis_value_fields):\n\tAdd DECL_FINAL_P, DECL_CXX_CONSTRUCTOR_P, DECL_CXX_DESTRUCTOR_P\n\t(pack_ts_type_common_value_fields): Add TYPE_FINAL_P.\n\nFrom-SVN: r202079", "tree": {"sha": "1df39b88ca7b48b23bb85cc3489bbbadade48d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1df39b88ca7b48b23bb85cc3489bbbadade48d83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0170f33ca07c5029df38c8e95477d6040fda280e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0170f33ca07c5029df38c8e95477d6040fda280e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0170f33ca07c5029df38c8e95477d6040fda280e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0170f33ca07c5029df38c8e95477d6040fda280e/comments", "author": null, "committer": null, "parents": [{"sha": "103ff0d65e9033a2fdf05b4f4c9b7686d95e78c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103ff0d65e9033a2fdf05b4f4c9b7686d95e78c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/103ff0d65e9033a2fdf05b4f4c9b7686d95e78c0"}], "stats": {"total": 60, "additions": 55, "deletions": 5}, "files": [{"sha": "2c92fd0e3b1d87a82f138b33325b39fa543dc994", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0170f33ca07c5029df38c8e95477d6040fda280e", "patch": "@@ -1,3 +1,15 @@\n+2013-08-29  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-streamer-out.c (hash_tree): Stream DECL_FINAL_P.\n+\tDECL_CXX_CONSTRUCTOR_P. DECL_CXX_DESTRUCTOR_P.\n+\tTYPE_FINAL_P.\n+\t* lto-streamer-in.c (unpack_ts_decl_with_vis_value_fields):\n+\tDECL_FINAL_P. DECL_CXX_CONSTRUCTOR_P and DECL_CXX_DESTRUCTOR_P.\n+\t(unpack_ts_type_common_value_fields): Stream TYPE_FINAL_P.\n+\t* tree-streamer-out.c (pack_ts_decl_with_vis_value_fields):\n+\tAdd DECL_FINAL_P, DECL_CXX_CONSTRUCTOR_P, DECL_CXX_DESTRUCTOR_P\n+\t(pack_ts_type_common_value_fields): Add TYPE_FINAL_P.\n+\n 2013-08-29  Teresa Johnson  <tejohnson@google.com>\n \n \t* dumpfile.c (dump_loc): Output column number."}, {"sha": "bbe69e5490ac40f56bc4192aa448e5f4d27b0831", "filename": "gcc/config/linux-android.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Fconfig%2Flinux-android.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Fconfig%2Flinux-android.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux-android.c?ref=0170f33ca07c5029df38c8e95477d6040fda280e", "patch": "@@ -37,7 +37,7 @@ linux_android_libc_has_function (enum function_class fn_class)\n {\n   if (OPTION_GLIBC)\n     return true;\n-  if (OPTION_BIONIC)\n+  /*if (OPTION_BIONIC)*/\n     if (fn_class == function_c94\n \t|| fn_class == function_c99_misc\n \t|| fn_class == function_sincos)"}, {"sha": "dfcd135717939919d8da5a8a62b5b4787ee899e6", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=0170f33ca07c5029df38c8e95477d6040fda280e", "patch": "@@ -795,6 +795,11 @@ hash_tree (struct streamer_tree_cache_d *cache, tree t)\n \t\t\t\t\t    v);\n \t  v = iterative_hash_host_wide_int (DECL_TLS_MODEL (t), v);\n \t}\n+      if (TREE_CODE (t) == FUNCTION_DECL)\n+\tv = iterative_hash_host_wide_int (DECL_FINAL_P (t)\n+\t\t\t\t\t  | (DECL_CXX_CONSTRUCTOR_P (t) << 1)\n+\t\t\t\t\t  | (DECL_CXX_DESTRUCTOR_P (t) << 2),\n+\t\t\t\t\t  v);\n       if (VAR_OR_FUNCTION_DECL_P (t))\n \tv = iterative_hash_host_wide_int (DECL_INIT_PRIORITY (t), v);\n     }\n@@ -835,7 +840,10 @@ hash_tree (struct streamer_tree_cache_d *cache, tree t)\n \t\t\t\t\t| (TYPE_USER_ALIGN (t) << 5)\n \t\t\t\t\t| (TYPE_READONLY (t) << 6), v);\n       if (RECORD_OR_UNION_TYPE_P (t))\n-\tv = iterative_hash_host_wide_int (TYPE_TRANSPARENT_AGGR (t), v);\n+\t{\n+\t  v = iterative_hash_host_wide_int (TYPE_TRANSPARENT_AGGR (t)\n+\t\t\t\t\t    | (TYPE_FINAL_P (t) << 1), v);\n+\t}\n       else if (code == ARRAY_TYPE)\n \tv = iterative_hash_host_wide_int (TYPE_NONALIASED_COMPONENT (t), v);\n       v = iterative_hash_host_wide_int (TYPE_PRECISION (t), v);"}, {"sha": "ab81a7874a3255c92b7cd31e55afecebe0d72604", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=0170f33ca07c5029df38c8e95477d6040fda280e", "patch": "@@ -1,3 +1,9 @@\n+2013-08-29  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto.c (compare_tree_sccs_1): Compare  DECL_FINAL_P,\n+\tDECL_CXX_CONSTRUCTOR_P, DECL_CXX_DESTRUCTOR_P and\n+\tTYPE_FINAL_P.\n+\n 2013-08-28  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (compare_tree_sccs_1): Drop DECL_ERROR_ISSUED,"}, {"sha": "f6e1f970caa2f2553ccadacd4122dac7d35ef0f4", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=0170f33ca07c5029df38c8e95477d6040fda280e", "patch": "@@ -1889,6 +1889,9 @@ compare_tree_sccs_1 (tree t1, tree t2, tree **map)\n       compare_values (DECL_DISREGARD_INLINE_LIMITS);\n       compare_values (DECL_PURE_P);\n       compare_values (DECL_LOOPING_CONST_OR_PURE_P);\n+      compare_values (DECL_FINAL_P);\n+      compare_values (DECL_CXX_CONSTRUCTOR_P);\n+      compare_values (DECL_CXX_DESTRUCTOR_P);\n       if (DECL_BUILT_IN_CLASS (t1) != NOT_BUILT_IN)\n \tcompare_values (DECL_FUNCTION_CODE);\n       if (DECL_STATIC_DESTRUCTOR (t1))\n@@ -1902,7 +1905,10 @@ compare_tree_sccs_1 (tree t1, tree t2, tree **map)\n       compare_values (TYPE_NO_FORCE_BLK);\n       compare_values (TYPE_NEEDS_CONSTRUCTING);\n       if (RECORD_OR_UNION_TYPE_P (t1))\n-\tcompare_values (TYPE_TRANSPARENT_AGGR);\n+\t{\n+\t  compare_values (TYPE_TRANSPARENT_AGGR);\n+\t  compare_values (TYPE_FINAL_P);\n+\t}\n       else if (code == ARRAY_TYPE)\n \tcompare_values (TYPE_NONALIASED_COMPONENT);\n       compare_values (TYPE_PACKED);"}, {"sha": "a86bcd87c1a81509fbb04cf7db7f5e6b033dc7b3", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=0170f33ca07c5029df38c8e95477d6040fda280e", "patch": "@@ -272,6 +272,12 @@ unpack_ts_decl_with_vis_value_fields (struct bitpack_d *bp, tree expr)\n       DECL_TLS_MODEL (expr) = (enum tls_model) bp_unpack_value (bp,  3);\n     }\n \n+  if (TREE_CODE (expr) == FUNCTION_DECL)\n+    {\n+      DECL_FINAL_P (expr) = (unsigned) bp_unpack_value (bp, 1);\n+      DECL_CXX_CONSTRUCTOR_P (expr) = (unsigned) bp_unpack_value (bp, 1);\n+      DECL_CXX_DESTRUCTOR_P (expr) = (unsigned) bp_unpack_value (bp, 1);\n+    }\n   if (VAR_OR_FUNCTION_DECL_P (expr))\n     {\n       priority_type p;\n@@ -343,7 +349,10 @@ unpack_ts_type_common_value_fields (struct bitpack_d *bp, tree expr)\n   TYPE_NO_FORCE_BLK (expr) = (unsigned) bp_unpack_value (bp, 1);\n   TYPE_NEEDS_CONSTRUCTING (expr) = (unsigned) bp_unpack_value (bp, 1);\n   if (RECORD_OR_UNION_TYPE_P (expr))\n-    TYPE_TRANSPARENT_AGGR (expr) = (unsigned) bp_unpack_value (bp, 1);\n+    {\n+      TYPE_TRANSPARENT_AGGR (expr) = (unsigned) bp_unpack_value (bp, 1);\n+      TYPE_FINAL_P (expr) = (unsigned) bp_unpack_value (bp, 1);\n+    }\n   else if (TREE_CODE (expr) == ARRAY_TYPE)\n     TYPE_NONALIASED_COMPONENT (expr) = (unsigned) bp_unpack_value (bp, 1);\n   TYPE_PACKED (expr) = (unsigned) bp_unpack_value (bp, 1);"}, {"sha": "98e5cf577859ab78bddfdd278a018034e196e2f6", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0170f33ca07c5029df38c8e95477d6040fda280e/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=0170f33ca07c5029df38c8e95477d6040fda280e", "patch": "@@ -240,6 +240,12 @@ pack_ts_decl_with_vis_value_fields (struct bitpack_d *bp, tree expr)\n       bp_pack_value (bp, DECL_TLS_MODEL (expr),  3);\n     }\n \n+  if (TREE_CODE (expr) == FUNCTION_DECL)\n+    {\n+      bp_pack_value (bp, DECL_FINAL_P (expr), 1);\n+      bp_pack_value (bp, DECL_CXX_CONSTRUCTOR_P (expr), 1);\n+      bp_pack_value (bp, DECL_CXX_DESTRUCTOR_P (expr), 1);\n+    }\n   if (VAR_OR_FUNCTION_DECL_P (expr))\n     bp_pack_var_len_unsigned (bp, DECL_INIT_PRIORITY (expr));\n }\n@@ -291,7 +297,10 @@ pack_ts_type_common_value_fields (struct bitpack_d *bp, tree expr)\n   bp_pack_value (bp, TYPE_NO_FORCE_BLK (expr), 1);\n   bp_pack_value (bp, TYPE_NEEDS_CONSTRUCTING (expr), 1);\n   if (RECORD_OR_UNION_TYPE_P (expr))\n-    bp_pack_value (bp, TYPE_TRANSPARENT_AGGR (expr), 1);\n+    {\n+      bp_pack_value (bp, TYPE_TRANSPARENT_AGGR (expr), 1);\n+      bp_pack_value (bp, TYPE_FINAL_P (expr), 1);\n+    }\n   else if (TREE_CODE (expr) == ARRAY_TYPE)\n     bp_pack_value (bp, TYPE_NONALIASED_COMPONENT (expr), 1);\n   bp_pack_value (bp, TYPE_PACKED (expr), 1);"}]}