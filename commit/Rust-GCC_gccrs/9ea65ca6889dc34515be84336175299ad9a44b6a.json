{"sha": "9ea65ca6889dc34515be84336175299ad9a44b6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVhNjVjYTY4ODlkYzM0NTE1YmU4NDMzNjE3NTI5OWFkOWE0NGI2YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-06-22T14:46:14Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-06-22T14:46:14Z"}, "message": "match.pd ((x ^ y) ^ (x | y) -> x & y, (x & y) + (x ^ y) -> x | y, (x & y) | (x ^ y) -> x | y, (x & y) ^ (x ^ y) -> x | y, (x & y) + (x | y) -> x + y, (x | y) - (x ^ y) -> x & y, (x | y) - (x & y) -> x ^ y): New patterns.\n\n\t* match.pd ((x ^ y) ^ (x | y) -> x & y,\n\t(x & y) + (x ^ y) -> x | y, (x & y) | (x ^ y) -> x | y,\n\t(x & y) ^ (x ^ y) -> x | y, (x & y) + (x | y) -> x + y,\n\t(x | y) - (x ^ y) -> x & y, (x | y) - (x & y) -> x ^ y): New patterns.\n\n\t* gcc.dg/fold-ior-1.c: New test.\n\t* gcc.dg/fold-minus-2.c: New test.\n\t* gcc.dg/fold-minus-3.c: New test.\n\t* gcc.dg/fold-plus-1.c: New test.\n\t* gcc.dg/fold-plus-2.c: New test.\n\t* gcc.dg/fold-xor-4.c: New test.\n\t* gcc.dg/fold-xor-5.c: New test.\n\nFrom-SVN: r224734", "tree": {"sha": "9c3319aa59047461dbd2781dc41cf35f91cb0185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c3319aa59047461dbd2781dc41cf35f91cb0185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ea65ca6889dc34515be84336175299ad9a44b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ea65ca6889dc34515be84336175299ad9a44b6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ea65ca6889dc34515be84336175299ad9a44b6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ea65ca6889dc34515be84336175299ad9a44b6a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4f9641b128d7692943f6378822ef79a69056427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f9641b128d7692943f6378822ef79a69056427", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f9641b128d7692943f6378822ef79a69056427"}], "stats": {"total": 465, "additions": 465, "deletions": 0}, "files": [{"sha": "0b3ea81c7d3c88e79d4940a5a80b0ebf05c4ad42", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -1,3 +1,10 @@\n+2015-06-22  Marek Polacek  <polacek@redhat.com>\n+\n+\t* match.pd ((x ^ y) ^ (x | y) -> x & y,\n+\t(x & y) + (x ^ y) -> x | y, (x & y) | (x ^ y) -> x | y,\n+\t(x & y) ^ (x ^ y) -> x | y, (x & y) + (x | y) -> x + y,\n+\t(x | y) - (x ^ y) -> x & y, (x | y) - (x & y) -> x ^ y): New patterns.\n+\n 2015-06-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/65871"}, {"sha": "badb80a28a7e1ff77fb0a1d6bc3a4e9ee6747184", "filename": "gcc/match.pd", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -325,6 +325,34 @@ along with GCC; see the file COPYING3.  If not see\n  (bit_xor:c (bit_and @0 @1) (bit_ior @0 @1))\n  (bit_xor @0 @1))\n \n+/* (x ^ y) ^ (x | y) -> x & y */\n+(simplify\n+ (bit_xor:c (bit_xor @0 @1) (bit_ior @0 @1))\n+ (bit_and @0 @1))\n+\n+/* (x & y) + (x ^ y) -> x | y */\n+/* (x & y) | (x ^ y) -> x | y */\n+/* (x & y) ^ (x ^ y) -> x | y */\n+(for op (plus bit_ior bit_xor)\n+ (simplify\n+  (op:c (bit_and @0 @1) (bit_xor @0 @1))\n+  (bit_ior @0 @1)))\n+\n+/* (x & y) + (x | y) -> x + y */\n+(simplify\n+ (plus:c (bit_and @0 @1) (bit_ior @0 @1))\n+ (plus @0 @1))\n+\n+/* (x | y) - (x ^ y) -> x & y */\n+(simplify\n+ (minus (bit_ior @0 @1) (bit_xor @0 @1))\n+ (bit_and @0 @1))\n+\n+/* (x | y) - (x & y) -> x ^ y */\n+(simplify\n+ (minus (bit_ior @0 @1) (bit_and @0 @1))\n+ (bit_xor @0 @1))\n+\n (simplify\n  (abs (negate @0))\n  (abs @0))"}, {"sha": "f9d26537b4b6b1958d90a73ecc8da5fec53dfc11", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -1,3 +1,13 @@\n+2015-06-22  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/fold-ior-1.c: New test.\n+\t* gcc.dg/fold-minus-2.c: New test.\n+\t* gcc.dg/fold-minus-3.c: New test.\n+\t* gcc.dg/fold-plus-1.c: New test.\n+\t* gcc.dg/fold-plus-2.c: New test.\n+\t* gcc.dg/fold-xor-4.c: New test.\n+\t* gcc.dg/fold-xor-5.c: New test.\n+\n 2015-06-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/65914"}, {"sha": "0358eb5cf4de8d26bc7e9916fb2079bc4945e262", "filename": "gcc/testsuite/gcc.dg/fold-ior-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-ior-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-ior-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-ior-1.c?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a & b;\n+  int tem2 = a ^ b;\n+  return tem1 | tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b & a;\n+  int tem2 = a ^ b;\n+  return tem1 | tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a & b;\n+  int tem2 = b ^ a;\n+  return tem1 | tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b & a;\n+  int tem2 = b ^ a;\n+  return tem1 | tem2;\n+}\n+\n+int\n+fn5 (int a, int b)\n+{\n+  int tem1 = a ^ b;\n+  int tem2 = a & b;\n+  return tem1 | tem2;\n+}\n+\n+int\n+fn6 (int a, int b)\n+{\n+  int tem1 = b ^ a;\n+  int tem2 = a & b;\n+  return tem1 | tem2;\n+}\n+\n+int\n+fn7 (int a, int b)\n+{\n+  int tem1 = a ^ b;\n+  int tem2 = b & a;\n+  return tem1 | tem2;\n+}\n+\n+int\n+fn8 (int a, int b)\n+{\n+  int tem1 = b ^ a;\n+  int tem2 = b & a;\n+  return tem1 | tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" & \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\^ \" \"cddce1\" } } */"}, {"sha": "6501f2f92642cdd16f19e6fe9f392caa7bd126ff", "filename": "gcc/testsuite/gcc.dg/fold-minus-2.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-2.c?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a | b;\n+  int tem2 = a ^ b;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b | a;\n+  int tem2 = a ^ b;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a | b;\n+  int tem2 = b ^ a;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b | a;\n+  int tem2 = b ^ a;\n+  return tem1 - tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" \\\\^ \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"cddce1\" } } */"}, {"sha": "e7adce6b2d99113baf7235dad44e424cd471866b", "filename": "gcc/testsuite/gcc.dg/fold-minus-3.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-minus-3.c?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a | b;\n+  int tem2 = a & b;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b | a;\n+  int tem2 = a & b;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a | b;\n+  int tem2 = b & a;\n+  return tem1 - tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b | a;\n+  int tem2 = b & a;\n+  return tem1 - tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" & \" \"cddce1\" } } */"}, {"sha": "40d6aa251d7858d9defbb5b6d071a024a46a8718", "filename": "gcc/testsuite/gcc.dg/fold-plus-1.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plus-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plus-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plus-1.c?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -0,0 +1,70 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a & b;\n+  int tem2 = a ^ b;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b & a;\n+  int tem2 = a ^ b;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a & b;\n+  int tem2 = b ^ a;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b & a;\n+  int tem2 = b ^ a;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn5 (int a, int b)\n+{\n+  int tem1 = a ^ b;\n+  int tem2 = a & b;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn6 (int a, int b)\n+{\n+  int tem1 = b ^ a;\n+  int tem2 = a & b;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn7 (int a, int b)\n+{\n+  int tem1 = a ^ b;\n+  int tem2 = b & a;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn8 (int a, int b)\n+{\n+  int tem1 = b ^ a;\n+  int tem2 = b & a;\n+  return tem1 + tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" & \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\^ \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\+ \" \"cddce1\" } } */"}, {"sha": "713abf62466bb834a3092725ef57868276cd04f4", "filename": "gcc/testsuite/gcc.dg/fold-plus-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plus-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plus-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-plus-2.c?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a & b;\n+  int tem2 = a | b;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b & a;\n+  int tem2 = a | b;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a & b;\n+  int tem2 = b | a;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b & a;\n+  int tem2 = b | a;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn5 (int a, int b)\n+{\n+  int tem1 = a | b;\n+  int tem2 = a & b;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn6 (int a, int b)\n+{\n+  int tem1 = b | a;\n+  int tem2 = a & b;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn7 (int a, int b)\n+{\n+  int tem1 = a | b;\n+  int tem2 = b & a;\n+  return tem1 + tem2;\n+}\n+\n+int\n+fn8 (int a, int b)\n+{\n+  int tem1 = b | a;\n+  int tem2 = b & a;\n+  return tem1 + tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" & \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"cddce1\" } } */"}, {"sha": "b5a2c48b66132aa9595db009fcdc2e243befd3f9", "filename": "gcc/testsuite/gcc.dg/fold-xor-4.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-xor-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-xor-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-xor-4.c?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a & b;\n+  int tem2 = a ^ b;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b & a;\n+  int tem2 = a ^ b;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a & b;\n+  int tem2 = b ^ a;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b & a;\n+  int tem2 = b ^ a;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn5 (int a, int b)\n+{\n+  int tem1 = a ^ b;\n+  int tem2 = a & b;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn6 (int a, int b)\n+{\n+  int tem1 = b ^ a;\n+  int tem2 = a & b;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn7 (int a, int b)\n+{\n+  int tem1 = a ^ b;\n+  int tem2 = b & a;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn8 (int a, int b)\n+{\n+  int tem1 = b ^ a;\n+  int tem2 = b & a;\n+  return tem1 ^ tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" & \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\^ \" \"cddce1\" } } */"}, {"sha": "15ee76c791b850f26cc1d390f5bd4226fdba5705", "filename": "gcc/testsuite/gcc.dg/fold-xor-5.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-xor-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ea65ca6889dc34515be84336175299ad9a44b6a/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-xor-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-xor-5.c?ref=9ea65ca6889dc34515be84336175299ad9a44b6a", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int a, int b)\n+{\n+  int tem1 = a | b;\n+  int tem2 = a ^ b;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn2 (int a, int b)\n+{\n+  int tem1 = b | a;\n+  int tem2 = a ^ b;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn3 (int a, int b)\n+{\n+  int tem1 = a | b;\n+  int tem2 = b ^ a;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn4 (int a, int b)\n+{\n+  int tem1 = b | a;\n+  int tem2 = b ^ a;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn5 (int a, int b)\n+{\n+  int tem1 = a ^ b;\n+  int tem2 = a | b;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn6 (int a, int b)\n+{\n+  int tem1 = b ^ a;\n+  int tem2 = a | b;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn7 (int a, int b)\n+{\n+  int tem1 = a ^ b;\n+  int tem2 = b | a;\n+  return tem1 ^ tem2;\n+}\n+\n+int\n+fn8 (int a, int b)\n+{\n+  int tem1 = b ^ a;\n+  int tem2 = b | a;\n+  return tem1 ^ tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\^ \" \"cddce1\" } } */"}]}