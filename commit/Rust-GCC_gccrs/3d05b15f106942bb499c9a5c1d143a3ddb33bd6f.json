{"sha": "3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QwNWIxNWYxMDY5NDJiYjQ5OWM5YTVjMWQxNDNhM2RkYjMzYmQ2Zg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-06-16T21:13:11Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-06-16T21:13:11Z"}, "message": "config.gcc: Add an i386/sysv4-cpp.h.\n\n\n\t* config.gcc: Add an i386/sysv4-cpp.h.  Remove i386-aout.h from\n\tvxworks.\nconfig/i386:\n\t* i386-aout.h, i386elf.h, sysv4.h: Remove CPP_PREDEFINES.\n\t* linux64.h: Use TARGET_OS_CPP_BUILTINS rather than\n\tCPP_PREDEFINES and part of CPP_SPEC.\n\ti386elf.h, mach.h, netware.h, rtemself.h, sco5.h, sol2.h,\n\tvsta.h, vxi386.h, win32.h: Similarly.\n\t* sysv4-cpp.h: New.\n\nFrom-SVN: r54679", "tree": {"sha": "6d05f9a5f563a6d5dc6f87e4264e8023dd41a591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d05f9a5f563a6d5dc6f87e4264e8023dd41a591"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/comments", "author": null, "committer": null, "parents": [{"sha": "daefe58e9352e710127683fa6d4da4f460186c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daefe58e9352e710127683fa6d4da4f460186c9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daefe58e9352e710127683fa6d4da4f460186c9e"}], "stats": {"total": 268, "additions": 180, "deletions": 88}, "files": [{"sha": "72678e57e02b651145e97d8543aa72f47190124c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -1,3 +1,15 @@\n+2002-06-16  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* config.gcc: Add an i386/sysv4-cpp.h.  Remove i386-aout.h from\n+\tvxworks.\n+config/i386:\n+\t* i386-aout.h, i386elf.h, sysv4.h: Remove CPP_PREDEFINES.\n+\t* linux64.h: Use TARGET_OS_CPP_BUILTINS rather than\n+\tCPP_PREDEFINES and part of CPP_SPEC.\n+\ti386elf.h, mach.h, netware.h, rtemself.h, sco5.h, sol2.h,\n+\tvsta.h, vxi386.h, win32.h: Similarly.\n+\t* sysv4-cpp.h: New.\n+\n 2002-06-16  Richard Henderson  <rth@redhat.com>\n \n \tPR c/7030"}, {"sha": "89ad5812cc0d10c4c88d322fa6821b553def9c9b", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -1006,7 +1006,7 @@ i[34567]86-ncr-sysv4*)\t\t# NCR 3000 - ix86 running system V.4\n \tthen\n \t\ttm_file=i386/sysv4gdb.h\n \telse\n-\t\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h i386/sysv4.h\"\n+\t\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h i386/sysv4.h i386/sysv4-cpp.h\"\n \tfi\n \textra_parts=\"crtbegin.o crtend.o\"\n \ttmake_file=i386/t-crtpic\n@@ -1031,7 +1031,7 @@ i[34567]86-sequent-sysv*)\t# would otherwise be caught by i?86-*-sysv*\n \texit 1\n \t;;\n i[34567]86-wrs-vxworks*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h i386/i386-aout.h i386/vxi386.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/gstabs.h i386/vxi386.h\"\n \tthread_file='vxworks'\n \t;;\n i[34567]86-*-aout*)\n@@ -1230,7 +1230,7 @@ i[34567]86-*-sysv5*)           # Intel x86 on System V Release 5\n        ;;\n i[34567]86-*-sysv4*)\t\t# Intel 80386's running system V.4\n \txm_defines=\"POSIX SMALL_ARG_MAX\"\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h i386/sysv4.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h i386/sysv4.h i386/sysv4-cpp.h\"\n \tif test x$stabs = xyes\n \tthen\n \t\ttm_file=\"${tm_file} dbx.h\""}, {"sha": "ca0cb2569ce558de5607f23885362b05d194f5ee", "filename": "gcc/config/i386/i386-aout.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fi386-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fi386-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-aout.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -23,9 +23,4 @@ Boston, MA 02111-1307, USA.  */\n \n #define TARGET_VERSION fprintf (stderr, \" (80386, BSD a.out syntax)\"); \n \n-/* Specify predefined symbols in preprocessor.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"\"\n-\n /* end of i386-aout.h */"}, {"sha": "cd01db2a54ea13f17c9e7834a2fed0d67588e0fc", "filename": "gcc/config/i386/i386elf.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fi386elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fi386elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386elf.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -40,10 +40,6 @@ Boston, MA 02111-1307, USA.  */\n   (TYPE_MODE (TYPE) == BLKmode \\\n    || (VECTOR_MODE_P (TYPE_MODE (TYPE)) && int_size_in_bytes (TYPE) == 8))\n \n-/* This used to define X86, but james@bigtex.cactus.org says that\n-   is supposed to be defined optionally by user programs--not by default.  */\n-#define CPP_PREDEFINES \"\"\n-\n #undef CPP_SPEC\n #define CPP_SPEC \"\"\n "}, {"sha": "7f19a536913f73fa4e038f468727f4de1cc198d8", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -23,11 +23,24 @@ Boston, MA 02111-1307, USA.  */\n \n #define TARGET_VERSION fprintf (stderr, \" (x86-64 Linux/ELF)\");\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__ELF__ -Dunix -D__gnu_linux__ -Dlinux -Asystem(posix)\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"linux\");\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\t\t\\\n+\tbuiltin_define (\"__gnu_linux__\");\t\t\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\t\t\\\n+\tbuiltin_assert (\"system=posix\");\t\t\t\\\n+\tif (flag_pic)\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"__PIC__\");\t\t\t\t\\\n+\t    builtin_define (\"__pic__\");\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n+#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n \n /* Provide a LINK_SPEC.  Here we provide support for the special GCC\n    options -static and -shared, which allow us to link things in one"}, {"sha": "0aa3846ae21e3756d9a9b25978ac6c948288a268", "filename": "gcc/config/i386/mach.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fmach.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fmach.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmach.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -2,8 +2,15 @@\n \n #define TARGET_VERSION fprintf (stderr, \" (80386, Mach)\"); \n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -DMACH -Asystem=unix -Asystem=mach\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define_std (\"MACH\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=mach\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Specify extra dir to search for include files.  */\n #define SYSTEM_INCLUDE_DIR \"/usr/mach/include\""}, {"sha": "1f12662b9269493efcf614456e84658c633c0929", "filename": "gcc/config/i386/netware.h", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetware.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -24,10 +24,14 @@ Boston, MA 02111-1307, USA.  */\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386 Netware 4)\");\n \n-/* These surely require augmentation */\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n-  \"-DAPX386 -D__i386__ -D__netware__ -Asystem=netware -Acpu=i386 -Amachine=i386\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"APX386\");\t\t\\\n+\tbuiltin_define (\"__netware__\");\t\t\\\n+\tbuiltin_assert (\"system=netware\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"short unsigned int\""}, {"sha": "dcf2808cd14d17edb373fea1d70e61eae306e1dc", "filename": "gcc/config/i386/rtemself.h", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtemself.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -21,11 +21,14 @@ Boston, MA 02111-1307, USA.  */\n \n /* Specify predefined symbols in preprocessor.  */\n \n-#include <i386/i386elf.h>\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES  \"-D__rtems__ -Asystem=rtems \\\n-    -D__ELF__ -D__i386__ -D__USE_INIT_FINI__\"\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"%{msoft-float:-D_SOFT_FLOAT}\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__rtems__\");\t\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+\tbuiltin_define (\"__USE_INIT_FINI__\");\t\\\n+\tbuiltin_assert (\"system=rtems\");\t\\\n+\tif (!TARGET_80387)\t\t\t\\\n+\t  builtin_define (\"_SOFT_FLOAT\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "f1f34f997deca23d4d80d6cc684d859d6508f167", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -634,20 +634,32 @@ init_section ()\t\t\t\t\t\t\t\t\\\n   %{mcoff:crtendS.o%s} \\\n   %{pg:gcrtn.o%s}%{!pg:crtn.o%s}\"\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n- \"-Asystem=svr3\"\n-\n-/* You are in a maze of GCC specs ... all alike */\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix\");\t\t\\\n+\tbuiltin_define (\"_SCO_DS\");\t\t\\\n+\tbuiltin_define (\"_M_I386\");\t\t\\\n+\tbuiltin_define (\"_M_XENIX\");\t\t\\\n+\tbuiltin_define (\"_M_UNIX\");\t\t\\\n+\tbuiltin_assert (\"system=svr3\");\t\t\\\n+\tif (flag_iso)\t\t\t\t\\\n+\t  cpp_define (pfile, \"_STRICT_ANSI\");\t\\\n+\tif (flag_pic)\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"__PIC__\");\t\t\t\t\t\\\n+\t    builtin_define (\"__pic__\");\t\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #undef CPP_SPEC\n #define CPP_SPEC \"\\\n   %{fpic:%{mcoff:%e-fpic is not valid with -mcoff}} \\\n   %{fPIC:%{mcoff:%e-fPIC is not valid with -mcoff}} \\\n-  -D__i386 -D__unix -D_SCO_DS=1 -D_M_I386 -D_M_XENIX -D_M_UNIX \\\n   %{!Xods30:-D_STRICT_NAMES} \\\n   %{!ansi:%{!posix:%{!Xods30:-D_SCO_XPG_VERS=4}}} \\\n-  %{ansi:-isystem include/ansi%s -isystem /usr/include/ansi -D_STRICT_ANSI} \\\n+  %{ansi:-isystem include/ansi%s -isystem /usr/include/ansi} \\\n   %{!ansi: \\\n    %{posix:-isystem include/posix%s -isystem /usr/include/posix \\\n            -D_POSIX_C_SOURCE=2 -D_POSIX_SOURCE=1} \\\n@@ -664,8 +676,6 @@ init_section ()\t\t\t\t\t\t\t\t\\\n   %{scointl:-DM_INTERNAT -D_M_INTERNAT} \\\n   %{!mcoff:-D_SCO_ELF} \\\n   %{mcoff:-D_M_COFF -D_SCO_COFF} \\\n-  %{!mcoff:%{fpic:-D__PIC__ -D__pic__} \\\n-         %{fPIC:%{!fpic:-D__PIC__ -D__pic__}}} \\\n   %{Xa:-D_SCO_C_DIALECT=1} \\\n   %{!Xa:%{Xc:-D_SCO_C_DIALECT=3} \\\n    %{!Xc:%{Xk:-D_SCO_C_DIALECT=4} \\"}, {"sha": "c4ac740f50bff774f20ba28c21ae6987b32d14fb", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -77,9 +77,26 @@ Boston, MA 02111-1307, USA.  */\n \n #define HANDLE_PRAGMA_REDEFINE_EXTNAME 1\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n-  \"-Dunix -D__svr4__ -D__SVR4 -Dsun -D__PRAGMA_REDEFINE_EXTNAME -Asystem=svr4\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\t\\\n+\tbuiltin_define_std (\"sun\");\t\t\t\\\n+\tbuiltin_define (\"__svr4__\");\t\t\t\\\n+\tbuiltin_define (\"__SVR4\");\t\t\t\\\n+\tbuiltin_define (\"__PRAGMA_REDEFINE_EXTNAME\");\t\\\n+\tbuiltin_assert (\"system=svr4\");\t\t\t\\\n+\t/* For C++ we must add some additional macros\t\\\n+\t   required by the C++ standard library.  */\t\\\n+\tif (c_language == clk_cplusplus)\t\t\\\n+\t  {\t\t\t\t\t\t\\\n+\t    builtin_define (\"_XOPEN_SOURCE=500\");\t\\\n+\t    builtin_define (\"_LARGEFILE_SOURCE=1\");\t\\\n+\t    builtin_define (\"_LARGEFILE64_SOURCE=1\");\t\\\n+\t    builtin_define (\"-D__EXTENSIONS__\");\t\\\n+\t  }\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* Solaris 2/Intel as chokes on #line directives.  */\n #undef CPP_SPEC\n@@ -89,14 +106,6 @@ Boston, MA 02111-1307, USA.  */\n    %{!pthreads:%{threads:-D_REENTRANT -D_SOLARIS_THREADS}} \\\n    %{compat-bsd:-iwithprefixbefore ucbinclude -I/usr/ucbinclude}\"\n \n-/* For C++ we need to add some additional macro definitions required\n-   by the C++ standard library.  */\n-#define CPLUSPLUS_CPP_SPEC \"\\\n--D_XOPEN_SOURCE=500 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 \\\n--D__EXTENSIONS__ \\\n-%(cpp) \\\n-\"\n-\n #undef LIB_SPEC\n #define LIB_SPEC \\\n   \"%{compat-bsd:-lucb -lsocket -lnsl -lelf -laio} \\"}, {"sha": "5b46bf1d945ba46e7ca76e33f88f41348e71de62", "filename": "gcc/config/i386/sysv4-cpp.h", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fsysv4-cpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fsysv4-cpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4-cpp.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -0,0 +1,32 @@\n+/* Target definitions for GNU compiler for Intel 80386 running System V.4\n+   Copyright (C) 1991, 2001, 2002 Free Software Foundation, Inc.\n+\n+   Written by Ron Guilmette (rfg@netcom.com).\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__svr4__\");\t\t\t\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\t\t\t\\\n+\tbuiltin_assert (\"system=svr4\");\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+"}, {"sha": "6b3335e892314b6781f6d7011d59186f5f5f7ba9", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -31,12 +31,6 @@ Boston, MA 02111-1307, USA.  */\n   (TYPE_MODE (TYPE) == BLKmode \\\n    || (VECTOR_MODE_P (TYPE_MODE (TYPE)) && int_size_in_bytes (TYPE) == 8))\n \n-/* Define which macros to predefine.  __svr4__ is our extension.  */\n-/* This used to define X86, but james@bigtex.cactus.org says that\n-   is supposed to be defined optionally by user programs--not by default.  */\n-#define CPP_PREDEFINES \\\n-  \"-Dunix -D__svr4__ -Asystem=unix -Asystem=svr4\"\n-\n /* Output at beginning of assembler file.  */\n /* The .file command should always begin the output.  */\n \n@@ -140,6 +134,3 @@ Boston, MA 02111-1307, USA.  */\n \t   \"addl\\t$_GLOBAL_OFFSET_TABLE_+[.-.LPR%=],%0\"\t\t\t\\\n \t   : \"=d\"(BASE))\n #endif\n-\n-#undef CPP_SPEC\n-#define CPP_SPEC \"\""}, {"sha": "93883295eb0b59b80bfc28e4d03b2ca8c9f2f401", "filename": "gcc/config/i386/vsta.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fvsta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fvsta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvsta.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -21,7 +21,12 @@ Boston, MA 02111-1307, USA.  */\n \n #define TARGET_VERSION fprintf (stderr, \" (80386, BSD syntax)\"); \n \n-#ifdef CPP_PREDEFINES\n-#undef CPP_PREDEFINES\n-#endif\n-#define CPP_PREDEFINES \"-Dunix -DVSTA -Asystem=unix -Asystem=vsta\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_define (\"VSTA\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=vsta\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)"}, {"sha": "57e0662006dc19644ed8e21e5cfcafa52bad6161", "filename": "gcc/config/i386/vxi386.h", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fvxi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fvxi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxi386.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -21,28 +21,31 @@ Boston, MA 02111-1307, USA.  */\n #undef  TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (80386, VxWorks BSD syntax)\"); \n \n-#undef CPP_CPU_SPEC\n-#define CPP_CPU_SPEC \"\\\n--Asystem=unix -Acpu=i386 -Amachine=i386 \\\n-%{!ansi:-Di386} -D__i386 -D__i386__ \\\n-%{march=i386:-DCPU=I80386} \\\n-%{march=i486:-DCPU=I80486 %(cpp_486)} \\\n-%{march=pentium:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUM %(cpp_586)} \\\n-%{march=pentiumpro:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUMPRO %(cpp_686)} \\\n-%{!march=*: \\\n- %{mcpu=i386:-DCPU=I80386} \\\n- %{mcpu=i486:-DCPU=I80486 %(cpp_486)} %{m486:-DCPU=I80486 %(cpp_486)} \\\n- %{mpentium:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUM %(cpp_586)} \\\n- %{mcpu=pentium:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUM %(cpp_586)} \\\n- %{mpentiumpro:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUMPRO %(cpp_686)} \\\n- %{mcpu=pentiumpro:-DCPU=PENTIUM -DCPU_VARIANT=PENTIUMPRO %(cpp_686)} \\\n- %{!mcpu*:%{!m486:%{!mpentium*:-DCPU=I80386}}}}\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      builtin_define (\"__vxworks\");\t\t\t\\\n+      builtin_assert (\"system=unix\");\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+      if (TARGET_386)\t\t\t\t\t\\\n+\tbuiltin_define (\"CPU=I80386\");\t\t\t\\\n+      else if (TARGET_486)\t\t\t\t\\\n+\tbuiltin_define (\"CPU=I80486\");\t\t\t\\\n+      else if (TARGET_PENTIUM)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  builtin_define (\"CPU=PENTIUM\");\t\t\\\n+\t  builtin_define (\"CPU_VARIANT=PENTIUM\");\t\\\n+\t}\t\t\t\t\t\t\\\n+      else if (TARGET_PENTIUMPRO)\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  builtin_define (\"CPU=PENTIUM\");\t\t\\\n+\t  builtin_define (\"CPU_VARIANT=PENTIUMPRO\");\t\\\n+\t}\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n \n #define HANDLE_SYSV_PRAGMA\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__vxworks\"\n-\n /* VxWorks does all the library stuff itself.  */\n \n #undef LIB_SPEC"}, {"sha": "48b38877370e4fab20baecdf69b7afd955e1da2a", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d05b15f106942bb499c9a5c1d143a3ddb33bd6f/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=3d05b15f106942bb499c9a5c1d143a3ddb33bd6f", "patch": "@@ -62,11 +62,24 @@ Boston, MA 02111-1307, USA.  */\n     { \"no-nop-fun-dllimport\",\tMASK_NOP_FUN_DLLIMPORT, \"\" },\n \n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D_WIN32 -DWINNT -D_X86_=1 \\\n-  -D__stdcall=__attribute__((__stdcall__)) \\\n-  -D__cdecl=__attribute__((__cdecl__)) \\\n-  -Asystem=winnt\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"_WIN32\");\t\t\t\t\t\\\n+\tbuiltin_define_std (\"WINNT\");\t\t\t\t\t\\\n+\tbuiltin_define (\"_X86_\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__stdcall=__attribute__((__stdcall__))\");\t\\\n+\tbuiltin_define (\"__cdecl=__attribute__((__cdecl__))\");\t\t\\\n+\tbuiltin_assert (\"system=winnt\");\t\t\t\t\\\n+\tif (TARGET_CYGWIN)\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"__CYGWIN32__\");\t\t\t\t\\\n+\t    builtin_define (\"__CYGWIN__\");\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__MINGW32__\");\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n #undef STARTFILE_SPEC\n \n@@ -75,8 +88,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} \\\n-  %{!mcygwin:-iwithprefixbefore include/mingw32 -D__MINGW32__}    \\\n-  %{mcygwin:-D__CYGWIN32__ -D__CYGWIN__}\"\n+  %{!mcygwin:-iwithprefixbefore include/mingw32}\"\n \n /* We have to dynamic link to get to the system DLLs.  All of libc, libm and\n    the Unix stuff is in cygwin.dll.  The import library is called"}]}