{"sha": "ed3de423f1694d30f9cccc0c024fb6e19e2c6323", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQzZGU0MjNmMTY5NGQzMGY5Y2NjYzBjMDI0ZmI2ZTE5ZTJjNjMyMw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-08-25T20:36:13Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-08-25T20:37:43Z"}, "message": "Avoid printing range table header alone.\n\ngcc/ChangeLog:\n\t* gimple-range-cache.cc (ssa_global_cache::dump): Avoid printing\n\trange table header alone.\n\t* gimple-range.cc (gimple_ranger::export_global_ranges): Same.", "tree": {"sha": "40e8da8512c07b1a8b49f77e1833c17dfd9e836d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40e8da8512c07b1a8b49f77e1833c17dfd9e836d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed3de423f1694d30f9cccc0c024fb6e19e2c6323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3de423f1694d30f9cccc0c024fb6e19e2c6323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed3de423f1694d30f9cccc0c024fb6e19e2c6323", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3de423f1694d30f9cccc0c024fb6e19e2c6323/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ab84eda5548119908c4e24c6ad953dd7c00a5b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab84eda5548119908c4e24c6ad953dd7c00a5b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ab84eda5548119908c4e24c6ad953dd7c00a5b7"}], "stats": {"total": 85, "additions": 50, "deletions": 35}, "files": [{"sha": "facf981c15dba80e3ee532cd94667e1c7f0b1b45", "filename": "gcc/gimple-range-cache.cc", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3de423f1694d30f9cccc0c024fb6e19e2c6323/gcc%2Fgimple-range-cache.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3de423f1694d30f9cccc0c024fb6e19e2c6323/gcc%2Fgimple-range-cache.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-cache.cc?ref=ed3de423f1694d30f9cccc0c024fb6e19e2c6323", "patch": "@@ -628,20 +628,32 @@ ssa_global_cache::clear ()\n void\n ssa_global_cache::dump (FILE *f)\n {\n-  unsigned x;\n-  int_range_max r;\n-  fprintf (f, \"Non-varying global ranges:\\n\");\n-  fprintf (f, \"=========================:\\n\");\n-  for ( x = 1; x < num_ssa_names; x++)\n-    if (gimple_range_ssa_p (ssa_name (x)) &&\n-\tget_global_range (r, ssa_name (x))  && !r.varying_p ())\n-      {\n-\tprint_generic_expr (f, ssa_name (x), TDF_NONE);\n-\tfprintf (f, \"  : \");\n-\tr.dump (f);\n-\tfprintf (f, \"\\n\");\n-      }\n-  fputc ('\\n', f);\n+  /* Cleared after the table header has been printed.  */\n+  bool print_header = true;\n+  for (unsigned x = 1; x < num_ssa_names; x++)\n+    {\n+      int_range_max r;\n+      if (gimple_range_ssa_p (ssa_name (x)) &&\n+\t  get_global_range (r, ssa_name (x))  && !r.varying_p ())\n+\t{\n+\t  if (print_header)\n+\t    {\n+\t      /* Print the header only when there's something else\n+\t\t to print below.  */\n+\t      fprintf (f, \"Non-varying global ranges:\\n\");\n+\t      fprintf (f, \"=========================:\\n\");\n+\t      print_header = false;\n+\t    }\n+\n+\t  print_generic_expr (f, ssa_name (x), TDF_NONE);\n+\t  fprintf (f, \"  : \");\n+\t  r.dump (f);\n+\t  fprintf (f, \"\\n\");\n+\t}\n+    }\n+\n+  if (!print_header)\n+    fputc ('\\n', f);\n }\n \n // --------------------------------------------------------------------------"}, {"sha": "d74cea3451e64e85c0ca80e2d8886d5e580e63af", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 24, "deletions": 21, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3de423f1694d30f9cccc0c024fb6e19e2c6323/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3de423f1694d30f9cccc0c024fb6e19e2c6323/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=ed3de423f1694d30f9cccc0c024fb6e19e2c6323", "patch": "@@ -259,38 +259,41 @@ gimple_ranger::range_of_stmt (irange &r, gimple *s, tree name)\n void\n gimple_ranger::export_global_ranges ()\n {\n-  unsigned x;\n-  int_range_max r;\n-  if (dump_file)\n-    {\n-      fprintf (dump_file, \"Exported global range table\\n\");\n-      fprintf (dump_file, \"===========================\\n\");\n-    }\n-\n-  for ( x = 1; x < num_ssa_names; x++)\n+  /* Cleared after the table header has been printed.  */\n+  bool print_header = true;\n+  for (unsigned x = 1; x < num_ssa_names; x++)\n     {\n+      int_range_max r;\n       tree name = ssa_name (x);\n       if (name && !SSA_NAME_IN_FREE_LIST (name)\n \t  && gimple_range_ssa_p (name)\n \t  && m_cache.get_global_range (r, name)\n \t  && !r.varying_p())\n \t{\n \t  bool updated = update_global_range (r, name);\n+\t  if (!updated || !dump_file || !(dump_flags & TDF_DETAILS))\n+\t    continue;\n \n-\t  if (updated && dump_file)\n+\t  if (print_header)\n \t    {\n-\t      value_range vr = r;\n-\t      print_generic_expr (dump_file, name , TDF_SLIM);\n-\t      fprintf (dump_file, \" --> \");\n-\t      vr.dump (dump_file);\n+\t      /* Print the header only when there's something else\n+\t\t to print below.  */\n+\t      fprintf (dump_file, \"Exported global range table:\\n\");\n+\t      fprintf (dump_file, \"============================\\n\");\n+\t      print_header = false;\n+\t    }\n+\n+\t  value_range vr = r;\n+\t  print_generic_expr (dump_file, name , TDF_SLIM);\n+\t  fprintf (dump_file, \"  : \");\n+\t  vr.dump (dump_file);\n+\t  fprintf (dump_file, \"\\n\");\n+\t  int_range_max same = vr;\n+\t  if (same != r)\n+\t    {\n+\t      fprintf (dump_file, \"         irange : \");\n+\t      r.dump (dump_file);\n \t      fprintf (dump_file, \"\\n\");\n-\t      int_range_max same = vr;\n-\t      if (same != r)\n-\t\t{\n-\t\t  fprintf (dump_file, \"         irange : \");\n-\t\t  r.dump (dump_file);\n-\t\t  fprintf (dump_file, \"\\n\");\n-\t\t}\n \t    }\n \t}\n     }"}]}