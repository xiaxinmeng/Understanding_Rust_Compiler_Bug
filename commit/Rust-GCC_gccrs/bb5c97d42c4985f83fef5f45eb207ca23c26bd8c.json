{"sha": "bb5c97d42c4985f83fef5f45eb207ca23c26bd8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI1Yzk3ZDQyYzQ5ODVmODNmZWY1ZjQ1ZWIyMDdjYTIzYzI2YmQ4Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-06-13T15:23:12Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-06-13T15:23:12Z"}, "message": "sfp-machine.h (_FP_NANSIGN_S, [...]): Move ...\n\n\t* config/i386/32/sfp-machine.h (_FP_NANSIGN_S, _FP_NANSIGN_D,\n\t_FP_NANSIGN_E, _FP_NANSIGN_Q): Move ...\n\t* config/i386/64/sfp-machine: ... (delete here) ...\n\t* config/i386/sfp-machine.h: ... to here.\n\t(FP_EX_MASK): Remove.\n\t(FP_RND_MASK): New.\n\t(FP_INIT_ROUNDMODE): Declare asm as volatile.\n\nFrom-SVN: r188518", "tree": {"sha": "ad0011fd5d300a64d5b047bfe55bf0dad8bb2bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad0011fd5d300a64d5b047bfe55bf0dad8bb2bf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf35667e2312efe4cca3226a7c5a03dc1bc9e5fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf35667e2312efe4cca3226a7c5a03dc1bc9e5fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf35667e2312efe4cca3226a7c5a03dc1bc9e5fb"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "17a2122e23567c0e8e35d5b6c082f0301337c558", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=bb5c97d42c4985f83fef5f45eb207ca23c26bd8c", "patch": "@@ -1,3 +1,13 @@\n+2012-06-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/32/sfp-machine.h (_FP_NANSIGN_S, _FP_NANSIGN_D,\n+\t_FP_NANSIGN_E, _FP_NANSIGN_Q): Move ...\n+\t* config/i386/64/sfp-machine: ... (delete here) ...\n+\t* config/i386/sfp-machine.h: ... to here.\n+\t(FP_EX_MASK): Remove.\n+\t(FP_RND_MASK): New.\n+\t(FP_INIT_ROUNDMODE): Declare asm as volatile.\n+\n 2012-06-11  Sriraman Tallam  <tmsriram@google.com>\n \n \t* config/i386/libgcc-bsd.ver: Version symbol __cpu_indicator_init."}, {"sha": "7f0c099414d8cc4aa7b3ca2b0f7076eb93f4956b", "filename": "libgcc/config/i386/32/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h?ref=bb5c97d42c4985f83fef5f45eb207ca23c26bd8c", "patch": "@@ -65,7 +65,7 @@\n \t     \"g\" ((USItype) (y0)))\n \n \n-#define _FP_MUL_MEAT_Q(R,X,Y)\t\t\t\t\t\\\n+#define _FP_MUL_MEAT_Q(R,X,Y)\t\t\t\t\\\n   _FP_MUL_MEAT_4_wide(_FP_WFRACBITS_Q,R,X,Y,umul_ppmm)\n \n #define _FP_DIV_MEAT_Q(R,X,Y)   _FP_DIV_MEAT_4_udiv(Q,R,X,Y)\n@@ -76,7 +76,3 @@\n    16byte since soft-fp emulation is done in 16byte.  */\n #define _FP_NANFRAC_E\t\t_FP_QNANBIT_E, 0, 0, 0\n #define _FP_NANFRAC_Q\t\t_FP_QNANBIT_Q, 0, 0, 0\n-#define _FP_NANSIGN_S\t\t1\n-#define _FP_NANSIGN_D\t\t1\n-#define _FP_NANSIGN_E\t\t1\n-#define _FP_NANSIGN_Q\t\t1"}, {"sha": "8cc982ecc7975a538d2da32aed5851088fe10673", "filename": "libgcc/config/i386/64/sfp-machine.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/libgcc%2Fconfig%2Fi386%2F64%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/libgcc%2Fconfig%2Fi386%2F64%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2F64%2Fsfp-machine.h?ref=bb5c97d42c4985f83fef5f45eb207ca23c26bd8c", "patch": "@@ -8,7 +8,7 @@ typedef unsigned int UTItype __attribute__ ((mode (TI)));\n \n #define TI_BITS (__CHAR_BIT__ * (int)sizeof(TItype))\n \n-#define _FP_MUL_MEAT_Q(R,X,Y)                           \\\n+#define _FP_MUL_MEAT_Q(R,X,Y)\t\t\t\t\\\n   _FP_MUL_MEAT_2_wide(_FP_WFRACBITS_Q,R,X,Y,umul_ppmm)\n \n #define _FP_DIV_MEAT_Q(R,X,Y)   _FP_DIV_MEAT_2_udiv(Q,R,X,Y)\n@@ -17,7 +17,3 @@ typedef unsigned int UTItype __attribute__ ((mode (TI)));\n #define _FP_NANFRAC_D\t\t_FP_QNANBIT_D\n #define _FP_NANFRAC_E\t\t_FP_QNANBIT_E, 0\n #define _FP_NANFRAC_Q\t\t_FP_QNANBIT_Q, 0\n-#define _FP_NANSIGN_S\t\t1\n-#define _FP_NANSIGN_D\t\t1\n-#define _FP_NANSIGN_E\t\t1\n-#define _FP_NANSIGN_Q\t\t1"}, {"sha": "e0fb5cf68fff09698cc6f1de9a9f76a5ea30cc9c", "filename": "libgcc/config/i386/sfp-machine.h", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb5c97d42c4985f83fef5f45eb207ca23c26bd8c/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h?ref=bb5c97d42c4985f83fef5f45eb207ca23c26bd8c", "patch": "@@ -14,7 +14,12 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #include \"config/i386/32/sfp-machine.h\"\n #endif\n \n-#define _FP_KEEPNANFRACP 1\n+#define _FP_KEEPNANFRACP\t1\n+\n+#define _FP_NANSIGN_S\t\t1\n+#define _FP_NANSIGN_D\t\t1\n+#define _FP_NANSIGN_E\t\t1\n+#define _FP_NANSIGN_Q\t\t1\n \n /* Here is something Intel misdesigned: the specs don't define\n    the case where we have two NaNs with same mantissas, but\n@@ -25,12 +30,12 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n \t|| (_FP_FRAC_EQ_##wc(X,Y) && (OP == '+' || OP == '*')))\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tR##_s = X##_s;\t\t\t\t\t\t\\\n-        _FP_FRAC_COPY_##wc(R,X);\t\t\t\t\\\n+\t_FP_FRAC_COPY_##wc(R,X);\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n \tR##_s = Y##_s;\t\t\t\t\t\t\\\n-        _FP_FRAC_COPY_##wc(R,Y);\t\t\t\t\\\n+\t_FP_FRAC_COPY_##wc(R,Y);\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\\\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n@@ -42,13 +47,11 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define FP_EX_UNDERFLOW\t\t0x10\n #define FP_EX_INEXACT\t\t0x20\n \n-#define FP_EX_MASK\t\t0x3f\n-\n void __sfp_handle_exceptions (int);\n \n #define FP_HANDLE_EXCEPTIONS\t\t\t\\\n   do {\t\t\t\t\t\t\\\n-    if (_fex & FP_EX_MASK)\t\t\t\\\n+    if (_fex)\t\t\t\t\t\\\n       __sfp_handle_exceptions (_fex);\t\t\\\n   } while (0);\n \n@@ -57,15 +60,17 @@ void __sfp_handle_exceptions (int);\n #define FP_RND_PINF\t\t0x800\n #define FP_RND_MINF\t\t0x400\n \n+#define FP_RND_MASK\t\t0xc00\n+\n #define _FP_DECL_EX \\\n   unsigned short _fcw __attribute__ ((unused)) = FP_RND_NEAREST\n \n-#define FP_INIT_ROUNDMODE\t\t\t\\\n-  do {\t\t\t\t\t\t\\\n-    __asm__ (\"fnstcw %0\" : \"=m\" (_fcw));\t\\\n+#define FP_INIT_ROUNDMODE\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    __asm__ __volatile__ (\"fnstcw\\t%0\" : \"=m\" (_fcw));\t\\\n   } while (0)\n \n-#define FP_ROUNDMODE\t\t(_fcw & 0xc00)\n+#define FP_ROUNDMODE\t\t(_fcw & FP_RND_MASK)\n \n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321"}]}