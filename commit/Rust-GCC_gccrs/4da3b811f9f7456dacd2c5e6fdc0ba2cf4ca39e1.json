{"sha": "4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRhM2I4MTFmOWY3NDU2ZGFjZDJjNWU2ZmRjMGJhMmNmNGNhMzllMQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-04-13T19:39:02Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-04-13T19:39:02Z"}, "message": "postreload-gcse.c (gcse_after_reload_main): Add calls to statistics_counter_event.\n\n\t* postreload-gcse.c (gcse_after_reload_main): Add calls to\n\tstatistics_counter_event.\n\t* tree-ssa-copyrename.c (stats): Define.\n\t(rename_ssa_copies): Count coalesced SSA_NAMEs.  Add call to\n\tstatistics_counter_event.\n\t* tree-ssa-math-opts.c (reciprocal_stats, sincos_stats): Define.\n\t(bswap_stats, widen_mul_stats): Define.\n\t(insert_reciprocals): Increment rdivs_inserted.\n\t(execute_cse_reciprocals): Zeroize reciprocal_stats.  Increment\n\trfuncs_inserted.  Add calls to statistics_counter_event.\n\t(execute_cse_sincos_1): Increment inserted.\n\t(execute_cse_sincos): Zeroize sincos_stats.  Add call to\n\tstatistics_counter_event.\n\t(execute_optimize_bswap): Zeroize bswap_stats.  Increment fields\n\tof bswap_stats.  Add calls to statistics_counter_event.\n\t(convert_mult_to_widen): Increment widen_mults_inserted.\n\t(convert_plusminus_to_widen): Increment maccs_inserted.\n\t(convert_mult_to_fma): Increment fmas_inserted.\n\t(execute_optimize_widening_mul): Zeroize widen_mul_stats.  Add\n\tcalls to statistics_counter_event.\n\nFrom-SVN: r172392", "tree": {"sha": "61a6187d6f263a1d8b55b7d4936e9fa41349fcbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61a6187d6f263a1d8b55b7d4936e9fa41349fcbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/comments", "author": null, "committer": null, "parents": [{"sha": "89fa552a9e33f75afd6c02204e29d6aa4c74c1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89fa552a9e33f75afd6c02204e29d6aa4c74c1ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89fa552a9e33f75afd6c02204e29d6aa4c74c1ab"}], "stats": {"total": 111, "additions": 111, "deletions": 0}, "files": [{"sha": "a23378958fa7baad560abfa3ed2c7dacac8b127a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "patch": "@@ -1,3 +1,26 @@\n+2011-04-13  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* postreload-gcse.c (gcse_after_reload_main): Add calls to\n+\tstatistics_counter_event.\n+\t* tree-ssa-copyrename.c (stats): Define.\n+\t(rename_ssa_copies): Count coalesced SSA_NAMEs.  Add call to\n+\tstatistics_counter_event.\n+\t* tree-ssa-math-opts.c (reciprocal_stats, sincos_stats): Define.\n+\t(bswap_stats, widen_mul_stats): Define.\n+\t(insert_reciprocals): Increment rdivs_inserted.\n+\t(execute_cse_reciprocals): Zeroize reciprocal_stats.  Increment\n+\trfuncs_inserted.  Add calls to statistics_counter_event.\n+\t(execute_cse_sincos_1): Increment inserted.\n+\t(execute_cse_sincos): Zeroize sincos_stats.  Add call to\n+\tstatistics_counter_event.\n+\t(execute_optimize_bswap): Zeroize bswap_stats.  Increment fields\n+\tof bswap_stats.  Add calls to statistics_counter_event.\n+\t(convert_mult_to_widen): Increment widen_mults_inserted.\n+\t(convert_plusminus_to_widen): Increment maccs_inserted.\n+\t(convert_mult_to_fma): Increment fmas_inserted.\n+\t(execute_optimize_widening_mul): Zeroize widen_mul_stats.  Add\n+\tcalls to statistics_counter_event.\n+\n 2011-04-13  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/48455"}, {"sha": "8e26419f39c94a386b8a1083e8d5636623a2122e", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "patch": "@@ -1294,6 +1294,13 @@ gcse_after_reload_main (rtx f ATTRIBUTE_UNUSED)\n \t  fprintf (dump_file, \"insns deleted:   %d\\n\", stats.insns_deleted);\n \t  fprintf (dump_file, \"\\n\\n\");\n \t}\n+\n+      statistics_counter_event (cfun, \"copies inserted\",\n+\t\t\t\tstats.copies_inserted);\n+      statistics_counter_event (cfun, \"moves inserted\",\n+\t\t\t\tstats.moves_inserted);\n+      statistics_counter_event (cfun, \"insns deleted\",\n+\t\t\t\tstats.insns_deleted);\n     }\n \n   /* We are finished with alias.  */"}, {"sha": "ae4fb5fba396700681b09be12e8bbb236c7498a6", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "patch": "@@ -40,6 +40,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"langhooks.h\"\n \n+static struct\n+{\n+  /* Number of copies coalesced.  */\n+  int coalesced;\n+} stats;\n+\n /* The following routines implement the SSA copy renaming phase.\n \n    This optimization looks for copies between 2 SSA_NAMES, either through a\n@@ -360,9 +366,12 @@ rename_ssa_copies (void)\n \t      fprintf (debug, \"\\n\");\n \t    }\n \t}\n+      stats.coalesced++;\n       replace_ssa_name_symbol (var, SSA_NAME_VAR (part_var));\n     }\n \n+  statistics_counter_event (cfun, \"copies coalesced\",\n+\t\t\t    stats.coalesced);\n   delete_var_map (map);\n   return updated ? TODO_remove_unused_locals : 0;\n }"}, {"sha": "b9f631e58ce849bb4e8cc000052bbd2c8784b2ec", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "patch": "@@ -138,6 +138,41 @@ struct occurrence {\n   bool bb_has_division;\n };\n \n+static struct\n+{\n+  /* Number of 1.0/X ops inserted.  */\n+  int rdivs_inserted;\n+\n+  /* Number of 1.0/FUNC ops inserted.  */\n+  int rfuncs_inserted;\n+} reciprocal_stats;\n+\n+static struct\n+{\n+  /* Number of cexpi calls inserted.  */\n+  int inserted;\n+} sincos_stats;\n+\n+static struct\n+{\n+  /* Number of hand-written 32-bit bswaps found.  */\n+  int found_32bit;\n+\n+  /* Number of hand-written 64-bit bswaps found.  */\n+  int found_64bit;\n+} bswap_stats;\n+\n+static struct\n+{\n+  /* Number of widening multiplication ops inserted.  */\n+  int widen_mults_inserted;\n+\n+  /* Number of integer multiply-and-accumulate ops inserted.  */\n+  int maccs_inserted;\n+\n+  /* Number of fp fused multiply-add ops inserted.  */\n+  int fmas_inserted;\n+} widen_mul_stats;\n \n /* The instance of \"struct occurrence\" representing the highest\n    interesting block in the dominator tree.  */\n@@ -339,6 +374,8 @@ insert_reciprocals (gimple_stmt_iterator *def_gsi, struct occurrence *occ,\n           gsi_insert_before (&gsi, new_stmt, GSI_SAME_STMT);\n         }\n \n+      reciprocal_stats.rdivs_inserted++;\n+\n       occ->recip_def_stmt = new_stmt;\n     }\n \n@@ -466,6 +503,7 @@ execute_cse_reciprocals (void)\n \t\t\t\tsizeof (struct occurrence),\n \t\t\t\tn_basic_blocks / 3 + 1);\n \n+  memset (&reciprocal_stats, 0, sizeof (reciprocal_stats));\n   calculate_dominance_info (CDI_DOMINATORS);\n   calculate_dominance_info (CDI_POST_DOMINATORS);\n \n@@ -568,6 +606,7 @@ execute_cse_reciprocals (void)\n \t\t  gimple_replace_lhs (stmt1, arg1);\n \t\t  gimple_call_set_fndecl (stmt1, fndecl);\n \t\t  update_stmt (stmt1);\n+\t\t  reciprocal_stats.rfuncs_inserted++;\n \n \t\t  FOR_EACH_IMM_USE_STMT (stmt, ui, arg1)\n \t\t    {\n@@ -580,6 +619,11 @@ execute_cse_reciprocals (void)\n \t}\n     }\n \n+  statistics_counter_event (cfun, \"reciprocal divs inserted\",\n+\t\t\t    reciprocal_stats.rdivs_inserted);\n+  statistics_counter_event (cfun, \"reciprocal functions inserted\",\n+\t\t\t    reciprocal_stats.rfuncs_inserted);\n+\n   free_dominance_info (CDI_DOMINATORS);\n   free_dominance_info (CDI_POST_DOMINATORS);\n   free_alloc_pool (occ_pool);\n@@ -711,6 +755,7 @@ execute_cse_sincos_1 (tree name)\n       gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n     }\n   update_stmt (stmt);\n+  sincos_stats.inserted++;\n \n   /* And adjust the recorded old call sites.  */\n   for (i = 0; VEC_iterate(gimple, stmts, i, use_stmt); ++i)\n@@ -760,6 +805,7 @@ execute_cse_sincos (void)\n   bool cfg_changed = false;\n \n   calculate_dominance_info (CDI_DOMINATORS);\n+  memset (&sincos_stats, 0, sizeof (sincos_stats));\n \n   FOR_EACH_BB (bb)\n     {\n@@ -793,6 +839,9 @@ execute_cse_sincos (void)\n \t}\n     }\n \n+  statistics_counter_event (cfun, \"sincos statements inserted\",\n+\t\t\t    sincos_stats.inserted);\n+\n   free_dominance_info (CDI_DOMINATORS);\n   return cfg_changed ? TODO_cleanup_cfg : 0;\n }\n@@ -1141,6 +1190,8 @@ execute_optimize_bswap (void)\n       bswap64_type = TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (fndecl)));\n     }\n \n+  memset (&bswap_stats, 0, sizeof (bswap_stats));\n+\n   FOR_EACH_BB (bb)\n     {\n       gimple_stmt_iterator gsi;\n@@ -1189,6 +1240,10 @@ execute_optimize_bswap (void)\n \t    continue;\n \n \t  changed = true;\n+\t  if (type_size == 32)\n+\t    bswap_stats.found_32bit++;\n+\t  else\n+\t    bswap_stats.found_64bit++;\n \n \t  bswap_tmp = bswap_src;\n \n@@ -1237,6 +1292,11 @@ execute_optimize_bswap (void)\n \t}\n     }\n \n+  statistics_counter_event (cfun, \"32-bit bswap implementations found\",\n+\t\t\t    bswap_stats.found_32bit);\n+  statistics_counter_event (cfun, \"64-bit bswap implementations found\",\n+\t\t\t    bswap_stats.found_64bit);\n+\n   return (changed ? TODO_dump_func | TODO_update_ssa | TODO_verify_ssa\n \t  | TODO_verify_stmts : 0);\n }\n@@ -1389,6 +1449,7 @@ convert_mult_to_widen (gimple stmt)\n   gimple_assign_set_rhs2 (stmt, fold_convert (type2, rhs2));\n   gimple_assign_set_rhs_code (stmt, WIDEN_MULT_EXPR);\n   update_stmt (stmt);\n+  widen_mul_stats.widen_mults_inserted++;\n   return true;\n }\n \n@@ -1491,6 +1552,7 @@ convert_plusminus_to_widen (gimple_stmt_iterator *gsi, gimple stmt,\n \t\t\t\t    fold_convert (type2, mult_rhs2),\n \t\t\t\t    add_rhs);\n   update_stmt (gsi_stmt (*gsi));\n+  widen_mul_stats.maccs_inserted++;\n   return true;\n }\n \n@@ -1666,6 +1728,7 @@ convert_mult_to_fma (gimple mul_stmt, tree op1, tree op2)\n \t\t\t\t\t\tmulop1, op2,\n \t\t\t\t\t\taddop);\n       gsi_replace (&gsi, fma_stmt, true);\n+      widen_mul_stats.fmas_inserted++;\n     }\n \n   return true;\n@@ -1681,6 +1744,8 @@ execute_optimize_widening_mul (void)\n   basic_block bb;\n   bool cfg_changed = false;\n \n+  memset (&widen_mul_stats, 0, sizeof (widen_mul_stats));\n+\n   FOR_EACH_BB (bb)\n     {\n       gimple_stmt_iterator gsi;\n@@ -1752,6 +1817,13 @@ execute_optimize_widening_mul (void)\n \t}\n     }\n \n+  statistics_counter_event (cfun, \"widening multiplications inserted\",\n+\t\t\t    widen_mul_stats.widen_mults_inserted);\n+  statistics_counter_event (cfun, \"widening maccs inserted\",\n+\t\t\t    widen_mul_stats.maccs_inserted);\n+  statistics_counter_event (cfun, \"fused multiply-adds inserted\",\n+\t\t\t    widen_mul_stats.fmas_inserted);\n+\n   return cfg_changed ? TODO_cleanup_cfg : 0;\n }\n "}]}