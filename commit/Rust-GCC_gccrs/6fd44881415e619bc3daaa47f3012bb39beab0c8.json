{"sha": "6fd44881415e619bc3daaa47f3012bb39beab0c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZkNDQ4ODE0MTVlNjE5YmMzZGFhYTQ3ZjMwMTJiYjM5YmVhYjBjOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-09-25T02:26:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-09-25T02:26:08Z"}, "message": "init.c (perform_member_init): Instantiate NSDMI here.\n\n\t* init.c (perform_member_init): Instantiate NSDMI here.\n\t* pt.c (tsubst_decl) [FIELD_DECL]: Not here.\n\nFrom-SVN: r179157", "tree": {"sha": "b327fbf614dfbb2f1e3840e506d35735750d4de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b327fbf614dfbb2f1e3840e506d35735750d4de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fd44881415e619bc3daaa47f3012bb39beab0c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd44881415e619bc3daaa47f3012bb39beab0c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fd44881415e619bc3daaa47f3012bb39beab0c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd44881415e619bc3daaa47f3012bb39beab0c8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb02633818a908b78e8fc0939be2e4774ed840c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb02633818a908b78e8fc0939be2e4774ed840c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb02633818a908b78e8fc0939be2e4774ed840c6"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "fc5436a1e7e666f780210cab668534028f648474", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6fd44881415e619bc3daaa47f3012bb39beab0c8", "patch": "@@ -1,5 +1,8 @@\n 2011-09-24  Jason Merrill  <jason@redhat.com>\n \n+\t* init.c (perform_member_init): Instantiate NSDMI here.\n+\t* pt.c (tsubst_decl) [FIELD_DECL]: Not here.\n+\n \tHandle deferred parsing of NSDMIs.\n \t* parser.h (cp_unparsed_functions_entry): Add nsdmis field.\n \t* parser.c (unparsed_nsdmis, cp_parser_save_nsdmi): New."}, {"sha": "f246286e767b833574b2cf74d915471fdbc6238d", "filename": "gcc/cp/init.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=6fd44881415e619bc3daaa47f3012bb39beab0c8", "patch": "@@ -496,7 +496,17 @@ perform_member_init (tree member, tree init)\n   /* Use the non-static data member initializer if there was no\n      mem-initializer for this field.  */\n   if (init == NULL_TREE)\n-    init = break_out_target_exprs (DECL_INITIAL (member));\n+    {\n+      if (CLASSTYPE_TEMPLATE_INSTANTIATION (DECL_CONTEXT (member)))\n+\t/* Do deferred instantiation of the NSDMI.  */\n+\tinit = (tsubst_copy_and_build\n+\t\t(DECL_INITIAL (member),\n+\t\t CLASSTYPE_TI_ARGS (DECL_CONTEXT (member)),\n+\t\t tf_warning_or_error, member, /*function_p=*/false,\n+\t\t /*integral_constant_expression_p=*/false));\n+      else\n+\tinit = break_out_target_exprs (DECL_INITIAL (member));\n+    }\n \n   /* Effective C++ rule 12 requires that all data members be\n      initialized.  */"}, {"sha": "ebadebf1b4893e7d1550b11b4581891a2ea01b18", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6fd44881415e619bc3daaa47f3012bb39beab0c8", "patch": "@@ -10264,11 +10264,14 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \tTREE_TYPE (r) = type;\n \tcp_apply_type_quals_to_decl (cp_type_quals (type), r);\n \n-\t/* DECL_INITIAL gives the number of bits in a bit-field.  */\n-\tDECL_INITIAL (r)\n-\t  = tsubst_expr (DECL_INITIAL (t), args,\n-\t\t\t complain, in_decl,\n-\t\t\t /*integral_constant_expression_p=*/true);\n+\tif (DECL_C_BIT_FIELD (r))\n+\t  /* For bit-fields, DECL_INITIAL gives the number of bits.  For\n+\t     non-bit-fields DECL_INITIAL is a non-static data member\n+\t     initializer, which gets deferred instantiation.  */\n+\t  DECL_INITIAL (r)\n+\t    = tsubst_expr (DECL_INITIAL (t), args,\n+\t\t\t   complain, in_decl,\n+\t\t\t   /*integral_constant_expression_p=*/true);\n \t/* We don't have to set DECL_CONTEXT here; it is set by\n \t   finish_member_declaration.  */\n \tDECL_CHAIN (r) = NULL_TREE;"}, {"sha": "a8b10cda8ff8fe6744ed3a00da2a65fe47f77b07", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6fd44881415e619bc3daaa47f3012bb39beab0c8", "patch": "@@ -1,5 +1,7 @@\n 2011-09-24  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/nsdmi-defer3.C: New.\n+\n \t* g++.dg/cpp0x/nsdmi-defer1.C: New.\n \t* g++.dg/cpp0x/nsdmi-defer2.C: New.\n "}, {"sha": "2777fb5d8e637aaf8d76fdf47b2b8ce48850273c", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-defer3.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-defer3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd44881415e619bc3daaa47f3012bb39beab0c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-defer3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-defer3.C?ref=6fd44881415e619bc3daaa47f3012bb39beab0c8", "patch": "@@ -0,0 +1,19 @@\n+// Do NSDMI get deferred instantiation?\n+// { dg-options -std=c++0x }\n+\n+template <class T>\n+struct A\n+{\n+  T t = T(42);\n+  constexpr A() { }\n+  A(T t): t(t) { }\n+};\n+\n+struct B { };\n+\n+#define SA(X) static_assert(X,#X)\n+\n+constexpr A<int> a1;\n+SA(a1.t == 42);\n+\n+A<B> a2 {B()};"}]}