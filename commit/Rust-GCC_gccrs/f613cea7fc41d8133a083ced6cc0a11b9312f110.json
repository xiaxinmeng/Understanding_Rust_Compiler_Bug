{"sha": "f613cea7fc41d8133a083ced6cc0a11b9312f110", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYxM2NlYTdmYzQxZDgxMzNhMDgzY2VkNmNjMGExMWI5MzEyZjExMA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2008-09-22T11:45:02Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2008-09-22T11:45:02Z"}, "message": "re PR fortran/37486 (alignment of data in COMMON blocks)\n\n2008-09-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/37486\n\t* gfortran.h (gfc_option_t): New members flag_align_commons and\n\twarn_align_commons. \n\t* lang.opt: New options falign-commons and Walign-commons.\n\t* invoke.texi: Documentation for new options.\n\t* options.c (gfc_init_options): Initialize new options.\n\t(gfc_handle_options): Handle new options.\n\t* trans-common.c (translate_common): Implement new options.\n\t(gfc_trans_common): Set correct locus.\n\n\n2008-09-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/37486\n\t* gfortran.dg/common_align_1.f90: New.\n\t* gfortran.dg/warn_align_commons.f90: New.\n\nFrom-SVN: r140546", "tree": {"sha": "5ace57c212233d9f04bcb96b875d8137f2545d01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ace57c212233d9f04bcb96b875d8137f2545d01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f613cea7fc41d8133a083ced6cc0a11b9312f110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f613cea7fc41d8133a083ced6cc0a11b9312f110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f613cea7fc41d8133a083ced6cc0a11b9312f110", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f613cea7fc41d8133a083ced6cc0a11b9312f110/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22868cbf560231317a5c82348c08d396fa29f471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22868cbf560231317a5c82348c08d396fa29f471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22868cbf560231317a5c82348c08d396fa29f471"}], "stats": {"total": 141, "additions": 124, "deletions": 17}, "files": [{"sha": "7744ba4660e3e0ea429070d08a84c1ba75ce757b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -1,3 +1,15 @@\n+2008-09-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/37486\n+\t* gfortran.h (gfc_option_t): New members flag_align_commons and\n+\twarn_align_commons. \n+\t* lang.opt: New options falign-commons and Walign-commons.\n+\t* invoke.texi: Documentation for new options.\n+\t* options.c (gfc_init_options): Initialize new options.\n+\t(gfc_handle_options): Handle new options.\n+\t* trans-common.c (translate_common): Implement new options.\n+\t(gfc_trans_common): Set correct locus.\n+\n 2008-09-21  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/37583"}, {"sha": "fa3f865b74ee0bc83ceed448c7841ce1ad8ea5d4", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -1969,6 +1969,7 @@ typedef struct\n   int warn_intrinsics_std;\n   int warn_character_truncation;\n   int warn_array_temp;\n+  int warn_align_commons;\n   int max_errors;\n \n   int flag_all_intrinsics;\n@@ -2006,6 +2007,7 @@ typedef struct\n   int flag_init_logical;\n   int flag_init_character;\n   char flag_init_character_value;\n+  int flag_align_commons;\n \n   int fpe;\n "}, {"sha": "2f6f4b0f9a46d9e9ed5d44ed4d8ee1a14ede12d7", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -138,7 +138,8 @@ and warnings}.\n -fsyntax-only  -pedantic  -pedantic-errors @gol\n -Wall  -Waliasing  -Wampersand  -Warray-bounds -Wcharacter-truncation @gol\n -Wconversion -Wimplicit-interface  -Wline-truncation  -Wintrinsics-std @gol\n--Wsurprising -Wno-tabs  -Wunderflow -Wunused-parameter -Wintrinsics-shadow}\n+-Wsurprising -Wno-tabs  -Wunderflow -Wunused-parameter -Wintrinsics-shadow @gol\n+-Wno-align-commons}\n \n @item Debugging Options\n @xref{Debugging Options,,Options for debugging your program or GNU Fortran}.\n@@ -167,7 +168,7 @@ and warnings}.\n -fpack-derived  -frepack-arrays  -fshort-enums  -fexternal-blas @gol\n -fblas-matmul-limit=@var{n} -frecursive -finit-local-zero @gol\n -finit-integer=@var{n} -finit-real=@var{<zero|inf|-inf|nan>} @gol\n--finit-logical=@var{<true|false>} -finit-character=@var{n}}\n+-finit-logical=@var{<true|false>} -finit-character=@var{n} -fno-align-commons}\n @end table\n \n @menu\n@@ -800,6 +801,14 @@ about unused dummy arguments, but about unused @code{PARAMETER} values.\n @option{-Wunused-parameter} is not included in @option{-Wall} but is\n implied by @option{-Wall -Wextra}.\n \n+@item -Walign-commons\n+@opindex @code{Walign-commons}\n+@cindex warnings, alignment of COMMON blocks\n+@cindex alignment of COMMON blocks\n+By default, @command{gfortran} warns about any occasion of variables being\n+padded for proper alignment inside a COMMON block. This warning can be turned\n+off via @option{-Wno-align-commons}. See also @option{-falign-commons}.\n+\n @item -Werror\n @opindex @code{Werror}\n @cindex warnings, to errors\n@@ -1275,6 +1284,18 @@ future releases).\n \n Note that the @option{-finit-real=nan} option initializes @code{REAL}\n and @code{COMPLEX} variables with a quiet NaN.\n+\n+@item -falign-commons\n+@opindex @code{falign-commons}\n+@cindex alignment of COMMON blocks\n+By default, @command{gfortran} enforces proper alignment of all variables in a\n+COMMON block by padding them as needed. On certain platforms this is mandatory,\n+on others it increases performance. If a COMMON block is not declared with\n+consistent data types everywhere, this padding can cause trouble, and\n+@option{-fno-align-commons } can be used to disable automatic alignment. The\n+same form of this option should be used for all files that share a COMMON block.\n+To avoid potential alignment issues in COMMON blocks, it is recommended to order\n+objects from largests to smallest.\n @end table\n \n @xref{Code Gen Options,,Options for Code Generation Conventions,"}, {"sha": "49055f38e5b9abcf40cc93f57df846e5e17f765d", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -72,6 +72,10 @@ Waliasing\n Fortran Warning\n Warn about possible aliasing of dummy arguments\n \n+Walign-commons\n+Fortran Warning\n+Warn about alignment of COMMON blocks\n+\n Wampersand\n Fortran Warning\n Warn about missing ampersand in continued character constants\n@@ -132,6 +136,10 @@ d\n Fortran Joined\n -d[DIMNU]\tDump details about macro names and definitions during preprocessing\n \n+falign-commons\n+Fortran\n+Enable alignment of COMMON blocks\n+\n fall-intrinsics\n Fortran RejectNegative\n All intrinsics procedures are available regardless of selected standard"}, {"sha": "52174b3d1870cb18774c31ace60e4ed3bded6c32", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -78,6 +78,7 @@ gfc_init_options (unsigned int argc, const char **argv)\n   gfc_option.warn_underflow = 1;\n   gfc_option.warn_intrinsic_shadow = 0;\n   gfc_option.warn_intrinsics_std = 0;\n+  gfc_option.warn_align_commons = 1;\n   gfc_option.max_errors = 25;\n \n   gfc_option.flag_all_intrinsics = 0;\n@@ -117,6 +118,7 @@ gfc_init_options (unsigned int argc, const char **argv)\n   gfc_option.flag_init_logical = GFC_INIT_LOGICAL_OFF;\n   gfc_option.flag_init_character = GFC_INIT_CHARACTER_OFF;\n   gfc_option.flag_init_character_value = (char)0;\n+  gfc_option.flag_align_commons = 1;\n   \n   gfc_option.fpe = 0;\n \n@@ -517,6 +519,10 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.warn_intrinsic_shadow = value;\n       break;\n \n+    case OPT_Walign_commons:\n+      gfc_option.warn_align_commons = value;\n+      break;\n+\n     case OPT_fall_intrinsics:\n       gfc_option.flag_all_intrinsics = 1;\n       break;\n@@ -825,6 +831,10 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n     case OPT_frecursive:\n       gfc_option.flag_recursive = 1;\n       break;\n+\n+    case OPT_falign_commons:\n+      gfc_option.flag_align_commons = value;\n+      break;\n     }\n \n   return result;"}, {"sha": "92edd208daefbd16ab1319ada8fcc8c88560ea7c", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 27, "deletions": 15, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -1059,7 +1059,9 @@ translate_common (gfc_common_head *common, gfc_symbol *var_list)\n   bool saw_equiv;\n \n   common_segment = NULL;\n+  offset = 0;\n   current_offset = 0;\n+  align = 1;\n   max_align = 1;\n   saw_equiv = false;\n \n@@ -1100,16 +1102,27 @@ translate_common (gfc_common_head *common, gfc_symbol *var_list)\n \t\t       \"extension to COMMON '%s' at %L\", sym->name,\n \t\t       common->name, &common->where);\n \n-\t  offset = align_segment (&align);\n+\t  if (gfc_option.flag_align_commons)\n+\t    offset = align_segment (&align);\n \n \t  if (offset & (max_align - 1))\n \t    {\n \t      /* The required offset conflicts with previous alignment\n \t\t requirements.  Insert padding immediately before this\n \t\t segment.  */\n-\t      gfc_warning (\"Padding of %d bytes required before '%s' in \"\n-\t\t\t   \"COMMON '%s' at %L\", (int)offset, s->sym->name,\n-\t\t\t   common->name, &common->where);\n+\t      if (gfc_option.warn_align_commons)\n+\t\t{\n+\t\t  if (strcmp (common->name, BLANK_COMMON_NAME))\n+\t\t    gfc_warning (\"Padding of %d bytes required before '%s' in \"\n+\t\t\t\t \"COMMON '%s' at %L; reorder elements or use \"\n+\t\t\t\t \"-fno-align-commons\", (int)offset,\n+\t\t\t\t s->sym->name, common->name, &common->where);\n+\t\t  else\n+\t\t    gfc_warning (\"Padding of %d bytes required before '%s' in \"\n+\t\t\t\t \"COMMON at %L; reorder elements or use \"\n+\t\t\t\t \"-fno-align-commons\", (int)offset,\n+\t\t\t\t s->sym->name, &common->where);\n+\t\t}\n \t    }\n \t  else\n \t    {\n@@ -1138,10 +1151,16 @@ translate_common (gfc_common_head *common, gfc_symbol *var_list)\n       return;\n     }\n \n-  if (common_segment->offset != 0)\n+  if (common_segment->offset != 0 && gfc_option.warn_align_commons)\n     {\n-      gfc_warning (\"COMMON '%s' at %L requires %d bytes of padding at start\",\n-\t\t   common->name, &common->where, (int)common_segment->offset);\n+      if (strcmp (common->name, BLANK_COMMON_NAME))\n+\tgfc_warning (\"COMMON '%s' at %L requires %d bytes of padding at start; \"\n+\t\t     \"reorder elements or use -fno-align-commons\",\n+\t\t     common->name, &common->where, (int)common_segment->offset);\n+      else\n+\tgfc_warning (\"COMMON at %L requires %d bytes of padding at start; \"\n+\t\t     \"reorder elements or use -fno-align-commons\",\n+\t\t     &common->where, (int)common_segment->offset);\n     }\n \n   create_common (common, common_segment, saw_equiv);\n@@ -1225,14 +1244,7 @@ gfc_trans_common (gfc_namespace *ns)\n   if (ns->blank_common.head != NULL)\n     {\n       c = gfc_get_common_head ();\n-\n-      /* We've lost the real location, so use the location of the\n-\t enclosing procedure.  */\n-      if (ns->proc_name != NULL)\n-\tc->where = ns->proc_name->declared_at;\n-      else\n-\tc->where = ns->blank_common.head->common_head->where;\n-\n+      c->where = ns->blank_common.head->common_head->where;\n       strcpy (c->name, BLANK_COMMON_NAME);\n       translate_common (c, ns->blank_common.head);\n     }"}, {"sha": "9029ec549ab7fc1acfdc63a359277fccc5d46cd5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -1,3 +1,9 @@\n+2008-09-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/37486\n+\t* gfortran.dg/common_align_1.f90: New.\n+\t* gfortran.dg/warn_align_commons.f90: New.\n+\n 2008-09-22  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/volatile3.adb: New test."}, {"sha": "4a6803e961b07368efe92192b8f2b0d45f70b087", "filename": "gcc/testsuite/gfortran.dg/common_align_1.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_align_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_align_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_align_1.f90?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! { dg-options \"-fno-align-commons\" }\n+\n+! PR fortran/37486\n+!\n+! Test for -fno-align-commons.\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>.\n+\n+subroutine one()\n+  integer :: i\n+  common i\n+  if (i/=5) call abort()\n+end subroutine one\n+\n+program test\n+integer :: i\n+real(8) :: r8\n+common i, r8 \n+i = 5\n+call one()\n+end program test"}, {"sha": "d20b710219ef5f250198e6737b177e28ea3ab611", "filename": "gcc/testsuite/gfortran.dg/warn_align_commons.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_align_commons.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f613cea7fc41d8133a083ced6cc0a11b9312f110/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_align_commons.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_align_commons.f90?ref=f613cea7fc41d8133a083ced6cc0a11b9312f110", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! { dg-options \"-Wno-align-commons\" }\n+\n+! PR fortran/37486\n+!\n+! Test for -Wno-align-commons.\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>.\n+\n+implicit none\n+integer(kind=4) :: n\n+real(kind=8) :: p\n+common /foo/ n,p   ! { dg-bogus \"padding\" }\n+end  "}]}