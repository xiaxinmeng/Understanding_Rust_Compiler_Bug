{"sha": "965a7e9092ffbec64865a95b016f731782d4b965", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY1YTdlOTA5MmZmYmVjNjQ4NjVhOTViMDE2ZjczMTc4MmQ0Yjk2NQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-10-30T02:48:49Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-10-30T02:48:49Z"}, "message": "darwin.h (ASM_SPEC): Simplify.\n\n\t* config/i386/darwin.h (ASM_SPEC): Simplify.\n\t(SUBTARGET_EXTRA_SPECS): Add darwin_subarch spec.\n\t* config/rs6000/darwin.h (DARWIN_SUBARCH_SPEC): New.\n\t(SUBTARGET_EXTRA_SPECS): Add darwin_subarch spec.\n\t* config/darwin.h (LINK_COMMAND_SPEC): Don't pass -arch here.\n\t(LINK_SPEC): Do pass -arch here.  Handle -force_cpusubtype_ALL\n\tin all cases.  Pass the right -arch or -arch_only based on -mcpu.\n\t(ASM_SPEC): Handle -force_cpusubtype_ALL.\n\t* doc/invoke.texi (Darwin Options): Improve documentation for\n\tDarwin linker (and libtool) switches.\n\nFrom-SVN: r89877", "tree": {"sha": "6ee8ec5a78d0a562957eb1e05126f0ed0dbebf70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ee8ec5a78d0a562957eb1e05126f0ed0dbebf70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/965a7e9092ffbec64865a95b016f731782d4b965", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965a7e9092ffbec64865a95b016f731782d4b965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/965a7e9092ffbec64865a95b016f731782d4b965", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965a7e9092ffbec64865a95b016f731782d4b965/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2607dde2173bca67f29425a1a9a152167896a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2607dde2173bca67f29425a1a9a152167896a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2607dde2173bca67f29425a1a9a152167896a87"}], "stats": {"total": 92, "additions": 68, "deletions": 24}, "files": [{"sha": "2dd6438805cf62b7f9639bc39e351f58377e5f69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=965a7e9092ffbec64865a95b016f731782d4b965", "patch": "@@ -43,6 +43,17 @@\n \n 2004-10-29  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* config/i386/darwin.h (ASM_SPEC): Simplify.\n+\t(SUBTARGET_EXTRA_SPECS): Add darwin_subarch spec.\n+\t* config/rs6000/darwin.h (DARWIN_SUBARCH_SPEC): New.\n+\t(SUBTARGET_EXTRA_SPECS): Add darwin_subarch spec.\n+\t* config/darwin.h (LINK_COMMAND_SPEC): Don't pass -arch here.\n+\t(LINK_SPEC): Do pass -arch here.  Handle -force_cpusubtype_ALL\n+\tin all cases.  Pass the right -arch or -arch_only based on -mcpu.\n+\t(ASM_SPEC): Handle -force_cpusubtype_ALL.\n+\t* doc/invoke.texi (Darwin Options): Improve documentation for\n+\tDarwin linker (and libtool) switches.\n+\n \t* config/rs6000/darwin-fallback.c: Include <mach/thread_status.h>.\n \n 2004-10-29  Stan Shebs  <shebs@apple.com>"}, {"sha": "83aa2ddb009f43893803d28543f58585b39b0c6c", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=965a7e9092ffbec64865a95b016f731782d4b965", "patch": "@@ -219,8 +219,6 @@ extern const char *darwin_fix_and_continue_switch;\n #define LINK_COMMAND_SPEC \"\\\n %{!fdump=*:%{!fsyntax-only:%{!precomp:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n     %{!Zdynamiclib:%(linker)}%{Zdynamiclib:/usr/bin/libtool} \\\n-    %{!Zdynamiclib:-arch %(darwin_arch)} \\\n-    %{Zdynamiclib:-arch_only %(darwin_arch)} \\\n     %l %X %{d} %{s} %{t} %{Z} \\\n     %{!Zdynamiclib:%{A} %{e*} %{m} %{N} %{n} %{r} %{u*} %{x} %{z}} \\\n     %{@:-o %f%u.out}%{!@:%{o*}%{!o:-o a.out}} \\\n@@ -240,13 +238,14 @@ extern const char *darwin_fix_and_continue_switch;\n   \"%{static}%{!static:-dynamic} \\\n    %{fgnu-runtime:%:replace-outfile(-lobjc -lobjc-gnu)}\\\n    %{!Zdynamiclib: \\\n+     %{Zforce_cpusubtype_ALL:-arch %(darwin_arch) -force_cpusubtype_ALL} \\\n+     %{!Zforce_cpusubtype_ALL:-arch %(darwin_subarch)} \\\n      %{Zbundle:-bundle} \\\n      %{Zbundle_loader*:-bundle_loader %*} \\\n      %{client_name*} \\\n      %{compatibility_version*:%e-compatibility_version only allowed with -dynamiclib\\\n } \\\n      %{current_version*:%e-current_version only allowed with -dynamiclib} \\\n-     %{Zforce_cpusubtype_ALL:-force_cpusubtype_ALL} \\\n      %{Zforce_flat_namespace:-force_flat_namespace} \\\n      %{Zinstall_name*:%e-install_name only allowed with -dynamiclib} \\\n      %{keep_private_externs} \\\n@@ -258,7 +257,8 @@ extern const char *darwin_fix_and_continue_switch;\n      %{client_name*:%e-client_name not allowed with -dynamiclib} \\\n      %{compatibility_version*} \\\n      %{current_version*} \\\n-     %{Zforce_cpusubtype_ALL:%e-force_cpusubtype_ALL not allowed with -dynamiclib} \\\n+     %{Zforce_cpusubtype_ALL:-arch_only %(darwin_arch)} \\\n+     %{!Zforce_cpusubtype_ALL: -arch_only %(darwin_subarch)} \\\n      %{Zforce_flat_namespace:%e-force_flat_namespace not allowed with -dynamiclib} \\\n      %{Zinstall_name*:-install_name %*} \\\n      %{keep_private_externs:%e-keep_private_externs not allowed with -dynamiclib} \\\n@@ -332,7 +332,8 @@ extern const char *darwin_fix_and_continue_switch;\n /* #define ENDFILE_SPEC \"\" */\n \n /* Default Darwin ASM_SPEC, very simple.  */\n-#define ASM_SPEC \"-arch %(darwin_arch)\"\n+#define ASM_SPEC \"-arch %(darwin_arch) \\\n+  %{Zforce_cpusubtype_ALL:-force_cpusubtype_ALL}\"\n \n /* We use Dbx symbol format.  */\n "}, {"sha": "d36b511819ebef0e67bd9b20a47aa4c2dc8cbe21", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=965a7e9092ffbec64865a95b016f731782d4b965", "patch": "@@ -45,16 +45,13 @@ Boston, MA 02111-1307, USA.  */\n   %{g: %{!gfull: -feliminate-unused-debug-symbols %<gfull }}\"\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"-arch i686 \\\n-  -force_cpusubtype_ALL \\\n-  %{Zforce_cpusubtype_ALL:-force_cpusubtype_ALL} \\\n-  %{!Zforce_cpusubtype_ALL:%{mmmx:-force_cpusubtype_ALL}\\\n-\t\t\t   %{msse:-force_cpusubtype_ALL}\\\n-\t\t\t   %{msse2:-force_cpusubtype_ALL}}\"\n+#define ASM_SPEC \"-arch i686 -force_cpusubtype_ALL\"\n \n #undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS\t\t\t\\\n-  { \"darwin_arch\", \"i686\" },\n+#define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\\\n+  { \"darwin_arch\", \"i686\" },\t\t\t\t\t\\\n+  { \"darwin_subarch\", \"%{march=pentium3:pentIIm3;:i686}\" },\n+   \n \n /* Use the following macro for any Darwin/x86-specific command-line option\n    translation.  */"}, {"sha": "50c7bd37535a8d1b17b070df5583cdf0ce8d5ed1", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=965a7e9092ffbec64865a95b016f731782d4b965", "patch": "@@ -132,9 +132,29 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{static: %{Zdynamic: %e conflicting code gen style switches are used}}\\\n %{!static:%{!mdynamic-no-pic:-fPIC}}\"\n \n+#define DARWIN_SUBARCH_SPEC \"\t\t\t\\\n+ %{m64: ppc64}\t\t\t\t\t\\\n+ %{!m64:\t\t\t\t\t\\\n+ %{mcpu=601:ppc601;\t\t\t\t\\\n+   mcpu=603:ppc603;\t\t\t\t\\\n+   mcpu=603e:ppc603;\t\t\t\t\\\n+   mcpu=604:ppc604;\t\t\t\t\\\n+   mcpu=604e:ppc604e;\t\t\t\t\\\n+   mcpu=740:ppc750;\t\t\t\t\\\n+   mcpu=750:ppc750;\t\t\t\t\\\n+   mcpu=G3:ppc750;\t\t\t\t\\\n+   mcpu=7400:ppc7400;\t\t\t\t\\\n+   mcpu=G4:ppc7400;\t\t\t\t\\\n+   mcpu=7450:ppc7450;\t\t\t\t\\\n+   mcpu=970:ppc970;\t\t\t\t\\\n+   mcpu=power4:ppc970;\t\t\t\t\\\n+   mcpu=G5:ppc970;\t\t\t\t\\\n+   :ppc}}\"\n+\n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\t\t\t\\\n-  { \"darwin_arch\", \"%{m64:ppc64} %{!m64:ppc}\" },\n+  { \"darwin_arch\", \"%{m64:ppc64;:ppc}\" },\t\\\n+  { \"darwin_subarch\", DARWIN_SUBARCH_SPEC },\n \n /* Output a .machine directive.  */\n #undef TARGET_ASM_FILE_START"}, {"sha": "a43fd7f270b51f5be40155e5b770a20a04f2cad3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=965a7e9092ffbec64865a95b016f731782d4b965", "patch": "@@ -7185,7 +7185,17 @@ Like @option{-sim}, but pass linker options to locate initialized data at\n @cindex Darwin options\n \n These options are defined for all architectures running the Darwin operating\n-system.  They are useful for compatibility with other Mac OS compilers.\n+system.\n+\n+FSF GCC on Darwin does not create ``fat'' object files; it will create\n+an object file for the single architecture that it was built to\n+target.  Apple's GCC on Darwin does create ``fat'' files if multiple\n+@option{-arch} options are used.\n+\n+The subtype of the file created (@var{ppc7400} or @var{ppc970} or\n+@var{i686}) is determined by the flag that specifies the ISA\n+that GCC is targetting, @option{-mcpu} or @option{-march}.  The\n+@option{-force_cpusubtype_ALL} option can be used to override this.\n \n @table @gcctabopt\n @item -F@var{dir}\n@@ -7272,12 +7282,20 @@ See man ld(1) for more information.\n \n @item -bundle_loader @var{executable}\n @opindex bundle_loader\n-This specifies the @var{executable} that will be loading the build\n+This option specifies the @var{executable} that will be loading the build\n output file being linked. See man ld(1) for more information.\n \n-@item -allowable_client  @var{client_name}\n-@itemx -arch_only\n+@item -dynamiclib\n+@opindex -dynamiclib\n+When passed this option, GCC will produce a dynamic library instead of\n+an executable when linking, using the Darwin @file{libtool} command.\n \n+@item -force_cpusubtype_ALL\n+@opindex -force_cpusubtype_ALL\n+This causes GCC's output file to have the @var{ALL} subtype, instead of\n+one controlled by the @option{-mcpu} or @option{-march} option.\n+\n+@item -allowable_client  @var{client_name}\n @itemx -client_name\n @itemx -compatibility_version\n @itemx -current_version\n@@ -7286,11 +7304,9 @@ output file being linked. See man ld(1) for more information.\n @itemx -dylib_file\n @itemx -dylinker_install_name\n @itemx -dynamic\n-@itemx -dynamiclib\n @itemx -exported_symbols_list\n @itemx -filelist\n @itemx -flat_namespace\n-@itemx -force_cpusubtype_ALL\n @itemx -force_flat_namespace\n @itemx -headerpad_max_install_names\n @itemx -image_base\n@@ -7339,7 +7355,6 @@ output file being linked. See man ld(1) for more information.\n @itemx -whatsloaded\n \n @opindex allowable_client\n-@opindex arch_only\n @opindex client_name\n @opindex compatibility_version\n @opindex current_version\n@@ -7348,11 +7363,9 @@ output file being linked. See man ld(1) for more information.\n @opindex dylib_file\n @opindex dylinker_install_name\n @opindex dynamic\n-@opindex dynamiclib\n @opindex exported_symbols_list\n @opindex filelist\n @opindex flat_namespace\n-@opindex force_cpusubtype_ALL\n @opindex force_flat_namespace\n @opindex headerpad_max_install_names\n @opindex image_base\n@@ -7400,7 +7413,7 @@ output file being linked. See man ld(1) for more information.\n @opindex weak_reference_mismatches\n @opindex whatsloaded\n \n-These options are available for Darwin linker. Darwin linker man page\n+These options are passed to the Darwin linker.  The Darwin linker man page\n describes them in detail.\n @end table\n "}, {"sha": "78e2a43e9df7c7405bcca3f2fe0259030333042b", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965a7e9092ffbec64865a95b016f731782d4b965/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=965a7e9092ffbec64865a95b016f731782d4b965", "patch": "@@ -1623,6 +1623,8 @@ add_call_read_ops (tree stmt)\n {\n   bitmap_iterator bi;\n \n+  bi.ptr2 = NULL;\n+\n   /* Otherwise, if the function is not pure, it may reference memory.  Add\n      a VUSE for .GLOBAL_VAR if it has been created.  Otherwise, add a VUSE\n      for each call-clobbered variable.  See add_referenced_var for the"}]}