{"sha": "6e1b3a7c949003ce1051d5bff4d162a80b418122", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUxYjNhN2M5NDkwMDNjZTEwNTFkNWJmZjRkMTYyYTgwYjQxODEyMg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-03-03T05:31:32Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-03-03T05:31:32Z"}, "message": "decl.c (check_initializer): Check for vector_opaque_p.\n\n2003-03-02  Aldy Hernandez  <aldyh@redhat.com>\n\n        * cp/decl.c (check_initializer): Check for vector_opaque_p.\n\nFrom-SVN: r63713", "tree": {"sha": "cf87ac9cea0213b0b6a32b6c89e566e814dab2f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf87ac9cea0213b0b6a32b6c89e566e814dab2f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e1b3a7c949003ce1051d5bff4d162a80b418122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1b3a7c949003ce1051d5bff4d162a80b418122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1b3a7c949003ce1051d5bff4d162a80b418122", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1b3a7c949003ce1051d5bff4d162a80b418122/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90d86c43f3c5234f67d7c2303ba183dd90f9b410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d86c43f3c5234f67d7c2303ba183dd90f9b410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d86c43f3c5234f67d7c2303ba183dd90f9b410"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "f9fb1f50d02b9e91e45d53ff3cfde0063821c94b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1b3a7c949003ce1051d5bff4d162a80b418122/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1b3a7c949003ce1051d5bff4d162a80b418122/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6e1b3a7c949003ce1051d5bff4d162a80b418122", "patch": "@@ -1,3 +1,7 @@\n+2003-03-02  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * decl.c (check_initializer): Check for vector_opaque_p.\n+\n 2003-03-02  Ashif Harji  <asharji@uwaterloo.ca>\n \n \t* lang-specs.h (default_compilers): Add -no-integrated-cpp flag to"}, {"sha": "216d7fef36f64e58225d91615dea2561d4b73aab", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e1b3a7c949003ce1051d5bff4d162a80b418122/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e1b3a7c949003ce1051d5bff4d162a80b418122/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6e1b3a7c949003ce1051d5bff4d162a80b418122", "patch": "@@ -7772,6 +7772,12 @@ check_initializer (tree decl, tree init, int flags)\n \t     scalar, so just don't call it.  */\n \t  if (CP_AGGREGATE_TYPE_P (type))\n \t    init = reshape_init (type, &init);\n+\n+\t  if ((*targetm.vector_opaque_p) (type))\n+\t    {\n+\t      error (\"opaque vector types cannot be initialized\");\n+\t      init = error_mark_node;\n+\t    }\n \t}\n \n       /* If DECL has an array type without a specific bound, deduce the"}]}