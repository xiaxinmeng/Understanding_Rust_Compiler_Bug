{"sha": "91b01194c9d1ecdf3c29afbfe1ee2201fb265e92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFiMDExOTRjOWQxZWNkZjNjMjlhZmJmZTFlZTIyMDFmYjI2NWU5Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-09T16:51:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-09T16:51:10Z"}, "message": "runtime: skip testSetPanicOnFault for gollvm\n    \n    LLVM doesn't support non-call exception. This test was passing\n    more or less by luck: if the faulting instruction is between two\n    calls with the same landing pad (in instruction layout order,\n    not the program's logic order), it generates a merged PC range\n    that covers the faulting instruction. If the instruction layout\n    order changes, or it uses two different (but may be degenerate)\n    landing pads, this doesn't work.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/140517\n\nFrom-SVN: r264985", "tree": {"sha": "759488d751d256a06340903250d6162f32cfc3d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/759488d751d256a06340903250d6162f32cfc3d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91b01194c9d1ecdf3c29afbfe1ee2201fb265e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91b01194c9d1ecdf3c29afbfe1ee2201fb265e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91b01194c9d1ecdf3c29afbfe1ee2201fb265e92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91b01194c9d1ecdf3c29afbfe1ee2201fb265e92/comments", "author": null, "committer": null, "parents": [{"sha": "c743425fce5517242dd67761fea298cd3459b4cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c743425fce5517242dd67761fea298cd3459b4cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c743425fce5517242dd67761fea298cd3459b4cc"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "76689a3b50ae063e4c46c1f506367992690913a1", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b01194c9d1ecdf3c29afbfe1ee2201fb265e92/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b01194c9d1ecdf3c29afbfe1ee2201fb265e92/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=91b01194c9d1ecdf3c29afbfe1ee2201fb265e92", "patch": "@@ -1,4 +1,4 @@\n-a9da4d34a2f878a5058f7e7d2beef52aa62471a1\n+e32e9aaee598eeb43f9616cf6ca1d11acaa9d167\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "222679e048d847b073168489d65f3afeeeaa25e6", "filename": "libgo/go/runtime/runtime_test.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91b01194c9d1ecdf3c29afbfe1ee2201fb265e92/libgo%2Fgo%2Fruntime%2Fruntime_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91b01194c9d1ecdf3c29afbfe1ee2201fb265e92/libgo%2Fgo%2Fruntime%2Fruntime_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fruntime_test.go?ref=91b01194c9d1ecdf3c29afbfe1ee2201fb265e92", "patch": "@@ -166,6 +166,9 @@ func TestSetPanicOnFault(t *testing.T) {\n }\n \n func testSetPanicOnFault(t *testing.T, addr uintptr, nfault *int) {\n+\tif strings.Contains(Version(), \"llvm\") {\n+\t\tt.Skip(\"LLVM doesn't support non-call exception\")\n+\t}\n \tif GOOS == \"nacl\" {\n \t\tt.Skip(\"nacl doesn't seem to fault on high addresses\")\n \t}"}]}