{"sha": "843e83356cffe3b25ef5ba53d9e86a2c130b80f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQzZTgzMzU2Y2ZmZTNiMjVlZjViYTUzZDllODZhMmMxMzBiODBmNQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-08-16T00:52:06Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-08-16T00:52:06Z"}, "message": "libgcc2.c (__throw): New routine.\n\n        * libgcc2.c (__throw): New routine.\n        (__eh_pc): New data object for exception handling.\n\n        * except.c (eh_saved_pc): New object so we can call\n        assemble_external.\n        (expand_internal_throw_indirect): Call assemble_external for\n        __eh_pc.\n        (end_eh_unwinder): Ditto.\n        (init_eh): Initialize eh_saved_pc.\nfixes eh6.C on rs6000 and alpha\n\nFrom-SVN: r12646", "tree": {"sha": "dfa01fe78a9a498d98e86d5a2245aefbc71811b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfa01fe78a9a498d98e86d5a2245aefbc71811b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/843e83356cffe3b25ef5ba53d9e86a2c130b80f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843e83356cffe3b25ef5ba53d9e86a2c130b80f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/843e83356cffe3b25ef5ba53d9e86a2c130b80f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843e83356cffe3b25ef5ba53d9e86a2c130b80f5/comments", "author": null, "committer": null, "parents": [{"sha": "6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "48b635b5ad225ecc915df0a2de3bc979c512e404", "filename": "gcc/except.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843e83356cffe3b25ef5ba53d9e86a2c130b80f5/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843e83356cffe3b25ef5ba53d9e86a2c130b80f5/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=843e83356cffe3b25ef5ba53d9e86a2c130b80f5", "patch": "@@ -165,9 +165,10 @@ struct label_node *caught_return_label_stack = NULL;\n \n struct label_node *false_label_stack = NULL;\n \n-/* The rtx for the saved PC value.  */\n+/* The rtx and the tree for the saved PC value.  */\n \n rtx eh_saved_pc_rtx;\n+tree eh_saved_pc;\n \n rtx expand_builtin_return_addr\tPROTO((enum built_in_function, int, rtx));\n \f\n@@ -450,6 +451,7 @@ void\n expand_internal_throw_indirect (context)\n      rtx context;\n {\n+  assemble_external (eh_saved_pc);\n   emit_move_insn (eh_saved_pc_rtx, context);\n   emit_throw ();\n }\n@@ -759,6 +761,8 @@ end_eh_unwinder ()\n     return;\n #endif\n \n+  assemble_external (eh_saved_pc);\n+\n   expr = make_node (RTL_EXPR);\n   TREE_TYPE (expr) = void_type_node;\n   RTL_EXPR_RTL (expr) = const0_rtx;\n@@ -955,8 +959,13 @@ check_exception_handler_labels ()\n void\n init_eh ()\n {\n-  eh_saved_pc_rtx = gen_rtx (MEM, ptr_mode,\n-\t\t\t     gen_rtx (SYMBOL_REF, Pmode, \"__eh_pc\"));\n+  tree type = build_pointer_type (make_node (VOID_TYPE));\n+\n+  eh_saved_pc = build_decl (VAR_DECL, get_identifier (\"__eh_pc\"), type);\n+  DECL_EXTERNAL (eh_saved_pc) = 1;\n+  TREE_PUBLIC (eh_saved_pc) = 1;\n+  make_decl_rtl (eh_saved_pc, NULL_PTR, 1);\n+  eh_saved_pc_rtx = DECL_RTL (eh_saved_pc);\n }\n \n /* Initialize various EH things.  */"}, {"sha": "1b1ecf48916eaf1229e3df8f6b247579e28dcc07", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/843e83356cffe3b25ef5ba53d9e86a2c130b80f5/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/843e83356cffe3b25ef5ba53d9e86a2c130b80f5/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=843e83356cffe3b25ef5ba53d9e86a2c130b80f5", "patch": "@@ -3149,6 +3149,21 @@ __throw_type_match (void *catch_type, void *throw_type, void *obj)\n  return 0;\n }\n \n+/* Throw stub routine.\n+\n+   This is work in progress, but not completed yet.  */\n+\n+void\n+__throw ()\n+{\n+  abort ();\n+}\n+\n+/* This value identifies the place from which an exception is being\n+   thrown.  */\n+\n+void *__eh_pc;\n+\n void\n __empty ()\n {"}]}