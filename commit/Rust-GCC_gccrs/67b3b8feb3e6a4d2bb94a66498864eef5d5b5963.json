{"sha": "67b3b8feb3e6a4d2bb94a66498864eef5d5b5963", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdiM2I4ZmViM2U2YTRkMmJiOTRhNjY0OTg4NjRlZWY1ZDViNTk2Mw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-21T13:53:30Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-21T13:53:30Z"}, "message": "IPA summaries use ::get in ipa-pure-const.c.\n\n2018-06-21  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-pure-const.c (propagate_nothrow): Use\n        funct_state_summaries->get.\n\t(dump_malloc_lattice): Likewise.\n\t(propagate_malloc): Likewise.\n\nFrom-SVN: r261848", "tree": {"sha": "77f5528ae0bfc881160b2af7a9aa35ad5eeaf385", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77f5528ae0bfc881160b2af7a9aa35ad5eeaf385"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67b3b8feb3e6a4d2bb94a66498864eef5d5b5963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b3b8feb3e6a4d2bb94a66498864eef5d5b5963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b3b8feb3e6a4d2bb94a66498864eef5d5b5963", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b3b8feb3e6a4d2bb94a66498864eef5d5b5963/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5fe239ec90095b885aef70a8058fdfc03a74340", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5fe239ec90095b885aef70a8058fdfc03a74340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5fe239ec90095b885aef70a8058fdfc03a74340"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "16ae0e7723907884293829b0173fe259e9965a22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b3b8feb3e6a4d2bb94a66498864eef5d5b5963/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b3b8feb3e6a4d2bb94a66498864eef5d5b5963/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67b3b8feb3e6a4d2bb94a66498864eef5d5b5963", "patch": "@@ -1,3 +1,10 @@\n+2018-06-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-pure-const.c (propagate_nothrow): Use\n+        funct_state_summaries->get.\n+\t(dump_malloc_lattice): Likewise.\n+\t(propagate_malloc): Likewise.\n+\n 2018-06-21  Richard Biener  <rguenther@suse.de>\n \n \t* lto-streamer-out.c (DFS::DFS_write_tree_body): Update outdated"}, {"sha": "714239f8734494d035c01305665a89a8fb47a123", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b3b8feb3e6a4d2bb94a66498864eef5d5b5963/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b3b8feb3e6a4d2bb94a66498864eef5d5b5963/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=67b3b8feb3e6a4d2bb94a66498864eef5d5b5963", "patch": "@@ -1803,7 +1803,7 @@ propagate_nothrow (void)\n       w = node;\n       while (w)\n \t{\n-\t  funct_state w_l = funct_state_summaries->get_create (w);\n+\t  funct_state w_l = funct_state_summaries->get (w);\n \t  if (!can_throw && !TREE_NOTHROW (w->decl))\n \t    {\n \t      /* Inline clones share declaration with their offline copies;\n@@ -1841,9 +1841,10 @@ dump_malloc_lattice (FILE *dump_file, const char *s)\n   cgraph_node *node;\n   FOR_EACH_FUNCTION (node)\n     {\n-      funct_state fs = funct_state_summaries->get_create (node);\n-      malloc_state_e state = fs->malloc_state;\n-      fprintf (dump_file, \"%s: %s\\n\", node->name (), malloc_state_names[state]);\n+      funct_state fs = funct_state_summaries->get (node);\n+      if (fs)\n+\tfprintf (dump_file, \"%s: %s\\n\", node->name (),\n+\t\t malloc_state_names[fs->malloc_state]);\n     }\n }\n \n@@ -1881,7 +1882,7 @@ propagate_malloc (void)\n \t      || !funct_state_summaries->exists (node))\n \t    continue;\n \n-\t  funct_state l = funct_state_summaries->get_create (node);\n+\t  funct_state l = funct_state_summaries->get (node);\n \n \t  /* FIXME: add support for indirect-calls.  */\n \t  if (node->indirect_calls)\n@@ -1932,7 +1933,7 @@ propagate_malloc (void)\n   FOR_EACH_DEFINED_FUNCTION (node)\n     if (funct_state_summaries->exists (node))\n       {\n-\tfunct_state l = funct_state_summaries->get_create (node);\n+\tfunct_state l = funct_state_summaries->get (node);\n \tif (!node->alias\n \t    && l->malloc_state == STATE_MALLOC\n \t    && !node->global.inlined_to)"}]}