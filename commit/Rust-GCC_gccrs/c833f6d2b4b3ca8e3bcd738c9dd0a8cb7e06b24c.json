{"sha": "c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzM2Y2ZDJiNGIzY2E4ZTNiY2Q3MzhjOWRkMGE4Y2I3ZTA2YjI0Yw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-14T22:40:00Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-14T22:40:00Z"}, "message": "re PR fortran/33073 (Type mismatch in build_fixbound_expr())\n\n\tPR fortran/33073\n\t* trans-intrinsic.c (build_fixbound_expr): Convert to result type\n\tin all cases.\n\nFrom-SVN: r127494", "tree": {"sha": "36776424855ec9576ab6dab79336ed8fe3a1733e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36776424855ec9576ab6dab79336ed8fe3a1733e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa3546f12eff8fd7db529ecc3c42666c8c8218cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa3546f12eff8fd7db529ecc3c42666c8c8218cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa3546f12eff8fd7db529ecc3c42666c8c8218cd"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "7eef7f9a1c043f3065bdb389c88caf9a9f3382a6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c", "patch": "@@ -1,3 +1,9 @@\n+2007-08-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/33073\n+\t* trans-intrinsic.c (build_fixbound_expr): Convert to result type\n+\tin all cases.\n+\n 2007-08-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/32594"}, {"sha": "2e8b8a010ac49774e37d2ef4f85d069e47fd8eb8", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=c833f6d2b4b3ca8e3bcd738c9dd0a8cb7e06b24c", "patch": "@@ -314,10 +314,9 @@ build_fixbound_expr (stmtblock_t * pblock, tree arg, tree type, int up)\n static tree\n build_round_expr (tree arg, tree restype)\n {\n-  tree tmp;\n   tree argtype;\n   tree fn;\n-  bool longlong, convert;\n+  bool longlong;\n   int argprec, resprec;\n \n   argtype = TREE_TYPE (arg);\n@@ -328,21 +327,9 @@ build_round_expr (tree arg, tree restype)\n      (lround family) or long long intrinsic (llround).  We might also\n      need to convert the result afterwards.  */\n   if (resprec <= LONG_TYPE_SIZE)\n-    {\n-      longlong = false;\n-      if (resprec != LONG_TYPE_SIZE)\n-\tconvert = true;\n-      else\n-\tconvert = false;\n-    }\n+    longlong = false;\n   else if (resprec <= LONG_LONG_TYPE_SIZE)\n-    {\n-      longlong = true;\n-      if (resprec != LONG_LONG_TYPE_SIZE)\n-\tconvert = true;\n-      else\n-\tconvert = false;\n-    }\n+    longlong = true;\n   else\n     gcc_unreachable ();\n \n@@ -356,10 +343,7 @@ build_round_expr (tree arg, tree restype)\n   else\n     gcc_unreachable ();\n \n-  tmp = build_call_expr (fn, 1, arg);\n-  if (convert)\n-    tmp = fold_convert (restype, tmp);\n-  return tmp;\n+  return fold_convert (restype, build_call_expr (fn, 1, arg));\n }\n \n "}]}