{"sha": "52a39a4c5db03b2e614f4bde1632e025348d1ebe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJhMzlhNGM1ZGIwM2IyZTYxNGY0YmRlMTYzMmUwMjUzNDhkMWViZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2007-06-12T16:28:01Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2007-06-12T16:28:01Z"}, "message": "fold-const.c (fold_binary): Guard (X-X) -> 0 transformation with !HONOR_NANS and !HONOR_INFINITIES.\n\n\t* fold-const.c (fold_binary): Guard (X-X) -> 0 transformation\n\twith !HONOR_NANS and !HONOR_INFINITIES.\n\t* simplify-rtx.c (simplify_binary_operation_1): Likewise.\n\nFrom-SVN: r125652", "tree": {"sha": "b55b0e708825d64adcda26d97ed19745dc046ede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b55b0e708825d64adcda26d97ed19745dc046ede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52a39a4c5db03b2e614f4bde1632e025348d1ebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a39a4c5db03b2e614f4bde1632e025348d1ebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a39a4c5db03b2e614f4bde1632e025348d1ebe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a39a4c5db03b2e614f4bde1632e025348d1ebe/comments", "author": null, "committer": null, "parents": [{"sha": "1c2abe5e5ca716e91b6c6befc9551c48c03a10ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2abe5e5ca716e91b6c6befc9551c48c03a10ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c2abe5e5ca716e91b6c6befc9551c48c03a10ff"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "616bc5097e97e3bb504e606fd0633e874a50f9c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a39a4c5db03b2e614f4bde1632e025348d1ebe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a39a4c5db03b2e614f4bde1632e025348d1ebe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52a39a4c5db03b2e614f4bde1632e025348d1ebe", "patch": "@@ -1,3 +1,9 @@\n+2007-06-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* fold-const.c (fold_binary): Guard (X-X) -> 0 transformation\n+\twith !HONOR_NANS and !HONOR_INFINITIES.\n+\t* simplify-rtx.c (simplify_binary_operation_1): Likewise.\n+\n 2007-06-12  Tristan Gingold  <gingold@adacore.com>\n \n \t* gcov.c: Comments updated."}, {"sha": "814d033ffc4ffa319d7493718b0d8f0e646758d1", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a39a4c5db03b2e614f4bde1632e025348d1ebe/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a39a4c5db03b2e614f4bde1632e025348d1ebe/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=52a39a4c5db03b2e614f4bde1632e025348d1ebe", "patch": "@@ -9585,7 +9585,10 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t Also note that operand_equal_p is always false if an operand\n \t is volatile.  */\n \n-      if ((! FLOAT_TYPE_P (type) || flag_unsafe_math_optimizations)\n+      if ((! FLOAT_TYPE_P (type)\n+\t   || (flag_unsafe_math_optimizations\n+\t       && !HONOR_NANS (TYPE_MODE (type))\n+\t       && !HONOR_INFINITIES (TYPE_MODE (type))))\n \t  && operand_equal_p (arg0, arg1, 0))\n \treturn fold_convert (type, integer_zero_node);\n "}, {"sha": "ade3968d0e68a1e35511ded5b58c8c1ada9fa2d8", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52a39a4c5db03b2e614f4bde1632e025348d1ebe/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52a39a4c5db03b2e614f4bde1632e025348d1ebe/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=52a39a4c5db03b2e614f4bde1632e025348d1ebe", "patch": "@@ -1772,10 +1772,14 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n     case MINUS:\n       /* We can't assume x-x is 0 even with non-IEEE floating point,\n \t but since it is zero except in very strange circumstances, we\n-\t will treat it as zero with -funsafe-math-optimizations.  */\n+\t will treat it as zero with -funsafe-math-optimizations and\n+\t -ffinite-math-only.  */\n       if (rtx_equal_p (trueop0, trueop1)\n \t  && ! side_effects_p (op0)\n-\t  && (! FLOAT_MODE_P (mode) || flag_unsafe_math_optimizations))\n+\t  && (! FLOAT_MODE_P (mode)\n+\t      || (flag_unsafe_math_optimizations\n+\t\t  && !HONOR_NANS (mode)\n+\t\t  && !HONOR_INFINITIES (mode))))\n \treturn CONST0_RTX (mode);\n \n       /* Change subtraction from zero into negation.  (0 - x) is the"}]}