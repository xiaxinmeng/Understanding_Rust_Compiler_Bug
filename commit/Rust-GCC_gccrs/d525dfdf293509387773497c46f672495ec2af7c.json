{"sha": "d525dfdf293509387773497c46f672495ec2af7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUyNWRmZGYyOTM1MDkzODc3NzM0OTdjNDZmNjcyNDk1ZWMyYWY3Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-12-01T23:48:05Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-12-01T23:48:05Z"}, "message": "i386.md (addsi3_cc): Add \"binary_operator_ok\" to the condition.\n\n\t* i386.md (addsi3_cc): Add \"binary_operator_ok\" to the condition.\n\t(addsi3_carry): Likewise.\n\t(sbbsi3_cc): Add \"binary_operator_ok\" to the condition.\n\t(sbbsi3_carry): Likewise.\n\t(mulsi3): Rewrite to expander, ensure that only one operand is memory.\n\t(mulhi3): Likewise.\n\t(test?i_1): Ensure that only one operand is memory.\n\t(conditional move patterns): likewise.\n\t(shift and rotate patterns): Rewrite to expander, add\n\t\"binary_operator_ok\" to the condition.\n\nFrom-SVN: r30747", "tree": {"sha": "a4af0dce87b50365a824ac4ff99508fe2ccd8da4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4af0dce87b50365a824ac4ff99508fe2ccd8da4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d525dfdf293509387773497c46f672495ec2af7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d525dfdf293509387773497c46f672495ec2af7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d525dfdf293509387773497c46f672495ec2af7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d525dfdf293509387773497c46f672495ec2af7c/comments", "author": null, "committer": null, "parents": [{"sha": "7c6b971dcce2406407fb7e6308a687dccf417198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c6b971dcce2406407fb7e6308a687dccf417198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c6b971dcce2406407fb7e6308a687dccf417198"}], "stats": {"total": 276, "additions": 214, "deletions": 62}, "files": [{"sha": "5e8f864c8e404c1a712a434bb1708422e99e30b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d525dfdf293509387773497c46f672495ec2af7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d525dfdf293509387773497c46f672495ec2af7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d525dfdf293509387773497c46f672495ec2af7c", "patch": "@@ -1,5 +1,16 @@\n Fri Nov 26 10:59:12 CET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n \n+\t* i386.md (addsi3_cc): Add \"binary_operator_ok\" to the condition.\n+\t(addsi3_carry): Likewise.\n+\t(sbbsi3_cc): Add \"binary_operator_ok\" to the condition.\n+\t(sbbsi3_carry): Likewise.\n+\t(mulsi3): Rewrite to expander, ensure that only one operand is memory.\n+\t(mulhi3): Likewise.\n+\t(test?i_1): Ensure that only one operand is memory.\n+\t(conditional move patterns): likewise.\n+\t(shift and rotate patterns): Rewrite to expander, add\n+\t\"binary_operator_ok\" to the condition.\n+\n \t* i386.md (QImode patterns): Remove '*' before the 'r' constraints.\n \t* i386.h (procesor_costs): Add movzbl_load field.\n \t(HARD_REGNO_MODE_OK): Accept QImode on non PARTIAL_REGISTER_STALL in"}, {"sha": "e1b0a16680f7fbc1ab6793de70fd5c3da3ce7c60", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 203, "deletions": 62, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d525dfdf293509387773497c46f672495ec2af7c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d525dfdf293509387773497c46f672495ec2af7c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d525dfdf293509387773497c46f672495ec2af7c", "patch": "@@ -3012,7 +3012,7 @@\n \t\t    (match_operand:SI 2 \"general_operand\" \"ri,rm\")))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (PLUS, SImode, operands)\"\n   \"add{l}\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"alu\")])\n \n@@ -3022,7 +3022,7 @@\n \t    (plus:SI (match_operand:SI 2 \"general_operand\" \"ri,rm\")\n \t      (ltu:SI (reg:CC 17) (const_int 0)))))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (PLUS, SImode, operands)\"\n   \"adc{l}\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"pent_pair\" \"pu\")\n@@ -3526,7 +3526,7 @@\n \t\t\t      (match_operand:SI 2 \"general_operand\" \"ri,rm\")))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (MINUS, SImode, operands)\"\n   \"sub{l}\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"alu\")])\n \n@@ -3536,7 +3536,7 @@\n \t    (plus:SI (match_operand:SI 2 \"general_operand\" \"ri,rm\")\n \t      (ltu:SI (reg:CC 17) (const_int 0)))))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (MINUS, SImode, operands)\"\n   \"sbb{l}\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"pent_pair\" \"pu\")\n@@ -3690,12 +3690,20 @@\n \f\n ;; Multiply instructions\n \n-(define_insn \"mulsi3\"\n+(define_expand \"mulsi3\"\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t   (mult:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t    (match_operand:SI 2 \"general_operand\" \"\")))\n+\t      (clobber (reg:CC 17))])]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"*mulsi3_1\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r\")\n \t(mult:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%rm,0,0\")\n \t\t (match_operand:SI 2 \"general_operand\" \"K,i,mr\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"GET_CODE (operands[1]) != MEM || GET_CODE (operands[2]) != MEM\"\n   ; For the {r,0,i} alternative (i.e., register <- register * immediate),\n   ; there are two ways of writing the exact same machine instruction\n   ; in assembly language.  One, for example, is:\n@@ -3715,12 +3723,20 @@\n   [(set_attr \"type\" \"imul\")\n    (set_attr \"length\" \"2,3,2\")])\n \n-(define_insn \"mulhi3\"\n+(define_expand \"mulhi3\"\n+  [(parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t   (mult:HI (match_operand:HI 1 \"register_operand\" \"\")\n+\t\t\t    (match_operand:HI 2 \"general_operand\" \"\")))\n+\t      (clobber (reg:CC 17))])]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"*mulhi3_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n \t(mult:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%rm,0\")\n \t\t (match_operand:HI 2 \"general_operand\" \"K,g\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"GET_CODE (operands[1]) != MEM || GET_CODE (operands[2]) != MEM\"\n   ; %%% There was a note about \"Assembler has weird restrictions\",\n   ; concerning alternative 1 when op1 == op0.  True?\n   \"@\n@@ -4057,7 +4073,7 @@\n \t(compare:CCNO (and:SI (match_operand:SI 0 \"nonimmediate_operand\" \"%*a,r,rm\")\n \t\t\t      (match_operand:SI 1 \"general_operand\" \"in,in,rin\"))\n \t\t      (const_int 0)))]\n-  \"\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n   \"test{l}\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"icmp\")\n    (set_attr \"pent_pair\" \"uv,np,uv\")])\n@@ -4067,7 +4083,7 @@\n         (compare:CCNO (and:HI (match_operand:HI 0 \"nonimmediate_operand\" \"%*a,r,rm\")\n \t\t\t      (match_operand:HI 1 \"general_operand\" \"n,n,rn\"))\n \t\t      (const_int 0)))]\n-  \"\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n   \"test{w}\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"icmp\")\n    (set_attr \"pent_pair\" \"uv,np,uv\")])\n@@ -4077,7 +4093,7 @@\n         (compare:CCNO (and:QI (match_operand:QI 0 \"nonimmediate_operand\" \"%*a,q,qm\")\n \t\t\t      (match_operand:QI 1 \"general_operand\" \"n,n,qn\"))\n \t\t      (const_int 0)))]\n-  \"\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n   \"test{b}\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"icmp\")\n    (set_attr \"pent_pair\" \"uv,np,uv\")])\n@@ -5471,12 +5487,20 @@\n   DONE;\n }\")\n \n-(define_insn \"ashlsi3\"\n+(define_expand \"ashlsi3\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(ashift:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ASHIFT, SImode, operands); DONE;\")\n+\n+(define_insn \"*ashlsi3_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(ashift:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,r\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"cI,M\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFT, SImode, operands)\"\n   \"*\n {\n   switch (get_attr_type (insn))\n@@ -5535,7 +5559,7 @@\n \t  (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm\")\n \t(ashift:SI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFT, SImode, operands)\"\n   \"*\n {\n   switch (get_attr_type (insn))\n@@ -5561,12 +5585,20 @@\n \t   ]\n \t   (const_string \"ishift\")))])\n \n-(define_insn \"ashlhi3\"\n+(define_expand \"ashlhi3\"\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(ashift:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ASHIFT, HImode, operands); DONE;\")\n+\n+(define_insn \"*ashlhi3_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm\")\n \t(ashift:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"cI\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFT, HImode, operands)\"\n   \"*\n {\n   switch (get_attr_type (insn))\n@@ -5611,7 +5643,7 @@\n \t  (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm\")\n \t(ashift:HI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFT, HImode, operands)\"\n   \"*\n {\n   switch (get_attr_type (insn))\n@@ -5637,13 +5669,21 @@\n \t   ]\n \t   (const_string \"ishift\")))])\n \n+(define_expand \"ashlqi3\"\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(ashift:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ASHIFT, QImode, operands); DONE;\")\n+\n ;; %%% Potential partial reg stall on alternative 2.  What to do?\n-(define_insn \"ashlqi3\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,*r\")\n+(define_insn \"*ashlqi3_1\"\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,r\")\n \t(ashift:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"cI,cI\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFT, QImode, operands)\"\n   \"*\n {\n   switch (get_attr_type (insn))\n@@ -5690,7 +5730,7 @@\n \t  (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm\")\n \t(ashift:QI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFT, QImode, operands)\"\n   \"*\n {\n   switch (get_attr_type (insn))\n@@ -5821,19 +5861,28 @@\n \t(ashiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"*a,0\")\n \t\t     (match_operand:SI 2 \"const_int_operand\" \"i,i\")))\n    (clobber (reg:CC 17))]\n-  \"INTVAL (operands[2]) == 31 && (TARGET_USE_CLTD || optimize_size)\"\n+  \"INTVAL (operands[2]) == 31 && (TARGET_USE_CLTD || optimize_size)\n+   && ix86_binary_operator_ok (ASHIFTRT, SImode, operands)\"\n   \"@\n    {cltd|cdq}\n    sar{l}\\\\t{%2, %0|%0, %2}\"\n    [(set_attr \"type\" \"imovx,ishift\")\n     (set_attr \"length\" \"1,*\")])\n \n-(define_insn \"ashrsi3\"\n+(define_expand \"ashrsi3\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ASHIFTRT, SImode, operands); DONE;\")\n+\n+(define_insn \"*ashrsi3_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(ashiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFTRT, SImode, operands)\"\n   \"@\n    sar{l}\\\\t{%2, %0|%0, %2}\n    sar{l}\\\\t{%b2, %0|%0, %b2}\"\n@@ -5847,18 +5896,26 @@\n \t  (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(ashiftrt:SI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFTRT, SImode, operands)\"\n   \"@\n    sar{l}\\\\t{%2, %0|%0, %2}\n    sar{l}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"ashrhi3\"\n+(define_expand \"ashrhi3\"\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(lshiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ASHIFTRT, HImode, operands); DONE;\")\n+\n+(define_insn \"*ashrhi3_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(ashiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFTRT, HImode, operands)\"\n   \"@\n    sar{w}\\\\t{%2, %0|%0, %2}\n    sar{w}\\\\t{%b2, %0|%0, %b2}\"\n@@ -5872,18 +5929,26 @@\n \t  (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(ashiftrt:HI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFTRT, HImode, operands)\"\n   \"@\n    sar{w}\\\\t{%2, %0|%0, %2}\n    sar{w}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"ashrqi3\"\n+(define_expand \"ashrqi3\"\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(lshiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ASHIFTRT, QImode, operands); DONE;\")\n+\n+(define_insn \"*ashrqi3_1\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,qm\")\n \t(ashiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFTRT, QImode, operands)\"\n   \"@\n    sar{b}\\\\t{%2, %0|%0, %2}\n    sar{b}\\\\t{%b2, %0|%0, %b2}\"\n@@ -5897,7 +5962,7 @@\n \t  (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(ashiftrt:QI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ASHIFTRT, QImode, operands)\"\n   \"@\n    sar{b}\\\\t{%2, %0|%0, %2}\n    sar{b}\\\\t{%b2, %0|%0, %b2}\"\n@@ -5960,12 +6025,20 @@\n   [(const_int 0)]\n   \"ix86_split_lshrdi (operands, NULL_RTX); DONE;\")\n \n-(define_insn \"lshrsi3\"\n+(define_expand \"lshrsi3\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (LSHIFTRT, SImode, operands); DONE;\")\n+\n+(define_insn \"*lshrsi3_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (LSHIFTRT, HImode, operands)\"\n   \"@\n    shr{l}\\\\t{%2, %0|%0, %2}\n    shr{l}\\\\t{%b2, %0|%0, %b2}\"\n@@ -5979,18 +6052,26 @@\n \t  (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(lshiftrt:SI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (LSHIFTRT, HImode, operands)\"\n   \"@\n    shr{l}\\\\t{%2, %0|%0, %2}\n    shr{l}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"lshrhi3\"\n+(define_expand \"lshrhi3\"\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(lshiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (LSHIFTRT, HImode, operands); DONE;\")\n+\n+(define_insn \"*lshrhi3_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(lshiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (LSHIFTRT, HImode, operands)\"\n   \"@\n    shr{w}\\\\t{%2, %0|%0, %2}\n    shr{w}\\\\t{%b2, %0|%0, %b2}\"\n@@ -6004,18 +6085,26 @@\n \t  (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(lshiftrt:HI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (LSHIFTRT, HImode, operands)\"\n   \"@\n    shr{w}\\\\t{%2, %0|%0, %2}\n    shr{w}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"lshrqi3\"\n+(define_expand \"lshrqi3\"\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(lshiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (LSHIFTRT, QImode, operands); DONE;\")\n+\n+(define_insn \"*lshrqi3_1\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,qm\")\n \t(lshiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (LSHIFTRT, QImode, operands)\"\n   \"@\n    shr{b}\\\\t{%2, %0|%0, %2}\n    shr{b}\\\\t{%b2, %0|%0, %b2}\"\n@@ -6029,20 +6118,28 @@\n \t  (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(lshiftrt:QI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (LSHIFTRT, QImode, operands)\"\n   \"@\n    shr{b}\\\\t{%2, %0|%0, %2}\n    shr{b}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \f\n ;; Rotate instructions\n \n-(define_insn \"rotlsi3\"\n+(define_expand \"rotlsi3\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(rotate:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ROTATE, SImode, operands); DONE;\")\n+\n+(define_insn \"*rotlsi3_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotate:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATE, SImode, operands)\"\n   \"@\n    rol{l}\\\\t{%2, %0|%0, %2}\n    rol{l}\\\\t{%b2, %0|%0, %b2}\"\n@@ -6056,18 +6153,26 @@\n \t  (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotate:SI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATE, SImode, operands)\"\n   \"@\n    rol{l}\\\\t{%2, %0|%0, %2}\n    rol{l}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"rotlhi3\"\n+(define_expand \"rotlhi3\"\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(rotate:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ROTATE, HImode, operands); DONE;\")\n+\n+(define_insn \"*rotlhi3_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotate:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATE, HImode, operands)\"\n   \"@\n    rol{w}\\\\t{%2, %0|%0, %2}\n    rol{w}\\\\t{%b2, %0|%0, %b2}\"\n@@ -6081,18 +6186,26 @@\n \t  (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotate:HI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATE, HImode, operands)\"\n   \"@\n    rol{w}\\\\t{%2, %0|%0, %2}\n    rol{w}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"rotlqi3\"\n+(define_expand \"rotlqi3\"\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(rotate:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ROTATE, QImode, operands); DONE;\")\n+\n+(define_insn \"*rotlqi3_1\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,qm\")\n \t(rotate:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATE, QImode, operands)\"\n   \"@\n    rol{b}\\\\t{%2, %0|%0, %2}\n    rol{b}\\\\t{%b2, %0|%0, %b2}\"\n@@ -6106,18 +6219,26 @@\n \t  (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotate:QI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATE, QImode, operands)\"\n   \"@\n    rol{b}\\\\t{%2, %0|%0, %2}\n    rol{b}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"rotrsi3\"\n+(define_expand \"rotrsi3\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(rotatert:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ROTATERT, SImode, operands); DONE;\")\n+\n+(define_insn \"*rotrsi3_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotatert:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATERT, SImode, operands)\"\n   \"@\n    ror{l}\\\\t{%2, %0|%0, %2}\n    ror{l}\\\\t{%b2, %0|%0, %b2}\"\n@@ -6131,18 +6252,26 @@\n \t  (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotatert:SI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATERT, SImode, operands)\"\n   \"@\n    ror{l}\\\\t{%2, %0|%0, %2}\n    ror{l}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"rotrhi3\"\n+(define_expand \"rotrhi3\"\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(rotatert:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ROTATERT, HImode, operands); DONE;\")\n+\n+(define_insn \"*rotrhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotatert:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATERT, HImode, operands)\"\n   \"@\n    ror{w}\\\\t{%2, %0|%0, %2}\n    ror{w}\\\\t{%b2, %0|%0, %b2}\"\n@@ -6156,18 +6285,26 @@\n \t  (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotatert:HI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATERT, HImode, operands)\"\n   \"@\n    ror{w}\\\\t{%2, %0|%0, %2}\n    ror{w}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"rotrqi3\"\n+(define_expand \"rotrqi3\"\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(rotatert:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"\"\n+  \"ix86_expand_binary_operator (ROTATERT, QImode, operands); DONE;\")\n+\n+(define_insn \"*rotrqi3_1\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,qm\")\n \t(rotatert:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n    (clobber (reg:CC 17))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATERT, QImode, operands)\"\n   \"@\n    ror{b}\\\\t{%2, %0|%0, %2}\n    ror{b}\\\\t{%b2, %0|%0, %b2}\"\n@@ -6181,7 +6318,7 @@\n \t  (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotatert:QI (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"ix86_binary_operator_ok (ROTATERT, QImode, operands)\"\n   \"@\n    ror{b}\\\\t{%2, %0|%0, %2}\n    ror{b}\\\\t{%b2, %0|%0, %b2}\"\n@@ -7964,7 +8101,8 @@\n \t\t\t\t[(reg 17) (const_int 0)])\n \t\t      (match_operand:SI 2 \"nonimmediate_operand\" \"rm,0\")\n \t\t      (match_operand:SI 3 \"nonimmediate_operand\" \"0,rm\")))]\n-  \"TARGET_CMOVE\"\n+  \"TARGET_CMOVE\n+   && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n    cmov%C1\\\\t{%2, %0|%0, %2}\n    cmov%c1\\\\t{%3, %0|%0, %3}\"\n@@ -7976,7 +8114,8 @@\n \t\t\t\t[(reg:CC 17) (const_int 0)])\n \t\t      (match_operand:SI 2 \"nonimmediate_operand\" \"rm,0\")\n \t\t      (match_operand:SI 3 \"nonimmediate_operand\" \"0,rm\")))]\n-  \"TARGET_CMOVE\"\n+  \"TARGET_CMOVE\n+   && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n    cmov%C1\\\\t{%2, %0|%0, %2}\n    cmov%c1\\\\t{%3, %0|%0, %3}\"\n@@ -7996,7 +8135,8 @@\n \t\t\t\t[(reg 17) (const_int 0)])\n \t\t      (match_operand:HI 2 \"nonimmediate_operand\" \"rm,0\")\n \t\t      (match_operand:HI 3 \"nonimmediate_operand\" \"0,rm\")))]\n-  \"TARGET_CMOVE\"\n+  \"TARGET_CMOVE\n+   && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n    cmov%C1\\\\t{%2, %0|%0, %2}\n    cmov%c1\\\\t{%3, %0|%0, %3}\"\n@@ -8008,7 +8148,8 @@\n \t\t\t\t[(reg:CC 17) (const_int 0)])\n \t\t      (match_operand:HI 2 \"nonimmediate_operand\" \"rm,0\")\n \t\t      (match_operand:HI 3 \"nonimmediate_operand\" \"0,rm\")))]\n-  \"TARGET_CMOVE\"\n+  \"TARGET_CMOVE\n+   && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n    cmov%C1\\\\t{%2, %0|%0, %2}\n    cmov%c1\\\\t{%3, %0|%0, %3}\""}]}