{"sha": "98bf4cf4973d9b66774c85fe271073e7bc0ff916", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThiZjRjZjQ5NzNkOWI2Njc3NGM4NWZlMjcxMDczZTdiYzBmZjkxNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T08:07:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T08:07:57Z"}, "message": "[multiple changes]\n\n2014-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Is_Potentially_Unevaluated): If the original\n\tnode of a parent node in the tree is a short-circuit operation,\n\tthe node is potentially unevaluated.\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb (Resolve_Type_Conversion): Set Do_Range_Check on\n\tconversion from a real type to an integer type.\n\nFrom-SVN: r213538", "tree": {"sha": "a49b72b107d4323bbc67eda560d73754064ea1c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a49b72b107d4323bbc67eda560d73754064ea1c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98bf4cf4973d9b66774c85fe271073e7bc0ff916", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98bf4cf4973d9b66774c85fe271073e7bc0ff916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98bf4cf4973d9b66774c85fe271073e7bc0ff916", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98bf4cf4973d9b66774c85fe271073e7bc0ff916/comments", "author": null, "committer": null, "parents": [{"sha": "ce5ba43a4ea1fe705546313188ce51b783b4037c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce5ba43a4ea1fe705546313188ce51b783b4037c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce5ba43a4ea1fe705546313188ce51b783b4037c"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "b797f135baf883c315716ac9487bd891a72ddfb0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98bf4cf4973d9b66774c85fe271073e7bc0ff916/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98bf4cf4973d9b66774c85fe271073e7bc0ff916/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=98bf4cf4973d9b66774c85fe271073e7bc0ff916", "patch": "@@ -1,3 +1,14 @@\n+2014-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Is_Potentially_Unevaluated): If the original\n+\tnode of a parent node in the tree is a short-circuit operation,\n+\tthe node is potentially unevaluated.\n+\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Type_Conversion): Set Do_Range_Check on\n+\tconversion from a real type to an integer type.\n+\n 2014-08-04  Yannick Moy  <moy@adacore.com>\n \n \t* sem_aggr.adb, sem_ch3.adb, sem_ch5.adb, sem_ch7.adb, sem_ch9.adb,"}, {"sha": "87024ee92f56b952de7d4af42a8228148f2480e4", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98bf4cf4973d9b66774c85fe271073e7bc0ff916/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98bf4cf4973d9b66774c85fe271073e7bc0ff916/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=98bf4cf4973d9b66774c85fe271073e7bc0ff916", "patch": "@@ -10322,11 +10322,11 @@ package body Sem_Res is\n          --  odd subtype coming from the bounds).\n \n          if (Is_Entity_Name (Orig_N)\n-               and then\n-                 (Etype (Entity (Orig_N)) = Orig_T\n-                   or else\n-                     (Ekind (Entity (Orig_N)) = E_Loop_Parameter\n-                       and then Covers (Orig_T, Etype (Entity (Orig_N))))))\n+              and then\n+                (Etype (Entity (Orig_N)) = Orig_T\n+                  or else\n+                    (Ekind (Entity (Orig_N)) = E_Loop_Parameter\n+                      and then Covers (Orig_T, Etype (Entity (Orig_N))))))\n \n            --  If not an entity, then type of expression must match\n \n@@ -10504,6 +10504,17 @@ package body Sem_Res is\n             Apply_Predicate_Check (N, Target_Typ);\n          end if;\n       end if;\n+\n+      --  If at this stage we have a real to integer conversion, make sure\n+      --  that the Do_Range_Check flag is set, because such conversions in\n+      --  general need a range check.\n+\n+      if Nkind (N) = N_Type_Conversion\n+        and then Is_Integer_Type (Target_Typ)\n+        and then Is_Real_Type (Operand_Typ)\n+      then\n+         Set_Do_Range_Check (Operand);\n+      end if;\n    end Resolve_Type_Conversion;\n \n    ----------------------"}, {"sha": "5c1a5a8011ee6e2c2f6015ebb30e43a166a52fc1", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98bf4cf4973d9b66774c85fe271073e7bc0ff916/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98bf4cf4973d9b66774c85fe271073e7bc0ff916/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=98bf4cf4973d9b66774c85fe271073e7bc0ff916", "patch": "@@ -11146,6 +11146,17 @@ package body Sem_Util is\n    begin\n       Expr := N;\n       Par  := Parent (N);\n+\n+      --  A postcondition whose expression is a short-circuit is broken down\n+      --  into individual aspects for better exception reporting. The original\n+      --  short-circuit expression is rewritten as the second operand, and an\n+      --  occurrence of 'Old in that operand is potentially unevaluated.\n+      --  See Sem_ch13.adb for details of this transformation.\n+\n+      if Nkind (Original_Node (Par)) =  N_And_Then then\n+         return True;\n+      end if;\n+\n       while not Nkind_In (Par, N_If_Expression,\n                                N_Case_Expression,\n                                N_And_Then,"}]}