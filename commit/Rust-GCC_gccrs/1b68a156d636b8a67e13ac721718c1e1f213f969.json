{"sha": "1b68a156d636b8a67e13ac721718c1e1f213f969", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI2OGExNTZkNjM2YjhhNjdlMTNhYzcyMTcxOGMxZTFmMjEzZjk2OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2017-07-12T21:43:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-07-12T21:43:40Z"}, "message": "riscv.c: Remove unnecessary includes.\n\n\t* config/riscv/riscv.c: Remove unnecessary includes.  Reorder\n\tremaining includes slightly.\n\t* config/riscv/riscv-builtins.c: Include profile-count.h.\n\nFrom-SVN: r250162", "tree": {"sha": "e899b40ac43f30df1345ddb7d906e2c490bb21e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e899b40ac43f30df1345ddb7d906e2c490bb21e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b68a156d636b8a67e13ac721718c1e1f213f969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b68a156d636b8a67e13ac721718c1e1f213f969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b68a156d636b8a67e13ac721718c1e1f213f969", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b68a156d636b8a67e13ac721718c1e1f213f969/comments", "author": null, "committer": null, "parents": [{"sha": "75f8b378927f86757eedbbca6745467d0c3d6212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f8b378927f86757eedbbca6745467d0c3d6212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75f8b378927f86757eedbbca6745467d0c3d6212"}], "stats": {"total": 67, "additions": 9, "deletions": 58}, "files": [{"sha": "f9350a5183e83463dd655174ffbea195528bb6b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b68a156d636b8a67e13ac721718c1e1f213f969/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b68a156d636b8a67e13ac721718c1e1f213f969/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b68a156d636b8a67e13ac721718c1e1f213f969", "patch": "@@ -1,3 +1,9 @@\n+2017-07-12  Jeff Law  <law@redhat.com>\n+\n+\t* config/riscv/riscv.c: Remove unnecessary includes.  Reorder\n+\tremaining includes slightly.\n+\t* config/riscv/riscv-builtins.c: Include profile-count.h.\n+\n 2017-07-12  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/79883"}, {"sha": "1311fee6f70b552bce2c37fef132a933e8384822", "filename": "gcc/config/riscv/riscv-builtins.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b68a156d636b8a67e13ac721718c1e1f213f969/gcc%2Fconfig%2Friscv%2Friscv-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b68a156d636b8a67e13ac721718c1e1f213f969/gcc%2Fconfig%2Friscv%2Friscv-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-builtins.c?ref=1b68a156d636b8a67e13ac721718c1e1f213f969", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-expr.h\"\n #include \"memmodel.h\"\n #include \"expmed.h\"\n+#include \"profile-count.h\"\n #include \"optabs.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "57b2edbcb4302727e424917926845a32962c3d8d", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 2, "deletions": 58, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b68a156d636b8a67e13ac721718c1e1f213f969/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b68a156d636b8a67e13ac721718c1e1f213f969/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=1b68a156d636b8a67e13ac721718c1e1f213f969", "patch": "@@ -25,86 +25,30 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n-#include \"hard-reg-set.h\"\n #include \"insn-config.h\"\n-#include \"conditions.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"output.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n-#include \"vec.h\"\n-#include \"double-int.h\"\n-#include \"input.h\"\n #include \"alias.h\"\n-#include \"symtab.h\"\n-#include \"wide-int.h\"\n-#include \"inchash.h\"\n #include \"tree.h\"\n-#include \"fold-const.h\"\n #include \"varasm.h\"\n-#include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"function.h\"\n-#include \"hashtab.h\"\n-#include \"flags.h\"\n-#include \"statistics.h\"\n-#include \"real.h\"\n-#include \"fixed-value.h\"\n-#include \"expmed.h\"\n-#include \"dojump.h\"\n #include \"explow.h\"\n #include \"memmodel.h\"\n #include \"emit-rtl.h\"\n-#include \"stmt.h\"\n-#include \"expr.h\"\n-#include \"insn-codes.h\"\n-#include \"optabs.h\"\n-#include \"libfuncs.h\"\n #include \"reload.h\"\n #include \"tm_p.h\"\n-#include \"ggc.h\"\n-#include \"gstab.h\"\n-#include \"hash-table.h\"\n-#include \"debug.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n-#include \"common/common-target.h\"\n-#include \"langhooks.h\"\n-#include \"dominance.h\"\n-#include \"profile-count.h\"\n-#include \"cfg.h\"\n-#include \"cfgrtl.h\"\n-#include \"cfganal.h\"\n-#include \"lcm.h\"\n-#include \"cfgbuild.h\"\n-#include \"cfgcleanup.h\"\n-#include \"predict.h\"\n #include \"basic-block.h\"\n+#include \"expr.h\"\n+#include \"optabs.h\"\n #include \"bitmap.h\"\n-#include \"regset.h\"\n #include \"df.h\"\n-#include \"sched-int.h\"\n-#include \"tree-ssa-alias.h\"\n-#include \"internal-fn.h\"\n-#include \"gimple-fold.h\"\n-#include \"tree-eh.h\"\n-#include \"gimple-expr.h\"\n-#include \"is-a.h\"\n-#include \"gimple.h\"\n-#include \"gimplify.h\"\n #include \"diagnostic.h\"\n-#include \"target-globals.h\"\n-#include \"opts.h\"\n-#include \"tree-pass.h\"\n-#include \"context.h\"\n-#include \"hash-map.h\"\n-#include \"plugin-api.h\"\n-#include \"ipa-ref.h\"\n-#include \"cgraph.h\"\n #include \"builtins.h\"\n-#include \"rtl-iter.h\"\n \n /* True if X is an UNSPEC wrapper around a SYMBOL_REF or LABEL_REF.  */\n #define UNSPEC_ADDRESS_P(X)\t\t\t\t\t\\"}]}