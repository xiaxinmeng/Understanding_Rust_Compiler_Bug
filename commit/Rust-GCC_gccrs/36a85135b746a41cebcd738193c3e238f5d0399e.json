{"sha": "36a85135b746a41cebcd738193c3e238f5d0399e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZhODUxMzViNzQ2YTQxY2ViY2Q3MzgxOTNjM2UyMzhmNWQwMzk5ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-07-01T19:25:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-07-01T19:25:50Z"}, "message": "c-common.h (D_CXX11): Rename from D_CXX0X.\n\ngcc/c-family/\n\t* c-common.h (D_CXX11): Rename from D_CXX0X.\n\t(RID_FIRST_CXX11, RID_LAST_CXX11): Rename from *_CXX0X.\n\t* c-common.c: Adjust.\ngcc/cp/\n\t* lex.c (init_reswords): s/CXX0X/CXX11/.\n\t* parser.c (cp_lexer_get_preprocessor_token): Likewise.\n\nFrom-SVN: r225273", "tree": {"sha": "50e3142b411e0b4efbac25a6dc5ec901f7ea8004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50e3142b411e0b4efbac25a6dc5ec901f7ea8004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36a85135b746a41cebcd738193c3e238f5d0399e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a85135b746a41cebcd738193c3e238f5d0399e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36a85135b746a41cebcd738193c3e238f5d0399e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36a85135b746a41cebcd738193c3e238f5d0399e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7fa68d55551081342ef3b7eaf1a02639cb57053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7fa68d55551081342ef3b7eaf1a02639cb57053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7fa68d55551081342ef3b7eaf1a02639cb57053"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "49f33d6357af25a0a3aefa3ce2e29e034cfbafdd", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=36a85135b746a41cebcd738193c3e238f5d0399e", "patch": "@@ -1,5 +1,9 @@\n 2015-07-01  Jason Merrill  <jason@redhat.com>\n \n+\t* c-common.h (D_CXX11): Rename from D_CXX0X.\n+\t(RID_FIRST_CXX11, RID_LAST_CXX11): Rename from *_CXX0X.\n+\t* c-common.c: Adjust.\n+\n \t* c-opts.c (c_common_post_options): Default to C++14.\n \n \t* c-opts.c (c_common_post_options): Highest ABI level is now 10."}, {"sha": "64c44550ef2495d3b1e4b14f5942bb86f921de24", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=36a85135b746a41cebcd738193c3e238f5d0399e", "patch": "@@ -514,23 +514,23 @@ const struct c_common_resword c_common_reswords[] =\n   { \"__underlying_type\", RID_UNDERLYING_TYPE, D_CXXONLY },\n   { \"__volatile\",\tRID_VOLATILE,\t0 },\n   { \"__volatile__\",\tRID_VOLATILE,\t0 },\n-  { \"alignas\",\t\tRID_ALIGNAS,\tD_CXXONLY | D_CXX0X | D_CXXWARN },\n-  { \"alignof\",\t\tRID_ALIGNOF,\tD_CXXONLY | D_CXX0X | D_CXXWARN },\n+  { \"alignas\",\t\tRID_ALIGNAS,\tD_CXXONLY | D_CXX11 | D_CXXWARN },\n+  { \"alignof\",\t\tRID_ALIGNOF,\tD_CXXONLY | D_CXX11 | D_CXXWARN },\n   { \"asm\",\t\tRID_ASM,\tD_ASM },\n   { \"auto\",\t\tRID_AUTO,\t0 },\n   { \"bool\",\t\tRID_BOOL,\tD_CXXONLY | D_CXXWARN },\n   { \"break\",\t\tRID_BREAK,\t0 },\n   { \"case\",\t\tRID_CASE,\t0 },\n   { \"catch\",\t\tRID_CATCH,\tD_CXX_OBJC | D_CXXWARN },\n   { \"char\",\t\tRID_CHAR,\t0 },\n-  { \"char16_t\",\t\tRID_CHAR16,\tD_CXXONLY | D_CXX0X | D_CXXWARN },\n-  { \"char32_t\",\t\tRID_CHAR32,\tD_CXXONLY | D_CXX0X | D_CXXWARN },\n+  { \"char16_t\",\t\tRID_CHAR16,\tD_CXXONLY | D_CXX11 | D_CXXWARN },\n+  { \"char32_t\",\t\tRID_CHAR32,\tD_CXXONLY | D_CXX11 | D_CXXWARN },\n   { \"class\",\t\tRID_CLASS,\tD_CXX_OBJC | D_CXXWARN },\n   { \"const\",\t\tRID_CONST,\t0 },\n-  { \"constexpr\",\tRID_CONSTEXPR,\tD_CXXONLY | D_CXX0X | D_CXXWARN },\n+  { \"constexpr\",\tRID_CONSTEXPR,\tD_CXXONLY | D_CXX11 | D_CXXWARN },\n   { \"const_cast\",\tRID_CONSTCAST,\tD_CXXONLY | D_CXXWARN },\n   { \"continue\",\t\tRID_CONTINUE,\t0 },\n-  { \"decltype\",         RID_DECLTYPE,   D_CXXONLY | D_CXX0X | D_CXXWARN },\n+  { \"decltype\",         RID_DECLTYPE,   D_CXXONLY | D_CXX11 | D_CXXWARN },\n   { \"default\",\t\tRID_DEFAULT,\t0 },\n   { \"delete\",\t\tRID_DELETE,\tD_CXXONLY | D_CXXWARN },\n   { \"do\",\t\tRID_DO,\t\t0 },\n@@ -553,8 +553,8 @@ const struct c_common_resword c_common_reswords[] =\n   { \"mutable\",\t\tRID_MUTABLE,\tD_CXXONLY | D_CXXWARN },\n   { \"namespace\",\tRID_NAMESPACE,\tD_CXXONLY | D_CXXWARN },\n   { \"new\",\t\tRID_NEW,\tD_CXXONLY | D_CXXWARN },\n-  { \"noexcept\",\t\tRID_NOEXCEPT,\tD_CXXONLY | D_CXX0X | D_CXXWARN },\n-  { \"nullptr\",\t\tRID_NULLPTR,\tD_CXXONLY | D_CXX0X | D_CXXWARN },\n+  { \"noexcept\",\t\tRID_NOEXCEPT,\tD_CXXONLY | D_CXX11 | D_CXXWARN },\n+  { \"nullptr\",\t\tRID_NULLPTR,\tD_CXXONLY | D_CXX11 | D_CXXWARN },\n   { \"operator\",\t\tRID_OPERATOR,\tD_CXXONLY | D_CXXWARN },\n   { \"private\",\t\tRID_PRIVATE,\tD_CXX_OBJC | D_CXXWARN },\n   { \"protected\",\tRID_PROTECTED,\tD_CXX_OBJC | D_CXXWARN },\n@@ -567,13 +567,13 @@ const struct c_common_resword c_common_reswords[] =\n   { \"signed\",\t\tRID_SIGNED,\t0 },\n   { \"sizeof\",\t\tRID_SIZEOF,\t0 },\n   { \"static\",\t\tRID_STATIC,\t0 },\n-  { \"static_assert\",    RID_STATIC_ASSERT, D_CXXONLY | D_CXX0X | D_CXXWARN },\n+  { \"static_assert\",    RID_STATIC_ASSERT, D_CXXONLY | D_CXX11 | D_CXXWARN },\n   { \"static_cast\",\tRID_STATCAST,\tD_CXXONLY | D_CXXWARN },\n   { \"struct\",\t\tRID_STRUCT,\t0 },\n   { \"switch\",\t\tRID_SWITCH,\t0 },\n   { \"template\",\t\tRID_TEMPLATE,\tD_CXXONLY | D_CXXWARN },\n   { \"this\",\t\tRID_THIS,\tD_CXXONLY | D_CXXWARN },\n-  { \"thread_local\",\tRID_THREAD,\tD_CXXONLY | D_CXX0X | D_CXXWARN },\n+  { \"thread_local\",\tRID_THREAD,\tD_CXXONLY | D_CXX11 | D_CXXWARN },\n   { \"throw\",\t\tRID_THROW,\tD_CXX_OBJC | D_CXXWARN },\n   { \"true\",\t\tRID_TRUE,\tD_CXXONLY | D_CXXWARN },\n   { \"try\",\t\tRID_TRY,\tD_CXX_OBJC | D_CXXWARN },"}, {"sha": "d84c58eba351d6c7beb5d38f93d530419db6e7f1", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=36a85135b746a41cebcd738193c3e238f5d0399e", "patch": "@@ -214,8 +214,8 @@ enum rid\n   RID_FIRST_MODIFIER = RID_STATIC,\n   RID_LAST_MODIFIER = RID_ONEWAY,\n \n-  RID_FIRST_CXX0X = RID_CONSTEXPR,\n-  RID_LAST_CXX0X = RID_STATIC_ASSERT,\n+  RID_FIRST_CXX11 = RID_CONSTEXPR,\n+  RID_LAST_CXX11 = RID_STATIC_ASSERT,\n   RID_FIRST_AT = RID_AT_ENCODE,\n   RID_LAST_AT = RID_AT_IMPLEMENTATION,\n   RID_FIRST_PQ = RID_IN,\n@@ -381,7 +381,7 @@ extern machine_mode c_default_pointer_mode;\n #define D_CONLY\t\t0x001\t/* C only (not in C++).  */\n #define D_CXXONLY\t0x002\t/* C++ only (not in C).  */\n #define D_C99\t\t0x004\t/* In C, C99 only.  */\n-#define D_CXX0X         0x008\t/* In C++, C++0X only.  */\n+#define D_CXX11         0x008\t/* In C++, C++11 only.  */\n #define D_EXT\t\t0x010\t/* GCC extension.  */\n #define D_EXT89\t\t0x020\t/* GCC extension incorporated in C99.  */\n #define D_ASM\t\t0x040\t/* Disabled by -fno-asm.  */"}, {"sha": "fe31256060dd0563621bdd951527541d5b3f2bc1", "filename": "gcc/c-family/c-lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=36a85135b746a41cebcd738193c3e238f5d0399e", "patch": "@@ -774,7 +774,7 @@ interpret_integer (const cpp_token *token, unsigned int flags,\n }\n \n /* Interpret TOKEN, a floating point number with FLAGS as classified\n-   by cpplib.  For C++0X SUFFIX may contain a user-defined literal suffix.  */\n+   by cpplib.  For C++11 SUFFIX may contain a user-defined literal suffix.  */\n static tree\n interpret_float (const cpp_token *token, unsigned int flags,\n \t\t const char *suffix, enum overflow_type *overflow)"}, {"sha": "dacc82876fe19c62aebe0046f3586ed2782d05e9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=36a85135b746a41cebcd738193c3e238f5d0399e", "patch": "@@ -1,5 +1,8 @@\n 2015-07-01  Jason Merrill  <jason@redhat.com>\n \n+\t* lex.c (init_reswords): s/CXX0X/CXX11/.\n+\t* parser.c (cp_lexer_get_preprocessor_token): Likewise.\n+\n \t* mangle.c (write_CV_qualifiers_for_type, write_nested_name):\n \tAttribute mangling is now -fabi-version=10.\n "}, {"sha": "d8ee8e3396571b75265394e7c85f10169991ab21", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=36a85135b746a41cebcd738193c3e238f5d0399e", "patch": "@@ -174,7 +174,7 @@ init_reswords (void)\n   int mask = 0;\n \n   if (cxx_dialect < cxx11)\n-    mask |= D_CXX0X;\n+    mask |= D_CXX11;\n   if (flag_no_asm)\n     mask |= D_ASM | D_EXT;\n   if (flag_no_gnu_keywords)"}, {"sha": "8d8ec3003c23657242a4ddef4729d9dc4ec0a6d7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36a85135b746a41cebcd738193c3e238f5d0399e/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=36a85135b746a41cebcd738193c3e238f5d0399e", "patch": "@@ -791,8 +791,8 @@ cp_lexer_get_preprocessor_token (cp_lexer *lexer, cp_token *token)\n       else\n \t{\n           if (warn_cxx11_compat\n-              && C_RID_CODE (token->u.value) >= RID_FIRST_CXX0X\n-              && C_RID_CODE (token->u.value) <= RID_LAST_CXX0X)\n+              && C_RID_CODE (token->u.value) >= RID_FIRST_CXX11\n+              && C_RID_CODE (token->u.value) <= RID_LAST_CXX11)\n             {\n               /* Warn about the C++0x keyword (but still treat it as\n                  an identifier).  */"}]}