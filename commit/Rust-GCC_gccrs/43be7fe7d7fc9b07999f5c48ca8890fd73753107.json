{"sha": "43be7fe7d7fc9b07999f5c48ca8890fd73753107", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiZTdmZTdkN2ZjOWIwNzk5OWY1YzQ4Y2E4ODkwZmQ3Mzc1MzEwNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-12-27T23:03:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-12-27T23:03:03Z"}, "message": "* config/locale/gnu/ctype_members.cc\n\t(ctype<wchar_t>::_M_convert_to_wmask): Remove stray semicolon.\n\t* config/locale/gnu/monetary_members.cc\n\t(moneypunct<wchar_t, true>::_M_initialize_moneypunct): Avoid\n\tdefining classes in static_cast.\n\t(moneypunct<wchar_t, false>::_M_initialize_moneypunct): Likewise.\n\t* config/locale/gnu/numeric_members.cc\n\t(numpunct<wchar_t, false>::_M_initialize_numpunct): Likewise.\n\t* include/bits/stl_deque.h (operator-): Insert typename where\n\trequired.\n\t* include/bits/stl_multiset.h (multiset): Remove stray semicolon.\n\t* include/bits/stl_set.h (set): Likewise.\n\t* include/bits/valarray_meta.h (bits/slice_array.h): Include it.\n\t* include/std/std_fstream.h (basic_fstream::open): Use this-> to\n\tavoid Koenig lookup.\n\t(basic_fstream::close): Likewise.\n\t* libsupc++/new (operator delete): Remove stray semicolon.\n\t* libsupc++/new (operator delete[]): Likewise.\n\t* libsupc++/tinfo.cc: Likewise.\n\t* src/stdexcept.c (logic_error::~logic_error): Likewise.\n\t(runtime_error::~runtime_error): Likewise.\n\nFrom-SVN: r60547", "tree": {"sha": "21306e1db67b8cbce9990745bf093d8ada4e03a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21306e1db67b8cbce9990745bf093d8ada4e03a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43be7fe7d7fc9b07999f5c48ca8890fd73753107", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43be7fe7d7fc9b07999f5c48ca8890fd73753107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43be7fe7d7fc9b07999f5c48ca8890fd73753107", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43be7fe7d7fc9b07999f5c48ca8890fd73753107/comments", "author": null, "committer": null, "parents": [{"sha": "27e3f16dba75a93df18856d7583a3b73c21cd4cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e3f16dba75a93df18856d7583a3b73c21cd4cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e3f16dba75a93df18856d7583a3b73c21cd4cd"}], "stats": {"total": 83, "additions": 60, "deletions": 23}, "files": [{"sha": "a39f2528368ce373614ad2099537d3015180e05a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -1,3 +1,27 @@\n+2002-12-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/locale/gnu/ctype_members.cc\n+\t(ctype<wchar_t>::_M_convert_to_wmask): Remove stray semicolon.\n+\t* config/locale/gnu/monetary_members.cc\n+\t(moneypunct<wchar_t, true>::_M_initialize_moneypunct): Avoid\n+\tdefining classes in static_cast.\n+\t(moneypunct<wchar_t, false>::_M_initialize_moneypunct): Likewise.\n+\t* config/locale/gnu/numeric_members.cc\n+\t(numpunct<wchar_t, false>::_M_initialize_numpunct): Likewise.\n+\t* include/bits/stl_deque.h (operator-): Insert typename where\n+\trequired.\n+\t* include/bits/stl_multiset.h (multiset): Remove stray semicolon.\n+\t* include/bits/stl_set.h (set): Likewise.\n+\t* include/bits/valarray_meta.h (bits/slice_array.h): Include it.\n+\t* include/std/std_fstream.h (basic_fstream::open): Use this-> to\n+\tavoid Koenig lookup.\n+\t(basic_fstream::close): Likewise.\n+\t* libsupc++/new (operator delete): Remove stray semicolon.\n+\t* libsupc++/new (operator delete[]): Likewise.\n+\t* libsupc++/tinfo.cc: Likewise.\n+\t* src/stdexcept.c (logic_error::~logic_error): Likewise.\n+\t(runtime_error::~runtime_error): Likewise.\n+\t\n 2002-12-26  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* libsupc++/exception:  Add comment (mistakenly skipped)."}, {"sha": "8bc2559096eca00f1c118365f0546285b2e31f98", "filename": "libstdc++-v3/config/locale/gnu/ctype_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -95,7 +95,7 @@ namespace std\n \t__ret = 0;\n       }\n     return __ret;\n-  };\n+  }\n   \n   wchar_t\n   ctype<wchar_t>::do_toupper(wchar_t __c) const"}, {"sha": "91080da0d370e8be6ac29f9b3bc512dd15a7a301", "filename": "libstdc++-v3/config/locale/gnu/monetary_members.cc", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -347,9 +347,12 @@ namespace std\n \t  setlocale(LC_ALL, __name);\n #endif\n \n-\t  _M_decimal_point = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc)}).__w);\n+\t  union __s_and_w { const char *__s; unsigned int __w; } __u;\n+\t  __u.__s = __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc);\n+\t  _M_decimal_point = static_cast<wchar_t>(__u.__w);\n \n-\t  _M_thousands_sep = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc)}).__w);\n+\t  __u.__s = __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc);\n+\t  _M_thousands_sep = static_cast<wchar_t>(__u.__w);\n \t  _M_grouping = __nl_langinfo_l(GROUPING, __cloc);\n \n \t  const char* __cpossign = __nl_langinfo_l(__POSITIVE_SIGN, __cloc);\n@@ -448,8 +451,12 @@ namespace std\n \t  setlocale(LC_ALL, __name);\n #endif\n \n-\t  _M_decimal_point = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc)}).__w);\n-\t  _M_thousands_sep = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc)}).__w);\n+\t  union __s_and_w { const char *__s; unsigned int __w; } __u;\n+\t  __u.__s = __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc);\n+\t  _M_decimal_point = static_cast<wchar_t>(__u.__w);\n+\n+\t  __u.__s = __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc);\n+\t  _M_thousands_sep = static_cast<wchar_t>(__u.__w);\n \t  _M_grouping = __nl_langinfo_l(GROUPING, __cloc);\n \n \t  const char* __cpossign = __nl_langinfo_l(__POSITIVE_SIGN, __cloc);"}, {"sha": "5b666ebe608d8b5dec2fd925dbb8c7b3f181566c", "filename": "libstdc++-v3/config/locale/gnu/numeric_members.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -86,8 +86,12 @@ namespace std\n       else\n \t{\n \t  // Named locale.\n-\t  _M_decimal_point = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc)}).__w);\n-\t  _M_thousands_sep = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc)}).__w);\n+\t  union __s_and_w { const char *__s; unsigned int __w; } __u;\n+\t  __u.__s = __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc);\n+\t  _M_decimal_point = static_cast<wchar_t>(__u.__w);\n+\n+\t  __u.__s = __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc);\n+\t  _M_thousands_sep = static_cast<wchar_t>(__u.__w);\n \t  if (_M_thousands_sep == L'\\0')\n \t    _M_grouping = \"\";\n \t  else"}, {"sha": "467d73908da31d9d6974e2bc197541002d83f75f", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -319,7 +319,7 @@ namespace std\n   operator-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,\n   \t  const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)\n   {\n-    return _Deque_iterator<_Tp, _RefL, _PtrL>::difference_type\n+    return typename _Deque_iterator<_Tp, _RefL, _PtrL>::difference_type\n       (_Deque_iterator<_Tp, _RefL, _PtrL>::_S_buffer_size()) *\n       (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first) +\n       (__y._M_last - __y._M_cur);"}, {"sha": "2791a2f2f34abc6b4e0cb33266c04b02b91d2f47", "filename": "libstdc++-v3/include/bits/stl_multiset.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -1,6 +1,6 @@\n // Multiset implementation -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -85,7 +85,7 @@ class multiset\n {\n   // concept requirements\n   __glibcpp_class_requires(_Key, _SGIAssignableConcept)\n-  __glibcpp_class_requires4(_Compare, bool, _Key, _Key, _BinaryFunctionConcept);\n+  __glibcpp_class_requires4(_Compare, bool, _Key, _Key, _BinaryFunctionConcept)\n \n public:\n "}, {"sha": "b6f70e8bbebb307fc8f900300965d9fe55c02d15", "filename": "libstdc++-v3/include/bits/stl_set.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -1,6 +1,6 @@\n // Set implementation -*- C++ -*-\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -86,7 +86,7 @@ class set\n {\n   // concept requirements\n   __glibcpp_class_requires(_Key, _SGIAssignableConcept)\n-  __glibcpp_class_requires4(_Compare, bool, _Key, _Key, _BinaryFunctionConcept);\n+  __glibcpp_class_requires4(_Compare, bool, _Key, _Key, _BinaryFunctionConcept)\n \n public:\n   // typedefs:"}, {"sha": "457f6bb5b71556f5cfd6a6a7a536c65fcb96a482", "filename": "libstdc++-v3/include/bits/valarray_meta.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_meta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_meta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_meta.h?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -1,6 +1,6 @@\n // The template and inlines for the -*- C++ -*- internal _Meta class.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,6 +39,8 @@\n \n #pragma GCC system_header\n \n+#include <bits/slice_array.h>\n+\n namespace std\n {\n   //"}, {"sha": "4e2e8447f3b1224958c2af35051302a2703ca2ae", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -797,7 +797,7 @@ namespace std\n \t   ios_base::openmode __mode = ios_base::in | ios_base::out)\n       {\n \tif (!_M_filebuf.open(__s, __mode))\n-\t  setstate(ios_base::failbit);\n+\t  this->setstate(ios_base::failbit);\n       }\n \n       /**\n@@ -810,7 +810,7 @@ namespace std\n       close()\n       {\n \tif (!_M_filebuf.close())\n-\t  setstate(ios_base::failbit);\n+\t  this->setstate(ios_base::failbit);\n       }\n     };\n } // namespace std"}, {"sha": "b883128901f2f2f7b6f9d30c2d1ac49667a998d0", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -93,8 +93,8 @@ inline void* operator new(std::size_t, void* __p) throw() { return __p; }\n inline void* operator new[](std::size_t, void* __p) throw() { return __p; }\n \n // Default placement versions of operator delete.\n-inline void  operator delete  (void*, void*) throw() { };\n-inline void  operator delete[](void*, void*) throw() { };\n+inline void  operator delete  (void*, void*) throw() { }\n+inline void  operator delete[](void*, void*) throw() { }\n //@}\n } // extern \"C++\"\n "}, {"sha": "74d13834af4db61f920280b371aaf622158e5a7e", "filename": "libstdc++-v3/libsupc++/tinfo.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Ftinfo.cc?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -85,7 +85,7 @@ __do_upcast (const abi::__class_type_info *, void **) const\n   return false;\n }\n \n-};\n+}\n \n namespace {\n \n@@ -172,7 +172,7 @@ inline bool contained_nonvirtual_p (__class_type_info::__sub_kind access_path)\n static const __class_type_info *const nonvirtual_base_type =\n     static_cast <const __class_type_info *> (0) + 1;\n \n-}; // namespace\n+} // namespace\n \n namespace __cxxabiv1\n {\n@@ -735,4 +735,4 @@ __dynamic_cast (const void *src_ptr,    // object started from\n   return NULL;\n }\n \n-}; // namespace __cxxabiv1\n+} // namespace __cxxabiv1"}, {"sha": "5db7c68d36d5be0a4155c64e4ef75f51f3273830", "filename": "libstdc++-v3/src/stdexcept.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Fsrc%2Fstdexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43be7fe7d7fc9b07999f5c48ca8890fd73753107/libstdc%2B%2B-v3%2Fsrc%2Fstdexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstdexcept.cc?ref=43be7fe7d7fc9b07999f5c48ca8890fd73753107", "patch": "@@ -1,6 +1,6 @@\n // Methods for Exception Support for -*- C++ -*-\n \n-// Copyright (C) 1997, 1999, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1999, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,7 +39,7 @@ namespace std\n   logic_error::logic_error(const string& __arg) \n   : exception(), _M_msg(__arg) { }\n \n-  logic_error::~logic_error() throw() { };\n+  logic_error::~logic_error() throw() { }\n \n   const char*\n   logic_error::what() const throw()\n@@ -60,7 +60,7 @@ namespace std\n   runtime_error::runtime_error(const string& __arg) \n   : exception(), _M_msg(__arg) { }\n \n-  runtime_error::~runtime_error() throw() { };\n+  runtime_error::~runtime_error() throw() { }\n \n   const char*\n   runtime_error::what() const throw()"}]}