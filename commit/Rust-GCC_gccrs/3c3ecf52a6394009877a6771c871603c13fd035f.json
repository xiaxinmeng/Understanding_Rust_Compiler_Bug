{"sha": "3c3ecf52a6394009877a6771c871603c13fd035f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzZWNmNTJhNjM5NDAwOTg3N2E2NzcxYzg3MTYwM2MxM2ZkMDM1Zg==", "commit": {"author": {"name": "Alan Hayward", "email": "alan.hayward@arm.com", "date": "2016-07-08T08:50:24Z"}, "committer": {"name": "Alan Hayward", "email": "alahay01@gcc.gnu.org", "date": "2016-07-08T08:50:24Z"}, "message": "re PR debug/71667 (ICE in as_a, at is-a.h:192 w/ -g -O2 -ftree-vectorize)\n\n2016-07-08  Alan Hayward  <alan.hayward@arm.com>\n\ngcc/\n\tPR tree-optimization/71667\n\t* tree-vect-loop.c (vectorizable_live_operation): ignore DEBUG stmts\n\ntestsuite/\n\tPR tree-optimization/71667\n\t* gcc.dg/vect/pr71667.c: New\n\nFrom-SVN: r238160", "tree": {"sha": "0375b18fd1d04e382b22b64f870a25e9363cc439", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0375b18fd1d04e382b22b64f870a25e9363cc439"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c3ecf52a6394009877a6771c871603c13fd035f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3ecf52a6394009877a6771c871603c13fd035f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c3ecf52a6394009877a6771c871603c13fd035f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3ecf52a6394009877a6771c871603c13fd035f/comments", "author": {"login": "a74nh", "id": 4146708, "node_id": "MDQ6VXNlcjQxNDY3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a74nh", "html_url": "https://github.com/a74nh", "followers_url": "https://api.github.com/users/a74nh/followers", "following_url": "https://api.github.com/users/a74nh/following{/other_user}", "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}", "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions", "organizations_url": "https://api.github.com/users/a74nh/orgs", "repos_url": "https://api.github.com/users/a74nh/repos", "events_url": "https://api.github.com/users/a74nh/events{/privacy}", "received_events_url": "https://api.github.com/users/a74nh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03e6ca4873c52eaba58933d317d425891f71cee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e6ca4873c52eaba58933d317d425891f71cee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e6ca4873c52eaba58933d317d425891f71cee0"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "dc648ca32539ed546e9293d4d622f3b6f8bf5f96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3ecf52a6394009877a6771c871603c13fd035f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3ecf52a6394009877a6771c871603c13fd035f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c3ecf52a6394009877a6771c871603c13fd035f", "patch": "@@ -1,3 +1,8 @@\n+2016-07-08  Alan Hayward  <alan.hayward@arm.com>\n+\n+\tPR tree-optimization/71667\n+\t* tree-vect-loop.c (vectorizable_live_operation): ignore DEBUG stmts\n+\n 2016-07-08  Martin Liska  <mliska@suse.cz>\n \n \tPR middle-end/71606"}, {"sha": "3af679a511f3469354b1d180ea4e031e56968040", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3ecf52a6394009877a6771c871603c13fd035f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3ecf52a6394009877a6771c871603c13fd035f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c3ecf52a6394009877a6771c871603c13fd035f", "patch": "@@ -1,3 +1,8 @@\n+2016-07-08  Alan Hayward  <alan.hayward@arm.com>\n+\n+\tPR tree-optimization/71667\n+\t* gcc.dg/vect/pr71667.c: New\n+\n 2016-07-08  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/torture/pr71606.c: New test."}, {"sha": "e7012efa882a5497b0a6099c3d853f9eb375cc53", "filename": "gcc/testsuite/gcc.dg/vect/pr71667.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3ecf52a6394009877a6771c871603c13fd035f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71667.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3ecf52a6394009877a6771c871603c13fd035f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71667.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71667.c?ref=3c3ecf52a6394009877a6771c871603c13fd035f", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-g\" } */\n+\n+unsigned int mu;\n+int pt;\n+\n+void\n+qf (void)\n+{\n+  int gy;\n+  long int vz;\n+\n+  for (;;)\n+    {\n+      for (gy = 0; gy < 80; ++gy)\n+      {\n+\tvz = mu;\n+\t++mu;\n+\tpt = (vz != 0) && (pt != 0);\n+      }\n+      while (gy < 81)\n+\twhile (gy < 83)\n+\t  {\n+\t    vz = (vz != 0) ? 0 : mu;\n+\t    ++gy;\n+\t  }\n+      pt = vz;\n+      ++mu;\n+    }\n+}"}, {"sha": "97acf3cb6d3bbfb1c642c48460157c73a5bb4b8d", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3ecf52a6394009877a6771c871603c13fd035f/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3ecf52a6394009877a6771c871603c13fd035f/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=3c3ecf52a6394009877a6771c871603c13fd035f", "patch": "@@ -6354,11 +6354,12 @@ vectorizable_live_operation (gimple *stmt,\n \t: gimple_get_lhs (stmt);\n   lhs_type = TREE_TYPE (lhs);\n \n-  /* Find all uses of STMT outside the loop - there should be exactly one.  */\n+  /* Find all uses of STMT outside the loop - there should be at least one.  */\n   auto_vec<gimple *, 4> worklist;\n   FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, lhs)\n-    if (!flow_bb_inside_loop_p (loop, gimple_bb (use_stmt)))\n-\tworklist.safe_push (use_stmt);\n+    if (!flow_bb_inside_loop_p (loop, gimple_bb (use_stmt))\n+\t&& !is_gimple_debug (use_stmt))\n+      worklist.safe_push (use_stmt);\n   gcc_assert (worklist.length () >= 1);\n \n   bitsize = TYPE_SIZE (TREE_TYPE (vectype));"}]}