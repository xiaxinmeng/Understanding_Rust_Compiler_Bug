{"sha": "c80ee302a8cfff18c5a14f5ca21b9ae35c4cab2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgwZWUzMDJhOGNmZmYxOGM1YTE0ZjVjYTIxYjlhZTM1YzRjYWIyZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-23T15:13:25Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-23T15:15:40Z"}, "message": "c++: Remove some gratuitous typedefing\n\nThis is C++, we don't need 'typedef struct foo foo;'. Oh, and bool\nbitfields are a thing.\n\n\tgcc/cp/\n\t* name-lookup.h (typedef cxx_binding): Delete tdef.\n\t(typedef cp_binding_level): Likewise.\n\t(struct cxx_binding): Flags are bools.", "tree": {"sha": "93a355773e84616eddfaf61050278f9ae50a7e5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93a355773e84616eddfaf61050278f9ae50a7e5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c80ee302a8cfff18c5a14f5ca21b9ae35c4cab2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80ee302a8cfff18c5a14f5ca21b9ae35c4cab2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c80ee302a8cfff18c5a14f5ca21b9ae35c4cab2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80ee302a8cfff18c5a14f5ca21b9ae35c4cab2e/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da13b7737662da11f8fefb28eaf4ed7c50c51767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da13b7737662da11f8fefb28eaf4ed7c50c51767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da13b7737662da11f8fefb28eaf4ed7c50c51767"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "5d2d364fc3a83ae4a76d27dc619ca89ab7e1fe86", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80ee302a8cfff18c5a14f5ca21b9ae35c4cab2e/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80ee302a8cfff18c5a14f5ca21b9ae35c4cab2e/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=c80ee302a8cfff18c5a14f5ca21b9ae35c4cab2e", "patch": "@@ -47,12 +47,8 @@ struct GTY(()) binding_entry_s {\n extern void binding_table_foreach (binding_table, bt_foreach_proc, void *);\n extern binding_entry binding_table_find (binding_table, tree);\n \f\n-/* Datatype that represents binding established by a declaration between\n-   a name and a C++ entity.  */\n-typedef struct cxx_binding cxx_binding;\n-\n /* The datatype used to implement C++ scope.  */\n-typedef struct cp_binding_level cp_binding_level;\n+struct cp_binding_level;\n \n /* Nonzero if this binding is for a local scope, as opposed to a class\n    or namespace scope.  */\n@@ -62,6 +58,8 @@ typedef struct cp_binding_level cp_binding_level;\n    currently being defined.  */\n #define INHERITED_VALUE_BINDING_P(NODE) ((NODE)->value_is_inherited)\n \n+/* Datatype that represents binding established by a declaration between\n+   a name and a C++ entity.  */\n struct GTY(()) cxx_binding {\n   /* Link to chain together various bindings for this name.  */\n   cxx_binding *previous;\n@@ -71,8 +69,9 @@ struct GTY(()) cxx_binding {\n   tree type;\n   /* The scope at which this binding was made.  */\n   cp_binding_level *scope;\n-  unsigned value_is_inherited : 1;\n-  unsigned is_local : 1;\n+\n+  bool value_is_inherited : 1;\n+  bool is_local : 1;\n };\n \n /* Datatype used to temporarily save C++ bindings (for implicit"}]}