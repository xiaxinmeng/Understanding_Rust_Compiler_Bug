{"sha": "0dddb42d9003167d9485ef1079f0ecc8d37e34a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRkZGI0MmQ5MDAzMTY3ZDk0ODVlZjEwNzlmMGVjYzhkMzdlMzRhNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-23T13:46:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-02-23T13:46:04Z"}, "message": "(expand_builtin...\n\n(expand_builtin, case BUILT_IN_SETJMP): Set CONST_CALL_P on\nNOTE_INSN_SETJMP instead of emitting USE insns for call-saved regs.\n\nFrom-SVN: r11340", "tree": {"sha": "a214199a0a32a6d8076a1fa57e371648772a35a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a214199a0a32a6d8076a1fa57e371648772a35a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dddb42d9003167d9485ef1079f0ecc8d37e34a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dddb42d9003167d9485ef1079f0ecc8d37e34a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dddb42d9003167d9485ef1079f0ecc8d37e34a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dddb42d9003167d9485ef1079f0ecc8d37e34a5/comments", "author": null, "committer": null, "parents": [{"sha": "6cab873196ddb5b6b5c026f5eed50f12e87b6265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cab873196ddb5b6b5c026f5eed50f12e87b6265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cab873196ddb5b6b5c026f5eed50f12e87b6265"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "34209b7c0345d73800d2e153ce8b162d827f05cc", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dddb42d9003167d9485ef1079f0ecc8d37e34a5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dddb42d9003167d9485ef1079f0ecc8d37e34a5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=0dddb42d9003167d9485ef1079f0ecc8d37e34a5", "patch": "@@ -8522,7 +8522,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \n \temit_queue ();\n \n-\temit_note (NULL_PTR, NOTE_INSN_SETJMP);\n+\tCONST_CALL_P (emit_note (NULL_PTR, NOTE_INSN_SETJMP)) = 1;\n \tcurrent_function_calls_setjmp = 1;\n \n \t/* We store the frame pointer and the address of lab1 in the buffer\n@@ -8553,16 +8553,9 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \temit_label (lab1);\n \n \t/* Note that setjmp clobbers FP when we get here, so we have to\n-\t   make sure it's marked as used by this function.  Also,\n-\t   some inner function might use a call-saved register, so we\n-\t   have to set up to save all of them here.  */\n+\t   make sure it's marked as used by this function.   */\n \temit_insn (gen_rtx (USE, VOIDmode, hard_frame_pointer_rtx));\n \n-\tfor (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-\t  if (! call_used_regs[i])\n-\t    emit_insn (gen_rtx (USE, VOIDmode,\n-\t\t\t\tgen_rtx (REG, reg_raw_mode[i], i)));\n-\n \t/* Now put in the code to restore the frame pointer, and argument\n \t   pointer, if needed.  The code below is from expand_end_bindings\n \t   in stmt.c; see detailed documentation there.  */"}]}