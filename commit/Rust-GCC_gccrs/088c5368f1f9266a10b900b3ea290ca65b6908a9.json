{"sha": "088c5368f1f9266a10b900b3ea290ca65b6908a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4YzUzNjhmMWY5MjY2YTEwYjkwMGIzZWEyOTBjYTY1YjY5MDhhOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-09-09T13:07:18Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-09-09T13:07:18Z"}, "message": "expmed.c (lshift_value): Take an unsigned HOST_WIDE_INT instead of an rtx/bitpos pair.\n\ngcc/\n\t* expmed.c (lshift_value): Take an unsigned HOST_WIDE_INT instead\n\tof an rtx/bitpos pair.\n\t(store_fixed_bit_field): Update accordingly.\n\nFrom-SVN: r202395", "tree": {"sha": "495ce491ab7d56be7428259e6537d8826e9ae80f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/495ce491ab7d56be7428259e6537d8826e9ae80f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/088c5368f1f9266a10b900b3ea290ca65b6908a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088c5368f1f9266a10b900b3ea290ca65b6908a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/088c5368f1f9266a10b900b3ea290ca65b6908a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088c5368f1f9266a10b900b3ea290ca65b6908a9/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69db2d57a36cf785d652970a3d96f12c47eb0b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69db2d57a36cf785d652970a3d96f12c47eb0b80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69db2d57a36cf785d652970a3d96f12c47eb0b80"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "0eb112f92d3c3c8243454c032b076169a708070f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c5368f1f9266a10b900b3ea290ca65b6908a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c5368f1f9266a10b900b3ea290ca65b6908a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=088c5368f1f9266a10b900b3ea290ca65b6908a9", "patch": "@@ -1,3 +1,9 @@\n+2013-09-09  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* expmed.c (lshift_value): Take an unsigned HOST_WIDE_INT instead\n+\tof an rtx/bitpos pair.\n+\t(store_fixed_bit_field): Update accordingly.\n+\n 2013-09-09  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* asan.c (asan_emit_stack_protection): Use gen_int_mode instead of"}, {"sha": "ba9a7b68c42823777c7c5474db7de141f5135deb", "filename": "gcc/expmed.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c5368f1f9266a10b900b3ea290ca65b6908a9/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c5368f1f9266a10b900b3ea290ca65b6908a9/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=088c5368f1f9266a10b900b3ea290ca65b6908a9", "patch": "@@ -56,7 +56,7 @@ static rtx extract_fixed_bit_field (enum machine_mode, rtx,\n \t\t\t\t    unsigned HOST_WIDE_INT,\n \t\t\t\t    unsigned HOST_WIDE_INT, rtx, int, bool);\n static rtx mask_rtx (enum machine_mode, int, int, int);\n-static rtx lshift_value (enum machine_mode, rtx, int, int);\n+static rtx lshift_value (enum machine_mode, unsigned HOST_WIDE_INT, int);\n static rtx extract_split_bit_field (rtx, unsigned HOST_WIDE_INT,\n \t\t\t\t    unsigned HOST_WIDE_INT, int);\n static void do_cmp_and_jump (rtx, rtx, enum rtx_code, enum machine_mode, rtx);\n@@ -991,7 +991,7 @@ store_fixed_bit_field (rtx op0, unsigned HOST_WIDE_INT bitsize,\n \t       || (bitsize == HOST_BITS_PER_WIDE_INT && v == -1))\n \tall_one = 1;\n \n-      value = lshift_value (mode, value, bitnum, bitsize);\n+      value = lshift_value (mode, v, bitnum);\n     }\n   else\n     {\n@@ -1862,14 +1862,15 @@ mask_rtx (enum machine_mode mode, int bitpos, int bitsize, int complement)\n }\n \n /* Return a constant integer (CONST_INT or CONST_DOUBLE) rtx with the value\n-   VALUE truncated to BITSIZE bits and then shifted left BITPOS bits.  */\n+   VALUE << BITPOS.  */\n \n static rtx\n-lshift_value (enum machine_mode mode, rtx value, int bitpos, int bitsize)\n+lshift_value (enum machine_mode mode, unsigned HOST_WIDE_INT value,\n+\t      int bitpos)\n {\n   double_int val;\n   \n-  val = double_int::from_uhwi (INTVAL (value)).zext (bitsize);\n+  val = double_int::from_uhwi (value);\n   val = val.llshift (bitpos, HOST_BITS_PER_DOUBLE_INT);\n \n   return immed_double_int_const (val, mode);"}]}