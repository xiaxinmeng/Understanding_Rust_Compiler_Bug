{"sha": "a744996112debc8f21fc2770dfb001059e01d2e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc0NDk5NjExMmRlYmM4ZjIxZmMyNzcwZGZiMDAxMDU5ZTAxZDJlMQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-09-27T17:23:27Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-09-27T17:23:27Z"}, "message": "mips.c (mips_add_cfa_restore): New function.\n\ngcc/\n2011-09-25  Bernd Schmidt  <bernds@codesourcery.com>\n\t    Richard Sandiford  <rdsandiford@googlemail.com>\n\n\t* config/mips/mips.c (mips_add_cfa_restore): New function.\n\t(mips16e_save_restore_reg): Use it.\n\t(mips_restore_reg): Likewise.  Split double FPRs for\n\tREG_CFA_RESTORE notes.\n\nCo-Authored-By: Richard Sandiford <rdsandiford@googlemail.com>\n\nFrom-SVN: r179286", "tree": {"sha": "0e9492fa9f4499ac207075f8804fec032fc0aae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e9492fa9f4499ac207075f8804fec032fc0aae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a744996112debc8f21fc2770dfb001059e01d2e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a744996112debc8f21fc2770dfb001059e01d2e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a744996112debc8f21fc2770dfb001059e01d2e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a744996112debc8f21fc2770dfb001059e01d2e1/comments", "author": null, "committer": null, "parents": [{"sha": "58ac64596ae0fecfe67e0bb27688eb3cddc67bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ac64596ae0fecfe67e0bb27688eb3cddc67bde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58ac64596ae0fecfe67e0bb27688eb3cddc67bde"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "d05ebc63a66f96e6fce6c3197a1ad36190f879ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a744996112debc8f21fc2770dfb001059e01d2e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a744996112debc8f21fc2770dfb001059e01d2e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a744996112debc8f21fc2770dfb001059e01d2e1", "patch": "@@ -1,3 +1,11 @@\n+2011-09-27  Bernd Schmidt  <bernds@codesourcery.com>\n+\t    Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips_add_cfa_restore): New function.\n+\t(mips16e_save_restore_reg): Use it.\n+\t(mips_restore_reg): Likewise.  Split double FPRs for\n+\tREG_CFA_RESTORE notes.\n+\n 2011-09-27  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR middle-end/50386"}, {"sha": "d0b6b4c2b74237dc88ff492ff5cdfdee836ce04a", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a744996112debc8f21fc2770dfb001059e01d2e1/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a744996112debc8f21fc2770dfb001059e01d2e1/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=a744996112debc8f21fc2770dfb001059e01d2e1", "patch": "@@ -8202,6 +8202,15 @@ mips_frame_set (rtx mem, rtx reg)\n \n   return set;\n }\n+\n+/* Record that the epilogue has restored call-saved register REG.  */\n+\n+static void\n+mips_add_cfa_restore (rtx reg)\n+{\n+  mips_epilogue.cfa_restores = alloc_reg_note (REG_CFA_RESTORE, reg,\n+\t\t\t\t\t       mips_epilogue.cfa_restores);\n+}\n \f\n /* If a MIPS16e SAVE or RESTORE instruction saves or restores register\n    mips16e_s2_s8_regs[X], it must also save the registers in indexes\n@@ -8393,8 +8402,7 @@ mips16e_save_restore_reg (bool restore_p, bool reg_parm_p,\n   reg = gen_rtx_REG (SImode, regno);\n   if (restore_p)\n     {\n-      mips_epilogue.cfa_restores = alloc_reg_note (REG_CFA_RESTORE, reg,\n-\t\t\t\t\t\t   mips_epilogue.cfa_restores);\n+      mips_add_cfa_restore (reg);\n       return gen_rtx_SET (VOIDmode, reg, mem);\n     }\n   if (reg_parm_p)\n@@ -10290,9 +10298,13 @@ mips_restore_reg (rtx reg, rtx mem)\n      $7 instead and adjust the return insn appropriately.  */\n   if (TARGET_MIPS16 && REGNO (reg) == RETURN_ADDR_REGNUM)\n     reg = gen_rtx_REG (GET_MODE (reg), GP_REG_FIRST + 7);\n+  else if (GET_MODE (reg) == DFmode && !TARGET_FLOAT64)\n+    {\n+      mips_add_cfa_restore (mips_subword (reg, true));\n+      mips_add_cfa_restore (mips_subword (reg, false));\n+    }\n   else\n-    mips_epilogue.cfa_restores = alloc_reg_note (REG_CFA_RESTORE, reg,\n-\t\t\t\t\t\t mips_epilogue.cfa_restores);\n+    mips_add_cfa_restore (reg);\n \n   mips_emit_save_slot_move (reg, mem, MIPS_EPILOGUE_TEMP (GET_MODE (reg)));\n   if (REGNO (reg) == REGNO (mips_epilogue.cfa_reg))"}]}