{"sha": "136cf361d69346b82a69b41ed98931c9e364c7a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2Y2YzNjFkNjkzNDZiODJhNjliNDFlZDk4OTMxYzllMzY0YzdhMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-07T00:05:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-07T00:05:08Z"}, "message": "Fix comments.\n\nFrom-SVN: r8618", "tree": {"sha": "e42a505efc059b27d2a75524d529b47562e7f263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e42a505efc059b27d2a75524d529b47562e7f263"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/136cf361d69346b82a69b41ed98931c9e364c7a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136cf361d69346b82a69b41ed98931c9e364c7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136cf361d69346b82a69b41ed98931c9e364c7a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136cf361d69346b82a69b41ed98931c9e364c7a1/comments", "author": null, "committer": null, "parents": [{"sha": "4bc3bc607a06d3feb6c990b895f36b6d44ad3243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc3bc607a06d3feb6c990b895f36b6d44ad3243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bc3bc607a06d3feb6c990b895f36b6d44ad3243"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ebb34b0acc0ce1777f48a9f91e03da266da86065", "filename": "gcc/integrate.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136cf361d69346b82a69b41ed98931c9e364c7a1/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136cf361d69346b82a69b41ed98931c9e364c7a1/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=136cf361d69346b82a69b41ed98931c9e364c7a1", "patch": "@@ -1649,8 +1649,8 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n   global_const_equiv_map = map->const_equiv_map;\n   global_const_equiv_map_size = map->const_equiv_map_size;\n \n-  /* If the called fucntion does an alloca, save and restore the\n-     frame pointer around the call.  This saves stack space, but\n+  /* If the called function does an alloca, save and restore the\n+     stack pointer around the call.  This saves stack space, but\n      also is required if this inline is being done between two\n      pushes.  */\n   if (FUNCTION_FLAGS (header) & FUNCTION_FLAGS_CALLS_ALLOCA)"}]}