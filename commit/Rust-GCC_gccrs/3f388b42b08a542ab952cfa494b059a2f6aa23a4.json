{"sha": "3f388b42b08a542ab952cfa494b059a2f6aa23a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YzODhiNDJiMDhhNTQyYWI5NTJjZmE0OTRiMDU5YTJmNmFhMjNhNA==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-02-09T01:57:21Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-02-09T01:57:21Z"}, "message": "dwarf2.h (DW_CFA_GNU_negative_offset_extended): New constant.\n\n* dwarf2.h (DW_CFA_GNU_negative_offset_extended): New constant.\n* dwarf2out.c (dwarf_cfi_name): Print name of new constant.\n(reg_save): Use DW_CFA_GNU_negative_offset_extended when needed.\n(output_cfi): Handle output of DW_CFA_GNU_negative_offset_extended.\n* frame.c (execute_cfa_insn): Handle\nDW_CFA_GNU_negative_offset_extended.\n\nFrom-SVN: r31858", "tree": {"sha": "11e7f697d85ef54dbc47591bc4f45867fc164631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11e7f697d85ef54dbc47591bc4f45867fc164631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f388b42b08a542ab952cfa494b059a2f6aa23a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f388b42b08a542ab952cfa494b059a2f6aa23a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f388b42b08a542ab952cfa494b059a2f6aa23a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f388b42b08a542ab952cfa494b059a2f6aa23a4/comments", "author": null, "committer": null, "parents": [{"sha": "5568fb48cc080bfcf8164b60e90f489130b0ea2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5568fb48cc080bfcf8164b60e90f489130b0ea2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5568fb48cc080bfcf8164b60e90f489130b0ea2e"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "4aab454f101758a30342579e22feeb947ee06f8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f388b42b08a542ab952cfa494b059a2f6aa23a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f388b42b08a542ab952cfa494b059a2f6aa23a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f388b42b08a542ab952cfa494b059a2f6aa23a4", "patch": "@@ -1,3 +1,12 @@\n+2000-02-08  Geoff Keating  <geoffk@cygnus.com>\n+\n+\t* dwarf2.h (DW_CFA_GNU_negative_offset_extended): New constant.\n+\t* dwarf2out.c (dwarf_cfi_name): Print name of new constant.\n+\t(reg_save): Use DW_CFA_GNU_negative_offset_extended when needed.\n+\t(output_cfi): Handle output of DW_CFA_GNU_negative_offset_extended.\n+\t* frame.c (execute_cfa_insn): Handle \n+\tDW_CFA_GNU_negative_offset_extended.\n+\n 2000-02-08  Richard Henderson  <rth@cygnus.com>\n \n \t* flow.c (tidy_fallthru_edges): Split out from ..."}, {"sha": "d0ca2451b7697ea903568f599327ce1766be6bc9", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f388b42b08a542ab952cfa494b059a2f6aa23a4/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f388b42b08a542ab952cfa494b059a2f6aa23a4/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=3f388b42b08a542ab952cfa494b059a2f6aa23a4", "patch": "@@ -1,6 +1,7 @@\n /* Declarations and definitions of codes relating to the DWARF2 symbolic\n    debugging information format.\n-   Copyright (C) 1992, 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1995, 1996, 1997, 2000 \n+   Free Software Foundation, Inc.\n    Contributed by Gary Funck (gary@intrepid.com).  Derived from the\n    DWARF 1 implementation written by Ron Guilmette (rfg@monkeys.com).\n \n@@ -501,7 +502,8 @@ enum dwarf_call_frame_info\n \n     /* GNU extensions */\n     DW_CFA_GNU_window_save = 0x2d,\n-    DW_CFA_GNU_args_size = 0x2e\n+    DW_CFA_GNU_args_size = 0x2e,\n+    DW_CFA_GNU_negative_offset_extended = 0x2f\n   };\n \n #define DW_CIE_ID\t  0xffffffff"}, {"sha": "c363869a26becfb67f25d1457fe12ea6468f14fd", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f388b42b08a542ab952cfa494b059a2f6aa23a4/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f388b42b08a542ab952cfa494b059a2f6aa23a4/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=3f388b42b08a542ab952cfa494b059a2f6aa23a4", "patch": "@@ -643,6 +643,8 @@ dwarf_cfi_name (cfi_opc)\n       return \"DW_CFA_GNU_window_save\";\n     case DW_CFA_GNU_args_size:\n       return \"DW_CFA_GNU_args_size\";\n+    case DW_CFA_GNU_negative_offset_extended:\n+      return \"DW_CFA_GNU_negative_offset_extended\";\n \n     default:\n       return \"DW_CFA_<unknown>\";\n@@ -872,7 +874,10 @@ reg_save (label, reg, sreg, offset)\n \n       offset /= DWARF_CIE_DATA_ALIGNMENT;\n       if (offset < 0)\n-\tabort ();\n+\t{\n+\t  cfi->dw_cfi_opc = DW_CFA_GNU_negative_offset_extended;\n+\t  offset = -offset;\n+\t}\n       cfi->dw_cfi_oprnd2.dw_cfi_offset = offset;\n     }\n   else\n@@ -1559,6 +1564,7 @@ output_cfi (cfi, fde)\n \t  break;\n #endif\n \tcase DW_CFA_offset_extended:\n+\tcase DW_CFA_GNU_negative_offset_extended:\n \tcase DW_CFA_def_cfa:\n \t  output_uleb128 (cfi->dw_cfi_oprnd1.dw_cfi_reg_num);\n           fputc ('\\n', asm_out_file);"}, {"sha": "79ba78ac149a9706cf3a385fe1701e8cf694f25d", "filename": "gcc/frame.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f388b42b08a542ab952cfa494b059a2f6aa23a4/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f388b42b08a542ab952cfa494b059a2f6aa23a4/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=3f388b42b08a542ab952cfa494b059a2f6aa23a4", "patch": "@@ -795,6 +795,14 @@ execute_cfa_insn (void *p, struct frame_state_internal *state,\n       state->s.args_size = offset;\n       break;\n \n+    case DW_CFA_GNU_negative_offset_extended:\n+      p = decode_uleb128 (p, &reg);\n+      p = decode_uleb128 (p, &offset);\n+      offset *= info->data_align;\n+      state->s.saved[reg] = REG_SAVED_OFFSET;\n+      state->s.reg_or_offset[reg] = -offset;\n+      break;\n+\n     default:\n       abort ();\n     }"}]}