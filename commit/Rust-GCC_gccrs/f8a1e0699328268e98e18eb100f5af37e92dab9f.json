{"sha": "f8a1e0699328268e98e18eb100f5af37e92dab9f", "node_id": "C_kwDOANBUbNoAKGY4YTFlMDY5OTMyODI2OGU5OGUxOGViMTAwZjVhZjM3ZTkyZGFiOWY", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-08-28T18:09:45Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-11-05T20:58:36Z"}, "message": "Darwin, aarch64 : Ada fixes for hosted tools.\n\nThis will allow someone (with an existing Ada compiler on the\nplatform - which can be provided by the experimental aarch64-darwin\nbranch) - to build the host tools (gnatmake and friends) for a\nnon-native cross.\n\nThe existing provisions for iOS are OK for cross-compilation from\nan x86-64-darwin platform, but we need some adjustments so that these\nhost tools can be built to run on aarch64-darwin.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/ada/\n\n\t* gcc-interface/Make-lang.in: Use iOS signal trampoline code\n\tfor hosted Ada tools.\n\t* sigtramp-ios.c: Wrap the declarations in extern \"C\" when\n\tthe code is built by a C++ compiler.", "tree": {"sha": "a448ab509c9af3a2194e9320ea9b1b541d4682be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a448ab509c9af3a2194e9320ea9b1b541d4682be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8a1e0699328268e98e18eb100f5af37e92dab9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a1e0699328268e98e18eb100f5af37e92dab9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a1e0699328268e98e18eb100f5af37e92dab9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a1e0699328268e98e18eb100f5af37e92dab9f/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "834c8749ced550af3f17ebae4072fb7dfb90d271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834c8749ced550af3f17ebae4072fb7dfb90d271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834c8749ced550af3f17ebae4072fb7dfb90d271"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "ab5fb72623b487113aba6e2e4af4b2fbfdf58e56", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a1e0699328268e98e18eb100f5af37e92dab9f/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a1e0699328268e98e18eb100f5af37e92dab9f/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=f8a1e0699328268e98e18eb100f5af37e92dab9f", "patch": "@@ -725,6 +725,14 @@ endif\n # For unwind-pe.h\n CFLAGS-ada/raise-gcc.o += -I$(srcdir)/../libgcc -DEH_MECHANISM_$(EH_MECHANISM)\n \n+# Under aarch64 darwin, we need to include the iOS signal trampoline.\n+\n+ifeq ($(strip $(filter-out aarch64 arm64 darwin%,$(host_cpu) $(host_os))),)\n+  EXTRA_HOST_OBJS=ada/sigtramp-ios.o\n+else\n+  EXTRA_HOST_OBJS =\n+endif\n+\n ada/libgnat/s-excmac.o: ada/libgnat/s-excmac.ads ada/libgnat/s-excmac.adb\n \n ada/libgnat/s-excmac.ads: $(srcdir)/ada/libgnat/s-excmac__$(EH_MECHANISM).ads\n@@ -738,16 +746,16 @@ ada/libgnat/s-excmac.adb: $(srcdir)/ada/libgnat/s-excmac__$(EH_MECHANISM).adb\n # Needs to be built with CC=gcc\n # Since the RTL should be built with the latest compiler, remove the\n #  stamp target in the parent directory whenever gnat1 is rebuilt\n-gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target.a \\\n-\t\t$(LIBDEPS) $(ada.prev)\n+gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) $(EXTRA_HOST_OBJS) libcommon-target.a \\\n+\t\t$(EXTRA_HOST_OBJS) $(LIBDEPS) $(ada.prev)\n \t@$(call LINK_PROGRESS,$(INDEX.ada),start)\n-\t+$(GCC_LLINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) $(CFLAGS) \\\n+\t+$(GCC_LLINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) $(EXTRA_HOST_OBJS) $(CFLAGS) \\\n \t  libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(GNATLIB)\n \t$(RM) stamp-gnatlib2-rts stamp-tools\n \t@$(call LINK_PROGRESS,$(INDEX.ada),end)\n \n-gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBDEPS)\n-\t+$(GCC_LINK) -o $@ $(CFLAGS) ada/b_gnatb.o $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(GNATLIB)\n+gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) $(EXTRA_HOST_OBJS) ggc-none.o libcommon-target.a $(LIBDEPS)\n+\t+$(GCC_LINK) -o $@ $(CFLAGS) ada/b_gnatb.o $(GNATBIND_OBJS) $(EXTRA_HOST_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(GNATLIB)\n \n # use target-gcc target-gnatmake target-gnatbind target-gnatlink\n gnattools: $(GCC_PARTS) $(CONFIG_H) prefix.o force"}, {"sha": "8403a1865ea8b6014d78b4051615b1ddbfb7033b", "filename": "gcc/ada/sigtramp-ios.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a1e0699328268e98e18eb100f5af37e92dab9f/gcc%2Fada%2Fsigtramp-ios.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a1e0699328268e98e18eb100f5af37e92dab9f/gcc%2Fada%2Fsigtramp-ios.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-ios.c?ref=f8a1e0699328268e98e18eb100f5af37e92dab9f", "patch": "@@ -71,6 +71,10 @@\n \n /* sigtramp stub providing unwind info for common registers.  */\n \n+#if defined(__cplusplus)\n+extern \"C\" {\n+#endif\n+\n extern void __gnat_sigtramp_common\n   (int signo, void *siginfo, void *sigcontext,\n    __sigtramphandler_t * handler);\n@@ -87,6 +91,10 @@ void __gnat_sigtramp (int signo, void *si, void *ucontext,\n   __gnat_sigtramp_common (signo, si, mcontext, handler);\n }\n \n+#if defined(__cplusplus)\n+}\n+#endif\n+\n /* asm string construction helpers.  */\n \n #define STR(TEXT) #TEXT"}]}