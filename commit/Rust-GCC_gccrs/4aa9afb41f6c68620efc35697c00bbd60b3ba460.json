{"sha": "4aa9afb41f6c68620efc35697c00bbd60b3ba460", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFhOWFmYjQxZjZjNjg2MjBlZmMzNTY5N2MwMGJiZDYwYjNiYTQ2MA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "francois.cppdevs@free.fr", "date": "2010-12-02T21:05:29Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2010-12-02T21:05:29Z"}, "message": "2.cc: Hide explicit instantiation with non default constructible type ...\n\n2010-12-02  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>                                                                                                                                                            \n                                                                                                                                                                                                                   \n\t* testsuite/23_containers/vector/requirements/explicit_instantiation/                                                                                                                                      \n\t2.cc: Hide explicit instantiation with non default constructible type                                                                                                                                      \n\tin C++0x mode.                                                                                                                                                                                             \n\t* testsuite/23_containers/deque/requirements/explicit_instantiation/                                                                                                                                       \n\t2.cc: Likewise                                                                                                                                                                                             \n\t* testsuite/23_containers/list/requirements/explicit_instantiation/\n\t2.cc: Likewise.\n\nFrom-SVN: r167391", "tree": {"sha": "3df348817184aa248ab7a73f3b676e402a6cd71d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3df348817184aa248ab7a73f3b676e402a6cd71d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4aa9afb41f6c68620efc35697c00bbd60b3ba460", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aa9afb41f6c68620efc35697c00bbd60b3ba460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aa9afb41f6c68620efc35697c00bbd60b3ba460", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aa9afb41f6c68620efc35697c00bbd60b3ba460/comments", "author": null, "committer": null, "parents": [{"sha": "6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "7d110a31e10b1bc5cda792adb138bb484daa0615", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aa9afb41f6c68620efc35697c00bbd60b3ba460/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aa9afb41f6c68620efc35697c00bbd60b3ba460/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4aa9afb41f6c68620efc35697c00bbd60b3ba460", "patch": "@@ -1,3 +1,13 @@\n+2010-12-02  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n+\n+\t* testsuite/23_containers/vector/requirements/explicit_instantiation/\n+\t2.cc: Hide explicit instantiation with non default constructible type\n+\tin C++0x mode.\n+\t* testsuite/23_containers/deque/requirements/explicit_instantiation/\n+\t2.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/explicit_instantiation/\n+\t2.cc: Likewise.\n+\n 2010-12-02  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR libstdc++/43738\n@@ -7,8 +17,8 @@\n \n 2010-12-01  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n \n-\t* testsuite/23_containers/deque/cons/2.cc: Fix to explicitely invoke\n-\tthe copy construtor with or without C++0x mode.\n+\t* testsuite/23_containers/deque/cons/2.cc: Fix to explicitly invoke\n+\tthe copy constructor with or without C++0x mode.\n \t* testsuite/23_containers/vector/cons/4.cc: Likewise.\n \t\t\t\n 2010-12-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>"}, {"sha": "82efd2605b56929087995cfeb227d5b51d4d909e", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aa9afb41f6c68620efc35697c00bbd60b3ba460/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aa9afb41f6c68620efc35697c00bbd60b3ba460/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4aa9afb41f6c68620efc35697c00bbd60b3ba460", "patch": "@@ -19,9 +19,12 @@\n // This file tests explicit instantiation of library containers\n \n #include <deque>\n-#include <testsuite_hooks.h>\n #include <testsuite_api.h>\n \n // { dg-do compile }\n \n+// N.B. In C++0x mode we cannot instantiate with T == NonDefaultConstructible\n+// because of 23.3.2.1.4\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n template class std::deque<__gnu_test::NonDefaultConstructible>;\n+#endif"}, {"sha": "50ae785600b953230d68e46bc35a8a9971c19a3f", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aa9afb41f6c68620efc35697c00bbd60b3ba460/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aa9afb41f6c68620efc35697c00bbd60b3ba460/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4aa9afb41f6c68620efc35697c00bbd60b3ba460", "patch": "@@ -19,9 +19,12 @@\n // This file tests explicit instantiation of library containers\n \n #include <list>\n-#include <testsuite_hooks.h>\n #include <testsuite_api.h>\n \n // { dg-do compile }\n \n+// N.B. In C++0x mode we cannot instantiate with T == NonDefaultConstructible\n+// because of 23.3.4.1.4\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n template class std::list<__gnu_test::NonDefaultConstructible>;\n+#endif"}, {"sha": "4ec749b73574475340dd54d3559e0718858b8d27", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aa9afb41f6c68620efc35697c00bbd60b3ba460/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aa9afb41f6c68620efc35697c00bbd60b3ba460/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4aa9afb41f6c68620efc35697c00bbd60b3ba460", "patch": "@@ -19,9 +19,12 @@\n // This file tests explicit instantiation of library containers\n \n #include <vector>\n-#include <testsuite_hooks.h>\n #include <testsuite_api.h>\n \n // { dg-do compile }\n \n+// N.B. In C++0x mode we cannot instantiate with T == NonDefaultConstructible\n+// because of 23.4.1.1.4\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n template class std::vector<__gnu_test::NonDefaultConstructible>;\n+#endif"}]}