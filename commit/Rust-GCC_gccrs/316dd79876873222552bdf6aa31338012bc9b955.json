{"sha": "316dd79876873222552bdf6aa31338012bc9b955", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE2ZGQ3OTg3Njg3MzIyMjU1MmJkZjZhYTMxMzM4MDEyYmM5Yjk1NQ==", "commit": {"author": {"name": "prathamesh.kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2021-06-21T09:22:54Z"}, "committer": {"name": "prathamesh.kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2021-06-21T09:22:54Z"}, "message": "arm/66791: Replace builtins in vceq_* (a, b) with a == b.\n\ngcc/ChangeLog:\n\t* config/arm/arm_neon.h (vceq_s8): Replace builtin with __a == __b.\n\t(vceq_s16): Likewise.\n\t(vceq_s32): Likewise.\n\t(vceq_u8): Likewise.\n\t(vceq_u16): Likewise.\n\t(vceq_u32): Likewise.\n\t(vceq_p8): Likewise.\n\t(vceqq_s8): Likewise.\n\t(vceqq_s16): Likewise.\n\t(vceqq_s32): Likewise.\n\t(vceqq_u8): Likewise.\n\t(vceqq_u16): Likewise.\n\t(vceqq_u32): Likewise.\n\t(vceqq_p8): Likewise.\n\t(vceq_f32): Gate __a == __b on __FAST_MATH__.\n\t(vceqq_f32): Likewise.\n\t(vceq_f16): Likewise.\n\t(vceqq_f16): Likewise.", "tree": {"sha": "075bc9ce6339b8f102affdcd47ec71190b4bd900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/075bc9ce6339b8f102affdcd47ec71190b4bd900"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/316dd79876873222552bdf6aa31338012bc9b955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316dd79876873222552bdf6aa31338012bc9b955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/316dd79876873222552bdf6aa31338012bc9b955", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316dd79876873222552bdf6aa31338012bc9b955/comments", "author": null, "committer": null, "parents": [{"sha": "29a539a675b8ffd8e20fd3926d6ba0482ea0f275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a539a675b8ffd8e20fd3926d6ba0482ea0f275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a539a675b8ffd8e20fd3926d6ba0482ea0f275"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "7a800062f9e0a38a5a85a337f9b5beda42937b7b", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 30, "deletions": 14, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/316dd79876873222552bdf6aa31338012bc9b955/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/316dd79876873222552bdf6aa31338012bc9b955/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=316dd79876873222552bdf6aa31338012bc9b955", "patch": "@@ -2359,112 +2359,120 @@ __extension__ extern __inline uint8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_s8 (int8x8_t __a, int8x8_t __b)\n {\n-  return (uint8x8_t)__builtin_neon_vceqv8qi (__a, __b);\n+  return (uint8x8_t) (__a == __b);\n }\n \n __extension__ extern __inline uint16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_s16 (int16x4_t __a, int16x4_t __b)\n {\n-  return (uint16x4_t)__builtin_neon_vceqv4hi (__a, __b);\n+  return (uint16x4_t) (__a == __b);\n }\n \n __extension__ extern __inline uint32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_s32 (int32x2_t __a, int32x2_t __b)\n {\n-  return (uint32x2_t)__builtin_neon_vceqv2si (__a, __b);\n+  return (uint32x2_t) (__a == __b);\n }\n \n __extension__ extern __inline uint32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_f32 (float32x2_t __a, float32x2_t __b)\n {\n+#ifdef __FAST_MATH__\n+  return (uint32x2_t) (__a == __b);\n+#else\n   return (uint32x2_t)__builtin_neon_vceqv2sf (__a, __b);\n+#endif\n }\n \n __extension__ extern __inline uint8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_u8 (uint8x8_t __a, uint8x8_t __b)\n {\n-  return (uint8x8_t)__builtin_neon_vceqv8qi ((int8x8_t) __a, (int8x8_t) __b);\n+  return (uint8x8_t) (__a == __b);\n }\n \n __extension__ extern __inline uint16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_u16 (uint16x4_t __a, uint16x4_t __b)\n {\n-  return (uint16x4_t)__builtin_neon_vceqv4hi ((int16x4_t) __a, (int16x4_t) __b);\n+  return (uint16x4_t) (__a == __b);\n }\n \n __extension__ extern __inline uint32x2_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_u32 (uint32x2_t __a, uint32x2_t __b)\n {\n-  return (uint32x2_t)__builtin_neon_vceqv2si ((int32x2_t) __a, (int32x2_t) __b);\n+  return (uint32x2_t) (__a == __b);\n }\n \n __extension__ extern __inline uint8x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_p8 (poly8x8_t __a, poly8x8_t __b)\n {\n-  return (uint8x8_t)__builtin_neon_vceqv8qi ((int8x8_t) __a, (int8x8_t) __b);\n+  return (uint8x8_t) (__a == __b);\n }\n \n __extension__ extern __inline uint8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_s8 (int8x16_t __a, int8x16_t __b)\n {\n-  return (uint8x16_t)__builtin_neon_vceqv16qi (__a, __b);\n+  return (uint8x16_t) (__a == __b);\n }\n \n __extension__ extern __inline uint16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_s16 (int16x8_t __a, int16x8_t __b)\n {\n-  return (uint16x8_t)__builtin_neon_vceqv8hi (__a, __b);\n+  return (uint16x8_t) (__a == __b);\n }\n \n __extension__ extern __inline uint32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_s32 (int32x4_t __a, int32x4_t __b)\n {\n-  return (uint32x4_t)__builtin_neon_vceqv4si (__a, __b);\n+  return (uint32x4_t) (__a == __b);\n }\n \n __extension__ extern __inline uint32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_f32 (float32x4_t __a, float32x4_t __b)\n {\n+#ifdef __FAST_MATH__\n+  return (uint32x4_t) (__a == __b);\n+#else\n   return (uint32x4_t)__builtin_neon_vceqv4sf (__a, __b);\n+#endif\n }\n \n __extension__ extern __inline uint8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_u8 (uint8x16_t __a, uint8x16_t __b)\n {\n-  return (uint8x16_t)__builtin_neon_vceqv16qi ((int8x16_t) __a, (int8x16_t) __b);\n+  return (uint8x16_t) (__a == __b);\n }\n \n __extension__ extern __inline uint16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_u16 (uint16x8_t __a, uint16x8_t __b)\n {\n-  return (uint16x8_t)__builtin_neon_vceqv8hi ((int16x8_t) __a, (int16x8_t) __b);\n+  return (uint16x8_t) (__a == __b);\n }\n \n __extension__ extern __inline uint32x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_u32 (uint32x4_t __a, uint32x4_t __b)\n {\n-  return (uint32x4_t)__builtin_neon_vceqv4si ((int32x4_t) __a, (int32x4_t) __b);\n+  return (uint32x4_t) (__a == __b);\n }\n \n __extension__ extern __inline uint8x16_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_p8 (poly8x16_t __a, poly8x16_t __b)\n {\n-  return (uint8x16_t)__builtin_neon_vceqv16qi ((int8x16_t) __a, (int8x16_t) __b);\n+  return (uint8x16_t) (__a == __b);\n }\n \n __extension__ extern __inline uint8x8_t\n@@ -17195,14 +17203,22 @@ __extension__ extern __inline uint16x4_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceq_f16 (float16x4_t __a, float16x4_t __b)\n {\n+#ifdef __FAST_MATH__\n+  return (uint16x4_t) (__a == __b);\n+#else\n   return (uint16x4_t)__builtin_neon_vceqv4hf (__a, __b);\n+#endif\n }\n \n __extension__ extern __inline uint16x8_t\n __attribute__  ((__always_inline__, __gnu_inline__, __artificial__))\n vceqq_f16 (float16x8_t __a, float16x8_t __b)\n {\n+#ifdef __FAST_MATH__\n+  return (uint16x8_t) (__a == __b);\n+#else\n   return (uint16x8_t)__builtin_neon_vceqv8hf (__a, __b);\n+#endif\n }\n \n __extension__ extern __inline uint16x4_t"}]}