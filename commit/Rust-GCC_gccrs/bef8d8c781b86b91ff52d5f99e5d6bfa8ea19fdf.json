{"sha": "bef8d8c781b86b91ff52d5f99e5d6bfa8ea19fdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVmOGQ4Yzc4MWI4NmI5MWZmNTJkNWY5OWU1ZDZiZmE4ZWExOWZkZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-28T19:32:11Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-28T19:32:11Z"}, "message": "(cpu_type, sparc_cpu_type): Rename to arch_type and sparc_arch_type.\n\n(cpu_type, sparc_cpu_type): Rename to arch_type and\nsparc_arch_type.\n(CPP_SPEC): Handle -msupersparc.\n(MASK_SUPERSPARC, TARGET_SUPERSPARC): New macros.\n(TARGET_SWITCHES): Add -msupersparc and -mcypress.\n(ADJUST_COST): New macro.\n\nFrom-SVN: r7587", "tree": {"sha": "7d69f188b0f9241596b47985e497499cb657dac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d69f188b0f9241596b47985e497499cb657dac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bef8d8c781b86b91ff52d5f99e5d6bfa8ea19fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef8d8c781b86b91ff52d5f99e5d6bfa8ea19fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bef8d8c781b86b91ff52d5f99e5d6bfa8ea19fdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef8d8c781b86b91ff52d5f99e5d6bfa8ea19fdf/comments", "author": null, "committer": null, "parents": [{"sha": "c180bd1ee8abb276424fe91e3170fa92d85b76da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c180bd1ee8abb276424fe91e3170fa92d85b76da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c180bd1ee8abb276424fe91e3170fa92d85b76da"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "3afe8ab3fe7d2ef66ca5e94b2d9c7a631442db34", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef8d8c781b86b91ff52d5f99e5d6bfa8ea19fdf/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef8d8c781b86b91ff52d5f99e5d6bfa8ea19fdf/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=bef8d8c781b86b91ff52d5f99e5d6bfa8ea19fdf", "patch": "@@ -37,13 +37,13 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    to #define TARGET_V9 as 0 (and potentially other v9-only options), and\n    #undef SPARCV9.  */\n \n-/* What cpu we're compiling for.  This must coincide with the `cpu_type'\n-   attribute in the .md file.  The names were chosen to avoid potential\n-   misunderstandings with the various 32 bit flavors (v7, v8, etc.): if we\n-   used CPU_V9 then we'd want to use something like CPU_V8 but that could be\n-   misleading and CPU_NOTV9 sounds klunky.  */\n-enum cpu_type { CPU_32BIT, CPU_64BIT };\n-extern enum cpu_type sparc_cpu_type;\n+/* What architecture we're compiling for.  This must coincide with the\n+   `arch_type' attribute in the .md file.  The names were chosen to avoid\n+   potential misunderstandings with the various 32 bit flavors (v7, v8, etc.):\n+   if we used ARCH_V9 then we'd want to use something like ARCH_V8 but that\n+   could be misleading and ARCH_NOTV9 sounds klunky.  */\n+enum arch_type { ARCH_32BIT, ARCH_64BIT };\n+extern enum arch_type sparc_arch_type;\n \n /* Names to predefine in the preprocessor for this target machine.  */\n \n@@ -76,6 +76,7 @@ extern enum cpu_type sparc_cpu_type;\n %{msparclite:-D__sparclite__} \\\n %{mf930:-D__sparclite__} %{mf934:-D__sparclite__} \\\n %{mv8:-D__sparc_v8__} \\\n+%{msupersparc:-D__supersparc__ -D__sparc_v8__}\t\\\n %{!mv9:-Acpu(sparc) -Amachine(sparc)} \\\n %{mv9:-D__sparc_v9__ -Acpu(sparc64) -Amachine(sparc64)} \\\n %{mint64:-D__INT_MAX__=9223372036854775807LL -D__LONG_MAX__=9223372036854775807LL} \\\n@@ -167,7 +168,11 @@ extern int target_flags;\n #define MASK_UNALIGNED_DOUBLES 4\n #define TARGET_UNALIGNED_DOUBLES (target_flags & MASK_UNALIGNED_DOUBLES)\n \n-/* ??? Bits 0x38 are currently unused.  */\n+/* ??? Bits 0x18 are currently unused.  */\n+\n+/* Nonzero means we should schedule code for the TMS390Z55 SuperSparc chip.  */\n+#define MASK_SUPERSPARC 0x20\n+#define TARGET_SUPERSPARC (target_flags & MASK_SUPERSPARC)\n \n /* Nonzero means that we should generate code for a v8 sparc.  */\n #define MASK_V8 0x40\n@@ -281,6 +286,8 @@ extern int target_flags;\n     {\"no-epilogue\", -MASK_EPILOGUE},\t\\\n     {\"unaligned-doubles\", MASK_UNALIGNED_DOUBLES}, \\\n     {\"no-unaligned-doubles\", -MASK_UNALIGNED_DOUBLES}, \\\n+    {\"supersparc\", MASK_SUPERSPARC+MASK_V8},\t\\\n+    {\"cypress\", -MASK_SUPERSPARC-MASK_V8},\t\\\n     {\"v8\", MASK_V8},\t\t\t\\\n     {\"no-v8\", -MASK_V8},\t\t\\\n     {\"sparclite\", MASK_SPARCLITE},\t\\\n@@ -2130,6 +2137,11 @@ extern struct rtx_def *legitimize_pic_address ();\n   case FIX:\t\t\t\t\t\t\\\n     return 19;\n \n+/* Adjust the cost of dependencies.  */\n+#define ADJUST_COST(INSN,LINK,DEP,COST) \\\n+  if (TARGET_SUPERSPARC) \\\n+  (COST) = supersparc_adjust_cost (INSN, LINK, DEP, COST)\n+\n /* Conditional branches with empty delay slots have a length of two.  */\n #define ADJUST_INSN_LENGTH(INSN, LENGTH)\t\\\n   if (GET_CODE (INSN) == CALL_INSN\t\t\t\t\t\\"}]}