{"sha": "0ef1a53701b2673cab9c1a342694d66af5dc580a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVmMWE1MzcwMWIyNjczY2FiOWMxYTM0MjY5NGQ2NmFmNWRjNTgwYQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2006-05-04T02:02:01Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2006-05-04T02:02:01Z"}, "message": "re PR java/8260 (gcj -fprofile-arcs doesn't work)\n\nPR java/8260\n* coverage.c: Use get_gcov_unsigned_t() instead of\nunsigned_type_node all over.\n\nFrom-SVN: r113512", "tree": {"sha": "f4bdab40a6285b62021ff81ad58f48d1a48a14b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4bdab40a6285b62021ff81ad58f48d1a48a14b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ef1a53701b2673cab9c1a342694d66af5dc580a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef1a53701b2673cab9c1a342694d66af5dc580a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef1a53701b2673cab9c1a342694d66af5dc580a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef1a53701b2673cab9c1a342694d66af5dc580a/comments", "author": null, "committer": null, "parents": [{"sha": "e5f7bf9f5c82c90a39f41e7dfea274e2b002c11c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f7bf9f5c82c90a39f41e7dfea274e2b002c11c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5f7bf9f5c82c90a39f41e7dfea274e2b002c11c"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "31310c694088050c91268bb8c30102efea0e6c8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef1a53701b2673cab9c1a342694d66af5dc580a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef1a53701b2673cab9c1a342694d66af5dc580a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ef1a53701b2673cab9c1a342694d66af5dc580a", "patch": "@@ -1,3 +1,9 @@\n+2006-05-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR java/8260\n+\t* coverage.c: Use get_gcov_unsigned_t() instead of\n+\tunsigned_type_node all over.\n+\n 2006-05-02  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR tree-optimization/27381"}, {"sha": "38339304a306838bb2d30f43be5622c579e182a1", "filename": "gcc/coverage.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef1a53701b2673cab9c1a342694d66af5dc580a/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef1a53701b2673cab9c1a342694d66af5dc580a/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=0ef1a53701b2673cab9c1a342694d66af5dc580a", "patch": "@@ -609,7 +609,7 @@ build_fn_info_type (unsigned int counters)\n \n   array_type = build_int_cst (NULL_TREE, counters - 1);\n   array_type = build_index_type (array_type);\n-  array_type = build_array_type (unsigned_type_node, array_type);\n+  array_type = build_array_type (get_gcov_unsigned_t (), array_type);\n \n   /* counters */\n   field = build_decl (FIELD_DECL, NULL_TREE, array_type);\n@@ -647,7 +647,7 @@ build_fn_info_value (const struct function_list *function, tree type)\n   for (ix = 0; ix != GCOV_COUNTERS; ix++)\n     if (prg_ctr_mask & (1 << ix))\n       {\n-\ttree counters = build_int_cstu (unsigned_type_node,\n+\ttree counters = build_int_cstu (get_gcov_unsigned_t (),\n \t\t\t\t\tfunction->n_ctrs[ix]);\n \n \tarray_value = tree_cons (NULL_TREE, counters, array_value);\n@@ -687,7 +687,7 @@ build_ctr_info_type (void)\n   /* merge */\n   gcov_merge_fn_type =\n     build_function_type_list (void_type_node,\n-\t\t\t      gcov_ptr_type, unsigned_type_node,\n+\t\t\t      gcov_ptr_type, get_gcov_unsigned_t (),\n \t\t\t      NULL_TREE);\n   field = build_decl (FIELD_DECL, NULL_TREE,\n \t\t      build_pointer_type (gcov_merge_fn_type));\n@@ -721,7 +721,7 @@ build_ctr_info_value (unsigned int counter, tree type)\n     {\n       tree array_type;\n \n-      array_type = build_int_cstu (unsigned_type_node,\n+      array_type = build_int_cstu (get_gcov_unsigned_t (),\n \t\t\t\t   prg_n_ctrs[counter] - 1);\n       array_type = build_index_type (array_type);\n       array_type = build_array_type (TREE_TYPE (TREE_TYPE (fields)),\n@@ -850,11 +850,11 @@ build_gcov_info (void)\n     fn_info_value = null_pointer_node;\n \n   /* number of functions */\n-  field = build_decl (FIELD_DECL, NULL_TREE, unsigned_type_node);\n+  field = build_decl (FIELD_DECL, NULL_TREE, get_gcov_unsigned_t ());\n   TREE_CHAIN (field) = fields;\n   fields = field;\n   value = tree_cons (field,\n-\t\t     build_int_cstu (unsigned_type_node, n_fns),\n+\t\t     build_int_cstu (get_gcov_unsigned_t (), n_fns),\n \t\t     value);\n \n   /* fn_info table */\n@@ -864,11 +864,11 @@ build_gcov_info (void)\n   value = tree_cons (field, fn_info_value, value);\n \n   /* counter_mask */\n-  field = build_decl (FIELD_DECL, NULL_TREE, unsigned_type_node);\n+  field = build_decl (FIELD_DECL, NULL_TREE, get_gcov_unsigned_t ());\n   TREE_CHAIN (field) = fields;\n   fields = field;\n   value = tree_cons (field,\n-\t\t     build_int_cstu (unsigned_type_node, prg_ctr_mask),\n+\t\t     build_int_cstu (get_gcov_unsigned_t (), prg_ctr_mask),\n \t\t     value);\n \n   /* counters */"}]}