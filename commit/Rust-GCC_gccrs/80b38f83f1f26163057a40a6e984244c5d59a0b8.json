{"sha": "80b38f83f1f26163057a40a6e984244c5d59a0b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiMzhmODNmMWYyNjE2MzA1N2E0MGE2ZTk4NDI0NGM1ZDU5YTBiOA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2019-11-18T07:52:55Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2019-11-18T07:52:55Z"}, "message": "Add support for AVR devices from the 0-series.\n\n\tPR target/92545\n\t* config/avr/avr-arch.h (avr_mcu_t) <flash_pm_offset>: New field.\n\t* config/avr/avr-devices.c (avr_mcu_types): Adjust initializers.\n\t* config/avr/avr-mcus.def (AVR_MCU): Add respective field.\n\t* config/avr/specs.h (LINK_SPEC) <%(link_pm_base_address)>: Add.\n\t* config/avr/gen-avr-mmcu-specs.c (print_mcu)\n\t<*cpp, *cpp_mcu, *cpp_avrlibc, *link_pm_base_address>: Emit code\n\tfor spec definitions.\n\t* doc/avr-mmcu.texi: Regenerate.\n\nFrom-SVN: r278387", "tree": {"sha": "6f4439d02de44bb35fd819c85e09a88af3117a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f4439d02de44bb35fd819c85e09a88af3117a98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80b38f83f1f26163057a40a6e984244c5d59a0b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b38f83f1f26163057a40a6e984244c5d59a0b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b38f83f1f26163057a40a6e984244c5d59a0b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b38f83f1f26163057a40a6e984244c5d59a0b8/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "586bbef191b4f804289fb5ffc0e7a1a5e525bc4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/586bbef191b4f804289fb5ffc0e7a1a5e525bc4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/586bbef191b4f804289fb5ffc0e7a1a5e525bc4b"}], "stats": {"total": 788, "additions": 455, "deletions": 333}, "files": [{"sha": "6e3fab836864570568e0b77bb012ca22569bcc37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80b38f83f1f26163057a40a6e984244c5d59a0b8", "patch": "@@ -1,3 +1,17 @@\n+2019-11-18  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tAdd support for AVR devices from the 0-series.\n+\n+\tPR target/92545\n+\t* config/avr/avr-arch.h (avr_mcu_t) <flash_pm_offset>: New field.\n+\t* config/avr/avr-devices.c (avr_mcu_types): Adjust initializers.\n+\t* config/avr/avr-mcus.def (AVR_MCU): Add respective field.\n+\t* config/avr/specs.h (LINK_SPEC) <%(link_pm_base_address)>: Add.\n+\t* config/avr/gen-avr-mmcu-specs.c (print_mcu)\n+\t<*cpp, *cpp_mcu, *cpp_avrlibc, *link_pm_base_address>: Emit code\n+\tfor spec definitions.\n+\t* doc/avr-mmcu.texi: Regenerate.\n+\n 2019-11-18  Hongtao Liu  <hongtao.liu@intel.com>\n \n \tPR target/92448"}, {"sha": "e6ae9d9cd04f589c3e96e4b7694ba91d54e33e44", "filename": "gcc/config/avr/avr-arch.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Favr-arch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Favr-arch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-arch.h?ref=80b38f83f1f26163057a40a6e984244c5d59a0b8", "patch": "@@ -126,6 +126,9 @@ typedef struct\n \n   /* Flash size in bytes.  */\n   int flash_size;\n+\n+  /* Offset where flash is seen in the RAM address space.  */\n+  int flash_pm_offset;\n } avr_mcu_t;\n \n /* AVR device specific features."}, {"sha": "eb8ef382d493fe94b66f6b9a8ce03a373a1b79a1", "filename": "gcc/config/avr/avr-devices.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Favr-devices.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Favr-devices.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-devices.c?ref=80b38f83f1f26163057a40a6e984244c5d59a0b8", "patch": "@@ -117,12 +117,12 @@ avr_texinfo[] =\n const avr_mcu_t\n avr_mcu_types[] =\n {\n-#define AVR_MCU(NAME, ARCH, DEV_ATTRIBUTE, MACRO, DATA_SEC, TEXT_SEC, FLASH_SIZE)\\\n-  { NAME, ARCH, DEV_ATTRIBUTE, MACRO, DATA_SEC, TEXT_SEC, FLASH_SIZE },\n+#define AVR_MCU(NAME, ARCH, DEV_ATTRIBUTE, MACRO, DATA_SEC, TEXT_SEC, FLASH_SIZE, PMOFF) \\\n+  { NAME, ARCH, DEV_ATTRIBUTE, MACRO, DATA_SEC, TEXT_SEC, FLASH_SIZE, PMOFF },\n #include \"avr-mcus.def\"\n #undef AVR_MCU\n     /* End of list.  */\n-  { NULL, ARCH_UNKNOWN, AVR_ISA_NONE, NULL, 0, 0, 0 }\n+  { NULL, ARCH_UNKNOWN, AVR_ISA_NONE, NULL, 0, 0, 0, 0 }\n };\n \n "}, {"sha": "d0f4d9697fc004600e88569faef821b54433632f", "filename": "gcc/config/avr/avr-mcus.def", "status": "modified", "additions": 304, "deletions": 290, "changes": 594, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Favr-mcus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Favr-mcus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-mcus.def?ref=80b38f83f1f26163057a40a6e984244c5d59a0b8", "patch": "@@ -61,313 +61,327 @@\n \n        FLASH_SIZE    Flash size in bytes.\n \n+       RODATA_PM_OFFSET\n+\t\t     Either 0x0 or the offset where flash memory is mirrored\n+\t\t     into the RAM address space accessible by LD and LDS.\n+\t\t     This is only needed if that value deviates from the\n+\t\t     value for the respective family.\n+\n    \"avr2\" must be first for the \"0\" default to work as intended.  */\n \n /* Classic, <= 8K.  */\n-AVR_MCU (\"avr2\",             ARCH_AVR2, AVR_ERRATA_SKIP, NULL,                     0x0060, 0x0, 0x60000)\n+AVR_MCU (\"avr2\",             ARCH_AVR2, AVR_ERRATA_SKIP, NULL,                     0x0060, 0x0, 0x60000, 0)\n \n-AVR_MCU (\"at90s2313\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2313__\",         0x0060, 0x0, 0x800)\n-AVR_MCU (\"at90s2323\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2323__\",         0x0060, 0x0, 0x800)\n-AVR_MCU (\"at90s2333\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2333__\",         0x0060, 0x0, 0x800)\n-AVR_MCU (\"at90s2343\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2343__\",         0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny22\",         ARCH_AVR2, AVR_SHORT_SP, \"__AVR_ATtiny22__\",          0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny26\",         ARCH_AVR2, AVR_SHORT_SP, \"__AVR_ATtiny26__\",          0x0060, 0x0, 0x800)\n-AVR_MCU (\"at90s4414\",        ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S4414__\",         0x0060, 0x0, 0x1000)\n-AVR_MCU (\"at90s4433\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S4433__\",         0x0060, 0x0, 0x1000)\n-AVR_MCU (\"at90s4434\",        ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S4434__\",         0x0060, 0x0, 0x1000)\n-AVR_MCU (\"at90s8515\",        ARCH_AVR2, AVR_ERRATA_SKIP, \"__AVR_AT90S8515__\",      0x0060, 0x0, 0x2000)\n-AVR_MCU (\"at90c8534\",        ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90C8534__\",         0x0060, 0x0, 0x2000)\n-AVR_MCU (\"at90s8535\",        ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S8535__\",         0x0060, 0x0, 0x2000)\n+AVR_MCU (\"at90s2313\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2313__\",         0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"at90s2323\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2323__\",         0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"at90s2333\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2333__\",         0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"at90s2343\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2343__\",         0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny22\",         ARCH_AVR2, AVR_SHORT_SP, \"__AVR_ATtiny22__\",          0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny26\",         ARCH_AVR2, AVR_SHORT_SP, \"__AVR_ATtiny26__\",          0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"at90s4414\",        ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S4414__\",         0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"at90s4433\",        ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S4433__\",         0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"at90s4434\",        ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S4434__\",         0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"at90s8515\",        ARCH_AVR2, AVR_ERRATA_SKIP, \"__AVR_AT90S8515__\",      0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90c8534\",        ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90C8534__\",         0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90s8535\",        ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S8535__\",         0x0060, 0x0, 0x2000, 0)\n /* Classic + MOVW, <= 8K.  */\n-AVR_MCU (\"avr25\",            ARCH_AVR25, AVR_ISA_NONE, NULL,                       0x0060, 0x0, 0x2000)\n-AVR_MCU (\"ata5272\",          ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATA5272__\",          0x0100, 0x0, 0x2000)\n-AVR_MCU (\"ata6616c\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATA6616C__\",         0x0100, 0x0, 0x2000)\n-AVR_MCU (\"attiny13\",         ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny13__\",         0x0060, 0x0, 0x400)\n-AVR_MCU (\"attiny13a\",        ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny13A__\",        0x0060, 0x0, 0x400)\n-AVR_MCU (\"attiny2313\",       ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny2313__\",       0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny2313a\",      ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny2313A__\",      0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny24\",         ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny24__\",         0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny24a\",        ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny24A__\",        0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny4313\",       ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny4313__\",       0x0060, 0x0, 0x1000)\n-AVR_MCU (\"attiny44\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny44__\",         0x0060, 0x0, 0x1000)\n-AVR_MCU (\"attiny44a\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny44A__\",        0x0060, 0x0, 0x1000)\n-AVR_MCU (\"attiny441\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny441__\",        0x0100, 0x0, 0x1000)\n-AVR_MCU (\"attiny84\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny84__\",         0x0060, 0x0, 0x2000)\n-AVR_MCU (\"attiny84a\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny84A__\",        0x0060, 0x0, 0x2000)\n-AVR_MCU (\"attiny25\",         ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny25__\",         0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny45\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny45__\",         0x0060, 0x0, 0x1000)\n-AVR_MCU (\"attiny85\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny85__\",         0x0060, 0x0, 0x2000)\n-AVR_MCU (\"attiny261\",        ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny261__\",        0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny261a\",       ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny261A__\",       0x0060, 0x0, 0x800)\n-AVR_MCU (\"attiny461\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny461__\",        0x0060, 0x0, 0x1000)\n-AVR_MCU (\"attiny461a\",       ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny461A__\",       0x0060, 0x0, 0x1000)\n-AVR_MCU (\"attiny861\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny861__\",        0x0060, 0x0, 0x2000)\n-AVR_MCU (\"attiny861a\",       ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny861A__\",       0x0060, 0x0, 0x2000)\n-AVR_MCU (\"attiny43u\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny43U__\",        0x0060, 0x0, 0x1000)\n-AVR_MCU (\"attiny87\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny87__\",         0x0100, 0x0, 0x2000)\n-AVR_MCU (\"attiny48\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny48__\",         0x0100, 0x0, 0x1000)\n-AVR_MCU (\"attiny88\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny88__\",         0x0100, 0x0, 0x2000)\n-AVR_MCU (\"attiny828\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny828__\",        0x0100, 0x0, 0x2000)\n-AVR_MCU (\"attiny841\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny841__\",        0x0100, 0x0, 0x2000)\n-AVR_MCU (\"at86rf401\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_AT86RF401__\",        0x0060, 0x0, 0x800)\n+AVR_MCU (\"avr25\",            ARCH_AVR25, AVR_ISA_NONE, NULL,                       0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"ata5272\",          ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATA5272__\",          0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"ata6616c\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATA6616C__\",         0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny13\",         ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny13__\",         0x0060, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny13a\",        ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny13A__\",        0x0060, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny2313\",       ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny2313__\",       0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny2313a\",      ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny2313A__\",      0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny24\",         ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny24__\",         0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny24a\",        ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny24A__\",        0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny4313\",       ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny4313__\",       0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny44\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny44__\",         0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny44a\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny44A__\",        0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny441\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny441__\",        0x0100, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny84\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny84__\",         0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny84a\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny84A__\",        0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny25\",         ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny25__\",         0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny45\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny45__\",         0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny85\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny85__\",         0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny261\",        ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny261__\",        0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny261a\",       ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny261A__\",       0x0060, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny461\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny461__\",        0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny461a\",       ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny461A__\",       0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny861\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny861__\",        0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny861a\",       ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny861A__\",       0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny43u\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny43U__\",        0x0060, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny87\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny87__\",         0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny48\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny48__\",         0x0100, 0x0, 0x1000, 0)\n+AVR_MCU (\"attiny88\",         ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny88__\",         0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny828\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny828__\",        0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"attiny841\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny841__\",        0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"at86rf401\",        ARCH_AVR25, AVR_ISA_NONE, \"__AVR_AT86RF401__\",        0x0060, 0x0, 0x800, 0)\n /* Classic, > 8K, <= 64K.  */\n-AVR_MCU (\"avr3\",             ARCH_AVR3, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 0x6000)\n-AVR_MCU (\"at43usb355\",       ARCH_AVR3, AVR_ISA_NONE, \"__AVR_AT43USB355__\",        0x0060, 0x0, 0x6000)\n-AVR_MCU (\"at76c711\",         ARCH_AVR3, AVR_ISA_NONE, \"__AVR_AT76C711__\",          0x0060, 0x0, 0x4000)\n+AVR_MCU (\"avr3\",             ARCH_AVR3, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 0x6000, 0)\n+AVR_MCU (\"at43usb355\",       ARCH_AVR3, AVR_ISA_NONE, \"__AVR_AT43USB355__\",        0x0060, 0x0, 0x6000, 0)\n+AVR_MCU (\"at76c711\",         ARCH_AVR3, AVR_ISA_NONE, \"__AVR_AT76C711__\",          0x0060, 0x0, 0x4000, 0)\n /* Classic, == 128K.  */\n-AVR_MCU (\"avr31\",            ARCH_AVR31, AVR_ERRATA_SKIP, NULL,                    0x0060, 0x0, 0x20000)\n-AVR_MCU (\"atmega103\",        ARCH_AVR31, AVR_ERRATA_SKIP, \"__AVR_ATmega103__\",     0x0060, 0x0, 0x20000)\n-AVR_MCU (\"at43usb320\",       ARCH_AVR31, AVR_ISA_NONE, \"__AVR_AT43USB320__\",       0x0060, 0x0, 0x10000)\n+AVR_MCU (\"avr31\",            ARCH_AVR31, AVR_ERRATA_SKIP, NULL,                    0x0060, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega103\",        ARCH_AVR31, AVR_ERRATA_SKIP, \"__AVR_ATmega103__\",     0x0060, 0x0, 0x20000, 0)\n+AVR_MCU (\"at43usb320\",       ARCH_AVR31, AVR_ISA_NONE, \"__AVR_AT43USB320__\",       0x0060, 0x0, 0x10000, 0)\n /* Classic + MOVW + JMP/CALL.  */\n-AVR_MCU (\"avr35\",            ARCH_AVR35, AVR_ISA_NONE, NULL,                       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"ata5505\",          ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA5505__\",          0x0100, 0x0, 0x4000)\n-AVR_MCU (\"ata6617c\",         ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA6617C__\",         0x0100, 0x0, 0x4000)\n-AVR_MCU (\"ata664251\",        ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA664251__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"at90usb82\",        ARCH_AVR35, AVR_ISA_NONE, \"__AVR_AT90USB82__\",        0x0100, 0x0, 0x2000)\n-AVR_MCU (\"at90usb162\",       ARCH_AVR35, AVR_ISA_NONE, \"__AVR_AT90USB162__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega8u2\",        ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega8U2__\",        0x0100, 0x0, 0x2000)\n-AVR_MCU (\"atmega16u2\",       ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega16U2__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega32u2\",       ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega32U2__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"attiny167\",        ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATtiny167__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"attiny1634\",       ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATtiny1634__\",       0x0100, 0x0, 0x4000)\n+AVR_MCU (\"avr35\",            ARCH_AVR35, AVR_ISA_NONE, NULL,                       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"ata5505\",          ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA5505__\",          0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"ata6617c\",         ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA6617C__\",         0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"ata664251\",        ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA664251__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"at90usb82\",        ARCH_AVR35, AVR_ISA_NONE, \"__AVR_AT90USB82__\",        0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90usb162\",       ARCH_AVR35, AVR_ISA_NONE, \"__AVR_AT90USB162__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega8u2\",        ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega8U2__\",        0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega16u2\",       ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega16U2__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega32u2\",       ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega32U2__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"attiny167\",        ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATtiny167__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"attiny1634\",       ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATtiny1634__\",       0x0100, 0x0, 0x4000, 0)\n /* Enhanced, <= 8K.  */\n-AVR_MCU (\"avr4\",             ARCH_AVR4, AVR_ISA_NONE,  NULL,                       0x0060, 0x0, 0x2000)\n-AVR_MCU (\"ata6285\",          ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6285__\",          0x0100, 0x0, 0x2000)\n-AVR_MCU (\"ata6286\",          ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6286__\",          0x0100, 0x0, 0x2000)\n-AVR_MCU (\"ata6289\",          ARCH_AVR4, AVR_ISA_NONE, \"__AVR_ATA6289__\",           0x0100, 0x0, 0x2000)\n-AVR_MCU (\"ata6612c\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6612C__\",         0x0100, 0x0, 0x2000)\n-AVR_MCU (\"atmega8\",          ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8__\",          0x0060, 0x0, 0x2000)\n-AVR_MCU (\"atmega8a\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8A__\",         0x0060, 0x0, 0x2000)\n-AVR_MCU (\"atmega48\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48__\",         0x0100, 0x0, 0x1000)\n-AVR_MCU (\"atmega48a\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48A__\",        0x0100, 0x0, 0x1000)\n-AVR_MCU (\"atmega48p\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48P__\",        0x0100, 0x0, 0x1000)\n-AVR_MCU (\"atmega48pa\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48PA__\",       0x0100, 0x0, 0x1000)\n-AVR_MCU (\"atmega48pb\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48PB__\",       0x0100, 0x0, 0x1000)\n-AVR_MCU (\"atmega88\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88__\",         0x0100, 0x0, 0x2000)\n-AVR_MCU (\"atmega88a\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88A__\",        0x0100, 0x0, 0x2000)\n-AVR_MCU (\"atmega88p\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88P__\",        0x0100, 0x0, 0x2000)\n-AVR_MCU (\"atmega88pa\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88PA__\",       0x0100, 0x0, 0x2000)\n-AVR_MCU (\"atmega88pb\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88PB__\",       0x0100, 0x0, 0x2000)\n-AVR_MCU (\"atmega8515\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8515__\",       0x0060, 0x0, 0x2000)\n-AVR_MCU (\"atmega8535\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8535__\",       0x0060, 0x0, 0x2000)\n-AVR_MCU (\"atmega8hva\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8HVA__\",       0x0100, 0x0, 0x2000)\n-AVR_MCU (\"at90pwm1\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM1__\",         0x0100, 0x0, 0x2000)\n-AVR_MCU (\"at90pwm2\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM2__\",         0x0100, 0x0, 0x2000)\n-AVR_MCU (\"at90pwm2b\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM2B__\",        0x0100, 0x0, 0x2000)\n-AVR_MCU (\"at90pwm3\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM3__\",         0x0100, 0x0, 0x2000)\n-AVR_MCU (\"at90pwm3b\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM3B__\",        0x0100, 0x0, 0x2000)\n-AVR_MCU (\"at90pwm81\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM81__\",        0x0100, 0x0, 0x2000)\n+AVR_MCU (\"avr4\",             ARCH_AVR4, AVR_ISA_NONE,  NULL,                       0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"ata6285\",          ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6285__\",          0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"ata6286\",          ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6286__\",          0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"ata6289\",          ARCH_AVR4, AVR_ISA_NONE, \"__AVR_ATA6289__\",           0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"ata6612c\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6612C__\",         0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega8\",          ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8__\",          0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega8a\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8A__\",         0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega48\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48__\",         0x0100, 0x0, 0x1000, 0)\n+AVR_MCU (\"atmega48a\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48A__\",        0x0100, 0x0, 0x1000, 0)\n+AVR_MCU (\"atmega48p\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48P__\",        0x0100, 0x0, 0x1000, 0)\n+AVR_MCU (\"atmega48pa\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48PA__\",       0x0100, 0x0, 0x1000, 0)\n+AVR_MCU (\"atmega48pb\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48PB__\",       0x0100, 0x0, 0x1000, 0)\n+AVR_MCU (\"atmega88\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88__\",         0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega88a\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88A__\",        0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega88p\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88P__\",        0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega88pa\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88PA__\",       0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega88pb\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88PB__\",       0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega8515\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8515__\",       0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega8535\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8535__\",       0x0060, 0x0, 0x2000, 0)\n+AVR_MCU (\"atmega8hva\",       ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8HVA__\",       0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90pwm1\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM1__\",         0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90pwm2\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM2__\",         0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90pwm2b\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM2B__\",        0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90pwm3\",         ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM3__\",         0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90pwm3b\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM3B__\",        0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"at90pwm81\",        ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM81__\",        0x0100, 0x0, 0x2000, 0)\n /* Enhanced, > 8K, <= 64K.  */\n-AVR_MCU (\"avr5\",             ARCH_AVR5, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 0x4000)\n-AVR_MCU (\"ata5702m322\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5702M322__\",       0x0200, 0x0, 0x10000)\n-AVR_MCU (\"ata5782\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5782__\",           0x0200, 0x8000, 0xd000)\n-AVR_MCU (\"ata5790\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5790__\",           0x0100, 0x0, 0x4000)\n-AVR_MCU (\"ata5790n\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5790N__\",          0x0100, 0x0, 0x4000)\n-AVR_MCU (\"ata5791\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5791__\",           0x0100, 0x0, 0x4000)\n-AVR_MCU (\"ata5795\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5795__\",           0x0100, 0x0, 0x2000)\n-AVR_MCU (\"ata5831\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5831__\",           0x0200, 0x8000, 0xd000)\n-AVR_MCU (\"ata6613c\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA6613C__\",          0x0100, 0x0, 0x4000)\n-AVR_MCU (\"ata6614q\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA6614Q__\",          0x0100, 0x0, 0x8000)\n-AVR_MCU (\"ata8210\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA8210__\",           0x0200, 0x8000, 0xd000)\n-AVR_MCU (\"ata8510\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA8510__\",           0x0200, 0x8000, 0xd000)\n-AVR_MCU (\"atmega16\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16__\",          0x0060, 0x0, 0x4000)\n-AVR_MCU (\"atmega16a\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16A__\",         0x0060, 0x0, 0x4000)\n-AVR_MCU (\"atmega161\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega161__\",         0x0060, 0x0, 0x4000)\n-AVR_MCU (\"atmega162\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega162__\",         0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega163\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega163__\",         0x0060, 0x0, 0x4000)\n-AVR_MCU (\"atmega164a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164A__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega164p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164P__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega164pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164PA__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega165\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165__\",         0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega165a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165A__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega165p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165P__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega165pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165PA__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega168\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168__\",         0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega168a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168A__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega168p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168P__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega168pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168PA__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega168pb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168PB__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega169\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169__\",         0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega169a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169A__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega169p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169P__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega169pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169PA__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega16hvb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVB__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega16hvbrevb\",  ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVBREVB__\",   0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega16m1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16M1__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega16u4\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16U4__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega32a\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32A__\",         0x0060, 0x0, 0x8000)\n-AVR_MCU (\"atmega32\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32__\",          0x0060, 0x0, 0x8000)\n-AVR_MCU (\"atmega323\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega323__\",         0x0060, 0x0, 0x8000)\n-AVR_MCU (\"atmega324a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324A__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega324p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324P__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega324pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324PA__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega325\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325__\",         0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega325a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325A__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega325p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325P__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega325pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325PA__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega3250\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega3250a\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250A__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega3250p\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250P__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega3250pa\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250PA__\",      0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega328\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328__\",         0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega328p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328P__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega328pb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328PB__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega329\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329__\",         0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega329a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329A__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega329p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329P__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega329pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329PA__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega3290\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega3290a\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290A__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega3290p\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290P__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega3290pa\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290PA__\",      0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega32c1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32C1__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega32m1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32M1__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega32u4\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32U4__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega32u6\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32U6__\",        0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega406\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega406__\",         0x0100, 0x0, 0xa000)\n-AVR_MCU (\"atmega64\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64__\",          0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega64a\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64A__\",         0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega640\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega640__\",         0x0200, 0x0, 0x10000)\n-AVR_MCU (\"atmega644\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644__\",         0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega644a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644A__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega644p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644P__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega644pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644PA__\",       0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega645\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645__\",         0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega645a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645A__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega645p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645P__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega6450\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega6450a\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450A__\",       0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega6450p\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450P__\",       0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega649\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649__\",         0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega649a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649A__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega649p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649P__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega6490\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega16hva\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVA__\",       0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega16hva2\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVA2__\",      0x0100, 0x0, 0x4000)\n-AVR_MCU (\"atmega32hvb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32HVB__\",       0x0100, 0x0, 0x8000)\n-AVR_MCU (\"atmega6490a\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490A__\",       0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega6490p\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490P__\",       0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega64c1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64C1__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega64m1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64M1__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega64hve\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64HVE__\",       0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega64hve2\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64HVE2__\",      0x0100, 0x0, 0x10000)\n-AVR_MCU (\"atmega64rfr2\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64RFR2__\",      0x0200, 0x0, 0x10000)\n-AVR_MCU (\"atmega644rfr2\",    ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644RFR2__\",     0x0200, 0x0, 0x10000)\n-AVR_MCU (\"atmega32hvbrevb\",  ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32HVBREVB__\",   0x0100, 0x0, 0x8000)\n-AVR_MCU (\"at90can32\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90CAN32__\",         0x0100, 0x0, 0x8000)\n-AVR_MCU (\"at90can64\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90CAN64__\",         0x0100, 0x0, 0x10000)\n-AVR_MCU (\"at90pwm161\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM161__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"at90pwm216\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM216__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"at90pwm316\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM316__\",        0x0100, 0x0, 0x4000)\n-AVR_MCU (\"at90scr100\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90SCR100__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"at90usb646\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90USB646__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"at90usb647\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90USB647__\",        0x0100, 0x0, 0x10000)\n-AVR_MCU (\"at94k\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT94K__\",             0x0060, 0x0, 0x8000)\n-AVR_MCU (\"m3000\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_M3000__\",             0x1000, 0x0, 0x10000)\n+AVR_MCU (\"avr5\",             ARCH_AVR5, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 0x4000, 0)\n+AVR_MCU (\"ata5702m322\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5702M322__\",       0x0200, 0x0, 0x10000, 0)\n+AVR_MCU (\"ata5782\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5782__\",           0x0200, 0x8000, 0xd000, 0)\n+AVR_MCU (\"ata5790\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5790__\",           0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"ata5790n\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5790N__\",          0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"ata5791\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5791__\",           0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"ata5795\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5795__\",           0x0100, 0x0, 0x2000, 0)\n+AVR_MCU (\"ata5831\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5831__\",           0x0200, 0x8000, 0xd000, 0)\n+AVR_MCU (\"ata6613c\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA6613C__\",          0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"ata6614q\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA6614Q__\",          0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"ata8210\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA8210__\",           0x0200, 0x8000, 0xd000, 0)\n+AVR_MCU (\"ata8510\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA8510__\",           0x0200, 0x8000, 0xd000, 0)\n+AVR_MCU (\"atmega16\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16__\",          0x0060, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega16a\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16A__\",         0x0060, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega161\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega161__\",         0x0060, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega162\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega162__\",         0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega163\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega163__\",         0x0060, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega164a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164A__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega164p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164P__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega164pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164PA__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega165\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165__\",         0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega165a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165A__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega165p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165P__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega165pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165PA__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega168\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168__\",         0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega168a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168A__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega168p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168P__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega168pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168PA__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega168pb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168PB__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega169\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169__\",         0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega169a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169A__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega169p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169P__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega169pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169PA__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega16hvb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVB__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega16hvbrevb\",  ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVBREVB__\",   0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega16m1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16M1__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega16u4\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16U4__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega32a\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32A__\",         0x0060, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega32\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32__\",          0x0060, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega323\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega323__\",         0x0060, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega324a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324A__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega324p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324P__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega324pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324PA__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega325\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325__\",         0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega325a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325A__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega325p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325P__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega325pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325PA__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega3250\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega3250a\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250A__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega3250p\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250P__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega3250pa\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250PA__\",      0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega328\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328__\",         0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega328p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328P__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega328pb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328PB__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega329\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329__\",         0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega329a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329A__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega329p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329P__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega329pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329PA__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega3290\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega3290a\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290A__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega3290p\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290P__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega3290pa\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290PA__\",      0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega32c1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32C1__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega32m1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32M1__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega32u4\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32U4__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega32u6\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32U6__\",        0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega406\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega406__\",         0x0100, 0x0, 0xa000, 0)\n+AVR_MCU (\"atmega64\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64__\",          0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega64a\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64A__\",         0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega640\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega640__\",         0x0200, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega644\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644__\",         0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega644a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644A__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega644p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644P__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega644pa\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644PA__\",       0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega645\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645__\",         0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega645a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645A__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega645p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645P__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega6450\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega6450a\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450A__\",       0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega6450p\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450P__\",       0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega649\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649__\",         0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega649a\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649A__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega649p\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649P__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega6490\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega16hva\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVA__\",       0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega16hva2\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVA2__\",      0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"atmega32hvb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32HVB__\",       0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"atmega6490a\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490A__\",       0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega6490p\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490P__\",       0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega64c1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64C1__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega64m1\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64M1__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega64hve\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64HVE__\",       0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega64hve2\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64HVE2__\",      0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega64rfr2\",     ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64RFR2__\",      0x0200, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega644rfr2\",    ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644RFR2__\",     0x0200, 0x0, 0x10000, 0)\n+AVR_MCU (\"atmega32hvbrevb\",  ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32HVBREVB__\",   0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"at90can32\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90CAN32__\",         0x0100, 0x0, 0x8000, 0)\n+AVR_MCU (\"at90can64\",        ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90CAN64__\",         0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"at90pwm161\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM161__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"at90pwm216\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM216__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"at90pwm316\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM316__\",        0x0100, 0x0, 0x4000, 0)\n+AVR_MCU (\"at90scr100\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90SCR100__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"at90usb646\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90USB646__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"at90usb647\",       ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90USB647__\",        0x0100, 0x0, 0x10000, 0)\n+AVR_MCU (\"at94k\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT94K__\",             0x0060, 0x0, 0x8000, 0)\n+AVR_MCU (\"m3000\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_M3000__\",             0x1000, 0x0, 0x10000, 0)\n /* Enhanced, == 128K.  */\n-AVR_MCU (\"avr51\",            ARCH_AVR51, AVR_ISA_NONE, NULL,                       0x0100, 0x0, 0x20000)\n-AVR_MCU (\"atmega128\",        ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128__\",        0x0100, 0x0, 0x20000)\n-AVR_MCU (\"atmega128a\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128A__\",       0x0100, 0x0, 0x20000)\n-AVR_MCU (\"atmega1280\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1280__\",       0x0200, 0x0, 0x20000)\n-AVR_MCU (\"atmega1281\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1281__\",       0x0200, 0x0, 0x20000)\n-AVR_MCU (\"atmega1284\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284__\",       0x0100, 0x0, 0x20000)\n-AVR_MCU (\"atmega1284p\",      ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284P__\",      0x0100, 0x0, 0x20000)\n-AVR_MCU (\"atmega128rfa1\",    ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128RFA1__\",    0x0200, 0x0, 0x20000)\n-AVR_MCU (\"atmega128rfr2\",    ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128RFR2__\",    0x0200, 0x0, 0x20000)\n-AVR_MCU (\"atmega1284rfr2\",   ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284RFR2__\",   0x0200, 0x0, 0x20000)\n-AVR_MCU (\"at90can128\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90CAN128__\",       0x0100, 0x0, 0x20000)\n-AVR_MCU (\"at90usb1286\",      ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90USB1286__\",      0x0100, 0x0, 0x20000)\n-AVR_MCU (\"at90usb1287\",      ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90USB1287__\",      0x0100, 0x0, 0x20000)\n+AVR_MCU (\"avr51\",            ARCH_AVR51, AVR_ISA_NONE, NULL,                       0x0100, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega128\",        ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128__\",        0x0100, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega128a\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128A__\",       0x0100, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega1280\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1280__\",       0x0200, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega1281\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1281__\",       0x0200, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega1284\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284__\",       0x0100, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega1284p\",      ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284P__\",      0x0100, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega128rfa1\",    ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128RFA1__\",    0x0200, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega128rfr2\",    ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128RFR2__\",    0x0200, 0x0, 0x20000, 0)\n+AVR_MCU (\"atmega1284rfr2\",   ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284RFR2__\",   0x0200, 0x0, 0x20000, 0)\n+AVR_MCU (\"at90can128\",       ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90CAN128__\",       0x0100, 0x0, 0x20000, 0)\n+AVR_MCU (\"at90usb1286\",      ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90USB1286__\",      0x0100, 0x0, 0x20000, 0)\n+AVR_MCU (\"at90usb1287\",      ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90USB1287__\",      0x0100, 0x0, 0x20000, 0)\n /* 3-Byte PC.  */\n-AVR_MCU (\"avr6\",             ARCH_AVR6, AVR_ISA_NONE, NULL,                        0x0200, 0x0, 0x40000)\n-AVR_MCU (\"atmega2560\",       ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2560__\",        0x0200, 0x0, 0x40000)\n-AVR_MCU (\"atmega2561\",       ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2561__\",        0x0200, 0x0, 0x40000)\n-AVR_MCU (\"atmega256rfr2\",    ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega256RFR2__\",     0x0200, 0x0, 0x40000)\n-AVR_MCU (\"atmega2564rfr2\",   ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2564RFR2__\",    0x0200, 0x0, 0x40000)\n+AVR_MCU (\"avr6\",             ARCH_AVR6, AVR_ISA_NONE, NULL,                        0x0200, 0x0, 0x40000, 0)\n+AVR_MCU (\"atmega2560\",       ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2560__\",        0x0200, 0x0, 0x40000, 0)\n+AVR_MCU (\"atmega2561\",       ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2561__\",        0x0200, 0x0, 0x40000, 0)\n+AVR_MCU (\"atmega256rfr2\",    ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega256RFR2__\",     0x0200, 0x0, 0x40000, 0)\n+AVR_MCU (\"atmega2564rfr2\",   ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2564RFR2__\",    0x0200, 0x0, 0x40000, 0)\n /* Xmega, 16K <= Flash < 64K, RAM <= 64K */\n-AVR_MCU (\"avrxmega2\",        ARCH_AVRXMEGA2, AVR_ISA_NONE, NULL,                   0x2000, 0x0, 0x9000)\n-AVR_MCU (\"atxmega8e5\",       ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega8E5__\",   0x2000, 0x0, 0x2800)\n-AVR_MCU (\"atxmega16a4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16A4__\",  0x2000, 0x0, 0x5000)\n-AVR_MCU (\"atxmega16d4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16D4__\",  0x2000, 0x0, 0x5000)\n-AVR_MCU (\"atxmega16e5\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16E5__\",  0x2000, 0x0, 0x5000)\n-AVR_MCU (\"atxmega32a4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32A4__\",  0x2000, 0x0, 0x9000)\n-AVR_MCU (\"atxmega32c3\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32C3__\",  0x2000, 0x0, 0x9000)\n-AVR_MCU (\"atxmega32d3\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32D3__\",  0x2000, 0x0, 0x9000)\n-AVR_MCU (\"atxmega32d4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32D4__\",  0x2000, 0x0, 0x9000)\n-AVR_MCU (\"atxmega16a4u\",     ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega16A4U__\", 0x2000, 0x0, 0x5000)\n-AVR_MCU (\"atxmega16c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega16C4__\",  0x2000, 0x0, 0x5000)\n-AVR_MCU (\"atxmega32a4u\",     ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32A4U__\", 0x2000, 0x0, 0x9000)\n-AVR_MCU (\"atxmega32c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32C4__\",  0x2000, 0x0, 0x9000)\n-AVR_MCU (\"atxmega32e5\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32E5__\",  0x2000, 0x0, 0x9000)\n+AVR_MCU (\"avrxmega2\",        ARCH_AVRXMEGA2, AVR_ISA_NONE, NULL,                   0x2000, 0x0, 0x9000, 0)\n+AVR_MCU (\"atxmega8e5\",       ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega8E5__\",   0x2000, 0x0, 0x2800, 0)\n+AVR_MCU (\"atxmega16a4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16A4__\",  0x2000, 0x0, 0x5000, 0)\n+AVR_MCU (\"atxmega16d4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16D4__\",  0x2000, 0x0, 0x5000, 0)\n+AVR_MCU (\"atxmega16e5\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16E5__\",  0x2000, 0x0, 0x5000, 0)\n+AVR_MCU (\"atxmega32a4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32A4__\",  0x2000, 0x0, 0x9000, 0)\n+AVR_MCU (\"atxmega32c3\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32C3__\",  0x2000, 0x0, 0x9000, 0)\n+AVR_MCU (\"atxmega32d3\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32D3__\",  0x2000, 0x0, 0x9000, 0)\n+AVR_MCU (\"atxmega32d4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32D4__\",  0x2000, 0x0, 0x9000, 0)\n+AVR_MCU (\"atxmega16a4u\",     ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega16A4U__\", 0x2000, 0x0, 0x5000, 0)\n+AVR_MCU (\"atxmega16c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega16C4__\",  0x2000, 0x0, 0x5000, 0)\n+AVR_MCU (\"atxmega32a4u\",     ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32A4U__\", 0x2000, 0x0, 0x9000, 0)\n+AVR_MCU (\"atxmega32c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32C4__\",  0x2000, 0x0, 0x9000, 0)\n+AVR_MCU (\"atxmega32e5\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32E5__\",  0x2000, 0x0, 0x9000, 0)\n /* Xmega, Flash + RAM < 64K, flash visible in RAM address space */\n-AVR_MCU (\"avrxmega3\",        ARCH_AVRXMEGA3, AVR_ISA_NONE,  NULL,                  0x3f00, 0x0, 0x8000)\n-AVR_MCU (\"attiny212\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny212__\",   0x3f80, 0x0, 0x800)\n-AVR_MCU (\"attiny214\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny214__\",   0x3f80, 0x0, 0x800)\n-AVR_MCU (\"attiny412\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny412__\",   0x3f00, 0x0, 0x1000)\n-AVR_MCU (\"attiny414\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny414__\",   0x3f00, 0x0, 0x1000)\n-AVR_MCU (\"attiny416\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny416__\",   0x3f00, 0x0, 0x1000)\n-AVR_MCU (\"attiny417\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny417__\",   0x3f00, 0x0, 0x1000)\n-AVR_MCU (\"attiny814\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny814__\",   0x3e00, 0x0, 0x2000)\n-AVR_MCU (\"attiny816\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny816__\",   0x3e00, 0x0, 0x2000)\n-AVR_MCU (\"attiny817\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny817__\",   0x3e00, 0x0, 0x2000)\n-AVR_MCU (\"attiny1614\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1614__\",  0x3800, 0x0, 0x4000)\n-AVR_MCU (\"attiny1616\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1616__\",  0x3800, 0x0, 0x4000)\n-AVR_MCU (\"attiny1617\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1617__\",  0x3800, 0x0, 0x4000)\n-AVR_MCU (\"attiny3214\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny3214__\",  0x3800, 0x0, 0x8000)\n-AVR_MCU (\"attiny3216\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny3216__\",  0x3800, 0x0, 0x8000)\n-AVR_MCU (\"attiny3217\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny3217__\",  0x3800, 0x0, 0x8000)\n+AVR_MCU (\"avrxmega3\",        ARCH_AVRXMEGA3, AVR_ISA_NONE,  NULL,                  0x3f00, 0x0, 0x8000, 0)\n+AVR_MCU (\"attiny212\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny212__\",   0x3f80, 0x0, 0x800,  0x8000)\n+AVR_MCU (\"attiny214\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny214__\",   0x3f80, 0x0, 0x800,  0x8000)\n+AVR_MCU (\"attiny412\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny412__\",   0x3f00, 0x0, 0x1000, 0x8000)\n+AVR_MCU (\"attiny414\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny414__\",   0x3f00, 0x0, 0x1000, 0x8000)\n+AVR_MCU (\"attiny416\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny416__\",   0x3f00, 0x0, 0x1000, 0x8000)\n+AVR_MCU (\"attiny417\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny417__\",   0x3f00, 0x0, 0x1000, 0x8000)\n+AVR_MCU (\"attiny814\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny814__\",   0x3e00, 0x0, 0x2000, 0x8000)\n+AVR_MCU (\"attiny816\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny816__\",   0x3e00, 0x0, 0x2000, 0x8000)\n+AVR_MCU (\"attiny817\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny817__\",   0x3e00, 0x0, 0x2000, 0x8000)\n+AVR_MCU (\"attiny1614\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1614__\",  0x3800, 0x0, 0x4000, 0x8000)\n+AVR_MCU (\"attiny1616\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1616__\",  0x3800, 0x0, 0x4000, 0x8000)\n+AVR_MCU (\"attiny1617\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1617__\",  0x3800, 0x0, 0x4000, 0x8000)\n+AVR_MCU (\"attiny3214\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny3214__\",  0x3800, 0x0, 0x8000, 0x8000)\n+AVR_MCU (\"attiny3216\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny3216__\",  0x3800, 0x0, 0x8000, 0x8000)\n+AVR_MCU (\"attiny3217\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny3217__\",  0x3800, 0x0, 0x8000, 0x8000)\n+AVR_MCU (\"atmega808\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATmega808__\",   0x3c00, 0x0, 0x2000, 0x4000)\n+AVR_MCU (\"atmega809\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATmega809__\",   0x3c00, 0x0, 0x2000, 0x4000)\n+AVR_MCU (\"atmega1608\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATmega1608__\",  0x3800, 0x0, 0x4000, 0x4000)\n+AVR_MCU (\"atmega1609\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATmega1609__\",  0x3800, 0x0, 0x4000, 0x4000)\n+AVR_MCU (\"atmega3208\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATmega3208__\",  0x3800, 0x0, 0x8000, 0x4000)\n+AVR_MCU (\"atmega3209\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATmega3209__\",  0x3800, 0x0, 0x8000, 0x4000)\n+AVR_MCU (\"atmega4808\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATmega4808__\",  0x2800, 0x0, 0xc000, 0x4000)\n+AVR_MCU (\"atmega4809\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATmega4809__\",  0x2800, 0x0, 0xc000, 0x4000)\n /* Xmega, 64K < Flash <= 128K, RAM <= 64K */\n-AVR_MCU (\"avrxmega4\",        ARCH_AVRXMEGA4, AVR_ISA_NONE, NULL,                   0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64a3\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64A3__\",  0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64d3\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64D3__\",  0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64a3u\",     ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64A3U__\", 0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64a4u\",     ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64A4U__\", 0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64b1\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64B1__\",  0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64b3\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64B3__\",  0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64c3\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64C3__\",  0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64d4\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64D4__\",  0x2000, 0x0, 0x11000)\n+AVR_MCU (\"avrxmega4\",        ARCH_AVRXMEGA4, AVR_ISA_NONE, NULL,                   0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64a3\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64A3__\",  0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64d3\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64D3__\",  0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64a3u\",     ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64A3U__\", 0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64a4u\",     ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64A4U__\", 0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64b1\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64B1__\",  0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64b3\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64B3__\",  0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64c3\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64C3__\",  0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64d4\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64D4__\",  0x2000, 0x0, 0x11000, 0)\n /* Xmega, 64K < Flash <= 128K, RAM > 64K */\n-AVR_MCU (\"avrxmega5\",        ARCH_AVRXMEGA5, AVR_ISA_NONE, NULL,                   0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64a1\",      ARCH_AVRXMEGA5, AVR_ISA_NONE, \"__AVR_ATxmega64A1__\",  0x2000, 0x0, 0x11000)\n-AVR_MCU (\"atxmega64a1u\",     ARCH_AVRXMEGA5, AVR_ISA_RMW,  \"__AVR_ATxmega64A1U__\", 0x2000, 0x0, 0x11000)\n+AVR_MCU (\"avrxmega5\",        ARCH_AVRXMEGA5, AVR_ISA_NONE, NULL,                   0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64a1\",      ARCH_AVRXMEGA5, AVR_ISA_NONE, \"__AVR_ATxmega64A1__\",  0x2000, 0x0, 0x11000, 0)\n+AVR_MCU (\"atxmega64a1u\",     ARCH_AVRXMEGA5, AVR_ISA_RMW,  \"__AVR_ATxmega64A1U__\", 0x2000, 0x0, 0x11000, 0)\n /* Xmega, 128K < Flash, RAM <= 64K */\n-AVR_MCU (\"avrxmega6\",        ARCH_AVRXMEGA6, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 0x60000)\n-AVR_MCU (\"atxmega128a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128A3__\",     0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega128d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128D3__\",     0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega192a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega192A3__\",     0x2000, 0x0, 0x32000)\n-AVR_MCU (\"atxmega192d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega192D3__\",     0x2000, 0x0, 0x32000)\n-AVR_MCU (\"atxmega256a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3__\",     0x2000, 0x0, 0x42000)\n-AVR_MCU (\"atxmega256a3b\",    ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3B__\",    0x2000, 0x0, 0x42000)\n-AVR_MCU (\"atxmega256a3bu\",   ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3BU__\",   0x2000, 0x0, 0x42000)\n-AVR_MCU (\"atxmega256d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256D3__\",     0x2000, 0x0, 0x42000)\n-AVR_MCU (\"atxmega128a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128A3U__\",    0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega128b1\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128B1__\",     0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega128b3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128B3__\",     0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega128c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128C3__\",     0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega128d4\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128D4__\",     0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega192a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega192A3U__\",    0x2000, 0x0, 0x32000)\n-AVR_MCU (\"atxmega192c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega192C3__\",     0x2000, 0x0, 0x32000)\n-AVR_MCU (\"atxmega256a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega256A3U__\",    0x2000, 0x0, 0x42000)\n-AVR_MCU (\"atxmega256c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega256C3__\",     0x2000, 0x0, 0x42000)\n-AVR_MCU (\"atxmega384c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega384C3__\",     0x2000, 0x0, 0x62000)\n-AVR_MCU (\"atxmega384d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega384D3__\",     0x2000, 0x0, 0x62000)\n+AVR_MCU (\"avrxmega6\",        ARCH_AVRXMEGA6, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 0x60000, 0)\n+AVR_MCU (\"atxmega128a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128A3__\",     0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega128d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128D3__\",     0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega192a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega192A3__\",     0x2000, 0x0, 0x32000, 0)\n+AVR_MCU (\"atxmega192d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega192D3__\",     0x2000, 0x0, 0x32000, 0)\n+AVR_MCU (\"atxmega256a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3__\",     0x2000, 0x0, 0x42000, 0)\n+AVR_MCU (\"atxmega256a3b\",    ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3B__\",    0x2000, 0x0, 0x42000, 0)\n+AVR_MCU (\"atxmega256a3bu\",   ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3BU__\",   0x2000, 0x0, 0x42000, 0)\n+AVR_MCU (\"atxmega256d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256D3__\",     0x2000, 0x0, 0x42000, 0)\n+AVR_MCU (\"atxmega128a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128A3U__\",    0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega128b1\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128B1__\",     0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega128b3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128B3__\",     0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega128c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128C3__\",     0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega128d4\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128D4__\",     0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega192a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega192A3U__\",    0x2000, 0x0, 0x32000, 0)\n+AVR_MCU (\"atxmega192c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega192C3__\",     0x2000, 0x0, 0x32000, 0)\n+AVR_MCU (\"atxmega256a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega256A3U__\",    0x2000, 0x0, 0x42000, 0)\n+AVR_MCU (\"atxmega256c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega256C3__\",     0x2000, 0x0, 0x42000, 0)\n+AVR_MCU (\"atxmega384c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega384C3__\",     0x2000, 0x0, 0x62000, 0)\n+AVR_MCU (\"atxmega384d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega384D3__\",     0x2000, 0x0, 0x62000, 0)\n /* Xmega, 128K < Flash, RAM > 64K RAM.  */\n-AVR_MCU (\"avrxmega7\",        ARCH_AVRXMEGA7, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega128a1\",     ARCH_AVRXMEGA7, AVR_ISA_NONE, \"__AVR_ATxmega128A1__\",     0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega128a1u\",    ARCH_AVRXMEGA7, AVR_ISA_RMW,  \"__AVR_ATxmega128A1U__\",    0x2000, 0x0, 0x22000)\n-AVR_MCU (\"atxmega128a4u\",    ARCH_AVRXMEGA7, AVR_ISA_RMW,  \"__AVR_ATxmega128A4U__\",    0x2000, 0x0, 0x22000)\n+AVR_MCU (\"avrxmega7\",        ARCH_AVRXMEGA7, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega128a1\",     ARCH_AVRXMEGA7, AVR_ISA_NONE, \"__AVR_ATxmega128A1__\",     0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega128a1u\",    ARCH_AVRXMEGA7, AVR_ISA_RMW,  \"__AVR_ATxmega128A1U__\",    0x2000, 0x0, 0x22000, 0)\n+AVR_MCU (\"atxmega128a4u\",    ARCH_AVRXMEGA7, AVR_ISA_RMW,  \"__AVR_ATxmega128A4U__\",    0x2000, 0x0, 0x22000, 0)\n /* Tiny family */\n-AVR_MCU (\"avrtiny\",          ARCH_AVRTINY, AVR_ISA_NONE, NULL,                     0x0040, 0x0, 0x400)\n-AVR_MCU (\"attiny4\",          ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny4__\",        0x0040, 0x0, 0x200)\n-AVR_MCU (\"attiny5\",          ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny5__\",        0x0040, 0x0, 0x200)\n-AVR_MCU (\"attiny9\",          ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny9__\",        0x0040, 0x0, 0x400)\n-AVR_MCU (\"attiny10\",         ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny10__\",       0x0040, 0x0, 0x400)\n-AVR_MCU (\"attiny20\",         ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny20__\",       0x0040, 0x0, 0x800)\n-AVR_MCU (\"attiny40\",         ARCH_AVRTINY, AVR_ISA_NONE, \"__AVR_ATtiny40__\",       0x0040, 0x0, 0x1000)\n+AVR_MCU (\"avrtiny\",          ARCH_AVRTINY, AVR_ISA_NONE, NULL,                     0x0040, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny4\",          ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny4__\",        0x0040, 0x0, 0x200, 0)\n+AVR_MCU (\"attiny5\",          ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny5__\",        0x0040, 0x0, 0x200, 0)\n+AVR_MCU (\"attiny9\",          ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny9__\",        0x0040, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny10\",         ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny10__\",       0x0040, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny20\",         ARCH_AVRTINY, AVR_ISA_LDS,  \"__AVR_ATtiny20__\",       0x0040, 0x0, 0x800, 0)\n+AVR_MCU (\"attiny40\",         ARCH_AVRTINY, AVR_ISA_NONE, \"__AVR_ATtiny40__\",       0x0040, 0x0, 0x1000, 0)\n /* Assembler only.  */\n-AVR_MCU (\"avr1\",             ARCH_AVR1, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 0x400)\n-AVR_MCU (\"at90s1200\",        ARCH_AVR1, AVR_ISA_NONE, \"__AVR_AT90S1200__\",         0x0060, 0x0, 0x400)\n-AVR_MCU (\"attiny11\",         ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny11__\",          0x0060, 0x0, 0x400)\n-AVR_MCU (\"attiny12\",         ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny12__\",          0x0060, 0x0, 0x400)\n-AVR_MCU (\"attiny15\",         ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny15__\",          0x0060, 0x0, 0x400)\n-AVR_MCU (\"attiny28\",         ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny28__\",          0x0060, 0x0, 0x800)\n+AVR_MCU (\"avr1\",             ARCH_AVR1, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 0x400, 0)\n+AVR_MCU (\"at90s1200\",        ARCH_AVR1, AVR_ISA_NONE, \"__AVR_AT90S1200__\",         0x0060, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny11\",         ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny11__\",          0x0060, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny12\",         ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny12__\",          0x0060, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny15\",         ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny15__\",          0x0060, 0x0, 0x400, 0)\n+AVR_MCU (\"attiny28\",         ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny28__\",          0x0060, 0x0, 0x800, 0)"}, {"sha": "0059a5399f2ea71a55ea73407074b1421c9b1df3", "filename": "gcc/config/avr/gen-avr-mmcu-specs.c", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Fgen-avr-mmcu-specs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Fgen-avr-mmcu-specs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fgen-avr-mmcu-specs.c?ref=80b38f83f1f26163057a40a6e984244c5d59a0b8", "patch": "@@ -97,7 +97,7 @@ static const char help_dev_lib_name[] =\n   \"#     #include <avr/io.h>\\n\"\n   \"#\\n\"\n   \"# will include the desired device header.  For ATmega8A the supplement\\n\"\n-  \"# to *cpp would read\\n\"\n+  \"# to *cpp_avrlibc would read\\n\"\n   \"#\\n\"\n   \"#     -D__AVR_DEV_LIB_NAME__=m8a\\n\"\n   \"\\n\";\n@@ -132,6 +132,14 @@ print_mcu (const avr_mcu_t *mcu)\n   bool rcall = (mcu->dev_attribute & AVR_ISA_RCALL);\n   bool is_arch = mcu->macro == NULL;\n   bool is_device = ! is_arch;\n+  int flash_pm_offset = 0;\n+\n+  if (arch->flash_pm_offset\n+      && mcu->flash_pm_offset\n+      && mcu->flash_pm_offset != arch->flash_pm_offset)\n+    {\n+      flash_pm_offset = mcu->flash_pm_offset;\n+    }\n \n   if (is_arch\n       && (ARCH_AVR2 == arch_id\n@@ -262,6 +270,14 @@ print_mcu (const avr_mcu_t *mcu)\n       fprintf (f, \"\\n\\n\");\n     }\n \n+  if (is_device\n+      && flash_pm_offset)\n+    {\n+      fprintf (f, \"*link_pm_base_address:\\n\");\n+      fprintf (f, \"\\t--defsym=__RODATA_PM_OFFSET=0x%x\", flash_pm_offset);\n+      fprintf (f, \"\\n\\n\");\n+    }\n+\n   // Specs known to GCC.\n \n   if (is_device)\n@@ -273,10 +289,26 @@ print_mcu (const avr_mcu_t *mcu)\n \n #if defined (WITH_AVRLIBC)\n       fprintf (f, \"%s\\n\", help_dev_lib_name);\n+\n+      fprintf (f, \"*cpp_avrlibc:\\n\");\n+      fprintf (f, \"\\t-D__AVR_DEVICE_NAME__=%s\", mcu->name);\n+      fprintf (f, \"\\n\\n\");\n #endif // WITH_AVRLIBC\n \n+      fprintf (f, \"*cpp_mcu:\\n\");\n+      fprintf (f, \"\\t-D%s\", mcu->macro);\n+      if (flash_pm_offset)\n+\t{\n+\t  fprintf (f, \" -U__AVR_PM_BASE_ADDRESS__\");\n+\t  fprintf (f, \" -D__AVR_PM_BASE_ADDRESS__=0x%x\", flash_pm_offset);\n+\t}\n+      fprintf (f, \"\\n\\n\");\n+\n       fprintf (f, \"*cpp:\\n\");\n-      fprintf (f, \"\\t-D%s -D__AVR_DEVICE_NAME__=%s\", mcu->macro, mcu->name);\n+      fprintf (f, \"\\t%%(cpp_mcu)\");\n+#if defined (WITH_AVRLIBC)\n+      fprintf (f, \" %%(cpp_avrlibc)\");\n+#endif // WITH_AVRLIBC\n       fprintf (f, \"\\n\\n\");\n     }\n "}, {"sha": "47074030faefb53d8f41391a5a86cd49b448c9d9", "filename": "gcc/config/avr/gen-avr-mmcu-texi.c", "status": "modified", "additions": 96, "deletions": 38, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Fgen-avr-mmcu-texi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Fgen-avr-mmcu-texi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fgen-avr-mmcu-texi.c?ref=80b38f83f1f26163057a40a6e984244c5d59a0b8", "patch": "@@ -25,8 +25,8 @@\n \n #include \"avr-devices.c\"\n \n-static const char*\n-mcu_name[sizeof avr_mcu_types / sizeof avr_mcu_types[0]];\n+static const avr_mcu_t*\n+mcus[sizeof avr_mcu_types / sizeof avr_mcu_types[0]];\n \n static int letter (char c)\n {\n@@ -38,25 +38,84 @@ static int digit (char c)\n   return c >= '0' && c <= '9';\n }\n \n+static int\n+str_prefix_p (const char *str, const char *prefix)\n+{\n+  return strncmp (str, prefix, strlen (prefix)) == 0;\n+}\n+\n+\n+/* Used by string comparator to group MCUs by their\n+   name prefix like \"attiny\" or \"atmega\".  */\n+\n+static int\n+c_prefix (const char *str)\n+{\n+  static const char *const prefixes[] =\n+    {\n+      \"attiny\", \"atmega\", \"atxmega\", \"ata\", \"at90\"\n+    };\n+\n+  int i, n = (int) (sizeof (prefixes) / sizeof (*prefixes));\n+\n+  for (i = 0; i < n; i++)\n+    if (str_prefix_p (str, prefixes[i]))\n+      return i;\n+\n+  return n;\n+}\n+\n+\n+/* If A starts a group of digits, return their value as a number.  */\n+\n+static int\n+c_number (const char *a)\n+{\n+  int val = 0;\n+\n+  if (digit (*a) && ! digit (*(a-1)))\n+    {\n+      while (digit (*a))\n+\tval = 10 * val + (*a++) - '0';\n+    }\n+\n+  return val;\n+}\n+\n+\n+/* Compare two MCUs and order them for easy lookup.  */\n+\n static int\n comparator (const void *va, const void *vb)\n {\n-  const char *a = *(const char* const*) va;\n-  const char *b = *(const char* const*) vb;\n+  const avr_mcu_t *mcu_a = *(const avr_mcu_t* const*) va;\n+  const avr_mcu_t *mcu_b = *(const avr_mcu_t* const*) vb;\n+  const char *a = mcu_a->name;\n+  const char *b = mcu_b->name;\n+\n+  // First, group MCUs according to their pure-letter prefix.\n+\n+  int c = c_prefix (a) - c_prefix (b);\n+  if (c)\n+    return c;\n+\n+  // Second, if their prefixes are the same, group according to\n+  // their flash size.\n+\n+  c = (int) mcu_a->flash_size - (int) mcu_b->flash_size;\n+  if (c)\n+    return c;\n+\n+  // Third, group according to aligned groups of digits.\n \n   while (*a && *b)\n     {\n-      /* Make letters smaller than digits so that `atmega16a' follows\n-         `atmega16' without `atmega161' etc. between them.  */\n-      \n-      if (letter (*a) && digit (*b))\n-        return -1;\n-\n-      if (digit (*a) && letter (*b))\n-        return 1;\n+      c = c_number (a) - c_number (b);\n+      if (c)\n+\treturn c;\n \n       if (*a != *b)\n-        return *a - *b;\n+\treturn *a - *b;\n       \n       a++;\n       b++;\n@@ -74,21 +133,21 @@ print_mcus (size_t n_mcus)\n   if (!n_mcus)\n     return;\n     \n-  qsort (mcu_name, n_mcus, sizeof (char*), comparator);\n+  qsort (mcus, n_mcus, sizeof (avr_mcu_t*), comparator);\n \n   printf (\"@*@var{mcu}@tie{}=\");\n \n   for (i = 0; i < n_mcus; i++)\n     {\n-      printf (\" @code{%s}%s\", mcu_name[i], i == n_mcus-1 ? \".\\n\\n\" : \",\");\n+      printf (\" @code{%s}%s\", mcus[i]->name, i == n_mcus-1 ? \".\\n\\n\" : \",\");\n \n-      if (i && !strcmp (mcu_name[i], mcu_name[i-1]))\n-        {\n-          /* Sanity-check: Fail on devices that are present more than once.  */\n+      if (i && !strcmp (mcus[i]->name, mcus[i-1]->name))\n+\t{\n+\t  // Sanity-check: Fail on devices that are present more than once.\n \n-          duplicate = 1;\n-          fprintf (stderr, \"error: duplicate device: %s\\n\", mcu_name[i]);\n-        }\n+\t  duplicate = 1;\n+\t  fprintf (stderr, \"error: duplicate device: %s\\n\", mcus[i]->name);\n+\t}\n     }\n \n   if (duplicate)\n@@ -104,13 +163,13 @@ int main (void)\n   printf (\"@c Copyright (C) 2012-2019 Free Software Foundation, Inc.\\n\");\n   printf (\"@c This is part of the GCC manual.\\n\");\n   printf (\"@c For copying conditions, see the file \"\n-          \"gcc/doc/include/fdl.texi.\\n\\n\");\n+\t  \"gcc/doc/include/fdl.texi.\\n\\n\");\n \n   printf (\"@c This file is generated automatically using\\n\");\n   printf (\"@c gcc/config/avr/gen-avr-mmcu-texi.c from:\\n\");\n-  printf (\"@c    gcc/config/avr/avr-arch.h\\n\");\n-  printf (\"@c    gcc/config/avr/avr-devices.c\\n\");\n-  printf (\"@c    gcc/config/avr/avr-mcus.def\\n\\n\");\n+  printf (\"@c\t gcc/config/avr/avr-arch.h\\n\");\n+  printf (\"@c\t gcc/config/avr/avr-devices.c\\n\");\n+  printf (\"@c\t gcc/config/avr/avr-mcus.def\\n\\n\");\n \n   printf (\"@c Please do not edit manually.\\n\\n\");\n \n@@ -119,22 +178,21 @@ int main (void)\n   for (mcu = avr_mcu_types; mcu->name; mcu++)\n     {\n       if (mcu->macro == NULL)\n-        {\n-          arch_id = mcu->arch_id;\n-\n-          /* Start a new architecture:  Flush the MCUs collected so far.  */\n+\t{\n+\t  arch_id = mcu->arch_id;\n \n-          print_mcus (n_mcus);\n-          n_mcus = 0;\n+\t  // Start a new architecture:\tFlush the MCUs collected so far.\n+\t  print_mcus (n_mcus);\n+\t  n_mcus = 0;\n \n-          for (i = 0; i < sizeof (avr_texinfo) / sizeof (*avr_texinfo); i++)\n-            if (arch_id == avr_texinfo[i].arch_id)\n-              printf (\"@item %s\\n%s\\n\", mcu->name, avr_texinfo[i].texinfo);\n-        }\n+\t  for (i = 0; i < sizeof (avr_texinfo) / sizeof (*avr_texinfo); i++)\n+\t    if (arch_id == avr_texinfo[i].arch_id)\n+\t      printf (\"@item %s\\n%s\\n\", mcu->name, avr_texinfo[i].texinfo);\n+\t}\n       else if (arch_id == (enum avr_arch_id) mcu->arch_id)\n-        {\n-          mcu_name[n_mcus++] = mcu->name;\n-        }\n+\t{\n+\t  mcus[n_mcus++] = mcu;\n+\t}\n     }\n \n   print_mcus (n_mcus);"}, {"sha": "b6fe4c8f64ff318fbc83c24b7c64e169a7344ddf", "filename": "gcc/config/avr/specs.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Fspecs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b38f83f1f26163057a40a6e984244c5d59a0b8/gcc%2Fconfig%2Favr%2Fspecs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fspecs.h?ref=80b38f83f1f26163057a40a6e984244c5d59a0b8", "patch": "@@ -68,6 +68,7 @@ along with GCC; see the file COPYING3.  If not see\n   \"%(link_text_start) \"                         \\\n   \"%(link_relax) \"                              \\\n   \"%(link_pmem_wrap) \"                          \\\n+  \"%(link_pm_base_address) \"                    \\\n   \"%{shared:%eshared is not supported} \"\n \n #undef  LIB_SPEC"}]}