{"sha": "14a782c872478c7394535c60db1a7e3fa7be2524", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRhNzgyYzg3MjQ3OGM3Mzk0NTM1YzYwZGIxYTdlM2ZhN2JlMjUyNA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2009-08-06T16:47:57Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2009-08-06T16:47:57Z"}, "message": "* doc/extend.texi (pcs): Document new attribute for ARM.\n\nFrom-SVN: r150531", "tree": {"sha": "20e00e391633f389a71e2a613bf3986cb4c89a1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20e00e391633f389a71e2a613bf3986cb4c89a1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14a782c872478c7394535c60db1a7e3fa7be2524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a782c872478c7394535c60db1a7e3fa7be2524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a782c872478c7394535c60db1a7e3fa7be2524", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a782c872478c7394535c60db1a7e3fa7be2524/comments", "author": null, "committer": null, "parents": [{"sha": "0f1a24df8d93f6285a4ebdb937ee3097e366121a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1a24df8d93f6285a4ebdb937ee3097e366121a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f1a24df8d93f6285a4ebdb937ee3097e366121a"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "578b682403eb44ce8311bcce26c489cdfbabc8c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a782c872478c7394535c60db1a7e3fa7be2524/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a782c872478c7394535c60db1a7e3fa7be2524/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14a782c872478c7394535c60db1a7e3fa7be2524", "patch": "@@ -1,3 +1,7 @@\n+2009-08-06  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* doc/extend.texi (pcs): Document new attribute for ARM.\n+\n 2009-08-06  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (pcs_attribute_args): Comment out unsupported attribute"}, {"sha": "3435e2c108799f63e5fa90d81c2a00a9fa76f21d", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a782c872478c7394535c60db1a7e3fa7be2524/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a782c872478c7394535c60db1a7e3fa7be2524/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=14a782c872478c7394535c60db1a7e3fa7be2524", "patch": "@@ -2830,6 +2830,28 @@ compiled with more aggressive optimization options that produce faster\n and larger code, while other functions can be called with less\n aggressive options.\n \n+@item pcs\n+@cindex @code{pcs} function attribute\n+\n+The @code{pcs} attribute can be used to control the calling convention\n+used for a function on ARM.  The attribute takes an argument that specifies\n+the calling convention to use.\n+\n+When compiling using the AAPCS ABI (or a variant of that) then valid\n+values for the argument are @code{\"aapcs\"} and @code{\"aapcs-vfp\"}.  In\n+order to use a variant other than @code{\"aapcs\"} then the compiler must\n+be permitted to use the appropriate co-processor registers (i.e., the\n+VFP registers must be available in order to use @code{\"aapcs-vfp\"}).\n+For example,\n+\n+@smallexample\n+/* Argument passed in r0, and result returned in r0+r1.  */\n+double f2d (float) __attribute__((pcs(\"aapcs\")));\n+@end smallexample\n+\n+Variadic functions always use the @code{\"aapcs\"} calling convention and\n+the compiler will reject attempts to specify an alternative.\n+\n @item pure\n @cindex @code{pure} function attribute\n Many functions have no effects except the return value and their"}]}