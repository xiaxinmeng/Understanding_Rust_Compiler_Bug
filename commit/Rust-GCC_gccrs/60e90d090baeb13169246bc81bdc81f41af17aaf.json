{"sha": "60e90d090baeb13169246bc81bdc81f41af17aaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBlOTBkMDkwYmFlYjEzMTY5MjQ2YmM4MWJkYzgxZjQxYWYxN2FhZg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2007-09-25T02:18:37Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2007-09-25T02:18:37Z"}, "message": "mmix.h (FUNCTION_INCOMING_ARG_REGNO_P): Don't define bogus target macro.\n\n\t* config/mmix/mmix.h (FUNCTION_INCOMING_ARG_REGNO_P): Don't define\n\tbogus target macro.\n\t(INCOMING_REGNO, OUTGOING_REGNO): Define.\n\t* config/mmix/mmix.c (mmix_opposite_regno): New function.\n\t* config/mmix/mmix-protos.h (mmix_opposite_regno): Prototype.\n\nFrom-SVN: r128744", "tree": {"sha": "279d03b71ee46d3272e5b0ad4fae87ca2e80c8ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/279d03b71ee46d3272e5b0ad4fae87ca2e80c8ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60e90d090baeb13169246bc81bdc81f41af17aaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e90d090baeb13169246bc81bdc81f41af17aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e90d090baeb13169246bc81bdc81f41af17aaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e90d090baeb13169246bc81bdc81f41af17aaf/comments", "author": null, "committer": null, "parents": [{"sha": "ab3e1ef66a7e5d765ffb9730c0894487211e0f82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab3e1ef66a7e5d765ffb9730c0894487211e0f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab3e1ef66a7e5d765ffb9730c0894487211e0f82"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "c47a8122b06e0d64a008c9b647a38bd02c66b298", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e90d090baeb13169246bc81bdc81f41af17aaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e90d090baeb13169246bc81bdc81f41af17aaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60e90d090baeb13169246bc81bdc81f41af17aaf", "patch": "@@ -1,5 +1,11 @@\n 2007-09-25  Hans-Peter Nilsson  <hp@bitrange.com>\n \n+\t* config/mmix/mmix.h (FUNCTION_INCOMING_ARG_REGNO_P): Don't define\n+\tbogus target macro.\n+\t(INCOMING_REGNO, OUTGOING_REGNO): Define.\n+\t* config/mmix/mmix.c (mmix_opposite_regno): New function.\n+\t* config/mmix/mmix-protos.h (mmix_opposite_regno): Prototype.\n+\n \t* config/mmix/mmix.md (\"*cmpcc_folded\"): In condition, gate\n \twith REG_P tests before REGNO access.\n "}, {"sha": "d71064aa6d734fbaec7fe40a2cca731b60985d3c", "filename": "gcc/config/mmix/mmix-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e90d090baeb13169246bc81bdc81f41af17aaf/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e90d090baeb13169246bc81bdc81f41af17aaf/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix-protos.h?ref=60e90d090baeb13169246bc81bdc81f41af17aaf", "patch": "@@ -49,6 +49,7 @@ extern void mmix_asm_output_align (FILE *, int);\n extern int mmix_shiftable_wyde_value (unsigned HOST_WIDEST_INT);\n extern void mmix_output_register_setting (FILE *, int, HOST_WIDEST_INT, int);\n extern void mmix_conditional_register_usage (void);\n+extern int mmix_opposite_regno (int, int);\n extern int mmix_local_regno (int);\n extern int mmix_dbx_register_number (int);\n extern int mmix_use_simple_return (void);"}, {"sha": "a55b0dcc7f33e97d9e6082bd26fcb156bf5235de", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e90d090baeb13169246bc81bdc81f41af17aaf/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e90d090baeb13169246bc81bdc81f41af17aaf/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=60e90d090baeb13169246bc81bdc81f41af17aaf", "patch": "@@ -319,6 +319,26 @@ mmix_conditional_register_usage (void)\n \treg_names[i]++;\n }\n \n+/* INCOMING_REGNO and OUTGOING_REGNO worker function.\n+   Those two macros must only be applied to function argument\n+   registers.  FIXME: for their current use in gcc, it'd be better\n+   with an explicit specific additional FUNCTION_INCOMING_ARG_REGNO_P\n+   a'la FUNCTION_ARG / FUNCTION_INCOMING_ARG instead of forcing the\n+   target to commit to a fixed mapping and for any unspecified\n+   register use.  */\n+\n+int\n+mmix_opposite_regno (int regno, int incoming)\n+{\n+  if (!mmix_function_arg_regno_p (regno, incoming))\n+    return regno;\n+\n+  return\n+    regno - (incoming\n+\t     ? MMIX_FIRST_INCOMING_ARG_REGNUM - MMIX_FIRST_ARG_REGNUM\n+\t     : MMIX_FIRST_ARG_REGNUM - MMIX_FIRST_INCOMING_ARG_REGNUM);\n+}\n+\n /* LOCAL_REGNO.\n    All registers that are part of the register stack and that will be\n    saved are local.  */"}, {"sha": "19aab6f4b27e69198fa128f85ed86fbca90541f9", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e90d090baeb13169246bc81bdc81f41af17aaf/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e90d090baeb13169246bc81bdc81f41af17aaf/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=60e90d090baeb13169246bc81bdc81f41af17aaf", "patch": "@@ -319,13 +319,9 @@ extern int target_flags;\n \n #define CONDITIONAL_REGISTER_USAGE mmix_conditional_register_usage ()\n \n-/* No INCOMING_REGNO or OUTGOING_REGNO, since those macros are not usable\n-   for MMIX: it doesn't have a fixed register window size.  FIXME: Perhaps\n-   we should say something about $0..$15 may sometimes be the incoming\n-   $16..$31.  Those macros need better documentation; it looks like\n-   they're just bogus and that FUNCTION_INCOMING_ARG_REGNO_P and\n-   FUNCTION_OUTGOING_VALUE should be used where they're used.  For the\n-   moment, do nothing; things seem to work anyway.  */\n+#define INCOMING_REGNO(OUT) mmix_opposite_regno (OUT, 0)\n+\n+#define OUTGOING_REGNO(IN) mmix_opposite_regno (IN, 1)\n \n /* Defining LOCAL_REGNO is necessary in presence of prologue/epilogue,\n    else GCC will be confused that those registers aren't saved and\n@@ -644,9 +640,6 @@ typedef struct { int regs; int lib; } CUMULATIVE_ARGS;\n #define FUNCTION_ARG_REGNO_P(REGNO)\t\t\\\n  mmix_function_arg_regno_p (REGNO, 0)\n \n-#define FUNCTION_INCOMING_ARG_REGNO_P(REGNO)\t\t\\\n- mmix_function_arg_regno_p (REGNO, 1)\n-\n \n /* Node: Register Arguments */\n "}]}