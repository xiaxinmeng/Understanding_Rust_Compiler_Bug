{"sha": "3dfda826c42e0b08f2ed85638f13b0feb8d449a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RmZGE4MjZjNDJlMGIwOGYyZWQ4NTYzOGYxM2IwZmViOGQ0NDlhNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-27T21:39:11Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-27T21:39:11Z"}, "message": "re PR rtl-optimization/7520 (internal compiler error in verify_local_live_at_start)\n\n        PR optimization/7520\n        * cfganal.c (flow_active_insn_p): New.\n        (forwarder_block_p): Use it.\n\nFrom-SVN: r57593", "tree": {"sha": "915e4fd9c2d5575df891eb9167257b3854256772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/915e4fd9c2d5575df891eb9167257b3854256772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dfda826c42e0b08f2ed85638f13b0feb8d449a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dfda826c42e0b08f2ed85638f13b0feb8d449a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dfda826c42e0b08f2ed85638f13b0feb8d449a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dfda826c42e0b08f2ed85638f13b0feb8d449a7/comments", "author": null, "committer": null, "parents": [{"sha": "10a197ee7c4b5546cc5cc16a24f5b1bd6ecb7297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10a197ee7c4b5546cc5cc16a24f5b1bd6ecb7297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10a197ee7c4b5546cc5cc16a24f5b1bd6ecb7297"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "ebf0d324635afa8d60ed18b01782cb09ac62b091", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dfda826c42e0b08f2ed85638f13b0feb8d449a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dfda826c42e0b08f2ed85638f13b0feb8d449a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3dfda826c42e0b08f2ed85638f13b0feb8d449a7", "patch": "@@ -1,3 +1,9 @@\n+2002-09-27  Richard Henderson  <rth@redhat.com>\n+\n+\tPR optimization/7520\n+\t* cfganal.c (flow_active_insn_p): New.\n+\t(forwarder_block_p): Use it.\n+\n 2002-09-27  Richard Henderson  <rth@redhat.com>\n \n \t* emit-rtl.c (active_insn_p): Revert last change."}, {"sha": "10c6bcf2922c5eb7dd505ebaee6c6d63a5bf17d9", "filename": "gcc/cfganal.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dfda826c42e0b08f2ed85638f13b0feb8d449a7/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dfda826c42e0b08f2ed85638f13b0feb8d449a7/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=3dfda826c42e0b08f2ed85638f13b0feb8d449a7", "patch": "@@ -54,7 +54,31 @@ static void flow_dfs_compute_reverse_finish\n   PARAMS ((depth_first_search_ds));\n static void remove_fake_successors\tPARAMS ((basic_block));\n static bool need_fake_edge_p\t\tPARAMS ((rtx));\n+static bool flow_active_insn_p\t\tPARAMS ((rtx));\n \f\n+/* Like active_insn_p, except keep the return value clobber around\n+   even after reload.  */\n+\n+static bool\n+flow_active_insn_p (insn)\n+     rtx insn;\n+{\n+  if (active_insn_p (insn))\n+    return true;\n+\n+  /* A clobber of the function return value exists for buggy \n+     programs that fail to return a value.  It's effect is to\n+     keep the return value from being live across the entire\n+     function.  If we allow it to be skipped, we introduce the\n+     possibility for register livetime aborts.  */\n+  if (GET_CODE (PATTERN (insn)) == CLOBBER\n+      && GET_CODE (XEXP (PATTERN (insn), 0)) == REG\n+      && REG_FUNCTION_VALUE_P (XEXP (PATTERN (insn), 0)))\n+    return true;\n+\n+  return false;\n+}\n+\n /* Return true if the block has no effect and only forwards control flow to\n    its single destination.  */\n \n@@ -69,12 +93,12 @@ forwarder_block_p (bb)\n     return false;\n \n   for (insn = bb->head; insn != bb->end; insn = NEXT_INSN (insn))\n-    if (INSN_P (insn) && active_insn_p (insn))\n+    if (INSN_P (insn) && flow_active_insn_p (insn))\n       return false;\n \n   return (!INSN_P (insn)\n \t  || (GET_CODE (insn) == JUMP_INSN && simplejump_p (insn))\n-\t  || !active_insn_p (insn));\n+\t  || !flow_active_insn_p (insn));\n }\n \n /* Return nonzero if we can reach target from src by falling through.  */"}, {"sha": "b93d8a18d5e32091148dfab4c9aeea575b30b6a3", "filename": "gcc/testsuite/gcc.c-torture/compile/20020927-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dfda826c42e0b08f2ed85638f13b0feb8d449a7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020927-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dfda826c42e0b08f2ed85638f13b0feb8d449a7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020927-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020927-1.c?ref=3dfda826c42e0b08f2ed85638f13b0feb8d449a7", "patch": "@@ -0,0 +1,26 @@\n+/* PR optimization/7520 */\n+/* ICE at -O3 on x86 due to register life problems caused by\n+   the return-without-value in bar.  */\n+\n+int\n+foo ()\n+{\n+  int i;\n+  long long int j;\n+\n+  while (1)\n+    {\n+      if (j & 1)\n+\t++i;\n+      j >>= 1;\n+      if (j)\n+\treturn i;\n+    }\n+}\n+\n+int\n+bar ()\n+{\n+  if (foo ())\n+    return;\n+}"}]}