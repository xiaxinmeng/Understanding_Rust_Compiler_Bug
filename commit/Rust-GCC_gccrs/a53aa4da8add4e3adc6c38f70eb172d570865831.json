{"sha": "a53aa4da8add4e3adc6c38f70eb172d570865831", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUzYWE0ZGE4YWRkNGUzYWRjNmMzOGY3MGViMTcyZDU3MDg2NTgzMQ==", "commit": {"author": {"name": "Mark Eggleston", "email": "mark.eggleston@codethink.com", "date": "2019-08-20T10:08:10Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2019-08-20T10:08:10Z"}, "message": "Intrinsic documentation changes.\n\nAdd notes to DIM, MOD and MODULE stating that as a GNU extension,\nintegers of different kinds are allowed as arguments and that the\nreturn value has the larger kind.\n\nFrom-SVN: r274744", "tree": {"sha": "cfa58fd1a25efc17c3f14d6aab8881f7733eb150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfa58fd1a25efc17c3f14d6aab8881f7733eb150"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a53aa4da8add4e3adc6c38f70eb172d570865831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53aa4da8add4e3adc6c38f70eb172d570865831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a53aa4da8add4e3adc6c38f70eb172d570865831", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53aa4da8add4e3adc6c38f70eb172d570865831/comments", "author": {"login": "markeggleston", "id": 42180582, "node_id": "MDQ6VXNlcjQyMTgwNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/42180582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markeggleston", "html_url": "https://github.com/markeggleston", "followers_url": "https://api.github.com/users/markeggleston/followers", "following_url": "https://api.github.com/users/markeggleston/following{/other_user}", "gists_url": "https://api.github.com/users/markeggleston/gists{/gist_id}", "starred_url": "https://api.github.com/users/markeggleston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markeggleston/subscriptions", "organizations_url": "https://api.github.com/users/markeggleston/orgs", "repos_url": "https://api.github.com/users/markeggleston/repos", "events_url": "https://api.github.com/users/markeggleston/events{/privacy}", "received_events_url": "https://api.github.com/users/markeggleston/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd241b945849cd66f122189d97d54d4a4d9e475a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd241b945849cd66f122189d97d54d4a4d9e475a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd241b945849cd66f122189d97d54d4a4d9e475a"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "3eca99ecc7cfc364c2647783ee452032244b95c1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53aa4da8add4e3adc6c38f70eb172d570865831/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53aa4da8add4e3adc6c38f70eb172d570865831/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a53aa4da8add4e3adc6c38f70eb172d570865831", "patch": "@@ -1,3 +1,8 @@\n+2019-08-20  Mark Eggleston  <mark.eggleston@codethink.com>\n+\n+\tPR fortran/89236\n+\t* intrinsic.texi: Add GNU extension notes to DIM, MOD, MODULO.\n+\n 2019-08-19  Mark Eggleston  <mark.eggleston@codethink.com>\n \n \t* gfortran.texi: Delete paragraph about integer overload errors"}, {"sha": "31b97c4def6d2186e6729927d08a68f5174e8a1e", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a53aa4da8add4e3adc6c38f70eb172d570865831/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a53aa4da8add4e3adc6c38f70eb172d570865831/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=a53aa4da8add4e3adc6c38f70eb172d570865831", "patch": "@@ -4876,11 +4876,13 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{X} @tab The type shall be @code{INTEGER} or @code{REAL}\n-@item @var{Y} @tab The type shall be the same type and kind as @var{X}.\n+@item @var{Y} @tab The type shall be the same type and kind as @var{X}.  (As\n+a GNU extension, arguments of different kinds are permitted.)\n @end multitable\n \n @item @emph{Return value}:\n-The return value is of type @code{INTEGER} or @code{REAL}.\n+The return value is of type @code{INTEGER} or @code{REAL}.  (As a GNU\n+extension, kind is the largest kind of the actual arguments.)\n \n @item @emph{Example}:\n @smallexample\n@@ -10607,14 +10609,16 @@ Elemental function\n @multitable @columnfractions .15 .70\n @item @var{A} @tab Shall be a scalar of type @code{INTEGER} or @code{REAL}.\n @item @var{P} @tab Shall be a scalar of the same type and kind as @var{A} \n-and not equal to zero.\n+and not equal to zero.  (As a GNU extension, arguments of different kinds are\n+permitted.)\n @end multitable\n \n @item @emph{Return value}:\n The return value is the result of @code{A - (INT(A/P) * P)}. The type\n and kind of the return value is the same as that of the arguments. The\n returned value has the same sign as A and a magnitude less than the\n-magnitude of P.\n+magnitude of P.  (As a GNU extension, kind is the largest kind of the actual\n+arguments.)\n \n @item @emph{Example}:\n @smallexample\n@@ -10678,11 +10682,13 @@ Elemental function\n @multitable @columnfractions .15 .70\n @item @var{A} @tab Shall be a scalar of type @code{INTEGER} or @code{REAL}.\n @item @var{P} @tab Shall be a scalar of the same type and kind as @var{A}. \n-It shall not be zero.\n+It shall not be zero.  (As a GNU extension, arguments of different kinds are\n+permitted.)\n @end multitable\n \n @item @emph{Return value}:\n-The type and kind of the result are those of the arguments.\n+The type and kind of the result are those of the arguments.  (As a GNU\n+extension, kind is the largest kind of the actual arguments.)\n @table @asis\n @item If @var{A} and @var{P} are of type @code{INTEGER}:\n @code{MODULO(A,P)} has the value @var{R} such that @code{A=Q*P+R}, where\n@@ -12917,7 +12923,7 @@ Elemental function\n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n @item @var{A} @tab Shall be of type @code{INTEGER} or @code{REAL}\n-@item @var{B} @tab Shall be of the same type and kind as @var{A}\n+@item @var{B} @tab Shall be of the same type and kind as @var{A}.\n @end multitable\n \n @item @emph{Return value}:"}]}