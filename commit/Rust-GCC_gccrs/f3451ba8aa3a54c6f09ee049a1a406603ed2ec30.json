{"sha": "f3451ba8aa3a54c6f09ee049a1a406603ed2ec30", "node_id": "C_kwDOANBUbNoAKGYzNDUxYmE4YWEzYTU0YzZmMDllZTA0OWExYTQwNjYwM2VkMmVjMzA", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-05-26T00:21:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-04T07:45:57Z"}, "message": "[Ada] Enforce deferred constant completion rules\n\nIf a constrained subtype is given when a deferred constant is declared,\nthen the subtype given in the completion is required (at compile time)\nto be subject to a statically matching constraint. This rule was not\nproperly enforced in some cases and constructs that should have been\nrejected were incorrectly accepted.\n\ngcc/ada/\n\n\t* sem_ch3.adb (Check_Possible_Deferred_Completion): Delete\n\tPrev_Obj_Def formal parameter.  Reorganize code so that\n\tstatically matching check is also performed in the case where\n\tthe subtype given in the initial declaration is constrained and\n\tthe subtype given in the completion is not.", "tree": {"sha": "f8dfcb2de113874f7af781e0e8055719da89fcaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8dfcb2de113874f7af781e0e8055719da89fcaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3451ba8aa3a54c6f09ee049a1a406603ed2ec30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3451ba8aa3a54c6f09ee049a1a406603ed2ec30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3451ba8aa3a54c6f09ee049a1a406603ed2ec30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3451ba8aa3a54c6f09ee049a1a406603ed2ec30/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b766285b089ba1bce91a7644b9d97836e80cda3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b766285b089ba1bce91a7644b9d97836e80cda3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b766285b089ba1bce91a7644b9d97836e80cda3"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "93aa2ca2b0f09d73638560eff56c5d871cb42d71", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 32, "deletions": 14, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3451ba8aa3a54c6f09ee049a1a406603ed2ec30/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3451ba8aa3a54c6f09ee049a1a406603ed2ec30/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f3451ba8aa3a54c6f09ee049a1a406603ed2ec30", "patch": "@@ -13126,7 +13126,6 @@ package body Sem_Ch3 is\n \n       procedure Check_Possible_Deferred_Completion\n         (Prev_Id      : Entity_Id;\n-         Prev_Obj_Def : Node_Id;\n          Curr_Obj_Def : Node_Id);\n       --  Determine whether the two object definitions describe the partial\n       --  and the full view of a constrained deferred constant. Generate\n@@ -13146,15 +13145,16 @@ package body Sem_Ch3 is\n \n       procedure Check_Possible_Deferred_Completion\n         (Prev_Id      : Entity_Id;\n-         Prev_Obj_Def : Node_Id;\n          Curr_Obj_Def : Node_Id)\n       is\n+         Curr_Typ : Entity_Id;\n+         Prev_Typ : constant Entity_Id := Etype (Prev_Id);\n+         Anon_Acc : constant Boolean := Is_Anonymous_Access_Type (Prev_Typ);\n+         Mismatch : Boolean := False;\n       begin\n-         if Nkind (Prev_Obj_Def) = N_Subtype_Indication\n-           and then Present (Constraint (Prev_Obj_Def))\n-           and then Nkind (Curr_Obj_Def) = N_Subtype_Indication\n-           and then Present (Constraint (Curr_Obj_Def))\n-         then\n+         if Anon_Acc then\n+            null;\n+         elsif Nkind (Curr_Obj_Def) = N_Subtype_Indication then\n             declare\n                Loc    : constant Source_Ptr := Sloc (N);\n                Def_Id : constant Entity_Id  := Make_Temporary (Loc, 'S');\n@@ -13167,13 +13167,32 @@ package body Sem_Ch3 is\n             begin\n                Insert_Before_And_Analyze (N, Decl);\n                Set_Etype (Id, Def_Id);\n-\n-               if not Subtypes_Statically_Match (Etype (Prev_Id), Def_Id) then\n-                  Error_Msg_Sloc := Sloc (Prev_Id);\n-                  Error_Msg_N (\"subtype does not statically match deferred \"\n-                               & \"declaration #\", N);\n-               end if;\n+               Curr_Typ := Def_Id;\n             end;\n+         else\n+            Curr_Typ := Etype (Curr_Obj_Def);\n+         end if;\n+\n+         if Anon_Acc then\n+            if Nkind (Curr_Obj_Def) /= N_Access_Definition then\n+               Mismatch := True;\n+            elsif Has_Null_Exclusion (Prev_Typ)\n+              and then not Null_Exclusion_Present (Curr_Obj_Def)\n+            then\n+               Mismatch := True;\n+            end if;\n+            --  ??? Another check needed: mismatch if disagreement\n+            --  between designated types/profiles .\n+         else\n+            Mismatch :=\n+              Is_Constrained (Prev_Typ)\n+                and then not Subtypes_Statically_Match (Prev_Typ, Curr_Typ);\n+         end if;\n+\n+         if Mismatch then\n+            Error_Msg_Sloc := Sloc (Prev_Id);\n+            Error_Msg_N (\"subtype does not statically match deferred \"\n+                         & \"declaration #\", N);\n          end if;\n       end Check_Possible_Deferred_Completion;\n \n@@ -13316,7 +13335,6 @@ package body Sem_Ch3 is\n \n          Check_Possible_Deferred_Completion\n            (Prev_Id      => Prev,\n-            Prev_Obj_Def => Object_Definition (Parent (Prev)),\n             Curr_Obj_Def => Obj_Def);\n \n          Set_Full_View (Prev, Id);"}]}