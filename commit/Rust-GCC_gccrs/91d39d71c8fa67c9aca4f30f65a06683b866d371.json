{"sha": "91d39d71c8fa67c9aca4f30f65a06683b866d371", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkMzlkNzFjOGZhNjdjOWFjYTRmMzBmNjVhMDY2ODNiODY2ZDM3MQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-12-18T20:22:30Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-12-18T20:22:30Z"}, "message": "s390.md (UNSPEC_SRST): New constant.\n\n\t* config/s390/s390.md (UNSPEC_SRST): New constant.\n\t(\"strlendi\", \"strlensi\"): New expanders.\n\t(\"*strlendi\", \"*strlensi\"): New insns.\n\nCo-Authored-By: Mark Dettinger <dettinge@de.ibm.com>\n\nFrom-SVN: r74794", "tree": {"sha": "cbb11e1453a71a77ef8648e8c2c4e3abfa325122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbb11e1453a71a77ef8648e8c2c4e3abfa325122"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d39d71c8fa67c9aca4f30f65a06683b866d371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d39d71c8fa67c9aca4f30f65a06683b866d371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d39d71c8fa67c9aca4f30f65a06683b866d371", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d39d71c8fa67c9aca4f30f65a06683b866d371/comments", "author": null, "committer": null, "parents": [{"sha": "61aaea231763825d1f16140c8abc941a2d00f3df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61aaea231763825d1f16140c8abc941a2d00f3df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61aaea231763825d1f16140c8abc941a2d00f3df"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "b76dc3024ac4a1bf31c58595d02dfe6cf0d20e50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d39d71c8fa67c9aca4f30f65a06683b866d371/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d39d71c8fa67c9aca4f30f65a06683b866d371/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91d39d71c8fa67c9aca4f30f65a06683b866d371", "patch": "@@ -1,3 +1,10 @@\n+2003-12-18  Ulrich Weigand  <uweigand@de.ibm.com>\n+\t    Mark Dettinger  <dettinge@de.ibm.com>\n+\n+\t* config/s390/s390.md (UNSPEC_SRST): New constant.\n+\t(\"strlendi\", \"strlensi\"): New expanders.\n+\t(\"*strlendi\", \"*strlensi\"): New insns.\n+\n 2003-12-18  Mark Mitchell  <mark@codesourcery.com>\n \n \t* config/sol2.h (LINK_ARCH32_SPEC): Define in terms of ..."}, {"sha": "215848b9f1d736a87dde530bcca53de5d6ace9f9", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d39d71c8fa67c9aca4f30f65a06683b866d371/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d39d71c8fa67c9aca4f30f65a06683b866d371/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=91d39d71c8fa67c9aca4f30f65a06683b866d371", "patch": "@@ -104,6 +104,9 @@\n    (UNSPEC_TP\t\t\t510)\n    (UNSPEC_TLSLDM_NTPOFF\t511)\n    (UNSPEC_TLS_LOAD\t\t512)\n+\n+   ; String Functions\n+   (UNSPEC_SRST\t\t600)\n  ])\n \n ;;\n@@ -1733,6 +1736,82 @@\n ;; String instructions.\n ;;\n \n+;\n+; strlenM instruction pattern(s).\n+;\n+\n+(define_expand \"strlendi\"\n+  [(set (reg:QI 0) (match_operand:QI 2 \"immediate_operand\" \"\"))\n+   (parallel \n+    [(set (match_dup 4)\n+\t  (unspec:DI [(const_int 0)\n+\t\t      (match_operand:BLK 1 \"memory_operand\" \"\")\n+\t\t      (reg:QI 0)\n+\t\t      (match_operand 3 \"immediate_operand\" \"\")] UNSPEC_SRST))\n+     (clobber (scratch:DI))\n+     (clobber (reg:CC 33))])\n+   (parallel\n+    [(set (match_operand:DI 0 \"register_operand\" \"\")\n+          (minus:DI (match_dup 4) (match_dup 5)))\n+     (clobber (reg:CC 33))])]\n+  \"TARGET_64BIT\"\n+{\n+  operands[4] = gen_reg_rtx (DImode);\n+  operands[5] = gen_reg_rtx (DImode);\n+  emit_move_insn (operands[5], force_operand (XEXP (operands[1], 0), NULL_RTX));\n+  operands[1] = replace_equiv_address (operands[1], operands[5]);\n+})\n+\n+(define_insn \"*strlendi\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=a\")\n+\t(unspec:DI [(match_operand:DI 2 \"general_operand\" \"0\")\n+\t\t    (mem:BLK (match_operand:DI 3 \"register_operand\" \"1\"))\n+\t\t    (reg:QI 0)\n+\t\t    (match_operand 4 \"immediate_operand\" \"\")] UNSPEC_SRST))\n+   (clobber (match_scratch:DI 1 \"=a\"))\n+   (clobber (reg:CC 33))]\n+  \"TARGET_64BIT\"\n+  \"srst\\t%0,%1\\;jo\\t.-4\"\n+  [(set_attr \"op_type\" \"NN\")\n+   (set_attr \"type\"    \"vs\")\n+   (set_attr \"length\"  \"8\")])\n+\n+(define_expand \"strlensi\"\n+  [(set (reg:QI 0) (match_operand:QI 2 \"immediate_operand\" \"\"))\n+   (parallel \n+    [(set (match_dup 4)\n+\t  (unspec:SI [(const_int 0)\n+\t\t      (match_operand:BLK 1 \"memory_operand\" \"\")\n+\t\t      (reg:QI 0)\n+\t\t      (match_operand 3 \"immediate_operand\" \"\")] UNSPEC_SRST))\n+     (clobber (scratch:SI))\n+     (clobber (reg:CC 33))])\n+   (parallel\n+    [(set (match_operand:SI 0 \"register_operand\" \"\")\n+          (minus:SI (match_dup 4) (match_dup 5)))\n+     (clobber (reg:CC 33))])]\n+  \"!TARGET_64BIT\"\n+{\n+  operands[4] = gen_reg_rtx (SImode);\n+  operands[5] = gen_reg_rtx (SImode);\n+  emit_move_insn (operands[5], force_operand (XEXP (operands[1], 0), NULL_RTX));\n+  operands[1] = replace_equiv_address (operands[1], operands[5]);\n+})\n+\n+(define_insn \"*strlensi\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n+\t(unspec:SI [(match_operand:SI 2 \"general_operand\" \"0\")\n+\t\t    (mem:BLK (match_operand:SI 3 \"register_operand\" \"1\"))\n+\t\t    (reg:QI 0)\n+\t\t    (match_operand 4 \"immediate_operand\" \"\")] UNSPEC_SRST))\n+   (clobber (match_scratch:SI 1 \"=a\"))\n+   (clobber (reg:CC 33))]\t\n+  \"!TARGET_64BIT\"\n+  \"srst\\t%0,%1\\;jo\\t.-4\"\n+  [(set_attr \"op_type\" \"NN\")\n+   (set_attr \"type\"    \"vs\")\n+   (set_attr \"length\"  \"8\")])\n+\n ;\n ; movstrM instruction pattern(s).\n ;"}]}