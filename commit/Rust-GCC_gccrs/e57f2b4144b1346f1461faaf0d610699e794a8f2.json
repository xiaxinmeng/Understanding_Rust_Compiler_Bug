{"sha": "e57f2b4144b1346f1461faaf0d610699e794a8f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU3ZjJiNDE0NGIxMzQ2ZjE0NjFmYWFmMGQ2MTA2OTllNzk0YThmMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-06-23T16:04:09Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-06-23T16:04:09Z"}, "message": "re PR tree-optimization/22117 (VRP thinks <ptr type> + <ptr type> is always nonnull.)\n\ngcc/\n\tPR tree-optimization/22117\n\t* tree-vrp.c (extract_range_from_binary_expr): Compute a\n\tcorrect range when adding two pointers.\n\ntestsuite/\n\tPR tree-optimization/22117\n\t* gcc.dg/tree-ssa/pr22117.c: New.\n\nFrom-SVN: r101272", "tree": {"sha": "4a87e6c81eafd68c0f78223179ac6386a7acd539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a87e6c81eafd68c0f78223179ac6386a7acd539"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e57f2b4144b1346f1461faaf0d610699e794a8f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e57f2b4144b1346f1461faaf0d610699e794a8f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e57f2b4144b1346f1461faaf0d610699e794a8f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e57f2b4144b1346f1461faaf0d610699e794a8f2/comments", "author": null, "committer": null, "parents": [{"sha": "a31de5014b57e76226aed7e968466e6d026cb260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31de5014b57e76226aed7e968466e6d026cb260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a31de5014b57e76226aed7e968466e6d026cb260"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "cbf721b77fb4198226e0ba1511f593ec26071b00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57f2b4144b1346f1461faaf0d610699e794a8f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57f2b4144b1346f1461faaf0d610699e794a8f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e57f2b4144b1346f1461faaf0d610699e794a8f2", "patch": "@@ -1,3 +1,9 @@\n+2005-06-23  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\tPR tree-optimization/22117\n+\t* tree-vrp.c (extract_range_from_binary_expr): Compute a\n+\tcorrect range when adding two pointers.\n+\n 2005-06-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/19317"}, {"sha": "6250859ac8bb838e47b07634fe415058e50606fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57f2b4144b1346f1461faaf0d610699e794a8f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57f2b4144b1346f1461faaf0d610699e794a8f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e57f2b4144b1346f1461faaf0d610699e794a8f2", "patch": "@@ -1,3 +1,8 @@\n+2005-06-23  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\tPR tree-optimization/22117\n+\t* gcc.dg/tree-ssa/pr22117.c: New.\n+\n 2005-06-23  James A. Morrison  <phython@gcc.gnu.org>\n \n \tPR testsuite/22123"}, {"sha": "0955c4519fbacf53f1adcee92552ee8e4a3f0d8b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr22117.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57f2b4144b1346f1461faaf0d610699e794a8f2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22117.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57f2b4144b1346f1461faaf0d610699e794a8f2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22117.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22117.c?ref=e57f2b4144b1346f1461faaf0d610699e794a8f2", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/22117\n+   VRP used think that &p[q] is nonzero even though p and q are both\n+   known to be zero after entering the first two \"if\" statements.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-vrp\" } */\n+\n+void\n+foo (int *p, int q)\n+{\n+  if (p == 0)\n+    {\n+      if (q == 0)\n+\t{\n+\t  int *r = &p[q];\n+\t  if (r != 0)\n+\t    link_error ();\n+\t}\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Folding predicate r_.* != 0B to 0\" 1 \"vrp\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp\" } } */"}, {"sha": "284208b16924132cb82f123b4837f193abb17277", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57f2b4144b1346f1461faaf0d610699e794a8f2/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57f2b4144b1346f1461faaf0d610699e794a8f2/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=e57f2b4144b1346f1461faaf0d610699e794a8f2", "patch": "@@ -1073,7 +1073,14 @@ extract_range_from_binary_expr (value_range_t *vr, tree expr)\n \t ivopts is generating expressions with pointer multiplication\n \t in them.  */\n       if (code == PLUS_EXPR)\n-\tset_value_range_to_nonnull (vr, TREE_TYPE (expr));\n+\t{\n+\t  if (range_is_nonnull (&vr0) || range_is_nonnull (&vr1))\n+\t    set_value_range_to_nonnull (vr, TREE_TYPE (expr));\n+\t  else if (range_is_null (&vr0) && range_is_null (&vr1))\n+\t    set_value_range_to_null (vr, TREE_TYPE (expr));\n+\t  else\n+\t    set_value_range_to_varying (vr);\n+\t}\n       else\n \t{\n \t  /* Subtracting from a pointer, may yield 0, so just drop the"}]}