{"sha": "70a73141e04e5ad042099082d4c1d79ccc6e0ab8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhNzMxNDFlMDRlNWFkMDQyMDk5MDgyZDRjMWQ3OWNjYzZlMGFiOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-19T06:38:23Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-19T06:38:23Z"}, "message": "(emit_call_1): Don't defer pops in const call.\n\nFrom-SVN: r3783", "tree": {"sha": "bf6e192f226654b4e7cf1a1028a83a88ba686f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf6e192f226654b4e7cf1a1028a83a88ba686f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70a73141e04e5ad042099082d4c1d79ccc6e0ab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a73141e04e5ad042099082d4c1d79ccc6e0ab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a73141e04e5ad042099082d4c1d79ccc6e0ab8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a73141e04e5ad042099082d4c1d79ccc6e0ab8/comments", "author": null, "committer": null, "parents": [{"sha": "50a9145ce3ba5fad804d4f3fc77946c7ef79fc33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a9145ce3ba5fad804d4f3fc77946c7ef79fc33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a9145ce3ba5fad804d4f3fc77946c7ef79fc33"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f5fb8a58ead45710cdf9a5cebe296475b5ea0ea6", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70a73141e04e5ad042099082d4c1d79ccc6e0ab8/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70a73141e04e5ad042099082d4c1d79ccc6e0ab8/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=70a73141e04e5ad042099082d4c1d79ccc6e0ab8", "patch": "@@ -397,7 +397,7 @@ emit_call_1 (funexp, funtype, stack_size, struct_value_size, next_arg_reg,\n \n   if (stack_size != 0)\n     {\n-      if (flag_defer_pop && inhibit_defer_pop == 0)\n+      if (flag_defer_pop && inhibit_defer_pop == 0 && !is_const)\n \tpending_stack_adjust += stack_size;\n       else\n \tadjust_stack (stack_size_rtx);"}]}