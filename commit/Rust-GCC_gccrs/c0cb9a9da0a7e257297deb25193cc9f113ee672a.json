{"sha": "c0cb9a9da0a7e257297deb25193cc9f113ee672a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBjYjlhOWRhMGE3ZTI1NzI5N2RlYjI1MTkzY2M5ZjExM2VlNjcyYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-07-10T00:55:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-07-10T00:55:28Z"}, "message": "compiler: fix double evaluation with interface field expression\n    \n    In Interface_field_reference_expression, the interface expression\n    is used in two places, so a temporary variable is used. Previously,\n    we used a Set_and_use_temporary_expression, which, when evaluated\n    twice, causes double evaluation of the underlying expression. Fix\n    by setting the temporary once and use Temporary_reference_expression\n    instead.\n    \n    Fixes golang/go#26248.\n    \n    Reviewed-on: https://go-review.googlesource.com/122756\n\nFrom-SVN: r262533", "tree": {"sha": "26c3014d414d02aa217dd23af1afbe63837aa7f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c3014d414d02aa217dd23af1afbe63837aa7f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0cb9a9da0a7e257297deb25193cc9f113ee672a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0cb9a9da0a7e257297deb25193cc9f113ee672a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0cb9a9da0a7e257297deb25193cc9f113ee672a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0cb9a9da0a7e257297deb25193cc9f113ee672a/comments", "author": null, "committer": null, "parents": [{"sha": "fd7ec17d0ba5bce1f71aff0d4ac80eb07121a1d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd7ec17d0ba5bce1f71aff0d4ac80eb07121a1d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd7ec17d0ba5bce1f71aff0d4ac80eb07121a1d3"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "8a63818951beabd1851cce03fb38632c68db8587", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cb9a9da0a7e257297deb25193cc9f113ee672a/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cb9a9da0a7e257297deb25193cc9f113ee672a/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=c0cb9a9da0a7e257297deb25193cc9f113ee672a", "patch": "@@ -1,4 +1,4 @@\n-94738979a3422e845acf358a766aabf8b9275d43\n+8ad67a72a4fa59efffc891e73ecf10020e3c565d\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "89b265b9b6bba6606e6e31cc6374e1f516a808fd", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cb9a9da0a7e257297deb25193cc9f113ee672a/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cb9a9da0a7e257297deb25193cc9f113ee672a/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=c0cb9a9da0a7e257297deb25193cc9f113ee672a", "patch": "@@ -11886,10 +11886,9 @@ Interface_field_reference_expression::do_flatten(Gogo*, Named_object*,\n   if (!this->expr_->is_variable())\n     {\n       Temporary_statement* temp =\n-\tStatement::make_temporary(this->expr_->type(), NULL, this->location());\n+\tStatement::make_temporary(NULL, this->expr_, this->location());\n       inserter->insert(temp);\n-      this->expr_ = Expression::make_set_and_use_temporary(temp, this->expr_,\n-\t\t\t\t\t\t\t   this->location());\n+      this->expr_ = Expression::make_temporary_reference(temp, this->location());\n     }\n   return this;\n }"}]}