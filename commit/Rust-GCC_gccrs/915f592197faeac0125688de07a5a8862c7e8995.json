{"sha": "915f592197faeac0125688de07a5a8862c7e8995", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE1ZjU5MjE5N2ZhZWFjMDEyNTY4OGRlMDdhNWE4ODYyYzdlODk5NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-04-23T16:16:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-04-23T16:16:50Z"}, "message": "expr.c (expand_expr_real_1): Only use conversion between modes if both types are integral.\n\n\t* expr.c (expand_expr_real_1) <VIEW_CONVERT_EXPR>: Only use conversion\n\tbetween modes if both types are integral.\n\nFrom-SVN: r158675", "tree": {"sha": "b4fde14957f759576a713982c6bfc9a70e5a94a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4fde14957f759576a713982c6bfc9a70e5a94a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/915f592197faeac0125688de07a5a8862c7e8995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/915f592197faeac0125688de07a5a8862c7e8995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/915f592197faeac0125688de07a5a8862c7e8995", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/915f592197faeac0125688de07a5a8862c7e8995/comments", "author": null, "committer": null, "parents": [{"sha": "ed0f0c0f2429d3624dd86da66dfcd3926e69a248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0f0c0f2429d3624dd86da66dfcd3926e69a248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0f0c0f2429d3624dd86da66dfcd3926e69a248"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "6b5feae200f00879c39a9bca748e399e172b3904", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/915f592197faeac0125688de07a5a8862c7e8995/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/915f592197faeac0125688de07a5a8862c7e8995/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=915f592197faeac0125688de07a5a8862c7e8995", "patch": "@@ -1,3 +1,8 @@\n+2010-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* expr.c (expand_expr_real_1) <VIEW_CONVERT_EXPR>: Only use conversion\n+\tbetween modes if both types are integral.\n+\n 2010-04-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43572"}, {"sha": "e61ad1e22df6a6e86de0477c384cf0bbea39d72d", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/915f592197faeac0125688de07a5a8862c7e8995/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/915f592197faeac0125688de07a5a8862c7e8995/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=915f592197faeac0125688de07a5a8862c7e8995", "patch": "@@ -9323,9 +9323,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t    op0 = force_reg (GET_MODE (op0), op0);\n \t  op0 = gen_lowpart (mode, op0);\n \t}\n-      /* If both modes are integral, then we can convert from one to the\n-\t other.  */\n-      else if (SCALAR_INT_MODE_P (GET_MODE (op0)) && SCALAR_INT_MODE_P (mode))\n+      /* If both types are integral, convert from one mode to the other.  */\n+      else if (INTEGRAL_TYPE_P (type) && INTEGRAL_TYPE_P (TREE_TYPE (treeop0)))\n \top0 = convert_modes (mode, GET_MODE (op0), op0,\n \t\t\t     TYPE_UNSIGNED (TREE_TYPE (treeop0)));\n       /* As a last resort, spill op0 to memory, and reload it in a"}, {"sha": "fc5f35f58a0b425681827d7ce5bae6a5b2c31740", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/915f592197faeac0125688de07a5a8862c7e8995/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/915f592197faeac0125688de07a5a8862c7e8995/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=915f592197faeac0125688de07a5a8862c7e8995", "patch": "@@ -1,3 +1,7 @@\n+2010-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/unchecked_convert5.adb: New test.\n+\n 2010-04-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/41734"}, {"sha": "e3e4312d73107c0d61457458388b17425b21067a", "filename": "gcc/testsuite/gnat.dg/unchecked_convert5.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/915f592197faeac0125688de07a5a8862c7e8995/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/915f592197faeac0125688de07a5a8862c7e8995/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert5.adb?ref=915f592197faeac0125688de07a5a8862c7e8995", "patch": "@@ -0,0 +1,22 @@\n+-- { dg-do run { target hppa*-*-* sparc*-*-* powerpc*-*-* } }\n+\n+with Unchecked_Conversion;\n+\n+procedure Unchecked_Convert5 is\n+\n+  subtype c_1 is string(1..1);\n+\n+  function int2c1 is  -- { dg-warning \"different sizes\" }\n+    new unchecked_conversion (source => integer, target => c_1);\n+\n+  c1 : c_1;\n+\n+begin\n+\n+  c1 := int2c1(16#12#);\n+\n+  if c1 (1) /= ASCII.Nul then\n+    raise Program_Error;\n+  end if;\n+\n+end;"}]}