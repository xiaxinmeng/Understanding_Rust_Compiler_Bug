{"sha": "01ab55749f71283cfd8416d68c7e34f036b2d51d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFhYjU1NzQ5ZjcxMjgzY2ZkODQxNmQ2OGM3ZTM0ZjAzNmIyZDUxZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-18T19:42:22Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-18T19:42:22Z"}, "message": "h8300.c (expand_a_rotate): Don't generate insns by hand.\n\n\t* config/h8300/h8300.c (expand_a_rotate): Don't generate insns\n\tby hand.\n\t(output_a_rotate): Tweak a comment.\n\t* config/h8300/h8300.md (*rotlqi3_1): Change to rotlqi3_1.\n\t(*rotlhi3_1): Change to rotlhi3_1.\n\t(*rotlsi3_1): Change to rotlsi3_1.\n\nFrom-SVN: r78043", "tree": {"sha": "58c40716b47f97b5348ae80f752b4a5cfdbf80c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58c40716b47f97b5348ae80f752b4a5cfdbf80c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01ab55749f71283cfd8416d68c7e34f036b2d51d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ab55749f71283cfd8416d68c7e34f036b2d51d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ab55749f71283cfd8416d68c7e34f036b2d51d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ab55749f71283cfd8416d68c7e34f036b2d51d/comments", "author": null, "committer": null, "parents": [{"sha": "d5f7d2d0416025b64cb2656af4bba3ae24ffa76c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f7d2d0416025b64cb2656af4bba3ae24ffa76c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f7d2d0416025b64cb2656af4bba3ae24ffa76c"}], "stats": {"total": 53, "additions": 42, "deletions": 11}, "files": [{"sha": "2ea80aa80ecfcc27e78e0b44097ed9fd4a4e698b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ab55749f71283cfd8416d68c7e34f036b2d51d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ab55749f71283cfd8416d68c7e34f036b2d51d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01ab55749f71283cfd8416d68c7e34f036b2d51d", "patch": "@@ -1,3 +1,12 @@\n+2004-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (expand_a_rotate): Don't generate insns\n+\tby hand.\n+\t(output_a_rotate): Tweak a comment.\n+\t* config/h8300/h8300.md (*rotlqi3_1): Change to rotlqi3_1.\n+\t(*rotlhi3_1): Change to rotlhi3_1.\n+\t(*rotlsi3_1): Change to rotlsi3_1.\n+\n 2004-02-18  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/13866"}, {"sha": "3d9633c8c19895c51802a213a8fa264a1fa320fa", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ab55749f71283cfd8416d68c7e34f036b2d51d/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ab55749f71283cfd8416d68c7e34f036b2d51d/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=01ab55749f71283cfd8416d68c7e34f036b2d51d", "patch": "@@ -3861,7 +3861,6 @@ expand_a_rotate (enum rtx_code code, rtx operands[])\n   rtx src = operands[1];\n   rtx rotate_amount = operands[2];\n   enum machine_mode mode = GET_MODE (dst);\n-  rtx tmp;\n \n   /* We rotate in place.  */\n   emit_move_insn (dst, src);\n@@ -3883,12 +3882,23 @@ expand_a_rotate (enum rtx_code code, rtx operands[])\n       emit_label (start_label);\n \n       /* Rotate by one bit.  */\n-      tmp = gen_rtx_fmt_ee (code, mode, dst, const1_rtx);\n-      emit_insn (gen_rtx_SET (mode, dst, tmp));\n+      switch (mode)\n+\t{\n+\tcase QImode:\n+\t  emit_insn (gen_rotlqi3_1 (dst, dst, const1_rtx));\n+\t  break;\n+\tcase HImode:\n+\t  emit_insn (gen_rotlhi3_1 (dst, dst, const1_rtx));\n+\t  break;\n+\tcase SImode:\n+\t  emit_insn (gen_rotlsi3_1 (dst, dst, const1_rtx));\n+\t  break;\n+\tdefault:\n+\t  abort ();\n+\t}\n \n       /* Decrement the counter by 1.  */\n-      tmp = gen_rtx_PLUS (QImode, counter, constm1_rtx);\n-      emit_insn (gen_rtx_SET (VOIDmode, counter, tmp));\n+      emit_insn (gen_addqi3 (counter, counter, constm1_rtx));\n \n       /* If the loop counter is nonzero, we go back to the beginning\n \t of the loop.  */\n@@ -3900,8 +3910,20 @@ expand_a_rotate (enum rtx_code code, rtx operands[])\n   else\n     {\n       /* Rotate by AMOUNT bits.  */\n-      tmp = gen_rtx_fmt_ee (code, mode, dst, rotate_amount);\n-      emit_insn (gen_rtx_SET (mode, dst, tmp));\n+      switch (mode)\n+\t{\n+\tcase QImode:\n+\t  emit_insn (gen_rotlqi3_1 (dst, dst, rotate_amount));\n+\t  break;\n+\tcase HImode:\n+\t  emit_insn (gen_rotlhi3_1 (dst, dst, rotate_amount));\n+\t  break;\n+\tcase SImode:\n+\t  emit_insn (gen_rotlsi3_1 (dst, dst, rotate_amount));\n+\t  break;\n+\tdefault:\n+\t  abort ();\n+\t}\n     }\n \n   return 1;\n@@ -4001,7 +4023,7 @@ output_a_rotate (enum rtx_code code, rtx *operands)\n \t(rotate_type == SHIFT_ASHIFT) ? SHIFT_LSHIFTRT : SHIFT_ASHIFT;\n     }\n \n-  /* Emit rotate insns.  */\n+  /* Output rotate insns.  */\n   for (bits = TARGET_H8300S ? 2 : 1; bits > 0; bits /= 2)\n     {\n       if (bits == 2)"}, {"sha": "ad5306f9a5edf68bedf08d87fc9fcd112649b3f4", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ab55749f71283cfd8416d68c7e34f036b2d51d/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ab55749f71283cfd8416d68c7e34f036b2d51d/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=01ab55749f71283cfd8416d68c7e34f036b2d51d", "patch": "@@ -2602,7 +2602,7 @@\n   \"\"\n   \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n \n-(define_insn \"*rotlqi3_1\"\n+(define_insn \"rotlqi3_1\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n \t(rotate:QI (match_operand:QI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:QI 2 \"immediate_operand\" \"\")))]\n@@ -2618,7 +2618,7 @@\n   \"\"\n   \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n \n-(define_insn \"*rotlhi3_1\"\n+(define_insn \"rotlhi3_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n \t(rotate:HI (match_operand:HI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:QI 2 \"immediate_operand\" \"\")))]\n@@ -2634,7 +2634,7 @@\n   \"TARGET_H8300H || TARGET_H8300S\"\n   \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n \n-(define_insn \"*rotlsi3_1\"\n+(define_insn \"rotlsi3_1\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:QI 2 \"immediate_operand\" \"\")))]"}]}