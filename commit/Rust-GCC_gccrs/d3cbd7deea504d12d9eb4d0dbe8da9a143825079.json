{"sha": "d3cbd7deea504d12d9eb4d0dbe8da9a143825079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNjYmQ3ZGVlYTUwNGQxMmQ5ZWI0ZDBkYmU4ZGE5YTE0MzgyNTA3OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-22T21:11:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-22T21:11:48Z"}, "message": "re PR tree-optimization/37143 (ICE in VRP with the auto-vectorizer)\n\n2008-08-22  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/37143\n\t* tree-vect-transform.c (vect_create_cond_for_align_checks): Build\n\ta conversion statement instead of a copy.\n\n\t* g++.dg/vect/pr37143.C: New testcase.\n\nFrom-SVN: r139500", "tree": {"sha": "5830c841f2ee8d3cb22709679eb2f5be5e8779e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5830c841f2ee8d3cb22709679eb2f5be5e8779e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3cbd7deea504d12d9eb4d0dbe8da9a143825079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cbd7deea504d12d9eb4d0dbe8da9a143825079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3cbd7deea504d12d9eb4d0dbe8da9a143825079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fee3292b1460655f81a06c160de992638749373a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee3292b1460655f81a06c160de992638749373a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee3292b1460655f81a06c160de992638749373a"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "84e6baa42d8deb74401d426423260273e2a191b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3cbd7deea504d12d9eb4d0dbe8da9a143825079", "patch": "@@ -1,3 +1,9 @@\n+2008-08-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37143\n+\t* tree-vect-transform.c (vect_create_cond_for_align_checks): Build\n+\ta conversion statement instead of a copy.\n+\n 2008-08-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/37184"}, {"sha": "8b41251f29698f6b000c2889a44477178e8a5159", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3cbd7deea504d12d9eb4d0dbe8da9a143825079", "patch": "@@ -1,3 +1,8 @@\n+2008-08-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37143\n+\t* g++.dg/vect/pr37143.C: New testcase.\n+\n 2008-08-22  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/30239"}, {"sha": "70cdfd29b8bc78830919328e289ccf266cfe086a", "filename": "gcc/testsuite/g++.dg/vect/pr37143.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr37143.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr37143.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr37143.C?ref=d3cbd7deea504d12d9eb4d0dbe8da9a143825079", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+void\n+f(int NumberOfSideSets, int *ssNumDFperSide, float *ssDF)\n+{\n+  int i;\n+  float *newssDF = __null;\n+  int *newssNumDF = new int [NumberOfSideSets];\n+  int ndf, nextDF, numNewDF = 0;\n+  int ii=0;\n+  for (i=0;  i<NumberOfSideSets;  i++)  \n+    numNewDF += newssNumDF[i];\n+  if (numNewDF > 0)\n+    newssDF = new float [numNewDF];\n+  nextDF = 0;\n+  ndf = ssNumDFperSide[ii];\n+  for (i=0;  i<ndf; i++)\n+    newssDF[nextDF++] = ssDF[i];\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "17fbcdbb7703fe32c550a8c93430ef8458d6c81f", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3cbd7deea504d12d9eb4d0dbe8da9a143825079/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=d3cbd7deea504d12d9eb4d0dbe8da9a143825079", "patch": "@@ -2707,7 +2707,10 @@ extract_range_from_unary_expr (value_range_t *vr, enum tree_code code,\n \tmax = fold_unary_to_constant (code, type, vr0.max);\n       else if (!needs_overflow_infinity (type))\n \tmax = TYPE_MAX_VALUE (type);\n-      else if (supports_overflow_infinity (type))\n+      else if (supports_overflow_infinity (type)\n+\t       /* We shouldn't generate [+INF, +INF] as set_value_range\n+\t\t  doesn't like this and ICEs.  */\n+\t       && !is_positive_overflow_infinity (min))\n \tmax = positive_overflow_infinity (type);\n       else\n \t{"}]}