{"sha": "7091039c6802a601e5dc52cf2d932eeeef375e9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA5MTAzOWM2ODAyYTYwMWU1ZGM1MmNmMmQ5MzJlZWVlZjM3NWU5Yw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1997-11-09T08:59:55Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-09T08:59:55Z"}, "message": "a29k.h (ELIGIBLE_FOR_EPILOGUE_DELAY): Avoid loads from varying addresses in the epilogue delay slot.\n\n        * a29k.h (ELIGIBLE_FOR_EPILOGUE_DELAY): Avoid loads from varying\n        addresses in the epilogue delay slot.\n\nFrom-SVN: r16394", "tree": {"sha": "76286ec4bd6a2cdb041d24f2479b4632fe025b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76286ec4bd6a2cdb041d24f2479b4632fe025b6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7091039c6802a601e5dc52cf2d932eeeef375e9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7091039c6802a601e5dc52cf2d932eeeef375e9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7091039c6802a601e5dc52cf2d932eeeef375e9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7091039c6802a601e5dc52cf2d932eeeef375e9c/comments", "author": null, "committer": null, "parents": [{"sha": "553914ad8b7f0ae4a1b22694f35e7380c4051520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553914ad8b7f0ae4a1b22694f35e7380c4051520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/553914ad8b7f0ae4a1b22694f35e7380c4051520"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "2541b830dc2b9523a662c5d132b5b29f89c43b6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7091039c6802a601e5dc52cf2d932eeeef375e9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7091039c6802a601e5dc52cf2d932eeeef375e9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7091039c6802a601e5dc52cf2d932eeeef375e9c", "patch": "@@ -1,3 +1,8 @@\n+Sun Nov  9 02:00:29 1997  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* a29k.h (ELIGIBLE_FOR_EPILOGUE_DELAY): Avoid loads from varying\n+\taddresses in the epilogue delay slot.\n+\n Sun Nov  9 01:40:40 1997  Manfred Hollstein  (manfred@s-direktnet.de)\n \n \t* m88k/dgux.h (ASM_CPU_SPEC): Reformatted to suppress wrong whitespace"}, {"sha": "db6e378d252c350788b72564050e44bfd6e763aa", "filename": "gcc/config/a29k/a29k.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7091039c6802a601e5dc52cf2d932eeeef375e9c/gcc%2Fconfig%2Fa29k%2Fa29k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7091039c6802a601e5dc52cf2d932eeeef375e9c/gcc%2Fconfig%2Fa29k%2Fa29k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.h?ref=7091039c6802a601e5dc52cf2d932eeeef375e9c", "patch": "@@ -987,13 +987,18 @@ extern char *a29k_function_name;\n \n    On the 29k, we must be able to place it in a delay slot, it must\n    not use sp if the frame pointer cannot be eliminated, and it cannot\n-   use local regs if we need to push the register stack.  */\n+   use local regs if we need to push the register stack.\n+   If this is a SET with a memory as source, it might load from\n+   a stack slot, unless the address is constant.  */\n \n #define ELIGIBLE_FOR_EPILOGUE_DELAY(INSN,N)\t\t\t\t\\\n   (get_attr_in_delay_slot (INSN) == IN_DELAY_SLOT_YES\t\t\t\\\n    && ! (frame_pointer_needed\t\t\t\t\t\t\\\n \t && reg_mentioned_p (stack_pointer_rtx, PATTERN (INSN)))\t\\\n-   && ! (needs_regstack_p () && uses_local_reg_p (PATTERN (INSN))))\n+   && ! (needs_regstack_p () && uses_local_reg_p (PATTERN (INSN)))\t\\\n+   && (GET_CODE (PATTERN (INSN)) != SET\t\t\t\t\t\\\n+       || GET_CODE (SET_SRC (PATTERN (INSN))) != MEM\t\t\t\\\n+       || ! rtx_varies_p (XEXP (SET_SRC (PATTERN (INSN)), 0))))\n \f\n /* Output assembler code for a block containing the constant parts\n    of a trampoline, leaving space for the variable parts."}]}