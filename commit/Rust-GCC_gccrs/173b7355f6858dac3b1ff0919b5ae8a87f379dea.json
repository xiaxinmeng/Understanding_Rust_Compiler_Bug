{"sha": "173b7355f6858dac3b1ff0919b5ae8a87f379dea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTczYjczNTVmNjg1OGRhYzNiMWZmMDkxOWI1YWU4YTg3ZjM3OWRlYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2015-12-14T09:33:12Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2015-12-14T09:33:12Z"}, "message": "[PR 66616] Check for thunks when adding extra constants to clones\n\n2015-12-14  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/66616\n\t* ipa-cp.c (propagate_constants_accross_call): Move thuk check...\n\t(call_passes_through_thunk_p): ...here.\n\t(find_more_scalar_values_for_callers_subset): Perform thunk checks\n\tlike propagate_constants_accross_call does.\n\ntestsuite/\n\t* g++.dg/ipa/pr66616.C: New test.\n\nFrom-SVN: r231607", "tree": {"sha": "a80ba4c0b00626fa7d08d354c9bfd67cc9bb2036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a80ba4c0b00626fa7d08d354c9bfd67cc9bb2036"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/173b7355f6858dac3b1ff0919b5ae8a87f379dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173b7355f6858dac3b1ff0919b5ae8a87f379dea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/173b7355f6858dac3b1ff0919b5ae8a87f379dea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173b7355f6858dac3b1ff0919b5ae8a87f379dea/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "63da5ff6bfbc86294a911c36be99e70b9fc0a83a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63da5ff6bfbc86294a911c36be99e70b9fc0a83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63da5ff6bfbc86294a911c36be99e70b9fc0a83a"}], "stats": {"total": 92, "additions": 86, "deletions": 6}, "files": [{"sha": "39bbf199f0d678d0ad2188e405e51a48a7c9aaf2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173b7355f6858dac3b1ff0919b5ae8a87f379dea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173b7355f6858dac3b1ff0919b5ae8a87f379dea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=173b7355f6858dac3b1ff0919b5ae8a87f379dea", "patch": "@@ -1,3 +1,11 @@\n+2015-12-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/66616\n+\t* ipa-cp.c (propagate_constants_accross_call): Move thuk check...\n+\t(call_passes_through_thunk_p): ...here.\n+\t(find_more_scalar_values_for_callers_subset): Perform thunk checks\n+\tlike propagate_constants_accross_call does.\n+\n 2015-12-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/68730"}, {"sha": "8087f661d3e8bbb8df036a3d71c874e528b5b295", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173b7355f6858dac3b1ff0919b5ae8a87f379dea/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173b7355f6858dac3b1ff0919b5ae8a87f379dea/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=173b7355f6858dac3b1ff0919b5ae8a87f379dea", "patch": "@@ -1877,6 +1877,18 @@ propagate_aggs_accross_jump_function (struct cgraph_edge *cs,\n   return ret;\n }\n \n+/* Return true if on the way cfrom CS->caller to the final (non-alias and\n+   non-thunk) destination, the call passes through a thunk.  */\n+\n+static bool\n+call_passes_through_thunk_p (cgraph_edge *cs)\n+{\n+  cgraph_node *alias_or_thunk = cs->callee;\n+  while (alias_or_thunk->alias)\n+    alias_or_thunk = alias_or_thunk->get_alias_target ();\n+  return alias_or_thunk->thunk.thunk_p;\n+}\n+\n /* Propagate constants from the caller to the callee of CS.  INFO describes the\n    caller.  */\n \n@@ -1885,7 +1897,7 @@ propagate_constants_accross_call (struct cgraph_edge *cs)\n {\n   struct ipa_node_params *callee_info;\n   enum availability availability;\n-  struct cgraph_node *callee, *alias_or_thunk;\n+  cgraph_node *callee;\n   struct ipa_edge_args *args;\n   bool ret = false;\n   int i, args_count, parms_count;\n@@ -1923,10 +1935,7 @@ propagate_constants_accross_call (struct cgraph_edge *cs)\n   /* If this call goes through a thunk we must not propagate to the first (0th)\n      parameter.  However, we might need to uncover a thunk from below a series\n      of aliases first.  */\n-  alias_or_thunk = cs->callee;\n-  while (alias_or_thunk->alias)\n-    alias_or_thunk = alias_or_thunk->get_alias_target ();\n-  if (alias_or_thunk->thunk.thunk_p)\n+  if (call_passes_through_thunk_p (cs))\n     {\n       ret |= set_all_contains_variable (ipa_get_parm_lattices (callee_info,\n \t\t\t\t\t\t\t       0));\n@@ -3499,7 +3508,11 @@ find_more_scalar_values_for_callers_subset (struct cgraph_node *node,\n \t  struct ipa_jump_func *jump_func;\n \t  tree t;\n \n-          if (i >= ipa_get_cs_argument_count (IPA_EDGE_REF (cs)))\n+          if (i >= ipa_get_cs_argument_count (IPA_EDGE_REF (cs))\n+\t      || (i == 0\n+\t\t  && call_passes_through_thunk_p (cs))\n+\t      || (!cs->callee->instrumentation_clone\n+\t\t  && cs->callee->function_symbol ()->instrumentation_clone))\n             {\n               newval = NULL_TREE;\n               break;"}, {"sha": "cc8b9e2bdba1d3aa99b6fbce5491b2131bb722e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173b7355f6858dac3b1ff0919b5ae8a87f379dea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173b7355f6858dac3b1ff0919b5ae8a87f379dea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=173b7355f6858dac3b1ff0919b5ae8a87f379dea", "patch": "@@ -1,3 +1,8 @@\n+2015-12-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/66616\n+\t* g++.dg/ipa/pr66616.C: New test.\n+\n 2015-12-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/68730"}, {"sha": "440ea6c6bfc1b75d370882bdf5415fa712541c2b", "filename": "gcc/testsuite/g++.dg/ipa/pr66616.C", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/173b7355f6858dac3b1ff0919b5ae8a87f379dea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr66616.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/173b7355f6858dac3b1ff0919b5ae8a87f379dea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr66616.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr66616.C?ref=173b7355f6858dac3b1ff0919b5ae8a87f379dea", "patch": "@@ -0,0 +1,54 @@\n+// { dg-do run }\n+// { dg-options \"-O2 -fipa-cp-clone\" }\n+\n+struct Distraction\n+{\n+  char fc[8];\n+  virtual Distraction * return_self ()\n+  { return this; }\n+};\n+\n+static int go;\n+\n+struct A;\n+\n+struct A\n+{\n+  int fi;\n+\n+  A () : fi(0) {}\n+  A (int pi) : fi (pi) {}\n+  virtual void foo (int p) = 0;\n+};\n+\n+struct B;\n+\n+struct B : public Distraction, A\n+{\n+  B () : Distraction(), A() { }\n+  B (int pi) : Distraction (), A (pi) {}\n+  virtual void foo (int p)\n+  {\n+    int o = fi;\n+    for (int i = 0; i < p; i++)\n+      o += i + i * i;\n+    go = o;\n+  }\n+};\n+\n+struct B gb2 (2);\n+\n+extern \"C\" void abort (void);\n+\n+int\n+main (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    {\n+      struct A *p = &gb2;\n+      p->foo (0);\n+      if (go != 2)\n+\tabort ();\n+    }\n+  return 0;\n+}"}]}