{"sha": "39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlmOTVhMmM4ZTM2ZmNmYmFhZWQwMWZkYTU4NDI5YjdmNTM2Y2VmYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-08-06T06:39:21Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-06T06:39:21Z"}, "message": "Makefile.in (reload1.o): Add dedendancy on except.h\n\n        * Makefile.in (reload1.o): Add dedendancy on except.h\n        * basic-block.h (purge_all_dead_edges, purge_dead_edges): Update\n        prototypes.\n        * flow.c (purge_dead_edges, purge_all_dead_edges): Return bool\n        indicating wehther edges has been cleaned up.\n        * reload1.c: Inlucde except.h\n        (fixup_abnormal_edges): Accept deleted insns.\n        * toplev.c (rest_of_compilation): Purge dead edges unconditionally\n        after combine.\n\nFrom-SVN: r44654", "tree": {"sha": "61d8d5d8886c7c3b58d9f343c95ef80e811043fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61d8d5d8886c7c3b58d9f343c95ef80e811043fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/comments", "author": null, "committer": null, "parents": [{"sha": "9765f97213c272b1ec43872172027032d5c7c310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9765f97213c272b1ec43872172027032d5c7c310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9765f97213c272b1ec43872172027032d5c7c310"}], "stats": {"total": 185, "additions": 113, "deletions": 72}, "files": [{"sha": "293b81df9509f5f8db30d3093b179761ad46ebea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 61, "deletions": 49, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "patch": "@@ -1,3 +1,15 @@\n+2001-08-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* Makefile.in (reload1.o): Add dedendancy on except.h\n+\t* basic-block.h (purge_all_dead_edges, purge_dead_edges): Update\n+\tprototypes.\n+\t* flow.c (purge_dead_edges, purge_all_dead_edges): Return bool\n+\tindicating wehther edges has been cleaned up.\n+\t* reload1.c: Inlucde except.h\n+\t(fixup_abnormal_edges): Accept deleted insns.\n+\t* toplev.c (rest_of_compilation): Purge dead edges unconditionally\n+\tafter combine.\n+\n 2001-08-06  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpplib.c (do_line): Correct line number after pop_buffer.\n@@ -333,7 +345,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t(__gthread_mutex_init_function): New function for mutex initialization.\n \n 2001-08-03  Daniel Berlin  <dan@cgsoftware.com>\n-        \n+\t\n \t* Makefile.in: Revert screwed up commit.\n \n 2001-08-03  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n@@ -353,7 +365,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t(DTORS_SECTION_FUNCTION): Likewise for __do_global_dtors.\n \n 2001-08-03  Daniel Berlin  <dan@cgsoftware.com>\n-        \n+\t\n \t* ChangeLog: Fix date on previous ChangeLog entry for GCSE.\n \t\n \t* Makefile.in: Add df.h to gcse.c dependencies.\n@@ -366,26 +378,26 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-08-03  Daniel Berlin  <dan@cgsoftware.com>\n \n-        * gcse.c: Include df.h for use as a dataflow analyzer.\n-        Remove regvec.\n-        Declaration of reg_set_info: gone.\n-        New df_analyzer variable used by store motion.\n-        (reg_set_info): Deleted.\n-        (mark_mem_regs): New function, analyze regs used by a mem.\n-        (store_ops_ok): Use dataflow analyzer results to determine if\n-        necessary regs are changed in the block.\n-        (find_moveable_store): Remove check for symbol ref, we can handle\n-        much more complex expressions now.\n-        (compute_store_table): Remove most of the code, it's unnecessary\n-        now that the dataflow analyzer records the info for us.\n-        (store_killed_after): Add parameter to say whether to do the\n-        store_ops_okay test, used to speed up testing when we already know\n-        the answer, and just want to know if the store itself was killed.\n-        (build_store_vector): Largely rewritten to calculate the various\n-        vectors properly, and somewhat optimized.\n-        (store_motion): Init the df_analyzer, get REG_DEF chains. \n-        Also handle trapping expressions (since mems almost always trap)\n-        (simple_mem): Redefine what a simple mem is.\n+\t* gcse.c: Include df.h for use as a dataflow analyzer.\n+\tRemove regvec.\n+\tDeclaration of reg_set_info: gone.\n+\tNew df_analyzer variable used by store motion.\n+\t(reg_set_info): Deleted.\n+\t(mark_mem_regs): New function, analyze regs used by a mem.\n+\t(store_ops_ok): Use dataflow analyzer results to determine if\n+\tnecessary regs are changed in the block.\n+\t(find_moveable_store): Remove check for symbol ref, we can handle\n+\tmuch more complex expressions now.\n+\t(compute_store_table): Remove most of the code, it's unnecessary\n+\tnow that the dataflow analyzer records the info for us.\n+\t(store_killed_after): Add parameter to say whether to do the\n+\tstore_ops_okay test, used to speed up testing when we already know\n+\tthe answer, and just want to know if the store itself was killed.\n+\t(build_store_vector): Largely rewritten to calculate the various\n+\tvectors properly, and somewhat optimized.\n+\t(store_motion): Init the df_analyzer, get REG_DEF chains. \n+\tAlso handle trapping expressions (since mems almost always trap)\n+\t(simple_mem): Redefine what a simple mem is.\n \n 2001-08-03  DJ Delorie  <dj@redhat.com>\n \n@@ -454,7 +466,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \tcp/decl2.c, doc/contrib.texi, doc/cpp.texi, doc/gcc.texi,\n \tdoc/install.texi, doc/invoke.texi, doc/md.texi, doc/rtl.texi,\n \tdoc/tm.texi: consistently use \"VAX\", \"VAXen\", and \"MicroVAX\"\n-        in comments and documentation.\n+\tin comments and documentation.\n \n 2001-08-03  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n@@ -566,7 +578,7 @@ Sat Aug  4 13:51:36 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-08-01  Robert Lipe  <robertl@caldera.com>\n \n-        * dwarfout.c: Remove reference to README.DWARF.\n+\t* dwarfout.c: Remove reference to README.DWARF.\n \n 2001-08-01  Andrew MacLeod  <amacleod@redhat.com>\n \n@@ -669,7 +681,7 @@ Wed Aug  1 20:02:12 CEST 2001 Graham Stott  <grahams@redhat.com>\n \n 2001-08-01  Ziemowit Laski  <zlaski@apple.com>\n \n-        * c-parse.in (OBJC_NEED_RAW_IDENTIFIER): Define macro and flag for\n+\t* c-parse.in (OBJC_NEED_RAW_IDENTIFIER): Define macro and flag for\n \tcontextualizing Objective-C class name lookup by the lexer.\n \t(typespec_reserved_nonattr): Disable ObjC class name lookup after\n \tseeing a TYPESPEC.\n@@ -731,7 +743,7 @@ Wed Aug  1 20:02:12 CEST 2001 Graham Stott  <grahams@redhat.com>\n \n 2001-07-31  Jeff Sturm  <jsturm@one-point.com>\n \n-        * except.c (duplicate_eh_regions): Test n_array[i] for NULL.\n+\t* except.c (duplicate_eh_regions): Test n_array[i] for NULL.\n \n 2001-07-31  matthew green  <mrg@eterna.com.au>\n \n@@ -814,10 +826,10 @@ Tue Jul 31 15:33:27 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-07-31 Hartmut Penner <hpenner@de.ibm.com>\n \n-        * doc/install.texi: Add s390 and s390x as new targets.\n-        * doc/invoke.texi: Add documantation of S/390 and zSeries\n-        target options.\n-        * doc/md.texi: Add documantation of S/390 and zSeries constraints.\n+\t* doc/install.texi: Add s390 and s390x as new targets.\n+\t* doc/invoke.texi: Add documantation of S/390 and zSeries\n+\ttarget options.\n+\t* doc/md.texi: Add documantation of S/390 and zSeries constraints.\n \n 2001-07-30  Roman Zippel  <zippel@linux-m68k.org>\n \n@@ -827,7 +839,7 @@ Tue Jul 31 15:33:27 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n Mon Jul 30 23:20:34 EDT 2001  John Wehle  (john@feith.com)\n \n-        * flow.c (merge_blocks): Return 1 if an extra jump is inserted.\n+\t* flow.c (merge_blocks): Return 1 if an extra jump is inserted.\n \n 2001-07-30  Richard Henderson  <rth@redhat.com>\n \n@@ -868,18 +880,18 @@ Mon Jul 30 22:16:08 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-07-30  Andreas Jaeger  <aj@suse.de>\n \n-        * jump.c: Add prototype for mark_modified_reg.\n+\t* jump.c: Add prototype for mark_modified_reg.\n \n-        * cse.c (set_live_p): Add unused attribute.\n+\t* cse.c (set_live_p): Add unused attribute.\n \n-        * gcov.c (calculate_branch_probs): Use gcov_type to avoid\n-        overflow.\n-        (scan_for_source_files): Use long for count to avoid overflow.\n-        (output_data): Likewise.\n-        (output_data): Don't use string concatatenation to silence gcc\n-        -traditional.\n+\t* gcov.c (calculate_branch_probs): Use gcov_type to avoid\n+\toverflow.\n+\t(scan_for_source_files): Use long for count to avoid overflow.\n+\t(output_data): Likewise.\n+\t(output_data): Don't use string concatatenation to silence gcc\n+\t-traditional.\n \n-        * predict.c: Fix typos and grammar.\n+\t* predict.c: Fix typos and grammar.\n \n \t* gcse.c (insert_insn_end_bb): Remove unused variables.\n \n@@ -1122,7 +1134,7 @@ Fri Jul 27 17:53:00 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n Fri Jul 27 00:33:35 EDT 2001  John Wehle  (john@feith.com)\n \n-        * flow.c (redirect_edge_and_branch_force): Test\n+\t* flow.c (redirect_edge_and_branch_force): Test\n \ttarget->global_live_at_start.\n \n 2001-07-26  Richard Henderson  <rth@redhat.com>\n@@ -1168,8 +1180,8 @@ Thu Jul 26 14:04:03 EDT 2001  John Wehle  (john@feith.com)\n \n 2001-07-26  Catherine Moore  <clm@redhat.com>\n \n-        * config/v850/v850.h (ENCODE_SECTION_INFO):  Change order\n-        of conditional to avoid tree checking errors.\n+\t* config/v850/v850.h (ENCODE_SECTION_INFO):  Change order\n+\tof conditional to avoid tree checking errors.\n \n 2001-07-26  Kazu Hirata  <kazu@hxi.com>\n \n@@ -1248,8 +1260,8 @@ Wed Jul 25 18:00:05 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-07-25  Catherine Moore  <clm@redhat.com>\n \n-        * config/v850/v850.c (v850_va_arg):  Use addr\n-        instead of valist to build incr.\n+\t* config/v850/v850.c (v850_va_arg):  Use addr\n+\tinstead of valist to build incr.\n \n Wed Jul 25 22:48:59 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n@@ -1314,11 +1326,11 @@ Wed Jul 25 08:25:01 2001  Jeffrey A Law  (law@cygnus.com)\n \n 2001-07-24  Joel Sherrill <joel@OARcorp.com>\n \n-        * config/sparc/rtems.h (CPP_PREDEFINES): Remove redundant\n+\t* config/sparc/rtems.h (CPP_PREDEFINES): Remove redundant\n \t-Acpu and -Amachine.h.\n-        * config/sparc/rtemself.h (CPP_PREDEFINES): Likewise.\n-        Corrected header to say ELF not a.out.\n-        * config/sparc/sparc.h (CPP_CPU_SPEC): Define _SOFT_FLOAT\n+\t* config/sparc/rtemself.h (CPP_PREDEFINES): Likewise.\n+\tCorrected header to say ELF not a.out.\n+\t* config/sparc/sparc.h (CPP_CPU_SPEC): Define _SOFT_FLOAT\n \twhen given -msoft-float.\n \n 2001-07-24  Joel Sherrill <joel@OARcorp.com>"}, {"sha": "48dbd575f2c7862002ecc5256823a35e52798b79", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "patch": "@@ -1510,7 +1510,8 @@ reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h output.h $(EXPR_H)\n    function.h real.h toplev.h $(TM_P_H)\n reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) real.h flags.h $(EXPR_H) \\\n    reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n-   $(BASIC_BLOCK_H) $(RECOG_H) output.h function.h toplev.h cselib.h $(TM_P_H)\n+   $(BASIC_BLOCK_H) $(RECOG_H) output.h function.h toplev.h cselib.h $(TM_P_H) \\\n+   except.h\n caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h \\\n    $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) function.h \\\n    $(RECOG_H) reload.h $(EXPR_H) toplev.h $(TM_P_H)"}, {"sha": "dc2d1902cd9617269f2c00b72b791bdf2d64891a", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "patch": "@@ -615,8 +615,8 @@ extern basic_block redirect_edge_and_branch_force PARAMS ((edge, basic_block));\n extern bool redirect_edge_and_branch\tPARAMS ((edge, basic_block));\n extern rtx block_label\t\t\tPARAMS ((basic_block));\n extern bool forwarder_block_p\t\tPARAMS ((basic_block));\n-extern void purge_all_dead_edges\tPARAMS ((void));\n-extern void purge_dead_edges\t\tPARAMS ((basic_block));\n+extern bool purge_all_dead_edges\tPARAMS ((void));\n+extern bool purge_dead_edges\t\tPARAMS ((basic_block));\n extern void find_sub_basic_blocks\tPARAMS ((basic_block));\n \n "}, {"sha": "c01d56ff47fffe815f118d95a2e19083d6b122a5", "filename": "gcc/flow.c", "status": "modified", "additions": 38, "deletions": 18, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "patch": "@@ -10187,26 +10187,28 @@ init_flow ()\n }\n \n /* Assume that the preceeding pass has possibly eliminated jump instructions\n-   or converted the unconditional jumps.  Eliminate the edges from CFG.  */\n+   or converted the unconditional jumps.  Eliminate the edges from CFG.\n+   Return true if any edges are eliminated.  */\n \n-void\n+bool\n purge_dead_edges (bb)\n      basic_block bb;\n {\n   edge e, next;\n   rtx insn = bb->end;\n+  bool purged = false;\n+\n   if (GET_CODE (insn) == JUMP_INSN && !simplejump_p (insn))\n-    return;\n+    return false;\n   if (GET_CODE (insn) == JUMP_INSN)\n     {\n-      int removed = 0;\n       rtx note;\n       edge b,f;\n       /* We do care only about conditional jumps and simplejumps.  */\n       if (!any_condjump_p (insn)\n \t  && !returnjump_p (insn)\n \t  && !simplejump_p (insn))\n-\treturn;\n+\treturn false;\n       for (e = bb->succ; e; e = next)\n \t{\n \t  next = e->succ_next;\n@@ -10221,15 +10223,15 @@ purge_dead_edges (bb)\n \t  if (e->dest == EXIT_BLOCK_PTR\n \t      && returnjump_p (insn))\n \t    continue;\n-\t  removed = 1;\n+\t  purged = true;\n \t  remove_edge (e);\n \t}\n-      if (!bb->succ || !removed)\n-\treturn;\n+      if (!bb->succ || !purged)\n+\treturn false;\n       if (rtl_dump_file)\n \tfprintf (rtl_dump_file, \"Purged edges from bb %i\\n\", bb->index);\n       if (!optimize)\n-\treturn;\n+\treturn purged;\n \n       /* Redistribute probabilities.  */\n       if (!bb->succ->succ_next)\n@@ -10241,16 +10243,30 @@ purge_dead_edges (bb)\n \t{\n \t  note = find_reg_note (insn, REG_BR_PROB, NULL);\n \t  if (!note)\n-\t    return;\n+\t    return purged;\n \t  b = BRANCH_EDGE (bb);\n \t  f = FALLTHRU_EDGE (bb);\n \t  b->probability = INTVAL (XEXP (note, 0));\n \t  f->probability = REG_BR_PROB_BASE - b->probability;\n \t  b->count = bb->count * b->probability / REG_BR_PROB_BASE;\n \t  f->count = bb->count * f->probability / REG_BR_PROB_BASE;\n \t}\n-      return;\n+      return purged;\n     }\n+\n+  /* Cleanup abnormal edges caused by throwing insns that have been\n+     eliminated.  */\n+  if (! can_throw_internal (bb->end))\n+    for (e = bb->succ; e; e = next)\n+      {\n+\tnext = e->succ_next;\n+\tif (e->flags & EDGE_EH)\n+\t  {\n+\t    remove_edge (e);\n+\t    purged = true;\n+\t  }\n+      }\n+\n   /* If we don't see a jump insn, we don't know exactly why the block would\n      have been broken at this point.  Look for a simple, non-fallthru edge,\n      as these are only created by conditional branches.  If we find such an\n@@ -10259,12 +10275,12 @@ purge_dead_edges (bb)\n   for (e = bb->succ; e && (e->flags & (EDGE_COMPLEX | EDGE_FALLTHRU));\n        e = e->succ_next);\n   if (!e)\n-    return;\n+    return purged;\n   for (e = bb->succ; e; e = next)\n     {\n       next = e->succ_next;\n       if (!(e->flags & EDGE_FALLTHRU))\n-\tremove_edge (e);\n+\tremove_edge (e), purged = true;\n     }\n   if (!bb->succ || bb->succ->succ_next)\n     abort ();\n@@ -10274,15 +10290,19 @@ purge_dead_edges (bb)\n   if (rtl_dump_file)\n     fprintf (rtl_dump_file, \"Purged non-fallthru edges from bb %i\\n\",\n \t     bb->index);\n-  return;\n+  return purged;\n }\n \n-/* Search all basic blocks for potentionally dead edges and purge them.  */\n+/* Search all basic blocks for potentionally dead edges and purge them.\n+  \n+   Return true ifif some edge has been elliminated.\n+ */\n \n-void\n+bool\n purge_all_dead_edges ()\n {\n-  int i;\n+  int i, purged = false;\n   for (i = 0; i < n_basic_blocks; i++)\n-    purge_dead_edges (BASIC_BLOCK (i));\n+    purged |= purge_dead_edges (BASIC_BLOCK (i));\n+  return purged;\n }"}, {"sha": "b2131de22e03af4127a4f47369f084dabb8aa208", "filename": "gcc/reload1.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "patch": "@@ -39,6 +39,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"cselib.h\"\n #include \"real.h\"\n #include \"toplev.h\"\n+#include \"except.h\"\n \n #if !defined PREFERRED_STACK_BOUNDARY && defined STACK_BOUNDARY\n #define PREFERRED_STACK_BOUNDARY STACK_BOUNDARY\n@@ -9506,7 +9507,11 @@ fixup_abnormal_edges ()\n \t  for (e = bb->succ; e; e = e->succ_next)\n \t    if (e->flags & EDGE_FALLTHRU)\n \t      break;\n-\t  while (GET_CODE (insn) == INSN && !can_throw_internal (insn))\n+\t  /* Get past the new insns generated. Allow notes, as the insns may\n+\t     be already deleted.  */\n+\t  while ((GET_CODE (insn) == INSN || GET_CODE (insn) == NOTE)\n+\t\t && !can_throw_internal (insn)\n+\t\t && insn != bb->head)\n \t    insn = PREV_INSN (insn);\n \t  if (GET_CODE (insn) != CALL_INSN && !can_throw_internal (insn))\n \t    abort ();"}, {"sha": "a2d489da8ff0fbc66ab017985aae4a382d863a60", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39f95a2c8e36fcfbaaed01fda58429b7f536cefa/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=39f95a2c8e36fcfbaaed01fda58429b7f536cefa", "patch": "@@ -3267,6 +3267,10 @@ rest_of_compilation (decl)\n       rebuild_jump_labels_after_combine\n \t= combine_instructions (insns, max_reg_num ());\n \n+      /* Always purge dead edges, as we may eliminate an insn throwing\n+         exception.  */\n+      rebuild_jump_labels_after_combine |= purge_all_dead_edges ();\n+\n       /* Combining insns may have turned an indirect jump into a\n \t direct jump.  Rebuid the JUMP_LABEL fields of jumping\n \t instructions.  */\n@@ -3277,7 +3281,6 @@ rest_of_compilation (decl)\n \t  timevar_pop (TV_JUMP);\n \n \t  timevar_push (TV_FLOW);\n-\t  purge_all_dead_edges ();\n \t  cleanup_cfg (CLEANUP_EXPENSIVE);\n \n \t  /* Blimey.  We've got to have the CFG up to date for the call to"}]}