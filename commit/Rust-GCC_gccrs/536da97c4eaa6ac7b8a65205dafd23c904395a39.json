{"sha": "536da97c4eaa6ac7b8a65205dafd23c904395a39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM2ZGE5N2M0ZWFhNmFjN2I4YTY1MjA1ZGFmZDIzYzkwNDM5NWEzOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-11-27T11:40:22Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-11-27T11:40:22Z"}, "message": "re PR sanitizer/59306 (ICE with -fsanitize=null: gimple check: expected gimple_call(error_mark), have gimple_assign(addr_expr) in gimple_call_arg)\n\n\tPR sanitizer/59306\n\t* ubsan.c (instrument_null): Use gimple_store_p/gimple_assign_load_p\n\tinstead of walk_gimple_op.\n\t(ubsan_pass): Adjust.  Call instrument_null only if SANITIZE_NULL.\ntestsuite/\n\t* g++.dg/ubsan/pr59306.C: New test.\n\nFrom-SVN: r205443", "tree": {"sha": "6f3af14f8d15b876ebaea3378c9fae2c39dd2cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f3af14f8d15b876ebaea3378c9fae2c39dd2cda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/536da97c4eaa6ac7b8a65205dafd23c904395a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536da97c4eaa6ac7b8a65205dafd23c904395a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/536da97c4eaa6ac7b8a65205dafd23c904395a39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536da97c4eaa6ac7b8a65205dafd23c904395a39/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0136f8f03a651185cb7a8a032f13b2cd0e6a7bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0136f8f03a651185cb7a8a032f13b2cd0e6a7bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0136f8f03a651185cb7a8a032f13b2cd0e6a7bdc"}], "stats": {"total": 56, "additions": 42, "deletions": 14}, "files": [{"sha": "31e9670fa8928e689c673d2898cc32c4fc3abefe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536da97c4eaa6ac7b8a65205dafd23c904395a39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536da97c4eaa6ac7b8a65205dafd23c904395a39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=536da97c4eaa6ac7b8a65205dafd23c904395a39", "patch": "@@ -1,3 +1,10 @@\n+2013-11-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/59306\n+\t* ubsan.c (instrument_null): Use gimple_store_p/gimple_assign_load_p\n+\tinstead of walk_gimple_op.\n+\t(ubsan_pass): Adjust.  Call instrument_null only if SANITIZE_NULL.\n+\n 2013-11-27  Aldy Hernandez  <aldyh@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "084e8128dcc5af3589310c92d795c2c62357049b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536da97c4eaa6ac7b8a65205dafd23c904395a39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536da97c4eaa6ac7b8a65205dafd23c904395a39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=536da97c4eaa6ac7b8a65205dafd23c904395a39", "patch": "@@ -1,3 +1,8 @@\n+2013-11-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/59306\n+\t* g++.dg/ubsan/pr59306.C: New test.\n+\n 2013-11-27  Aldy Hernandez  <aldyh@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "426e6a5bd5f6e8a93156bf1b4bdd7bcf72ec26c8", "filename": "gcc/testsuite/g++.dg/ubsan/pr59306.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536da97c4eaa6ac7b8a65205dafd23c904395a39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr59306.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536da97c4eaa6ac7b8a65205dafd23c904395a39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr59306.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr59306.C?ref=536da97c4eaa6ac7b8a65205dafd23c904395a39", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile }\n+// { dg-options \"-fsanitize=undefined\" }\n+// { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } }\n+\n+class A {\n+  void bar (void (A::*) (int));\n+  void foo (int);\n+  void B ();\n+};\n+\n+void A::B()\n+{\n+  bar (&A::foo);\n+}"}, {"sha": "e33e62a028ae25dfaa6486171127c594df765d9c", "filename": "gcc/ubsan.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536da97c4eaa6ac7b8a65205dafd23c904395a39/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536da97c4eaa6ac7b8a65205dafd23c904395a39/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=536da97c4eaa6ac7b8a65205dafd23c904395a39", "patch": "@@ -614,24 +614,22 @@ instrument_mem_ref (tree t, gimple_stmt_iterator *iter, bool is_lhs)\n   gsi_insert_before (iter, g, GSI_SAME_STMT);\n }\n \n-/* Callback function for the pointer instrumentation.  */\n+/* Perform the pointer instrumentation.  */\n \n-static tree\n-instrument_null (tree *tp, int * /*walk_subtree*/, void *data)\n+static void\n+instrument_null (gimple_stmt_iterator gsi, bool is_lhs)\n {\n-  tree t = *tp;\n+  gimple stmt = gsi_stmt (gsi);\n+  tree t = is_lhs ? gimple_get_lhs (stmt) : gimple_assign_rhs1 (stmt);\n+  t = get_base_address (t);\n   const enum tree_code code = TREE_CODE (t);\n-  struct walk_stmt_info *wi = (struct walk_stmt_info *) data;\n-\n   if (code == MEM_REF\n       && TREE_CODE (TREE_OPERAND (t, 0)) == SSA_NAME)\n-    instrument_mem_ref (TREE_OPERAND (t, 0), &wi->gsi, wi->is_lhs);\n+    instrument_mem_ref (TREE_OPERAND (t, 0), &gsi, is_lhs);\n   else if (code == ADDR_EXPR\n \t   && POINTER_TYPE_P (TREE_TYPE (t))\n \t   && TREE_CODE (TREE_TYPE (TREE_TYPE (t))) == METHOD_TYPE)\n-    instrument_member_call (&wi->gsi);\n-\n-  return NULL_TREE;\n+    instrument_member_call (&gsi);\n }\n \n /* Gate and execute functions for ubsan pass.  */\n@@ -646,17 +644,21 @@ ubsan_pass (void)\n     {\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi);)\n \t{\n-\t  struct walk_stmt_info wi;\n \t  gimple stmt = gsi_stmt (gsi);\n \t  if (is_gimple_debug (stmt) || gimple_clobber_p (stmt))\n \t    {\n \t      gsi_next (&gsi);\n \t      continue;\n \t    }\n \n-\t  memset (&wi, 0, sizeof (wi));\n-\t  wi.gsi = gsi;\n-\t  walk_gimple_op (stmt, instrument_null, &wi);\n+\t  if (flag_sanitize & SANITIZE_NULL)\n+\t    {\n+\t      if (gimple_store_p (stmt))\n+\t\tinstrument_null (gsi, true);\n+\t      if (gimple_assign_load_p (stmt))\n+\t\tinstrument_null (gsi, false);\n+\t    }\n+\n \t  gsi_next (&gsi);\n \t}\n     }"}]}