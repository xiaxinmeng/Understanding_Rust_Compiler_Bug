{"sha": "e7f881933231e418019123cf912a88006481bd5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdmODgxOTMzMjMxZTQxODAxOTEyM2NmOTEyYTg4MDA2NDgxYmQ1Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-09-18T18:16:45Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-09-18T18:16:45Z"}, "message": "re PR middle-end/37448 (cannot compile big function)\n\n\n\tPR middle-end/37448\n\t* ipa-reference.c (ipa_reference_local_vars_info_d,\n\tipa_reference_global_vars_info_d,\n\tipa_reference_local_vars_info_t, ipa_reference_global_vars_info_t,\n\tipa_reference_vars_info_t): Move here from ipa-reference.h\n\t(node_duplication_hook_holder, node_removal_hook_holder): New.\n\t(get_reference_vars_info_from_cgraph): Rename to ...\n\t(get_reference_vars_info): ... this one, use cgraph uids.\n\t(get_local_reference_vars_info, get_global_reference_vars_info):\n\tUse cgraph instead of decl.\n\t(ipa_reference_get_read_local, ipa_reference_get_written_local): Remove.\n\t(ipa_reference_get_read_global, ipa_reference_get_not_read_global\n\tipa_reference_get_written_global, ipa_reference_get_not_written_global): Use\n\tcgraph argument.\n\t(check_call): Simplify avail check.\n\t(scan_stmt_for_static_refs): Update.\n\t(propagate_bits): Update.\n\t(merge_callee_local_info): Remove.\n\t(init_function_info): Use cgraph nodes.\n\t(clean_function_local_data): Break out from ...\n\t(clean_function): ... here.\n\t(copy_local_bitmap, copy_global_bitmap): New functions.\n\t(duplicate_node_data, remove_node_data): New functions.\n\t(generate_summary): Register hooks; use visibility instead of\n\tmaster clones.\n\t(propafate): Use cgraph nodes; copy bitmap to each node in cycle.\n\t* ipa-reference.h (ipa_reference_local_vars_info_d,\n\tipa_reference_global_vars_info_d,\n\tipa_reference_local_vars_info_t, ipa_reference_global_vars_info_t,\n\tipa_reference_vars_info_t): Move to ipa-reference.c\n\t(ipa_reference_get_read_local, ipa_reference_get_written_local):\n\tRemove.\n\t(ipa_reference_get_read_global, ipa_reference_get_written_global,\n\tipa_reference_get_not_read_global, ipa_reference_get_not_written_global):\n\tUpdate prototype.\n\t* ipa-pure-const.c (funct_state_vec): Turn into VECtor.\n\t(init_state): Remove.\n\t(node_duplication_hook_holder, node_removal_hook_holder): New.\n\t(get_function_state, set_function_state): Use VECtor.\n\t(analyze_function): Check body availability.\n\t(add_new_function): Likewise.\n\t(duplicate_node_data, remove_node_data): New.\n\t(generate_summary): Register hooks; do not care about clones.\n\t(propafate): Do not care about clones; recursive functions are not looping.\n\t* ipa-utils.c (searchc, ipa_utils_reduced_inorder): Do not skip clones.\n\t* ipa-prop.c (edge_removal_hook_holder, node_removal_hook_holder,\n\t* edge_duplication_hook_holder, node_duplication_hook_holder): Make\n\tstatic.\n\t* tree-flow.h (function_ann_d): Remove reference_vars_info.\n\t* tree-ssa-opreands.c (add_call_clobber_ops, add_call_read_ops): Update call of\n\tipa-reference accesors.\n\nFrom-SVN: r140465", "tree": {"sha": "ecec203c74e9347f22450f0451166b6f8fc48a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecec203c74e9347f22450f0451166b6f8fc48a6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7f881933231e418019123cf912a88006481bd5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f881933231e418019123cf912a88006481bd5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f881933231e418019123cf912a88006481bd5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f881933231e418019123cf912a88006481bd5c/comments", "author": null, "committer": null, "parents": [{"sha": "be95e2b9256eb04ee4f4c56711e813f226591828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be95e2b9256eb04ee4f4c56711e813f226591828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be95e2b9256eb04ee4f4c56711e813f226591828"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "fe649dda972ff372bffffc1c6273bcb533d02224", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f881933231e418019123cf912a88006481bd5c/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f881933231e418019123cf912a88006481bd5c/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=e7f881933231e418019123cf912a88006481bd5c", "patch": "@@ -418,11 +418,6 @@ struct static_var_ann_d GTY(())\n struct function_ann_d GTY(())\n {\n   struct tree_ann_common_d common;\n-\n-  /* Pointer to the structure that contains the sets of global\n-     variables modified by function calls.  This field is only used\n-     for FUNCTION_DECLs.  */\n-  ipa_reference_vars_info_t GTY ((skip)) reference_vars_info;\n };\n \n "}]}