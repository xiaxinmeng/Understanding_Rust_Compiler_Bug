{"sha": "7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZiYjliMThjYzc1OWIwMTRhOTBjNDhmNGJjZDk4NzA5ZWEwYjg0Yg==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2016-12-22T12:42:35Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2016-12-22T12:42:35Z"}, "message": "re PR testsuite/52641 (Test cases fail for 16-bit int targets)\n\ngcc/testsuite/\n\tPR testsuite/52641\n\t* gcc.dg/pr35258.c (main) <temp>: Use an integer value that has\n\tat least a size of 4.\n\t* gcc.dg/Walloca-1.c (foo1): Use alloca with 30000 (instead of 90000).\n\t* gcc.dg/graphite/pr46185.c: Require int32plus, size32plus.\n\t* gcc.dg/graphite/isl-ast-op-select.c: Same.\n\t* gcc.dg/graphite/pr42205-1.c: Require int32plus.\n\t* gcc.dg/graphite/pr42221.c: Same.\n\t* gcc.dg/tree-ssa/pr65136.c: Same.\n\t* gcc.dg/tree-ssa/sra-20.c: Same.\n\t* gcc.dg/graphite/scop-0.c: Require size32plus.\n\t* gcc.dg/graphite/scop-22.c: Same.\n\t* gcc.dg/graphite/scop-3.c: Same.\n\t* gcc.dg/graphite/scop-dsyr2k.c: Same.\n\t* gcc.dg/graphite/scop-dsyrk.c: Same.\n\t* gcc.dg/graphite/scop-mvt.c: Same.\n\t* gcc.dg/graphite/scop-sor.c: Same.\n\t* gcc.dg/tree-ssa/pr68529-3.c: Same.\n\t* gcc.dg/tree-ssa/pr66449.c [long != pointer]: Use intptr_t if.\n\t* gcc.dg/tree-ssa/pr70919.c [int <= 2]: Use 32-bit int as needed.\n\t* gcc.dg/tree-ssa/pr71408.c: Same.\n\t* gcc.dg/tree-ssa/ssa-dom-thread-8.c (f2) [long != pointer]: Use\n\tuintptr_t instead of long for int representation of address.\n\t* gcc.dg/tree-ssa/tailcall-7-run.c: Require trampolines.\n\nFrom-SVN: r243885", "tree": {"sha": "f21b5a99747c62d29786fd91c61f78e8107089e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f21b5a99747c62d29786fd91c61f78e8107089e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35dddc5327d6d188da70a786105a796ffe201665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35dddc5327d6d188da70a786105a796ffe201665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35dddc5327d6d188da70a786105a796ffe201665"}], "stats": {"total": 81, "additions": 76, "deletions": 5}, "files": [{"sha": "c63fd5e6e383d4fa23a18c3c21434ec9dd565227", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,30 @@\n+2016-12-22  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR testsuite/52641\n+\t* gcc.dg/pr35258.c (main) <temp>: Use an integer value that has\n+\tat least a size of 4.\n+\t* gcc.dg/Walloca-1.c (foo1): Use alloca with 30000 (instead of 90000).\n+\t* gcc.dg/graphite/pr46185.c: Require int32plus, size32plus.\n+\t* gcc.dg/graphite/isl-ast-op-select.c: Same.\n+\t* gcc.dg/graphite/pr42205-1.c: Require int32plus.\n+\t* gcc.dg/graphite/pr42221.c: Same.\n+\t* gcc.dg/tree-ssa/pr65136.c: Same.\n+\t* gcc.dg/tree-ssa/sra-20.c: Same.\n+\t* gcc.dg/graphite/scop-0.c: Require size32plus.\n+\t* gcc.dg/graphite/scop-22.c: Same.\n+\t* gcc.dg/graphite/scop-3.c: Same.\n+\t* gcc.dg/graphite/scop-dsyr2k.c: Same.\n+\t* gcc.dg/graphite/scop-dsyrk.c: Same.\n+\t* gcc.dg/graphite/scop-mvt.c: Same.\n+\t* gcc.dg/graphite/scop-sor.c: Same.\n+\t* gcc.dg/tree-ssa/pr68529-3.c: Same.\n+\t* gcc.dg/tree-ssa/pr66449.c [long != pointer]: Use intptr_t if.\n+\t* gcc.dg/tree-ssa/pr70919.c [int <= 2]: Use 32-bit int as needed.\n+\t* gcc.dg/tree-ssa/pr71408.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-8.c (f2) [long != pointer]: Use\n+\tuintptr_t instead of long for int representation of address.\n+\t* gcc.dg/tree-ssa/tailcall-7-run.c: Require trampolines.\n+\n 2016-12-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/78858"}, {"sha": "1a516f0a59d127e117b62a49f090d428fc1ebc14", "filename": "gcc/testsuite/gcc.dg/Walloca-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloca-1.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -27,7 +27,7 @@ void foo1 (size_t len, size_t len2, size_t len3)\n   // { dg-warning \"unbounded use of 'alloca'\" \"\" { target { ! lp64 } } 26 }\n   useit (s);\n \n-  s = alloca(90000);\t\t/* { dg-warning \"is too large\" } */\n+  s = alloca (30000);\t\t/* { dg-warning \"is too large\" } */\n   useit (s);\n \n   if (len < 2000)"}, {"sha": "a0c302b3ea51368e28022bf6b4259100df06ba95", "filename": "gcc/testsuite/gcc.dg/graphite/isl-ast-op-select.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fisl-ast-op-select.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fisl-ast-op-select.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fisl-ast-op-select.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target size32plus } */\n+/* { dg-require-effective-target int32plus } */\n /* { dg-options \"-O2 -floop-nest-optimize\" } */\n \n static void kernel_gemm(int ni, int nj, int nk, double alpha, double beta, double C[1024][1024], double A[1024][1024], double B[1024][1024])"}, {"sha": "9cca6dec44a973cad7a5c36b00d7729f9f86d111", "filename": "gcc/testsuite/gcc.dg/graphite/pr42205-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42205-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42205-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42205-1.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n /* { dg-options \"-O1 -ffast-math -floop-interchange\" } */\n \n int adler32(int adler, char *buf, int n)"}, {"sha": "ed3cd44c71e3bc4a607cb5e59bafefb2dd6d821f", "filename": "gcc/testsuite/gcc.dg/graphite/pr42221.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42221.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42221.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr42221.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target int32plus } */\n /* { dg-options \"-Os -fgraphite-identity\" } */\n \n static void b2w(unsigned int *out, const unsigned char *in, unsigned int len)"}, {"sha": "7f9ae0747196c2ebb3da1db650150cfc723f95f5", "filename": "gcc/testsuite/gcc.dg/graphite/pr46185.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr46185.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr46185.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr46185.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,4 +1,6 @@\n /* { dg-do run } */\n+/* { dg-require-effective-target size32plus } */\n+/* { dg-require-effective-target int32plus } */\n /* { dg-options \"-O2 -floop-interchange -ffast-math -fno-ipa-cp\" } */\n \n #define DEBUG 0"}, {"sha": "738c3f6b88934e4a74717ebd3e0d8d1a57100da0", "filename": "gcc/testsuite/gcc.dg/graphite/scop-0.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-0.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target size32plus } */\n int foo (void);\n void bar (void);\n "}, {"sha": "f9c16c99425faf75415f5b56da47c4ad2950cf19", "filename": "gcc/testsuite/gcc.dg/graphite/scop-22.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-22.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target size32plus } */\n double u[1782225];\n \n void foo(int N, int *res)"}, {"sha": "279097647fadf6af03977074522db9e922281480", "filename": "gcc/testsuite/gcc.dg/graphite/scop-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-3.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target size32plus } */\n int toto()\n {\n   int i, j, k;"}, {"sha": "f16f4a817d28f4f36cc789464bfa887bf551ee34", "filename": "gcc/testsuite/gcc.dg/graphite/scop-dsyr2k.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-dsyr2k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-dsyr2k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-dsyr2k.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target size32plus } */\n #define NMAX 3000\n \n static double a[NMAX][NMAX], b[NMAX][NMAX], c[NMAX][NMAX];"}, {"sha": "c176a7c21969ca0be8361609080913d6c4f74df6", "filename": "gcc/testsuite/gcc.dg/graphite/scop-dsyrk.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-dsyrk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-dsyrk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-dsyrk.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target size32plus } */\n #define NMAX 3000\n #define MEASURE_TIME 1\n "}, {"sha": "5819fe77cf9535afd2cb35119a78f0ed865c2158", "filename": "gcc/testsuite/gcc.dg/graphite/scop-mvt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-mvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-mvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-mvt.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target size32plus } */\n #define NMAX 2000\n \n static double x1[NMAX], x2[NMAX], a[NMAX][NMAX], y_1[NMAX], y_2[NMAX];"}, {"sha": "adcdc437c7137037148d86123c160195f3ffd0e9", "filename": "gcc/testsuite/gcc.dg/graphite/scop-sor.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-sor.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-sor.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-sor.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target size32plus } */\n #define SIZE 10000\n \n static double P[SIZE][SIZE];"}, {"sha": "ef1260d00c4e50644b6efaf2b0c9ab1d17764032", "filename": "gcc/testsuite/gcc.dg/pr35258.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35258.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35258.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35258.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -10,7 +10,11 @@ char str[9] = \"1234\";\n void\n bar (void)\n {\n+#if __SIZEOF_INT__ >= 4\n   unsigned int temp;\n+#else\n+  __UINT32_TYPE__ temp;\n+#endif\n   char *p = &str[2];\n \n   memcpy (&temp, &str[1], 4);"}, {"sha": "eeb02f5777005d9197f102024b595bb84c91f5d1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr65136.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr65136.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr65136.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr65136.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile } */\n+/* { dg-do compile { target int32plus } } */\n /* { dg-options \"-O2 -fdump-rtl-expand-details\" } */\n \n int foo(unsigned int cc )"}, {"sha": "cce26eb74e3f5ec6d2cebd5f221dacf68994db39", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr66449.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66449.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66449.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66449.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,6 +1,10 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n \n+#if __SIZEOF_POINTER__ != __SIZEOF_LONG__\n+#define long __INTPTR_TYPE__\n+#endif\n+\n void *fn1(void *p1, void *p2, long p3)\n {\n   long a = (long)p1, b = (long)p2, c = p3;"}, {"sha": "be7e609bcb584db3b1423b245cf47ea51afe725c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr68529-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr68529-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr68529-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr68529-3.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile } */\n+/* { dg-do compile { target size32plus } } */\n /* { dg-options \"-O2 -ftree-loop-distribution -ftree-loop-distribute-patterns -fdump-tree-ldist-details\" } */\n \n void bar(char *s);"}, {"sha": "2422242ea5c009c933e25f895050bb879321efc4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr70919.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr70919.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr70919.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr70919.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -4,7 +4,11 @@\n #pragma pack(1)\n struct S0\n {\n+#if __SIZEOF_INT >= 4\n   int f0:24;\n+#else\n+  __INT32_TYPE__ f0:24;\n+#endif\n };\n \n struct S1"}, {"sha": "d81b813f83d05adc2a5e4fbf42ada14f6e4d41ad", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr71408.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71408.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71408.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71408.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,13 +1,24 @@\n /* PR middle-end/71408 */\n /* { dg-do run } */\n /* { dg-options \"-Os\" } */\n+\n+#if __SIZEOF_INT__ >= 4\n unsigned a, b;\n \n struct S0\n {\n   int f1:18;\n   unsigned f3:4;\n };\n+#else\n+__UINT32_TYPE__ a, b;\n+\n+struct S0\n+{\n+  __INT32_TYPE__ f1:18;\n+  unsigned f3:4;\n+};\n+#endif\n \n void fn1 ()\n {"}, {"sha": "e732640f1dcc187b3e8692ee26b0eeb78cd3f355", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-20.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-20.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile } */\n+/* { dg-do compile { target int32plus } } */\n /* { dg-options \"-O1 -Wall\" } */\n /* PR/70013, SRA of constant-pool loads removes initialization of part of d.  */\n #pragma pack (1)"}, {"sha": "c456d734fa7589d5d075267db6c2161ae30caccd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-thread-8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-8.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -300,7 +300,11 @@ f2 (struct C *x)\n \t  else\n \t    {\n \t      o = f2 (x);\n+#if __SIZEOF_POINTER__ == __SIZEOF_LONG__\n \t      if (((unsigned long) o > (unsigned long) -4000L))\n+#elif __SIZEOF_POINTER__ == __SIZEOF_INT__\n+\t  if (((__UINTPTR_TYPE__) o > (__UINTPTR_TYPE__) -4000U))\n+#endif\n \t\t{\n \t\t  e = 5;\n \t\t  goto out;\n@@ -384,7 +388,11 @@ f2 (struct C *x)\n \t  break;\n \tcase 19:\n \t  o = f2 (x);\n+#if __SIZEOF_POINTER__ == __SIZEOF_LONG__\n \t  if (((unsigned long) o > (unsigned long) -4000L))\n+#elif __SIZEOF_POINTER__ == __SIZEOF_INT__\n+\t  if (((__UINTPTR_TYPE__) o > (__UINTPTR_TYPE__) -4000U))\n+#endif\n \t    {\n \t      e = 6;\n \t      goto out;"}, {"sha": "b67ebf126611140128f09c3ce2beeb77c0579b7e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailcall-7-run.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-7-run.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbb9b18cc759b014a90c48f4bcd98709ea0b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-7-run.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-7-run.c?ref=7fbb9b18cc759b014a90c48f4bcd98709ea0b84b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run } */\n+/* { dg-do run { target trampolines } } */\n /* { dg-options \"-O2\" } */\n /* { dg-additional-sources \"tailcall-7.c\" } */\n "}]}