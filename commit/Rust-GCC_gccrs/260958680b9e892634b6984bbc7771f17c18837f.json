{"sha": "260958680b9e892634b6984bbc7771f17c18837f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYwOTU4NjgwYjllODkyNjM0YjY5ODRiYmM3NzcxZjE3YzE4ODM3Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-09T01:35:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-09T01:35:55Z"}, "message": "Typo in last change.\n\nFrom-SVN: r4047", "tree": {"sha": "c07315f04de760b30db475e0292550ec43a7335e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c07315f04de760b30db475e0292550ec43a7335e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/260958680b9e892634b6984bbc7771f17c18837f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260958680b9e892634b6984bbc7771f17c18837f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260958680b9e892634b6984bbc7771f17c18837f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260958680b9e892634b6984bbc7771f17c18837f/comments", "author": null, "committer": null, "parents": [{"sha": "1c48d17e61efbb09710f450a18b599b1666778c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c48d17e61efbb09710f450a18b599b1666778c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c48d17e61efbb09710f450a18b599b1666778c6"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "ce7440e04004716d9e57438d104bc49589d8b503", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260958680b9e892634b6984bbc7771f17c18837f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260958680b9e892634b6984bbc7771f17c18837f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=260958680b9e892634b6984bbc7771f17c18837f", "patch": "@@ -741,16 +741,13 @@ crtend.o:\tcrtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(TREE_H) c-lex.h c-parse.h \\\n     c-tree.h input.h flags.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/c-parse.c\n+$(srcdir)/c-parse.c $(srcdir)/c-parse.h: $(srcdir)/c-parse.y\n+\tcd $(srcdir); $(BISON) $(BISONFLAGS) -d c-parse.y -o c-parse.c\n $(srcdir)/c-parse.y: $(srcdir)/c-parse.in\n \tsed -e \"/^ifobjc$$/,/^end ifobjc$$/d\" \\\n \t  -e \"/^ifc$$/d\" -e \"/^end ifc$$/d\" \\\n \t  $(srcdir)/c-parse.in > $(srcdir)/c-parse.y\n \n-$(srcdir)/objc-parse.y: $(srcdir)/c-parse.in\n-\tsed -e \"/^ifc$$/,/^end ifc$$/d\" \\\n-\t  -e \"/^ifobjc$$/d\" -e \"/^end ifobjc$$/d\" \\\n-\t  $(srcdir)/c-parse.in > $(srcdir)/objc-parse.y\n-\n c-decl.o : c-decl.c $(CONFIG_H) $(TREE_H) c-tree.h c-lex.h flags.h\n c-typeck.o : c-typeck.c $(CONFIG_H) $(TREE_H) c-tree.h flags.h\n c-lang.o : c-lang.c $(CONFIG_H) $(TREE_H)\n@@ -820,8 +817,10 @@ objc-parse.o : $(srcdir)/objc-parse.c $(CONFIG_H) $(TREE_H) c-lex.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/objc-parse.c\n $(srcdir)/objc-parse.c : $(srcdir)/objc-parse.y\n \tcd $(srcdir); $(BISON) $(BISONFLAGS) objc-parse.y -o objc-parse.c\n-$(srcdir)/objc-parse.y: $(srcdir)/c-parse.in $(srcdir)/cond.awk\n-\tcd $(srcdir); awk -f cond.awk objc=1 c-parse.in > objc-parse.y\n+$(srcdir)/objc-parse.y: $(srcdir)/c-parse.in\n+\tsed -e \"/^ifc$$/,/^end ifc$$/d\" \\\n+\t  -e \"/^ifobjc$$/d\" -e \"/^end ifobjc$$/d\" \\\n+\t  $(srcdir)/c-parse.in > $(srcdir)/objc-parse.y\n \n objc-act.o : objc-act.c $(CONFIG_H) $(TREE_H) c-tree.h c-lex.h \\\n    flags.h objc-act.h"}]}