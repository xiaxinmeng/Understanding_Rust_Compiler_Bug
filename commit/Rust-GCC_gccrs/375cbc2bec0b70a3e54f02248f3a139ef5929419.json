{"sha": "375cbc2bec0b70a3e54f02248f3a139ef5929419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1Y2JjMmJlYzBiNzBhM2U1NGYwMjI0OGYzYTEzOWVmNTkyOTQxOQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2015-01-06T10:15:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T10:15:25Z"}, "message": "sem_util.ads: Minor reformatting.\n\n2015-01-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_util.ads: Minor reformatting.\n\t* sem_cat.adb (In_RCI_Visible_Declarations): Change back to...\n\t(In_RCI_Declaration) Return to old name, as proper checking of\n\tentity being in the visible part depends on entity kind and must\n\tbe done by the caller.\n\nFrom-SVN: r219249", "tree": {"sha": "2e6e0b2d3828c5f79c38eaca620f0b1b03be66b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e6e0b2d3828c5f79c38eaca620f0b1b03be66b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375cbc2bec0b70a3e54f02248f3a139ef5929419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375cbc2bec0b70a3e54f02248f3a139ef5929419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375cbc2bec0b70a3e54f02248f3a139ef5929419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375cbc2bec0b70a3e54f02248f3a139ef5929419/comments", "author": null, "committer": null, "parents": [{"sha": "fc6d9796420e99d8dbd7bd2b5487b4c6f5263993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc6d9796420e99d8dbd7bd2b5487b4c6f5263993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc6d9796420e99d8dbd7bd2b5487b4c6f5263993"}], "stats": {"total": 148, "additions": 67, "deletions": 81}, "files": [{"sha": "43db02d67e7c44e67d1d74bad62553c003f57850", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375cbc2bec0b70a3e54f02248f3a139ef5929419/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375cbc2bec0b70a3e54f02248f3a139ef5929419/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=375cbc2bec0b70a3e54f02248f3a139ef5929419", "patch": "@@ -1,12 +1,16 @@\n+2015-01-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_util.ads: Minor reformatting.\n+\t* sem_cat.adb (In_RCI_Visible_Declarations): Change back to...\n+\t(In_RCI_Declaration) Return to old name, as proper checking of\n+\tentity being in the visible part depends on entity kind and must\n+\tbe done by the caller.\n+\n 2015-01-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb, sem_ch12.ads, sem_ch8.adb: Ongoing work for wrappers\n \tfor operators in SPARK.\n \n-2015-01-06  Javier Miranda  <miranda@adacore.com>\n-\n-\t* exp_disp.adb: Revert previous patch again.\n-\n 2015-01-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_aggr.adb (Get_Value): In ASIS mode, preanalyze the\n@@ -52,10 +56,6 @@\n \tnon-limited view is available, use it in the specification of\n \tthe generated body.\n \n-2015-01-06  Javier Miranda  <miranda@adacore.com>\n-\n-\t* exp_disp.adb: Reapplying reversed patch.\n-\n 2015-01-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Find_Type_Name): If there is a previous tagged"}, {"sha": "83fe625f78e20738846a42465fa30f811484d1f3", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 58, "deletions": 72, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375cbc2bec0b70a3e54f02248f3a139ef5929419/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375cbc2bec0b70a3e54f02248f3a139ef5929419/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=375cbc2bec0b70a3e54f02248f3a139ef5929419", "patch": "@@ -86,14 +86,13 @@ package body Sem_Cat is\n    --  Return True if the entity or one of its subcomponents does not support\n    --  external streaming.\n \n-   function In_RCI_Visible_Declarations return Boolean;\n-   --  Determines if the visible part of a remote call interface library unit\n-   --  is being compiled, for semantic checking purposes (returns False within\n-   --  an instance and within the package body).\n-\n+   function In_RCI_Declaration return Boolean;\n    function In_RT_Declaration return Boolean;\n-   --  Determines if current scope is within the declaration of a Remote Types\n-   --  unit, for semantic checking purposes.\n+   --  Determine if current scope is within the declaration of a Remote Call\n+   --  Interface or Remote Types unit, for semantic checking purposes.\n+\n+   function In_Package_Declaration return Boolean;\n+   --  Shared supporting routine for In_RCI_Declaration and In_RT_Declaration\n \n    function In_Shared_Passive_Unit return Boolean;\n    --  Determines if current scope is within a Shared Passive compilation unit\n@@ -498,6 +497,23 @@ package body Sem_Cat is\n                    or else not Is_Hidden (Entity (Rep_Item)));\n    end Has_Stream_Attribute_Definition;\n \n+   ----------------------------\n+   -- In_Package_Declaration --\n+   ----------------------------\n+\n+   function In_Package_Declaration return Boolean is\n+      Unit_Kind   : constant Node_Kind :=\n+                      Nkind (Unit (Cunit (Current_Sem_Unit)));\n+\n+   begin\n+      --  There are no restrictions on the body of an RCI or RT unit\n+\n+      return Is_Package_Or_Generic_Package (Current_Scope)\n+        and then Unit_Kind /= N_Package_Body\n+        and then not In_Package_Body (Current_Scope)\n+        and then not In_Instance;\n+   end In_Package_Declaration;\n+\n    ---------------------------\n    -- In_Preelaborated_Unit --\n    ---------------------------\n@@ -544,57 +560,23 @@ package body Sem_Cat is\n       return Is_Pure (Current_Scope);\n    end In_Pure_Unit;\n \n-   ---------------------------------\n-   -- In_RCI_Visible_Declarations --\n-   ---------------------------------\n-\n-   function In_RCI_Visible_Declarations return Boolean is\n-      Unit_Entity : Entity_Id := Current_Scope;\n-      Unit_Kind   : constant Node_Kind :=\n-                      Nkind (Unit (Cunit (Current_Sem_Unit)));\n+   ------------------------\n+   -- In_RCI_Declaration --\n+   ------------------------\n \n+   function In_RCI_Declaration return Boolean is\n    begin\n-      --  There are no restrictions on the private part or body of an RCI unit\n-\n-      if not (Is_Remote_Call_Interface (Unit_Entity)\n-        and then Is_Package_Or_Generic_Package (Unit_Entity)\n-        and then Unit_Kind /= N_Package_Body\n-        and then not In_Instance)\n-      then\n-         return False;\n-      end if;\n-\n-      while Unit_Entity /= Standard_Standard loop\n-         if In_Private_Part (Unit_Entity) then\n-            return False;\n-         end if;\n-\n-         Unit_Entity := Scope (Unit_Entity);\n-      end loop;\n-\n-      --  Here if in RCI declaration, and not in private part of any open\n-      --  scope.\n-\n-      return True;\n-   end In_RCI_Visible_Declarations;\n+      return Is_Remote_Call_Interface (Current_Scope)\n+        and then In_Package_Declaration;\n+   end In_RCI_Declaration;\n \n    -----------------------\n    -- In_RT_Declaration --\n    -----------------------\n \n    function In_RT_Declaration return Boolean is\n-      Unit_Entity : constant Entity_Id := Current_Scope;\n-      Unit_Kind   : constant Node_Kind :=\n-                      Nkind (Unit (Cunit (Current_Sem_Unit)));\n-\n    begin\n-      --  There are no restrictions on the body of a Remote Types unit\n-\n-      return Is_Remote_Types (Unit_Entity)\n-        and then Is_Package_Or_Generic_Package (Unit_Entity)\n-        and then Unit_Kind /= N_Package_Body\n-        and then not In_Package_Body (Unit_Entity)\n-        and then not In_Instance;\n+      return Is_Remote_Types (Current_Scope) and then In_Package_Declaration;\n    end In_RT_Declaration;\n \n    ----------------------------\n@@ -1377,20 +1359,22 @@ package body Sem_Cat is\n       if In_Pure_Unit and then not In_Subprogram_Task_Protected_Unit then\n          Error_Msg_N (\"declaration of variable not allowed in pure unit\", N);\n \n-      --  The visible part of an RCI library unit must not contain the\n-      --  declaration of a variable (RM E.1.3(9))\n+      elsif not In_Private_Part (Id) then\n \n-      elsif In_RCI_Visible_Declarations then\n-         Error_Msg_N (\"visible variable not allowed in 'R'C'I unit\", N);\n+         --  The visible part of an RCI library unit must not contain the\n+         --  declaration of a variable (RM E.1.3(9)).\n \n-      --  The visible part of a Shared Passive library unit must not contain\n-      --  the declaration of a variable (RM E.2.2(7))\n+         if In_RCI_Declaration then\n+            Error_Msg_N (\"visible variable not allowed in 'R'C'I unit\", N);\n \n-      elsif In_RT_Declaration and then not In_Private_Part (Id) then\n-         Error_Msg_N\n-           (\"visible variable not allowed in remote types unit\", N);\n-      end if;\n+         --  The visible part of a Shared Passive library unit must not contain\n+         --  the declaration of a variable (RM E.2.2(7)).\n \n+         elsif In_RT_Declaration then\n+            Error_Msg_N\n+              (\"visible variable not allowed in remote types unit\", N);\n+         end if;\n+      end if;\n    end Validate_Object_Declaration;\n \n    -----------------------------\n@@ -1605,7 +1589,7 @@ package body Sem_Cat is\n    procedure Validate_RCI_Subprogram_Declaration (N : Node_Id) is\n       K               : constant Node_Kind := Nkind (N);\n       Profile         : List_Id;\n-      Id              : Node_Id;\n+      Id              : constant Entity_Id := Defining_Entity (N);\n       Param_Spec      : Node_Id;\n       Param_Type      : Entity_Id;\n       Error_Node      : Node_Id := N;\n@@ -1618,22 +1602,23 @@ package body Sem_Cat is\n       --    1. from Analyze_Subprogram_Declaration.\n       --    2. from Validate_Object_Declaration (access to subprogram).\n \n-      if not (Comes_From_Source (N) and then In_RCI_Visible_Declarations) then\n+      if not (Comes_From_Source (N)\n+                and then In_RCI_Declaration\n+                and then not In_Private_Part (Scope (Id)))\n+      then\n          return;\n       end if;\n \n       if K = N_Subprogram_Declaration then\n-         Id := Defining_Unit_Name (Specification (N));\n          Profile := Parameter_Specifications (Specification (N));\n \n-      else pragma Assert (K = N_Object_Declaration);\n+      else\n+         pragma Assert (K = N_Object_Declaration);\n \n          --  The above assertion is dubious, the visible declarations of an\n          --  RCI unit never contain an object declaration, this should be an\n          --  ACCESS-to-object declaration???\n \n-         Id := Defining_Identifier (N);\n-\n          if Nkind (Id) = N_Defining_Identifier\n            and then Nkind (Parent (Etype (Id))) = N_Full_Type_Declaration\n            and then Ekind (Etype (Id)) = E_Access_Subprogram_Type\n@@ -1712,17 +1697,18 @@ package body Sem_Cat is\n       --  the given node is N_Access_To_Object_Definition.\n \n       if not Comes_From_Source (T)\n-        or else (not In_RCI_Visible_Declarations\n-                   and then not In_RT_Declaration)\n+        or else (not In_RCI_Declaration and then not In_RT_Declaration)\n       then\n          return;\n       end if;\n \n-      --  An access definition in the private part of a Remote Types package\n-      --  may be legal if it has user-defined Read and Write attributes. This\n-      --  will be checked at the end of the package spec processing.\n+      --  An access definition in the private part of a package is not a\n+      --  remote access type. Restrictions related to external streaming\n+      --  support for non-remote access types are enforced elsewhere. Note\n+      --  that In_Private_Part is never set on type entities: check flag\n+      --  on enclosing scope.\n \n-      if In_RT_Declaration and then In_Private_Part (Scope (T)) then\n+      if In_Private_Part (Scope (T)) then\n          return;\n       end if;\n \n@@ -1735,7 +1721,7 @@ package body Sem_Cat is\n       if Ekind (T) /= E_General_Access_Type\n         or else not Is_Class_Wide_Type (Designated_Type (T))\n       then\n-         if In_RCI_Visible_Declarations then\n+         if In_RCI_Declaration then\n             Error_Msg_N\n               (\"error in access type in Remote_Call_Interface unit\", T);\n          else"}, {"sha": "162c4b6068b28d55f67ec32d982078c6897c6e12", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375cbc2bec0b70a3e54f02248f3a139ef5929419/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375cbc2bec0b70a3e54f02248f3a139ef5929419/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=375cbc2bec0b70a3e54f02248f3a139ef5929419", "patch": "@@ -469,7 +469,7 @@ package Sem_Util is\n    --\n    --  Iterator loops also have a defining entity, which holds the list of\n    --  local entities declared during loop expansion. These entities need\n-   --  debugging information, generated through QUalify_Entity_Names, and\n+   --  debugging information, generated through Qualify_Entity_Names, and\n    --  the loop declaration must be placed in the table Name_Qualify_Units.\n \n    function Denotes_Discriminant"}]}