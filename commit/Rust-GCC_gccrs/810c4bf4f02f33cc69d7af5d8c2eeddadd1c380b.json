{"sha": "810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEwYzRiZjRmMDJmMzNjYzY5ZDdhZjVkOGMyZWVkZGFkZDFjMzgwYg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2010-06-29T13:43:57Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2010-06-29T13:43:57Z"}, "message": "re PR target/43902 (suboptimal MIPS widening multiply accumulate)\n\n\tPR target/43902\n\t* config/arm/arm.md (maddsidi4, umaddsidi4): New expanders.\n\t(maddhisi4): Renamed from mulhisi3addsi.  Operands renumbered.\n\t(maddhidi4): Likewise.\n\ntestsuite/\n\tPR target/43902\n\t* gcc.target/arm/wmul-1.c: Test for smlabb instead of smulbb.\n\t* gcc.target/arm/wmul-3.c: New test.\n\t* gcc.target/arm/wmul-4.c: New test.\n\nFrom-SVN: r161533", "tree": {"sha": "024897a736eff33e41d31aa9b43231801ffe1c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/024897a736eff33e41d31aa9b43231801ffe1c88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/comments", "author": null, "committer": null, "parents": [{"sha": "3c07301f6b488870892ac4b79825ba8364b07104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c07301f6b488870892ac4b79825ba8364b07104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c07301f6b488870892ac4b79825ba8364b07104"}], "stats": {"total": 92, "additions": 79, "deletions": 13}, "files": [{"sha": "059542a4a3b6da1996ad62242a7bc77003273690", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "patch": "@@ -1,3 +1,10 @@\n+2010-06-29  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR target/43902\n+\t* config/arm/arm.md (maddsidi4, umaddsidi4): New expanders.\n+\t(maddhisi4): Renamed from mulhisi3addsi.  Operands renumbered.\n+\t(maddhidi4): Likewise.\n+\n 2010-06-29  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* calls.c, dse.c, expr.c, function.c: Call targetm.calls.function_arg,"}, {"sha": "725d505ab5cfce4fc65516d723d434f6da61e1e7", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 28, "deletions": 12, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "patch": "@@ -1422,7 +1422,15 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n-;; Unnamed template to match long long multiply-accumulate (smlal)\n+(define_expand \"maddsidi4\"\n+  [(set (match_operand:DI 0 \"s_register_operand\" \"\")\n+\t(plus:DI\n+\t (mult:DI\n+\t  (sign_extend:DI (match_operand:SI 1 \"s_register_operand\" \"\"))\n+\t  (sign_extend:DI (match_operand:SI 2 \"s_register_operand\" \"\")))\n+\t (match_operand:DI 3 \"s_register_operand\" \"\")))]\n+  \"TARGET_32BIT && arm_arch3m\"\n+  \"\")\n \n (define_insn \"*mulsidi3adddi\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r\")\n@@ -1518,7 +1526,15 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n-;; Unnamed template to match long long unsigned multiply-accumulate (umlal)\n+(define_expand \"umaddsidi4\"\n+  [(set (match_operand:DI 0 \"s_register_operand\" \"\")\n+\t(plus:DI\n+\t (mult:DI\n+\t  (zero_extend:DI (match_operand:SI 1 \"s_register_operand\" \"\"))\n+\t  (zero_extend:DI (match_operand:SI 2 \"s_register_operand\" \"\")))\n+\t (match_operand:DI 3 \"s_register_operand\" \"\")))]\n+  \"TARGET_32BIT && arm_arch3m\"\n+  \"\")\n \n (define_insn \"*umulsidi3adddi\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r\")\n@@ -1686,29 +1702,29 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n-(define_insn \"*mulhisi3addsi\"\n+(define_insn \"maddhisi4\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(plus:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n+\t(plus:SI (match_operand:SI 3 \"s_register_operand\" \"r\")\n \t\t (mult:SI (sign_extend:SI\n-\t\t\t   (match_operand:HI 2 \"s_register_operand\" \"%r\"))\n+\t\t\t   (match_operand:HI 1 \"s_register_operand\" \"%r\"))\n \t\t\t  (sign_extend:SI\n-\t\t\t   (match_operand:HI 3 \"s_register_operand\" \"r\")))))]\n+\t\t\t   (match_operand:HI 2 \"s_register_operand\" \"r\")))))]\n   \"TARGET_DSP_MULTIPLY\"\n-  \"smlabb%?\\\\t%0, %2, %3, %1\"\n+  \"smlabb%?\\\\t%0, %1, %2, %3\"\n   [(set_attr \"insn\" \"smlaxy\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n-(define_insn \"*mulhidi3adddi\"\n+(define_insn \"*maddhidi4\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=r\")\n \t(plus:DI\n-\t  (match_operand:DI 1 \"s_register_operand\" \"0\")\n+\t  (match_operand:DI 3 \"s_register_operand\" \"0\")\n \t  (mult:DI (sign_extend:DI\n-\t \t    (match_operand:HI 2 \"s_register_operand\" \"%r\"))\n+\t \t    (match_operand:HI 1 \"s_register_operand\" \"%r\"))\n \t\t   (sign_extend:DI\n-\t\t    (match_operand:HI 3 \"s_register_operand\" \"r\")))))]\n+\t\t    (match_operand:HI 2 \"s_register_operand\" \"r\")))))]\n   \"TARGET_DSP_MULTIPLY\"\n-  \"smlalbb%?\\\\t%Q0, %R0, %2, %3\"\n+  \"smlalbb%?\\\\t%Q0, %R0, %1, %2\"\n   [(set_attr \"insn\" \"smlalxy\")\n    (set_attr \"predicable\" \"yes\")])\n "}, {"sha": "73383546e28cac5e1668044cac4380c5976bd8b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "patch": "@@ -1,3 +1,10 @@\n+2010-06-29  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR target/43902\n+\t* gcc.target/arm/wmul-1.c: Test for smlabb instead of smulbb.\n+\t* gcc.target/arm/wmul-3.c: New test.\n+\t* gcc.target/arm/wmul-4.c: New test.\n+\n 2010-06-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/44659"}, {"sha": "ccb3041551a809982a9da58b42f15068860286b4", "filename": "gcc/testsuite/gcc.target/arm/wmul-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-1.c?ref=810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "patch": "@@ -15,4 +15,4 @@ int mac(const short *a, const short *b, int sqr, int *sum)\n   return sqr;\n }\n \n-/* { dg-final { scan-assembler-times \"smulbb\" 2 } } */\n+/* { dg-final { scan-assembler-times \"smlabb\" 2 } } */"}, {"sha": "325dcebbbda5da6326427271f2c4749cc6f748cf", "filename": "gcc/testsuite/gcc.target/arm/wmul-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-3.c?ref=810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=armv6t2\" } */\n+\n+int mac(const short *a, const short *b, int sqr, int *sum)\n+{\n+  int i;\n+  int dotp = *sum;\n+\n+  for (i = 0; i < 150; i++) {\n+    dotp -= b[i] * a[i];\n+    sqr -= b[i] * b[i];\n+  }\n+\n+  *sum = dotp;\n+  return sqr;\n+}\n+\n+/* { dg-final { scan-assembler-times \"smulbb\" 2 } } */"}, {"sha": "e8642f8aed132939894e53991f4d67961d08aee9", "filename": "gcc/testsuite/gcc.target/arm/wmul-4.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fwmul-4.c?ref=810c4bf4f02f33cc69d7af5d8c2eeddadd1c380b", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=armv6t2\" } */\n+\n+int mac(const int *a, const int *b, long long sqr, long long *sum)\n+{\n+  int i;\n+  long long dotp = *sum;\n+\n+  for (i = 0; i < 150; i++) {\n+    dotp += (long long) b[i] * a[i];\n+    sqr += (long long) b[i] * b[i];\n+  }\n+\n+  *sum = dotp;\n+  return sqr;\n+}\n+\n+/* { dg-final { scan-assembler-times \"smlal\" 2 } } */"}]}