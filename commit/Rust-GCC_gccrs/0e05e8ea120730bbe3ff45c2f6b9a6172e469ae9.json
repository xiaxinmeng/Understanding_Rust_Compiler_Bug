{"sha": "0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUwNWU4ZWExMjA3MzBiYmUzZmY0NWMyZjZiOWE2MTcyZTQ2OWFlOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-17T00:40:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-17T00:40:39Z"}, "message": "varasm.c (asm_output_bss): Add prototype.\n\n        * varasm.c (asm_output_bss): Add prototype.\n        (asm_output_aligned_bss): Likewise.\n        * unroll.c (verify_addresses): Add prototype.\n        * toplev.c: Add many prototypes.  Too many to mention here.\n        * stmt.c (check_seenlabel): Add prototype.\n        * rtlanal.c (reg_set_p_1): Add prototype.\n        (reg_set_last_1): Likewise.\n        * reorg.c (find_dead_or_set_registers): Add prototype.\n        * regmove (try_auto_increment): Add prototype.\n        * regstack.c (pop_stack): Add prototype.\n\nFrom-SVN: r19254", "tree": {"sha": "6a89784a7594dce3c6e8e000c1873ed88f1d6e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a89784a7594dce3c6e8e000c1873ed88f1d6e8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/comments", "author": null, "committer": null, "parents": [{"sha": "a777ae13a761638ee29cfe06f9542f14769d0dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a777ae13a761638ee29cfe06f9542f14769d0dd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a777ae13a761638ee29cfe06f9542f14769d0dd0"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "45a533edb8b3fe7b8c837ec127e088b0a61a20f5", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "patch": "@@ -237,6 +237,7 @@ extern rtx forced_labels;\n \n static void mark_regs_pat\t\tPROTO((rtx, HARD_REG_SET *));\n static void straighten_stack\t\tPROTO((rtx, stack));\n+static void pop_stack\t\t\tPROTO((stack, int));\n static void record_label_references\tPROTO((rtx, rtx));\n static rtx *get_true_reg\t\tPROTO((rtx *));\n static int constrain_asm_operands\tPROTO((int, rtx *, char **, int *,"}, {"sha": "d3c25fd4055a15778d4e1038670cd16899fdf0e4", "filename": "gcc/regmove.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "patch": "@@ -55,6 +55,7 @@ struct match {\n   int early_clobber[MAX_RECOG_OPERANDS];\n };\n \n+static int try_auto_increment PROTO((rtx, rtx, rtx, rtx, HOST_WIDE_INT, int));\n static int find_matches PROTO((rtx, struct match *));\n static int fixup_match_1 PROTO((rtx, rtx, rtx, rtx, rtx, int, int, int, FILE *))\n ;"}, {"sha": "68486b0ffec8cde8bf22c3ac5b13c4378ea4ca0a", "filename": "gcc/reorg.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "patch": "@@ -264,6 +264,9 @@ static void fix_reg_dead_note PROTO((rtx, rtx));\n static void update_reg_unused_notes PROTO((rtx, rtx));\n static void update_live_status\tPROTO((rtx, rtx));\n static rtx next_insn_no_annul\tPROTO((rtx));\n+static rtx find_dead_or_set_registers PROTO ((rtx, struct resources *, rtx *,\n+\t\t\t\t\t      int, struct resources,\n+\t\t\t\t\t      struct resources));\n static void mark_target_live_regs PROTO((rtx, struct resources *));\n static void fill_simple_delay_slots PROTO((int));\n static rtx fill_slots_from_thread PROTO((rtx, rtx, rtx, rtx, int, int,"}, {"sha": "22215ae0cde5c66bf762d070f8dcf6493c8934fd", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "patch": "@@ -24,6 +24,8 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n \n static int rtx_addr_can_trap_p\tPROTO((rtx));\n+static void reg_set_p_1\t\tPROTO((rtx, rtx));\n+static void reg_set_last_1\tPROTO((rtx, rtx));\n \n \n /* Forward declarations */"}, {"sha": "611da7010185c3b3f2901952d1ffe89c204c6d0c", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "patch": "@@ -436,6 +436,7 @@ static void expand_null_return_1\tPROTO((rtx, int));\n static void expand_value_return\t\tPROTO((rtx));\n static int tail_recursion_args\t\tPROTO((tree, tree));\n static void expand_cleanups\t\tPROTO((tree, tree, int, int));\n+static void check_seenlabel\t\tPROTO((void));\n static void do_jump_if_equal\t\tPROTO((rtx, rtx, rtx, int));\n static int estimate_case_costs\t\tPROTO((case_node_ptr));\n static void group_case_nodes\t\tPROTO((case_node_ptr));"}, {"sha": "a4674c6a27a6e7d17c19fc5e1f3fc7f42f5308e5", "filename": "gcc/toplev.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "patch": "@@ -166,7 +166,34 @@ void sorry PVPROTO((char *s, ...));\n void really_sorry PVPROTO((char *s, ...));\n void fancy_abort ();\n void set_target_switch ();\n-static char *decl_name ();\n+static char *decl_name PROTO((tree, int));\n+static void vmessage PROTO((char *, char *, va_list));\n+static void v_message_with_file_and_line PROTO((char *, int, char *,\n+\t\t\t\t\t\tchar *, va_list));\n+static void v_message_with_decl PROTO((tree, char *, char *, va_list));\n+static void file_and_line_for_asm PROTO((rtx, char **, int *));\n+static void v_error_with_file_and_line PROTO((char *, int, char *, va_list));\n+static void v_error_with_decl PROTO((tree, char *, va_list));\n+static void v_error_for_asm PROTO((rtx, char *, va_list));\n+static void verror PROTO((char *, va_list));\n+static void vfatal PROTO((char *, va_list));\n+static void v_warning_with_file_and_line PROTO ((char *, int, char *, va_list));\n+static void v_warning_with_decl PROTO((tree, char *, va_list));\n+static void v_warning_for_asm PROTO((rtx, char *, va_list));\n+static void vwarning PROTO((char *, va_list));\n+static void vpedwarn PROTO((char *, va_list));\n+static void v_pedwarn_with_decl PROTO((tree, char *, va_list));\n+static void v_pedwarn_with_file_and_line PROTO((char *, int, char *, va_list));\n+static void vsorry PROTO((char *, va_list));\n+static void v_really_sorry PROTO((char *, va_list));\n+static void float_signal PROTO((int));\n+static void pipe_closed PROTO((int));\n+static void output_lang_identify PROTO((FILE *));\n+static void open_dump_file PROTO((char *, char *));\n+static void close_dump_file PROTO((void (*) (FILE *, rtx), rtx));\n+static void dump_rtl PROTO((char *, tree, void (*) (FILE *, rtx), rtx));\n+static void clean_dump_file PROTO((char *));\n+static void compile_file PROTO((char *));\n \n void print_version ();\n int print_single_switch ();"}, {"sha": "c21e69f93f98c48211aed043ab93c37ae6ef368e", "filename": "gcc/unroll.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "patch": "@@ -210,6 +210,7 @@ static int find_splittable_givs PROTO((struct iv_class *,enum unroll_types,\n \t\t\t\t       rtx, rtx, rtx, int));\n static int reg_dead_after_loop PROTO((rtx, rtx, rtx));\n static rtx fold_rtx_mult_add PROTO((rtx, rtx, rtx, enum machine_mode));\n+static int verify_addresses PROTO((struct induction *, rtx, int));\n static rtx remap_split_bivs PROTO((rtx));\n \n /* Try to unroll one loop and split induction variables in the loop."}, {"sha": "f075d614ebe8cb1783a7c1a74f5577cd49acc233", "filename": "gcc/varasm.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0e05e8ea120730bbe3ff45c2f6b9a6172e469ae9", "patch": "@@ -159,6 +159,12 @@ static void mark_constants\t\tPROTO((rtx));\n static int output_addressed_constants\tPROTO((tree));\n static void output_after_function_constants PROTO((void));\n static void output_constructor\t\tPROTO((tree, int));\n+#ifdef ASM_OUTPUT_BSS\n+static void asm_output_bss\t\tPROTO((FILE *, tree, char *, int, int));\n+#endif\n+#ifdef ASM_OUTPUT_ALIGNED_BSS\n+static void asm_output_aligned_bss\tPROTO((FILE *, tree, char *, int, int));\n+#endif\n \f\n static enum in_section { no_section, in_text, in_data, in_named\n #ifdef BSS_SECTION_ASM_OP"}]}