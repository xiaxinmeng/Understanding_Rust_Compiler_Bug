{"sha": "483c78cb8e390ab868a6e489d932460942d8c4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgzYzc4Y2I4ZTM5MGFiODY4YTZlNDg5ZDkzMjQ2MDk0MmQ4YzRkOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-05-06T12:53:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T12:53:27Z"}, "message": "errout.adb: Minor reformatting\n\n2009-05-06  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.adb: Minor reformatting\n\n\t* scng.adb, sem_prag.adb, par-ch4.adb, sem_res.adb, par-ch6.adb,\n\tsem_ch6.adb, par-prag.adb, sem_ch8.adb, sem_warn.adb, par-util.adb,\n\tstyleg.adb: Add stylized comments to error messages that are included\n\tin the codefix circuitry of IDE's such as GPS.\n\nFrom-SVN: r147173", "tree": {"sha": "492cd082cc6e4f7b5a7e18b91c76fcbe7eacbd77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/492cd082cc6e4f7b5a7e18b91c76fcbe7eacbd77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/483c78cb8e390ab868a6e489d932460942d8c4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483c78cb8e390ab868a6e489d932460942d8c4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/483c78cb8e390ab868a6e489d932460942d8c4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483c78cb8e390ab868a6e489d932460942d8c4d9/comments", "author": null, "committer": null, "parents": [{"sha": "4e7a4f6e8a2dd2e01783029b028dd935ca16b134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7a4f6e8a2dd2e01783029b028dd935ca16b134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e7a4f6e8a2dd2e01783029b028dd935ca16b134"}], "stats": {"total": 103, "additions": 61, "deletions": 42}, "files": [{"sha": "04513875ba37625b7d5ec20faba2c0fdc97ae429", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -1,3 +1,12 @@\n+2009-05-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.adb: Minor reformatting\n+\n+\t* scng.adb, sem_prag.adb, par-ch4.adb, sem_res.adb, par-ch6.adb,\n+\tsem_ch6.adb, par-prag.adb, sem_ch8.adb, sem_warn.adb, par-util.adb,\n+\tstyleg.adb: Add stylized comments to error messages that are included\n+\tin the codefix circuitry of IDE's such as GPS.\n+\n 2009-05-06  Sergey Rybin  <rybin@adacore.com>\n \n \t* gnat_ugn.texi: For Misnamed_Identifiers rule all description of the"}, {"sha": "c762be166fcb7a33db45b011bc87ca6b536ec0e3", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -53,9 +53,9 @@ with Uname;    use Uname;\n package body Errout is\n \n    Errors_Must_Be_Ignored : Boolean := False;\n-   --  Set to True by procedure Set_Ignore_Errors (True), when calls to\n-   --  error message procedures should be ignored (when parsing irrelevant\n-   --  text in sources being preprocessed).\n+   --  Set to True by procedure Set_Ignore_Errors (True), when calls to error\n+   --  message procedures should be ignored (when parsing irrelevant text in\n+   --  sources being preprocessed).\n \n    Finalize_Called : Boolean := False;\n    --  Set True if the Finalize routine has been called"}, {"sha": "af91f1668d76d116a4e0f624a7b4be74ef481eef", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -607,7 +607,8 @@ package body Ch4 is\n \n          elsif Token = Tok_Range then\n             if Expr_Form /= EF_Simple_Name then\n-               Error_Msg_SC (\"subtype mark must precede RANGE\");\n+               Error_Msg_SC -- CODEFIX???\n+                 (\"subtype mark must precede RANGE\");\n                raise Error_Resync;\n             end if;\n "}, {"sha": "ea5df6dfb3b4ed3b8a8a3b43f95733fc795383ea", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -1302,7 +1302,8 @@ package body Ch6 is\n       end if;\n \n       if Token = Tok_In then\n-         Error_Msg_SC (\"IN must precede OUT in parameter mode\");\n+         Error_Msg_SC -- CODEFIX ???\n+           (\"IN must precede OUT in parameter mode\");\n          Scan; -- past IN\n          Set_In_Present (Node, True);\n       end if;"}, {"sha": "eb77f860b4fff07d21740903682efd62fb9c769f", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -818,7 +818,7 @@ begin\n            and then Num_SRef_Pragmas (Current_Source_File) = 0\n            and then Operating_Mode /= Check_Syntax\n          then\n-            Error_Msg\n+            Error_Msg -- CODEFIX\n               (\"first % pragma must be first line of file\", Pragma_Sloc);\n             raise Error_Resync;\n          end if;"}, {"sha": "3672ca8145e384aa1db20dabadc0ec5c7569019d", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -163,7 +163,8 @@ package body Util is\n       if RM_Column_Check and then Token_Is_At_Start_Of_Line\n         and then Start_Column <= Scope.Table (Scope.Last).Ecol\n       then\n-         Error_Msg_BC (\"(style) incorrect layout\");\n+         Error_Msg_BC -- CODEFIX\n+           (\"(style) incorrect layout\");\n       end if;\n    end Check_Bad_Layout;\n "}, {"sha": "56b1e4cc4042e09186a95be6d82fbc0837895312", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -377,19 +377,19 @@ package body Scng is\n \n          if Source (Scan_Ptr) = '_' then\n             if Source (Scan_Ptr - 1) = '_' then\n-               Error_Msg_S\n+               Error_Msg_S -- CODEFIX\n                  (\"two consecutive underlines not permitted\");\n             else\n-               Error_Msg_S\n+               Error_Msg_S -- CODEFIX???\n                  (\"underline cannot follow punctuation character\");\n             end if;\n \n          else\n             if Source (Scan_Ptr - 1) = '_' then\n-               Error_Msg_S\n+               Error_Msg_S -- CODEFIX???\n                  (\"punctuation character cannot follow underline\");\n             else\n-               Error_Msg_S\n+               Error_Msg_S -- CODEFIX???\n                  (\"two consecutive punctuation characters not permitted\");\n             end if;\n          end if;"}, {"sha": "b51128705ae6ea848347dcd6a4aaa194819251f3", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -3480,36 +3480,36 @@ package body Sem_Ch6 is\n \n             case Ctype is\n                when Type_Conformant =>\n-                  Error_Msg_N\n+                  Error_Msg_N -- CODEFIX\n                     (\"not type conformant with declaration#!\", Enode);\n \n                when Mode_Conformant =>\n                   if Nkind (Parent (Old_Id)) = N_Full_Type_Declaration then\n-                     Error_Msg_N\n+                     Error_Msg_N -- CODEFIX???\n                        (\"not mode conformant with operation inherited#!\",\n                          Enode);\n                   else\n-                     Error_Msg_N\n+                     Error_Msg_N -- CODEFIX???\n                        (\"not mode conformant with declaration#!\", Enode);\n                   end if;\n \n                when Subtype_Conformant =>\n                   if Nkind (Parent (Old_Id)) = N_Full_Type_Declaration then\n-                     Error_Msg_N\n+                     Error_Msg_N -- CODEFIX???\n                        (\"not subtype conformant with operation inherited#!\",\n                          Enode);\n                   else\n-                     Error_Msg_N\n+                     Error_Msg_N -- CODEFIX???\n                        (\"not subtype conformant with declaration#!\", Enode);\n                   end if;\n \n                when Fully_Conformant =>\n                   if Nkind (Parent (Old_Id)) = N_Full_Type_Declaration then\n-                     Error_Msg_N\n+                     Error_Msg_N -- CODEFIX\n                        (\"not fully conformant with operation inherited#!\",\n                          Enode);\n                   else\n-                     Error_Msg_N\n+                     Error_Msg_N -- CODEFIX\n                        (\"not fully conformant with declaration#!\", Enode);\n                   end if;\n             end case;\n@@ -4157,7 +4157,8 @@ package body Sem_Ch6 is\n       procedure Conformance_Error (Msg : String; N : Node_Id) is\n       begin\n          Error_Msg_Sloc := Sloc (Prev_Loc);\n-         Error_Msg_N (\"not fully conformant with declaration#!\", N);\n+         Error_Msg_N -- CODEFIX\n+           (\"not fully conformant with declaration#!\", N);\n          Error_Msg_NE (Msg, N, N);\n       end Conformance_Error;\n "}, {"sha": "8ddefb58af054e013e98add6747188ef62f1d5da", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -2581,11 +2581,12 @@ package body Sem_Ch8 is\n               and then Etype (Pack) /= Any_Type\n             then\n                if Ekind (Pack) = E_Generic_Package then\n-                  Error_Msg_N\n+                  Error_Msg_N  -- CODEFIX\n                    (\"a generic package is not allowed in a use clause\",\n                       Pack_Name);\n                else\n-                  Error_Msg_N (\"& is not a usable package\", Pack_Name);\n+                  Error_Msg_N -- CODEFIX???\n+                    (\"& is not a usable package\", Pack_Name);\n                end if;\n \n             else\n@@ -3781,7 +3782,8 @@ package body Sem_Ch8 is\n                   if Is_Hidden (Ent) then\n                      Error_Msg_N (\"non-visible (private) declaration#!\", N);\n                   else\n-                     Error_Msg_N (\"non-visible declaration#!\", N);\n+                     Error_Msg_N -- CODEFIX\n+                       (\"non-visible declaration#!\", N);\n \n                      if Is_Compilation_Unit (Ent)\n                        and then"}, {"sha": "505fbea96fe4797b1f716aa4b5638fcc9e885d1a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -3106,7 +3106,7 @@ package body Sem_Prag is\n             Prag_Id = Pragma_Import_Valued_Procedure\n          then\n             if not Is_Imported (Ent) then\n-               Error_Pragma\n+               Error_Pragma -- CODEFIX???\n                  (\"pragma Import or Interface must precede pragma%\");\n             end if;\n "}, {"sha": "9b285c3cde2b099f8abce2d2273cd35fd842e82a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -1996,7 +1996,7 @@ package body Sem_Res is\n                              (\"ambiguous expression \"\n                                & \"(cannot resolve indirect call)!\", N);\n                         else\n-                           Error_Msg_NE\n+                           Error_Msg_NE -- CODEFIX\n                              (\"ambiguous expression (cannot resolve&)!\",\n                               N, It.Nam);\n                         end if;\n@@ -8288,7 +8288,7 @@ package body Sem_Res is\n                      and then Covers (Orig_T, Etype (Entity (Orig_N)))))\n          then\n             Error_Msg_Node_2 := Orig_T;\n-            Error_Msg_NE\n+            Error_Msg_NE -- CODEFIX\n               (\"?redundant conversion, & is of type &!\", N, Entity (Orig_N));\n          end if;\n       end if;"}, {"sha": "8132531cc0ca87cfdeb8b4ec74921e1e897b9543", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -1005,7 +1005,7 @@ package body Sem_Warn is\n                           and then not Has_Pragma_Unmodified_Check_Spec (E1)\n                         then\n                            if not Warnings_Off_E1 then\n-                              Error_Msg_N\n+                              Error_Msg_N -- CODEFIX\n                                 (\"?& is not modified, \"\n                                  & \"could be declared constant!\",\n                                  E1);\n@@ -1155,7 +1155,7 @@ package body Sem_Warn is\n                      elsif not Has_Unreferenced (E1)\n                        and then not Warnings_Off_E1\n                      then\n-                        Output_Reference_Error\n+                        Output_Reference_Error -- CODEFIX\n                           (\"?variable& is never read and never assigned!\");\n                      end if;\n \n@@ -2342,7 +2342,7 @@ package body Sem_Warn is\n                            end if;\n \n                            if not Is_Visible_Renaming then\n-                              Error_Msg_N\n+                              Error_Msg_N -- CODEFIX\n                                 (\"\\?with clause might be moved to body!\",\n                                  Name (Item));\n                            end if;\n@@ -2370,7 +2370,7 @@ package body Sem_Warn is\n                      if Unit = Spec_Unit then\n                         Set_Unreferenced_In_Spec (Item);\n                      else\n-                        Error_Msg_N\n+                        Error_Msg_N -- CODEFIX\n                           (\"?unit& is never instantiated!\", Name (Item));\n                      end if;\n \n@@ -2381,7 +2381,7 @@ package body Sem_Warn is\n                   elsif Unreferenced_In_Spec (Item) then\n                      Error_Msg_N\n                        (\"?unit& is not instantiated in spec!\", Name (Item));\n-                     Error_Msg_N\n+                     Error_Msg_N -- CODEFIX\n                        (\"\\?with clause can be moved to body!\", Name (Item));\n                   end if;\n                end if;\n@@ -3782,7 +3782,7 @@ package body Sem_Warn is\n                     and then No (Renamed_Object (E))\n                   then\n                      if not Has_Pragma_Unmodified_Check_Spec (E) then\n-                        Error_Msg_N\n+                        Error_Msg_N -- CODEFIX\n                           (\"?variable & is assigned but never read!\", E);\n                      end if;\n \n@@ -3871,11 +3871,11 @@ package body Sem_Warn is\n                Error_Msg_N (\"?procedure & is not referenced!\", E);\n \n             when E_Generic_Procedure =>\n-               Error_Msg_N\n+               Error_Msg_N -- CODEFIX\n                  (\"?generic procedure & is never instantiated!\", E);\n \n             when E_Generic_Function  =>\n-               Error_Msg_N\n+               Error_Msg_N -- CODEFIX\n                  (\"?generic function & is never instantiated!\", E);\n \n             when Type_Kind          =>"}, {"sha": "c92231d60b3cd5498c9ce6660b5e1d946629969d", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c78cb8e390ab868a6e489d932460942d8c4d9/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=483c78cb8e390ab868a6e489d932460942d8c4d9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -145,7 +145,8 @@ package body Styleg is\n    begin\n       if Style_Check_Attribute_Casing then\n          if Determine_Token_Casing /= Mixed_Case then\n-            Error_Msg_SC (\"(style) bad capitalization, mixed case required\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"(style) bad capitalization, mixed case required\");\n          end if;\n       end if;\n    end Check_Attribute_Name;\n@@ -379,7 +380,8 @@ package body Styleg is\n          if Style_Check_Indentation /= 0 then\n             if Start_Column rem Style_Check_Indentation /= 0 then\n                if not Same_Column_As_Next_Non_Blank_Line then\n-                  Error_Msg_S (\"(style) bad column\");\n+                  Error_Msg_S -- CODEFIX\n+                    (\"(style) bad column\");\n                end if;\n \n                return;\n@@ -656,7 +658,7 @@ package body Styleg is\n \n       else\n          if Style_Check_Blank_Lines and then Blank_Lines > 1 then\n-            Error_Msg\n+            Error_Msg -- CODEFIX\n               (\"(style) multiple blank lines\", Blank_Line_Location);\n          end if;\n \n@@ -720,7 +722,8 @@ package body Styleg is\n    begin\n       if Style_Check_Pragma_Casing then\n          if Determine_Token_Casing /= Mixed_Case then\n-            Error_Msg_SC (\"(style) bad capitalization, mixed case required\");\n+            Error_Msg_SC -- CODEFIX\n+              (\"(style) bad capitalization, mixed case required\");\n          end if;\n       end if;\n    end Check_Pragma_Name;\n@@ -978,7 +981,8 @@ package body Styleg is\n    procedure Non_Lower_Case_Keyword is\n    begin\n       if Style_Check_Keyword_Casing then\n-         Error_Msg_SC (\"(style) reserved words must be all lower case\");\n+         Error_Msg_SC -- CODEIX\n+           (\"(style) reserved words must be all lower case\");\n       end if;\n    end Non_Lower_Case_Keyword;\n "}]}