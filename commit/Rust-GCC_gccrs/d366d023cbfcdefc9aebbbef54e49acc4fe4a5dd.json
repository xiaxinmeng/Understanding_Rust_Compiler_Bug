{"sha": "d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM2NmQwMjNjYmZjZGVmYzlhZWJiYmVmNTRlNDlhY2M0ZmU0YTVkZA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2009-09-28T16:55:52Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2009-09-28T16:55:52Z"}, "message": "mangle.c (write_builtin_type): Support decimal float types.\n\n\t* mangle.c (write_builtin_type): Support decimal float types.\n\t* g++.dg/dfp: New directory.\n\t* g++.dg/dg.exp: Prune tests in dfp directory.\n\t* g++.dg/dfp/dfp/exp: New.\n\t* g++.dg/dfp/mangle-mode.C: New test.\n\nFrom-SVN: r152242", "tree": {"sha": "81ba6a6f8ec196b7cfee02cf9fe08b7e0775d5ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81ba6a6f8ec196b7cfee02cf9fe08b7e0775d5ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/comments", "author": null, "committer": null, "parents": [{"sha": "384c400a82f70420e31fbdc7c1b0b9368fc53b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/384c400a82f70420e31fbdc7c1b0b9368fc53b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/384c400a82f70420e31fbdc7c1b0b9368fc53b5b"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "ff2d352d5eb6356ec2acb972bbf51662ea3ab05a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "patch": "@@ -1,3 +1,7 @@\n+2009-09-28  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* mangle.c (write_builtin_type): Support decimal float types.\n+\n 2009-09-28  Richard Henderson  <rth@redhat.com>\n \n \t* cp-objcp-common.h (LANG_HOOKS_EH_USE_CXA_END_CLEANUP): New."}, {"sha": "bcaf5b0f940ee3b3122f00659f6830686f297de4", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "patch": "@@ -1894,6 +1894,12 @@ write_builtin_type (tree type)\n \twrite_char ('d');\n       else if (type == long_double_type_node)\n \twrite_char ('e');\n+      else if (type == dfloat32_type_node)\n+\twrite_string (\"Df\");\n+      else if (type == dfloat64_type_node)\n+\twrite_string (\"Dd\");\n+      else if (type == dfloat128_type_node)\n+\twrite_string (\"De\");\n       else\n \tgcc_unreachable ();\n       break;"}, {"sha": "566d5be70353ac44be46277b19ee27978db23db8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "patch": "@@ -1,3 +1,10 @@\n+2009-09-28  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* g++.dg/dfp: New directory.\n+\t* g++.dg/dg.exp: Prune tests in dfp directory.\n+\t* g++.dg/dfp/dfp/exp: New.\n+\t* g++.dg/dfp/mangle-mode.C: New test.\n+\n 2009-09-28  Michael Matz  <matz@suse.de>\n \n \t* gcc.dg/builtins-44.c: Use __builtin_isinf_sign when checking"}, {"sha": "1f5d47c24f81fa1ab30d02c8fb5cede479a5abae", "filename": "gcc/testsuite/g++.dg/dfp/dfp.exp", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fdfp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fdfp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fdfp.exp?ref=d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "patch": "@@ -0,0 +1,62 @@\n+# Copyright (C) 2005, 2006, 2007, 2009 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Load support procs.\n+load_lib g++-dg.exp\n+\n+# Skip these tests for targets that don't support this extension.\n+if { ![check_effective_target_dfp] } {\n+    return;\n+}\n+\n+# If the decimal float is supported in the compiler but not yet in the\n+# runtime, treat all tests as compile-only.\n+global dg-do-what-default\n+set save-dg-do-what-default ${dg-do-what-default}\n+if { ![check_effective_target_dfprt] } {\n+    verbose \"dfp.exp: runtime support for decimal float does not exist\" 2\n+    set dg-do-what-default compile\n+} else {\n+    verbose \"dfp.exp: runtime support for decimal float exists, use it\" 2\n+    set dg-do-what-default run\n+}\n+verbose \"dfp.exp: dg-do-what-default is ${dg-do-what-default}\" 2\n+\n+global DEFAULT_CXXFLAGS\n+if [info exists DEFAULT_CXXFLAGS] then {\n+  set save_default_cxxflags DEFAULT_CXXFLAGS\n+}\n+\n+# If a testcase doesn't have special options, use these.\n+set DEFAULT_CXXFLAGS \"\"\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[C]] \\\n+        \"\" $DEFAULT_CXXFLAGS\n+\n+# All done.\n+dg-finish\n+\n+set dg-do-what-default ${save-dg-do-what-default}\n+verbose \"dfp.exp: dg-do-what-default is ${dg-do-what-default}\" 2\n+if [info exists save_default_cxxflags] {\n+  set DEFAULT_CXXFLAGS $save_default_cxxflags\n+}"}, {"sha": "ac30cb323d93123502464a0d6bfd38f6275bd3aa", "filename": "gcc/testsuite/g++.dg/dfp/mangle-mode.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fmangle-mode.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fmangle-mode.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fmangle-mode.C?ref=d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do compile }\n+\n+// Check that the compiler mangles types defined with decimal float\n+// modes according to the vendor-neutral C++ ABI.\n+\n+typedef float _Decimal32 __attribute__((mode(SD)));\n+typedef float _Decimal64 __attribute__((mode(DD)));\n+typedef float _Decimal128 __attribute__((mode(TD)));\n+\n+extern void foo32 (_Decimal32 a, _Decimal32 &b, _Decimal32 *c);\n+extern void foo64 (_Decimal64 *a, _Decimal64 b, _Decimal64 &c);\n+extern void foo128 (_Decimal128 &a, _Decimal128 *b, _Decimal128 c);\n+\n+void\n+bar32 (void)\n+{\n+  _Decimal32 x, y, z;\n+  foo32 (x, y, &z);\n+}\n+\n+void\n+bar64 (void)\n+{\n+  _Decimal64 x, y, z;\n+  foo64 (&x, y, z);\n+}\n+\n+void\n+bar128 (void)\n+{\n+  _Decimal128 x, y, z;\n+  foo128 (x, &y, z);\n+}\n+\n+// { dg-final { scan-assembler \"Z5foo32DfRDfPDf\" } }\n+// { dg-final { scan-assembler \"Z5foo64PDdDdRDd\" } }\n+// { dg-final { scan-assembler \"Z6foo128RDePDeDe\" } }"}, {"sha": "af8c14758486bea2e31066a5c3050d6fc7551f8d", "filename": "gcc/testsuite/g++.dg/dg.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdg.exp?ref=d366d023cbfcdefc9aebbbef54e49acc4fe4a5dd", "patch": "@@ -35,6 +35,7 @@ set tests [prune $tests $srcdir/$subdir/bprob/*]\n set tests [prune $tests $srcdir/$subdir/charset/*]\n set tests [prune $tests $srcdir/$subdir/compat/*]\n set tests [prune $tests $srcdir/$subdir/debug/*]\n+set tests [prune $tests $srcdir/$subdir/dfp/*]\n set tests [prune $tests $srcdir/$subdir/gcov/*]\n set tests [prune $tests $srcdir/$subdir/pch/*]\n set tests [prune $tests $srcdir/$subdir/plugin/*]"}]}