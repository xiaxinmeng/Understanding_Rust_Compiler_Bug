{"sha": "3fe725de2a240fe7f3e4c7882841df0259ff7833", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlNzI1ZGUyYTI0MGZlN2YzZTRjNzg4Mjg0MWRmMDI1OWZmNzgzMw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2005-07-03T15:38:39Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2005-07-03T15:38:39Z"}, "message": "re PR other/13906 (genmodes.c:964: internal compiler error: Bus error in md5_process_block)\n\n\tPR other/13906\n\t* ansidecl.h (ATTRIBUTE_ALIGNED_ALIGNOF): New.\n\t* md5.h (md5_uintptr): New.\n\t(md5_ctx): Align buffer field.\n\nFrom-SVN: r101556", "tree": {"sha": "38409efff96267d2b07a5179f12c3a77552e05ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38409efff96267d2b07a5179f12c3a77552e05ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fe725de2a240fe7f3e4c7882841df0259ff7833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe725de2a240fe7f3e4c7882841df0259ff7833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe725de2a240fe7f3e4c7882841df0259ff7833", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe725de2a240fe7f3e4c7882841df0259ff7833/comments", "author": null, "committer": null, "parents": [{"sha": "419df6a2ef100863be73c97ea818b72b0735259f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/419df6a2ef100863be73c97ea818b72b0735259f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/419df6a2ef100863be73c97ea818b72b0735259f"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "8799b295896e8425cf4d1983e070bf997dbbd296", "filename": "include/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe725de2a240fe7f3e4c7882841df0259ff7833/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe725de2a240fe7f3e4c7882841df0259ff7833/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=3fe725de2a240fe7f3e4c7882841df0259ff7833", "patch": "@@ -1,3 +1,10 @@\n+2005-07-03  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR other/13906\n+\t* ansidecl.h (ATTRIBUTE_ALIGNED_ALIGNOF): New.\n+\t* md5.h (md5_uintptr): New.\n+\t(md5_ctx): Align buffer field.\n+\n 2005-06-30  Daniel Berlin  <dberlin@dberlin.org>\n \t\n \t* hashtab.h (HTAB_DELETED_ENTRY): New macro."}, {"sha": "a1a765d63f32b82ea8e4af411d7b89d2f1a250ad", "filename": "include/ansidecl.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe725de2a240fe7f3e4c7882841df0259ff7833/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe725de2a240fe7f3e4c7882841df0259ff7833/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=3fe725de2a240fe7f3e4c7882841df0259ff7833", "patch": "@@ -352,6 +352,15 @@ So instead we use the macro below and test it against specific values.  */\n # endif /* GNUC >= 3.5 */\n #endif /* ATTRIBUTE_SENTINEL */\n \n+\n+#ifndef ATTRIBUTE_ALIGNED_ALIGNOF\n+# if (GCC_VERSION >= 3000)\n+#  define ATTRIBUTE_ALIGNED_ALIGNOF(m) __attribute__ ((__aligned__ (__alignof__ (m))))\n+# else\n+#  define ATTRIBUTE_ALIGNED_ALIGNOF(m)\n+# endif /* GNUC >= 3.0 */\n+#endif /* ATTRIBUTE_ALIGNED_ALIGNOF */\n+\n /* We use __extension__ in some places to suppress -pedantic warnings\n    about GCC extensions.  This feature didn't work properly before\n    gcc 2.8.  */"}, {"sha": "e35789346b1a995e52d2d83e5298e506634a3570", "filename": "include/md5.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe725de2a240fe7f3e4c7882841df0259ff7833/include%2Fmd5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe725de2a240fe7f3e4c7882841df0259ff7833/include%2Fmd5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fmd5.h?ref=3fe725de2a240fe7f3e4c7882841df0259ff7833", "patch": "@@ -37,6 +37,7 @@\n #ifdef _LIBC\n # include <sys/types.h>\n typedef u_int32_t md5_uint32;\n+typedef uintptr_t md5_uintptr;\n #else\n #  define INT_MAX_32_BITS 2147483647\n \n@@ -64,6 +65,9 @@ typedef u_int32_t md5_uint32;\n #   endif\n #  endif\n # endif\n+/* We have to make a guess about the integer type equivalent in size\n+   to pointers which should always be correct.  */\n+typedef unsigned long int md5_uintptr;\n #endif\n \n /* Structure to save state of computation between the single steps.  */\n@@ -76,7 +80,7 @@ struct md5_ctx\n \n   md5_uint32 total[2];\n   md5_uint32 buflen;\n-  char buffer[128];\n+  char buffer[128] ATTRIBUTE_ALIGNED_ALIGNOF(md5_uint32);\n };\n \n /*"}]}