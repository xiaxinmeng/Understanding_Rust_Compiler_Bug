{"sha": "49433044e4aad2d2bad0a52b747aad30e0892536", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk0MzMwNDRlNGFhZDJkMmJhZDBhNTJiNzQ3YWFkMzBlMDg5MjUzNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-07-04T09:20:01Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-07-04T09:20:01Z"}, "message": "std_streambuf.h (basic_streambuf::_M_buf): Change to size_t, from int_type.\n\n\n2002-07-04  Benjamin Kosnik  <bkoz@redhat.com>\n            Jack Reeves  <jackw_reeves@hotmail.com>\n\n\t* include/std/std_streambuf.h (basic_streambuf::_M_buf): Change to\n\tsize_t, from int_type.\n \t(basic_streambuf::_M_buf_size_opt): Same.\n \t(basic_streambuf::_S_pback_sizex): Same.\n\t* include/bits/streambuf.tcc: Same.\n\t* include/std/std_streambuf.h (basic_streambuf::snextc): Use\n\teq_int_type.\n\t(basic_streambuf::uflow): Same.\n\t* include/bits/sstream.tcc (basic_stringbuf::overflow): Use\n\tto_char_type.\n\t* include/bits/basic_ios.tcc (basic_ios::init): Use _CharT().\n\t* include/bits/streambuf.tcc (basic_streambuf::xsgetn): Use\n\teq_int_type.\n\t(basic_streambuf::xsputn): Same.\n\t(__copy_streambufs): Same.\n\nCo-Authored-By: Jack Reeves <jackw_reeves@hotmail.com>\n\nFrom-SVN: r55242", "tree": {"sha": "7c109fc76101a5cb8299ff4ce43c8da57ea994b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c109fc76101a5cb8299ff4ce43c8da57ea994b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49433044e4aad2d2bad0a52b747aad30e0892536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49433044e4aad2d2bad0a52b747aad30e0892536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49433044e4aad2d2bad0a52b747aad30e0892536", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49433044e4aad2d2bad0a52b747aad30e0892536/comments", "author": null, "committer": null, "parents": [{"sha": "5acf59f8e1443be34413cfcbdfd69283cfe59806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5acf59f8e1443be34413cfcbdfd69283cfe59806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5acf59f8e1443be34413cfcbdfd69283cfe59806"}], "stats": {"total": 68, "additions": 44, "deletions": 24}, "files": [{"sha": "90d0eb7864da120ec798f2b0ac357550074b5799", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=49433044e4aad2d2bad0a52b747aad30e0892536", "patch": "@@ -1,3 +1,22 @@\n+2002-07-04  Benjamin Kosnik  <bkoz@redhat.com>\n+            Jack Reeves  <jackw_reeves@hotmail.com>\n+\n+\t* include/std/std_streambuf.h (basic_streambuf::_M_buf): Change to\n+\tsize_t, from int_type.\n+ \t(basic_streambuf::_M_buf_size_opt): Same.\n+ \t(basic_streambuf::_S_pback_sizex): Same.\t\n+\t* include/bits/streambuf.tcc: Same.\n+\t* include/std/std_streambuf.h (basic_streambuf::snextc): Use\n+\teq_int_type.\n+\t(basic_streambuf::uflow): Same.\n+\t* include/bits/sstream.tcc (basic_stringbuf::overflow): Use\n+\tto_char_type.\n+\t* include/bits/basic_ios.tcc (basic_ios::init): Use _CharT().\n+\t* include/bits/streambuf.tcc (basic_streambuf::xsgetn): Use\n+\teq_int_type.\n+\t(basic_streambuf::xsputn): Same.\n+\t(__copy_streambufs): Same.\n+\n 2002-07-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/std/std_memory.h: Fix formatting."}, {"sha": "a38a95b58a0ff43834ad0635ca44bb6298a155ef", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=49433044e4aad2d2bad0a52b747aad30e0892536", "patch": "@@ -156,7 +156,7 @@ namespace std\n       // unformatted input and output with non-required basic_ios\n       // instantiations is possible even without imbuing the expected\n       // ctype<char_type> facet.\n-      _M_fill = 0;\n+      _M_fill = _CharT();\n       _M_fill_init = false;\n \n       _M_exception = goodbit;"}, {"sha": "fd56347a7a4afa9f21c42d2ad81cfc92d57b66c0", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=49433044e4aad2d2bad0a52b747aad30e0892536", "patch": "@@ -95,13 +95,13 @@ namespace std\n \t      __len *= 2;\n \n \t      if (__testwrite)\n-\t\t__ret = this->sputc(__c);\n+\t\t__ret = this->sputc(traits_type::to_char_type(__c));\n \t      else if (__len <= _M_string.max_size())\n \t\t{\n \t\t  // Force-allocate, re-sync.\n \t\t  _M_string = this->str();\n \t\t  _M_string.reserve(__len);\n-\t\t  _M_buf_size = static_cast<int_type>(__len);\n+\t\t  _M_buf_size = __len;\n \t\t  _M_really_sync(_M_in_cur - _M_in_beg, \n \t\t\t\t _M_out_cur - _M_out_beg);\n \t\t  *_M_out_cur = traits_type::to_char_type(__c);"}, {"sha": "2f790e902cb7c9f0e5d2bcd76149790733d5404d", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=49433044e4aad2d2bad0a52b747aad30e0892536", "patch": "@@ -40,7 +40,7 @@\n namespace std \n {\n   template<typename _CharT, typename _Traits>\n-    const typename basic_streambuf<_CharT, _Traits>::int_type\n+    const size_t\n     basic_streambuf<_CharT, _Traits>::_S_pback_size;\n \n   template<typename _CharT, typename _Traits>\n@@ -138,7 +138,7 @@ namespace std\n \t  if (__ret < __n)\n \t    {\n \t      int_type __c = this->uflow();  \n-\t      if (__c != traits_type::eof())\n+\t      if (!traits_type::eq_int_type(__c, traits_type::eof()))\n \t\t{\n \t\t  traits_type::assign(*__s++, traits_type::to_char_type(__c));\n \t\t  ++__ret;\n@@ -177,7 +177,7 @@ namespace std\n \t  if (__ret < __n)\n \t    {\n \t      int_type __c = this->overflow(traits_type::to_int_type(*__s));\n-\t      if (__c != traits_type::eof())\n+\t      if (!traits_type::eq_int_type(__c, traits_type::eof()))\n \t\t{\n \t\t  ++__ret;\n \t\t  ++__s;\n@@ -214,7 +214,7 @@ namespace std\n \t      __sbin->_M_in_cur_move(__xtrct);\n \t      if (__xtrct == __bufsize)\n \t\t{\n-\t\t  if (__sbin->sgetc() == _Traits::eof())\n+\t\t  if (_Traits::eq_int_type(__sbin->sgetc(), _Traits::eof()))\n \t\t    break;\n \t\t  __bufsize = __sbin->in_avail();\n \t\t}"}, {"sha": "14db73c07cce9b4b455ebc5e669929fadeed8344", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49433044e4aad2d2bad0a52b747aad30e0892536/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=49433044e4aad2d2bad0a52b747aad30e0892536", "patch": "@@ -91,10 +91,10 @@ namespace std\n       char_type*\t\t_M_buf; \t\n \n       // Actual size of allocated internal buffer, in bytes.\n-      int_type\t\t\t_M_buf_size;\n+      size_t\t\t\t_M_buf_size;\n \n       // Optimal or preferred size of internal buffer, in bytes.\n-      int_type\t\t\t_M_buf_size_opt;\n+      size_t\t\t\t_M_buf_size_opt;\n \n       // True iff _M_in_* and _M_out_* buffers should always point to\n       // the same place.  True for fstreams, false for sstreams.\n@@ -126,7 +126,7 @@ namespace std\n       // requirements. The only basic_streambuf member function that\n       // needs access to these data members is in_avail...\n       // NB: pbacks of over one character are not currently supported.\n-      static const int_type    \t_S_pback_size = 1; \n+      static const size_t   \t_S_pback_size = 1; \n       char_type\t\t\t_M_pback[_S_pback_size]; \n       char_type*\t\t_M_pback_cur_save;\n       char_type*\t\t_M_pback_end_save;\n@@ -140,8 +140,8 @@ namespace std\n       {\n \tif (!_M_pback_init)\n \t  {\n-\t    int_type __dist = _M_in_end - _M_in_cur;\n-\t    int_type __len = min(_S_pback_size, __dist);\n+\t    size_t __dist = _M_in_end - _M_in_cur;\n+\t    size_t __len = min(_S_pback_size, __dist);\n \t    traits_type::copy(_M_pback, _M_in_cur, __len);\n \t    _M_pback_cur_save = _M_in_cur;\n \t    _M_pback_end_save = _M_in_end;\n@@ -159,12 +159,12 @@ namespace std\n \tif (_M_pback_init)\n \t  {\n \t    // Length _M_in_cur moved in the pback buffer.\n-\t    int_type __off_cur = _M_in_cur - _M_pback;\n+\t    size_t __off_cur = _M_in_cur - _M_pback;\n \t    \n \t    // For in | out buffers, the end can be pushed back...\n-\t    int_type __off_end = 0;\n-\t    int_type __pback_len = _M_in_end - _M_pback;\n-\t    int_type __save_len = _M_pback_end_save - _M_buf;\n+\t    size_t __off_end = 0;\n+\t    size_t __pback_len = _M_in_end - _M_pback;\n+\t    size_t __save_len = _M_pback_end_save - _M_buf;\n \t    if (__pback_len > __save_len)\n \t      __off_end = __pback_len - __save_len;\n \n@@ -288,8 +288,8 @@ namespace std\n \t  {\n \t    if (_M_pback_init)\n \t      {\n-\t\tint_type __save_len =  _M_pback_end_save - _M_pback_cur_save;\n-\t\tint_type __pback_len = _M_in_cur - _M_pback;\n+\t\tsize_t __save_len =  _M_pback_end_save - _M_pback_cur_save;\n+\t\tsize_t __pback_len = _M_in_cur - _M_pback;\n \t\t__ret = __save_len - __pback_len;\n \t      }\n \t    else\n@@ -304,7 +304,8 @@ namespace std\n       snextc()\n       {\n \tint_type __eof = traits_type::eof();\n-\treturn (this->sbumpc() == __eof ? __eof : this->sgetc()); \n+\treturn (traits_type::eq_int_type(this->sbumpc(), __eof) \n+\t\t? __eof : this->sgetc());\n       }\n \n       int_type \n@@ -342,10 +343,10 @@ namespace std\n \n     protected:\n       basic_streambuf()\n-      : _M_buf(NULL), _M_buf_size(0), \n-      _M_buf_size_opt(static_cast<int_type>(BUFSIZ)), _M_buf_unified(false), \n-      _M_in_beg(0), _M_in_cur(0), _M_in_end(0), _M_out_beg(0), _M_out_cur(0), \n-      _M_out_end(0), _M_mode(ios_base::openmode(0)), _M_buf_locale(locale()), \n+      : _M_buf(NULL), _M_buf_size(0), _M_buf_size_opt(BUFSIZ), \n+      _M_buf_unified(false), _M_in_beg(0), _M_in_cur(0), _M_in_end(0), \n+      _M_out_beg(0), _M_out_cur(0), _M_out_end(0), \n+      _M_mode(ios_base::openmode(0)), _M_buf_locale(locale()), \n       _M_buf_locale_init(false), _M_pback_cur_save(0), _M_pback_end_save(0), \n       _M_pback_init(false)\n       { }\n@@ -438,7 +439,7 @@ namespace std\n       uflow() \n       {\n \tint_type __ret = traits_type::eof();\n-\tbool __testeof = this->underflow() == __ret;\n+\tbool __testeof = traits_type::eq_int_type(this->underflow(), __ret);\n \tbool __testpending = _M_in_cur && _M_in_cur < _M_in_end;\n \tif (!__testeof && __testpending)\n \t  {"}]}