{"sha": "7d0bfbd0be1500b4dd565adf84c44db539e88db1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QwYmZiZDBiZTE1MDBiNGRkNTY1YWRmODRjNDRkYjUzOWU4OGRiMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-08-26T18:49:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-08-26T18:49:40Z"}, "message": "alpha.h (LABEL_ALIGN_AFTER_BARRIER): Was ALIGN_LABEL_AFTER_BARRIER.\n\n        * alpha.h (LABEL_ALIGN_AFTER_BARRIER): Was ALIGN_LABEL_AFTER_BARRIER.\n        (MD_SCHED_VARIABLE_ISSUE): New.\n\nFrom-SVN: r22011", "tree": {"sha": "442ef1d70af41cf469dd26d180749c5f05d68b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/442ef1d70af41cf469dd26d180749c5f05d68b69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d0bfbd0be1500b4dd565adf84c44db539e88db1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d0bfbd0be1500b4dd565adf84c44db539e88db1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d0bfbd0be1500b4dd565adf84c44db539e88db1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d0bfbd0be1500b4dd565adf84c44db539e88db1/comments", "author": null, "committer": null, "parents": [{"sha": "68aed21b05c657635e6a37efe8a992cc8b39883e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68aed21b05c657635e6a37efe8a992cc8b39883e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68aed21b05c657635e6a37efe8a992cc8b39883e"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "b77f3b9e855dd053f944aaf843a5a63fa7b8903a", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0bfbd0be1500b4dd565adf84c44db539e88db1/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0bfbd0be1500b4dd565adf84c44db539e88db1/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=7d0bfbd0be1500b4dd565adf84c44db539e88db1", "patch": "@@ -483,7 +483,7 @@ extern void override_options ();\n    Alpha we'll get better performance by aligning on an octaword\n    boundary.  */\n \n-#define ALIGN_LABEL_AFTER_BARRIER(FILE)\t\\\n+#define LABEL_ALIGN_AFTER_BARRIER(FILE)\t\\\n   (optimize > 0 && write_symbols != SDB_DEBUG ? 4 : 0)\n \n /* No data type wants to be aligned rounder than this.  */\n@@ -1680,6 +1680,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* The EV4 is dual issue; EV5/EV6 are quad issue.  */\n #define ISSUE_RATE  (alpha_cpu == PROCESSOR_EV4 ? 2 : 4)\n \n+/* Describe the fact that MULTI instructions are multiple instructions\n+   and so to assume they don't pair with anything.  */\n+#define MD_SCHED_VARIABLE_ISSUE(DUMP, SCHED_VERBOSE, INSN, CAN_ISSUE_MORE) \\\n+  if (recog_memoized (INSN) < 0 || get_attr_type (INSN) == TYPE_MULTI)\t   \\\n+     (CAN_ISSUE_MORE) = 0\n+\n /* Compute the cost of computing a constant rtl expression RTX\n    whose rtx-code is CODE.  The body of this macro is a portion\n    of a switch statement.  If the code is computed here,"}]}