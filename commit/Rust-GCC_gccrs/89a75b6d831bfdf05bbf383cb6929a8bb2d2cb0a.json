{"sha": "89a75b6d831bfdf05bbf383cb6929a8bb2d2cb0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlhNzViNmQ4MzFiZmRmMDViYmYzODNjYjY5MjlhOGJiMmQyY2IwYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-04-25T23:23:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-04-25T23:23:41Z"}, "message": "correct comment\n\nFrom-SVN: r33425", "tree": {"sha": "ad180a8e44d0c120aa2717140085f330b68990e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad180a8e44d0c120aa2717140085f330b68990e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89a75b6d831bfdf05bbf383cb6929a8bb2d2cb0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89a75b6d831bfdf05bbf383cb6929a8bb2d2cb0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89a75b6d831bfdf05bbf383cb6929a8bb2d2cb0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89a75b6d831bfdf05bbf383cb6929a8bb2d2cb0a/comments", "author": null, "committer": null, "parents": [{"sha": "0c96007e77cab88c49c2ec4101716d15e0883971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c96007e77cab88c49c2ec4101716d15e0883971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c96007e77cab88c49c2ec4101716d15e0883971"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "99545f88b04198293b00325fea2b18e604f3c7e0", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89a75b6d831bfdf05bbf383cb6929a8bb2d2cb0a/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89a75b6d831bfdf05bbf383cb6929a8bb2d2cb0a/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=89a75b6d831bfdf05bbf383cb6929a8bb2d2cb0a", "patch": "@@ -482,10 +482,9 @@ inlinable_function_p (fn, id)\n   else if (varargs_function_p (fn))\n     ;\n   /* All is well.  We can inline this function.  Traditionally, GCC\n-     has refused to inline functions using setjmp or alloca, or\n-     functions whose values are returned in a PARALLEL, and a few\n-     other such obscure conditions.  We are not equally constrained at\n-     the tree level.  */\n+     has refused to inline functions using alloca, or functions whose\n+     values are returned in a PARALLEL, and a few other such obscure\n+     conditions.  We are not equally constrained at the tree level.  */\n   else\n     inlinable = 1;\n "}]}