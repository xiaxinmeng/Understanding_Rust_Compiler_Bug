{"sha": "06c8f2ebf062f64e8f4228ec47bdd003df9ef5ed", "node_id": "C_kwDOANBUbNoAKDA2YzhmMmViZjA2MmY2NGU4ZjQyMjhlYzQ3YmRkMDAzZGY5ZWY1ZWQ", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2022-11-17T11:16:54Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2022-11-17T11:30:08Z"}, "message": "aarch64: Add mode size check on LDAPR-extend patterns\n\nAdd an extra safety check as suggested by Richard.\nTested on aarch64-none-linux-gnu.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/atomics.md (*aarch64_atomic_load<ALLX:mode>_rcpc_zext):\n\tAdd mode size check to condition.\n\t(*aarch64_atomic_load<ALLX:mode>_rcpc_sext): Likewise.", "tree": {"sha": "ef8f80d1eb63e28c916b3f44820ef5fadf48e32f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef8f80d1eb63e28c916b3f44820ef5fadf48e32f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06c8f2ebf062f64e8f4228ec47bdd003df9ef5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06c8f2ebf062f64e8f4228ec47bdd003df9ef5ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06c8f2ebf062f64e8f4228ec47bdd003df9ef5ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06c8f2ebf062f64e8f4228ec47bdd003df9ef5ed/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "822a0823c012b912f0108a4da257cd97cbcdb7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822a0823c012b912f0108a4da257cd97cbcdb7a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822a0823c012b912f0108a4da257cd97cbcdb7a3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1805012c9e96d319ee2d510b33db0e0b20e214c2", "filename": "gcc/config/aarch64/atomics.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c8f2ebf062f64e8f4228ec47bdd003df9ef5ed/gcc%2Fconfig%2Faarch64%2Fatomics.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c8f2ebf062f64e8f4228ec47bdd003df9ef5ed/gcc%2Fconfig%2Faarch64%2Fatomics.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fatomics.md?ref=06c8f2ebf062f64e8f4228ec47bdd003df9ef5ed", "patch": "@@ -711,7 +711,7 @@\n         [(match_operand:ALLX 1 \"aarch64_sync_memory_operand\" \"Q\")\n          (match_operand:SI 2 \"const_int_operand\")]\t\t\t;; model\n        UNSPECV_LDAP)))]\n-  \"TARGET_RCPC\"\n+  \"TARGET_RCPC && (<GPI:sizen> > <ALLX:sizen>)\"\n   \"ldapr<ALLX:atomic_sfx>\\t%<GPI:w>0, %1\"\n )\n \n@@ -722,7 +722,7 @@\n         [(match_operand:ALLX 1 \"aarch64_sync_memory_operand\" \"Q\")\n          (match_operand:SI 2 \"const_int_operand\")]\t\t\t;; model\n        UNSPECV_LDAP)))]\n-  \"TARGET_RCPC\"\n+  \"TARGET_RCPC && (<GPI:sizen> > <ALLX:sizen>)\"\n   \"ldaprs<ALLX:atomic_sfx>\\t%<GPI:w>0, %1\"\n )\n "}]}