{"sha": "97ea717682ff2c82773a482c9dc9d467810c03ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdlYTcxNzY4MmZmMmM4Mjc3M2E0ODJjOWRjOWQ0Njc4MTBjMDNlZg==", "commit": {"author": {"name": "Charles M. Hannum", "email": "root@ihack.net", "date": "1999-03-26T21:52:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-26T21:52:14Z"}, "message": "fold-const.c (fold_truthop): Mask the lhs and rhs after merging adjacent bitfield references.\n\n        * fold-const.c (fold_truthop): Mask the lhs and rhs after merging\n        adjacent bitfield references.\n\nFrom-SVN: r26004", "tree": {"sha": "78a476e1fb06efb51cbc4e1ab6e07cdd1af05727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78a476e1fb06efb51cbc4e1ab6e07cdd1af05727"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97ea717682ff2c82773a482c9dc9d467810c03ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ea717682ff2c82773a482c9dc9d467810c03ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ea717682ff2c82773a482c9dc9d467810c03ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ea717682ff2c82773a482c9dc9d467810c03ef/comments", "author": {"login": "mycroftxxx", "id": 1772872, "node_id": "MDQ6VXNlcjE3NzI4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1772872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mycroftxxx", "html_url": "https://github.com/mycroftxxx", "followers_url": "https://api.github.com/users/mycroftxxx/followers", "following_url": "https://api.github.com/users/mycroftxxx/following{/other_user}", "gists_url": "https://api.github.com/users/mycroftxxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mycroftxxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mycroftxxx/subscriptions", "organizations_url": "https://api.github.com/users/mycroftxxx/orgs", "repos_url": "https://api.github.com/users/mycroftxxx/repos", "events_url": "https://api.github.com/users/mycroftxxx/events{/privacy}", "received_events_url": "https://api.github.com/users/mycroftxxx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d490c9e5d6c47fffb395c10115aed5e4082ddbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d490c9e5d6c47fffb395c10115aed5e4082ddbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d490c9e5d6c47fffb395c10115aed5e4082ddbe"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "0e9486c7e2966f65fc9056524bf844497fbd120e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ea717682ff2c82773a482c9dc9d467810c03ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ea717682ff2c82773a482c9dc9d467810c03ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97ea717682ff2c82773a482c9dc9d467810c03ef", "patch": "@@ -65,6 +65,9 @@ Fri Mar 26 10:43:47 1999  Nick Clifton  <nickc@cygnus.com>\n \n Fri Mar 26 01:59:15 1999  \"Charles M. Hannum\" <root@ihack.net>\n \n+\t* fold-const.c (fold_truthop): Mask the lhs and rhs after merging\n+\tadjacent bitfield references. \n+\n \t* fold-const.c (fold_truthop): Verify that the lhs and rhs are\n \tin the same bit position when optimizing bitfield references\n \twhich have the same mask."}, {"sha": "93a0ae06ba97c383149e99cf0ab7785cb639fc3b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ea717682ff2c82773a482c9dc9d467810c03ef/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ea717682ff2c82773a482c9dc9d467810c03ef/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=97ea717682ff2c82773a482c9dc9d467810c03ef", "patch": "@@ -3956,20 +3956,32 @@ fold_truthop (code, truth_type, lhs, rhs)\n \n       /* There is still another way we can do something:  If both pairs of\n \t fields being compared are adjacent, we may be able to make a wider\n-\t field containing them both.  */\n+\t field containing them both.\n+\n+\t Note that we still must mask the lhs/rhs expressions.  Furthermore,\n+\t the mask must be shifted to account for the shift done by \n+\t make_bit_field_ref.  */\n       if ((ll_bitsize + ll_bitpos == rl_bitpos\n \t   && lr_bitsize + lr_bitpos == rr_bitpos)\n \t  || (ll_bitpos == rl_bitpos + rl_bitsize\n \t      && lr_bitpos == rr_bitpos + rr_bitsize))\n-\treturn build (wanted_code, truth_type,\n-\t\t      make_bit_field_ref (ll_inner, type,\n-\t\t\t\t\t  ll_bitsize + rl_bitsize,\n-\t\t\t\t\t  MIN (ll_bitpos, rl_bitpos),\n-\t\t\t\t\t  ll_unsignedp),\n-\t\t      make_bit_field_ref (lr_inner, type,\n-\t\t\t\t\t  lr_bitsize + rr_bitsize,\n-\t\t\t\t\t  MIN (lr_bitpos, rr_bitpos),\n-\t\t\t\t\t  lr_unsignedp));\n+\t{\n+\t  lhs = make_bit_field_ref (ll_inner, type, ll_bitsize + rl_bitsize,\n+\t\t\t\t    MIN (ll_bitpos, rl_bitpos), ll_unsignedp);\n+\t  ll_mask = const_binop (RSHIFT_EXPR, ll_mask,\n+\t\t\t\t size_int (MIN (xll_bitpos, xrl_bitpos)), 0);\n+\t  if (! all_ones_mask_p (ll_mask, ll_bitsize + rl_bitsize))\n+\t    lhs = build (BIT_AND_EXPR, type, lhs, ll_mask);\n+\n+\t  rhs = make_bit_field_ref (lr_inner, type, lr_bitsize + rr_bitsize,\n+\t\t\t\t    MIN (lr_bitpos, rr_bitpos), lr_unsignedp);\n+\t  lr_mask = const_binop (RSHIFT_EXPR, lr_mask,\n+\t\t\t\t size_int (MIN (xlr_bitpos, xrr_bitpos)), 0);\n+\t  if (! all_ones_mask_p (lr_mask, lr_bitsize + rr_bitsize))\n+\t    rhs = build (BIT_AND_EXPR, type, rhs, lr_mask);\n+\n+\t  return build (wanted_code, truth_type, lhs, rhs);\n+\t}\n \n       return 0;\n     }"}]}