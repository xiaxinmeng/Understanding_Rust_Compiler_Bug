{"sha": "95d7bdaae984895c2b436fbc445eb47d7c9555b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVkN2JkYWFlOTg0ODk1YzJiNDM2ZmJjNDQ1ZWI0N2Q3Yzk1NTViMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-08-19T17:01:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-08-19T17:01:01Z"}, "message": "re PR c++/45315 (ICE: tree check: expected aggr_init_expr, have call_expr in build_value_init, at cp/init.c:317)\n\n\tPR c++/45315\n\t* init.c (build_new_1): Don't use build_value_init in a template.\n\t(build_value_init): Make sure we don't.\n\nFrom-SVN: r163381", "tree": {"sha": "af2e509711d4cc8b32e46b70a6820bd70d73f114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af2e509711d4cc8b32e46b70a6820bd70d73f114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95d7bdaae984895c2b436fbc445eb47d7c9555b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d7bdaae984895c2b436fbc445eb47d7c9555b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95d7bdaae984895c2b436fbc445eb47d7c9555b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d7bdaae984895c2b436fbc445eb47d7c9555b0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce3beba3df013a2ebffbde6bf691f396dd968f61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3beba3df013a2ebffbde6bf691f396dd968f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3beba3df013a2ebffbde6bf691f396dd968f61"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "bac1182cb76444ec085f57ffd1728367b7803e49", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d7bdaae984895c2b436fbc445eb47d7c9555b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d7bdaae984895c2b436fbc445eb47d7c9555b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=95d7bdaae984895c2b436fbc445eb47d7c9555b0", "patch": "@@ -1,5 +1,9 @@\n 2010-08-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/45315\n+\t* init.c (build_new_1): Don't use build_value_init in a template.\n+\t(build_value_init): Make sure we don't.\n+\n \tPR c++/45307\n \t* cp-gimplify.c (cp_gimplify_expr): Also remove assignment\n \tof empty class CONSTRUCTOR."}, {"sha": "189bcbec9a5e30bfa39b65a4829bd93aaace1a12", "filename": "gcc/cp/init.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d7bdaae984895c2b436fbc445eb47d7c9555b0/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d7bdaae984895c2b436fbc445eb47d7c9555b0/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=95d7bdaae984895c2b436fbc445eb47d7c9555b0", "patch": "@@ -295,6 +295,9 @@ build_value_init (tree type, tsubst_flags_t complain)\n      zero-initializing the object and then calling the default\n      constructor.  */\n \n+  /* The AGGR_INIT_EXPR tweaking below breaks in templates.  */\n+  gcc_assert (!processing_template_decl);\n+\n   if (CLASS_TYPE_P (type))\n     {\n       if (type_has_user_provided_constructor (type))\n@@ -2310,7 +2313,8 @@ build_new_1 (VEC(tree,gc) **placement, tree type, tree nelts,\n \t{\n \t  init_expr = cp_build_indirect_ref (data_addr, RO_NULL, complain);\n \n-\t  if (TYPE_NEEDS_CONSTRUCTING (type) && !explicit_value_init_p)\n+\t  if (TYPE_NEEDS_CONSTRUCTING (type)\n+\t      && (!explicit_value_init_p || processing_template_decl))\n \t    {\n \t      init_expr = build_special_member_call (init_expr,\n \t\t\t\t\t\t     complete_ctor_identifier,\n@@ -2320,11 +2324,17 @@ build_new_1 (VEC(tree,gc) **placement, tree type, tree nelts,\n \t    }\n \t  else if (explicit_value_init_p)\n \t    {\n-\t      /* Something like `new int()'.  */\n-\t      tree val = build_value_init (type, complain);\n-\t      if (val == error_mark_node)\n-\t\treturn error_mark_node;\n-\t      init_expr = build2 (INIT_EXPR, type, init_expr, val);\n+\t      if (processing_template_decl)\n+\t\t/* Don't worry about it, we'll handle this properly at\n+\t\t   instantiation time.  */;\n+\t      else\n+\t\t{\n+\t\t  /* Something like `new int()'.  */\n+\t\t  tree val = build_value_init (type, complain);\n+\t\t  if (val == error_mark_node)\n+\t\t    return error_mark_node;\n+\t\t  init_expr = build2 (INIT_EXPR, type, init_expr, val);\n+\t\t}\n \t    }\n \t  else\n \t    {"}, {"sha": "805cd7a8f83323e6de1eefa166933ac944849714", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d7bdaae984895c2b436fbc445eb47d7c9555b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d7bdaae984895c2b436fbc445eb47d7c9555b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=95d7bdaae984895c2b436fbc445eb47d7c9555b0", "patch": "@@ -1,5 +1,7 @@\n 2010-08-19  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/init/value8.C: New.\n+\n \t* g++.dg/tree-ssa/empty-2.C: New.\n \n \t* g++.dg/cpp0x/noexcept09.C: New."}, {"sha": "0a9b90b64bf369613950f315ecf5029108574d3c", "filename": "gcc/testsuite/g++.dg/init/value8.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95d7bdaae984895c2b436fbc445eb47d7c9555b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fvalue8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95d7bdaae984895c2b436fbc445eb47d7c9555b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fvalue8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fvalue8.C?ref=95d7bdaae984895c2b436fbc445eb47d7c9555b0", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/45315\n+\n+struct A\n+{\n+  A ();\n+};\n+\n+template < int > struct B : A\n+{\n+  void foo ()\n+  {\n+    new B < 0 > ();\n+  }\n+};\n+\n+int main()\n+{\n+  B<1>().foo();\n+}"}]}