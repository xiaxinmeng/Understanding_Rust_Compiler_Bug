{"sha": "c3880e4577152701c80688281effd6e8bd7db6eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4ODBlNDU3NzE1MjcwMWM4MDY4ODI4MWVmZmQ2ZThiZDdkYjZlYg==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@s-direktnet.de", "date": "1998-01-27T22:25:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-27T22:25:13Z"}, "message": "config.shared: Emit everything which needs to be re-definable via file descriptor 1...\n\n        * config.shared: Emit everything which needs to be re-definable\n        via file descriptor 1; the generic stuff is emitted using redirection\n        onto fd 2.\n        * configure.in (package_makefile_rules_frag): New variable\n        which is used in the call to config.shared; redirect file descriptor 2\n        to ${package_makefile_rules_frag}.\n\nFrom-SVN: r17523", "tree": {"sha": "deaae1e02a76bbc0cd2ee348358ff236eadd23d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deaae1e02a76bbc0cd2ee348358ff236eadd23d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3880e4577152701c80688281effd6e8bd7db6eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3880e4577152701c80688281effd6e8bd7db6eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3880e4577152701c80688281effd6e8bd7db6eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3880e4577152701c80688281effd6e8bd7db6eb/comments", "author": null, "committer": null, "parents": [{"sha": "59739e3ce9aa176d4b11da01a0075f8244108557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59739e3ce9aa176d4b11da01a0075f8244108557", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59739e3ce9aa176d4b11da01a0075f8244108557"}], "stats": {"total": 368, "additions": 193, "deletions": 175}, "files": [{"sha": "159d3c1334268b4d038d92cd1391057e2aa0debe", "filename": "libio/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3880e4577152701c80688281effd6e8bd7db6eb/libio%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3880e4577152701c80688281effd6e8bd7db6eb/libio%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2FChangeLog?ref=c3880e4577152701c80688281effd6e8bd7db6eb", "patch": "@@ -1,3 +1,13 @@\n+Tue Jan 27 23:26:07 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n+\n+\t* config.shared: Emit everything which needs to be re-definable\n+\tvia file descriptor 1; the generic stuff is emitted using redirection\n+\tonto fd 2.\n+\n+\t* configure.in (package_makefile_rules_frag): New variable\n+\twhich is used in the call to config.shared; redirect file descriptor 2\n+\tto ${package_makefile_rules_frag}.\n+\n Tue Jan 27 10:35:22 1998  H.J. Lu  (hjl@gnu.org)\n \n \t* configure.in (topsrcdir): New."}, {"sha": "41b273f19d53b1ce8ecf68dd4576fd18150c4717", "filename": "libio/config.shared", "status": "modified", "additions": 181, "deletions": 174, "changes": 355, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3880e4577152701c80688281effd6e8bd7db6eb/libio%2Fconfig.shared", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3880e4577152701c80688281effd6e8bd7db6eb/libio%2Fconfig.shared", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fconfig.shared?ref=c3880e4577152701c80688281effd6e8bd7db6eb", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1993, 1995, 1997 Free Software Foundation\n+# Copyright (C) 1993, 1995, 1997, 1998 Free Software Foundation\n # \n # This file is part of the GNU IO Library.  This library is free\n # software; you can redistribute it and/or modify it under the\n@@ -15,6 +15,10 @@\n # along with GNU CC; see the file COPYING.  If not, write to\n # the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n \n+# File descriptor usage:\n+# 1: All macros which need to be re-definable by any target fragments\n+# 2: All generic rules; especially those which use re-defined macros, e.g. _G_CONFIG_H!\n+\n # Significant variables:\n \n # Note that TO_TOPDIR does *not* include multilib.\n@@ -33,6 +37,8 @@ THIS_FILE=\"${srcdir}/${TOLIBGXX}config.shared\"\n \n echo \"# Start of package fragment generated by ${THIS_FILE}.\"\n echo \"\"\n+echo >&2 \"# Start of package rules fragment generated by ${THIS_FILE}.\"\n+echo >&2 \"\"\n \n # Multilib support.\n echo 'MULTISRCTOP ='\n@@ -175,107 +181,107 @@ fi\n \n ALL='$(PICDIR)'\" ${ALL}\"\n \n-echo \"all: ${ALL} multi-all\"\n+echo >&2 \"all: ${ALL} multi-all\"\n if [ \"${SUBDIRS}\" != \"\" ] ; then\n-  echo '\t@rootme=`pwd`/; export rootme; \\'\n-  echo '\t$(MAKE) \"DODIRS=$(SUBDIRS)\" DO=all $(FLAGS_TO_PASS) subdir_do'\n+  echo >&2 '\t@rootme=`pwd`/; export rootme; \\'\n+  echo >&2 '\t$(MAKE) \"DODIRS=$(SUBDIRS)\" DO=all $(FLAGS_TO_PASS) subdir_do'\n fi\n-echo '.PHONY: all'\n-echo ''\n+echo >&2 '.PHONY: all'\n+echo >&2 ''\n \n-echo '.PHONY: multi-all'\n-echo 'multi-all:'\n-echo '\t@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=all'\n-echo ''\n+echo >&2 '.PHONY: multi-all'\n+echo >&2 'multi-all:'\n+echo >&2 '\t@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=all'\n+echo >&2 ''\n \n-echo\n+echo >&2\n if [ \"${SUBDIRS}\" != \"\" ] ; then\n-  echo '.PHONY: subdir_do'\n-  echo 'subdir_do: force'\n-  echo '\t@rootme=`pwd`/; export rootme; \\'\n-  echo '\tfor i in $(DODIRS); do \\'\n-  echo '\t\tif [ -f  ./$$i/Makefile ] ; then \\'\n-  echo '\t\t\techo \"cd $$i; make $(DO) ...\" ; \\'\n-  echo '\t\t\t(cd $$i ; $(MAKE) $(FLAGS_TO_PASS) $(DO)) || exit 1 ; \\'\n-  echo '\t\telse true ; fi ; \\'\n-  echo '\tdone'\n-  echo ''\n-  echo '# List of variables to pass to sub-makes.  This should not be needed'\n-  echo '# by GNU make or Sun make (both of which pass command-line variable'\n-  echo '# overrides thouh $(MAKE)) but may be needed by older versions.'\n-  echo ''\n-  echo 'FLAGS_TO_PASS= \\'\n-  echo '\t\"SHELL=$(SHELL)\" \\'\n-  echo '\t\"INSTALL=$(INSTALL)\" \\'\n-  echo '\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\'\n-  echo '\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\'\n-  echo '\t\"prefix=$(prefix)\" \\'\n-  echo '\t\"exec_prefix=$(exec_prefix)\" \\'\n-  echo '\t\"tooldir=$(tooldir)\" \\'\n-  echo '\t\"AR=$(AR)\" \\'\n-  echo '\t\"AR_FLAGS=$(AR_FLAGS)\" \\'\n-  echo '\t\"CC=$(CC)\" \\'\n-  echo '\t\"CXX=$(CXX)\" \\'\n-  echo '\t\"CFLAGS=$(CFLAGS)\" \\'\n-  echo '\t\"CXXFLAGS=$(CXXFLAGS)\" \\'\n-  echo '\t\"NM=$(NM)\" \\'\n-  echo '\t\"RANLIB=$(RANLIB)\" \\'\n-  echo '\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\'\n-  echo '\t\"LIBCXXFLAGS=$(LIBCXXFLAGS)\" \\'\n-  echo '\t\"LOADLIBES=$(LOADLIBES)\" \\'\n-  echo '\t\"LDFLAGS=$(LDFLAGS)\" \\'\n-  echo '\t\"MAKEINFO=$(MAKEINFO)\" \\'\n-  echo '\t\"SHLIB=$(SHLIB)\" \\'\n-  echo '\t\"SHCURSES=$(SHCURSES)\" \\'\n-  echo '\t\"PICFLAG=$(PICFLAG)\" \\'\n-  echo '\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\"'\n+  echo >&2 '.PHONY: subdir_do'\n+  echo >&2 'subdir_do: force'\n+  echo >&2 '\t@rootme=`pwd`/; export rootme; \\'\n+  echo >&2 '\tfor i in $(DODIRS); do \\'\n+  echo >&2 '\t\tif [ -f  ./$$i/Makefile ] ; then \\'\n+  echo >&2 '\t\t\techo \"cd $$i; make $(DO) ...\" ; \\'\n+  echo >&2 '\t\t\t(cd $$i ; $(MAKE) $(FLAGS_TO_PASS) $(DO)) || exit 1 ; \\'\n+  echo >&2 '\t\telse true ; fi ; \\'\n+  echo >&2 '\tdone'\n+  echo >&2 ''\n+  echo >&2 '# List of variables to pass to sub-makes.  This should not be needed'\n+  echo >&2 '# by GNU make or Sun make (both of which pass command-line variable'\n+  echo >&2 '# overrides thouh $(MAKE)) but may be needed by older versions.'\n+  echo >&2 ''\n+  echo >&2 'FLAGS_TO_PASS= \\'\n+  echo >&2 '\t\"SHELL=$(SHELL)\" \\'\n+  echo >&2 '\t\"INSTALL=$(INSTALL)\" \\'\n+  echo >&2 '\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\'\n+  echo >&2 '\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\'\n+  echo >&2 '\t\"prefix=$(prefix)\" \\'\n+  echo >&2 '\t\"exec_prefix=$(exec_prefix)\" \\'\n+  echo >&2 '\t\"tooldir=$(tooldir)\" \\'\n+  echo >&2 '\t\"AR=$(AR)\" \\'\n+  echo >&2 '\t\"AR_FLAGS=$(AR_FLAGS)\" \\'\n+  echo >&2 '\t\"CC=$(CC)\" \\'\n+  echo >&2 '\t\"CXX=$(CXX)\" \\'\n+  echo >&2 '\t\"CFLAGS=$(CFLAGS)\" \\'\n+  echo >&2 '\t\"CXXFLAGS=$(CXXFLAGS)\" \\'\n+  echo >&2 '\t\"NM=$(NM)\" \\'\n+  echo >&2 '\t\"RANLIB=$(RANLIB)\" \\'\n+  echo >&2 '\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\'\n+  echo >&2 '\t\"LIBCXXFLAGS=$(LIBCXXFLAGS)\" \\'\n+  echo >&2 '\t\"LOADLIBES=$(LOADLIBES)\" \\'\n+  echo >&2 '\t\"LDFLAGS=$(LDFLAGS)\" \\'\n+  echo >&2 '\t\"MAKEINFO=$(MAKEINFO)\" \\'\n+  echo >&2 '\t\"SHLIB=$(SHLIB)\" \\'\n+  echo >&2 '\t\"SHCURSES=$(SHCURSES)\" \\'\n+  echo >&2 '\t\"PICFLAG=$(PICFLAG)\" \\'\n+  echo >&2 '\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\"'\n fi\n \n-echo 'NOSTDINC = -nostdinc++'\n+echo >&2 'NOSTDINC = -nostdinc++'\n if test -n \"${XCXXINCLUDES}\" ; then\n-  echo \"CXXINCLUDES = ${XCXXINCLUDES} \"'$(NOSTDINC)'\n+  echo >&2 \"CXXINCLUDES = ${XCXXINCLUDES} \"'$(NOSTDINC)'\n elif test \"${DOING_LIBGXX}\" = \"true\" ; then\n-  echo 'CXXINCLUDES = $(NOSTDINC) -I. -I'\"${TO_TOPDIR}libio\"' -I$(srcdir) -I$(srcdir)/'\"${TOLIBGXX}\"'$(IO_DIR) -I$(srcdir)/'\"${TOLIBGXX}\"'../libstdc++ -I$(srcdir)/'\"${TOLIBGXX}src\"' $(WRAP_C_INCLUDES)'\n+  echo >&2 'CXXINCLUDES = $(NOSTDINC) -I. -I'\"${TO_TOPDIR}libio\"' -I$(srcdir) -I$(srcdir)/'\"${TOLIBGXX}\"'$(IO_DIR) -I$(srcdir)/'\"${TOLIBGXX}\"'../libstdc++ -I$(srcdir)/'\"${TOLIBGXX}src\"' $(WRAP_C_INCLUDES)'\n fi\n if test -n \"${XCINCLUDES}\" ; then\n-  echo \"CINCLUDES = ${XCINCLUDES}\"\n+  echo >&2 \"CINCLUDES = ${XCINCLUDES}\"\n elif test \"${DOING_LIBGXX}\" = \"true\" ; then\n-  echo 'CINCLUDES ='\n+  echo >&2 'CINCLUDES ='\n fi\n \n if [ \"${LIBDIR}\" = \"yes\" ]; then\n-  echo 'XCFLAGS = $(LIBCFLAGS)'\n-  echo 'XCXXFLAGS = $(LIBCXXFLAGS)'\n+  echo >&2 'XCFLAGS = $(LIBCFLAGS)'\n+  echo >&2 'XCXXFLAGS = $(LIBCXXFLAGS)'\n else\n-  echo 'XCFLAGS = $(CFLAGS)'\n-  echo 'XCXXFLAGS = $(CXXFLAGS)'\n+  echo >&2 'XCFLAGS = $(CFLAGS)'\n+  echo >&2 'XCXXFLAGS = $(CXXFLAGS)'\n fi\n \n-echo '.SUFFIXES: .o .C .cc .c'\n-echo 'COMPILE.c = $(CC) -c $(XCFLAGS) $(CINCLUDES) $(MT_CFLAGS)'\n-echo '.c.o:'\n+echo >&2 '.SUFFIXES: .o .C .cc .c'\n+echo >&2 'COMPILE.c = $(CC) -c $(XCFLAGS) $(CINCLUDES) $(MT_CFLAGS)'\n+echo >&2 '.c.o:'\n if [ \"${LIBDIR}\" = \"yes\" ]; then\n-echo '\ttest -z \"$(PICFLAG)\" ||\\'\n-echo '\t  $(COMPILE.c) $(PICFLAG) $< -o pic/$@'\n+echo >&2 '\ttest -z \"$(PICFLAG)\" ||\\'\n+echo >&2 '\t  $(COMPILE.c) $(PICFLAG) $< -o pic/$@'\n fi\n-echo '\t$(COMPILE.c) $<'\n-[ \"${TOUCH_ON_COMPILE}\" = \"yes\" ] && echo '\t@touch stamp'\n-echo 'COMPILE.cc = $(CXX) -c $(XCXXFLAGS) $(CXXINCLUDES) $(MT_CFLAGS)'\n-echo '.C.o:'\n+echo >&2 '\t$(COMPILE.c) $<'\n+[ \"${TOUCH_ON_COMPILE}\" = \"yes\" ] && echo >&2 '\t@touch stamp'\n+echo >&2 'COMPILE.cc = $(CXX) -c $(XCXXFLAGS) $(CXXINCLUDES) $(MT_CFLAGS)'\n+echo >&2 '.C.o:'\n if [ \"${LIBDIR}\" = \"yes\" ]; then\n-echo '\ttest -z \"$(PICFLAG)\" ||\\'\n-echo '\t  $(COMPILE.cc) $(PICFLAG) $< -o pic/$@'\n+echo >&2 '\ttest -z \"$(PICFLAG)\" ||\\'\n+echo >&2 '\t  $(COMPILE.cc) $(PICFLAG) $< -o pic/$@'\n fi\n-echo '\t$(COMPILE.cc) $<'\n-[ \"${TOUCH_ON_COMPILE}\" = \"yes\" ] && echo '\t@touch stamp'\n-echo '.cc.o:'\n+echo >&2 '\t$(COMPILE.cc) $<'\n+[ \"${TOUCH_ON_COMPILE}\" = \"yes\" ] && echo >&2 '\t@touch stamp'\n+echo >&2 '.cc.o:'\n if [ \"${LIBDIR}\" = \"yes\" ]; then\n-echo '\ttest -z \"$(PICFLAG)\" || \\'\n-echo '\t  $(COMPILE.cc) $(PICFLAG) $< -o pic/$@'\n+echo >&2 '\ttest -z \"$(PICFLAG)\" || \\'\n+echo >&2 '\t  $(COMPILE.cc) $(PICFLAG) $< -o pic/$@'\n fi\n-echo '\t$(COMPILE.cc) $<'\n-[ \"${TOUCH_ON_COMPILE}\" = \"yes\" ] && echo '\t@touch stamp'\n-echo ''\n+echo >&2 '\t$(COMPILE.cc) $<'\n+[ \"${TOUCH_ON_COMPILE}\" = \"yes\" ] && echo >&2 '\t@touch stamp'\n+echo >&2 ''\n \n if [ -n \"${TARGETLIB}\" ] ; then\n   echo TARGETLIB = ${TARGETLIB}\n@@ -285,167 +291,167 @@ if [ -n \"${TARGETPROG}\" ] ; then\n fi\n \n if [ \"${LIBDIR}\" = \"yes\" ]; then\n-  echo ''\n-  echo 'stamp-picdir:'\n-  echo '\tif [ -n \"$(PICFLAG)\" ] && [ ! -d pic ]; then \\'\n-  echo '\t  mkdir pic; \\'\n-  echo '\telse true; fi'\n-  echo '\ttouch stamp-picdir'\n+  echo >&2 ''\n+  echo >&2 'stamp-picdir:'\n+  echo >&2 '\tif [ -n \"$(PICFLAG)\" ] && [ ! -d pic ]; then \\'\n+  echo >&2 '\t  mkdir pic; \\'\n+  echo >&2 '\telse true; fi'\n+  echo >&2 '\ttouch stamp-picdir'\n fi\n \n-echo ''\n-echo '.PHONY: install'\n-echo 'install:'\n-echo '.PHONY: check'\n+echo >&2 ''\n+echo >&2 '.PHONY: install'\n+echo >&2 'install:'\n+echo >&2 '.PHONY: check'\n if [ \"${CHECK}\" != \"check\" ] ; then\n-  echo \"check: ${ALL} ${CHECK}\"\n+  echo >&2 \"check: ${ALL} ${CHECK}\"\n   if [ \"${CHECK_SUBDIRS}\" != \"\" ] ; then\n-    echo '\trootme=`pwd`/; export rootme; \\'\n-    echo '\tSAVE_LLPATH=\"$${SAVE_LLPATH-$$LD_LIBRARY_PATH}\"; export SAVE_LLPATH; \\'\n-    echo '\tLD_LIBRARY_PATH=\"$${rootme}${TOLIBGXX}../libstdc++:$${rootme}${TOLIBGXX}../libg++:$$SAVE_LLPATH\"; \\'\n-    echo '\texport LD_LIBRARY_PATH; \\'\n-    echo '\t$(MAKE) \"DODIRS=$(CHECK_SUBDIRS)\" DO=check $(FLAGS_TO_PASS) subdir_do'\n+    echo >&2 '\trootme=`pwd`/; export rootme; \\'\n+    echo >&2 '\tSAVE_LLPATH=\"$${SAVE_LLPATH-$$LD_LIBRARY_PATH}\"; export SAVE_LLPATH; \\'\n+    echo >&2 '\tLD_LIBRARY_PATH=\"$${rootme}${TOLIBGXX}../libstdc++:$${rootme}${TOLIBGXX}../libg++:$$SAVE_LLPATH\"; \\'\n+    echo >&2 '\texport LD_LIBRARY_PATH; \\'\n+    echo >&2 '\t$(MAKE) \"DODIRS=$(CHECK_SUBDIRS)\" DO=check $(FLAGS_TO_PASS) subdir_do'\n   fi\n fi\n \n # Generate rules for documentation (depending on INFO_FILES and INFO_SUBDIRS).\n \n-echo '.PHONY: info dvi install-info clean-info'\n+echo >&2 '.PHONY: info dvi install-info clean-info'\n \n # emit the rule for 'info'\n # (Note that the top-level ../Makefile.in greps for '^info:' when making\n # a release (in \"make taz\"), so don't break that!)\n if [ -z \"${INFO_FILES}\" ] ; then\n-  echo 'info:'\n+  echo >&2 'info:'\n else\n-  echo info: `for file in ${INFO_FILES} ; do echo $file.info ; done`\n+  echo >&2 info: `for file in ${INFO_FILES} ; do echo $file.info ; done`\n fi\n if [ \"${INFO_SUBDIRS}\" != \"\" ] ; then\n-  echo '\t@rootme=`pwd`/; export rootme; \\\n+  echo >&2 '\t@rootme=`pwd`/; export rootme; \\\n \t$(MAKE) \"DODIRS='${INFO_SUBDIRS}'\" DO=info $(FLAGS_TO_PASS) subdir_do'\n fi\n \n # emit the rule for 'dvi'\n if [ -z \"${INFO_FILES}\" ] ; then\n-  echo 'dvi:'\n+  echo >&2 'dvi:'\n else\n-  echo dvi: `for file in ${INFO_FILES} ; do echo $file.dvi ; done`\n+  echo >&2 dvi: `for file in ${INFO_FILES} ; do echo $file.dvi ; done`\n fi\n if [ \"${INFO_SUBDIRS}\" != \"\" ] ; then\n-  echo '\t@rootme=`pwd`/; export rootme; \\\n+  echo >&2 '\t@rootme=`pwd`/; export rootme; \\\n \t$(MAKE) \"DODIRS='${INFO_SUBDIRS}'\" DO=dvi $(FLAGS_TO_PASS) subdir_do'\n fi\n \n # Emit rules for each *.info and *.dvi file\n for file in ${INFO_FILES} ; do\n-  echo ${file}.info: '$(srcdir)'/${file}.texi\n-  echo '\t$(MAKEINFO) -I$(srcdir) -I$(TEXIDIR) $(srcdir)/'${file}.texi -o ${file}.info\n-  echo ${file}.dvi: '$(srcdir)'/${file}.texi\n-  echo '\t$(TEXI2DVI) $(srcdir)'/${file}.texi\n-  echo \"${file}.ps: ${file}.dvi\"\n-  echo \"\tdvips ${file} -o\"\n+  echo >&2 ${file}.info: '$(srcdir)'/${file}.texi\n+  echo >&2 '\t$(MAKEINFO) -I$(srcdir) -I$(TEXIDIR) $(srcdir)/'${file}.texi -o ${file}.info\n+  echo >&2 ${file}.dvi: '$(srcdir)'/${file}.texi\n+  echo >&2 '\t$(TEXI2DVI) $(srcdir)'/${file}.texi\n+  echo >&2 \"${file}.ps: ${file}.dvi\"\n+  echo >&2 \"\tdvips ${file} -o\"\n done\n \n # emit the rule for install-info\n-echo 'install-info:'\n+echo >&2 'install-info:'\n if [ -n \"${INFO_FILES}\" ] ; then\n-  echo '\t-parent=`echo $(infodir)|sed -e' \"'\"'s@/[^/]*$$@@'\"'\"'`; \\'\n-  echo '\tif [ -d $$parent ] ; then true ; else mkdir $$parent ; fi'\n-  echo '\t-if [ -d $(infodir) ] ; then true ; else mkdir $(infodir) ; fi'\n-  echo '\tfor i in *.info* ; do \\'\n-  echo '\t  $(INSTALL_DATA) $$i $(infodir)/$$i ; \\'\n-  echo '\tdone'\n+  echo >&2 '\t-parent=`echo $(infodir)|sed -e' \"'\"'s@/[^/]*$$@@'\"'\"'`; \\'\n+  echo >&2 '\tif [ -d $$parent ] ; then true ; else mkdir $$parent ; fi'\n+  echo >&2 '\t-if [ -d $(infodir) ] ; then true ; else mkdir $(infodir) ; fi'\n+  echo >&2 '\tfor i in *.info* ; do \\'\n+  echo >&2 '\t  $(INSTALL_DATA) $$i $(infodir)/$$i ; \\'\n+  echo >&2 '\tdone'\n fi\n if [ \"${INFO_SUBDIRS}\" != \"\" ] ; then\n-  echo '\t@rootme=`pwd`/; export rootme; \\\n+  echo >&2 '\t@rootme=`pwd`/; export rootme; \\\n \t$(MAKE) \"DODIRS='${INFO_SUBDIRS}'\" DO=install-info $(FLAGS_TO_PASS) subdir_do'\n fi\n \n # emit clean-info and clean-dvi rules\n-echo '.PHONY: do-clean-info clean-info do-clean-dvi clean-dvi'\n-echo do-clean-info:\n+echo >&2 '.PHONY: do-clean-info clean-info do-clean-dvi clean-dvi'\n+echo >&2 do-clean-info:\n if [ -n \"${INFO_FILES}\" ] ; then\n-  echo '\trm -f *.info*'\n+  echo >&2 '\trm -f *.info*'\n fi\n-echo 'do-clean-dvi:'\n+echo >&2 'do-clean-dvi:'\n if [ -n \"${INFO_FILES}\" ] ; then\n-  echo '\trm -f *.dvi *.aux *.cp *.cps *.fn* *.ky *.log *.pg *.toc *.tp *.vr'\n+  echo >&2 '\trm -f *.dvi *.aux *.cp *.cps *.fn* *.ky *.log *.pg *.toc *.tp *.vr'\n fi\n for type in info dvi ; do\n-  echo clean-${type}: do-clean-${type}\n+  echo >&2 clean-${type}: do-clean-${type}\n   if [ \"${INFO_SUBDIRS}\" != \"\" ] ; then\n-    echo '\t@rootme=`pwd`/; export rootme; \\\n+    echo >&2 '\t@rootme=`pwd`/; export rootme; \\\n \t$(MAKE) \"DODIRS='${NFO_SUBDIRS}'\" DO=clean-'${type} '$(FLAGS_TO_PASS) subdir_do'\n   fi\n done\n \n-echo ''\n+echo >&2 ''\n \n-echo '.PHONY: boltcc'\n-echo 'boltcc:'\n-echo '\trootme=`pwd`/ ; export rootme ; $(MAKE) $(FLAGS_TO_PASS)'\n-echo ''\n+echo >&2 '.PHONY: boltcc'\n+echo >&2 'boltcc:'\n+echo >&2 '\trootme=`pwd`/ ; export rootme ; $(MAKE) $(FLAGS_TO_PASS)'\n+echo >&2 ''\n \n # Emit clean rules\n \n-echo ''\n-echo '# clean rules'\n+echo >&2 ''\n+echo >&2 '# clean rules'\n \n MOSTLYCLEAN=\"${MOSTLYCLEAN-*.o pic stamp-picdir core ${EXTRA_MOSTLYCLEAN}} `if test -n \"${TOUCH_ON_COMPILE}\"; then echo stamp; else true; fi`\"\n CLEAN=\"${CLEAN-${TARGETPROG} ${TARGETLIB}}\"\n DISTCLEAN=\"${DISTCLEAN-config.status Makefile *~ Make.pack target-mkfrag multilib.out ${EXTRA_DISTCLEAN-}}\"\n REALCLEAN=\"${REALCLEAN-depend *.info*}\"\n \n \n-echo '.PHONY: mostlyclean clean distclean maintainer-clean realclean'\n+echo >&2 '.PHONY: mostlyclean clean distclean maintainer-clean realclean'\n if test -z \"${SUBDIRS}\" ; then\n-  echo \"mostlyclean: clean-dvi\"\n-  echo \"\trm -rf ${MOSTLYCLEAN}\"\n-  echo '\t@$(MULTICLEAN) multi-clean DO=mostlyclean'\n-  echo \"clean: clean-dvi\"\n-  echo \"\trm -rf ${MOSTLYCLEAN} ${CLEAN}\"\n-  echo '\t@$(MULTICLEAN) multi-clean DO=clean'\n-  echo \"distclean: clean\"\n-  echo '\t@$(MULTICLEAN) multi-clean DO=distclean'\n-  echo \"\trm -rf ${DISTCLEAN}\"\n-  echo \"maintainer-clean realclean: clean clean-info\"\n-  echo '\t@$(MULTICLEAN) multi-clean DO=maintainer-clean'\n-  echo \"\trm -rf ${DISTCLEAN} ${REALCLEAN}\"\n+  echo >&2 \"mostlyclean: clean-dvi\"\n+  echo >&2 \"\trm -rf ${MOSTLYCLEAN}\"\n+  echo >&2 '\t@$(MULTICLEAN) multi-clean DO=mostlyclean'\n+  echo >&2 \"clean: clean-dvi\"\n+  echo >&2 \"\trm -rf ${MOSTLYCLEAN} ${CLEAN}\"\n+  echo >&2 '\t@$(MULTICLEAN) multi-clean DO=clean'\n+  echo >&2 \"distclean: clean\"\n+  echo >&2 '\t@$(MULTICLEAN) multi-clean DO=distclean'\n+  echo >&2 \"\trm -rf ${DISTCLEAN}\"\n+  echo >&2 \"maintainer-clean realclean: clean clean-info\"\n+  echo >&2 '\t@$(MULTICLEAN) multi-clean DO=maintainer-clean'\n+  echo >&2 \"\trm -rf ${DISTCLEAN} ${REALCLEAN}\"\n else\n-  echo '.PHONY: do-clean subdir_distclean subdir_maintainer_clean'\n-  echo \"mostlyclean: do-clean-dvi\"\n-  echo \"\trm -rf ${MOSTLYCLEAN}\"\n-  echo '\t@$(MAKE) $(FLAGS_TO_PASS) \"DODIRS=$(SUBDIRS)\" DO=mostlyclean subdir_do'\n-  echo '\t@$(MULTICLEAN) multi-clean DO=mostlyclean'\n-  echo \"do-clean: do-clean-dvi\"\n-  echo \"\trm -rf ${MOSTLYCLEAN} ${CLEAN}\"\n-  echo \"clean: do-clean\"\n-  echo '\t@$(MAKE) $(FLAGS_TO_PASS) \"DODIRS=$(SUBDIRS)\" DO=clean subdir_do'\n-  echo '\t@$(MULTICLEAN) multi-clean DO=clean'\n+  echo >&2 '.PHONY: do-clean subdir_distclean subdir_maintainer_clean'\n+  echo >&2 \"mostlyclean: do-clean-dvi\"\n+  echo >&2 \"\trm -rf ${MOSTLYCLEAN}\"\n+  echo >&2 '\t@$(MAKE) $(FLAGS_TO_PASS) \"DODIRS=$(SUBDIRS)\" DO=mostlyclean subdir_do'\n+  echo >&2 '\t@$(MULTICLEAN) multi-clean DO=mostlyclean'\n+  echo >&2 \"do-clean: do-clean-dvi\"\n+  echo >&2 \"\trm -rf ${MOSTLYCLEAN} ${CLEAN}\"\n+  echo >&2 \"clean: do-clean\"\n+  echo >&2 '\t@$(MAKE) $(FLAGS_TO_PASS) \"DODIRS=$(SUBDIRS)\" DO=clean subdir_do'\n+  echo >&2 '\t@$(MULTICLEAN) multi-clean DO=clean'\n   # distclean and maintainer-clean are tricky because they remove the Makefile.\n-  echo \"subdir_distclean:\"\n-  echo '\t@$(MAKE) $(FLAGS_TO_PASS) \"DODIRS=$(SUBDIRS)\" DO=distclean subdir_do'\n-  echo \"distclean: do-clean subdir_distclean\"\n-  echo '\t@$(MULTICLEAN) multi-clean DO=distclean'\n-  echo \"\trm -rf ${DISTCLEAN}\"\n-  echo \"subdir_maintainer_clean:\"\n-  echo '\t@$(MAKE) $(FLAGS_TO_PASS) \"DODIRS=$(SUBDIRS)\" DO=maintainer-clean subdir_do'\n-  echo \"maintainer-clean realclean: do-clean subdir_maintainer_clean do-clean-info\"\n-  echo '\t@$(MULTICLEAN) multi-clean DO=maintainer-clean'\n-  echo \"\trm -rf ${DISTCLEAN} ${REALCLEAN}\"\n+  echo >&2 \"subdir_distclean:\"\n+  echo >&2 '\t@$(MAKE) $(FLAGS_TO_PASS) \"DODIRS=$(SUBDIRS)\" DO=distclean subdir_do'\n+  echo >&2 \"distclean: do-clean subdir_distclean\"\n+  echo >&2 '\t@$(MULTICLEAN) multi-clean DO=distclean'\n+  echo >&2 \"\trm -rf ${DISTCLEAN}\"\n+  echo >&2 \"subdir_maintainer_clean:\"\n+  echo >&2 '\t@$(MAKE) $(FLAGS_TO_PASS) \"DODIRS=$(SUBDIRS)\" DO=maintainer-clean subdir_do'\n+  echo >&2 \"maintainer-clean realclean: do-clean subdir_maintainer_clean do-clean-info\"\n+  echo >&2 '\t@$(MULTICLEAN) multi-clean DO=maintainer-clean'\n+  echo >&2 \"\trm -rf ${DISTCLEAN} ${REALCLEAN}\"\n fi\n \n-echo ''\n-echo '.PHONY: force'\n-echo 'force:'\n-echo ''\n-echo '# with the gnu make, this is done automatically.'\n-echo ''\n-echo 'Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag)'\n-echo '\t$(SHELL) ./config.status'\n-echo ''\n-echo '.NOEXPORT:'\n-echo 'MAKEOVERRIDES='\n+echo >&2 ''\n+echo >&2 '.PHONY: force'\n+echo >&2 'force:'\n+echo >&2 ''\n+echo >&2 '# with the gnu make, this is done automatically.'\n+echo >&2 ''\n+echo >&2 'Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag)'\n+echo >&2 '\t$(SHELL) ./config.status'\n+echo >&2 ''\n+echo >&2 '.NOEXPORT:'\n+echo >&2 'MAKEOVERRIDES='\n \n cat <<\"EOF\"\n DEPEND_SOURCES = ${srcdir}/*.cc ${srcdir}/*.c\n@@ -480,7 +486,8 @@ $(srcdir)/depend:  depend.new\n EOF\n \n if [ -f ${srcdir}/${subdir}/depend ] ; then\n-  cat ${srcdir}/${subdir}/depend\n+  cat ${srcdir}/${subdir}/depend >&2\n fi\n \n echo \"# End of package fragment generated by ${THIS_FILE}.\"\n+echo >&2 \"# End of package rules fragment generated by ${THIS_FILE}.\""}, {"sha": "6594559f71df72a041a6cd73c5925dda408d8338", "filename": "libio/configure.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3880e4577152701c80688281effd6e8bd7db6eb/libio%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3880e4577152701c80688281effd6e8bd7db6eb/libio%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fconfigure.in?ref=c3880e4577152701c80688281effd6e8bd7db6eb", "patch": "@@ -20,6 +20,7 @@ fi\n srctrigger=libioP.h\n srcname=\"input/output library\"\n package_makefile_frag=Make.pack\n+package_makefile_rules_frag=Make.pack.r\n \n # per-host:\n \n@@ -115,7 +116,7 @@ INFO_FILES=iostream\n if [ -n \"${with_cross_host}\" -a -d ${topsrcdir}/gcc ]; then\n     CHECK_SUBDIRS=testsuite\n fi\n-(. ${srcdir}/config.shared) >${package_makefile_frag}\n+(. ${srcdir}/config.shared) >${package_makefile_frag} 2>${package_makefile_rules_frag}\n \n # post-target:\n "}]}