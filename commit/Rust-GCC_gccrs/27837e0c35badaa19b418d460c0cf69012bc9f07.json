{"sha": "27837e0c35badaa19b418d460c0cf69012bc9f07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc4MzdlMGMzNWJhZGFhMTliNDE4ZDQ2MGMwY2Y2OTAxMmJjOWYwNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-29T09:16:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-29T09:16:09Z"}, "message": "re PR tree-optimization/84057 (ICE: Segmentation fault (in can_remove_branch_p))\n\n2018-01-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84057\n\t* tree-ssa-loop-ivcanon.c (unloop_loops): Deal with already\n\tremoved paths when removing edges.\n\n\t* gcc.dg/graphite/pr84057.c: New testcase.\n\nFrom-SVN: r257139", "tree": {"sha": "1e3999e7c6c63148f4903fb7cba0897e7dbcdb32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e3999e7c6c63148f4903fb7cba0897e7dbcdb32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27837e0c35badaa19b418d460c0cf69012bc9f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27837e0c35badaa19b418d460c0cf69012bc9f07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27837e0c35badaa19b418d460c0cf69012bc9f07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27837e0c35badaa19b418d460c0cf69012bc9f07/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be34c0b1dec1272dfabec1e94a4666e9499fdc1"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "ac75869a3e5d8b6085201406457f76f0556d1f46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27837e0c35badaa19b418d460c0cf69012bc9f07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27837e0c35badaa19b418d460c0cf69012bc9f07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27837e0c35badaa19b418d460c0cf69012bc9f07", "patch": "@@ -1,3 +1,9 @@\n+2018-01-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84057\n+\t* tree-ssa-loop-ivcanon.c (unloop_loops): Deal with already\n+\tremoved paths when removing edges.\n+\n 2018-01-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* doc/invoke.texi: Replace -mfunction-return==@var{choice} with"}, {"sha": "18e19afcd0abdd6e70dc2fd0982610e67bf1e2f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27837e0c35badaa19b418d460c0cf69012bc9f07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27837e0c35badaa19b418d460c0cf69012bc9f07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27837e0c35badaa19b418d460c0cf69012bc9f07", "patch": "@@ -1,3 +1,8 @@\n+2018-01-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84057\n+\t* gcc.dg/graphite/pr84057.c: New testcase.\n+\n 2017-01-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/84073"}, {"sha": "9f7cea771394790abf4f15fcb3ee83b86d826868", "filename": "gcc/testsuite/gcc.dg/graphite/pr84057.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27837e0c35badaa19b418d460c0cf69012bc9f07/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84057.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27837e0c35badaa19b418d460c0cf69012bc9f07/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84057.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84057.c?ref=27837e0c35badaa19b418d460c0cf69012bc9f07", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fgraphite -funroll-loops -fno-tree-ccp -fno-tree-dce\" } */\n+\n+int ue;\n+\n+void\n+fr (int ct)\n+{\n+  int au = 0;\n+  int *ra = &au;\n+\n+  while (au < 1)\n+    {\n+      au -= 0x7878788;\n+      if (au != ct && ue != 0)\n+\t{\n+\t  while (au < 1)\n+\t    {\n+\t    }\n+\n+fc:\n+\t  while (ct != 0)\n+\t    {\n+\t    }\n+\t}\n+    }\n+\n+  for (au = 0; au < 2; ++au)\n+    if (ct != 0)\n+      goto fc;\n+}"}, {"sha": "a87ed0b920bdee8202ee37318de454f6b1f7e272", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27837e0c35badaa19b418d460c0cf69012bc9f07/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27837e0c35badaa19b418d460c0cf69012bc9f07/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=27837e0c35badaa19b418d460c0cf69012bc9f07", "patch": "@@ -660,14 +660,21 @@ unloop_loops (bitmap loop_closed_ssa_invalidated,\n   loops_to_unloop.release ();\n   loops_to_unloop_nunroll.release ();\n \n-  /* Remove edges in peeled copies.  */\n+  /* Remove edges in peeled copies.  Given remove_path removes dominated\n+     regions we need to cope with removal of already removed paths.  */\n   unsigned i;\n   edge e;\n+  auto_vec<int, 20> src_bbs;\n+  src_bbs.reserve_exact (edges_to_remove.length ());\n   FOR_EACH_VEC_ELT (edges_to_remove, i, e)\n-    {\n-      bool ok = remove_path (e, irred_invalidated, loop_closed_ssa_invalidated);\n-      gcc_assert (ok);\n-    }\n+    src_bbs.quick_push (e->src->index);\n+  FOR_EACH_VEC_ELT (edges_to_remove, i, e)\n+    if (BASIC_BLOCK_FOR_FN (cfun, src_bbs[i]))\n+      {\n+\tbool ok = remove_path (e, irred_invalidated,\n+\t\t\t       loop_closed_ssa_invalidated);\n+\tgcc_assert (ok);\n+      }\n   edges_to_remove.release ();\n }\n "}]}