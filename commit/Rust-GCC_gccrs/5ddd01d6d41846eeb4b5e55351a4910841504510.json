{"sha": "5ddd01d6d41846eeb4b5e55351a4910841504510", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkZDAxZDZkNDE4NDZlZWI0YjVlNTUzNTFhNDkxMDg0MTUwNDUxMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-03-14T19:49:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-18T08:36:46Z"}, "message": "[Ada] Replace Opt.Extensions_Allowed by Ada_Version\n\ngcc/ada/\n\n\t* fe.h, opt.adb, opt.ads, par-prag.adb, sem_prag.adb,\n\tswitch-c.adb (Extensions_Allowed): Replace by a function.\n\t(Ada_Version_Type): Add new value Ada_With_Extensions, to\n\treplace setting of Extensions_Allowed.  Update setting of\n\tExtensions_Allowed.", "tree": {"sha": "446d9ece7603fc1bb74699a85c38b8c295157364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/446d9ece7603fc1bb74699a85c38b8c295157364"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ddd01d6d41846eeb4b5e55351a4910841504510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddd01d6d41846eeb4b5e55351a4910841504510", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ddd01d6d41846eeb4b5e55351a4910841504510", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddd01d6d41846eeb4b5e55351a4910841504510/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4153c7547146cbd775385569bfdaa6cb3fe19007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4153c7547146cbd775385569bfdaa6cb3fe19007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4153c7547146cbd775385569bfdaa6cb3fe19007"}], "stats": {"total": 49, "additions": 16, "deletions": 33}, "files": [{"sha": "dc2b4165c343d4d33d5ff1b8b455d8f5b92e7248", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=5ddd01d6d41846eeb4b5e55351a4910841504510", "patch": "@@ -203,7 +203,7 @@ extern Boolean In_Extended_Main_Code_Unit\t(Entity_Id);\n #define Suppress_Checks\t\t\topt__suppress_checks\n \n typedef enum {\n-  Ada_83, Ada_95, Ada_2005, Ada_2012, Ada_2022\n+  Ada_83, Ada_95, Ada_2005, Ada_2012, Ada_2022, Ada_With_Extensions\n } Ada_Version_Type;\n \n typedef enum {"}, {"sha": "cd909495bebdbf769eb37cd99e4ca85b0cd9ea53", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=5ddd01d6d41846eeb4b5e55351a4910841504510", "patch": "@@ -84,7 +84,6 @@ package body Opt is\n       Default_SSO_Config                    := Default_SSO;\n       Dynamic_Elaboration_Checks_Config     := Dynamic_Elaboration_Checks;\n       Exception_Locations_Suppressed_Config := Exception_Locations_Suppressed;\n-      Extensions_Allowed_Config             := Extensions_Allowed;\n       External_Name_Exp_Casing_Config       := External_Name_Exp_Casing;\n       External_Name_Imp_Casing_Config       := External_Name_Imp_Casing;\n       Fast_Math_Config                      := Fast_Math;\n@@ -123,7 +122,6 @@ package body Opt is\n       Default_SSO                    := Save.Default_SSO;\n       Dynamic_Elaboration_Checks     := Save.Dynamic_Elaboration_Checks;\n       Exception_Locations_Suppressed := Save.Exception_Locations_Suppressed;\n-      Extensions_Allowed             := Save.Extensions_Allowed;\n       External_Name_Exp_Casing       := Save.External_Name_Exp_Casing;\n       External_Name_Imp_Casing       := Save.External_Name_Imp_Casing;\n       Fast_Math                      := Save.Fast_Math;\n@@ -165,7 +163,6 @@ package body Opt is\n          Default_SSO                    => Default_SSO,\n          Dynamic_Elaboration_Checks     => Dynamic_Elaboration_Checks,\n          Exception_Locations_Suppressed => Exception_Locations_Suppressed,\n-         Extensions_Allowed             => Extensions_Allowed,\n          External_Name_Exp_Casing       => External_Name_Exp_Casing,\n          External_Name_Imp_Casing       => External_Name_Imp_Casing,\n          Fast_Math                      => Fast_Math,\n@@ -204,7 +201,6 @@ package body Opt is\n          Ada_Version_Pragma          := Empty;\n          Default_SSO                 := ' ';\n          Dynamic_Elaboration_Checks  := False;\n-         Extensions_Allowed          := True;\n          External_Name_Exp_Casing    := As_Is;\n          External_Name_Imp_Casing    := Lowercase;\n          No_Component_Reordering     := False;\n@@ -263,7 +259,6 @@ package body Opt is\n          Check_Policy_List           := Check_Policy_List_Config;\n          Default_SSO                 := Default_SSO_Config;\n          Dynamic_Elaboration_Checks  := Dynamic_Elaboration_Checks_Config;\n-         Extensions_Allowed          := Extensions_Allowed_Config;\n          External_Name_Exp_Casing    := External_Name_Exp_Casing_Config;\n          External_Name_Imp_Casing    := External_Name_Imp_Casing_Config;\n          Fast_Math                   := Fast_Math_Config;"}, {"sha": "5384bd9da3f778aeea460432c5d024c189597c8d", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=5ddd01d6d41846eeb4b5e55351a4910841504510", "patch": "@@ -68,17 +68,20 @@ package Opt is\n    --  the default values.\n \n    Latest_Ada_Only : Boolean := False;\n-   --  If True, the only value valid for Ada_Version is Ada_Version_Type'Last,\n-   --  trying to specify other values will be ignored (in case of pragma\n+   --  If True, the only value valid for Ada_Version is Ada_2012 or later.\n+   --  Trying to specify other values will be ignored (in case of pragma\n    --  Ada_xxx) or generate an error (in case of -gnat83/95/xx switches).\n \n-   type Ada_Version_Type is (Ada_83, Ada_95, Ada_2005, Ada_2012, Ada_2022);\n+   type Ada_Version_Type is\n+     (Ada_83, Ada_95, Ada_2005, Ada_2012, Ada_2022, Ada_With_Extensions);\n    pragma Ordered (Ada_Version_Type);\n    pragma Convention (C, Ada_Version_Type);\n    --  Versions of Ada for Ada_Version below. Note that these are ordered,\n    --  so that tests like Ada_Version >= Ada_95 are legitimate and useful.\n    --  Think twice before using \"=\"; Ada_Version >= Ada_2012 is more likely\n    --  what you want, because it will apply to future versions of the language.\n+   --  Note that Ada_With_Extensions should always be last since it should\n+   --  always be a superset of the latest Ada version.\n \n    --  WARNING: There is a matching C declaration of this type in fe.h\n \n@@ -108,7 +111,7 @@ package Opt is\n    --  remains set to Ada_Version_Default). This is used in the rare cases\n    --  (notably pragma Obsolescent) where we want the explicit version set.\n \n-   Ada_Version_Runtime : Ada_Version_Type := Ada_2022;\n+   Ada_Version_Runtime : Ada_Version_Type := Ada_With_Extensions;\n    --  GNAT\n    --  Ada version used to compile the runtime. Used to set Ada_Version (but\n    --  not Ada_Version_Explicit) when compiling predefined or internal units.\n@@ -623,10 +626,10 @@ package Opt is\n    --  Set to True to convert nonbinary modular additions into code\n    --  that relies on the front-end expansion of operator Mod.\n \n-   Extensions_Allowed : Boolean := False;\n-   --  GNAT\n-   --  Set to True by switch -gnatX if GNAT specific language extensions\n-   --  are allowed. See GNAT RM for details.\n+   function Extensions_Allowed return Boolean is\n+     (Ada_Version = Ada_With_Extensions);\n+   --  True if GNAT specific language extensions are allowed. See GNAT RM for\n+   --  details.\n \n    type External_Casing_Type is (\n      As_Is,       -- External names cased as they appear in the Ada source\n@@ -2040,14 +2043,6 @@ package Opt is\n    --  GNAT\n    --  Set True by use of the configuration pragma Suppress_Exception_Messages\n \n-   Extensions_Allowed_Config : Boolean;\n-   --  GNAT\n-   --  This is the flag that indicates whether extensions are allowed. It can\n-   --  be set True either by use of the -gnatX switch, or by use of the\n-   --  configuration pragma Extensions_Allowed (On). It is always set to True\n-   --  for internal GNAT units, since extensions are always permitted in such\n-   --  units.\n-\n    External_Name_Exp_Casing_Config : External_Casing_Type;\n    --  GNAT\n    --  This is the value of the configuration switch that controls casing of\n@@ -2331,7 +2326,6 @@ private\n       Default_SSO                    : Character;\n       Dynamic_Elaboration_Checks     : Boolean;\n       Exception_Locations_Suppressed : Boolean;\n-      Extensions_Allowed             : Boolean;\n       External_Name_Exp_Casing       : External_Casing_Type;\n       External_Name_Imp_Casing       : External_Casing_Type;\n       Fast_Math                      : Boolean;"}, {"sha": "4c5efc6ab11cf310a0c997e4ba73cbc32516e8c7", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=5ddd01d6d41846eeb4b5e55351a4910841504510", "patch": "@@ -443,10 +443,8 @@ begin\n          Check_Arg_Is_On_Or_Off (Arg1);\n \n          if Chars (Expression (Arg1)) = Name_On then\n-            Extensions_Allowed := True;\n-            Ada_Version := Ada_Version_Type'Last;\n+            Ada_Version := Ada_With_Extensions;\n          else\n-            Extensions_Allowed := False;\n             Ada_Version := Ada_Version_Explicit;\n          end if;\n "}, {"sha": "3e6af337dcd51ded8db73d48d1ec39f86bf6381e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5ddd01d6d41846eeb4b5e55351a4910841504510", "patch": "@@ -16456,11 +16456,8 @@ package body Sem_Prag is\n             Check_Arg_Is_One_Of (Arg1, Name_On, Name_Off);\n \n             if Chars (Get_Pragma_Arg (Arg1)) = Name_On then\n-               Extensions_Allowed := True;\n-               Ada_Version := Ada_Version_Type'Last;\n-\n+               Ada_Version := Ada_With_Extensions;\n             else\n-               Extensions_Allowed := False;\n                Ada_Version := Ada_Version_Explicit;\n                Ada_Version_Pragma := Empty;\n             end if;"}, {"sha": "020be63540169224226c001316edc24acf17035b", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddd01d6d41846eeb4b5e55351a4910841504510/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=5ddd01d6d41846eeb4b5e55351a4910841504510", "patch": "@@ -1392,9 +1392,8 @@ package body Switch.C is\n \n             when 'X' =>\n                Ptr := Ptr + 1;\n-               Extensions_Allowed   := True;\n-               Ada_Version          := Ada_Version_Type'Last;\n-               Ada_Version_Explicit := Ada_Version_Type'Last;\n+               Ada_Version          := Ada_With_Extensions;\n+               Ada_Version_Explicit := Ada_With_Extensions;\n                Ada_Version_Pragma   := Empty;\n \n             --  -gnaty (style checks)"}]}