{"sha": "2abacbaec75089488500b57c1805ebb0bd21e616", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFiYWNiYWVjNzUwODk0ODg1MDBiNTdjMTgwNWViYjBiZDIxZTYxNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-06-13T13:56:14Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-06-13T13:56:14Z"}, "message": "re PR go/52583 (Several new go testsuite failues on Solaris)\n\n\tPR go/52583\nruntime: Stop backtrace at a few recognized functions.\n\nOn x86_64 Solaris the makecontext function does not properly\nindicate that it is at the top of the stack.  Attempting to\nunwind the stack past a call to makecontext tends to crash.\nThis patch changes libgo to look for certain functions that\nare always found at the top of the stack, and to stop\nunwinding when it reaches one of those functions.  There is\nnever anything interesting past these functions--that is,\nthere is never any code written by the user.\n\nFrom-SVN: r211640", "tree": {"sha": "1cfa435d5ce2396765fab16a6a0aa320fb7646dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cfa435d5ce2396765fab16a6a0aa320fb7646dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2abacbaec75089488500b57c1805ebb0bd21e616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abacbaec75089488500b57c1805ebb0bd21e616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2abacbaec75089488500b57c1805ebb0bd21e616", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abacbaec75089488500b57c1805ebb0bd21e616/comments", "author": null, "committer": null, "parents": [{"sha": "eec40eac8300a2edf346e61304da7988f4ac91cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eec40eac8300a2edf346e61304da7988f4ac91cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eec40eac8300a2edf346e61304da7988f4ac91cc"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "213686933d9c5adb2ae3ede364c840c05183bf9b", "filename": "libgo/runtime/go-callers.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2abacbaec75089488500b57c1805ebb0bd21e616/libgo%2Fruntime%2Fgo-callers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2abacbaec75089488500b57c1805ebb0bd21e616/libgo%2Fruntime%2Fgo-callers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-callers.c?ref=2abacbaec75089488500b57c1805ebb0bd21e616", "patch": "@@ -93,6 +93,32 @@ callback (void *data, uintptr_t pc, const char *filename, int lineno,\n \n   loc->lineno = lineno;\n   ++arg->index;\n+\n+  /* There is no point to tracing past certain runtime functions.\n+     Stopping the backtrace here can avoid problems on systems that\n+     don't provide proper unwind information for makecontext, such as\n+     Solaris (http://gcc.gnu.org/PR52583 comment #21).  */\n+  if (function != NULL)\n+    {\n+      if (__builtin_strcmp (function, \"makecontext\") == 0)\n+\treturn 1;\n+      if (filename != NULL)\n+\t{\n+\t  const char *p;\n+\n+\t  p = strrchr (filename, '/');\n+\t  if (p == NULL)\n+\t    p = filename;\n+\t  if (__builtin_strcmp (p, \"/proc.c\") == 0)\n+\t    {\n+\t      if (__builtin_strcmp (function, \"kickoff\") == 0\n+\t\t  || __builtin_strcmp (function, \"runtime_mstart\") == 0\n+\t\t  || __builtin_strcmp (function, \"runtime_main\") == 0)\n+\t\treturn 1;\n+\t    }\n+\t}\n+    }\n+\n   return arg->index >= arg->max;\n }\n "}]}