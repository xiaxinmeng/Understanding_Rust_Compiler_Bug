{"sha": "60aa52287572b287e94f52fc8b22c9e01d56458e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBhYTUyMjg3NTcyYjI4N2U5NGY1MmZjOGIyMmM5ZTAxZDU2NDU4ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-11-30T13:59:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-11-30T13:59:16Z"}, "message": "[multiple changes]\n\n2016-11-30  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_prag.adb, sem_ch6.adb: Minor reformatting and typo fixes.\n\t* g-sechas.adb: Minor reformatting.\n\t* lib-xref.ads: minor grammar fix in comment.\n\t* lib-xref-spark_specific.adb\n\t(Is_SPARK_Reference): do not ignore references to concurrent\n\tobjects.\n\t* sinfo.ads: Fix of unbalanced parens in comment\n\n2016-11-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* lib-xref.adb (Get_Type_Reference): If the entity is a function\n\treturning a classwide type, the type reference is obtained right\n\taway and does not need further unwinding.\n\n2016-11-30  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch8.adb (Find_Renamed_Entity): For non-overloaded subprogram\n\tactuals of generic units check that the spec of the renaming\n\tand renamed entities match.\n\n2016-11-30  Tristan Gingold  <gingold@adacore.com>\n\n\t* raise-gcc.c: For CERT runtimes: do not use gcc includes, simplify\n\tthe handling.\n\t* sem_attr.adb (Analyze_Attribute): Check No_Dynamic_Priorities\n\trestriction for Priority Attribute.\n\nFrom-SVN: r243022", "tree": {"sha": "08acb54b69a8451bbb846619ee2d79750f196e71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08acb54b69a8451bbb846619ee2d79750f196e71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60aa52287572b287e94f52fc8b22c9e01d56458e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60aa52287572b287e94f52fc8b22c9e01d56458e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60aa52287572b287e94f52fc8b22c9e01d56458e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60aa52287572b287e94f52fc8b22c9e01d56458e/comments", "author": null, "committer": null, "parents": [{"sha": "ba85c8c3fcb19c776f6e2209d5b0044c9e1cdd3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba85c8c3fcb19c776f6e2209d5b0044c9e1cdd3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba85c8c3fcb19c776f6e2209d5b0044c9e1cdd3d"}], "stats": {"total": 109, "additions": 85, "deletions": 24}, "files": [{"sha": "3f221d24ad5d8451fe7fe53ca093ba2d2c1e0a60", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -1,3 +1,32 @@\n+2016-11-30  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_prag.adb, sem_ch6.adb: Minor reformatting and typo fixes.\n+\t* g-sechas.adb: Minor reformatting.\n+\t* lib-xref.ads: minor grammar fix in comment.\n+\t* lib-xref-spark_specific.adb\n+\t(Is_SPARK_Reference): do not ignore references to concurrent\n+\tobjects.\n+\t* sinfo.ads: Fix of unbalanced parens in comment\n+\n+2016-11-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* lib-xref.adb (Get_Type_Reference): If the entity is a function\n+\treturning a classwide type, the type reference is obtained right\n+\taway and does not need further unwinding.\n+\n+2016-11-30  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Renamed_Entity): For non-overloaded subprogram\n+\tactuals of generic units check that the spec of the renaming\n+\tand renamed entities match.\n+\n+2016-11-30  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* raise-gcc.c: For CERT runtimes: do not use gcc includes, simplify\n+\tthe handling.\n+\t* sem_attr.adb (Analyze_Attribute): Check No_Dynamic_Priorities\n+\trestriction for Priority Attribute.\n+\n 2016-11-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/78524"}, {"sha": "59a598d74c84f0908472d8493d518e72931f963e", "filename": "gcc/ada/g-sechas.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fg-sechas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fg-sechas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.adb?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -253,7 +253,7 @@ package body GNAT.Secure_Hashes is\n                if Index = First_Index then\n \n                   --  Message_Length is in bytes, but we need to store it as\n-                  --  a bit count).\n+                  --  a bit count.\n \n                   Pad (Index) := Character'Val\n                                    (Shift_Left (Message_Length and 16#1f#, 3));"}, {"sha": "87d3942cbdfaaf320e99717fa669e469a7c10c3c", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -527,13 +527,6 @@ package body SPARK_Specific is\n          if Ekind (E) in Overloadable_Kind then\n             return Typ = 's';\n \n-         --  Objects of task or protected types are not SPARK references\n-\n-         elsif Present (Etype (E))\n-           and then Ekind (Etype (E)) in Concurrent_Kind\n-         then\n-            return False;\n-\n          --  In all other cases, result is true for reference/modify cases,\n          --  and false for all other cases.\n "}, {"sha": "ea68232215358e435256644783c8ff802d0efd12", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -1508,6 +1508,14 @@ package body Lib.Xref is\n                           Entity (Original_Node (Object_Definition (Decl)));\n                      end if;\n                   end;\n+\n+               --  For a function that returns a class-wide type, Tref is\n+               --  already correct.\n+\n+               elsif Is_Overloadable (Ent)\n+                 and then Is_Class_Wide_Type (Tref)\n+               then\n+                  return;\n                end if;\n \n             --  For anything else, exit"}, {"sha": "46948537d6d3d9921418270de25d487f078aa099", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -691,7 +691,7 @@ package Lib.Xref is\n    --  the spec. The entity in the body is treated as a reference with type\n    --  'b'. Similar handling for references to subprogram formals.\n    --\n-   --  The call has no effect if N is not in the extended main source unit\n+   --  The call has no effect if N is not in the extended main source unit.\n    --  This check is omitted for type 'e' references (where it is useful to\n    --  have structural scoping information for other than the main source),\n    --  and for 'p' (since we want to pick up inherited primitive operations"}, {"sha": "a2b6f645db6db97c5a2c895bcb20d04c3aaef6d6", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *             Copyright (C) 1992-2014, Free Software Foundation, Inc.      *\n+ *             Copyright (C) 1992-2016, Free Software Foundation, Inc.      *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -36,8 +36,13 @@\n #error \"RTS unit only\"\n #endif\n \n+#ifndef CERT\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n+#else\n+#define ATTRIBUTE_UNUSED __attribute__((unused))\n+#define HAVE_GETIPINFO 1\n+#endif\n \n #include <stdarg.h>\n typedef char bool;\n@@ -80,6 +85,15 @@ extern struct Exception_Occurrence *__gnat_setup_current_excep\n  (_Unwind_Exception *);\n extern void __gnat_unhandled_except_handler (_Unwind_Exception *);\n \n+#ifdef CERT\n+#define abort() __gnat_raise_abort()\n+static void __gnat_raise_abort(void)\n+{\n+  while (1)\n+    ;\n+}\n+#endif\n+\n #include \"unwind-pe.h\"\n \n /* The known and handled exception classes.  */\n@@ -928,9 +942,13 @@ is_handled_by (_Unwind_Ptr choice, _GNAT_Exception *propagated_exception)\n   /* All others and others choice match any foreign exception.  */\n   if (choice == GNAT_ALL_OTHERS\n       || choice == GNAT_OTHERS\n-      || choice == (_Unwind_Ptr) &Foreign_Exception)\n+#ifndef CERT\n+      || choice == (_Unwind_Ptr) &Foreign_Exception\n+#endif\n+      )\n     return handler;\n \n+#ifndef CERT\n   /* C++ exception occurrences.  */\n   if (exception_class_eq (propagated_exception, CXX_EXCEPTION_CLASS)\n       && Language_For (choice) == 'C')\n@@ -947,6 +965,7 @@ is_handled_by (_Unwind_Ptr choice, _GNAT_Exception *propagated_exception)\n       if (choice_typeinfo == except_typeinfo)\n \treturn handler;\n     }\n+#endif\n \n   return nothing;\n }\n@@ -1172,6 +1191,7 @@ personality_body (_Unwind_Action uw_phases,\n \t}\n       else\n \t{\n+#ifndef CERT\n \t  struct Exception_Occurrence *excep;\n \n \t  /* Trigger the appropriate notification routines before the second\n@@ -1182,6 +1202,7 @@ personality_body (_Unwind_Action uw_phases,\n \t    __gnat_notify_unhandled_exception (excep);\n \t  else\n \t    __gnat_notify_handled_exception (excep);\n+#endif\n \n \t  return _URC_HANDLER_FOUND;\n \t}\n@@ -1195,10 +1216,12 @@ personality_body (_Unwind_Action uw_phases,\n   setup_to_install\n     (uw_context, uw_exception, action.landing_pad, action.ttype_filter);\n \n+#ifndef CERT\n   /* Write current exception, so that it can be retrieved from Ada.  It was\n      already done during phase 1 (just above), but in between, one or several\n      exceptions may have been raised (in cleanup handlers).  */\n   __gnat_setup_current_excep (uw_exception);\n+#endif\n \n   return _URC_INSTALL_CONTEXT;\n }\n@@ -1338,6 +1361,7 @@ PERSONALITY_FUNCTION (_Unwind_State state,\n /* Callback routine called by Unwind_ForcedUnwind to execute all the cleanup\n    before exiting the task.  */\n \n+#ifndef CERT\n _Unwind_Reason_Code\n __gnat_cleanupunwind_handler (int version ATTRIBUTE_UNUSED,\n \t\t\t      _Unwind_Action phases,\n@@ -1362,6 +1386,7 @@ __gnat_cleanupunwind_handler (int version ATTRIBUTE_UNUSED,\n      and this hook will gain control again.  */\n   return _URC_NO_REASON;\n }\n+#endif\n \n /* Define the consistently named wrappers imported by Propagate_Exception.  */\n "}, {"sha": "669525316887f7109b96ad336cfac8687f5d344b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -5158,6 +5158,8 @@ package body Sem_Attr is\n \n          Check_E0;\n \n+         Check_Restriction (No_Dynamic_Priorities, N);\n+\n          --  The prefix must be a protected object (AARM D.5.2 (2/2))\n \n          Analyze (P);"}, {"sha": "ade6f504a24f68e60729c539ce250fa6748acb8c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -393,7 +393,7 @@ package body Sem_Ch6 is\n          Rewrite (N, New_Body);\n \n          --  Remove any existing aspects from the original node because the act\n-         --  of rewriting cases the list to be shared between the two nodes.\n+         --  of rewriting causes the list to be shared between the two nodes.\n \n          Orig_N := Original_Node (N);\n          Remove_Aspects (Orig_N);\n@@ -405,8 +405,8 @@ package body Sem_Ch6 is\n          Relocate_Pragmas_To_Body (N);\n          Analyze (N);\n \n-         --  Once the aspects of the generated body has been analyzed, create a\n-         --  copy for ASIS purposes and assciate it with the original node.\n+         --  Once the aspects of the generated body have been analyzed, create\n+         --  a copy for ASIS purposes and associate it with the original node.\n \n          if Has_Aspects (N) then\n             Set_Aspect_Specifications (Orig_N,\n@@ -459,15 +459,15 @@ package body Sem_Ch6 is\n          Rewrite (N, Make_Subprogram_Declaration (Loc, Specification => Spec));\n \n          --  Remove any existing aspects from the original node because the act\n-         --  of rewriting cases the list to be shared between the two nodes.\n+         --  of rewriting causes the list to be shared between the two nodes.\n \n          Orig_N := Original_Node (N);\n          Remove_Aspects (Orig_N);\n \n          Analyze (N);\n \n-         --  Once the aspects of the generated spec has been analyzed, create a\n-         --  copy for ASIS purposes and assciate it with the original node.\n+         --  Once the aspects of the generated spec have been analyzed, create\n+         --  a copy for ASIS purposes and associate it with the original node.\n \n          if Has_Aspects (N) then\n             Set_Aspect_Specifications (Orig_N,"}, {"sha": "54fca501f4888650294f0d683693b0e5d2478aa7", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -6449,7 +6449,10 @@ package body Sem_Ch8 is\n       --  Non-overloaded case\n \n       else\n-         if Is_Actual and then Present (Enclosing_Instance) then\n+         if Is_Actual\n+           and then Present (Enclosing_Instance)\n+           and then Entity_Matches_Spec (Entity (Nam), New_S)\n+         then\n             Old_S := Entity (Nam);\n \n          elsif Entity_Matches_Spec (Entity (Nam), New_S) then\n@@ -7757,6 +7760,7 @@ package body Sem_Ch8 is\n             Next_Formal (New_F);\n             Next_Formal (Old_F);\n          end loop;\n+         pragma Assert (No (Old_F));\n \n          if Ekind_In (Old_S, E_Function, E_Enumeration_Literal) then\n             Set_Etype (New_S, Etype (Old_S));"}, {"sha": "4351f32c3c28e23ae8786d07c7d43d2badfabf80", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -7019,7 +7019,7 @@ package body Sem_Prag is\n \n          function Check_Node (N : Node_Id) return Traverse_Result;\n          --  Tree visitor that checks if N is an attribute reference that can\n-         --  be statically computed by the backend. Validation_Needed is set\n+         --  be statically computed by the back end. Validation_Needed is set\n          --  to True if found.\n \n          ----------------\n@@ -7063,10 +7063,10 @@ package body Sem_Prag is\n          if Compile_Time_Known_Value (Arg1x) then\n             Process_Compile_Time_Warning_Or_Error (N, Sloc (Arg1));\n \n-         --  Register the expression for its validation after the backend has\n-         --  been called if it has occurrences of attributes size or alignment\n-         --  (because they may be statically computed by the backend and hence\n-         --  the whole expression needs to be re-evaluated).\n+         --  Register the expression for its validation after the back end has\n+         --  been called if it has occurrences of attributes Size or Alignment\n+         --  (because they may be statically computed by the back end and hence\n+         --  the whole expression needs to be reevaluated).\n \n          else\n             Check_Expression (Arg1x);"}, {"sha": "75e0846526caa578638f2b9376a707da12aab549", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aa52287572b287e94f52fc8b22c9e01d56458e/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=60aa52287572b287e94f52fc8b22c9e01d56458e", "patch": "@@ -2008,7 +2008,7 @@ package Sinfo is\n    --  Parent_Spec (Node4-Sem)\n    --    For a library unit that is a child unit spec (package or subprogram\n    --    declaration, generic declaration or instantiation, or library level\n-   --    rename, this field points to the compilation unit node for the parent\n+   --    rename) this field points to the compilation unit node for the parent\n    --    package specification. This field is Empty for library bodies (the\n    --    parent spec in this case can be found from the corresponding spec).\n "}]}