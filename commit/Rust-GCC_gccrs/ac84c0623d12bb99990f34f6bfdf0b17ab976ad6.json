{"sha": "ac84c0623d12bb99990f34f6bfdf0b17ab976ad6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM4NGMwNjIzZDEyYmI5OTk5MGYzNGY2YmZkZjBiMTdhYjk3NmFkNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-02-15T17:42:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-02-15T17:42:25Z"}, "message": "re PR middle-end/35196 (lastprivate broken for static non-ordered loops)\n\n\tPR middle-end/35196\n\t* omp-low.c (expand_omp_for_generic): Don't initialize fd->v\n\tin entry_bb.\n\t(expand_omp_for_static_nochunk): Initialize fd->v in seq_start_bb\n\trather than in entry_bb.\n\n\t* testsuite/libgomp.c/pr35196.c: New test.\n\nFrom-SVN: r132351", "tree": {"sha": "00838c45dda5e882688c9dd4d4b72503f4c309c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00838c45dda5e882688c9dd4d4b72503f4c309c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a9e85714c092d145293dbb71a748a8ab7b19961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9e85714c092d145293dbb71a748a8ab7b19961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9e85714c092d145293dbb71a748a8ab7b19961"}], "stats": {"total": 90, "additions": 64, "deletions": 26}, "files": [{"sha": "42197ab03d50ff0fafb3061e7019692e6d45934a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac84c0623d12bb99990f34f6bfdf0b17ab976ad6", "patch": "@@ -1,3 +1,11 @@\n+2008-02-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/35196\n+\t* omp-low.c (expand_omp_for_generic): Don't initialize fd->v\n+\tin entry_bb.\n+\t(expand_omp_for_static_nochunk): Initialize fd->v in seq_start_bb\n+\trather than in entry_bb.\n+\n 2008-02-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sfp-machine.h (CMPtype): Define as typedef using"}, {"sha": "2e1a1b8aa8df46199af8a93a3e0f2cfa9d57b5bd", "filename": "gcc/omp-low.c", "status": "modified", "additions": 10, "deletions": 26, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=ac84c0623d12bb99990f34f6bfdf0b17ab976ad6", "patch": "@@ -2782,22 +2782,6 @@ expand_omp_for_generic (struct omp_region *region,\n   t = build3 (COND_EXPR, void_type_node, t, NULL_TREE, NULL_TREE);\n   bsi_insert_after (&si, t, BSI_SAME_STMT);\n \n-  /* V may be used outside of the loop (e.g., to handle lastprivate clause).\n-     If this is the case, its value is undefined if the loop is not entered\n-     at all.  To handle this case, set its initial value to N1.  */\n-  if (gimple_in_ssa_p (cfun))\n-    {\n-      e = find_edge (entry_bb, l3_bb);\n-      for (phi = phi_nodes (l3_bb); phi; phi = PHI_CHAIN (phi))\n-\tif (PHI_ARG_DEF_FROM_EDGE (phi, e) == fd->v)\n-\t  SET_USE (PHI_ARG_DEF_PTR_FROM_EDGE (phi, e), fd->n1);\n-    }\n-  else\n-    {\n-      t = build_gimple_modify_stmt (fd->v, fd->n1);\n-      bsi_insert_before (&si, t, BSI_SAME_STMT);\n-    }\n-\n   /* Remove the OMP_FOR statement.  */\n   bsi_remove (&si, true);\n \n@@ -2995,16 +2979,6 @@ expand_omp_for_static_nochunk (struct omp_region *region,\n   t = fold_build2 (MIN_EXPR, type, t, n);\n   e0 = force_gimple_operand_bsi (&si, t, true, NULL_TREE, true, BSI_SAME_STMT);\n \n-  t = fold_convert (type, s0);\n-  t = fold_build2 (MULT_EXPR, type, t, fd->step);\n-  t = fold_build2 (PLUS_EXPR, type, t, fd->n1);\n-  t = force_gimple_operand_bsi (&si, t, false, NULL_TREE,\n-\t\t\t\ttrue, BSI_SAME_STMT);\n-  t = build_gimple_modify_stmt (fd->v, t);\n-  bsi_insert_before (&si, t, BSI_SAME_STMT);\n-  if (gimple_in_ssa_p (cfun))\n-    SSA_NAME_DEF_STMT (fd->v) = t;\n-\n   t = build2 (GE_EXPR, boolean_type_node, s0, e0);\n   t = build3 (COND_EXPR, void_type_node, t, NULL_TREE, NULL_TREE);\n   bsi_insert_before (&si, t, BSI_SAME_STMT);\n@@ -3015,6 +2989,16 @@ expand_omp_for_static_nochunk (struct omp_region *region,\n   /* Setup code for sequential iteration goes in SEQ_START_BB.  */\n   si = bsi_start (seq_start_bb);\n \n+  t = fold_convert (type, s0);\n+  t = fold_build2 (MULT_EXPR, type, t, fd->step);\n+  t = fold_build2 (PLUS_EXPR, type, t, fd->n1);\n+  t = force_gimple_operand_bsi (&si, t, false, NULL_TREE,\n+\t\t\t\tfalse, BSI_CONTINUE_LINKING);\n+  t = build_gimple_modify_stmt (fd->v, t);\n+  bsi_insert_after (&si, t, BSI_CONTINUE_LINKING);\n+  if (gimple_in_ssa_p (cfun))\n+    SSA_NAME_DEF_STMT (fd->v) = t;\n+\n   t = fold_convert (type, e0);\n   t = fold_build2 (MULT_EXPR, type, t, fd->step);\n   t = fold_build2 (PLUS_EXPR, type, t, fd->n1);"}, {"sha": "44286ca469fd1059fe106019a8ced517867fa6d5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ac84c0623d12bb99990f34f6bfdf0b17ab976ad6", "patch": "@@ -1,5 +1,8 @@\n 2008-02-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/35196\n+\t* testsuite/libgomp.c/pr35196.c: New test.\n+\n \tPR middle-end/35130\n \t* testsuite/libgomp.fortran/pr35130.f90: New test.\n \t* testsuite/libgomp.c/pr35130.c: New test."}, {"sha": "e92d9762931f4e52523ac88afd4af408a3092d97", "filename": "libgomp/testsuite/libgomp.c/pr35196.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr35196.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac84c0623d12bb99990f34f6bfdf0b17ab976ad6/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr35196.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr35196.c?ref=ac84c0623d12bb99990f34f6bfdf0b17ab976ad6", "patch": "@@ -0,0 +1,43 @@\n+/* PR middle-end/35196 */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+extern void omp_set_dynamic (int);\n+\n+int\n+main (void)\n+{\n+  int i, j;\n+  omp_set_dynamic (0);\n+#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (static)\n+  for (i = 0; i < 5; i++)\n+    j = i;\n+  if (i != 5 || j != 4)\n+    abort ();\n+#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (static, 2)\n+  for (i = 0; i < 5; i++)\n+    j = i;\n+  if (i != 5 || j != 4)\n+    abort ();\n+#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (dynamic)\n+  for (i = 0; i < 5; i++)\n+    j = i;\n+  if (i != 5 || j != 4)\n+    abort ();\n+#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (static)\n+  for (i = -12; i < 21; i += 3)\n+    j = i;\n+  if (i != 21 || j != 18)\n+    abort ();\n+#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (static, 2)\n+  for (i = -12; i < 21; i += 3)\n+    j = i;\n+  if (i != 21 || j != 18)\n+    abort ();\n+#pragma omp parallel for lastprivate (i, j) num_threads (8) schedule (dynamic, 3)\n+  for (i = -12; i < 21; i += 3)\n+    j = i;\n+  if (i != 21 || j != 18)\n+    abort ();\n+  return 0;\n+}"}]}