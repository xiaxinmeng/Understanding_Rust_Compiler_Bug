{"sha": "783cdf659a4dd424fd224fb2aaeb7cad2e5e4bcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzY2RmNjU5YTRkZDQyNGZkMjI0ZmIyYWFlYjdjYWQyZTVlNGJjZg==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-09-06T10:36:53Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-09-06T10:36:53Z"}, "message": "(cmpstrsi): Rewrite expander to handle operands correctly.\n\nFrom-SVN: r2060", "tree": {"sha": "5d37e93860b34cf167d6abb333b9c3bc521a7d10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d37e93860b34cf167d6abb333b9c3bc521a7d10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/783cdf659a4dd424fd224fb2aaeb7cad2e5e4bcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783cdf659a4dd424fd224fb2aaeb7cad2e5e4bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783cdf659a4dd424fd224fb2aaeb7cad2e5e4bcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783cdf659a4dd424fd224fb2aaeb7cad2e5e4bcf/comments", "author": null, "committer": null, "parents": [{"sha": "8888fada8439249f9b4d181ed2f1f000f7739f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8888fada8439249f9b4d181ed2f1f000f7739f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8888fada8439249f9b4d181ed2f1f000f7739f38"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "3edce9fa1784f986f5a80e7aee91741dc02d83b0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783cdf659a4dd424fd224fb2aaeb7cad2e5e4bcf/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783cdf659a4dd424fd224fb2aaeb7cad2e5e4bcf/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=783cdf659a4dd424fd224fb2aaeb7cad2e5e4bcf", "patch": "@@ -3938,20 +3938,28 @@\n \n (define_expand \"cmpstrsi\"\n   [(parallel [(set (match_operand:QI 0 \"general_operand\" \"\")\n-\t\t   (compare:CC\n-\t\t    (mem:BLK (match_operand:BLK 1 \"address_operand\" \"\"))\n-\t\t    (mem:BLK (match_operand:BLK 2 \"address_operand\" \"\"))))\n+\t\t   (compare:CC (match_operand:BLK 1 \"general_operand\" \"\")\n+\t\t\t       (match_operand:BLK 2 \"general_operand\" \"\")))\n \t      (use (match_operand:SI 3 \"general_operand\" \"\"))\n \t      (use (match_operand:SI 4 \"immediate_operand\" \"\"))\n-\t      (clobber (match_dup 1))\n-\t      (clobber (match_dup 2))\n+\t      (clobber (match_dup 5))\n+\t      (clobber (match_dup 6))\n \t      (clobber (match_dup 3))])]\n   \"\"\n   \"\n {\n-  operands[1] = copy_to_mode_reg (SImode, XEXP (operands[1], 0));\n-  operands[2] = copy_to_mode_reg (SImode, XEXP (operands[2], 0));\n+  rtx addr1, addr2;\n+\n+  addr1 = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));\n+  addr2 = copy_to_mode_reg (Pmode, XEXP (operands[2], 0));\n   operands[3] = copy_to_mode_reg (SImode, operands[3]);\n+\n+  operands[5] = addr1;\n+  operands[6] = addr2;\n+\n+  operands[1] = gen_rtx (MEM, BLKmode, addr1);\n+  operands[2] = gen_rtx (MEM, BLKmode, addr2);\n+\n }\")\n \n ;; memcmp recognizers.  The `cmpsb' opcode does nothing if the count is"}]}