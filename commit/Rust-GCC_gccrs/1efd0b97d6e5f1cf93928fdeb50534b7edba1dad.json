{"sha": "1efd0b97d6e5f1cf93928fdeb50534b7edba1dad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVmZDBiOTdkNmU1ZjFjZjkzOTI4ZmRlYjUwNTM0YjdlZGJhMWRhZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-02-04T21:48:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-02-04T21:48:42Z"}, "message": "longlong.h [alpha] (count_leading_zeros, [...]): Use builtins instead of inline assembly.\n\n        * longlong.h [alpha] (count_leading_zeros, count_trailing_zeros): Use\n        builtins instead of inline assembly.\n\nFrom-SVN: r62407", "tree": {"sha": "82d974da89258a6e8422fad2a9e295cfaebbc0af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82d974da89258a6e8422fad2a9e295cfaebbc0af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1efd0b97d6e5f1cf93928fdeb50534b7edba1dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1efd0b97d6e5f1cf93928fdeb50534b7edba1dad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1efd0b97d6e5f1cf93928fdeb50534b7edba1dad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1efd0b97d6e5f1cf93928fdeb50534b7edba1dad/comments", "author": null, "committer": null, "parents": [{"sha": "087fc75a008c6ba18d728cb395f2e28be2f994c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/087fc75a008c6ba18d728cb395f2e28be2f994c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/087fc75a008c6ba18d728cb395f2e28be2f994c0"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "411627d7a706bac086194f092d25332344a52f00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1efd0b97d6e5f1cf93928fdeb50534b7edba1dad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1efd0b97d6e5f1cf93928fdeb50534b7edba1dad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1efd0b97d6e5f1cf93928fdeb50534b7edba1dad", "patch": "@@ -1,3 +1,8 @@\n+2003-02-04  Richard Henderson  <rth@redhat.com>\n+\n+\t* longlong.h [alpha] (count_leading_zeros, count_trailing_zeros): Use\n+\tbuiltins instead of inline assembly.\n+\n 2003-02-04  Falk Hueffner  <falk.hueffner@student.uni-tuebingen.de>\n  \n \tPR c/9376"}, {"sha": "ecca2deef2da966f4b46c9fce3ad307e811878e0", "filename": "gcc/longlong.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1efd0b97d6e5f1cf93928fdeb50534b7edba1dad/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1efd0b97d6e5f1cf93928fdeb50534b7edba1dad/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=1efd0b97d6e5f1cf93928fdeb50534b7edba1dad", "patch": "@@ -128,30 +128,28 @@ extern UDItype __udiv_qrnnd (UDItype *, UDItype, UDItype, UDItype);\n #define UDIV_TIME 220\n #endif /* LONGLONG_STANDALONE */\n #ifdef __alpha_cix__\n-#define count_leading_zeros(COUNT,X) \\\n-  __asm__(\"ctlz %1,%0\" : \"=r\"(COUNT) : \"r\"(X))\n-#define count_trailing_zeros(COUNT,X) \\\n-  __asm__(\"cttz %1,%0\" : \"=r\"(COUNT) : \"r\"(X))\n+#define count_leading_zeros(COUNT,X)\t((COUNT) = __builtin_clzl (X))\n+#define count_trailing_zeros(COUNT,X)\t((COUNT) = __builtin_ctzl (X))\n #define COUNT_LEADING_ZEROS_0 64\n #else\n extern const UQItype __clz_tab[] ATTRIBUTE_HIDDEN;\n #define count_leading_zeros(COUNT,X) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     UDItype __xr = (X), __t, __a;\t\t\t\t\t\\\n-    __asm__(\"cmpbge $31,%1,%0\" : \"=r\"(__t) : \"r\"(__xr));\t\t\\\n+    __t = __builtin_alpha_cmpbge (0, __xr);\t\t\t\t\\\n     __a = __clz_tab[__t ^ 0xff] - 1;\t\t\t\t\t\\\n-    __asm__(\"extbl %1,%2,%0\" : \"=r\"(__t) : \"r\"(__xr), \"r\"(__a));\t\\\n+    __t = __builtin_alpha_extbl (__xr, __a);\t\t\t\t\\\n     (COUNT) = 64 - (__clz_tab[__t] + __a*8);\t\t\t\t\\\n   } while (0)\n #define count_trailing_zeros(COUNT,X) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     UDItype __xr = (X), __t, __a;\t\t\t\t\t\\\n-    __asm__(\"cmpbge $31,%1,%0\" : \"=r\"(__t) : \"r\"(__xr));\t\t\\\n+    __t = __builtin_alpha_cmpbge (0, __xr);\t\t\t\t\\\n     __t = ~__t & -~__t;\t\t\t\t\t\t\t\\\n     __a = ((__t & 0xCC) != 0) * 2;\t\t\t\t\t\\\n     __a += ((__t & 0xF0) != 0) * 4;\t\t\t\t\t\\\n     __a += ((__t & 0xAA) != 0);\t\t\t\t\t\t\\\n-    __asm__(\"extbl %1,%2,%0\" : \"=r\"(__t) : \"r\"(__xr), \"r\"(__a));\t\\\n+    __t = __builtin_alpha_extbl (__xr, __a);\t\t\t\t\\\n     __a <<= 3;\t\t\t\t\t\t\t\t\\\n     __t &= -__t;\t\t\t\t\t\t\t\\\n     __a += ((__t & 0xCC) != 0) * 2;\t\t\t\t\t\\"}]}