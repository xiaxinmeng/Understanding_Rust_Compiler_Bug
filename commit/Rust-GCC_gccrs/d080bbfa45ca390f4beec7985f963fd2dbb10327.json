{"sha": "d080bbfa45ca390f4beec7985f963fd2dbb10327", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA4MGJiZmE0NWNhMzkwZjRiZWVjNzk4NWY5NjNmZDJkYmIxMDMyNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-08-02T05:54:50Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-08-02T05:54:50Z"}, "message": "* splay-tree.h (splay_tree_insert): Return the new node.\n\nFrom-SVN: r28389", "tree": {"sha": "86608681013a7566167676ce261bb64da3651063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86608681013a7566167676ce261bb64da3651063"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d080bbfa45ca390f4beec7985f963fd2dbb10327", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d080bbfa45ca390f4beec7985f963fd2dbb10327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d080bbfa45ca390f4beec7985f963fd2dbb10327", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d080bbfa45ca390f4beec7985f963fd2dbb10327/comments", "author": null, "committer": null, "parents": [{"sha": "eec9ef57bf59ea4e488f663e8007d11e6c599f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eec9ef57bf59ea4e488f663e8007d11e6c599f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eec9ef57bf59ea4e488f663e8007d11e6c599f21"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "5d213d52993cdd1844bf2e5a12e675fea5a059ec", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d080bbfa45ca390f4beec7985f963fd2dbb10327/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d080bbfa45ca390f4beec7985f963fd2dbb10327/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=d080bbfa45ca390f4beec7985f963fd2dbb10327", "patch": "@@ -1,3 +1,7 @@\n+1999-08-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* splay-tree.h (splay_tree_insert): Return the new node.\n+\n 1999-07-11  Ian Lance Taylor  <ian@zembu.com>\n \n \t* ansidecl.h: Copy attribute support macros from egcs."}, {"sha": "307cf054e128ba438b27dbbefd97803546b2c23e", "filename": "include/splay-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d080bbfa45ca390f4beec7985f963fd2dbb10327/include%2Fsplay-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d080bbfa45ca390f4beec7985f963fd2dbb10327/include%2Fsplay-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fsplay-tree.h?ref=d080bbfa45ca390f4beec7985f963fd2dbb10327", "patch": "@@ -95,7 +95,8 @@ extern splay_tree splay_tree_new        PARAMS((splay_tree_compare_fn,\n \t\t\t\t\t        splay_tree_delete_key_fn,\n \t\t\t\t\t        splay_tree_delete_value_fn));\n extern void splay_tree_delete           PARAMS((splay_tree));\n-extern void splay_tree_insert           PARAMS((splay_tree,\n+extern splay_tree_node splay_tree_insert          \n+\t\t                        PARAMS((splay_tree,\n \t\t\t\t\t        splay_tree_key,\n \t\t\t\t\t        splay_tree_value));\n extern splay_tree_node splay_tree_lookup   "}, {"sha": "4ad72e5d1cab5fc78d23fa14769fe073bb59cca3", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d080bbfa45ca390f4beec7985f963fd2dbb10327/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d080bbfa45ca390f4beec7985f963fd2dbb10327/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=d080bbfa45ca390f4beec7985f963fd2dbb10327", "patch": "@@ -1,3 +1,7 @@\n+1999-08-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* splay-tree.c (splay_tree_insert): Return the new node.\n+\n 1999-07-14  Richard Henderson  <rth@cygnus.com>\n \n \t* argv.c: Include stdlib.h and string.h instead of "}, {"sha": "a17d0a1176a5f41ad1f47ca4ce0b38143da5d845", "filename": "libiberty/splay-tree.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d080bbfa45ca390f4beec7985f963fd2dbb10327/libiberty%2Fsplay-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d080bbfa45ca390f4beec7985f963fd2dbb10327/libiberty%2Fsplay-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsplay-tree.c?ref=d080bbfa45ca390f4beec7985f963fd2dbb10327", "patch": "@@ -256,9 +256,9 @@ splay_tree_delete (sp)\n \n /* Insert a new node (associating KEY with DATA) into SP.  If a\n    previous node with the indicated KEY exists, its data is replaced\n-   with the new value.  */\n+   with the new value.  Returns the new node.  */\n \n-void \n+splay_tree_node\n splay_tree_insert (sp, key, value)\n      splay_tree sp;\n      splay_tree_key key;\n@@ -305,6 +305,8 @@ splay_tree_insert (sp, key, value)\n \n     sp->root = node;\n   }\n+\n+  return sp->root;\n }\n \n /* Lookup KEY in SP, returning VALUE if present, and NULL "}]}