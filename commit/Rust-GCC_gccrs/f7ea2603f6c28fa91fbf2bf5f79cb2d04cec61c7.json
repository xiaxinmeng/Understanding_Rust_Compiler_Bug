{"sha": "f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdlYTI2MDNmNmMyOGZhOTFmYmYyYmY1Zjc5Y2IyZDA0Y2VjNjFjNw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-10-14T12:46:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T12:46:56Z"}, "message": "exp_attr.adb (Expand_N_Attribute_Reference): Add error entry for Library_Level attribute (which should not survive to expansion)\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Add error\n\tentry for Library_Level attribute (which should not survive\n\tto expansion)\n\t* gnat_rm.texi: Document attribute Library_Level\n\t* sem_attr.adb (Analyze_Attribute, case Library_Level): Implement\n\tthis new attribute (Set_Boolean_Result): Replaces Set_Result\n\t(Check_Standard_Prefix): Document that Check_E0 is called\n\t(Check_System_Prefix): New procedure\n\t* snames.ads-tmpl: Add entry for Library_Level attribute\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch6.adb, sinfo.ads: Minor reformatting.\n\t* checks.adb (Overlap_Check): Use identifier casing in messages.\n\nFrom-SVN: r203528", "tree": {"sha": "521cc5a951ec20a69d31327e26acb2a6ff597154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/521cc5a951ec20a69d31327e26acb2a6ff597154"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/comments", "author": null, "committer": null, "parents": [{"sha": "688a9b51c97414c7957825865a8ebc7458c15ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688a9b51c97414c7957825865a8ebc7458c15ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688a9b51c97414c7957825865a8ebc7458c15ebd"}], "stats": {"total": 198, "additions": 138, "deletions": 60}, "files": [{"sha": "6c33943548623d52b4e86306871c566da1f28ac6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "patch": "@@ -1,3 +1,20 @@\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Add error\n+\tentry for Library_Level attribute (which should not survive\n+\tto expansion)\n+\t* gnat_rm.texi: Document attribute Library_Level\n+\t* sem_attr.adb (Analyze_Attribute, case Library_Level): Implement\n+\tthis new attribute (Set_Boolean_Result): Replaces Set_Result\n+\t(Check_Standard_Prefix): Document that Check_E0 is called\n+\t(Check_System_Prefix): New procedure\n+\t* snames.ads-tmpl: Add entry for Library_Level attribute\n+\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch6.adb, sinfo.ads: Minor reformatting.\n+\t* checks.adb (Overlap_Check): Use identifier casing in messages.\n+\n 2013-10-14  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.ads, einfo.adb (Default_Aspect_Component_Value): Is on base type"}, {"sha": "f968e20200b874510cddfb529cfd8ec730434f60", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Casing;   use Casing;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Errout;   use Errout;\n@@ -2189,7 +2190,9 @@ package body Checks is\n          Formal_2 : Entity_Id;\n          Check    : in out Node_Id)\n       is\n-         Cond : Node_Id;\n+         Cond      : Node_Id;\n+         ID_Casing : constant Casing_Type :=\n+                       Identifier_Casing (Source_Index (Current_Sem_Unit));\n \n       begin\n          --  Generate:\n@@ -2220,9 +2223,17 @@ package body Checks is\n             end if;\n \n             Store_String_Chars (\"aliased parameters, actuals for \"\"\");\n-            Store_String_Chars (Get_Name_String (Chars (Formal_1)));\n+\n+            Get_Name_String (Chars (Formal_1));\n+            Set_Casing (ID_Casing);\n+            Store_String_Chars (Name_Buffer (1 .. Name_Len));\n+\n             Store_String_Chars (\"\"\" and \"\"\");\n-            Store_String_Chars (Get_Name_String (Chars (Formal_2)));\n+\n+            Get_Name_String (Chars (Formal_2));\n+            Set_Casing (ID_Casing);\n+            Store_String_Chars (Name_Buffer (1 .. Name_Len));\n+\n             Store_String_Chars (\"\"\" overlap\");\n \n             Insert_Action (Call,"}, {"sha": "1a6ad5721462d888e642feb134b058a8621e71f8", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "patch": "@@ -6485,6 +6485,7 @@ package body Exp_Attr is\n            Attribute_Has_Tagged_Values            |\n            Attribute_Large                        |\n            Attribute_Last_Valid                   |\n+           Attribute_Library_Level                |\n            Attribute_Lock_Free                    |\n            Attribute_Machine_Emax                 |\n            Attribute_Machine_Emin                 |"}, {"sha": "d1c4641e12d73e4944b96d9bdd307d3e16638a43", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "patch": "@@ -8084,8 +8084,9 @@ package body Exp_Ch6 is\n       --  AI05-0073: If function has a controlling access result, check that\n       --  the tag of the return value, if it is not null, matches designated\n       --  type of return type.\n-      --  The return expression is referenced twice in the code below, so\n-      --  it must be made free of side effects. Given that different compilers\n+\n+      --  The return expression is referenced twice in the code below, so it\n+      --  must be made free of side effects. Given that different compilers\n       --  may evaluate these parameters in different order, both occurrences\n       --  perform a copy.\n "}, {"sha": "cc3f2480ac5a5ed172188b575f46ad175c08b860", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "patch": "@@ -337,6 +337,7 @@ Implementation Defined Attributes\n * Attribute Integer_Value::\n * Attribute Invalid_Value::\n * Attribute Large::\n+* Attribute Library_Level::\n * Attribute Loop_Entry::\n * Attribute Machine_Size::\n * Attribute Mantissa::\n@@ -7842,6 +7843,7 @@ consideration, you should minimize the use of these attributes.\n * Attribute Integer_Value::\n * Attribute Invalid_Value::\n * Attribute Large::\n+* Attribute Library_Level::\n * Attribute Loop_Entry::\n * Attribute Machine_Size::\n * Attribute Mantissa::\n@@ -8341,6 +8343,31 @@ The @code{Large} attribute is provided for compatibility with Ada 83.  See\n the Ada 83 reference manual for an exact description of the semantics of\n this attribute.\n \n+@node Attribute Library_Level\n+@unnumberedsec Attribute Library_Level\n+@findex Library_Level\n+@noindent\n+@noindent\n+@code{Standard'Library_Level} (@code{Standard} is the only allowed\n+prefix) returns a Boolean value which is True if the attribute is\n+evaluated at the library level (e.g. with a package declaration),\n+and false if evaluated elsewhere (e.g. within a subprogram body).\n+In the case of generics, the value indicates the placement of\n+the instantiation, not the template, and indeed the use of this\n+attribute within a generic is the intended common application\n+as shown in this example:\n+\n+@smallexample @c ada\n+generic\n+  ...\n+package Gen is\n+  pragma Compile_Time_Error\n+    (not Standard'Library_Level,\n+     \"Gen can only be instantiated at library level\");\n+  ...\n+end Gen;\n+@end smallexample\n+\n @node Attribute Loop_Entry\n @unnumberedsec Attribute Loop_Entry\n @findex Loop_Entry"}, {"sha": "f235921068bf601c8111656601fddb7255ba740e", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 69, "deletions": 45, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "patch": "@@ -189,6 +189,11 @@ package body Sem_Attr is\n    --  where therefore the prefix of the attribute does not match the enclosing\n    --  scope.\n \n+   procedure Set_Boolean_Result (N : Node_Id; B : Boolean);\n+   --  Rewrites node N with an occurrence of either Standard_False or\n+   --  Standard_True, depending on the value of the parameter B. The\n+   --  result is marked as a static expression.\n+\n    -----------------------\n    -- Analyze_Attribute --\n    -----------------------\n@@ -339,13 +344,17 @@ package body Sem_Attr is\n       --  Verify that prefix of attribute N is a scalar type\n \n       procedure Check_Standard_Prefix;\n-      --  Verify that prefix of attribute N is package Standard\n+      --  Verify that prefix of attribute N is package Standard. Also checks\n+      --  that there are no arguments.\n \n       procedure Check_Stream_Attribute (Nam : TSS_Name_Type);\n       --  Validity checking for stream attribute. Nam is the TSS name of the\n       --  corresponding possible defined attribute function (e.g. for the\n       --  Read attribute, Nam will be TSS_Stream_Read).\n \n+      procedure Check_System_Prefix;\n+      --  Verify that prefix of attribute N is package System\n+\n       procedure Check_PolyORB_Attribute;\n       --  Validity checking for PolyORB/DSA attribute\n \n@@ -1972,6 +1981,17 @@ package body Sem_Attr is\n          Check_Not_CPP_Type;\n       end Check_Stream_Attribute;\n \n+      -------------------------\n+      -- Check_System_Prefix --\n+      -------------------------\n+\n+      procedure Check_System_Prefix is\n+      begin\n+         if Nkind (P) /= N_Identifier or else Chars (P) /= Name_System then\n+            Error_Attr (\"only allowed prefix for % attribute is System\", P);\n+         end if;\n+      end Check_System_Prefix;\n+\n       -----------------------\n       -- Check_Task_Prefix --\n       -----------------------\n@@ -3663,6 +3683,21 @@ package body Sem_Attr is\n          Check_Array_Type;\n          Set_Etype (N, Universal_Integer);\n \n+      -------------------\n+      -- Library_Level --\n+      -------------------\n+\n+      when Attribute_Library_Level =>\n+         Check_E0;\n+         Check_Standard_Prefix;\n+\n+         if not Inside_A_Generic then\n+            Set_Boolean_Result (N,\n+              Nearest_Dynamic_Scope (Current_Scope) = Standard_Standard);\n+         end if;\n+\n+         Set_Etype (N, Standard_Boolean);\n+\n       ---------------\n       -- Lock_Free --\n       ---------------\n@@ -4965,35 +5000,10 @@ package body Sem_Attr is\n          U    : Node_Id;\n          Unam : Unit_Name_Type;\n \n-         procedure Set_Result (B : Boolean);\n-         --  Replace restriction node by static constant False or True,\n-         --  depending on the value of B.\n-\n-         ----------------\n-         -- Set_Result --\n-         ----------------\n-\n-         procedure Set_Result (B : Boolean) is\n-         begin\n-            if B then\n-               Rewrite (N, New_Occurrence_Of (Standard_True, Loc));\n-            else\n-               Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n-            end if;\n-\n-            Set_Is_Static_Expression (N);\n-         end Set_Result;\n-\n-      --  Start of processing for Restriction_Set\n-\n       begin\n          Check_E1;\n          Analyze (P);\n-\n-         if Nkind (P) /= N_Identifier or else Chars (P) /= Name_System then\n-            Set_Result (False);\n-            Error_Attr_P (\"prefix of % attribute must be System\");\n-         end if;\n+         Check_System_Prefix;\n \n          --  No_Dependence case\n \n@@ -5002,7 +5012,7 @@ package body Sem_Attr is\n             U := Explicit_Actual_Parameter (E1);\n \n             if not OK_No_Dependence_Unit_Name (U) then\n-               Set_Result (False);\n+               Set_Boolean_Result (N, False);\n                Error_Attr;\n             end if;\n \n@@ -5013,14 +5023,14 @@ package body Sem_Attr is\n                if Designate_Same_Unit (U, No_Dependences.Table (J).Unit)\n                  and then No_Dependences.Table (J).Warn = False\n                then\n-                  Set_Result (True);\n+                  Set_Boolean_Result (N, True);\n                   return;\n                end if;\n             end loop;\n \n             --  If not in the No_Dependence table, result is False\n \n-            Set_Result (False);\n+            Set_Boolean_Result (N, False);\n \n             --  In this case, we must ensure that the binder will reject any\n             --  other unit in the partition that sets No_Dependence for this\n@@ -5043,29 +5053,29 @@ package body Sem_Attr is\n \n          else\n             if Nkind (E1) /= N_Identifier then\n-               Set_Result (False);\n+               Set_Boolean_Result (N, False);\n                Error_Attr (\"attribute % requires restriction identifier\", E1);\n \n             else\n                R := Get_Restriction_Id (Process_Restriction_Synonyms (E1));\n \n                if R = Not_A_Restriction_Id then\n-                  Set_Result (False);\n+                  Set_Boolean_Result (N, False);\n                   Error_Msg_Node_1 := E1;\n                   Error_Attr (\"invalid restriction identifier &\", E1);\n \n                elsif R not in Partition_Boolean_Restrictions then\n-                  Set_Result (False);\n+                  Set_Boolean_Result (N, False);\n                   Error_Msg_Node_1 := E1;\n                   Error_Attr\n                     (\"& is not a boolean partition-wide restriction\", E1);\n                end if;\n \n                if Restriction_Active (R) then\n-                  Set_Result (True);\n+                  Set_Boolean_Result (N, True);\n                else\n                   Check_Restriction (R, N);\n-                  Set_Result (False);\n+                  Set_Boolean_Result (N, False);\n                end if;\n             end if;\n          end if;\n@@ -5596,10 +5606,7 @@ package body Sem_Attr is\n       begin\n          Check_E1;\n          Analyze (P);\n-\n-         if Nkind (P) /= N_Identifier or else Chars (P) /= Name_System then\n-            Error_Attr_P (\"prefix of % attribute must be System\");\n-         end if;\n+         Check_System_Prefix;\n \n          Generate_Reference (RTE (RE_Address), P);\n          Analyze_And_Resolve (E1, Any_Integer);\n@@ -6809,8 +6816,8 @@ package body Sem_Attr is\n             return;\n          end if;\n \n-      --  Cases where P is not an object. Cannot do anything if P is\n-      --  not the name of an entity.\n+      --  Cases where P is not an object. Cannot do anything if P is not the\n+      --  name of an entity.\n \n       elsif not Is_Entity_Name (P) then\n          Check_Expressions;\n@@ -6908,10 +6915,9 @@ package body Sem_Attr is\n \n       --  We can fold 'Alignment applied to a type if the alignment is known\n       --  (as happens for an alignment from an attribute definition clause).\n-      --  At this stage, this can happen only for types (e.g. record\n-      --  types) for which the size is always non-static. We exclude\n-      --  generic types from consideration (since they have bogus\n-      --  sizes set within templates).\n+      --  At this stage, this can happen only for types (e.g. record types) for\n+      --  which the size is always non-static. We exclude generic types from\n+      --  consideration (since they have bogus sizes set within templates).\n \n       elsif Id = Attribute_Alignment\n         and then Is_Type (P_Entity)\n@@ -9118,6 +9124,7 @@ package body Sem_Attr is\n            Attribute_First_Bit                  |\n            Attribute_Input                      |\n            Attribute_Last_Bit                   |\n+           Attribute_Library_Level              |\n            Attribute_Maximum_Alignment          |\n            Attribute_Old                        |\n            Attribute_Output                     |\n@@ -10421,6 +10428,23 @@ package body Sem_Attr is\n       Eval_Attribute (N);\n    end Resolve_Attribute;\n \n+   ------------------------\n+   -- Set_Boolean_Result --\n+   ------------------------\n+\n+   procedure Set_Boolean_Result (N : Node_Id; B : Boolean) is\n+      Loc : constant Source_Ptr := Sloc (N);\n+\n+   begin\n+      if B then\n+         Rewrite (N, New_Occurrence_Of (Standard_True, Loc));\n+      else\n+         Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n+      end if;\n+\n+      Set_Is_Static_Expression (N);\n+   end Set_Boolean_Result;\n+\n    --------------------------------\n    -- Stream_Attribute_Available --\n    --------------------------------"}, {"sha": "ebe51f29d66c2a39f03cc2eef3cfba72c8b02fb8", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "patch": "@@ -7646,7 +7646,7 @@ package Sinfo is\n       --  N_Subprogram_Info\n       --  Sloc points to the entity for the procedure\n       --  Identifier (Node1) identifier referencing the procedure\n-      --  Etype (Node5-Sem) type (always set to Ada.Exceptions.Code_Loc\n+      --  Etype (Node5-Sem) type (always set to Ada.Exceptions.Code_Loc)\n \n       --  Note: in the case where a debug source file is generated, the Sloc\n       --  for this node points to the quote in the Sprint file output."}, {"sha": "c5c4cdab7d293a1ac5e659a0b69c17ec9504293e", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=f7ea2603f6c28fa91fbf2bf5f79cb2d04cec61c7", "patch": "@@ -807,20 +807,15 @@ package Snames is\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n-   --  attributes are implemented in both Ada 83 and Ada 95 modes in GNAT.\n+   --  attributes are implemented in all Ada modes in GNAT.\n \n    --  The entries marked GNAT are attributes that are defined by GNAT and\n-   --  implemented in both Ada 83 and Ada 95 modes. Full descriptions of these\n-   --  implementation dependent attributes may be found in the appropriate\n-   --  section in Sem_Attr.\n+   --  implemented in all Ada modes. Full descriptions of these implementation\n+   --  dependent attributes may be found in the appropriate Sem_Attr section.\n \n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   --  The entries marked HiLite are attributes that are defined by Hi-Lite\n-   --  and implemented in GNAT operating under formal verification mode. The\n-   --  entries are treated as illegal in all other contexts.\n-\n    First_Attribute_Name                : constant Name_Id := N + $;\n    Name_Abort_Signal                   : constant Name_Id := N + $; -- GNAT\n    Name_Access                         : constant Name_Id := N + $;\n@@ -881,8 +876,9 @@ package Snames is\n    Name_Last_Valid                     : constant Name_Id := N + $; -- Ada 12\n    Name_Leading_Part                   : constant Name_Id := N + $;\n    Name_Length                         : constant Name_Id := N + $;\n+   Name_Library_Level                  : constant Name_Id := N + $; -- GNAT\n    Name_Lock_Free                      : constant Name_Id := N + $; -- GNAT\n-   Name_Loop_Entry                     : constant Name_Id := N + $; -- HiLite\n+   Name_Loop_Entry                     : constant Name_Id := N + $; -- GNAT\n    Name_Machine_Emax                   : constant Name_Id := N + $;\n    Name_Machine_Emin                   : constant Name_Id := N + $;\n    Name_Machine_Mantissa               : constant Name_Id := N + $;\n@@ -1498,6 +1494,7 @@ package Snames is\n       Attribute_Last_Valid,\n       Attribute_Leading_Part,\n       Attribute_Length,\n+      Attribute_Library_Level,\n       Attribute_Lock_Free,\n       Attribute_Loop_Entry,\n       Attribute_Machine_Emax,"}]}