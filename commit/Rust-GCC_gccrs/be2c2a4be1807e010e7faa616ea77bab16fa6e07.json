{"sha": "be2c2a4be1807e010e7faa616ea77bab16fa6e07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUyYzJhNGJlMTgwN2UwMTBlN2ZhYTYxNmVhNzdiYWIxNmZhNmUwNw==", "commit": {"author": {"name": "Hartmut Penner", "email": "hpenner@de.ibm.com", "date": "2003-01-10T15:17:15Z"}, "committer": {"name": "Hartmut Penner", "email": "hpenner@gcc.gnu.org", "date": "2003-01-10T15:17:15Z"}, "message": "invoke.texi: Document -mtune, delete -mcpu option for S/390 and zSeries.\n\n       * doc/invoke.texi: Document -mtune, delete -mcpu\n        option for S/390 and zSeries.\n        * config/s390/s390.c (s390_tune_string) New variable.\n        (s390_cpu_string) Delete variable.\n        (override_options): Use s390_tune_string instead of\n        s390_cpu_string.\n        * config/s390/s390.h: (TARGET_OPTIONS) '-mtune' instead of '-mcpu'.\n\nFrom-SVN: r61159", "tree": {"sha": "0a622063bad266c758ac7fbb2879fba586fc3783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a622063bad266c758ac7fbb2879fba586fc3783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be2c2a4be1807e010e7faa616ea77bab16fa6e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2c2a4be1807e010e7faa616ea77bab16fa6e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be2c2a4be1807e010e7faa616ea77bab16fa6e07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2c2a4be1807e010e7faa616ea77bab16fa6e07/comments", "author": null, "committer": null, "parents": [{"sha": "1f45013893222d0c35b365d4ee93e39bce2a5041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f45013893222d0c35b365d4ee93e39bce2a5041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f45013893222d0c35b365d4ee93e39bce2a5041"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "d4a19fef7cbab41f1003fbf2ccf70a8070547f17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2c2a4be1807e010e7faa616ea77bab16fa6e07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2c2a4be1807e010e7faa616ea77bab16fa6e07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be2c2a4be1807e010e7faa616ea77bab16fa6e07", "patch": "@@ -1,3 +1,13 @@\n+2003-01-10  Hartmut Penner  <hpenner@de.ibm.com>\n+\n+       \t* doc/invoke.texi: Document -mtune, delete -mcpu \n+\toption for S/390 and zSeries.\n+\t* config/s390/s390.c (s390_tune_string) New variable.\n+\t(s390_cpu_string) Delete variable.\n+\t(override_options): Use s390_tune_string instead of\n+\ts390_cpu_string.\n+\t* config/s390/s390.h: (TARGET_OPTIONS) '-mtune' instead of '-mcpu'.\n+\n 2003-01-10  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*iorsi3_ashift_31): New."}, {"sha": "25956ec62bcd145875dcb66e5f1088f0430bd99c", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2c2a4be1807e010e7faa616ea77bab16fa6e07/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2c2a4be1807e010e7faa616ea77bab16fa6e07/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=be2c2a4be1807e010e7faa616ea77bab16fa6e07", "patch": "@@ -117,13 +117,13 @@ struct s390_address\n   int pointer;\n };\n \n-/* Which cpu are we scheduling for.  */\n+/* Which cpu are we tuning for.  */\n enum processor_type s390_cpu;\n /* Which instruction set architecture to use.  */\n enum processor_type s390_arch;\n \n /* Strings to hold which cpu and instruction set architecture  to use.  */\n-const char *s390_cpu_string;\t\t/* for -mcpu=<xxx> */\n+const char *s390_tune_string;\t\t/* for -mtune=<xxx> */\n const char *s390_arch_string;\t\t/* for -march=<xxx> */\n \n /* Define the structure for the machine field in struct function.  */\n@@ -869,10 +869,10 @@ override_options ()\n   init_machine_status = s390_init_machine_status;\n  \n   /* Set cpu and arch, if only partially given.  */\n-  if (!s390_cpu_string && s390_arch_string)\n-    s390_cpu_string = s390_arch_string;\n-  if (!s390_cpu_string)\n-    s390_cpu_string = cpu_names [TARGET_64BIT ? TARGET_CPU_DEFAULT_2064\n+  if (!s390_tune_string && s390_arch_string)\n+    s390_tune_string = s390_arch_string;\n+  if (!s390_tune_string)\n+    s390_tune_string = cpu_names [TARGET_64BIT ? TARGET_CPU_DEFAULT_2064\n                                               :\tTARGET_CPU_DEFAULT_9672];\n   if (!s390_arch_string)\n #ifdef DEFAULT_TARGET_64BIT\n@@ -912,14 +912,14 @@ override_options ()\n     }\n \n   for (i = 0; i < pta_size; i++)\n-    if (! strcmp (s390_cpu_string, processor_alias_table[i].name))\n+    if (! strcmp (s390_tune_string, processor_alias_table[i].name))\n       {\n \ts390_cpu = processor_alias_table[i].processor;\n \tbreak;\n       }\n \n   if (i == pta_size)\n-    error (\"bad value (%s) for -mcpu= switch\", s390_cpu_string);\n+    error (\"bad value (%s) for -mtune= switch\", s390_tune_string);\n }\n \n /* Map for smallest class containing reg regno.  */"}, {"sha": "bf54f789f6a034d485fd8c6d92dce1afd155d5f3", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2c2a4be1807e010e7faa616ea77bab16fa6e07/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2c2a4be1807e010e7faa616ea77bab16fa6e07/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=be2c2a4be1807e010e7faa616ea77bab16fa6e07", "patch": "@@ -41,7 +41,7 @@ enum processor_type\n };\n \n extern enum processor_type s390_cpu;\n-extern const char *s390_cpu_string;\n+extern const char *s390_tune_string;\n \n extern enum processor_type s390_arch;\n extern const char *s390_arch_string;\n@@ -113,7 +113,7 @@ extern int target_flags;\n   { \"\", TARGET_DEFAULT, 0 } }\n \n #define TARGET_OPTIONS                                          \\\n-{ { \"cpu=\",             &s390_cpu_string,                       \\\n+{ { \"tune=\",            &s390_tune_string,                      \\\n     N_(\"Schedule code for given CPU\")},                         \\\n   { \"arch=\",            &s390_arch_string,                      \\\n     N_(\"Generate code for given CPU\")},                         \\"}]}