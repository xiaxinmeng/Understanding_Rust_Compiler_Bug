{"sha": "0696141107d61483f38482b941549959a0d7f613", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY5NjE0MTEwN2Q2MTQ4M2YzODQ4MmI5NDE1NDk5NTlhMGQ3ZjYxMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-12-30T16:41:21Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-12-30T16:42:15Z"}, "message": "i386: Remove unnecessary clobbers from combine splitters.\n\nThere is no need for combine splitters to emit insn patterns with clobbers,\nthe pass is smart enough to add clobbers to patterns  as necessary.\n\n2020-12-30  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\t* config/i386/i386.md: Remove unnecessary clobbers\n\tfrom combine splitters.", "tree": {"sha": "572712d239d5881276c63e9e680a37bc91b91cb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/572712d239d5881276c63e9e680a37bc91b91cb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0696141107d61483f38482b941549959a0d7f613", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0696141107d61483f38482b941549959a0d7f613", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0696141107d61483f38482b941549959a0d7f613", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0696141107d61483f38482b941549959a0d7f613/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "209da90b40fca1be964e25c48352712d519c4dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209da90b40fca1be964e25c48352712d519c4dc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209da90b40fca1be964e25c48352712d519c4dc2"}], "stats": {"total": 61, "additions": 24, "deletions": 37}, "files": [{"sha": "ea1a0706dcb9d758c0f2a596f0d642d9daf67faa", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 37, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0696141107d61483f38482b941549959a0d7f613/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0696141107d61483f38482b941549959a0d7f613/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=0696141107d61483f38482b941549959a0d7f613", "patch": "@@ -12693,12 +12693,10 @@\n \t  [(not:SWI (match_operand:SWI 2 \"register_operand\"))\n \t   (match_operand:SWI 3 \"nonimmediate_operand\")]))]\n   \"\"\n-  [(parallel\n-     [(set (reg:CCC FLAGS_REG)\n-\t   (compare:CCC\n-\t     (plus:SWI (match_dup 2) (match_dup 3))\n-\t     (match_dup 2)))\n-      (clobber (scratch:SWI))])\n+  [(set (reg:CCC FLAGS_REG)\n+\t(compare:CCC\n+\t  (plus:SWI (match_dup 2) (match_dup 3))\n+\t  (match_dup 2)))\n    (set (match_dup 0)\n \t(match_op_dup 1 [(reg:CCC FLAGS_REG) (const_int 0)]))])\n \n@@ -12709,12 +12707,10 @@\n \t   (match_operand 3 \"const_int_operand\")]))]\n   \"TARGET_64BIT\n    && IN_RANGE (exact_log2 (UINTVAL (operands[3]) + 1), 32, 63)\"\n-  [(parallel\n-     [(set (reg:CCZ FLAGS_REG)\n-\t   (compare:CCZ\n-\t     (lshiftrt:DI (match_dup 2) (match_dup 4))\n-\t     (const_int 0)))\n-      (clobber (scratch:DI))])\n+  [(set (reg:CCZ FLAGS_REG)\n+\t(compare:CCZ\n+\t  (lshiftrt:DI (match_dup 2) (match_dup 4))\n+\t  (const_int 0)))\n    (set (match_dup 0)\n \t(match_op_dup 1 [(reg:CCZ FLAGS_REG) (const_int 0)]))]\n {\n@@ -12905,12 +12901,10 @@\n \t  (label_ref (match_operand 0))\n \t  (pc)))]\n   \"\"\n-  [(parallel\n-     [(set (reg:CCC FLAGS_REG)\n-\t   (compare:CCC\n-\t     (plus:SWI (match_dup 2) (match_dup 3))\n-\t     (match_dup 2)))\n-      (clobber (scratch:SWI))])\n+  [(set (reg:CCC FLAGS_REG)\n+\t(compare:CCC\n+\t  (plus:SWI (match_dup 2) (match_dup 3))\n+\t  (match_dup 2)))\n    (set (pc)\n \t(if_then_else (match_op_dup 1 [(reg:CCC FLAGS_REG) (const_int 0)])\n \t\t      (label_ref (match_operand 0))\n@@ -12926,12 +12920,10 @@\n \t  (pc)))]\n   \"TARGET_64BIT\n    && IN_RANGE (exact_log2 (UINTVAL (operands[3]) + 1), 32, 63)\"\n-  [(parallel\n-     [(set (reg:CCZ FLAGS_REG)\n-\t   (compare:CCZ\n-\t     (lshiftrt:DI (match_dup 2) (match_dup 4))\n-\t     (const_int 0)))\n-      (clobber (scratch:DI))])\n+  [(set (reg:CCZ FLAGS_REG)\n+\t(compare:CCZ\n+\t  (lshiftrt:DI (match_dup 2) (match_dup 4))\n+\t  (const_int 0)))\n    (set (pc)\n \t(if_then_else (match_op_dup 1 [(reg:CCZ FLAGS_REG) (const_int 0)])\n \t\t      (label_ref (match_operand 0))\n@@ -18581,9 +18573,8 @@\n    && INTVAL (operands[2]) != -1\n    && INTVAL (operands[2]) != 2147483647\"\n   [(set (reg:CC FLAGS_REG) (compare:CC (match_dup 1) (match_dup 2)))\n-   (parallel [(set (match_dup 0)\n-\t\t   (neg:SWI48 (ltu:SWI48 (reg:CC FLAGS_REG) (const_int 0))))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+   (set (match_dup 0)\n+\t(neg:SWI48 (ltu:SWI48 (reg:CC FLAGS_REG) (const_int 0))))]\n   \"operands[2] = GEN_INT (INTVAL (operands[2]) + 1);\")\n \n (define_split\n@@ -18594,9 +18585,8 @@\n \t    (const_int 0))))]\n   \"\"\n   [(set (reg:CC FLAGS_REG) (compare:CC (match_dup 1) (const_int 1)))\n-   (parallel [(set (match_dup 0)\n-\t\t   (neg:SWI (ltu:SWI (reg:CC FLAGS_REG) (const_int 0))))\n-\t      (clobber (reg:CC FLAGS_REG))])])\n+   (set (match_dup 0)\n+\t(neg:SWI (ltu:SWI (reg:CC FLAGS_REG) (const_int 0))))])\n \n (define_split\n   [(set (match_operand:SWI 0 \"register_operand\")\n@@ -18605,13 +18595,10 @@\n \t    (match_operand 1 \"int_nonimmediate_operand\")\n \t    (const_int 0))))]\n   \"\"\n-  [(parallel [(set (reg:CCC FLAGS_REG)\n-\t\t   (ne:CCC (match_dup 1) (const_int 0)))\n-\t      (clobber (match_dup 2))])\n-   (parallel [(set (match_dup 0)\n-\t\t   (neg:SWI (ltu:SWI (reg:CCC FLAGS_REG) (const_int 0))))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n-  \"operands[2] = gen_rtx_SCRATCH (GET_MODE (operands[1]));\")\n+  [(set (reg:CCC FLAGS_REG)\n+\t(ne:CCC (match_dup 1) (const_int 0)))\n+   (set (match_dup 0)\n+\t(neg:SWI (ltu:SWI (reg:CCC FLAGS_REG) (const_int 0))))])\n \n (define_insn \"*mov<mode>cc_noc\"\n   [(set (match_operand:SWI248 0 \"register_operand\" \"=r,r\")"}]}