{"sha": "e34fc61568bef867b6745442de3fc4e1961926fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM0ZmM2MTU2OGJlZjg2N2I2NzQ1NDQyZGUzZmM0ZTE5NjE5MjZmZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-11T14:01:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-11T14:01:35Z"}, "message": "(RETURN_POPS_ARGS): Test first argument for IDENTIFIER_NODE.\n\nFrom-SVN: r13278", "tree": {"sha": "f50349707ebdb07d8039a155c92fa0e36c7db760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f50349707ebdb07d8039a155c92fa0e36c7db760"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e34fc61568bef867b6745442de3fc4e1961926fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34fc61568bef867b6745442de3fc4e1961926fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34fc61568bef867b6745442de3fc4e1961926fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34fc61568bef867b6745442de3fc4e1961926fd/comments", "author": null, "committer": null, "parents": [{"sha": "80e0fb44095b5fbb961cd904e950360be45e9c55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80e0fb44095b5fbb961cd904e950360be45e9c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80e0fb44095b5fbb961cd904e950360be45e9c55"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "1cb6cc9ef7bc87ecddaa17355521ae1dc4c77a2d", "filename": "gcc/config/gmicro/gmicro.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgmicro%2Fgmicro.h?ref=e34fc61568bef867b6745442de3fc4e1961926fd", "patch": "@@ -460,10 +460,10 @@ extern enum reg_class regno_reg_class[];\n    for the Gmicro. The option name may be changed in the future. */\n \n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n-  ((TARGET_RTD && TREE_CODE (FUNTYPE) != IDENTIFIER_NODE\t\\\n+  ((TARGET_RTD && TREE_CODE (FUNDECL) != IDENTIFIER_NODE\t\\\n     && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t|| (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\\n-\t    = void_type_node)))\t\t\t\t\t\\\n+\t    == void_type_node)))\t\t\t\t\t\\\n    ? (SIZE) : 0)\n \n /* Define how to find the value returned by a function."}, {"sha": "62c8dd6f25bfef0e86a49cb9c24b7bff20c1b476", "filename": "gcc/config/i386/next.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fi386%2Fnext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fi386%2Fnext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnext.h?ref=e34fc61568bef867b6745442de3fc4e1961926fd", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel x86 CPU running NeXTSTEP\n-   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -216,7 +216,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef\tRETURN_POPS_ARGS\n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) \t\t\t\t\\\n-  (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE\t\t\t\\\n+  (TREE_CODE (FUNDECL) == IDENTIFIER_NODE\t\t\t\\\n    ? 0\t\t\t\t\t\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\\\n       && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\"}, {"sha": "8676889f9448f9a61d91d4745ed631dc17632ead", "filename": "gcc/config/i386/sco.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=e34fc61568bef867b6745442de3fc4e1961926fd", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running SCO Unix System V.\n-   Copyright (C) 1988, 1992, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1992, 1994, 1995 Free, 1996 Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -104,7 +104,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef RETURN_POPS_ARGS\n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n-  (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\\\n+  (TREE_CODE (FUNDECL) == IDENTIFIER_NODE ? 0\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\\\n       && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t  || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\"}, {"sha": "ac8dc15d6e1443c4b958957242532e834a26f017", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=e34fc61568bef867b6745442de3fc4e1961926fd", "patch": "@@ -674,7 +674,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) \t\t\t\t\\\n  ((TARGET_ELF) ?\t\t\t\t\t\t\t\\\n   (i386_return_pops_args (FUNDECL, FUNTYPE, SIZE)) : \t\t\t\\\n-  (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\t\\\n+  (TREE_CODE (FUNDECL) == IDENTIFIER_NODE ? 0\t\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\t\\\n       && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\t\\\n \t  || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\t\\"}, {"sha": "3a7a1984c203420cb6d84bc37a03a182dfb657e1", "filename": "gcc/config/i386/scodbx.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fi386%2Fscodbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fi386%2Fscodbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fscodbx.h?ref=e34fc61568bef867b6745442de3fc4e1961926fd", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for Intel 386 running SCO Unix System V,\n    using dbx-in-coff encapsulation.\n-   Copyright (C) 1992, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -75,7 +75,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef RETURN_POPS_ARGS\n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n-  (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\\\n+  (TREE_CODE (FUNDECL) == IDENTIFIER_NODE ? 0\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\\\n       && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t  || (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\"}, {"sha": "244bb8faaa958b750d9b1fc9076fc89fd8607da4", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=e34fc61568bef867b6745442de3fc4e1961926fd", "patch": "@@ -818,7 +818,7 @@ extern enum reg_class regno_reg_class[];\n    the caller must always pop the args.  */\n \n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n-  ((TARGET_RTD && TREE_CODE (FUNTYPE) != IDENTIFIER_NODE\t\\\n+  ((TARGET_RTD && TREE_CODE (FUNDECL) != IDENTIFIER_NODE\t\\\n     && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t|| (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\\n \t    == void_type_node)))\t\t\t\t\\"}, {"sha": "854c794314f6df1102f5e0c5d144356747931975", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=e34fc61568bef867b6745442de3fc4e1961926fd", "patch": "@@ -405,7 +405,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, GEN_AND_FP_REGS,\n    the caller must always pop the args.  */\n \n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n-  ((TARGET_RTD && TREE_CODE (FUNTYPE) != IDENTIFIER_NODE\t\\\n+  ((TARGET_RTD && TREE_CODE (FUNDECL) != IDENTIFIER_NODE\t\\\n     && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t|| (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\\n \t    == void_type_node)))\t\t\t\t\\"}, {"sha": "407a39ed7ce80b2508f046a054a3fb6c22e23c43", "filename": "gcc/config/pyr/pyr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fpyr%2Fpyr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fc61568bef867b6745442de3fc4e1961926fd/gcc%2Fconfig%2Fpyr%2Fpyr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpyr%2Fpyr.h?ref=e34fc61568bef867b6745442de3fc4e1961926fd", "patch": "@@ -495,7 +495,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    We may nevertheless provide this as an option.   */\n \n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n-  ((TARGET_RETD && TREE_CODE (FUNTYPE) != IDENTIFIER_NODE\t\\\n+  ((TARGET_RETD && TREE_CODE (FUNDECL) != IDENTIFIER_NODE\t\\\n     && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t|| (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\\n \t    == void_type_node)))\t\t\t\t\\"}]}