{"sha": "5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQyYjg0Zjg0MGE3ZjZhMWY1N2I5Y2RlMDk2OTNjZTJjZDkxZDNkMw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2008-08-26T16:12:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2008-08-26T16:12:20Z"}, "message": "mn10300.md (movqi, movhi): Split i->d*a case into two cases to avoid the possibility of getting...\n\n\t* mn10300.md (movqi, movhi): Split i->d*a case into two cases to\n\tavoid the possibility of getting DATA_OR_ADDRESS_REGS as the\n\tpreferred class when copying a constant into a partial word register.\n\nFrom-SVN: r139600", "tree": {"sha": "b6f96ed48d634b1b76fca22437176607b9217e1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6f96ed48d634b1b76fca22437176607b9217e1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3/comments", "author": null, "committer": null, "parents": [{"sha": "3f4d9b988110a36b70844ad894e80d0fdb37ea39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f4d9b988110a36b70844ad894e80d0fdb37ea39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f4d9b988110a36b70844ad894e80d0fdb37ea39"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "876805354fd4760dbe314406ec58c94a274bc2ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3", "patch": "@@ -1,3 +1,9 @@\n+2008-08-26  Jeff Law  <law@redhat.com>\n+\n+\t* mn10300.md (movqi, movhi): Split i->d*a case into two cases to\n+\tavoid the possibility of getting DATA_OR_ADDRESS_REGS as the\n+\tpreferred class when copying a constant into a partial word register.\n+\n 2008-08-26  Ben Elliston  <bje@au.ibm.com>\n \n \t* rtlanal.c: Fix uses of \"it's\" with \"its\" where appropriate."}, {"sha": "8fbbdc87df5a06b0155cbdd2a05d662a1c07461f", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=5d2b84f840a7f6a1f57b9cde09693ce2cd91d3d3", "patch": "@@ -115,8 +115,8 @@\n   [(set_attr \"cc\" \"none,clobber,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit\")])\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d*a,d,d*a,d,m\")\n-\t(match_operand:QI 1 \"general_operand\" \"0,I,dai,m,d\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d*a,d,d,!*a,d*a,d,m\")\n+\t(match_operand:QI 1 \"general_operand\" \"0,I,i,i,da,m,d\"))]\n   \"register_operand (operands[0], QImode)\n    || register_operand (operands[1], QImode)\"\n   \"*\n@@ -128,6 +128,8 @@\n     case 1:\n       return \\\"clr %0\\\";\n     case 2:\n+    case 3:\n+    case 4:\n       if (GET_CODE (operands[1]) == CONST_DOUBLE)\n \t{\n \t  rtx xoperands[2];\n@@ -138,14 +140,14 @@\n \t}\n \n       return \\\"mov %1,%0\\\";\n-    case 3:\n-    case 4:\n+    case 5:\n+    case 6:\n       return \\\"movbu %1,%0\\\";\n     default:\n       gcc_unreachable ();\n     }\n }\"\n-  [(set_attr \"cc\" \"none,clobber,none_0hit,none_0hit,none_0hit\")])\n+  [(set_attr \"cc\" \"none,clobber,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit\")])\n \n ;; movhi\n \n@@ -208,8 +210,8 @@\n   [(set_attr \"cc\" \"none,clobber,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit\")])\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d*a,d,d*a,d,m\")\n-\t(match_operand:HI 1 \"general_operand\" \"0,I,dai,m,d\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d*a,d,d,!*a,d*a,d,m\")\n+\t(match_operand:HI 1 \"general_operand\" \"0,I,i,i,da,m,d\"))]\n   \"register_operand (operands[0], HImode)\n    || register_operand (operands[1], HImode)\"\n   \"*\n@@ -221,6 +223,8 @@\n     case 1:\n       return \\\"clr %0\\\";\n     case 2:\n+    case 3:\n+    case 4:\n       if (GET_CODE (operands[1]) == CONST_DOUBLE)\n \t{\n \t  rtx xoperands[2];\n@@ -230,14 +234,14 @@\n \t  return \\\"\\\";\n \t}\n       return \\\"mov %1,%0\\\";\n-    case 3:\n-    case 4:\n+    case 5:\n+    case 6:\n       return \\\"movhu %1,%0\\\";\n     default:\n       gcc_unreachable ();\n     }\n }\"\n-  [(set_attr \"cc\" \"none,clobber,none_0hit,none_0hit,none_0hit\")])\n+  [(set_attr \"cc\" \"none,clobber,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit\")])\n \n ;; movsi and helpers\n "}]}