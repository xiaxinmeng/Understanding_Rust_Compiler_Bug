{"sha": "5acc10a9ea66411e1712fabc94f9f29892b0d607", "node_id": "C_kwDOANBUbNoAKDVhY2MxMGE5ZWE2NjQxMWUxNzEyZmFiYzk0ZjlmMjk4OTJiMGQ2MDc", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-03T14:21:00Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-03T14:21:53Z"}, "message": "analyzer: fix ICE when pipe's arg isn't a pointer [PR107486]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/107486\n\t* analyzer.cc (is_pipe_call_p): New.\n\t* analyzer.h (is_pipe_call_p): New decl.\n\t* region-model.cc (region_model::on_call_pre): Use it.\n\t(region_model::on_call_post): Likewise.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/107486\n\t* gcc.dg/analyzer/pipe-pr107486.c: New test.\n\t* gcc.dg/analyzer/pipe-void-return.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "be1193c95fe6923712dba722ce97580c914e8589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be1193c95fe6923712dba722ce97580c914e8589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5acc10a9ea66411e1712fabc94f9f29892b0d607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5acc10a9ea66411e1712fabc94f9f29892b0d607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5acc10a9ea66411e1712fabc94f9f29892b0d607", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5acc10a9ea66411e1712fabc94f9f29892b0d607/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6629444170f85e9b1e243aa07e3e07a8b9f8fce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6629444170f85e9b1e243aa07e3e07a8b9f8fce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6629444170f85e9b1e243aa07e3e07a8b9f8fce5"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "6c7c969538c119be781965d25c260b7a44348245", "filename": "gcc/analyzer/analyzer.cc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Fanalyzer%2Fanalyzer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Fanalyzer%2Fanalyzer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.cc?ref=5acc10a9ea66411e1712fabc94f9f29892b0d607", "patch": "@@ -379,6 +379,22 @@ is_longjmp_call_p (const gcall *call)\n   return false;\n }\n \n+/* Return true if this is a \"pipe\" call.  */\n+\n+bool\n+is_pipe_call_p (const_tree fndecl, const char *funcname,\n+\t\tconst gcall *call, unsigned int num_args)\n+{\n+  if (!is_named_call_p (fndecl, funcname, call, num_args))\n+    return false;\n+\n+  /* We require a pointer for the initial argument.  */\n+  if (!POINTER_TYPE_P (TREE_TYPE (gimple_call_arg (call, 0))))\n+    return false;\n+\n+  return true;\n+}\n+\n /* For a CALL that matched is_special_named_call_p or is_named_call_p for\n    some name, return a name for the called function suitable for use in\n    diagnostics (stripping the leading underscores).  */"}, {"sha": "c41cfb01656320866bec7925032488b43c636c63", "filename": "gcc/analyzer/analyzer.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Fanalyzer%2Fanalyzer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Fanalyzer%2Fanalyzer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.h?ref=5acc10a9ea66411e1712fabc94f9f29892b0d607", "patch": "@@ -324,6 +324,8 @@ extern bool is_std_named_call_p (const_tree fndecl, const char *funcname,\n \t\t\t\t const gcall *call, unsigned int num_args);\n extern bool is_setjmp_call_p (const gcall *call);\n extern bool is_longjmp_call_p (const gcall *call);\n+extern bool is_pipe_call_p (const_tree fndecl, const char *funcname,\n+\t\t\t    const gcall *call, unsigned int num_args);\n \n extern const char *get_user_facing_name (const gcall *call);\n "}, {"sha": "4713f0d25191c4aaf5497154befb47f43ff209b9", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=5acc10a9ea66411e1712fabc94f9f29892b0d607", "patch": "@@ -2315,8 +2315,8 @@ region_model::on_call_pre (const gcall *call, region_model_context *ctxt,\n \t  impl_call_memset (cd);\n \t  return false;\n \t}\n-      else if (is_named_call_p (callee_fndecl, \"pipe\", call, 1)\n-\t       || is_named_call_p (callee_fndecl, \"pipe2\", call, 2))\n+      else if (is_pipe_call_p (callee_fndecl, \"pipe\", call, 1)\n+\t       || is_pipe_call_p (callee_fndecl, \"pipe2\", call, 2))\n \t{\n \t  /* Handle in \"on_call_post\"; bail now so that fd array\n \t     is left untouched so that we can detect use-of-uninit\n@@ -2403,8 +2403,8 @@ region_model::on_call_post (const gcall *call,\n \t  impl_call_operator_delete (cd);\n \t  return;\n \t}\n-      else if (is_named_call_p (callee_fndecl, \"pipe\", call, 1)\n-\t       || is_named_call_p (callee_fndecl, \"pipe2\", call, 2))\n+      else if (is_pipe_call_p (callee_fndecl, \"pipe\", call, 1)\n+\t       || is_pipe_call_p (callee_fndecl, \"pipe2\", call, 2))\n \t{\n \t  impl_call_pipe (cd);\n \t  return;"}, {"sha": "e9fc7fb4943eb6d132c265744077542569ffb515", "filename": "gcc/testsuite/gcc.dg/analyzer/pipe-pr107486.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-pr107486.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-pr107486.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-pr107486.c?ref=5acc10a9ea66411e1712fabc94f9f29892b0d607", "patch": "@@ -0,0 +1,5 @@\n+void pipe(int);\n+\n+void f1(void) {\n+  pipe(1);\n+}"}, {"sha": "0de676305f665051318f83ece46b02ed917e4375", "filename": "gcc/testsuite/gcc.dg/analyzer/pipe-void-return.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-void-return.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5acc10a9ea66411e1712fabc94f9f29892b0d607/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-void-return.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-void-return.c?ref=5acc10a9ea66411e1712fabc94f9f29892b0d607", "patch": "@@ -0,0 +1,11 @@\n+extern void pipe(int pipefd[2]);\n+extern int close(int fd);\n+\n+void\n+test_unchecked (void)\n+{\n+  int fds[2];\n+  pipe (fds); /* { dg-message \"when 'pipe' fails\" } */\n+  close (fds[0]); /* { dg-warning \"use of uninitialized value 'fds\\\\\\[0\\\\\\]'\" } */\n+  close (fds[1]); /* { dg-warning \"use of uninitialized value 'fds\\\\\\[1\\\\\\]'\" } */\n+}"}]}