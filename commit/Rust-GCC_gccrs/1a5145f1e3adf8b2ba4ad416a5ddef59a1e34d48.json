{"sha": "1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48", "node_id": "C_kwDOANBUbNoAKDFhNTE0NWYxZTNhZGY4YjJiYTRhZDQxNmE1ZGRlZjU5YTFlMzRkNDg", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-18T23:42:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-18T23:42:18Z"}, "message": "c++: Fix handling of temporaries with consteval ctors and non-trivial dtors [PR104055]\n\nThe following testcase is miscompiled.  We see the constructor is immediate,\nin build_over_call we trigger:\n          if (obj_arg && is_dummy_object (obj_arg))\n            {\n              call = build_cplus_new (DECL_CONTEXT (fndecl), call, complain);\n              obj_arg = NULL_TREE;\n            }\nwhich makes call a TARGET_EXPR with the dtor in TARGET_EXPR_CLEANUP,\nbut then call cxx_constant_value on it.  In cxx_eval_outermost_constant_expr\nit triggers the:\n      else if (TREE_CODE (t) != CONSTRUCTOR)\n        {\n          r = get_target_expr_sfinae (r, tf_warning_or_error | tf_no_cleanup);\n          TREE_CONSTANT (r) = true;\n        }\nwhich wraps the CONSTRUCTOR r into a new TARGET_EXPR, but one without\ndtors (I think we need e.g. the TREE_CONSTANT for the callers),\nand finally build_over_call uses that.\n\nThe following patch fixes that by using get_target_expr instead\nof get_target_expr_sfinae + TREE_CONSTANT (r) = true if t is\na TARGET_EXPR with non-NULL TARGET_EXPR_CLEANUP.\n\n2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/104055\n\t* constexpr.cc (cxx_eval_outermost_constant_expr): If t is a\n\tTARGET_EXPR with TARGET_EXPR_CLEANUP, use get_target_expr rather\n\tthan get_target_expr_sfinae with tf_no_cleanup, and don't set\n\tTREE_CONSTANT.\n\n\t* g++.dg/cpp2a/consteval27.C: New test.", "tree": {"sha": "88783f175903044a0c9e8e63b3c382d9c2a6d498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88783f175903044a0c9e8e63b3c382d9c2a6d498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdd6d85bd75df9a97659220373b5c1e8b3019e26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd6d85bd75df9a97659220373b5c1e8b3019e26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdd6d85bd75df9a97659220373b5c1e8b3019e26"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "dcc167499ede695ce79a12589ee0f23e0b88548b", "filename": "gcc/cp/constexpr.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48/gcc%2Fcp%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48/gcc%2Fcp%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.cc?ref=1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48", "patch": "@@ -7821,7 +7821,11 @@ cxx_eval_outermost_constant_expr (tree t, bool allow_non_constant,\n       if (TREE_CODE (t) == TARGET_EXPR\n \t  && TARGET_EXPR_INITIAL (t) == r)\n \treturn t;\n-      else if (TREE_CODE (t) != CONSTRUCTOR)\n+      else if (TREE_CODE (t) == CONSTRUCTOR)\n+\t;\n+      else if (TREE_CODE (t) == TARGET_EXPR && TARGET_EXPR_CLEANUP (t))\n+\tr = get_target_expr (r);\n+      else\n \t{\n \t  r = get_target_expr_sfinae (r, tf_warning_or_error | tf_no_cleanup);\n \t  TREE_CONSTANT (r) = true;"}, {"sha": "72d56df9dc536e030a6f233a3b3663ad9b76507e", "filename": "gcc/testsuite/g++.dg/cpp2a/consteval27.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval27.C?ref=1a5145f1e3adf8b2ba4ad416a5ddef59a1e34d48", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/104055\n+// { dg-do run { target c++20 } }\n+\n+int g;\n+\n+struct A { \n+  ~A () { if (a != 17 || b != 26) __builtin_abort (); g = 42; }\n+  consteval A () : a (17), b (26) {}\n+  int a, b;\n+};\n+\n+int\n+main ()\n+{\n+  A{};\n+  if (g != 42)\n+    __builtin_abort ();\n+}"}]}