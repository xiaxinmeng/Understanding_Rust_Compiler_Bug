{"sha": "6c6424b3d7fc813396ee33d3d1ebb65d210aecc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2NDI0YjNkN2ZjODEzMzk2ZWUzM2QzZDFlYmI2NWQyMTBhZWNjNQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-06-04T17:17:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-06-04T17:17:57Z"}, "message": "testsuite_allocator.h (tracker_allocator::construct): Update to C++0x definition using type to construct as template parameter.\n\n2011-06-04  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* testsuite/util/testsuite_allocator.h (tracker_allocator::construct):\n\tUpdate to C++0x definition using type to construct as template\n\tparameter.\n\t(tracker_allocator::destroy): Likewise for type to destroy.\n\t(uneq_allocator::construct, uneq_allocator::destroy): Likewise.\n\nFrom-SVN: r174647", "tree": {"sha": "bb8b0872d78c3495ce30cb8aa9b5154b4a89d600", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb8b0872d78c3495ce30cb8aa9b5154b4a89d600"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c6424b3d7fc813396ee33d3d1ebb65d210aecc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6424b3d7fc813396ee33d3d1ebb65d210aecc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6424b3d7fc813396ee33d3d1ebb65d210aecc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6424b3d7fc813396ee33d3d1ebb65d210aecc5/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26740835ec4e0049bf26b98cea017e1d9ce888b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26740835ec4e0049bf26b98cea017e1d9ce888b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26740835ec4e0049bf26b98cea017e1d9ce888b0"}], "stats": {"total": 65, "additions": 41, "deletions": 24}, "files": [{"sha": "c90eb5c3b28bc4ba4cb4c0ab408b7e53d5dc0f4e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6424b3d7fc813396ee33d3d1ebb65d210aecc5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6424b3d7fc813396ee33d3d1ebb65d210aecc5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6c6424b3d7fc813396ee33d3d1ebb65d210aecc5", "patch": "@@ -1,3 +1,11 @@\n+2011-06-04  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* testsuite/util/testsuite_allocator.h (tracker_allocator::construct):\n+\tUpdate to C++0x definition using type to construct as template\n+\tparameter.\n+\t(tracker_allocator::destroy): Likewise for type to destroy.\n+\t(uneq_allocator::construct, uneq_allocator::destroy): Likewise.\n+\n 2011-06-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/hashtable.h (_Hashtable<>::_Hashtable(_Hashtable&&)):"}, {"sha": "e472835c84ede04b8325bf429b51653f68c9da7e", "filename": "libstdc++-v3/testsuite/util/testsuite_allocator.h", "status": "modified", "additions": 33, "deletions": 24, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6424b3d7fc813396ee33d3d1ebb65d210aecc5/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6424b3d7fc813396ee33d3d1ebb65d210aecc5/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h?ref=6c6424b3d7fc813396ee33d3d1ebb65d210aecc5", "patch": "@@ -138,29 +138,37 @@ namespace __gnu_test\n     allocate(size_type n, const void* = 0)\n     { return static_cast<pointer>(counter_type::allocate(n * sizeof(T))); }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    template<typename U, typename... Args>\n+      void\n+      construct(U* p, Args&&... args) \n+      {\n+\t::new((void *)p) U(std::forward<Args>(args)...);\n+\tcounter_type::construct();\n+      }\n+\n+    template<typename U>\n+      void\n+      destroy(U* p)\n+      {\n+\tp->~U();\n+\tcounter_type::destroy();\n+      }\n+#else\n     void\n     construct(pointer p, const T& value)\n     {\n       ::new ((void *)p) T(value);\n       counter_type::construct();\n     }\n \n-#ifdef __GXX_EXPERIMENTAL_CXX0X__\n-      template<typename... Args>\n-        void\n-        construct(pointer p, Args&&... args) \n-\t{\n-\t  ::new((void *)p) T(std::forward<Args>(args)...);\n-\t  counter_type::construct();\n-\t}\n-#endif\n-\n     void\n     destroy(pointer p)\n     {\n       p->~T();\n       counter_type::destroy();\n     }\n+#endif\n \n     void\n     deallocate(pointer p, size_type num)\n@@ -313,34 +321,35 @@ namespace __gnu_test\n       max_size() const throw() \n       { return size_type(-1) / sizeof(Tp); }\n       \n-      void \n-      construct(pointer p, const Tp& val) \n-      { ::new((void *)p) Tp(val); }\n-\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n-      template<typename... Args>\n+      template<typename U, typename... Args>\n         void\n-        construct(pointer p, Args&&... args) \n-\t{ ::new((void *)p) Tp(std::forward<Args>(args)...); }\n-#endif\n+        construct(U* p, Args&&... args) \n+\t{ ::new((void *)p) U(std::forward<Args>(args)...); }\n \n-      void \n-      destroy(pointer p) { p->~Tp(); }\n+      template<typename U>\n+\tvoid \n+\tdestroy(U* p) { p->~U(); }\n \n-#ifdef __GXX_EXPERIMENTAL_CXX0X__\n       // Not copy assignable...\n       uneq_allocator&\n       operator=(const uneq_allocator&) = delete;\n-#endif\n+#else\n+      void \n+      construct(pointer p, const Tp& val) \n+      { ::new((void *)p) Tp(val); }\n \n-    private:\n+      void \n+      destroy(pointer p) { p->~Tp(); }\n \n-#ifndef __GXX_EXPERIMENTAL_CXX0X__\n+    private:\n       // Not assignable...\n       uneq_allocator&\n       operator=(const uneq_allocator&);\n #endif\n \n+    private:\n+\n       // ... yet swappable!\n       friend inline void\n       swap(uneq_allocator& a, uneq_allocator& b)"}]}