{"sha": "f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc0NmEwMjkyMzJjYzNhNzRiYTYyODFhYjBhM2RkYTRmMmFiOGE2ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-24T14:16:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-24T14:16:45Z"}, "message": "re PR c++/57391 (ICE compiling AIX math.h caused by PR c++/56930)\n\n\tPR c++/57391\n\t* semantics.c (cxx_eval_constant_expression): Handle FMA_EXPR.\n\t(cxx_eval_trinary_expression): Rename from cxx_eval_vec_perm_expr.\n\nFrom-SVN: r199292", "tree": {"sha": "1a4232710fe2167dddf10c93dd23b2d4bdc4cb81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a4232710fe2167dddf10c93dd23b2d4bdc4cb81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aea0101d9553c16556c3eb2ce66761e9dc95b40f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aea0101d9553c16556c3eb2ce66761e9dc95b40f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aea0101d9553c16556c3eb2ce66761e9dc95b40f"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "585ab73bf408bc39badf4c429c8abeec05ef5c11", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e", "patch": "@@ -1,3 +1,9 @@\n+2013-05-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/57391\n+\t* semantics.c (cxx_eval_constant_expression): Handle FMA_EXPR.\n+\t(cxx_eval_trinary_expression): Rename from cxx_eval_vec_perm_expr.\n+\n 2013-05-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/57388"}, {"sha": "c1385c10b602ef924dc9c62df262196b8329b676", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=f746a029232cc3a74ba6281ab0a3dda4f2ab8a6e", "patch": "@@ -7776,37 +7776,32 @@ non_const_var_error (tree r)\n     }\n }\n \n-/* Evaluate VEC_PERM_EXPR (v1, v2, mask).  */\n+/* Subroutine of cxx_eval_constant_expression.\n+   Like cxx_eval_unary_expression, except for trinary expressions.  */\n+\n static tree\n-cxx_eval_vec_perm_expr (const constexpr_call *call, tree t, \n-\t\t\tbool allow_non_constant, bool addr,\n-\t\t\tbool *non_constant_p, bool *overflow_p)\n+cxx_eval_trinary_expression (const constexpr_call *call, tree t,\n+\t\t\t     bool allow_non_constant, bool addr,\n+\t\t\t     bool *non_constant_p, bool *overflow_p)\n {\n   int i;\n   tree args[3];\n   tree val;\n-  tree elttype = TREE_TYPE (t);\n \n   for (i = 0; i < 3; i++)\n     {\n       args[i] = cxx_eval_constant_expression (call, TREE_OPERAND (t, i),\n \t\t\t\t\t      allow_non_constant, addr,\n \t\t\t\t\t      non_constant_p, overflow_p);\n-      if (*non_constant_p)\n-      \tgoto fail;\n+      VERIFY_CONSTANT (args[i]);\n     }\n \n-  gcc_assert (TREE_CODE (TREE_TYPE (args[0])) == VECTOR_TYPE);\n-  gcc_assert (TREE_CODE (TREE_TYPE (args[1])) == VECTOR_TYPE);\n-  gcc_assert (TREE_CODE (TREE_TYPE (args[2])) == VECTOR_TYPE);\n-\n-  val = fold_ternary_loc (EXPR_LOCATION (t), VEC_PERM_EXPR, elttype, \n+  val = fold_ternary_loc (EXPR_LOCATION (t), TREE_CODE (t), TREE_TYPE (t),\n \t\t\t  args[0], args[1], args[2]);\n-  if (val != NULL_TREE)\n-    return val;\n-\n- fail:\n-  return t;\n+  if (val == NULL_TREE)\n+    return t;\n+  VERIFY_CONSTANT (val);\n+  return val;\n }\n \n /* Attempt to reduce the expression T to a constant value.\n@@ -8106,9 +8101,10 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n \t\t\t     non_constant_p, overflow_p);\n       break;\n \n+    case FMA_EXPR:\n     case VEC_PERM_EXPR:\n-      r = cxx_eval_vec_perm_expr (call, t, allow_non_constant, addr,\n-\t\t\t\t  non_constant_p, overflow_p);\n+      r = cxx_eval_trinary_expression (call, t, allow_non_constant, addr,\n+\t\t\t\t       non_constant_p, overflow_p);\n       break;\n \n     case CONVERT_EXPR:"}]}