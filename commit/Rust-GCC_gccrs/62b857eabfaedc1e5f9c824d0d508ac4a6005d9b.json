{"sha": "62b857eabfaedc1e5f9c824d0d508ac4a6005d9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJiODU3ZWFiZmFlZGMxZTVmOWM4MjRkMGQ1MDhhYzRhNjAwNWQ5Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-06-09T17:00:30Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-06-09T17:00:30Z"}, "message": "basic-block.h (struct edge_def): Add goto_locus.\n\n        * basic-block.h (struct edge_def): Add goto_locus.\n        * tree-cfg.c (make_goto_expr_edges): Set it.\n        (disband_implicit_edges): Use it.\n        * tree-pretty-print.c (dump_implicit_edges): Print it.\n\nFrom-SVN: r82842", "tree": {"sha": "3bd1558b7817ffa9d7cbc42664788157968cb92b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bd1558b7817ffa9d7cbc42664788157968cb92b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/comments", "author": null, "committer": null, "parents": [{"sha": "93a9f7d6c63e39974dd0f77ba42af58f71671ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93a9f7d6c63e39974dd0f77ba42af58f71671ad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93a9f7d6c63e39974dd0f77ba42af58f71671ad3"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "09d1c8edfa41d872a4e68f95394ae342f2b3a4a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62b857eabfaedc1e5f9c824d0d508ac4a6005d9b", "patch": "@@ -1,3 +1,10 @@\n+2004-06-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* basic-block.h (struct edge_def): Add goto_locus.\n+\t* tree-cfg.c (make_goto_expr_edges): Set it.\n+\t(disband_implicit_edges): Use it.\n+\t* tree-pretty-print.c (dump_implicit_edges): Print it.\n+\n 2004-06-08  Anil Paranjpe <anilp1@kpitcummins.com>\n \n \t* h8300.md (ldm_h8300s_4): Fix condition for expander."}, {"sha": "02ca28180ab0e9e326b5578ff2061f31de385268", "filename": "gcc/basic-block.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=62b857eabfaedc1e5f9c824d0d508ac4a6005d9b", "patch": "@@ -142,6 +142,9 @@ struct edge_def GTY((chain_next (\"%h.pred_next\")))\n   /* Auxiliary info specific to a pass.  */\n   PTR GTY ((skip (\"\"))) aux;\n \n+  /* Location of any goto implicit in the edge, during tree-ssa.  */\n+  location_t *goto_locus;\n+\n   int flags;\t\t\t/* see EDGE_* below  */\n   int probability;\t\t/* biased by REG_BR_PROB_BASE */\n   gcov_type count;\t\t/* Expected number of executions calculated"}, {"sha": "d5ff9191d72ecaaad05509f5dc64fe3cf7f9b459", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=62b857eabfaedc1e5f9c824d0d508ac4a6005d9b", "patch": "@@ -680,7 +680,8 @@ make_goto_expr_edges (basic_block bb)\n       /* A GOTO to a local label creates normal edges.  */\n       if (simple_goto_p (goto_t))\n \t{\n-\t  make_edge (bb, label_to_block (dest), EDGE_FALLTHRU);\n+\t  edge e = make_edge (bb, label_to_block (dest), EDGE_FALLTHRU);\n+\t  e->goto_locus = EXPR_LOCUS (goto_t);\n \t  bsi_remove (&last);\n \t  return;\n \t}\n@@ -2640,8 +2641,7 @@ disband_implicit_edges (void)\n \tif (e->flags & EDGE_FALLTHRU)\n \t  break;\n \n-      if (!e\n-\t  || e->dest == bb->next_bb)\n+      if (!e || e->dest == bb->next_bb)\n \tcontinue;\n \n       if (e->dest == EXIT_BLOCK_PTR)\n@@ -2658,9 +2658,9 @@ disband_implicit_edges (void)\n \t  && TREE_CODE (forward) == GOTO_EXPR)\n \tlabel = GOTO_DESTINATION (forward);\n \n-      bsi_insert_after (&last,\n-\t\t\tbuild1 (GOTO_EXPR, void_type_node, label),\n-\t\t\tBSI_NEW_STMT);\n+      stmt = build1 (GOTO_EXPR, void_type_node, label);\n+      SET_EXPR_LOCUS (stmt, e->goto_locus);\n+      bsi_insert_after (&last, stmt, BSI_NEW_STMT);\n       e->flags &= ~EDGE_FALLTHRU;\n     }\n }"}, {"sha": "d5566b822bf9819c8dce059994a2287c598c4873", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b857eabfaedc1e5f9c824d0d508ac4a6005d9b/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=62b857eabfaedc1e5f9c824d0d508ac4a6005d9b", "patch": "@@ -2227,7 +2227,8 @@ pp_cfg_jump (pretty_printer *buffer, basic_block bb)\n    by INDENT spaces, with details given by FLAGS.  */\n \n static void\n-dump_implicit_edges (pretty_printer *buffer, basic_block bb, int indent)\n+dump_implicit_edges (pretty_printer *buffer, basic_block bb, int indent,\n+\t\t     int flags)\n {\n   edge e;\n \n@@ -2239,6 +2240,19 @@ dump_implicit_edges (pretty_printer *buffer, basic_block bb, int indent)\n   if (e && e->dest != bb->next_bb)\n     {\n       INDENT (indent);\n+\n+      if ((flags & TDF_LINENO) && e->goto_locus)\n+\t{\n+\t  pp_character (buffer, '[');\n+\t  if (e->goto_locus->file)\n+\t    {\n+\t      pp_string (buffer, e->goto_locus->file);\n+\t      pp_string (buffer, \" : \");\n+\t    }\n+\t  pp_decimal_int (buffer, e->goto_locus->line);\n+\t  pp_string (buffer, \"] \");\n+\t}\n+\n       pp_cfg_jump (buffer, e->dest);\n       pp_newline (buffer);\n     }\n@@ -2276,7 +2290,7 @@ dump_generic_bb_buff (pretty_printer *buffer, basic_block bb,\n       pp_newline (buffer);\n     }\n \n-  dump_implicit_edges (buffer, bb, indent);\n+  dump_implicit_edges (buffer, bb, indent, flags);\n \n   if (flags & TDF_BLOCKS)\n     dump_bb_end (buffer, bb, indent, flags);"}]}