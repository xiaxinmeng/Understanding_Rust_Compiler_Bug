{"sha": "cfe83a543f912bda277a1dc8b4defaf2c86f4fc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZlODNhNTQzZjkxMmJkYTI3N2ExZGM4YjRkZWZhZjJjODZmNGZjNA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2000-11-21T11:12:22Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2000-11-21T11:12:22Z"}, "message": "g77.texi (Floating-point Exception Handling): Use feenableexcept in example.\n\n\t* g77.texi (Floating-point Exception Handling): Use feenableexcept\n\tin example.\n\t(Floating-point precision): Change to match above change.\n\nFrom-SVN: r37613", "tree": {"sha": "69815099cadd99ff21ddb8a6c9577708117eb46f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69815099cadd99ff21ddb8a6c9577708117eb46f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfe83a543f912bda277a1dc8b4defaf2c86f4fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe83a543f912bda277a1dc8b4defaf2c86f4fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfe83a543f912bda277a1dc8b4defaf2c86f4fc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe83a543f912bda277a1dc8b4defaf2c86f4fc4/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf183ac2bdc27a72165fd357bdc35cdcc7a1257d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf183ac2bdc27a72165fd357bdc35cdcc7a1257d"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "61a1f5223086dc81f8557655ac71a6275de0587a", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe83a543f912bda277a1dc8b4defaf2c86f4fc4/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe83a543f912bda277a1dc8b4defaf2c86f4fc4/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=cfe83a543f912bda277a1dc8b4defaf2c86f4fc4", "patch": "@@ -1,3 +1,9 @@\n+2000-11-21  Andreas Jaeger  <aj@suse.de>\n+\n+\t* g77.texi (Floating-point Exception Handling): Use feenableexcept\n+\tin example.\n+\t(Floating-point precision): Change to match above change.\n+\n Sun Nov 19 17:29:22 2000  Matthias Klose  <doko@marvin.itso-berlin.de>\n \n         * g77.texi (Floating-point precision): Adjust example"}, {"sha": "842f4e4cb06c80810b0bbb6f8e737c495233626b", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe83a543f912bda277a1dc8b4defaf2c86f4fc4/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe83a543f912bda277a1dc8b4defaf2c86f4fc4/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=cfe83a543f912bda277a1dc8b4defaf2c86f4fc4", "patch": "@@ -10475,9 +10475,10 @@ mode and not take the performance hit of @samp{-ffloat-store}.  On x86\n and m68k GNU systems you can do this with a technique similar to that\n for turning on floating-point exceptions\n (@pxref{Floating-point Exception Handling}).\n-The control word could be set to double precision by\n-replacing the @code{__setfpucw} call or the @code{_FPU_SETCW} macro with one like this:\n+The control word could be set to double precision by some code like this\n+one:\n @smallexample\n+#include <fpu_control.h>\n @{\n   fpu_control_t cw = (_FPU_DEFAULT & ~_FPU_EXTENDED) | _FPU_DOUBLE;\n   _FPU_SETCW(cw);\n@@ -12150,17 +12151,17 @@ Most systems provide some C-callable mechanism to change this; this can\n be invoked at startup using @code{gcc}'s @code{constructor} attribute.\n For example, just compiling and linking the following C code with your\n program will turn on exception trapping for the ``common'' exceptions\n-on an x86-based GNU system:\n+on a GNU system using glibc 2.2 or newer:\n \n @smallexample\n-#include <fpu_control.h>\n+#define _GNU_SOURCE 1\n+#include <fenv.h>\n static void __attribute__ ((constructor))\n trapfpe ()\n @{\n-  fpu_control_t cw =\n-    _FPU_DEFAULT &\n-    ~(_FPU_MASK_IM | _FPU_MASK_ZM | _FPU_MASK_OM);\n-  _FPU_SETCW(cw);\n+  /* Enable some exceptions.  At startup all exceptions are masked.  */\n+  \n+  feenableexcept (FE_INVALID|FE_DIVBYZERO|FE_OVERFLOW);\n @}\n @end smallexample\n "}]}