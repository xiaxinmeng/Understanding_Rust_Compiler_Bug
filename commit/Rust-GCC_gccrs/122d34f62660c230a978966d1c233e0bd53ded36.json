{"sha": "122d34f62660c230a978966d1c233e0bd53ded36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIyZDM0ZjYyNjYwYzIzMGE5Nzg5NjZkMWMyMzNlMGJkNTNkZWQzNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-06-05T02:20:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-06-05T02:20:36Z"}, "message": "fix\n\nFrom-SVN: r20235", "tree": {"sha": "365dcd90affd9f1496d614addc3e731bdb321bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/365dcd90affd9f1496d614addc3e731bdb321bfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/122d34f62660c230a978966d1c233e0bd53ded36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122d34f62660c230a978966d1c233e0bd53ded36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/122d34f62660c230a978966d1c233e0bd53ded36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122d34f62660c230a978966d1c233e0bd53ded36/comments", "author": null, "committer": null, "parents": [{"sha": "47103f593f27e6ca260516deb9d01bd44b7a7e97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47103f593f27e6ca260516deb9d01bd44b7a7e97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47103f593f27e6ca260516deb9d01bd44b7a7e97"}], "stats": {"total": 400, "additions": 46, "deletions": 354}, "files": [{"sha": "62c152f37a5b195ec20d0dd0d05f16aa848eeba7", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/980310-2.C", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2F980310-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2F980310-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2F980310-2.C?ref=47103f593f27e6ca260516deb9d01bd44b7a7e97", "patch": "@@ -1,33 +0,0 @@\n-// float mismatch.  Abors on i586-pc-linux-gnulibc1 with egcs 1.0.1\n-// Should run smoothly. Aborts on i586-pc-linux-gnulibc1\n-// From: Max Lawson <mlawson@drfmc.ceng.cea.fr>\n-// Message-Id: <9803091022.AA07520@drfmc.ceng.cea.fr>\n-\n-#include <cstdlib>\n-\n-void f(double j, double& v)\n-{\n-  size_t sz = size_t(2*j+1);\n-  double norm_ = j*(j+1);\n-  double m = j;\n-  int sign_ = -1;\n-  for (size_t c=1;c<=sz;++c)\n-    for (size_t r=1;r<=sz;++r)\n-      if (r+sign_*1 == c)\n-        {\n-          double val = (norm_-m*(m+sign_));\n-          for (size_t k=1;k<2;++k) \n-            val *= (norm_ - (m+sign_*k)*(m+sign_*(k+1)));\n-          v = val;\n-        }\n-}\n-\n-int main()\n-{\n-  double v;\n-  f(1,v);\n-  if (v != 4) abort();\n-\n-  return 0;\n-}\n-"}, {"sha": "a8c2e1988a9c34df7e727d74c316827dfd00345c", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/980310-3.C", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2F980310-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2F980310-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2F980310-3.C?ref=47103f593f27e6ca260516deb9d01bd44b7a7e97", "patch": "@@ -1,42 +0,0 @@\n-// Bug: Segfaults on egcs 1.0.1 i586-pc-linux-glibc1\n-// From: Max Lawson <mlawson@drfmc.ceng.cea.fr>\n-// Message-Id: <9803091022.AA07520@drfmc.ceng.cea.fr>\n-\n-class S0\n-{\n-public:\n-\n-  S0() { };\n-\n-  virtual ~S0() { }\n-};\n-\n-\n-\n-struct S { };\n-class S1 : public S, public S0\n-{ \n-public:\n-\n-  S1() { }\n-};\n-\n-\n-void test_ptr(void *ctxt)\n-{\n-  S0 *ctxt1 = static_cast<S0*>(ctxt);\n-\n-  S1* ctxt2 = dynamic_cast<S1*>(ctxt1);\n-}\n-\n-\n-int main()\n-{\n-  S1 *ctxt = new S1();\n-\n-  test_ptr(ctxt);\n-\n-  return 0;\n-}\n-\n-"}, {"sha": "fdf73969230e983ed9e6df47e1867ed3cc542111", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb100.C", "status": "removed", "additions": 0, "deletions": 173, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb100.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb100.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb100.C?ref=47103f593f27e6ca260516deb9d01bd44b7a7e97", "patch": "@@ -1,173 +0,0 @@\n-// Special g++ Options: -Wall\n-\n-#include <list>\n-\n-template < class N, class A >\n-class Base\n-{\n-public:\n-    class NN : public N\n-    {\n-        friend Base<N,A>;\n-        friend ostream& operator<<(ostream &os, const NN& n)\n-        {\n-            n.print(os);\n-            return os;\n-        }\n-    public:\n-        void print(ostream &os) const\n-        {\n-            os << \"Base<N,A>::print()\" << endl;\n-            N::print(os);\n-        }\n-    };\n-\n-    typedef NN*                        NNPtr;\n-    typedef list<NNPtr>                NList;\n-    typedef NList::iterator            n_list_iter;\n-\n-    class n_iter : public n_list_iter \n-    {\n-        friend bool operator<(n_iter a, n_iter b)\n-        {\n-            return (a->ind() < b->ind());\n-        }\n-        friend bool operator>(n_iter a, n_iter b)\n-        {\n-            return (a->ind() > b->ind());\n-        }\n-\n-    public:\n-        n_iter() {}\n-        n_iter(n_list_iter i) : n_list_iter(i) {}\n-        \n-        NN& operator*()\n-            { return *n_list_iter::operator*();};\n-        NN* operator->() \n-            { return n_list_iter::operator*(); }\n-    };\n-private:\n-    NList    ns;\n-    n_iter new_n_aux(NN* nd)\n-    {\n-        ns.push_back(nd);\n-        n_iter  nodi = --ns.end();\n-        return (nodi);\n-    }\n-public:\n-    n_iter new_n()\n-    {\n-        return new_n_aux(new NN());\n-    }\n-    void del_n(n_iter itr) \n-    {\n-        NN* n = itr.operator->();\n-        ns.erase(itr);\n-        delete n;\n-    }\n-    n_iter           beg_n()          {   return (ns.begin()); }\n-    n_iter           end_n()          {   return (ns.end());   }\n-};\n-\n-template <class XN, class XA>\n-class YN : public XN\n-{\n-public:    \n-    YN() {};\n-    void print(ostream& os) const\n-    {\n-        os << \"YN<XN,XA>::print() \" << endl;\n-        XN::print(os);\n-    }\n-    friend ostream& operator<< (ostream& os, const YN& wn)\n-    {\n-        wn.print(os);\n-        return os;\n-    }\n-};\n-\n-template <class XN, class XA>\n-class YA : public XA\n-{\n-public:    \n-    YA() {};\n-    void print(ostream &os) const\n-    {\n-        os << \"YA<XN,XA>::print() \" << endl;\n-        XA::print(os);\n-    }\n-    \n-    friend ostream& operator<<(ostream& os, const YA &wa)\n-    {\n-        wa.print(os);\n-        return os;\n-    }\n-};\n-\n-\n-template<class XN, class XA>\n-class XBase : public Base< YN<XN, XA>, YA<XN, XA> >\n-{\n-public:\n-    typedef     Base< YN<XN,XA>, YA<XN,XA> >    Net;\n-    typedef     Net::n_iter          n_iter;\n-    XBase() {};\n-};\n-\n-\n-class MyClass\n-{\n-public:\n-  struct ZN\n-  {\n-    void print(ostream &os) const\n-      {\n-        os << \"MyClass::ZN::print()\" << endl;\n-      }\n-    inline friend ostream& operator<<(ostream& os, const MyClass::ZN& nd)\n-      {\n-        nd.print(os);\n-        return os;\n-      }\n-  };\n-  struct ZA\n-  {\n-    void print(ostream& os) const\n-      {\n-        os << \"MyClass::ZA::print()\" << endl;\n-      }\n-    inline friend ostream& operator<<(ostream& os, const MyClass::ZA& ar)\n-      {\n-        ar.print(os);\n-        return os;\n-      }\n-  };\n-\n-  typedef XBase<ZN,ZA>                    MyXBase;\n-  typedef MyXBase::n_iter                 my_n_iter;\n-  MyXBase                                 xbase;\n-};\n-\n-main ()\n-{\n-  MyClass mine;\n-  MyClass::my_n_iter  n1, n2, n3, n4;\n-\n-  n1 = mine.xbase.new_n();\n-  n2 = mine.xbase.new_n();\n-  n3 = mine.xbase.new_n();\n-  n4 = mine.xbase.new_n();\n-  \n-  cout << *n1 << endl;\n-  cout << *n2 << endl;\n-  cout << *n3 << endl;\n-  cout << *n4 << endl;\n-  \n-  mine.xbase.del_n(n1);\n-  mine.xbase.del_n(n2);\n-  mine.xbase.del_n(n3);\n-  mine.xbase.del_n(n4);\n-}\n-\n-\n-"}, {"sha": "492abb8bb386662203fb1a1b8ab22ba2deb016ae", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb117.C", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb117.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb117.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb117.C?ref=47103f593f27e6ca260516deb9d01bd44b7a7e97", "patch": "@@ -1,26 +0,0 @@\n-#include <stdio.h>\n-#include <assert.h>\n-\n-struct F {\n-  int i;\n-};\n-\n-F f;\n-\n-int main( int, char** ) {\n-\n-  int F:: *of;\n-  int *i = (int *) &of;\n-  of = &F::i;\n-\n-  F *b = ((F*) ((int) &f.i - *i));\n-  F *a = &f;\n-\n-\n-  printf(\"%d\\n\", a-b);\n-  printf(\"%d\\n\", b-a);\n-\n-  assert( (a-b) == -(b-a) );    // will fail with egcs-1.0\n-\n-  return 0;\n-}"}, {"sha": "456615d67c518059363e047af9fd25a5ece5c667", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb121.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C?ref=122d34f62660c230a978966d1c233e0bd53ded36", "patch": "@@ -3,7 +3,7 @@ class A {\n private:\n   int i1_;\n public:\n-  void f(int const i1 = 1); // ERROR -\n+  void f(int const i1 = 1); // ERROR - previous specification\n };\n \n void\n@@ -19,4 +19,3 @@ main()\n   a.f();\n   return 0;\n }\n-"}, {"sha": "cf5f69fc1a6f3aab3a40af01bc970f6a50d8adbf", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb127.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb127.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb127.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb127.C?ref=122d34f62660c230a978966d1c233e0bd53ded36", "patch": "@@ -1,3 +1,5 @@\n+// Gets ICE 40.\n+\n #include <vector>\n #include<string>\n "}, {"sha": "8e0d0f85ea0977b2407358f6eab349962bc705d6", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb26.C", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb26.C?ref=122d34f62660c230a978966d1c233e0bd53ded36", "patch": "@@ -6,18 +6,23 @@\n \n class foo\n {\n+public:\n+  static int f();\n+  class bar {\n+    friend int foo::f();\n+//  friend int f();\n+    static int x;\n   public:\n-   static int f();\n-   class bar {\n-     friend int foo::f();\n-//     friend int f();\n-     static int x;\n-     public:\n-     static int f() {return foo::f();};\n+    static int f() {return foo::f();};\n    };\n };\n \n int foo::f() {\n-   return bar::x;\n+  return bar::x;\n }\n \n+int\n+main ()\n+{\n+  return foo::bar::f ();\n+}"}, {"sha": "d85ed38c7f206230669ee82eebb65eb0a1183844", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb27.C", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C?ref=122d34f62660c230a978966d1c233e0bd53ded36", "patch": "@@ -2,9 +2,13 @@\n /* simple program to demonstrate the bug with named return values in gcc\n */\n /* (w) 4.9.97 by Kurt Garloff <K.Garloff@ping.de> */\n+// Special g++ Options:\n \n #include <iostream.h>\n \n+template <class T> class test;\n+template <class T> test<T> operator + (const test<T>& a, const test<T>& b);\n+\n // A simple numerical class\n template <class T>\n class test\n@@ -14,29 +18,19 @@ class test\n    test ()  { elem = 0; };\n    test (const T& a)  { elem = a; };\n    test<T>& operator += (const test<T>& a)  { elem += a.elem; return *this; };\n-   friend test<T> operator + (const test<T>&, const test<T>&);\n+   friend test<T> operator + <> (const test<T>&, const test<T>&);\n    friend ostream& operator << (ostream& os, const test<T>& a)\n      { return os << a.elem; };\n };\n \n-#ifndef NOBUG\n // named return value version\n template <class T>\n test<T> operator + (const test<T>& a, const test<T>& b) return c(a);\n { c += b; };\n \n-#else\n-// equiv. version without named ret val\n-template <class T>\n-test<T> operator + (const test<T>& a, const test<T>& b)\n-{ test<T> c(a); c += b; return c; };\n-\n-#endif\n-\n int main()\n {\n    test<int> x, y;\n    x += 5; cout << x << endl;\n-   y = x + 2; cout << y << endl;\n+   y = x + test<int>(2); cout << y << endl;\n }\n-"}, {"sha": "542cbebc6ac88083133374c95b4b4e77a2cca54b", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb36.C", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb36.C?ref=122d34f62660c230a978966d1c233e0bd53ded36", "patch": "@@ -1,15 +1,19 @@\n-  #include <vector>\n+// Build don't link:\n \n-  template <typename T=float> class foo {\n-  public:\n-    foo();\n-    foo(vector<int> v);\n-  private:\n-    vector<int> v;\n-    T t;\n-  };\n+#include <vector>\n \n-  template <typename T=float> foo<T>::foo()               :v(),   t() {}\n-  template <typename T=float> foo<T>::foo(vector<int> v_) :v(v_), t() {}\n+template <typename T=float> class foo {\n+public:\n+  foo();\n+  foo(vector<int> v);\n+private:\n+  vector<int> v;\n+  T t;\n+};\n \n-  foo<float> a;\n+template <typename T>\n+foo<T>::foo()               :v(),   t() {}\n+template <typename T=float>\t// ERROR - default parm for member template\n+foo<T>::foo(vector<int> v_) :v(v_), t() {}\n+\n+foo<float> a;"}, {"sha": "2529fef9dd57d446e5f43d2697eb0be1c8467840", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb40.C", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb40.C?ref=47103f593f27e6ca260516deb9d01bd44b7a7e97", "patch": "@@ -1,7 +0,0 @@\n-#include <complex>\n-\n-void foo() {\n-    complex<double> x(0, 0);\n-    complex<double> y = 1.0 + x;   // OK\n-    complex<double> z = 1 + x;     // line 6: <<<< 1 doesn't match double\n-}"}, {"sha": "63a6de0a21fcc62c94868c0e7d5407fcb8e1d861", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb70.C", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb70.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb70.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb70.C?ref=122d34f62660c230a978966d1c233e0bd53ded36", "patch": "@@ -1,4 +1,6 @@\n-// Build don't link:  \n+// conversion ops should be treated as coming from the most derived class\n+// for overload resolution.  See [over.match.funcs].\n+// Build don't link:\n \n class X {\n public:\n@@ -11,7 +13,6 @@ private:\n };\n \n \n-void f(Y const& y) {\n-  if( bool(y) ) {\n-  }\n+int f(Y const& y) {\n+  return bool(y);\n }"}, {"sha": "fbdf507955463f39f695f9f29677e3dc11ced406", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb72.C", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb72.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb72.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb72.C?ref=47103f593f27e6ca260516deb9d01bd44b7a7e97", "patch": "@@ -1,16 +0,0 @@\n-#include <vector>\n-\n-template <class T>\n-class TPROGRAM\n-    {\n-    typedef vector< T > ITEMS;\n-\n-    class const_iterator\n-        {\n-        /*typename*/ ITEMS::const_iterator i;\n-\n-        const_iterator(const /*typename*/ ITEMS::const_iterator i2) {\n-            i=i2;\n-            }\n-        };\n-    };"}, {"sha": "61920c592be39211ef2613253b6b35c7c76986d7", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb76.C", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb76.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122d34f62660c230a978966d1c233e0bd53ded36/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb76.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb76.C?ref=122d34f62660c230a978966d1c233e0bd53ded36", "patch": "@@ -1,9 +1,7 @@\n //Build don't link:\n-// from include/g++/stl_relops.h\n-template <class T>\n-inline bool operator!=(const T& x, const T& y) {\n-  return !(x == y);\n-}\n+// the template operator!= interferes.  It should be in a namespace.\n+\n+#include <utility>\n \n enum T {\n   V1"}, {"sha": "840b2d877e6d3c8d2cc8cff8feda01cf0bca3525", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb96.C", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb96.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47103f593f27e6ca260516deb9d01bd44b7a7e97/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb96.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb96.C?ref=47103f593f27e6ca260516deb9d01bd44b7a7e97", "patch": "@@ -1,14 +0,0 @@\n-class foo\n-{\n-  public:\n-   static int f();\n-\n-   class bar {\n-     friend int foo::f();\n-   };\n-};\n-\n-int main()\n-{\n-   return 0;\n-}"}]}