{"sha": "0e1638d4c381e1a977ee996df989e621c5ab37b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUxNjM4ZDRjMzgxZTFhOTc3ZWU5OTZkZjk4OWU2MjFjNWFiMzdiNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-11-26T10:38:27Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-11-26T10:38:27Z"}, "message": "sparc.c (sparc_absnegfloat_split_legitimate): Do not call alter_subreg.\n\n\t* sparc.c (sparc_absnegfloat_split_legitimate): Do not call\n\talter_subreg.\n\t* sparc.md (post-reload splitters): Do not call alter_subreg.\n\t* cfgrtl.c (purge_dead_edges): Fix typo in previous fix.\n\nFrom-SVN: r47339", "tree": {"sha": "798ba0790c5fb26172fae5eae64aab41c519949e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/798ba0790c5fb26172fae5eae64aab41c519949e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e1638d4c381e1a977ee996df989e621c5ab37b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1638d4c381e1a977ee996df989e621c5ab37b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e1638d4c381e1a977ee996df989e621c5ab37b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1638d4c381e1a977ee996df989e621c5ab37b6/comments", "author": null, "committer": null, "parents": [{"sha": "78b583fed8b7f8047020113bedea5e0dac25b033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b583fed8b7f8047020113bedea5e0dac25b033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b583fed8b7f8047020113bedea5e0dac25b033"}], "stats": {"total": 115, "additions": 18, "deletions": 97}, "files": [{"sha": "1113304a50c94df5b4eab448394c0f8aadd52928", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1638d4c381e1a977ee996df989e621c5ab37b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1638d4c381e1a977ee996df989e621c5ab37b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e1638d4c381e1a977ee996df989e621c5ab37b6", "patch": "@@ -1,3 +1,10 @@\n+Mon Nov 26 11:36:20 CET 2001 Jan Hubicka  <jh@suse.cz>\n+\n+\t* sparc.c (sparc_absnegfloat_split_legitimate): Do not call\n+\talter_subreg.\n+\t* sparc.md (post-reload splitters): Do not call alter_subreg.\n+\t* cfgrtl.c (purge_dead_edges): Fix typo in previous fix.\n+\n 2001-11-25  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* regclass.c (choose_hard_reg_mode): Handle vector arguments."}, {"sha": "9313e1cfc29b3ba5f8b9dab8cc31a2bd8503ca5c", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1638d4c381e1a977ee996df989e621c5ab37b6/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1638d4c381e1a977ee996df989e621c5ab37b6/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=0e1638d4c381e1a977ee996df989e621c5ab37b6", "patch": "@@ -1841,7 +1841,7 @@ purge_dead_edges (bb)\n \t  /* Avoid abnormal flags to leak from computed jumps turned\n \t     into simplejumps.  */\n  \n-\t  e->flags &= EDGE_ABNORMAL;\n+\t  e->flags &= ~EDGE_ABNORMAL;\n \n \t  /* Check purposes we can have edge.  */\n \t  if ((e->flags & EDGE_FALLTHRU)"}, {"sha": "6d5f8bb4e3eec0895b90b0abcc9e52fd402d8d3b", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1638d4c381e1a977ee996df989e621c5ab37b6/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1638d4c381e1a977ee996df989e621c5ab37b6/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=0e1638d4c381e1a977ee996df989e621c5ab37b6", "patch": "@@ -5605,12 +5605,8 @@ int\n sparc_absnegfloat_split_legitimate (x, y)\n      rtx x, y;\n {\n-  if (GET_CODE (x) == SUBREG)\n-    x = alter_subreg (x);\n   if (GET_CODE (x) != REG)\n     return 0;\n-  if (GET_CODE (y) == SUBREG)\n-    y = alter_subreg (y);\n   if (GET_CODE (y) != REG)\n     return 0;\n   if (REGNO (x) == REGNO (y))"}, {"sha": "516453fc3e6dd16894fa9a204f4bc734754f47c2", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 10, "deletions": 92, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1638d4c381e1a977ee996df989e621c5ab37b6/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1638d4c381e1a977ee996df989e621c5ab37b6/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=0e1638d4c381e1a977ee996df989e621c5ab37b6", "patch": "@@ -2798,11 +2798,6 @@\n   rtx dest1, dest2;\n   rtx src1, src2;\n \n-  if (GET_CODE (set_dest) == SUBREG)\n-    set_dest = alter_subreg (set_dest);\n-  if (GET_CODE (set_src) == SUBREG)\n-    set_src = alter_subreg (set_src);\n-\n   dest1 = gen_highpart (SImode, set_dest);\n   dest2 = gen_lowpart (SImode, set_dest);\n   src1 = gen_highpart (SImode, set_src);\n@@ -3366,8 +3361,6 @@\n \n   REAL_VALUE_FROM_CONST_DOUBLE (r, operands[1]);\n   REAL_VALUE_TO_TARGET_DOUBLE (r, l);\n-  if (GET_CODE (operands[0]) == SUBREG)\n-    operands[0] = alter_subreg (operands[0]);\n   operands[0] = gen_rtx_raw_REG (DImode, REGNO (operands[0]));\n \n   if (TARGET_ARCH64)\n@@ -3430,11 +3423,6 @@\n   rtx dest1, dest2;\n   rtx src1, src2;\n \n-  if (GET_CODE (set_dest) == SUBREG)\n-    set_dest = alter_subreg (set_dest);\n-  if (GET_CODE (set_src) == SUBREG)\n-    set_src = alter_subreg (set_src);\n-\n   dest1 = gen_highpart (SFmode, set_dest);\n   dest2 = gen_lowpart (SFmode, set_dest);\n   src1 = gen_highpart (SFmode, set_src);\n@@ -3469,9 +3457,6 @@\n   rtx word0 = adjust_address (operands[1], SFmode, 0);\n   rtx word1 = adjust_address (operands[1], SFmode, 4);\n \n-  if (GET_CODE (operands[0]) == SUBREG)\n-    operands[0] = alter_subreg (operands[0]);\n-\n   if (reg_overlap_mentioned_p (gen_highpart (SFmode, operands[0]), word1))\n     {\n       emit_insn (gen_movsf (gen_lowpart (SFmode, operands[0]),\n@@ -3503,8 +3488,6 @@\n   rtx word0 = adjust_address (operands[0], SFmode, 0);\n   rtx word1 = adjust_address (operands[0], SFmode, 4);\n \n-  if (GET_CODE (operands[1]) == SUBREG)\n-    operands[1] = alter_subreg (operands[1]);\n   emit_insn (gen_movsf (word0,\n \t\t\tgen_highpart (SFmode, operands[1])));\n   emit_insn (gen_movsf (word1,\n@@ -3549,8 +3532,6 @@\n   rtx set_dest = operands[0];\n   rtx dest1, dest2;\n \n-  if (GET_CODE (set_dest) == SUBREG)\n-    set_dest = alter_subreg (set_dest);\n   dest1 = gen_highpart (SFmode, set_dest);\n   dest2 = gen_lowpart (SFmode, set_dest);\n   emit_insn (gen_movsf (dest1, CONST0_RTX (SFmode)));\n@@ -3754,11 +3735,6 @@\n   rtx dest1, dest2;\n   rtx src1, src2;\n \n-  if (GET_CODE (set_dest) == SUBREG)\n-    set_dest = alter_subreg (set_dest);\n-  if (GET_CODE (set_src) == SUBREG)\n-    set_src = alter_subreg (set_src);\n-\n   dest1 = gen_df_reg (set_dest, 0);\n   dest2 = gen_df_reg (set_dest, 1);\n   src1 = gen_df_reg (set_src, 0);\n@@ -3791,9 +3767,6 @@\n \n   switch (GET_CODE (set_dest))\n     {\n-    case SUBREG:\n-      set_dest = alter_subreg (set_dest);\n-      /* FALLTHROUGH */\n     case REG:\n       dest1 = gen_df_reg (set_dest, 0);\n       dest2 = gen_df_reg (set_dest, 1);\n@@ -3824,8 +3797,6 @@\n   rtx set_dest, dest1, dest2;\n \n   set_dest = operands[0];\n-  if (GET_CODE (set_dest) == SUBREG)\n-    set_dest = alter_subreg (set_dest);\n \n   dest1 = gen_df_reg (set_dest, 0);\n   dest2 = gen_df_reg (set_dest, 1);\n@@ -3855,8 +3826,6 @@\n   \"\n {\n   rtx set_src = operands[1];\n-  if (GET_CODE (set_src) == SUBREG)\n-    set_src = alter_subreg (set_src);\n \n   emit_insn (gen_movdf (adjust_address (operands[0], DFmode, 0),\n \t\t\tgen_df_reg (set_src, 0)));\n@@ -4214,13 +4183,6 @@\n   rtx dest1, dest2;\n   rtx srca1, srca2, srcb1, srcb2;\n \n-  if (GET_CODE (set_dest) == SUBREG)\n-    set_dest = alter_subreg (set_dest);\n-  if (GET_CODE (set_srca) == SUBREG)\n-    set_srca = alter_subreg (set_srca);\n-  if (GET_CODE (set_srcb) == SUBREG)\n-    set_srcb = alter_subreg (set_srcb);\n-\n   dest1 = gen_df_reg (set_dest, 0);\n   dest2 = gen_df_reg (set_dest, 1);\n   srca1 = gen_df_reg (set_srca, 0);\n@@ -4379,13 +4341,6 @@\n   rtx dest1, dest2;\n   rtx srca1, srca2, srcb1, srcb2;\n \n-  if (GET_CODE (set_dest) == SUBREG)\n-    set_dest = alter_subreg (set_dest);\n-  if (GET_CODE (set_srca) == SUBREG)\n-    set_srca = alter_subreg (set_srca);\n-  if (GET_CODE (set_srcb) == SUBREG)\n-    set_srcb = alter_subreg (set_srcb);\n-\n   dest1 = gen_df_reg (set_dest, 0);\n   dest2 = gen_df_reg (set_dest, 1);\n   srca1 = gen_df_reg (set_srca, 0);\n@@ -4558,9 +4513,6 @@\n {\n   rtx dest1, dest2;\n \n-  if (GET_CODE (operands[0]) == SUBREG)\n-    operands[0] = alter_subreg (operands[0]);\n-\n   dest1 = gen_highpart (SImode, operands[0]);\n   dest2 = gen_lowpart (SImode, operands[0]);\n \n@@ -6617,8 +6569,6 @@\n    (set (match_dup 5) (match_op_dup:SI 1 [(match_dup 7) (match_dup 9)]))]\n   \"\n {\n-  if (GET_CODE (operands[0]) == SUBREG)\n-    operands[0] = alter_subreg (operands[0]);\n   operands[4] = gen_highpart (SImode, operands[0]);\n   operands[5] = gen_lowpart (SImode, operands[0]);\n   operands[6] = gen_highpart (SImode, operands[2]);\n@@ -6662,9 +6612,7 @@\n            && REGNO (SUBREG_REG (operands[0])) < 32))\"\n   [(set (match_dup 3) (and:SI (not:SI (match_dup 4)) (match_dup 5)))\n    (set (match_dup 6) (and:SI (not:SI (match_dup 7)) (match_dup 8)))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   operands[3] = gen_highpart (SImode, operands[0]);\n+  \"operands[3] = gen_highpart (SImode, operands[0]);\n    operands[4] = gen_highpart (SImode, operands[1]);\n    operands[5] = gen_highpart (SImode, operands[2]);\n    operands[6] = gen_lowpart (SImode, operands[0]);\n@@ -6772,9 +6720,7 @@\n            && REGNO (SUBREG_REG (operands[0])) < 32))\"\n   [(set (match_dup 3) (ior:SI (not:SI (match_dup 4)) (match_dup 5)))\n    (set (match_dup 6) (ior:SI (not:SI (match_dup 7)) (match_dup 8)))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   operands[3] = gen_highpart (SImode, operands[0]);\n+  \"operands[3] = gen_highpart (SImode, operands[0]);\n    operands[4] = gen_highpart (SImode, operands[1]);\n    operands[5] = gen_highpart (SImode, operands[2]);\n    operands[6] = gen_lowpart (SImode, operands[0]);\n@@ -6907,9 +6853,7 @@\n            && REGNO (SUBREG_REG (operands[0])) < 32))\"\n   [(set (match_dup 3) (not:SI (xor:SI (match_dup 4) (match_dup 5))))\n    (set (match_dup 6) (not:SI (xor:SI (match_dup 7) (match_dup 8))))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   operands[3] = gen_highpart (SImode, operands[0]);\n+  \"operands[3] = gen_highpart (SImode, operands[0]);\n    operands[4] = gen_highpart (SImode, operands[1]);\n    operands[5] = gen_highpart (SImode, operands[2]);\n    operands[6] = gen_lowpart (SImode, operands[0]);\n@@ -7209,9 +7153,7 @@\n            && REGNO (SUBREG_REG (operands[0])) < 32))\"\n   [(set (match_dup 2) (not:SI (xor:SI (match_dup 3) (const_int 0))))\n    (set (match_dup 4) (not:SI (xor:SI (match_dup 5) (const_int 0))))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   operands[2] = gen_highpart (SImode, operands[0]);\n+  \"operands[2] = gen_highpart (SImode, operands[0]);\n    operands[3] = gen_highpart (SImode, operands[1]);\n    operands[4] = gen_lowpart (SImode, operands[0]);\n    operands[5] = gen_lowpart (SImode, operands[1]);\")\n@@ -7587,11 +7529,7 @@\n   [(set (match_dup 2) (neg:SF (match_dup 3)))\n    (set (match_dup 4) (match_dup 5))\n    (set (match_dup 6) (match_dup 7))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   if (GET_CODE (operands[1]) == SUBREG)\n-     operands[1] = alter_subreg (operands[1]);\n-   operands[2] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]));\n+  \"operands[2] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]));\n    operands[3] = gen_rtx_raw_REG (SFmode, REGNO (operands[1]));\n    operands[4] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]) + 1);\n    operands[5] = gen_rtx_raw_REG (SFmode, REGNO (operands[1]) + 1);\n@@ -7619,11 +7557,7 @@\n    && sparc_absnegfloat_split_legitimate (operands[0], operands[1])\"\n   [(set (match_dup 2) (neg:DF (match_dup 3)))\n    (set (match_dup 4) (match_dup 5))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   if (GET_CODE (operands[1]) == SUBREG)\n-     operands[1] = alter_subreg (operands[1]);\n-   operands[2] = gen_rtx_raw_REG (DFmode, REGNO (operands[0]));\n+  \"operands[2] = gen_rtx_raw_REG (DFmode, REGNO (operands[0]));\n    operands[3] = gen_rtx_raw_REG (DFmode, REGNO (operands[1]));\n    operands[4] = gen_rtx_raw_REG (DFmode, REGNO (operands[0]) + 2);\n    operands[5] = gen_rtx_raw_REG (DFmode, REGNO (operands[1]) + 2);\")\n@@ -7653,11 +7587,7 @@\n    && sparc_absnegfloat_split_legitimate (operands[0], operands[1])\"\n   [(set (match_dup 2) (neg:SF (match_dup 3)))\n    (set (match_dup 4) (match_dup 5))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   if (GET_CODE (operands[1]) == SUBREG)\n-     operands[1] = alter_subreg (operands[1]);\n-   operands[2] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]));\n+  \"operands[2] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]));\n    operands[3] = gen_rtx_raw_REG (SFmode, REGNO (operands[1]));\n    operands[4] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]) + 1);\n    operands[5] = gen_rtx_raw_REG (SFmode, REGNO (operands[1]) + 1);\")\n@@ -7704,11 +7634,7 @@\n   [(set (match_dup 2) (abs:SF (match_dup 3)))\n    (set (match_dup 4) (match_dup 5))\n    (set (match_dup 6) (match_dup 7))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   if (GET_CODE (operands[1]) == SUBREG)\n-     operands[1] = alter_subreg (operands[1]);\n-   operands[2] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]));\n+  \"operands[2] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]));\n    operands[3] = gen_rtx_raw_REG (SFmode, REGNO (operands[1]));\n    operands[4] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]) + 1);\n    operands[5] = gen_rtx_raw_REG (SFmode, REGNO (operands[1]) + 1);\n@@ -7745,11 +7671,7 @@\n    && sparc_absnegfloat_split_legitimate (operands[0], operands[1])\"\n   [(set (match_dup 2) (abs:DF (match_dup 3)))\n    (set (match_dup 4) (match_dup 5))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   if (GET_CODE (operands[1]) == SUBREG)\n-     operands[1] = alter_subreg (operands[1]);\n-   operands[2] = gen_rtx_raw_REG (DFmode, REGNO (operands[0]));\n+  \"operands[2] = gen_rtx_raw_REG (DFmode, REGNO (operands[0]));\n    operands[3] = gen_rtx_raw_REG (DFmode, REGNO (operands[1]));\n    operands[4] = gen_rtx_raw_REG (DFmode, REGNO (operands[0]) + 2);\n    operands[5] = gen_rtx_raw_REG (DFmode, REGNO (operands[1]) + 2);\")\n@@ -7779,11 +7701,7 @@\n    && sparc_absnegfloat_split_legitimate (operands[0], operands[1])\"\n   [(set (match_dup 2) (abs:SF (match_dup 3)))\n    (set (match_dup 4) (match_dup 5))]\n-  \"if (GET_CODE (operands[0]) == SUBREG)\n-     operands[0] = alter_subreg (operands[0]);\n-   if (GET_CODE (operands[1]) == SUBREG)\n-     operands[1] = alter_subreg (operands[1]);\n-   operands[2] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]));\n+  \"operands[2] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]));\n    operands[3] = gen_rtx_raw_REG (SFmode, REGNO (operands[1]));\n    operands[4] = gen_rtx_raw_REG (SFmode, REGNO (operands[0]) + 1);\n    operands[5] = gen_rtx_raw_REG (SFmode, REGNO (operands[1]) + 1);\")"}]}