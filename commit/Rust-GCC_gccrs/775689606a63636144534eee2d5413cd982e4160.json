{"sha": "775689606a63636144534eee2d5413cd982e4160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc1Njg5NjA2YTYzNjM2MTQ0NTM0ZWVlMmQ1NDEzY2Q5ODJlNDE2MA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-10-18T19:29:52Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-10-18T19:29:52Z"}, "message": "re PR middle-end/15014 (labels after are removed even though they are used)\n\n2004-10-18  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/15014\n        PR middle-end/16973\n        * tree-cfg.c (remove_bb): If we have a label expression in the\n        basic block and the label we have taken the address, move the\n        label expression to the basic block which is previous in the\n        linked list.\n        (tree_verify_flow_info): Fix printing out the label name of the\n        problematic label expression.\n\nFrom-SVN: r89237", "tree": {"sha": "58381d3964d9ab537f1b3178658796b5077670aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58381d3964d9ab537f1b3178658796b5077670aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/775689606a63636144534eee2d5413cd982e4160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775689606a63636144534eee2d5413cd982e4160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/775689606a63636144534eee2d5413cd982e4160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775689606a63636144534eee2d5413cd982e4160/comments", "author": null, "committer": null, "parents": [{"sha": "b1c79b464fd417242f70360ebde8d3a551470a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c79b464fd417242f70360ebde8d3a551470a97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c79b464fd417242f70360ebde8d3a551470a97"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "089ae2b2bb5917d1999e85ba74e0956f0092de8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/775689606a63636144534eee2d5413cd982e4160/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/775689606a63636144534eee2d5413cd982e4160/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=775689606a63636144534eee2d5413cd982e4160", "patch": "@@ -1,3 +1,14 @@\n+2004-10-18  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/15014\n+\tPR middle-end/16973\n+\t* tree-cfg.c (remove_bb): If we have a label expression in the\n+\tbasic block and the label we have taken the address, move the\n+\tlabel expression to the basic block which is previous in the\n+\tlinked list.\n+\t(tree_verify_flow_info): Fix printing out the label name of the\n+\tproblematic label expression.\n+\n 2004-10-18  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR rtl-optimization/18002"}, {"sha": "149be9515a2bbc8f4d4e8dbc559b188f315f5f2d", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/775689606a63636144534eee2d5413cd982e4160/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/775689606a63636144534eee2d5413cd982e4160/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=775689606a63636144534eee2d5413cd982e4160", "patch": "@@ -1810,12 +1810,25 @@ remove_bb (basic_block bb)\n     }\n \n   /* Remove all the instructions in the block.  */\n-  for (i = bsi_start (bb); !bsi_end_p (i); bsi_remove (&i))\n+  for (i = bsi_start (bb); !bsi_end_p (i);)\n     {\n       tree stmt = bsi_stmt (i);\n-      release_defs (stmt);\n+      if (TREE_CODE (stmt) == LABEL_EXPR\n+          && FORCED_LABEL (LABEL_EXPR_LABEL (stmt)))\n+\t{\n+\t  basic_block new_bb = bb->prev_bb;\n+\t  block_stmt_iterator new_bsi = bsi_after_labels (new_bb);\n+\t  \t  \n+\t  bsi_remove (&i);\n+\t  bsi_insert_after (&new_bsi, stmt, BSI_NEW_STMT);\n+\t}\n+      else\n+        {\n+\t  release_defs (stmt);\n \n-      set_bb_for_stmt (stmt, NULL);\n+\t  set_bb_for_stmt (stmt, NULL);\n+\t  bsi_remove (&i);\n+\t}\n \n       /* Don't warn for removed gotos.  Gotos are often removed due to\n \t jump threading, thus resulting in bogus warnings.  Not great,\n@@ -3403,17 +3416,19 @@ tree_verify_flow_info (void)\n \n \t  if (label_to_block (LABEL_EXPR_LABEL (bsi_stmt (bsi))) != bb)\n \t    {\n+\t      tree stmt = bsi_stmt (bsi);\n \t      error (\"Label %s to block does not match in bb %d\\n\",\n-\t\t     IDENTIFIER_POINTER (DECL_NAME (bsi_stmt (bsi))),\n+\t\t     IDENTIFIER_POINTER (DECL_NAME (LABEL_EXPR_LABEL (stmt))),\n \t\t     bb->index);\n \t      err = 1;\n \t    }\n \n \t  if (decl_function_context (LABEL_EXPR_LABEL (bsi_stmt (bsi)))\n \t      != current_function_decl)\n \t    {\n+\t      tree stmt = bsi_stmt (bsi);\n \t      error (\"Label %s has incorrect context in bb %d\\n\",\n-\t\t     IDENTIFIER_POINTER (DECL_NAME (bsi_stmt (bsi))),\n+\t\t     IDENTIFIER_POINTER (DECL_NAME (LABEL_EXPR_LABEL (stmt))),\n \t\t     bb->index);\n \t      err = 1;\n \t    }"}]}