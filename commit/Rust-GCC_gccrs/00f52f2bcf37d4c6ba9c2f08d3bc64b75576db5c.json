{"sha": "00f52f2bcf37d4c6ba9c2f08d3bc64b75576db5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBmNTJmMmJjZjM3ZDRjNmJhOWMyZjA4ZDNiYzY0Yjc1NTc2ZGI1Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-02T12:00:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-02T12:00:18Z"}, "message": "(secondary_reload_class): Kernel regs are in same class as user regs.\n\nFrom-SVN: r6176", "tree": {"sha": "cb8b0374b9b9cd56da8ed125bc89966c24ca5c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb8b0374b9b9cd56da8ed125bc89966c24ca5c61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00f52f2bcf37d4c6ba9c2f08d3bc64b75576db5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00f52f2bcf37d4c6ba9c2f08d3bc64b75576db5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00f52f2bcf37d4c6ba9c2f08d3bc64b75576db5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00f52f2bcf37d4c6ba9c2f08d3bc64b75576db5c/comments", "author": null, "committer": null, "parents": [{"sha": "b80d1946f8bfd4fb32f19709146d8fac1759e2f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b80d1946f8bfd4fb32f19709146d8fac1759e2f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b80d1946f8bfd4fb32f19709146d8fac1759e2f8"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "350b10bbe2352944fe15d801eea7b0a1c40ceeeb", "filename": "gcc/config/a29k/a29k.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f52f2bcf37d4c6ba9c2f08d3bc64b75576db5c/gcc%2Fconfig%2Fa29k%2Fa29k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f52f2bcf37d4c6ba9c2f08d3bc64b75576db5c/gcc%2Fconfig%2Fa29k%2Fa29k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.c?ref=00f52f2bcf37d4c6ba9c2f08d3bc64b75576db5c", "patch": "@@ -742,7 +742,10 @@ secondary_reload_class (class, mode, in)\n \n   /* Otherwise, we can place anything into GENERAL_REGS and can put\n      GENERAL_REGS into anything.  */\n-  if (class == GENERAL_REGS || (regno != -1 && regno < R_BP))\n+  if (class == GENERAL_REGS\n+      || (regno != -1\n+\t  && (regno < R_BP\n+\t      || (regno >= R_KR (0) && regno <= R_KR (31)))))\n     return NO_REGS;\n \n   /* We can place 16-bit constants into a special register.  */"}]}