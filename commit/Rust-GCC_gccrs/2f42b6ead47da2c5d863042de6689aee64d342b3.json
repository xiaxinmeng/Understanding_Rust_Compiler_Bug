{"sha": "2f42b6ead47da2c5d863042de6689aee64d342b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY0MmI2ZWFkNDdkYTJjNWQ4NjMwNDJkZTY2ODlhZWU2NGQzNDJiMw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-12-11T11:12:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:12:16Z"}, "message": "[Ada] Crash on misplaced First operation for GNAT iterable type\n\nThis patch improves the handling of an improper declaaration of aspect\nFirst for a GNAT-defined iterable type,\n\n2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_util.adb (Get_Actual_Subtype): Function can return type\n\tmark.\n\t(Get_Cursor_Type): Improve recovery and error message on a\n\tmisplaced First aspect for an iterable type.\n\ngcc/testsuite/\n\n\t* gnat.dg/iter4.adb: New testcase.\n\nFrom-SVN: r267013", "tree": {"sha": "4b060a6eb32f2e547780008fcbf8b8a096c468d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b060a6eb32f2e547780008fcbf8b8a096c468d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f42b6ead47da2c5d863042de6689aee64d342b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f42b6ead47da2c5d863042de6689aee64d342b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f42b6ead47da2c5d863042de6689aee64d342b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f42b6ead47da2c5d863042de6689aee64d342b3/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "155f4f34d1f2e1d6ea4e82104f57be3d6eab78b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155f4f34d1f2e1d6ea4e82104f57be3d6eab78b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155f4f34d1f2e1d6ea4e82104f57be3d6eab78b2"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "59d0a3f76aaabbf15f36b11958a8cefabf93b696", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f42b6ead47da2c5d863042de6689aee64d342b3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f42b6ead47da2c5d863042de6689aee64d342b3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2f42b6ead47da2c5d863042de6689aee64d342b3", "patch": "@@ -1,3 +1,10 @@\n+2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Get_Actual_Subtype): Function can return type\n+\tmark.\n+\t(Get_Cursor_Type): Improve recovery and error message on a\n+\tmisplaced First aspect for an iterable type.\n+\n 2018-12-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* checks.adb: Add with and use clauses for Sem_Mech."}, {"sha": "afb0b71341f62d25df64be55824dc47da530f2d6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f42b6ead47da2c5d863042de6689aee64d342b3/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f42b6ead47da2c5d863042de6689aee64d342b3/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2f42b6ead47da2c5d863042de6689aee64d342b3", "patch": "@@ -9049,6 +9049,13 @@ package body Sem_Util is\n \n          else\n             Decl := Build_Actual_Subtype (Typ, N);\n+\n+            --  The call may yield a declaration, or just return the entity\n+\n+            if Decl = Typ then\n+               return Typ;\n+            end if;\n+\n             Atyp := Defining_Identifier (Decl);\n \n             --  If Build_Actual_Subtype generated a new declaration then use it\n@@ -9162,6 +9169,9 @@ package body Sem_Util is\n       if First_Op = Any_Id then\n          Error_Msg_N (\"aspect Iterable must specify First operation\", Aspect);\n          return Any_Type;\n+\n+      elsif not Analyzed (First_Op) then\n+         Analyze (First_Op);\n       end if;\n \n       Cursor := Any_Type;\n@@ -9195,7 +9205,8 @@ package body Sem_Util is\n \n       if Cursor = Any_Type then\n          Error_Msg_N\n-           (\"No legal primitive operation First for Iterable type\", Aspect);\n+           (\"primitive operation for Iterable type must appear \"\n+             & \"in the same list of declarations as the type\", Aspect);\n       end if;\n \n       return Cursor;"}, {"sha": "61f1e31f9a10554a3540867a2bbeb86678c91f69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f42b6ead47da2c5d863042de6689aee64d342b3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f42b6ead47da2c5d863042de6689aee64d342b3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f42b6ead47da2c5d863042de6689aee64d342b3", "patch": "@@ -1,3 +1,7 @@\n+2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/iter4.adb: New testcase.\n+\n 2018-12-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/valid4.adb, gnat.dg/valid4_pkg.adb,"}, {"sha": "27293ebd8c9492de350ea80bf4f9929fdd917047", "filename": "gcc/testsuite/gnat.dg/iter4.adb", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f42b6ead47da2c5d863042de6689aee64d342b3/gcc%2Ftestsuite%2Fgnat.dg%2Fiter4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f42b6ead47da2c5d863042de6689aee64d342b3/gcc%2Ftestsuite%2Fgnat.dg%2Fiter4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fiter4.adb?ref=2f42b6ead47da2c5d863042de6689aee64d342b3", "patch": "@@ -0,0 +1,36 @@\n+--  { dg-do compile }\n+\n+procedure Iter4 is\n+   package Root is\n+      type Result is tagged record\n+         B : Boolean;\n+      end record;\n+\n+      type T is tagged record\n+         I : Integer;\n+      end record\n+      with Iterable => (First       => Pkg.First, --  { dg-error \"primitive operation for Iterable type must appear in the same list of declarations as the type\" }\n+                        Next        => Pkg.Next,\n+                        Has_Element => Pkg.Has_Element,\n+                        Element     => Pkg.Element);\n+\n+      package Pkg is\n+         function First (Dummy : T) return Natural is (0);\n+         function Next (Dummy : T; Cursor : Natural) return Natural is\n+           (Cursor + 1);\n+         function Has_Element (Value : T; Cursor : Natural) return Boolean is\n+           (Cursor <= Value.I);\n+         function Element (Dummy : T; Cursor : Natural) return Result is\n+           ((B => Cursor mod 2 = 0));\n+      end Pkg;\n+   end Root;\n+\n+   package Derived is\n+      type T is new Root.T with record\n+         C : Character;\n+      end record;\n+   end Derived;\n+\n+begin\n+   null;\n+end;"}]}