{"sha": "1671e363a6d7c0127b2e38de4cdbb05434b6c6aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY3MWUzNjNhNmQ3YzAxMjdiMmUzOGRlNGNkYmIwNTQzNGI2YzZhYQ==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2002-05-23T01:44:15Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2002-05-23T01:44:15Z"}, "message": "more README clarifications\n\nFrom-SVN: r53755", "tree": {"sha": "6aa35550c397c75a1fac180240c7bfe28b869001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6aa35550c397c75a1fac180240c7bfe28b869001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1671e363a6d7c0127b2e38de4cdbb05434b6c6aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1671e363a6d7c0127b2e38de4cdbb05434b6c6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1671e363a6d7c0127b2e38de4cdbb05434b6c6aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1671e363a6d7c0127b2e38de4cdbb05434b6c6aa/comments", "author": null, "committer": null, "parents": [{"sha": "7a1f3f5f3bdf7862391b3404eaaf348364ba57bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1f3f5f3bdf7862391b3404eaaf348364ba57bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1f3f5f3bdf7862391b3404eaaf348364ba57bd"}], "stats": {"total": 65, "additions": 40, "deletions": 25}, "files": [{"sha": "29c4edbf67d065427de6d1f1eeb554167658e046", "filename": "gcc/fixinc/README", "status": "modified", "additions": 40, "deletions": 25, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1671e363a6d7c0127b2e38de4cdbb05434b6c6aa/gcc%2Ffixinc%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1671e363a6d7c0127b2e38de4cdbb05434b6c6aa/gcc%2Ffixinc%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FREADME?ref=1671e363a6d7c0127b2e38de4cdbb05434b6c6aa", "patch": "@@ -2,22 +2,17 @@\n FIXINCLUDES OPERATION\n =====================\n \n-See also:  http://autogen.SourceForge.net/fixincludes\n+See also:  http://autogen.SourceForge.net/fixinc.html\n \n The set of fixes required was distilled down to just the data required\n to specify what needed to happen for each fix.  Those data were edited\n-into a file named gcc/fixinc/inclhack.def.  A program called\n-AutoGen (http://autogen.SourceForge.net, ver 4.x) uses these definitions\n-to instantiate several different templates (gcc/fixinc/*.tpl) that then\n-produces a fixincludes replacement shell script (inclhack.sh), a\n-replacement binary program (fixincl.x).\n-\n-If there is no special purpose script, then mkfixinc.sh will try to\n-compile, link and execute the fixincl program.  Otherwise, it will\n-install and use the current fixinc.* for that system instead.\n-Also, on certain platforms (viz. those that do not have functional\n-bidirectional pipes), the fixincl program is split into two.\n-This should only concern you on DOS and BeOS.\n+into a file named gcc/fixinc/inclhack.def.  A program called AutoGen\n+(http://autogen.SourceForge.net) uses these definitions to instantiate\n+several different templates that then produces code for a fixinclude\n+program (fixincl.x) and a shell script to test its functioning.  On\n+certain platforms (viz. those that do not have functional bidirectional\n+pipes), the fixincl program is split into two.  This should only concern\n+you on DOS and BeOS.\n \n Regards,\n \tBruce <bkorb@gnu.org>\n@@ -34,18 +29,38 @@ definitions file, ``inclhack.def''.  Please also send relevant\n information to gcc-bugs@gcc.gnu.org, gcc-patches@gcc.gnu.org and,\n please, to me:  bkorb@gnu.org.\n \n-Once you have made your fix, it is necessary to have at least one\n-test for it.  Specify the test with a \"test_text\" entry.  Run\n-\"make check\" in the fixinc directory to verify both that your fix\n-works (by correctly altering your test text) and that your fix\n-does not suppress the work of other fixes.  You should readily\n-be able to verify this as the \"make check\" process will print out\n-context diffs of fixed files.  If everything looks fine, you can\n-either use the diffs for a patch to the baseline files, or simply\n-copy the result files (in the \"tests/res/\" subdirectory) into the\n-baseline directory (\"tests/base\").\n-\n-Here are the rules for making fixes in the inclhack.def file:\n+To make your fix, you will need to do several things:\n+\n+1.  Obtain access to the AutoGen program on some platform.  It does\n+    not have to be your build platform, but it is more convenient.\n+\n+2.  Edit \"inclhack.def\" to reflect the changes you need to make.\n+    See below for information on how to make those changes.\n+\n+3.  Run the \"genfixes\" shell script to produce a new copy of\n+    the \"fixincl.x\" file.\n+\n+4.  Rebuild the compiler and check the header causing the issue.\n+    Make sure it is now properly handled.  Add tests to the\n+    \"test_text\" entry(ies) that validate your fix.  This will\n+    help ensure that future fixes won't negate your work.\n+\n+5.  Go into the fixinc build directory and type, \"make check\".\n+    You are guaranteed to have issues printed out as a result.\n+    Look at the diffs produced.  Make sure you have not clobbered\n+    the proper functioning of a different fix.  Make sure your\n+    fix is properly tested and it does what it is supposed to do.\n+\n+6.  Now that you have the right things happening, syncronize the\n+    $(srcdir)/tests/base directory with the $(builddir)/tests/res\n+    directory.  The output of \"make check\" will be some diffs that\n+    should give you some hints about what to do.\n+\n+7.  Rerun \"make check\" and verify that there are no issues left.\n+\n+\n+MAKING CHANGES TO INCLHACK.DEF\n+==============================\n \n 0.  If you are not the fixincludes maintainer, please send that\n     person email about any changes you may want to make.  Thanks!"}]}