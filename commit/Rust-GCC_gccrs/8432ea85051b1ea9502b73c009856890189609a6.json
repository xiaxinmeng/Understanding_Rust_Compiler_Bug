{"sha": "8432ea85051b1ea9502b73c009856890189609a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQzMmVhODUwNTFiMWVhOTUwMmI3M2MwMDk4NTY4OTAxODk2MDlhNg==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-07-07T19:22:48Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-07-07T19:22:48Z"}, "message": "i386.c (is_va_list_char_pointer): New.\n\n2008-07-07  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* config/i386/i386.c (is_va_list_char_pointer): New.\n\t(ix86_va_start): Replace compare with ms_va_list_type_node\n\tby is_va_list_char_pointer.\n\t(ix86_gimplify_va_arg): Likewise.\n\nFrom-SVN: r137593", "tree": {"sha": "290b8bff389689fdebb864d0e9fa1614c2209890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/290b8bff389689fdebb864d0e9fa1614c2209890"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8432ea85051b1ea9502b73c009856890189609a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8432ea85051b1ea9502b73c009856890189609a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8432ea85051b1ea9502b73c009856890189609a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8432ea85051b1ea9502b73c009856890189609a6/comments", "author": null, "committer": null, "parents": [{"sha": "10465436b53ca9071b1e7d660f23fc54f743e931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10465436b53ca9071b1e7d660f23fc54f743e931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10465436b53ca9071b1e7d660f23fc54f743e931"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "e2a48fdb0b3485f46e1466ed5b52e5867a19c8ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8432ea85051b1ea9502b73c009856890189609a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8432ea85051b1ea9502b73c009856890189609a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8432ea85051b1ea9502b73c009856890189609a6", "patch": "@@ -1,3 +1,10 @@\n+2008-07-07  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* config/i386/i386.c (is_va_list_char_pointer): New.\n+\t(ix86_va_start): Replace compare with ms_va_list_type_node\n+\tby is_va_list_char_pointer.\n+\t(ix86_gimplify_va_arg): Likewise.\n+\n 2008-07-07  Martin Jambor  <mjambor@suse.cz>\n \n \t* cgraph.c (cgraph_edge_max_uid): New variable."}, {"sha": "26999e71d5b6b1b19389f637349596c3617b6cf0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8432ea85051b1ea9502b73c009856890189609a6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8432ea85051b1ea9502b73c009856890189609a6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8432ea85051b1ea9502b73c009856890189609a6", "patch": "@@ -5408,6 +5408,21 @@ ix86_setup_incoming_varargs (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n     setup_incoming_varargs_64 (&next_cum);\n }\n \n+/* Checks if TYPE is of kind va_list char *.  */\n+\n+static bool\n+is_va_list_char_pointer (tree type)\n+{\n+  tree canonic;\n+\n+  /* For 32-bit it is always true.  */\n+  if (!TARGET_64BIT)\n+    return true;\n+  canonic = ix86_canonical_va_list_type (type);\n+  return (canonic == ms_va_list_type_node\n+          || (DEFAULT_ABI == MS_ABI && canonic == va_list_type_node));\n+}\n+\n /* Implement va_start.  */\n \n static void\n@@ -5419,8 +5434,7 @@ ix86_va_start (tree valist, rtx nextarg)\n   tree type;\n \n   /* Only 64bit target needs something special.  */\n-  if (!TARGET_64BIT ||\n-      ix86_canonical_va_list_type (TREE_TYPE (valist)) == ms_va_list_type_node)\n+  if (!TARGET_64BIT || is_va_list_char_pointer (TREE_TYPE (valist)))\n     {\n       std_expand_builtin_va_start (valist, nextarg);\n       return;\n@@ -5499,8 +5513,7 @@ ix86_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n   enum machine_mode nat_mode;\n \n   /* Only 64bit target needs something special.  */\n-  if (!TARGET_64BIT ||\n-      ix86_canonical_va_list_type (TREE_TYPE (valist)) == ms_va_list_type_node)\n+  if (!TARGET_64BIT || is_va_list_char_pointer (TREE_TYPE (valist)))\n     return std_gimplify_va_arg_expr (valist, type, pre_p, post_p);\n \n   f_gpr = TYPE_FIELDS (TREE_TYPE (sysv_va_list_type_node));"}]}