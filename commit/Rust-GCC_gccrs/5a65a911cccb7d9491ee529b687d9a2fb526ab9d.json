{"sha": "5a65a911cccb7d9491ee529b687d9a2fb526ab9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE2NWE5MTFjY2NiN2Q5NDkxZWU1MjliNjg3ZDlhMmZiNTI2YWI5ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-11-15T17:06:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-11-15T17:06:43Z"}, "message": "decomp14.C: New test.\n\n\t* g++.dg/cpp1z/decomp14.C: New test.\n\t* g++.dg/cpp1z/decomp15.C: New test.\n\t* g++.dg/cpp1z/decomp16.C: New test.\n\nFrom-SVN: r242435", "tree": {"sha": "d7f552619c79344ea26911af17cfedd2b88ec5db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7f552619c79344ea26911af17cfedd2b88ec5db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a65a911cccb7d9491ee529b687d9a2fb526ab9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a65a911cccb7d9491ee529b687d9a2fb526ab9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a65a911cccb7d9491ee529b687d9a2fb526ab9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0f5b987521323a66d307fbccd57e0020509dd97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f5b987521323a66d307fbccd57e0020509dd97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f5b987521323a66d307fbccd57e0020509dd97"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "a3e7811f1018e1c1f060a4ca1d7aa2c5e8922651", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a65a911cccb7d9491ee529b687d9a2fb526ab9d", "patch": "@@ -1,5 +1,9 @@\n 2016-11-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* g++.dg/cpp1z/decomp14.C: New test.\n+\t* g++.dg/cpp1z/decomp15.C: New test.\n+\t* g++.dg/cpp1z/decomp16.C: New test.\n+\n \t* g++.dg/cpp1z/decomp13.C: New test.\n \n \t* g++.dg/cpp1y/auto-fn33.C (main): Turn // error: ... into dg-bogus."}, {"sha": "5d6d05fb8a457c970c459a414d900a06ac361f52", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp14.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp14.C?ref=5a65a911cccb7d9491ee529b687d9a2fb526ab9d", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct A { int f; };\n+struct B { int b; };\n+struct C : virtual A {};\n+struct D : virtual A {};\n+struct E { int f; };\n+struct F : A { int f; };\n+struct G : A, E {};\n+struct H : C, D {};\n+struct I : A, C {};\t\t// { dg-warning \"due to ambiguity\" }\n+struct J : B {};\n+struct K : B, virtual J {};\t// { dg-warning \"due to ambiguity\" }\n+struct L : virtual J {};\n+struct M : virtual J, L {};\n+\n+void\n+foo (C &c, F &f, G &g, H &h, I &i, K &k, M &m)\n+{\n+  auto [ ci ] = c;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ fi ] = f;\t\t// { dg-error \"cannot decompose class type 'F': both it and its base class 'A' have non-static data members\" }\n+\t\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n+  auto [ gi ] = g;\t\t// { dg-error \"cannot decompose class type 'G': its base classes 'A' and 'E' have non-static data members\" }\n+\t\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n+  auto [ hi ] = h;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ ki ] = k;\t\t// { dg-error \"'B' is an ambiguous base of 'K'\" }\n+\t\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n+  auto [ mi ] = m;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+}"}, {"sha": "48d2433a642fd19b093801570247c28e643437f2", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp15.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp15.C?ref=5a65a911cccb7d9491ee529b687d9a2fb526ab9d", "patch": "@@ -0,0 +1,24 @@\n+// { dg-do compile }\n+// { dg-options \"-std=c++1z\" }\n+\n+struct A { bool a, b; };\n+struct B { int a, b; };\n+\n+void\n+foo ()\n+{\n+  auto [ a, b ] = A ();\n+  for (auto [ a, b ] = A (); a; )\n+    ;\n+  if (auto [ a, b ] = A (); a)\n+    ;\n+  switch (auto [ a, b ] = B (); b)\n+    {\n+    case 2:\n+      break;\n+    }\n+  auto && [ c, d ] = A ();\n+  [[maybe_unused]] auto [ e, f ] = A ();\n+  alignas (A) auto [ g, h ] = A ();\n+  __attribute__((unused)) auto [ i, j ] = A ();\n+}"}, {"sha": "d67992bb53962f2f9f607242cd2cc5081ff25cc3", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp16.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a65a911cccb7d9491ee529b687d9a2fb526ab9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp16.C?ref=5a65a911cccb7d9491ee529b687d9a2fb526ab9d", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+// { dg-options \"-std=c++1z\" }\n+\n+struct A { bool a, b; };\n+struct B { int a, b; };\n+\n+void\n+foo ()\n+{\n+  auto [ a, b ] = A ();\n+  for (; auto [ a, b ] = A (); )\t\t\t// { dg-error \"expected\" }\n+    ;\n+  for (; false; auto [ a, b ] = A ())\t\t\t// { dg-error \"expected\" }\n+    ;\n+  if (auto [ a, b ] = A ())\t\t\t\t// { dg-error \"expected\" }\n+    ;\n+  if (auto [ a, b ] = A (); auto [ c, d ] = A ())\t// { dg-error \"expected\" }\n+    ;\n+  if (int d = 5; auto [ a, b ] = A ())\t\t\t// { dg-error \"expected\" }\n+    ;\n+  switch (auto [ a, b ] = B ())\t\t\t\t// { dg-error \"expected\" }\n+    {\n+    case 2:\n+      break;\n+    }\n+  switch (int d = 5; auto [ a, b ] = B ())\t\t// { dg-error \"expected\" }\n+    {\n+    case 2:\n+      break;\n+    }\n+  A e = A ();\n+  auto && [ c, d ] = e;\n+  auto [ i, j ] = A (), [ k, l ] = A ();\t\t// { dg-error \"expected\" }\n+  auto m = A (), [ n, o ] = A ();\t\t\t// { dg-error \"expected\" }\n+}\n+\n+template <typename T>\n+auto [ a, b ] = A ();\t\t\t\t\t// { dg-error \"expected\" }\n+\n+struct C\n+{\n+  auto [ e, f ] = A ();\t\t\t\t\t// { dg-error \"expected\" }\n+  mutable auto [ g, h ] = A ();\t\t\t\t// { dg-error \"expected\" }\n+  virtual auto [ i, j ] = A ();\t\t\t\t// { dg-error \"expected\" }\n+  explicit auto [ k, l ] = A ();\t\t\t// { dg-error \"expected\" }\n+  friend auto [ m, n ] = A ();\t\t\t\t// { dg-error \"expected\" }\n+};"}]}