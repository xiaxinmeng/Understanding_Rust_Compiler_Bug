{"sha": "ed6089d61b5e8146c5eb84c57141748fb0396e15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ2MDg5ZDYxYjVlODE0NmM1ZWI4NGM1NzE0MTc0OGZiMDM5NmUxNQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@cygnus.com", "date": "2000-05-01T17:09:05Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-05-01T17:09:05Z"}, "message": "mn10300.c (expand_epilogue): If SP is to be adjusted by less than 256 bytes...\n\n* config/mn10300/mn10300.c (expand_epilogue): If SP is to be\nadjusted by less than 256 bytes, use ret regardless of having any\ncallee-saved register to restore.\n\nFrom-SVN: r33573", "tree": {"sha": "3e7e4d11f906f775d3e6455ab7a78b01d0d07eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e7e4d11f906f775d3e6455ab7a78b01d0d07eb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed6089d61b5e8146c5eb84c57141748fb0396e15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6089d61b5e8146c5eb84c57141748fb0396e15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed6089d61b5e8146c5eb84c57141748fb0396e15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6089d61b5e8146c5eb84c57141748fb0396e15/comments", "author": null, "committer": null, "parents": [{"sha": "7c714ee1c36c093f15b2e2dbd5bbdd74f87e7d3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c714ee1c36c093f15b2e2dbd5bbdd74f87e7d3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c714ee1c36c093f15b2e2dbd5bbdd74f87e7d3e"}], "stats": {"total": 37, "additions": 12, "deletions": 25}, "files": [{"sha": "77fdec36265080012471ed134e699c087c10e6e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6089d61b5e8146c5eb84c57141748fb0396e15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6089d61b5e8146c5eb84c57141748fb0396e15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed6089d61b5e8146c5eb84c57141748fb0396e15", "patch": "@@ -1,3 +1,9 @@\n+2000-05-01  Alexandre Oliva  <aoliva@cygnus.com>\n+\n+\t* config/mn10300/mn10300.c (expand_epilogue): If SP is to be\n+\tadjusted by less than 256 bytes, use ret regardless of having any\n+\tcallee-saved register to restore.\n+\n 2000-05-01 Laurynas Biveinis <lauras@softhome.net>\n \n \t* tm.texi (TARGET_HAS_F_SETFLKW): Fix typo."}, {"sha": "e643505d5774a8a776b0b377a28fe6504b42dbf7", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 6, "deletions": 25, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6089d61b5e8146c5eb84c57141748fb0396e15/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6089d61b5e8146c5eb84c57141748fb0396e15/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=ed6089d61b5e8146c5eb84c57141748fb0396e15", "patch": "@@ -452,43 +452,24 @@ expand_epilogue ()\n       emit_move_insn (stack_pointer_rtx, frame_pointer_rtx);\n       size = 0;\n     }\n-  else if ((regs_ever_live[2] || regs_ever_live[3]\n-\t    || regs_ever_live[14] || regs_ever_live[15]\n-\t    || regs_ever_live[16] || regs_ever_live[17]\n-\t    || regs_ever_live[6] || regs_ever_live[7])\n-\t   && size + REG_SAVE_BYTES > 255)\n+  else if (size + REG_SAVE_BYTES > 255)\n     {\n       emit_insn (gen_addsi3 (stack_pointer_rtx,\n \t\t\t     stack_pointer_rtx,\n \t\t\t     GEN_INT (size)));\n       size = 0;\n     }\n \n-  /* For simplicity, we just movm all the callee saved registers to\n-     the stack with one instruction.\n-\n-     ?!? Only save registers which are actually used.  Reduces\n-     stack requirements and is faster.  */\n-  if (regs_ever_live[2] || regs_ever_live[3]\n+  /* Adjust the stack and restore callee-saved registers, if any.  */\n+  if (size || regs_ever_live[2] || regs_ever_live[3]\n       || regs_ever_live[6] || regs_ever_live[7]\n       || regs_ever_live[14] || regs_ever_live[15]\n       || regs_ever_live[16] || regs_ever_live[17]\n       || frame_pointer_needed)\n-    emit_jump_insn (gen_return_internal_regs (GEN_INT (size + REG_SAVE_BYTES)));\n+    emit_jump_insn (gen_return_internal_regs\n+\t\t    (GEN_INT (size + REG_SAVE_BYTES)));\n   else\n-    {\n-      if (size)\n-\t{\n-\t  emit_insn (gen_addsi3 (stack_pointer_rtx,\n-\t\t\t\t stack_pointer_rtx,\n-\t\t\t\t GEN_INT (size)));\n-\t  emit_jump_insn (gen_return_internal ());\n-\t}\n-      else\n-\t{\n-\t  emit_jump_insn (gen_return ());\n-\t}\n-    }\n+    emit_jump_insn (gen_return_internal ());\n }\n \n /* Update the condition code from the insn.  */"}]}