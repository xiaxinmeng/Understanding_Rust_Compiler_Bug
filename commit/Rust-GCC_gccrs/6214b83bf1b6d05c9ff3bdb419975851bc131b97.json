{"sha": "6214b83bf1b6d05c9ff3bdb419975851bc131b97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxNGI4M2JmMWI2ZDA1YzlmZjNiZGI0MTk5NzU4NTFiYzEzMWI5Nw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T11:57:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T11:57:50Z"}, "message": "[multiple changes]\n\n2017-11-09  Javier Miranda  <miranda@adacore.com>\n\n\t* libgnat/s-rident.ads (Static_Dispatch_Tables): New restriction name.\n\t* exp_disp.adb (Building_Static_DT): Check restriction.\n\t(Building_Static_Secondary_DT): Check restriction.\n\t(Make_DT): Initialize the HT_Link to No_Tag.\n\t* opt.ads (Static_Dispatch_Tables): Rename flag...\n\t(Building_Static_Dispatch_Tables): ... into this.  This will avoid\n\tconflict with the restriction name.\n\t* gnat1drv.adb: Update.\n\t* exp_aggr.adb (Is_Static_Dispatch_Table_Aggregate): Update.\n\t* exp_ch3.adb (Expand_N_Object_Declaration): Update.\n\n2017-11-09  Pascal Obry  <obry@adacore.com>\n\n\t* libgnarl/s-taprop__mingw.adb: Minor code clean-up.  Better using a\n\tnamed number.\n\nFrom-SVN: r254572", "tree": {"sha": "74f848ed28b0a136b05cb612d823f009640808b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74f848ed28b0a136b05cb612d823f009640808b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6214b83bf1b6d05c9ff3bdb419975851bc131b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6214b83bf1b6d05c9ff3bdb419975851bc131b97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6214b83bf1b6d05c9ff3bdb419975851bc131b97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6214b83bf1b6d05c9ff3bdb419975851bc131b97/comments", "author": null, "committer": null, "parents": [{"sha": "d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d63199d8e6e9fc18cbd48375d7d44c023104ddd4"}], "stats": {"total": 79, "additions": 58, "deletions": 21}, "files": [{"sha": "1ccc7df448400a4689dacadc460d40bcc441dc2e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6214b83bf1b6d05c9ff3bdb419975851bc131b97", "patch": "@@ -1,3 +1,21 @@\n+2017-11-09  Javier Miranda  <miranda@adacore.com>\n+\n+\t* libgnat/s-rident.ads (Static_Dispatch_Tables): New restriction name.\n+\t* exp_disp.adb (Building_Static_DT): Check restriction.\n+\t(Building_Static_Secondary_DT): Check restriction.\n+\t(Make_DT): Initialize the HT_Link to No_Tag.\n+\t* opt.ads (Static_Dispatch_Tables): Rename flag...\n+\t(Building_Static_Dispatch_Tables): ... into this.  This will avoid\n+\tconflict with the restriction name.\n+\t* gnat1drv.adb: Update.\n+\t* exp_aggr.adb (Is_Static_Dispatch_Table_Aggregate): Update.\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Update.\n+\n+2017-11-09  Pascal Obry  <obry@adacore.com>\n+\n+\t* libgnarl/s-taprop__mingw.adb: Minor code clean-up.  Better using a\n+\tnamed number.\n+\n 2017-11-09  Yannick Moy  <moy@adacore.com>\n \n \t* binde.adb (Diagnose_Elaboration_Problem): Mark procedure No_Return."}, {"sha": "a2498f8084c014142b1f7c7e23f038ac14401b57", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=6214b83bf1b6d05c9ff3bdb419975851bc131b97", "patch": "@@ -7533,7 +7533,7 @@ package body Exp_Aggr is\n       Typ : constant Entity_Id := Base_Type (Etype (N));\n \n    begin\n-      return Static_Dispatch_Tables\n+      return Building_Static_Dispatch_Tables\n         and then Tagged_Type_Expansion\n         and then RTU_Loaded (Ada_Tags)\n "}, {"sha": "16bbb18a0be5ee7db482ec191858c804736b3401", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=6214b83bf1b6d05c9ff3bdb419975851bc131b97", "patch": "@@ -6280,7 +6280,7 @@ package body Exp_Ch3 is\n       --  Force construction of dispatch tables of library level tagged types\n \n       if Tagged_Type_Expansion\n-        and then Static_Dispatch_Tables\n+        and then Building_Static_Dispatch_Tables\n         and then Is_Library_Level_Entity (Def_Id)\n         and then Is_Library_Level_Tagged_Type (Base_Typ)\n         and then Ekind_In (Base_Typ, E_Record_Type,"}, {"sha": "caa7945ed52116dc9f9dec28cf508ea0c3e1d3e6", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=6214b83bf1b6d05c9ff3bdb419975851bc131b97", "patch": "@@ -281,7 +281,8 @@ package body Exp_Disp is\n    ------------------------\n \n    function Building_Static_DT (Typ : Entity_Id) return Boolean is\n-      Root_Typ : Entity_Id := Root_Type (Typ);\n+      Root_Typ  : Entity_Id := Root_Type (Typ);\n+      Static_DT : Boolean;\n \n    begin\n       --  Handle private types\n@@ -290,23 +291,30 @@ package body Exp_Disp is\n          Root_Typ := Full_View (Root_Typ);\n       end if;\n \n-      return Static_Dispatch_Tables\n+      Static_DT := Building_Static_Dispatch_Tables\n         and then Is_Library_Level_Tagged_Type (Typ)\n \n          --  If the type is derived from a CPP class we cannot statically\n          --  build the dispatch tables because we must inherit primitives\n          --  from the CPP side.\n \n         and then not Is_CPP_Class (Root_Typ);\n+\n+      if not Static_DT then\n+         Check_Restriction (Static_Dispatch_Tables, Typ);\n+      end if;\n+\n+      return Static_DT;\n    end Building_Static_DT;\n \n    ----------------------------------\n    -- Building_Static_Secondary_DT --\n    ----------------------------------\n \n    function Building_Static_Secondary_DT (Typ : Entity_Id) return Boolean is\n-      Full_Typ : Entity_Id := Typ;\n-      Root_Typ : Entity_Id := Root_Type (Typ);\n+      Full_Typ  : Entity_Id := Typ;\n+      Root_Typ  : Entity_Id := Root_Type (Typ);\n+      Static_DT : Boolean;\n \n    begin\n       --  Handle private types\n@@ -319,11 +327,20 @@ package body Exp_Disp is\n          Root_Typ := Full_View (Root_Typ);\n       end if;\n \n-      return Building_Static_DT (Full_Typ)\n+      Static_DT := Building_Static_DT (Full_Typ)\n         and then not Is_Interface (Full_Typ)\n         and then Has_Interfaces (Full_Typ)\n         and then (Full_Typ = Root_Typ\n                    or else not Is_Variable_Size_Record (Etype (Full_Typ)));\n+\n+      if not Static_DT\n+        and then not Is_Interface (Full_Typ)\n+        and then Has_Interfaces (Full_Typ)\n+      then\n+         Check_Restriction (Static_Dispatch_Tables, Typ);\n+      end if;\n+\n+      return Static_DT;\n    end Building_Static_Secondary_DT;\n \n    ----------------------------------\n@@ -5103,7 +5120,8 @@ package body Exp_Disp is\n          Append_To (Result,\n            Make_Object_Declaration (Loc,\n              Defining_Identifier => HT_Link,\n-             Object_Definition   => New_Occurrence_Of (RTE (RE_Tag), Loc)));\n+             Object_Definition   => New_Occurrence_Of (RTE (RE_Tag), Loc),\n+             Expression          => New_Occurrence_Of (RTE (RE_No_Tag), Loc)));\n       end if;\n \n       --  Generate code to create the storage for the type specific data object"}, {"sha": "3e4234bcbd52f3186ed5b06ce3ff623b40f39efb", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=6214b83bf1b6d05c9ff3bdb419975851bc131b97", "patch": "@@ -590,7 +590,7 @@ procedure Gnat1drv is\n       --  problems with subtypes of type Ada.Tags.Dispatch_Table_Wrapper. ???\n \n       if Debug_Flag_Dot_T then\n-         Static_Dispatch_Tables := False;\n+         Building_Static_Dispatch_Tables := False;\n       end if;\n \n       --  Flip endian mode if -gnatd8 set"}, {"sha": "c14c228e5231e34884ebfab3944478a71a956c22", "filename": "gcc/ada/libgnarl/s-taprop__mingw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Flibgnarl%2Fs-taprop__mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Flibgnarl%2Fs-taprop__mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taprop__mingw.adb?ref=6214b83bf1b6d05c9ff3bdb419975851bc131b97", "patch": "@@ -976,7 +976,7 @@ package body System.Task_Primitives.Operations is\n          Known_Tasks (T.Known_Tasks_Index) := null;\n       end if;\n \n-      if T.Common.LL.Thread /= 0 then\n+      if T.Common.LL.Thread /= Null_Thread_Id then\n \n          --  This task has been activated. Close the thread handle. This\n          --  is needed to release system resources."}, {"sha": "cde036aa89d7a723b258ce119646650361e4f47e", "filename": "gcc/ada/libgnat/s-rident.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Flibgnat%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Flibgnat%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-rident.ads?ref=6214b83bf1b6d05c9ff3bdb419975851bc131b97", "patch": "@@ -183,6 +183,7 @@ package System.Rident is\n       No_Elaboration_Code,                       -- GNAT\n       No_Obsolescent_Features,                   -- Ada 2005 AI-368\n       No_Wide_Characters,                        -- GNAT\n+      Static_Dispatch_Tables,                    -- GNAT\n       SPARK_05,                                  -- GNAT\n \n       --  The following cases require a parameter value"}, {"sha": "94ed9533ac22b246b018c5b91ed0ca82cd04ba82", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6214b83bf1b6d05c9ff3bdb419975851bc131b97/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=6214b83bf1b6d05c9ff3bdb419975851bc131b97", "patch": "@@ -2148,17 +2148,7 @@ package Opt is\n    -- Other Global Flags --\n    ------------------------\n \n-   Expander_Active : Boolean := False;\n-   --  A flag that indicates if expansion is active (True) or deactivated\n-   --  (False). When expansion is deactivated all calls to expander routines\n-   --  have no effect. Note that the initial setting of False is merely to\n-   --  prevent saving of an undefined value for an initial call to the\n-   --  Expander_Mode_Save_And_Set procedure. For more information on the use of\n-   --  this flag, see package Expander. Indeed this flag might more logically\n-   --  be in the spec of Expander, but it is referenced by Errout, and it\n-   --  really seems wrong for Errout to depend on Expander.\n-\n-   Static_Dispatch_Tables : Boolean := True;\n+   Building_Static_Dispatch_Tables : Boolean := True;\n    --  This flag indicates if the backend supports generation of statically\n    --  allocated dispatch tables. If it is True, then the front end will\n    --  generate static aggregates for dispatch tables that contain forward\n@@ -2170,6 +2160,16 @@ package Opt is\n    --  behavior can be disabled using switch -gnatd.t which will set this flag\n    --  to False and revert to the previous dynamic behavior.\n \n+   Expander_Active : Boolean := False;\n+   --  A flag that indicates if expansion is active (True) or deactivated\n+   --  (False). When expansion is deactivated all calls to expander routines\n+   --  have no effect. Note that the initial setting of False is merely to\n+   --  prevent saving of an undefined value for an initial call to the\n+   --  Expander_Mode_Save_And_Set procedure. For more information on the use of\n+   --  this flag, see package Expander. Indeed this flag might more logically\n+   --  be in the spec of Expander, but it is referenced by Errout, and it\n+   --  really seems wrong for Errout to depend on Expander.\n+\n    -----------------------\n    -- Tree I/O Routines --\n    -----------------------"}]}