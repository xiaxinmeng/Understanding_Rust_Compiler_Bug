{"sha": "d6eabd43eeb3637d28c370f97c9eb02c993c47d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZlYWJkNDNlZWIzNjM3ZDI4YzM3MGY5N2M5ZWIwMmM5OTNjNDdkNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-30T03:14:44Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-30T03:14:44Z"}, "message": "re PR target/19690 (ICE with -O3 -march=athlon-xp -mfpmath=sse -mno-80387)\n\n        PR target/19690\n        * config/i386/i386.md (movdf_nointeger, movdf_integer): Fix ordering\n        of # and * in constraints.\n\nFrom-SVN: r94433", "tree": {"sha": "ab915b3c6db486a6a6517ce2f9556f9a697417f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab915b3c6db486a6a6517ce2f9556f9a697417f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6eabd43eeb3637d28c370f97c9eb02c993c47d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6eabd43eeb3637d28c370f97c9eb02c993c47d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6eabd43eeb3637d28c370f97c9eb02c993c47d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6eabd43eeb3637d28c370f97c9eb02c993c47d4/comments", "author": null, "committer": null, "parents": [{"sha": "8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d74033081ff4815c2ff92dd8371c650d7bd1b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d74033081ff4815c2ff92dd8371c650d7bd1b7c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "61b0ce26588474bd697b0967c83da10c56541355", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6eabd43eeb3637d28c370f97c9eb02c993c47d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6eabd43eeb3637d28c370f97c9eb02c993c47d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6eabd43eeb3637d28c370f97c9eb02c993c47d4", "patch": "@@ -1,3 +1,9 @@\n+2005-01-29  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/19690\n+\t* config/i386/i386.md (movdf_nointeger, movdf_integer): Fix ordering\n+\tof # and * in constraints.\n+\n 2005-01-29  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/19689"}, {"sha": "21134d6838a899f865d35313eae2424187bbf12c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6eabd43eeb3637d28c370f97c9eb02c993c47d4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6eabd43eeb3637d28c370f97c9eb02c993c47d4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d6eabd43eeb3637d28c370f97c9eb02c993c47d4", "patch": "@@ -2420,9 +2420,9 @@\n \n (define_insn \"*movdf_nointeger\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"\n-\t\t\t\"=f#Y,m  ,f#Y,*r  ,o  ,Y#f*x,Y#f*x,Y#f*x  ,m    \")\n+\t\t\t\"=f#Y,m  ,f#Y,*r  ,o  ,Y*x#f,Y*x#f,Y*x#f  ,m    \")\n \t(match_operand:DF 1 \"general_operand\"\n-\t\t\t\"fm#Y,f#Y,G  ,*roF,F*r,C    ,Y#f*x,HmY#f*x,Y#f*x\"))]\n+\t\t\t\"fm#Y,f#Y,G  ,*roF,F*r,C    ,Y*x#f,HmY*x#f,Y*x#f\"))]\n   \"(GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\n    && ((optimize_size || !TARGET_INTEGER_DFMODE_MOVES) && !TARGET_64BIT)\n    && (reload_in_progress || reload_completed\n@@ -2540,9 +2540,9 @@\n \n (define_insn \"*movdf_integer\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"\n-\t\t\"=f#Yr,m   ,f#Yr,r#Yf  ,o    ,Y#rf*x,Y#rf*x,Y#rf*x,m\")\n+\t\t\"=f#Yr,m   ,f#Yr,r#Yf  ,o    ,Y*x#rf,Y*x#rf,Y*x#rf,m\")\n \t(match_operand:DF 1 \"general_operand\"\n-\t\t\"fm#Yr,f#Yr,G   ,roF#Yf,Fr#Yf,C     ,Y#rf*x,m     ,Y#rf*x\"))]\n+\t\t\"fm#Yr,f#Yr,G   ,roF#Yf,Fr#Yf,C     ,Y*x#rf,m     ,Y*x#rf\"))]\n   \"(GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\n    && ((!optimize_size && TARGET_INTEGER_DFMODE_MOVES) || TARGET_64BIT)\n    && (reload_in_progress || reload_completed"}]}