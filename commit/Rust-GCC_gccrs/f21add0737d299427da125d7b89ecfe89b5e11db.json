{"sha": "f21add0737d299427da125d7b89ecfe89b5e11db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIxYWRkMDczN2QyOTk0MjdkYTEyNWQ3Yjg5ZWNmZTg5YjVlMTFkYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-12-18T13:30:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-12-18T13:30:30Z"}, "message": "C++ ABI change: destroy value arguments in caller.\n\n        * calls.c (initialize_argument_information): Pass the address of\n        the TARGET_EXPR temporary rather than storing it into another.\n        * semantics.c (genrtl_start_function, genrtl_finish_function): Don't\n        create an extra binding level for the parameters.\n        * decl.c (store_parm_decls): Don't do parameter cleanups.\n\nFrom-SVN: r48154", "tree": {"sha": "edc5e296aa2480c6b58999dde1d72aa6a6e2b60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edc5e296aa2480c6b58999dde1d72aa6a6e2b60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f21add0737d299427da125d7b89ecfe89b5e11db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f21add0737d299427da125d7b89ecfe89b5e11db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f21add0737d299427da125d7b89ecfe89b5e11db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f21add0737d299427da125d7b89ecfe89b5e11db/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "769317c56d2321f57f3da95f444026e26f0e795c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/769317c56d2321f57f3da95f444026e26f0e795c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/769317c56d2321f57f3da95f444026e26f0e795c"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "c973087acbe987c7ede7d80a6d423407cb673a68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f21add0737d299427da125d7b89ecfe89b5e11db", "patch": "@@ -1,3 +1,9 @@\n+2001-12-18  Jason Merrill  <jason@redhat.com>\n+\n+\tC++ ABI change: destroy value arguments in caller.\n+\t* calls.c (initialize_argument_information): Pass the address of\n+\tthe TARGET_EXPR temporary rather than storing it into another.\n+\n Tue Dec 18 07:09:06 2001  Douglas B. Rupp  <rupp@gnat.com>\n \n \t* config/alpha/xm-vms.h (INCLUDE_DEFAULTS): Add /gnu/include."}, {"sha": "afb9b39971d9d78fa02697c8f2d9a94dada6751b", "filename": "gcc/calls.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=f21add0737d299427da125d7b89ecfe89b5e11db", "patch": "@@ -1212,6 +1212,16 @@ initialize_argument_information (num_actuals, args, args_size, n_named_args,\n \t\t\t\t\t   args[i].tree_value);\n \t      type = build_pointer_type (type);\n \t    }\n+\t  else if (TREE_CODE (args[i].tree_value) == TARGET_EXPR)\n+\t    {\n+\t      /* In the V3 C++ ABI, parameters are destroyed in the caller.\n+\t\t We implement this by passing the address of the temporary\n+\t         rather than expanding it into another allocated slot.  */\n+\t      args[i].tree_value = build1 (ADDR_EXPR,\n+\t\t\t\t\t   build_pointer_type (type),\n+\t\t\t\t\t   args[i].tree_value);\n+\t      type = build_pointer_type (type);\n+\t    }\n \t  else\n \t    {\n \t      /* We make a copy of the object and pass the address to the"}, {"sha": "956df9949d9ff85751d2ac57689e60c252d6aae3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f21add0737d299427da125d7b89ecfe89b5e11db", "patch": "@@ -1,3 +1,10 @@\n+2001-12-18  Jason Merrill  <jason@redhat.com>\n+\n+\tC++ ABI change: destroy value arguments in caller.\n+\t* semantics.c (genrtl_start_function, genrtl_finish_function): Don't\n+\tcreate an extra binding level for the parameters.\n+\t* decl.c (store_parm_decls): Don't do parameter cleanups.\n+\n 2001-12-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* call.c (build_new_method_call): Use '%#V'."}, {"sha": "a55b484491a113bbd5215641b0f70667c8427287", "filename": "gcc/cp/NEWS", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcp%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcp%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FNEWS?ref=f21add0737d299427da125d7b89ecfe89b5e11db", "patch": "@@ -40,6 +40,10 @@\n   forms of `operator delete[]', and declared the two-argument form\n   before the one-argument form.\n \n+* The C++ ABI has been changed so that when a parameter is passed by value,\n+  any cleanup for that parameter is performed in the caller, as specified\n+  by the ia64 C++ ABI, rather than the called function as before.\n+\n *** Changes in GCC 3.0:\n \n * Support for guiding declarations has been removed."}, {"sha": "9cb605f198fea1e41dff2d291ba5b3ab8bd31e81", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=f21add0737d299427da125d7b89ecfe89b5e11db", "patch": "@@ -13790,7 +13790,6 @@ store_parm_decls (current_function_parms)\n {\n   register tree fndecl = current_function_decl;\n   register tree parm;\n-  tree cleanups = NULL_TREE;\n \n   /* This is a chain of any other decls that came in among the parm\n      declarations.  If a parm is declared with  enum {foo, bar} x;\n@@ -13821,20 +13820,11 @@ store_parm_decls (current_function_parms)\n \t  next = TREE_CHAIN (parm);\n \t  if (TREE_CODE (parm) == PARM_DECL)\n \t    {\n-\t      tree cleanup;\n-\n \t      if (DECL_NAME (parm) == NULL_TREE\n \t\t  || TREE_CODE (parm) != VOID_TYPE)\n \t\tpushdecl (parm);\n \t      else\n \t\terror (\"parameter `%D' declared void\", parm);\n-\n-\t      cleanup = (processing_template_decl\n-\t\t\t ? NULL_TREE\n-\t\t\t : maybe_build_cleanup (parm));\n-\n-\t      if (cleanup)\n-\t\tcleanups = tree_cons (parm, cleanup, cleanups);\n \t    }\n \t  else\n \t    {\n@@ -13860,16 +13850,6 @@ store_parm_decls (current_function_parms)\n      DECL_ARGUMENTS is not modified.  */\n   storedecls (chainon (nonparms, DECL_ARGUMENTS (fndecl)));\n \n-  /* Now that we have initialized the parms, we can start their\n-     cleanups.  We cannot do this before, since expand_decl_cleanup\n-     should not be called before the parm can be used.  */\n-  while (cleanups)\n-    {\n-      finish_decl_cleanup (TREE_PURPOSE (cleanups),\n-\t\t\t   TREE_VALUE (cleanups));\n-      cleanups = TREE_CHAIN (cleanups);\n-    }\n-\n   /* Do the starting of the exception specifications, if we have any.  */\n   if (flag_exceptions && !processing_template_decl\n       && flag_enforce_eh_specs"}, {"sha": "90120ce0fa61dbd76056c915e1de905db27bcf28", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f21add0737d299427da125d7b89ecfe89b5e11db/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=f21add0737d299427da125d7b89ecfe89b5e11db", "patch": "@@ -2610,7 +2610,6 @@ genrtl_start_function (fn)\n   ++function_depth;\n \n   /* Create a binding level for the parameters.  */\n-  expand_start_bindings (2);\n   expand_function_start (fn, /*parms_have_cleanups=*/0);\n   /* If this function is `main'.  */\n   if (DECL_MAIN_P (fn))\n@@ -2667,7 +2666,7 @@ genrtl_finish_function (fn)\n   immediate_size_expand = 1;\n \n   /* Generate rtl for function exit.  */\n-  expand_function_end (input_filename, lineno, 1);\n+  expand_function_end (input_filename, lineno, 0);\n \n   /* If this is a nested function (like a template instantiation that\n      we're compiling in the midst of compiling something else), push a"}]}