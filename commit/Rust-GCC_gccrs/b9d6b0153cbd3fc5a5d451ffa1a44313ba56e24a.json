{"sha": "b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlkNmIwMTUzY2JkM2ZjNWE1ZDQ1MWZmYTFhNDQzMTNiYTU2ZTI0YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-07-01T00:03:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-01T00:03:34Z"}, "message": "re PR c++/49355 (new T({\"\"}) crashes G++ when struct T { std::string foobar };)\n\n\tPR c++/49355\n\t* tree.c (stabilize_init): Handle aggregate initialization.\n\nFrom-SVN: r175736", "tree": {"sha": "92d5685f6c5750040df40af7dc5b9a591a5c8bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92d5685f6c5750040df40af7dc5b9a591a5c8bf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ac93f108375d63eb373fbfcd59634202d1b50b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac93f108375d63eb373fbfcd59634202d1b50b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac93f108375d63eb373fbfcd59634202d1b50b7"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "70b6f779bf6c7149394a561e9c5cb6155488a9b8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a", "patch": "@@ -1,5 +1,8 @@\n 2011-06-30  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49355\n+\t* tree.c (stabilize_init): Handle aggregate initialization.\n+\n \tPR c++/48481\n \t* name-lookup.c (struct arg_lookup): Add fn_set.\n \t(add_function): Check it."}, {"sha": "678c7ef9bf1c6ad347c060035cca60bfd9db79ff", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a", "patch": "@@ -3291,10 +3291,18 @@ stabilize_init (tree init, tree *initp)\n     t = TARGET_EXPR_INITIAL (t);\n   if (TREE_CODE (t) == COMPOUND_EXPR)\n     t = expr_last (t);\n-  if (TREE_CODE (t) == CONSTRUCTOR\n-      && EMPTY_CONSTRUCTOR_P (t))\n-    /* Default-initialization.  */\n-    return true;\n+  if (TREE_CODE (t) == CONSTRUCTOR)\n+    {\n+      /* Aggregate initialization: stabilize each of the field\n+\t initializers.  */\n+      unsigned i;\n+      tree value;\n+      bool good = true;\n+      FOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (t), i, value)\n+\tif (!stabilize_init (value, initp))\n+\t  good = false;\n+      return good;\n+    }\n \n   /* If the initializer is a COND_EXPR, we can't preevaluate\n      anything.  */"}, {"sha": "ed34b5f3c10e6e877118fb6c972df810e1c66d28", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a", "patch": "@@ -1,3 +1,8 @@\n+2011-06-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49355\n+\t* g++.dg/cpp0x/initlist54.C: New.\n+\n 2011-06-30  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/tree-ssa/sra-12.c: New test."}, {"sha": "cdb296133f8d97ff08e70783232a541139092967", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist54.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist54.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist54.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist54.C?ref=b9d6b0153cbd3fc5a5d451ffa1a44313ba56e24a", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/49355\n+// { dg-options -std=c++0x }\n+\n+#include <string>\n+\n+struct T {\n+  std::string foobar;\n+};\n+\n+int main()\n+{\n+  T* x = new T({\"\"});\n+}"}]}