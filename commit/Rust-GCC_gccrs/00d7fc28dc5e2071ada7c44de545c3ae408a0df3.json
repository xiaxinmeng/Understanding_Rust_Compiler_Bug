{"sha": "00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBkN2ZjMjhkYzVlMjA3MWFkYTdjNDRkZTU0NWMzYWU0MDhhMGRmMw==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2018-03-09T22:43:59Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2018-03-09T22:43:59Z"}, "message": "re PR target/83969 (ICE in final_scan_insn, at final.c:2997 (error: could not split insn) for powerpc targets)\n\ngcc/\n\tPR target/83969\n\t* config/rs6000/rs6000.c (rs6000_offsettable_memref_p): New prototype.\n\tAdd strict argument and use it.\n\t(rs6000_split_multireg_move): Update for new strict argument.\n\t(mem_operand_gpr): Disallow all non-offsettable addresses.\n\t* config/rs6000/rs6000.md (*movdi_internal64): Use YZ constraint.\n\ngcc/testsuite/\n\tPR target/83969\n\t* gcc.target/powerpc/pr83969.c: New test.\n\nFrom-SVN: r258400", "tree": {"sha": "cf365499877b022704d7e0831594297ca9cde1b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf365499877b022704d7e0831594297ca9cde1b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2956d3a8ddf9b1c676ab54b1a081a007f5081b8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2956d3a8ddf9b1c676ab54b1a081a007f5081b8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2956d3a8ddf9b1c676ab54b1a081a007f5081b8e"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "6a93f4a9731b9a275d8aa7aa5615aa0c45c2e0de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "patch": "@@ -1,3 +1,12 @@\n+2018-03-09  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/83969\n+\t* config/rs6000/rs6000.c (rs6000_offsettable_memref_p): New prototype.\n+\tAdd strict argument and use it.\n+\t(rs6000_split_multireg_move): Update for new strict argument.\n+\t(mem_operand_gpr): Disallow all non-offsettable addresses.\n+\t* config/rs6000/rs6000.md (*movdi_internal64): Use YZ constraint.\n+\n 2018-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84772"}, {"sha": "479f5492c2c34cdb6f4c456000f7fce87fbfd405", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "patch": "@@ -1378,6 +1378,7 @@ static rtx rs6000_debug_legitimize_reload_address (rtx, machine_mode, int,\n \t\t\t\t\t\t   int, int, int *);\n static bool rs6000_mode_dependent_address (const_rtx);\n static bool rs6000_debug_mode_dependent_address (const_rtx);\n+static bool rs6000_offsettable_memref_p (rtx, machine_mode, bool);\n static enum reg_class rs6000_secondary_reload_class (enum reg_class,\n \t\t\t\t\t\t     machine_mode, rtx);\n static enum reg_class rs6000_debug_secondary_reload_class (enum reg_class,\n@@ -8207,10 +8208,8 @@ mem_operand_gpr (rtx op, machine_mode mode)\n   int extra;\n   rtx addr = XEXP (op, 0);\n \n-  /* Don't allow altivec type addresses like (mem (and (plus ...))).\n-     See PR target/84279.  */\n-\n-  if (GET_CODE (addr) == AND)\n+  /* Don't allow non-offsettable addresses.  See PRs 83969 and 84279.  */\n+  if (!rs6000_offsettable_memref_p (op, mode, false))\n     return false;\n \n   op = address_offset (addr);\n@@ -9956,15 +9955,15 @@ rs6000_find_base_term (rtx op)\n    in 32-bit mode, that the recog predicate rejects.  */\n \n static bool\n-rs6000_offsettable_memref_p (rtx op, machine_mode reg_mode)\n+rs6000_offsettable_memref_p (rtx op, machine_mode reg_mode, bool strict)\n {\n   bool worst_case;\n \n   if (!MEM_P (op))\n     return false;\n \n   /* First mimic offsettable_memref_p.  */\n-  if (offsettable_address_p (true, GET_MODE (op), XEXP (op, 0)))\n+  if (offsettable_address_p (strict, GET_MODE (op), XEXP (op, 0)))\n     return true;\n \n   /* offsettable_address_p invokes rs6000_mode_dependent_address, but\n@@ -9978,7 +9977,7 @@ rs6000_offsettable_memref_p (rtx op, machine_mode reg_mode)\n   worst_case = ((TARGET_POWERPC64 && GET_MODE_CLASS (reg_mode) == MODE_INT)\n \t\t|| GET_MODE_SIZE (reg_mode) == 4);\n   return rs6000_legitimate_offset_address_p (GET_MODE (op), XEXP (op, 0),\n-\t\t\t\t\t     true, worst_case);\n+\t\t\t\t\t     strict, worst_case);\n }\n \n /* Determine the reassociation width to be used in reassociate_bb.\n@@ -24064,7 +24063,7 @@ rs6000_split_multireg_move (rtx dst, rtx src)\n \t      emit_insn (gen_add3_insn (breg, breg, delta_rtx));\n \t      src = replace_equiv_address (src, breg);\n \t    }\n-\t  else if (! rs6000_offsettable_memref_p (src, reg_mode))\n+\t  else if (! rs6000_offsettable_memref_p (src, reg_mode, true))\n \t    {\n \t      if (GET_CODE (XEXP (src, 0)) == PRE_MODIFY)\n \t\t{\n@@ -24131,7 +24130,7 @@ rs6000_split_multireg_move (rtx dst, rtx src)\n \t\temit_insn (gen_add3_insn (breg, breg, delta_rtx));\n \t      dst = replace_equiv_address (dst, breg);\n \t    }\n-\t  else if (!rs6000_offsettable_memref_p (dst, reg_mode)\n+\t  else if (!rs6000_offsettable_memref_p (dst, reg_mode, true)\n \t\t   && GET_CODE (XEXP (dst, 0)) != LO_SUM)\n \t    {\n \t      if (GET_CODE (XEXP (dst, 0)) == PRE_MODIFY)\n@@ -24170,7 +24169,7 @@ rs6000_split_multireg_move (rtx dst, rtx src)\n \t\t}\n \t    }\n \t  else if (GET_CODE (XEXP (dst, 0)) != LO_SUM)\n-\t    gcc_assert (rs6000_offsettable_memref_p (dst, reg_mode));\n+\t    gcc_assert (rs6000_offsettable_memref_p (dst, reg_mode, true));\n \t}\n \n       for (i = 0; i < nregs; i++)"}, {"sha": "7b285efb1006d509e93c428f20090bc8963a40b9", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "patch": "@@ -8549,14 +8549,14 @@\n ;;              FPR->GPR   GPR->FPR   VSX->GPR   GPR->VSX\n (define_insn \"*movdi_internal64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-               \"=Y,        r,         r,         r,         r,          r,\n+               \"=YZ,       r,         r,         r,         r,          r,\n                 ^m,        ^d,        ^d,        ^wY,       $Z,         $wb,\n                 $wv,       ^wi,       *wo,       *wo,       *wv,        *wi,\n                 *wi,       *wv,       *wv,       r,         *h,         *h,\n                 ?*r,       ?*wg,      ?*r,       ?*wj\")\n \n \t(match_operand:DI 1 \"input_operand\"\n-                \"r,        Y,         r,         I,         L,          nF,\n+                \"r,        YZ,        r,         I,         L,          nF,\n                  d,        m,         d,         wb,        wv,         wY,\n                  Z,        wi,        Oj,        wM,        OjwM,       Oj,\n                  wM,       wS,        wB,        *h,        r,          0,"}, {"sha": "1e99bc3139ece828ef7bda2935e80b1464dc0a32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "patch": "@@ -1,3 +1,8 @@\n+2018-03-09  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/83969\n+\t* gcc.target/powerpc/pr83969.c: New test.\n+\n 2018-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84772"}, {"sha": "fe61594be1644d6943e582bb2d3991a26f9d005e", "filename": "gcc/testsuite/gcc.target/powerpc/pr83969.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83969.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00d7fc28dc5e2071ada7c44de545c3ae408a0df3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83969.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83969.c?ref=00d7fc28dc5e2071ada7c44de545c3ae408a0df3", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=G5\" } } */\n+/* { dg-options \"-O1 -mcpu=G5 -fno-split-wide-types -ftree-loop-vectorize\" } */\n+\n+long long int\n+n7 (int po, long long int r4)\n+{\n+  while (po < 1)\n+    {\n+      r4 |= 1;\n+      ++po;\n+    }\n+  return r4;\n+}"}]}