{"sha": "4e18507b6834ce629c8bef80adacb19ef205279f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUxODUwN2I2ODM0Y2U2MjljOGJlZjgwYWRhY2IxOWVmMjA1Mjc5Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-09-06T21:13:56Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-09-06T21:13:56Z"}, "message": "Properly check glibc.\n\n2010-09-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/linux-unwind.h (x86_fallback_frame_state): Properly\n\tcheck glibc.\n\nFrom-SVN: r163933", "tree": {"sha": "231dc5214e78a7477469e6e9e948c39ad4ba5bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/231dc5214e78a7477469e6e9e948c39ad4ba5bb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e18507b6834ce629c8bef80adacb19ef205279f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e18507b6834ce629c8bef80adacb19ef205279f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e18507b6834ce629c8bef80adacb19ef205279f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e18507b6834ce629c8bef80adacb19ef205279f/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f884552b4f02a94b32d070715a91787753f6128b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f884552b4f02a94b32d070715a91787753f6128b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f884552b4f02a94b32d070715a91787753f6128b"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "f51c9083a41796b7657d6367de74c0cdc6f72567", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e18507b6834ce629c8bef80adacb19ef205279f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e18507b6834ce629c8bef80adacb19ef205279f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e18507b6834ce629c8bef80adacb19ef205279f", "patch": "@@ -1,3 +1,8 @@\n+2010-09-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/linux-unwind.h (x86_fallback_frame_state): Properly\n+\tcheck glibc.\n+\n 2010-09-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/22152"}, {"sha": "415f7a3702b56d9d9f45d467f1df69ecab2cd728", "filename": "gcc/config/i386/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e18507b6834ce629c8bef80adacb19ef205279f/gcc%2Fconfig%2Fi386%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e18507b6834ce629c8bef80adacb19ef205279f/gcc%2Fconfig%2Fi386%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-unwind.h?ref=4e18507b6834ce629c8bef80adacb19ef205279f", "patch": "@@ -106,7 +106,7 @@ x86_64_fallback_frame_state (struct _Unwind_Context *context,\n    signal-turned-exceptions for them.  There's also no configure-run for\n    the target, so we can't check on (e.g.) HAVE_SYS_UCONTEXT_H.  Using the\n    target libc version macro should be enough.  */\n-#if !(__GLIBC__ == 2 && __GLIBC_MINOR__ == 0)\n+#if defined __GLIBC__ && !(__GLIBC__ == 2 && __GLIBC_MINOR__ == 0)\n \n #include <signal.h>\n #include <sys/ucontext.h>"}]}