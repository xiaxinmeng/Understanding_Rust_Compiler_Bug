{"sha": "27e6c1f4069316dcc2d0abc91fe36e36947c099e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlNmMxZjQwNjkzMTZkY2MyZDBhYmM5MWZlMzZlMzY5NDdjMDk5ZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-07-31T14:38:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-07-31T14:38:50Z"}, "message": "Add Doxygen comments to <bit> header\n\n\t* include/std/bit: Add Doxygen comments.\n\nFrom-SVN: r273938", "tree": {"sha": "df70d62506c30bea7b3f12c5fabab2eb724f4c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df70d62506c30bea7b3f12c5fabab2eb724f4c14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27e6c1f4069316dcc2d0abc91fe36e36947c099e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e6c1f4069316dcc2d0abc91fe36e36947c099e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e6c1f4069316dcc2d0abc91fe36e36947c099e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e6c1f4069316dcc2d0abc91fe36e36947c099e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "949fdadb9d1ee6822672cecc06b78be362d2ddca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949fdadb9d1ee6822672cecc06b78be362d2ddca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949fdadb9d1ee6822672cecc06b78be362d2ddca"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "fa23ec8072ac376d8181fc7354eb00f102463738", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e6c1f4069316dcc2d0abc91fe36e36947c099e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e6c1f4069316dcc2d0abc91fe36e36947c099e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=27e6c1f4069316dcc2d0abc91fe36e36947c099e", "patch": "@@ -1,5 +1,7 @@\n 2019-07-31  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/bit: Add Doxygen comments.\n+\n \tPR libstdc++/91308\n \t* include/bits/unique_ptr.h (unique_ptr::__safe_conversion_up): Remove\n \tconstraints on deleter that should only apply to the constructor."}, {"sha": "914cdfe629ab77a8893177d6b218fb5f9c23bc95", "filename": "libstdc++-v3/include/std/bit", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e6c1f4069316dcc2d0abc91fe36e36947c099e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e6c1f4069316dcc2d0abc91fe36e36947c099e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbit?ref=27e6c1f4069316dcc2d0abc91fe36e36947c099e", "patch": "@@ -40,6 +40,17 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+  /**\n+   * @defgroup bit_manip Bit manipulation\n+   * @ingroup numerics\n+   *\n+   * Utilities for examining and manipulating individual bits.\n+   *\n+   * @{\n+   */\n+\n+  /// @cond undoc\n+\n   template<typename _Tp>\n     constexpr _Tp\n     __rotl(_Tp __x, int __s) noexcept\n@@ -248,68 +259,83 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return _Nd - std::__countl_zero(__x);\n     }\n \n+  /// @endcond\n+\n #if __cplusplus > 201703L\n \n+  /// @cond undoc\n   template<typename _Tp, typename _Up = _Tp>\n     using _If_is_unsigned_integer\n       = enable_if_t<__is_unsigned_integer<_Tp>::value, _Up>;\n+  /// @endcond\n \n   // [bit.rot], rotating\n \n+  /// Rotate `x` to the left by `s` bits.\n   template<typename _Tp>\n     [[nodiscard]] constexpr _If_is_unsigned_integer<_Tp>\n     rotl(_Tp __x, int __s) noexcept\n     { return std::__rotl(__x, __s); }\n \n+  /// Rotate `x` to the right by `s` bits.\n   template<typename _Tp>\n     [[nodiscard]] constexpr _If_is_unsigned_integer<_Tp>\n     rotr(_Tp __x, int __s) noexcept\n     { return std::__rotr(__x, __s); }\n \n   // [bit.count], counting\n \n+  /// The number of contiguous zero bits, starting from the highest bit.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp, int>\n     countl_zero(_Tp __x) noexcept\n     { return std::__countl_zero(__x); }\n \n+  /// The number of contiguous one bits, starting from the highest bit.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp, int>\n     countl_one(_Tp __x) noexcept\n     { return std::__countl_one(__x); }\n \n+  /// The number of contiguous zero bits, starting from the lowest bit.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp, int>\n     countr_zero(_Tp __x) noexcept\n     { return std::__countr_zero(__x); }\n \n+  /// The number of contiguous one bits, starting from the lowest bit.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp, int>\n     countr_one(_Tp __x) noexcept\n     { return std::__countr_one(__x); }\n \n+  /// The number of bits set in `x`.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp, int>\n     popcount(_Tp __x) noexcept\n     { return std::__popcount(__x); }\n \n   // [bit.pow.two], integral powers of 2\n \n+  /// True if `x` is a power of two, false otherwise.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp, bool>\n     ispow2(_Tp __x) noexcept\n     { return std::__ispow2(__x); }\n \n+  /// The smallest power-of-two not less than `x`.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp>\n     ceil2(_Tp __x) noexcept\n     { return std::__ceil2(__x); }\n \n+  /// The largest power-of-two not greater than `x`.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp>\n     floor2(_Tp __x) noexcept\n     { return std::__floor2(__x); }\n \n+  /// The smallest integer greater than the base-2 logarithm of `x`.\n   template<typename _Tp>\n     constexpr _If_is_unsigned_integer<_Tp>\n     log2p1(_Tp __x) noexcept\n@@ -326,6 +352,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   };\n #endif // C++2a\n \n+  /// @}\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n "}]}