{"sha": "16f8dfdb794d83778f714722e3b31f5e7357fcd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZmOGRmZGI3OTRkODM3NzhmNzE0NzIyZTNiMzFmNWU3MzU3ZmNkMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-05-18T07:24:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-05-18T07:24:24Z"}, "message": "ChangeLog: Fix.\n\n\t* ChangeLog: Fix.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r210578", "tree": {"sha": "ff6d1aa82e098552150b582e60ed5bbecd45ac5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff6d1aa82e098552150b582e60ed5bbecd45ac5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16f8dfdb794d83778f714722e3b31f5e7357fcd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f8dfdb794d83778f714722e3b31f5e7357fcd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f8dfdb794d83778f714722e3b31f5e7357fcd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f8dfdb794d83778f714722e3b31f5e7357fcd1/comments", "author": null, "committer": null, "parents": [{"sha": "db2687a001b0a31fe25f478af1064f11e0ff8c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db2687a001b0a31fe25f478af1064f11e0ff8c50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db2687a001b0a31fe25f478af1064f11e0ff8c50"}], "stats": {"total": 60, "additions": 29, "deletions": 31}, "files": [{"sha": "2775f333310b3382b720347ba37642896f819bb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 31, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f8dfdb794d83778f714722e3b31f5e7357fcd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f8dfdb794d83778f714722e3b31f5e7357fcd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16f8dfdb794d83778f714722e3b31f5e7357fcd1", "patch": "@@ -8,9 +8,9 @@\n \t* ggc-none.c (ggc_internal_alloc): Assert if a finalizer is passed.\n \t(ggc_internal_cleared_alloc): Likewise.\n \t* ggc-page.c (finalizer): New class.\n-(vec_finalizer): Likewise.\n+\t(vec_finalizer): Likewise.\n \t(globals::finalizers): New member.\n-(globals::vec_finalizers): Likewise.\n+\t(globals::vec_finalizers): Likewise.\n \t(ggc_internal_alloc): Record the finalizer if any for the block being\n \tallocated.\n \t(ggc_handle_finalizers): New function.\n@@ -49,8 +49,7 @@\n \t* cgraphclones.c (cgraph_clone_edge): Likewise.\n \t* cgraphunit.c (add_asm_node): Likewise.\n \t(init_lowered_empty_function): Likewise.\n-\t* config/aarch64/aarch64.c (aarch64_init_machine_status):\n-\tLikewise.\n+\t* config/aarch64/aarch64.c (aarch64_init_machine_status): Likewise.\n \t* config/alpha/alpha.c (alpha_init_machine_status): Likewise.\n \t(alpha_use_linkage): Likewise.\n \t* config/arc/arc.c (arc_init_machine_status): Likewise.\n@@ -62,14 +61,12 @@\n \t* config/darwin.c (machopic_indirection_name): Likewise.\n \t(darwin_build_constant_cfstring): Likewise.\n \t(darwin_enter_string_into_cfstring_table): Likewise.\n-\t* config/epiphany/epiphany.c (epiphany_init_machine_status):\n-\t* Likewise.\n+\t* config/epiphany/epiphany.c (epiphany_init_machine_status): Likewise.\n \t* config/frv/frv.c (frv_init_machine_status): Likewise.\n \t* config/i386/i386.c (get_dllimport_decl): Likewise.\n \t(ix86_init_machine_status): Likewise.\n \t(assign_386_stack_local): Likewise.\n-\t* config/i386/winnt.c (i386_pe_record_external_function):\n-\tLikewise.\n+\t* config/i386/winnt.c (i386_pe_record_external_function): Likewise.\n \t(i386_pe_maybe_record_exported_symbol): Likewise.\n \t(i386_pe_record_stub): Likewise.\n \t* config/ia64/ia64.c (ia64_init_machine_status): Likewise.\n@@ -97,8 +94,7 @@\n \t* config/sparc/sparc.c (sparc_init_machine_status): Likewise.\n \t* config/spu/spu.c (spu_init_machine_status): Likewise.\n \t* config/tilegx/tilegx.c (tilegx_init_machine_status): Likewise.\n-\t* config/tilepro/tilepro.c (tilepro_init_machine_status):\n-\t* Likewise.\n+\t* config/tilepro/tilepro.c (tilepro_init_machine_status): Likewise.\n \t* config/xtensa/xtensa.c (xtensa_init_machine_status): Likewise.\n \t* coverage.c (coverage_end_function): Likewise.\n \t* dbxout.c (dbxout_init): Likewise.\n@@ -264,33 +260,31 @@\n \t* tree.c (grow_tree_vec_stat): Likewise.\n \t* vec.h (va_gc::reserve): Adjust.\n \n-2014-05-17  Ajit Agarwal <ajitkum@xilinx.com>\n+2014-05-17  Ajit Agarwal  <ajitkum@xilinx.com>\n \n-\t* config/microblaze/microblaze.c\n-\t  (break_handler): New Declaration.\n-\t  (microblaze_break_function_p,microblaze_is_break_handler): New.\n-\t  (compute_frame_size): use of microblaze_break_function_p. Add \n-\t    the test of break_handler.\n-\t  (microblaze_function_prologue) : Add the test of variable\n-\t  break_handler. Check the fnname by BREAK_HANDLER_NAME.\n-\t  (microblaze_function_epilogue) : Add the test of break_handler.\n-\t  (microblaze_globalize_label) : Add the test of break_handler. Check the\n-\t  name by BREAK_HANDLER_NAME.\n+\t* config/microblaze/microblaze.c (break_handler): New Declaration.\n+\t(microblaze_break_function_p,microblaze_is_break_handler): New.\n+\t(compute_frame_size): Use microblaze_break_function_p.\n+\tAdd the test of break_handler.\n+\t(microblaze_function_prologue) : Add the test of variable\n+\tbreak_handler.  Check the fnname by BREAK_HANDLER_NAME.\n+\t(microblaze_function_epilogue) : Add the test of break_handler.\n+\t(microblaze_globalize_label) : Add the test of break_handler.\n+\tCheck the name by BREAK_HANDLER_NAME.\n \n-\t* config/microblaze/microblaze.h (BREAK_HANDLER_NAME) : New macro\n+\t* config/microblaze/microblaze.h (BREAK_HANDLER_NAME): New macro\n \n-\t* config/microblaze/microblaze.md :\n-\t  (*<optab>,<optab>_internal): Add microblaze_is_break_handler () test.\n-\t  (call_internal1,call_value_intern) : Use of microblaze_break_function_p.\n-\t  Use of SYMBOL_REF_DECL.\n+\t* config/microblaze/microblaze.md (*<optab>,<optab>_internal): Add\n+\tmicroblaze_is_break_handler test.\n+\t(call_internal1,call_value_intern): Use microblaze_break_function_p.\n+\tUse SYMBOL_REF_DECL.\n \n \t* config/microblaze/microblaze-protos.h\n-\t  (microblaze_break_function_p,microblaze_is_break_handler) : New Declaration.\n-\n-\t* testsuite/gcc.target/microblaze/others/break_handler.c : New.\n+\t(microblaze_break_function_p,microblaze_is_break_handler):\n+\tNew Declaration.\n \n-\t* doc/extend.texi (MicroBlaze break_handler Functions): Document new\n-\t  MicroBlaze break_handler functions.\n+\t* doc/extend.texi (MicroBlaze break_handler Functions): Document\n+\tnew MicroBlaze break_handler functions.\n \n 2014-05-17  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "8dce3ecb611cbc089f37a83b997312c47a0de3d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f8dfdb794d83778f714722e3b31f5e7357fcd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f8dfdb794d83778f714722e3b31f5e7357fcd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16f8dfdb794d83778f714722e3b31f5e7357fcd1", "patch": "@@ -8,6 +8,10 @@\n \tPR c++/52875\n \t* g++.dg/cpp0x/decltype58.C: New.\n \n+2014-05-17  Ajit Agarwal  <ajitkum@xilinx.com>\n+\n+\t* gcc.target/microblaze/others/break_handler.c: New.\n+\n 2014-05-17  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/61140"}]}