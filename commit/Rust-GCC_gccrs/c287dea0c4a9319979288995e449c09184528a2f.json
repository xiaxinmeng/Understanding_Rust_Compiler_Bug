{"sha": "c287dea0c4a9319979288995e449c09184528a2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI4N2RlYTBjNGE5MzE5OTc5Mjg4OTk1ZTQ0OWMwOTE4NDUyOGEyZg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-23T12:35:30Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-23T12:35:30Z"}, "message": "re PR fortran/83148 (ICE: crash_signal from toplev.c:325)\n\n2018-02-23  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/83148\n\t* trans-const.c : Clean up some whitespace issues.\n\t* trans-expr.c (gfc_conv_initializer): If an iso_c_binding\n\tderived type has a kind value of zero, set it to the default\n\tinteger kind.\n\n2018-02-23  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/83148\n\t* gfortran.dg/class_68.f90: New test.\n\nFrom-SVN: r257930", "tree": {"sha": "20538aa6bca7ab6acae0f29f303b513cdb7ec7b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20538aa6bca7ab6acae0f29f303b513cdb7ec7b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c287dea0c4a9319979288995e449c09184528a2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c287dea0c4a9319979288995e449c09184528a2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c287dea0c4a9319979288995e449c09184528a2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c287dea0c4a9319979288995e449c09184528a2f/comments", "author": null, "committer": null, "parents": [{"sha": "99b4a565262c5755bf2bebe17ff852abdebb08a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b4a565262c5755bf2bebe17ff852abdebb08a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b4a565262c5755bf2bebe17ff852abdebb08a9"}], "stats": {"total": 56, "additions": 48, "deletions": 8}, "files": [{"sha": "c26c67f52ce84af303438147b75d954146c98065", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c287dea0c4a9319979288995e449c09184528a2f", "patch": "@@ -1,3 +1,11 @@\n+2018-02-23  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/83148\n+\t* trans-const.c : Clean up some whitespace issues.\n+\t* trans-expr.c (gfc_conv_initializer): If an iso_c_binding\n+\tderived type has a kind value of zero, set it to the default\n+\tinteger kind.\n+\n 2018-02-23  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/84519"}, {"sha": "6b4e0de430decdfb0399f02b5e0969c256af703e", "filename": "gcc/fortran/trans-const.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ffortran%2Ftrans-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ffortran%2Ftrans-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-const.c?ref=c287dea0c4a9319979288995e449c09184528a2f", "patch": "@@ -133,7 +133,7 @@ gfc_build_localized_cstring_const (const char *msgid)\n \n \n /* Return a string constant with the given length.  Used for static\n-   initializers.  The constant will be padded or truncated to match \n+   initializers.  The constant will be padded or truncated to match\n    length.  */\n \n tree\n@@ -303,7 +303,7 @@ gfc_conv_constant_to_tree (gfc_expr * expr)\n \n   /* If it is has a prescribed memory representation, we build a string\n      constant and VIEW_CONVERT to its type.  */\n- \n+\n   switch (expr->ts.type)\n     {\n     case BT_INTEGER:\n@@ -389,12 +389,12 @@ gfc_conv_constant (gfc_se * se, gfc_expr * expr)\n   if (expr->ts.type == BT_DERIVED && expr->ts.u.derived\n       && expr->ts.u.derived->attr.is_iso_c)\n     {\n-      if (expr->symtree->n.sym->intmod_sym_id == ISOCBINDING_NULL_PTR \n-          || expr->symtree->n.sym->intmod_sym_id == ISOCBINDING_NULL_FUNPTR)\n-        {\n-          /* Create a new EXPR_CONSTANT expression for our local uses.  */\n-          expr = gfc_get_int_expr (gfc_default_integer_kind, NULL, 0);\n-        }\n+      if (expr->symtree->n.sym->intmod_sym_id == ISOCBINDING_NULL_PTR\n+\t  || expr->symtree->n.sym->intmod_sym_id == ISOCBINDING_NULL_FUNPTR)\n+\t{\n+\t  /* Create a new EXPR_CONSTANT expression for our local uses.  */\n+\t  expr = gfc_get_int_expr (gfc_default_integer_kind, NULL, 0);\n+\t}\n     }\n \n   if (expr->expr_type != EXPR_CONSTANT)"}, {"sha": "a93257c73bfd17f3c22360bc3154df865a22ec92", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=c287dea0c4a9319979288995e449c09184528a2f", "patch": "@@ -6868,6 +6868,8 @@ gfc_conv_initializer (gfc_expr * expr, gfc_typespec * ts, tree type,\n \n       /* The derived symbol has already been converted to a (void *).  Use\n \t its kind.  */\n+      if (derived->ts.kind == 0)\n+\tderived->ts.kind = gfc_default_integer_kind;\n       expr = gfc_get_int_expr (derived->ts.kind, NULL, 0);\n       expr->ts.f90_type = derived->ts.f90_type;\n "}, {"sha": "fca98ddd52b5821f36bade299e7048689bdc655a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c287dea0c4a9319979288995e449c09184528a2f", "patch": "@@ -1,3 +1,8 @@\n+2018-02-23  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/83148\n+\t* gfortran.dg/class_68.f90: New test.\n+\n 2018-02-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/59781"}, {"sha": "fce30eac197dacdf7459f9c99ec1485e5780e455", "filename": "gcc/testsuite/gfortran.dg/class_68.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_68.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c287dea0c4a9319979288995e449c09184528a2f/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_68.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_68.f90?ref=c287dea0c4a9319979288995e449c09184528a2f", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR83148.\n+!\n+! Contributed by Neil Carlson  <neil.n.carlson@gmail.com>\n+!\n+module fhypre\n+  use iso_c_binding, only: c_ptr, c_null_ptr\n+  use iso_c_binding, only: hypre_obj => c_ptr, hypre_null_obj => c_null_ptr\n+  private\n+  public :: hypre_obj, hypre_null_obj\n+end module\n+\n+module hypre_hybrid_type\n+  use fhypre\n+  type hypre_hybrid\n+    type(hypre_obj) :: solver = hypre_null_obj\n+  end type hypre_hybrid\n+end module\n+\n+  use hypre_hybrid_type\n+  class(hypre_hybrid), allocatable :: x\n+  allocate (x)\n+end\n+"}]}