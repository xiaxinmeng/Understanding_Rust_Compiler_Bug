{"sha": "03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNhZmZkZjU5YTVjMWIxZDQ1YTExY2FmMGRlYWYyYmU0ZDU3ZmUyNQ==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-03-10T07:49:54Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-03-10T07:49:54Z"}, "message": "Patches from superior directory\n\nFrom-SVN: r25664", "tree": {"sha": "b9475e6582e92adf77a1ef81aba5a96b9a9f98d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9475e6582e92adf77a1ef81aba5a96b9a9f98d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/comments", "author": null, "committer": null, "parents": [{"sha": "47898a19f0e80dd31bc9386a346ac7780bfe55a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47898a19f0e80dd31bc9386a346ac7780bfe55a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47898a19f0e80dd31bc9386a346ac7780bfe55a7"}], "stats": {"total": 82, "additions": 76, "deletions": 6}, "files": [{"sha": "71365c4fa9dbdf22338668035279e5a8e8c62075", "filename": "gcc/fixinc/fixinc.dgux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.dgux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.dgux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.dgux?ref=03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "patch": "@@ -1,4 +1,4 @@\n-# !/bin/sh\n+#!/bin/sh\n #\n # modified for dgux by hassey@dg-rtp.dg.com based on\n #"}, {"sha": "1fa53a7b90f577b6e7e7fe1ced590c11cda24ee0", "filename": "gcc/fixinc/fixinc.irix", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.irix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.irix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.irix?ref=03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "patch": "@@ -2,7 +2,7 @@\n # Install modified versions of certain problematic Irix include files.\n # If possible, create a wrapper (see fixinc.wrap) instead of copying files.\n #\n-# Copyright (C) 1997 Free Software Foundation, Inc.\n+# Copyright (C) 1997, 1998 Free Software Foundation, Inc.\n # Contributed by Brendan Kehoe (brendan@cygnus.com).\n #\n # This file is part of GNU CC."}, {"sha": "e580956b17c44785bc551202235faa4ac7f4f6aa", "filename": "gcc/fixinc/fixinc.sco", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.sco", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.sco", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.sco?ref=03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "patch": "@@ -6,7 +6,7 @@\n #   Based on fixinc.svr4 script by Ron Guilmette (rfg@ncd.com) (SCO\n #   modifications by Ian Lance Taylor (ian@airs.com)).\n #\n-# Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n+# Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n #\n # This file is part of GNU CC.\n # \n@@ -404,7 +404,7 @@ __EOF__\n       # Define _CURSES_H_WRAPPER at the end of the wrapper, not the start,\n       # so that if #include_next gets another instance of the wrapper,\n       # this will follow the #include_next chain until we arrive at\n-      # the real <curses.h>.\n+      # the real system include file.\n       chmod a+r $LIB/$file\n     fi\n   fi"}, {"sha": "840a7d471f0fef93df94b262cc327e8d49b7c022", "filename": "gcc/fixinc/fixinc.svr4", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.svr4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.svr4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.svr4?ref=03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "patch": "@@ -1,7 +1,7 @@\n #! /bin/sh\n # Install modified versions of certain ANSI-incompatible\n # native System V Release 4 system include files.\n-# Copyright (C) 1994, 1996, 1997 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1996, 1997, 1998 Free Software Foundation, Inc.\n # Contributed by Ron Guilmette (rfg@monkeys.com).\n #\n # This file is part of GNU CC.\n@@ -1536,6 +1536,40 @@ if [ \\! -z \"$file_to_fix\" ]; then\n   rm -f /tmp/$base\n fi\n \n+# Similarly for struct queue in sys/stream.h.\n+file=sys/stream.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e '/struct[ \t]*queue/i\\\n+#ifdef __cplusplus\\\n+#define queue __stream_queue\\\n+#endif'\\\n+      -e '/struct[ \t]*queue/a\\\n+#ifdef __cplusplus\\\n+#undef queue\\\n+#endif' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    mkdir -p $LIB/`dirname $file`\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n echo 'Removing unneeded directories:'\n cd $LIB\n files=`find . -type d -print | sort -r`"}, {"sha": "ac9b5c92861c859477db97d202004c9249a258f3", "filename": "gcc/fixinc/fixinc.wrap", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.wrap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.wrap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.wrap?ref=03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "patch": "@@ -72,6 +72,35 @@ __EOF__\n   fi\n fi\n \n+# Similarly for struct queue in sys/stream.h.\n+file=sys/stream.h\n+if [ -r $INPUT/$file ]; then\n+  echo Checking $INPUT/$file\n+  if grep 'struct[ \t]*queue' $INPUT/$file >/dev/null\n+  then\n+    echo Fixed $file\n+    mkdir -p $LIB/`dirname $file`\n+    rm -f $LIB/$file\n+    cat <<'__EOF__' >$LIB/$file\n+#ifndef _SYS_STREAM_H_WRAPPER\n+#ifdef __cplusplus\n+# define queue __stream_queue\n+#endif\n+#include_next <sys/stream.h>\n+#ifdef __cplusplus\n+# undef queue\n+#endif\n+#define _SYS_STREAM_H_WRAPPER\n+#endif /* _SYS_STREAM_H_WRAPPER */\n+__EOF__\n+    # Define _SYS_STREAM_H_WRAPPER at the end of the wrapper, not the start,\n+    # so that if #include_next gets another instance of the wrapper,\n+    # this will follow the #include_next chain until we arrive at\n+    # the real <sys/stream.h>.\n+    chmod a+r $LIB/$file\n+  fi\n+fi\n+\n # Avoid the definition of the bool type in the Solaris 2.x curses.h when using\n # g++, since it's now an official type in the C++ language.\n file=curses.h"}, {"sha": "679933a1a96a7a65d75789853866cb63f8cb8d35", "filename": "gcc/fixinc/fixinc.x86-linux-gnu", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.x86-linux-gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03affdf59a5c1b1d45a11caf0deaf2be4d57fe25/gcc%2Ffixinc%2Ffixinc.x86-linux-gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.x86-linux-gnu?ref=03affdf59a5c1b1d45a11caf0deaf2be4d57fe25", "patch": "@@ -136,5 +136,12 @@ __EOF__\n # the real <gnu/types.h>.\n chmod a+r $LIB/$file\n \n-exit 0\n+if [ x${INSTALL_ASSERT_H} != x ] ;\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h;\n+  cp $(srcdir)/assert.h include/assert.h;\n+  chmod a+r include/assert.h;\n+fi\n \n+exit 0"}]}