{"sha": "22554cf9376fc1253adb75a290c4a38f82562b5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI1NTRjZjkzNzZmYzEyNTNhZGI3NWEyOTBjNGEzOGY4MjU2MmI1Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-01-04T15:14:31Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-01-04T15:14:31Z"}, "message": "Don't convert GTU to GT for V4SI and V2DI\n\ngcc/\n\n2010-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/42542\n\t* config/i386/i386.c (ix86_expand_int_vcond): Don't convert\n\tGTU to GT for V4SI and V2DI.\n\n\t* config/i386/sse.md (umaxv4si3): Enabled for SSE4.1 and XOP.\n\t(umin<mode>3): Removed.\n\t(uminv8hi3): New.\n\t(uminv4si3): Likewise.\n\ngcc/testsuite/\n\n2010-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/42542\n\t* gcc.target/i386/pr42542-1.c: New.\n\t* gcc.target/i386/pr42542-1a.c: Likewise.\n\t* gcc.target/i386/pr42542-1b.c: Likewise.\n\t* gcc.target/i386/pr42542-2.c: Likewise.\n\t* gcc.target/i386/pr42542-2a.c: Likewise.\n\t* gcc.target/i386/pr42542-2b.c: Likewise.\n\t* gcc.target/i386/pr42542-3.c: Likewise.\n\t* gcc.target/i386/pr42542-3a.c: Likewise.\n\nFrom-SVN: r155618", "tree": {"sha": "b2043ea8607dfc88c5b0002568c4d524baae9392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2043ea8607dfc88c5b0002568c4d524baae9392"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22554cf9376fc1253adb75a290c4a38f82562b5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22554cf9376fc1253adb75a290c4a38f82562b5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22554cf9376fc1253adb75a290c4a38f82562b5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22554cf9376fc1253adb75a290c4a38f82562b5c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7152f51efdcd5f6d9643dc182055873f3eb5a4bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7152f51efdcd5f6d9643dc182055873f3eb5a4bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7152f51efdcd5f6d9643dc182055873f3eb5a4bd"}], "stats": {"total": 379, "additions": 339, "deletions": 40}, "files": [{"sha": "11adcd05ec8ad6fa8fb66c6b8a7b26f6c0426530", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -1,3 +1,14 @@\n+2010-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/42542\n+\t* config/i386/i386.c (ix86_expand_int_vcond): Don't convert\n+\tGTU to GT for V4SI and V2DI.\n+\n+\t* config/i386/sse.md (umaxv4si3): Enabled for SSE4.1 and XOP.\n+\t(umin<mode>3): Removed.\n+\t(uminv8hi3): New.\n+\t(uminv4si3): Likewise.\n+\n 2010-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR lto/42581"}, {"sha": "4d6d51cd7392cfca72eddbfeba7c2a663e631325", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 33, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on IA-32.\n-   Copyright (C) 1988, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 1988, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n+   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -16252,37 +16252,6 @@ ix86_expand_int_vcond (rtx operands[])\n \n \t  switch (mode)\n \t    {\n-\t    case V4SImode:\n-\t    case V2DImode:\n-\t\t{\n-\t\t  rtx t1, t2, mask;\n-\n-\t\t  /* Perform a parallel modulo subtraction.  */\n-\t\t  t1 = gen_reg_rtx (mode);\n-\t\t  emit_insn ((mode == V4SImode\n-\t\t\t      ? gen_subv4si3\n-\t\t\t      : gen_subv2di3) (t1, cop0, cop1));\n-\n-\t\t  /* Extract the original sign bit of op0.  */\n-\t\t  mask = ix86_build_signbit_mask (GET_MODE_INNER (mode),\n-\t\t\t\t\t\t  true, false);\n-\t\t  t2 = gen_reg_rtx (mode);\n-\t\t  emit_insn ((mode == V4SImode\n-\t\t\t      ? gen_andv4si3\n-\t\t\t      : gen_andv2di3) (t2, cop0, mask));\n-\n-\t\t  /* XOR it back into the result of the subtraction.\n-\t\t     This results in the sign bit set iff we saw\n-\t\t     unsigned underflow.  */\n-\t\t  x = gen_reg_rtx (mode);\n-\t\t  emit_insn ((mode == V4SImode\n-\t\t\t      ? gen_xorv4si3\n-\t\t\t      : gen_xorv2di3) (x, t1, t2));\n-\n-\t\t  code = GT;\n-\t\t}\n-\t      break;\n-\n \t    case V16QImode:\n \t    case V8HImode:\n \t      /* Perform a parallel unsigned saturating subtraction.  */"}, {"sha": "3461b8d3eed7bce80cadd1bd43b2f435446cfdf9", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 32, "deletions": 7, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for SSE instructions\n-;; Copyright (C) 2005, 2006, 2007, 2008, 2009\n+;; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -6138,7 +6138,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n \t(umax:V4SI (match_operand:V4SI 1 \"register_operand\" \"\")\n \t\t   (match_operand:V4SI 2 \"register_operand\" \"\")))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_SSE4_1 || TARGET_XOP\"\n {\n   if (TARGET_SSE4_1)\n     ix86_fixup_binary_operands_no_copy (UMAX, V4SImode, operands);\n@@ -6195,14 +6195,39 @@\n     }\n })\n \n-(define_expand \"umin<mode>3\"\n-  [(set (match_operand:SSEMODE24 0 \"register_operand\" \"\")\n-\t(umin:SSEMODE24 (match_operand:SSEMODE24 1 \"register_operand\" \"\")\n-\t\t\t(match_operand:SSEMODE24 2 \"register_operand\" \"\")))]\n+(define_expand \"uminv8hi3\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"\")\n+\t(umin:V8HI (match_operand:V8HI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:V8HI 2 \"register_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n   if (TARGET_SSE4_1)\n-    ix86_fixup_binary_operands_no_copy (UMIN, <MODE>mode, operands);\n+    ix86_fixup_binary_operands_no_copy (UMIN, V8HImode, operands);\n+  else\n+    {\n+      rtx xops[6];\n+      bool ok;\n+\n+      xops[0] = operands[0];\n+      xops[1] = operands[2];\n+      xops[2] = operands[1];\n+      xops[3] = gen_rtx_GTU (VOIDmode, operands[1], operands[2]);\n+      xops[4] = operands[1];\n+      xops[5] = operands[2];\n+      ok = ix86_expand_int_vcond (xops);\n+      gcc_assert (ok);\n+      DONE;\n+    }\n+})\n+\n+(define_expand \"uminv4si3\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n+\t(umin:V4SI (match_operand:V4SI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:V4SI 2 \"register_operand\" \"\")))]\n+  \"TARGET_SSE4_1 || TARGET_XOP\"\n+{\n+  if (TARGET_SSE4_1)\n+    ix86_fixup_binary_operands_no_copy (UMIN, V4SImode, operands);\n   else\n     {\n       rtx xops[6];"}, {"sha": "44f692cc74d02ee8d5eab0c13c1cffb09c9ddee7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -1,3 +1,15 @@\n+2010-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/42542\n+\t* gcc.target/i386/pr42542-1.c: New.\n+\t* gcc.target/i386/pr42542-1a.c: Likewise.\n+\t* gcc.target/i386/pr42542-1b.c: Likewise.\n+\t* gcc.target/i386/pr42542-2.c: Likewise.\n+\t* gcc.target/i386/pr42542-2a.c: Likewise.\n+\t* gcc.target/i386/pr42542-2b.c: Likewise.\n+\t* gcc.target/i386/pr42542-3.c: Likewise.\n+\t* gcc.target/i386/pr42542-3a.c: Likewise.\n+\n 2009-01-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41872"}, {"sha": "6e115c3f7bef8c33bc86836712681cbf51a58db3", "filename": "gcc/testsuite/gcc.target/i386/pr42542-1.c", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -0,0 +1,77 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -msse2 -ftree-vectorize\" } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse2-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST sse2_test\n+#endif\n+\n+#include CHECK_H\n+\n+unsigned int v1[] __attribute__ ((aligned(16))) =\n+{\n+  0x80000000, 1, 0xa0000000, 2,\n+  3, 0xd0000000, 0xf0000000, 0xe0000000\n+};\n+unsigned int v2[] __attribute__ ((aligned(16))) =\n+{\n+  4, 0xb0000000, 5, 0xc0000000,\n+  0xd0000000, 6, 7, 8\n+};\n+\n+unsigned int max[] =\n+{\n+  0x80000000, 0xb0000000, 0xa0000000, 0xc0000000,\n+  0xd0000000, 0xd0000000, 0xf0000000, 0xe0000000\n+};\n+\n+unsigned int min[] =\n+{\n+  4, 1, 5, 2,\n+  3, 6, 7, 8\n+};\n+\n+unsigned int res[16] __attribute__ ((aligned(16)));\n+\n+extern void abort (void);\n+\n+void\n+find_max (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 8; i++)\n+    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];\n+}\n+\n+void\n+find_min (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 8; i++)\n+    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];\n+}\n+\n+static void\n+TEST (void)\n+{\n+  int i;\n+  int err = 0;\n+\n+  find_max ();\n+  for (i = 0; i < 8; i++)\n+    if (res[i] != max[i])\n+      err++;\n+\n+  find_min ();\n+  for (i = 0; i < 8; i++)\n+    if (res[i] != min[i])\n+      err++;\n+\n+  if (err)\n+    abort ();\n+}"}, {"sha": "cd77175f6e51935f51ab0124b395505dc51c45da", "filename": "gcc/testsuite/gcc.target/i386/pr42542-1a.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1a.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target sse4 } */\n+/* { dg-options \"-O1 -msse4.1 -ftree-vectorize\" } */\n+\n+#define CHECK_H \"sse4_1-check.h\"\n+#define TEST sse4_1_test\n+\n+#include \"pr42542-1.c\""}, {"sha": "7651f07a649ddea812eff0416bbeb0bfac06be4f", "filename": "gcc/testsuite/gcc.target/i386/pr42542-1b.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-1b.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -msse4.1 -ftree-vectorize\" } */\n+\n+#define CHECK_H \"sse4_1-check.h\"\n+#define TEST sse4_1_test\n+\n+#include \"pr42542-1.c\"\n+\n+/* { dg-final { scan-assembler \"pmaxud\" } } */\n+/* { dg-final { scan-assembler \"pminud\" } } */"}, {"sha": "fc59534d906170722347493083293fd9ff59be6d", "filename": "gcc/testsuite/gcc.target/i386/pr42542-2.c", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -0,0 +1,77 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -msse2 -ftree-vectorize\" } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse2-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST sse2_test\n+#endif\n+\n+#include CHECK_H\n+\n+unsigned short v1[] __attribute__ ((aligned(16))) =\n+{\n+  0x8000, 0x9000, 1, 10, 0xa000, 0xb000, 2, 20,\n+  3, 30, 0xd000, 0xe000, 0xf000, 0xe000, 25, 30\n+};\n+unsigned short v2[] __attribute__ ((aligned(16))) =\n+{\n+  4, 40, 0xb000, 0x8000, 5, 50, 0xc000, 0xf000,\n+  0xd000, 0xa000, 6, 65, 7, 75, 0xe000, 0xc000\n+};\n+\n+unsigned short max[] =\n+{\n+  0x8000, 0x9000, 0xb000, 0x8000, 0xa000, 0xb000, 0xc000, 0xf000,\n+  0xd000, 0xa000, 0xd000, 0xe000, 0xf000, 0xe000, 0xe000, 0xc000\n+};\n+\n+unsigned short min[] =\n+{\n+  4, 40, 1, 10, 5, 50, 2, 20,\n+  3, 30, 6, 65, 7, 75, 25, 30\n+};\n+\n+unsigned short res[16] __attribute__ ((aligned(16)));\n+\n+extern void abort (void);\n+\n+void\n+find_max (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 16; i++)\n+    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];\n+}\n+\n+void\n+find_min (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 16; i++)\n+    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];\n+}\n+\n+static void\n+TEST (void)\n+{\n+  int i;\n+  int err = 0;\n+\n+  find_max ();\n+  for (i = 0; i < 16; i++)\n+    if (res[i] != max[i])\n+      err++;\n+\n+  find_min ();\n+  for (i = 0; i < 16; i++)\n+    if (res[i] != min[i])\n+      err++;\n+\n+  if (err)\n+    abort ();\n+}"}, {"sha": "bcefa9cfe8d2d9565b7c356c481181edc30a5ca5", "filename": "gcc/testsuite/gcc.target/i386/pr42542-2a.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2a.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target sse4 } */\n+/* { dg-options \"-O1 -msse4.1 -ftree-vectorize\" } */\n+\n+#define CHECK_H \"sse4_1-check.h\"\n+#define TEST sse4_1_test\n+\n+#include \"pr42542-2.c\""}, {"sha": "ddb539bf7a6ae44f4a484566bb43e782ce9d9773", "filename": "gcc/testsuite/gcc.target/i386/pr42542-2b.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-2b.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -msse4.1 -ftree-vectorize\" } */\n+\n+#define CHECK_H \"sse4_1-check.h\"\n+#define TEST sse4_1_test\n+\n+#include \"pr42542-2.c\"\n+\n+/* { dg-final { scan-assembler \"pmaxuw\" } } */\n+/* { dg-final { scan-assembler \"pminuw\" } } */"}, {"sha": "028d2f8996455c35049570416ccd5ae4b2786afa", "filename": "gcc/testsuite/gcc.target/i386/pr42542-3.c", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-3.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -0,0 +1,85 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -msse2 -ftree-vectorize\" } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse2-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST sse2_test\n+#endif\n+\n+#include CHECK_H\n+\n+unsigned char v1[] __attribute__ ((aligned(16))) =\n+{\n+  0x80, 0xd0, 0x90, 0xa0, 1, 15, 10, 15,\n+  0xa0, 0xc0, 0xb0, 0xf0, 2, 25, 20, 35,\n+  3, 34, 30, 36, 0xd0, 0x80, 0xe0, 0xb0,\n+  0xf0, 0xe0, 0xe0, 0x80, 25, 34, 30, 40\n+};\n+unsigned char v2[] __attribute__ ((aligned(16))) =\n+{\n+  4, 44, 40, 48, 0xb0, 0x80, 0x80, 0x90,\n+  5, 55, 50, 51, 0xc0, 0xb0, 0xf0, 0xd0,\n+  0xd0, 0x80, 0xa0, 0xf0, 6, 61, 65, 68,\n+  7, 76, 75, 81, 0xe0, 0xf0, 0xc0, 0x90\n+};\n+\n+unsigned char max[] =\n+{\n+  0x80, 0xd0, 0x90, 0xa0, 0xb0, 0x80, 0x80, 0x90,\n+  0xa0, 0xc0, 0xb0, 0xf0, 0xc0, 0xb0, 0xf0, 0xd0,\n+  0xd0, 0x80, 0xa0, 0xf0, 0xd0, 0x80, 0xe0, 0xb0,\n+  0xf0, 0xe0, 0xe0, 0x80, 0xe0, 0xf0, 0xc0, 0x90\n+};\n+\n+unsigned char min[] =\n+{\n+  4, 44, 40, 48, 1, 15, 10, 15,\n+  5, 55, 50, 51, 2, 25, 20, 35,\n+  3, 34, 30, 36, 6, 61, 65, 68,\n+  7, 76, 75, 81, 25, 34, 30, 40\n+};\n+\n+unsigned char res[32] __attribute__ ((aligned(16)));\n+\n+extern void abort (void);\n+\n+void\n+find_max (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 32; i++)\n+    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];\n+}\n+\n+void\n+find_min (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 32; i++)\n+    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];\n+}\n+\n+static void\n+TEST (void)\n+{\n+  int i;\n+  int err = 0;\n+\n+  find_max ();\n+  for (i = 0; i < 32; i++)\n+    if (res[i] != max[i])\n+      err++;\n+\n+  find_min ();\n+  for (i = 0; i < 32; i++)\n+    if (res[i] != min[i])\n+      err++;\n+\n+  if (err)\n+    abort ();\n+}"}, {"sha": "754e59e8487912c7636df52989e1c7a9f4b77ff1", "filename": "gcc/testsuite/gcc.target/i386/pr42542-3a.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-3a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22554cf9376fc1253adb75a290c4a38f82562b5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-3a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42542-3a.c?ref=22554cf9376fc1253adb75a290c4a38f82562b5c", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -msse2 -ftree-vectorize\" } */\n+\n+#include \"pr42542-3.c\"\n+\n+/* { dg-final { scan-assembler \"pmaxub\" } } */\n+/* { dg-final { scan-assembler \"pminub\" } } */"}]}