{"sha": "ad4f8c4e375dd7603382ed3ff95bd184e1959918", "node_id": "C_kwDOANBUbNoAKGFkNGY4YzRlMzc1ZGQ3NjAzMzgyZWQzZmY5NWJkMTg0ZTE5NTk5MTg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-23T09:22:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-23T10:51:06Z"}, "message": "tree-optimization/108482 - remove stray .LOOP_DIST_ALIAS calls\n\nThe following deals with .LOOP_DIST_ALIAS surviving vectorization\nbecause any of the loops involved were elided between loop distribution\nand vectorization.  As opposed to .LOOP_VECTORIZED which exists only\nbetween if-conversion and vectorization with no intermediate passes\nthis is more difficult to deal with in advance and thus cleaning\nup after vectorization looks better.  There's the unconditional\nvector lowering pass which looks like a good place for this (for\nSIMD uid we have pass_simduid_cleanup).\n\n\tPR tree-optimization/108482\n\t* tree-vect-generic.cc (expand_vector_operations): Fold remaining\n\t.LOOP_DIST_ALIAS calls.\n\n\t* gcc.dg/torture/pr108482.c: New testcase.", "tree": {"sha": "724cee1a7700a232afc3d463de2af460c162365d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/724cee1a7700a232afc3d463de2af460c162365d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad4f8c4e375dd7603382ed3ff95bd184e1959918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4f8c4e375dd7603382ed3ff95bd184e1959918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4f8c4e375dd7603382ed3ff95bd184e1959918", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4f8c4e375dd7603382ed3ff95bd184e1959918/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db6b9a9ddb7855f348ea978c392d8ebc258199af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db6b9a9ddb7855f348ea978c392d8ebc258199af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db6b9a9ddb7855f348ea978c392d8ebc258199af"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "8dc1169a9c586b7d8cfa6b949a0084d822e7cd0b", "filename": "gcc/testsuite/gcc.dg/torture/pr108482.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4f8c4e375dd7603382ed3ff95bd184e1959918/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108482.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4f8c4e375dd7603382ed3ff95bd184e1959918/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108482.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108482.c?ref=ad4f8c4e375dd7603382ed3ff95bd184e1959918", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+\n+int g_30, g_261, g_263, func_1___trans_tmp_17;\n+int **g_120;\n+int *g_530;\n+void func_1() {\n+  int *l_29 = &g_30;\n+  *l_29 = 1;\n+  g_263 = 0;\n+  for (; g_263 <= 1; g_263 += 1) {\n+    g_530 = 0;\n+    if (*l_29) {\n+      char *l_1694 = (char *)&g_261;\n+      *l_1694 &= **g_120;\n+    } else\n+      *l_29 ^= func_1___trans_tmp_17;\n+  }\n+}"}, {"sha": "166a248f4b9512d4c6fc8d760b458b7a467f7790", "filename": "gcc/tree-vect-generic.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4f8c4e375dd7603382ed3ff95bd184e1959918/gcc%2Ftree-vect-generic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4f8c4e375dd7603382ed3ff95bd184e1959918/gcc%2Ftree-vect-generic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.cc?ref=ad4f8c4e375dd7603382ed3ff95bd184e1959918", "patch": "@@ -2398,6 +2398,14 @@ expand_vector_operations (void)\n \t  if (maybe_clean_eh_stmt (gsi_stmt (gsi))\n \t      && gimple_purge_dead_eh_edges (bb))\n \t    cfg_changed = true;\n+\t  /* If a .LOOP_DIST_ALIAS call prevailed loops got elided\n+\t     before vectorization got a chance to get at them.  Simply\n+\t     fold as if loop distribution wasn't performed.  */\n+\t  if (gimple_call_internal_p (gsi_stmt (gsi), IFN_LOOP_DIST_ALIAS))\n+\t    {\n+\t      fold_loop_internal_call (gsi_stmt (gsi), boolean_false_node);\n+\t      cfg_changed = true;\n+\t    }\n \t}\n     }\n "}]}