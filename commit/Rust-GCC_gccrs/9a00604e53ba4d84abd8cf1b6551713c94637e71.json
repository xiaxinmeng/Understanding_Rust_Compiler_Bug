{"sha": "9a00604e53ba4d84abd8cf1b6551713c94637e71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEwMDYwNGU1M2JhNGQ4NGFiZDhjZjFiNjU1MTcxM2M5NDYzN2U3MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-05T00:24:15Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-05T00:24:15Z"}, "message": "re PR go/46959 (M68K Not Supported by Go)\n\n\tPR go/46959\n\tPR go/46960\n\tPR go/46961\n\tPR go/46962\n\tPR go/46963\n\tPR go/46964\nUse __builtin_unwind_init rather than the SAVE_REGS hack.\n\nFrom-SVN: r168500", "tree": {"sha": "11550a0a2513bc0773501fabcb100f6c2acd4a9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11550a0a2513bc0773501fabcb100f6c2acd4a9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a00604e53ba4d84abd8cf1b6551713c94637e71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a00604e53ba4d84abd8cf1b6551713c94637e71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a00604e53ba4d84abd8cf1b6551713c94637e71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a00604e53ba4d84abd8cf1b6551713c94637e71/comments", "author": null, "committer": null, "parents": [{"sha": "adb7f9c365969503911d6eef79be84481a0fa966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb7f9c365969503911d6eef79be84481a0fa966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adb7f9c365969503911d6eef79be84481a0fa966"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "112d52fced82076d2d46dfb918ab42b7dcfe9760", "filename": "libgo/runtime/go-go.c", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a00604e53ba4d84abd8cf1b6551713c94637e71/libgo%2Fruntime%2Fgo-go.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a00604e53ba4d84abd8cf1b6551713c94637e71/libgo%2Fruntime%2Fgo-go.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-go.c?ref=9a00604e53ba4d84abd8cf1b6551713c94637e71", "patch": "@@ -25,21 +25,6 @@ extern void *__splitstack_find (void *, void *, size_t *, void **, void **,\n \t\t\t\tvoid **);\n #endif\n \n-/* We need to ensure that all callee-saved registers are stored on the\n-   stack, in case they hold pointers.  */\n-\n-#if defined(__i386__)\n- #ifndef __PIC__\n-  #define SAVE_REGS asm (\"\" : : : \"esi\", \"edi\", \"ebx\")\n- #else\n-  #define SAVE_REGS asm (\"\" : : : \"esi\", \"edi\")\n- #endif\n-#elif defined(__x86_64__)\n- #define SAVE_REGS asm (\"\" : : : \"r12\", \"r13\", \"r14\", \"r15\", \"rbp\", \"rbx\")\n-#else\n- #error must define SAVE_REGS\n-#endif\n-\n /* We stop the threads by sending them the signal GO_SIG_STOP and we\n    start them by sending them the signal GO_SIG_START.  */\n \n@@ -344,7 +329,7 @@ __go_run_goroutine_gc (int r)\n      needed if we are called directly, since otherwise we might miss\n      something that a function somewhere up the call stack is holding\n      in a register.  */\n-  SAVE_REGS;\n+  __builtin_unwind_init ();\n \n   stop_for_gc ();\n \n@@ -433,7 +418,7 @@ __go_scanstacks (void (*scan) (byte *, int64))\n   struct __go_thread_id *p;\n \n   /* Make sure all the registers for this thread are on the stack.  */\n-  SAVE_REGS;\n+  __builtin_unwind_init ();\n \n   me = pthread_self ();\n   for (p = __go_all_thread_ids; p != NULL; p = p->next)"}]}