{"sha": "877251155ba19212871966c65f4a283907eeb54e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc3MjUxMTU1YmExOTIxMjg3MTk2NmM2NWY0YTI4MzkwN2VlYjU0ZQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-05-23T12:52:01Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-05-23T12:52:01Z"}, "message": "inclhack.def (complier_h_tradcpp): New.\n\n        * inclhack.def (complier_h_tradcpp): New.\n        * fixincl.x: Rebuilt.\n        * tests/base/linux/compiler.h: New.\n\nFrom-SVN: r199249", "tree": {"sha": "d8d6929b922e457e4727373248af526a0b71ecb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8d6929b922e457e4727373248af526a0b71ecb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/877251155ba19212871966c65f4a283907eeb54e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877251155ba19212871966c65f4a283907eeb54e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/877251155ba19212871966c65f4a283907eeb54e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877251155ba19212871966c65f4a283907eeb54e/comments", "author": null, "committer": null, "parents": [{"sha": "ce521ae644954b0869428201225e85d8e86eaf2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce521ae644954b0869428201225e85d8e86eaf2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce521ae644954b0869428201225e85d8e86eaf2e"}], "stats": {"total": 75, "additions": 68, "deletions": 7}, "files": [{"sha": "02fb1497f7b9ac6575c56c123d5c2ddf692af9c7", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877251155ba19212871966c65f4a283907eeb54e/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877251155ba19212871966c65f4a283907eeb54e/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=877251155ba19212871966c65f4a283907eeb54e", "patch": "@@ -1,3 +1,9 @@\n+2013-05-23  Alexander Ivchenko <alexander.ivchenko@intel.com>\n+\n+\t* inclhack.def (complier_h_tradcpp): New.\n+\t* fixincl.x: Rebuilt.\n+\t* tests/base/linux/compiler.h: New.\n+\n 2013-05-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* inclhack.def (solaris_pow_int_overload): Update comment."}, {"sha": "2563528e14e4c0bb9dab198db17cfc84ff8aa118", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 48, "deletions": 7, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877251155ba19212871966c65f4a283907eeb54e/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877251155ba19212871966c65f4a283907eeb54e/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=877251155ba19212871966c65f4a283907eeb54e", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Thursday May 16, 2013 at 01:20:52 PM MEST\n+ * It has been AutoGen-ed  May 23, 2013 at 04:44:10 PM by AutoGen 5.12\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Thu May 16 13:20:52 MEST 2013\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Thu May 23 16:44:10 MSK 2013\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 227 fixup descriptions.\n+ * This file contains 228 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -9324,14 +9324,49 @@ static const char* apzFeraiseexcept_Nosse_DivbyzeroPatch[] = {\n # endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Complier_H_Tradcpp fix\n+ */\n+tSCC zComplier_H_TradcppName[] =\n+     \"complier_h_tradcpp\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zComplier_H_TradcppList[] =\n+  \"linux/compiler.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzComplier_H_TradcppMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zComplier_H_TradcppSelect0[] =\n+       \"#define __builtin_warning\\\\(x, y\\\\.\\\\.\\\\.\\\\) \\\\(1\\\\)\";\n+\n+#define    COMPLIER_H_TRADCPP_TEST_CT  1\n+static tTestDesc aComplier_H_TradcppTests[] = {\n+  { TT_EGREP,    zComplier_H_TradcppSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Complier_H_Tradcpp\n+ */\n+static const char* apzComplier_H_TradcppPatch[] = {\n+    \"format\",\n+    \"/* __builtin_warning(x, y...) is obsolete */\",\n+    (char*)NULL };\n+\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          266\n+#define REGEX_COUNT          267\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            227\n+#define FIX_COUNT            228\n \n /*\n  *  Enumerate the fixes\n@@ -9563,7 +9598,8 @@ typedef enum {\n     X11_NEW_FIXIDX,\n     X11_SPRINTF_FIXIDX,\n     FERAISEEXCEPT_NOSSE_INVALID_FIXIDX,\n-    FERAISEEXCEPT_NOSSE_DIVBYZERO_FIXIDX\n+    FERAISEEXCEPT_NOSSE_DIVBYZERO_FIXIDX,\n+    COMPLIER_H_TRADCPP_FIXIDX\n } t_fixinc_idx;\n \n tFixDesc fixDescList[ FIX_COUNT ] = {\n@@ -10700,5 +10736,10 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n   {  zFeraiseexcept_Nosse_DivbyzeroName,    zFeraiseexcept_Nosse_DivbyzeroList,\n      apzFeraiseexcept_Nosse_DivbyzeroMachs,\n      FERAISEEXCEPT_NOSSE_DIVBYZERO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aFeraiseexcept_Nosse_DivbyzeroTests,   apzFeraiseexcept_Nosse_DivbyzeroPatch, 0 }\n+     aFeraiseexcept_Nosse_DivbyzeroTests,   apzFeraiseexcept_Nosse_DivbyzeroPatch, 0 },\n+\n+  {  zComplier_H_TradcppName,    zComplier_H_TradcppList,\n+     apzComplier_H_TradcppMachs,\n+     COMPLIER_H_TRADCPP_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aComplier_H_TradcppTests,   apzComplier_H_TradcppPatch, 0 }\n };"}, {"sha": "42853da71b469ce00cc30abe1942aebe46c874e6", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/877251155ba19212871966c65f4a283907eeb54e/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/877251155ba19212871966c65f4a283907eeb54e/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=877251155ba19212871966c65f4a283907eeb54e", "patch": "@@ -4894,4 +4894,18 @@ fix = {\n \t_EOText_;\n };\n \n+/*\n+ *  Old Linux kernel's <compiler.h> header breaks Traditional CPP\n+ */\n+fix = {\n+    hackname  = complier_h_tradcpp;\n+    files     = linux/compiler.h;\n+\n+    select    = \"#define __builtin_warning\\\\(x, y\\\\.\\\\.\\\\.\\\\) \\\\(1\\\\)\";\n+    c_fix     = format;\n+    c_fix_arg = \"/* __builtin_warning(x, y...) is obsolete */\";\n+\n+    test_text = \"#define __builtin_warning(x, y...) (1)\";\n+};\n+\n /*EOF*/"}]}