{"sha": "a05afbe3ce425587f38261f523dc94c54bd82174", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA1YWZiZTNjZTQyNTU4N2YzODI2MWY1MjNkYzk0YzU0YmQ4MjE3NA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-22T09:42:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-22T09:42:52Z"}, "message": "This commit was generated by cvs2svn to compensate for changes in r18750,\n\nwhich included commits to RCS files with non-trunk default branches.\n\nFrom-SVN: r18751", "tree": {"sha": "636575da8f6b5f9f238d4fa2e95879c5b7824e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/636575da8f6b5f9f238d4fa2e95879c5b7824e36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a05afbe3ce425587f38261f523dc94c54bd82174", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05afbe3ce425587f38261f523dc94c54bd82174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a05afbe3ce425587f38261f523dc94c54bd82174", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05afbe3ce425587f38261f523dc94c54bd82174/comments", "author": null, "committer": null, "parents": [{"sha": "8ca77a11ca111fc3927a24b871e6b1c7cfa31dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca77a11ca111fc3927a24b871e6b1c7cfa31dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ca77a11ca111fc3927a24b871e6b1c7cfa31dfa"}], "stats": {"total": 188, "additions": 128, "deletions": 60}, "files": [{"sha": "aa6bf3709eafa136d25789b3211137112655b653", "filename": "gcc/f/BUGS", "status": "modified", "additions": 2, "deletions": 48, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05afbe3ce425587f38261f523dc94c54bd82174/gcc%2Ff%2FBUGS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05afbe3ce425587f38261f523dc94c54bd82174/gcc%2Ff%2FBUGS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FBUGS?ref=a05afbe3ce425587f38261f523dc94c54bd82174", "patch": "@@ -25,27 +25,6 @@ port, build, and install `g77', *Note Problems Installing::.\n \n      Until this bug is fixed, use only `-O1' or no optimization.\n \n-   * A code-generation bug afflicts Intel x86 targets when `-O2' is\n-     specified compiling, for example, an old version of the `DNRM2'\n-     routine.  The x87 coprocessor stack is being somewhat mismanaged\n-     in cases where assigned `GOTO' and `ASSIGN' are involved.\n-\n-     Version 0.5.21 of `g77' contains an initial effort to fix the\n-     problem, but this effort is incomplete, and a more complete fix is\n-     planned for the next release.\n-\n-   * Work is needed on the `SIGNAL()' intrinsic to ensure that pointers\n-     and integers are properly handled on all targets, including 64-bit\n-     machines.\n-\n-   * When using `-fugly-comma', `g77' assumes an extra `%VAL(0)'\n-     argument is to be passed to intrinsics taking no arguments, such\n-     as `IARGC()', which in turn reject such a call.  Although this has\n-     been worked around for 0.5.18 due to changes in the handling of\n-     intrinsics, `g77' needs to do the ugly-argument-appending trick\n-     only for external-function invocation, as this would probably be\n-     more consistent with compilers that default to using that trick.\n-\n    * Something about `g77''s straightforward handling of label\n      references and definitions sometimes prevents the GBE from\n      unrolling loops.  Until this is solved, try inserting or removing\n@@ -151,30 +130,6 @@ port, build, and install `g77', *Note Problems Installing::.\n      potential, with the current setup, for interface differences in\n      the way such areas are laid out between `g77' and other compilers.\n \n-   * Some crashes occur when compiling under Solaris on x86 machines.\n-\n-     Nothing has been heard about any such problems for some time, so\n-     this is considering a closed item as of 0.5.20.  Please submit any\n-     bug reports pertinent to `g77''s support for Solaris/x86 systems.\n-\n-   * RS/6000 support is not complete as of the gcc 2.6.3 back end.  The\n-     2.7.0 back end appears to fix this problem, or at least mitigate\n-     it significantly, but there is at least one known problem that is\n-     likely to be a code-generation bug in `gcc-2.7.0' plus\n-     `g77-0.5.16'.  This problem shows up only when compiling the\n-     Fortran program with `-O'.\n-\n-     Nothing has been heard about any RS/6000 problems for some time,\n-     so this is considering a closed item as of 0.5.20.  Please submit\n-     any bug reports pertinent to `g77''s support for RS/6000 systems.\n-\n-   * SGI support is known to be a bit buggy.  The known problem shows\n-     up only when compiling the Fortran program with `-O'.\n-\n-     It is possible these problems have all been fixed in 0.5.20 by\n-     emulating complex arithmetic in the front end.  Please submit any\n-     bug reports pertinent to `g77''s support for SGI systems.\n-\n    * `g77' doesn't work perfectly on 64-bit configurations such as the\n      Alpha.  This problem is expected to be largely resolved as of\n      version 0.5.20, and further addressed by 0.5.21.  Version 0.6\n@@ -210,8 +165,7 @@ port, build, and install `g77', *Note Problems Installing::.\n      general expressions (other than simple variables/arrays), to\n      procedures when compiling on some systems (such as i386) with\n      `-fPIC', as in when compiling for ELF targets.  The symptom is\n-     that the assembler complains about invalid opcodes.  More\n-     investigation is needed, but the problem is almost certainly in\n-     the gcc back end, and it apparently occurs only when compiling\n+     that the assembler complains about invalid opcodes.  This bug is\n+     in the gcc back end, and it apparently occurs only when compiling\n      sufficiently complicated functions *without* the `-O' option.\n "}, {"sha": "143e53e4e94fc6ece8441e13ecf8b30eca883b2e", "filename": "gcc/f/NEWS", "status": "modified", "additions": 119, "deletions": 5, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05afbe3ce425587f38261f523dc94c54bd82174/gcc%2Ff%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05afbe3ce425587f38261f523dc94c54bd82174/gcc%2Ff%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FNEWS?ref=a05afbe3ce425587f38261f523dc94c54bd82174", "patch": "@@ -9,11 +9,125 @@ News About GNU Fortran\n    Changes made to recent versions of GNU Fortran are listed below,\n with the most recent version first.\n \n-   The changes are generally listed with code-generation bugs first,\n-followed by compiler crashes involving valid code, new features, fixes\n-to existing features, new diagnostics, internal improvements, and\n-miscellany.  This order is not strict--for example, some items involve\n-a combination of these elements.\n+   The changes are generally listed in order:\n+\n+  1. Code-generation and run-time-library bugs\n+\n+  2. Compiler and run-time-library crashes involving valid code\n+\n+  3. New features\n+\n+  4. Fixes and enhancements to existing features\n+\n+  5. New diagnostics\n+\n+  6. Internal improvements\n+\n+  7. Miscellany\n+\n+   This order is not strict--for example, some items involve a\n+combination of these elements.\n+\n+In 0.5.22:\n+==========\n+\n+   * Fix code generation for iterative `DO' loops that have one or more\n+     references to the iteration variable, or to aliases of it, in\n+     their control expressions.  For example, `DO 10 J=2,J' now is\n+     compiled correctly.\n+\n+   * Fix a code-generation bug that afflicted Intel x86 targets when\n+     `-O2' was specified compiling, for example, an old version of the\n+     `DNRM2' routine.\n+\n+     The x87 coprocessor stack was being mismanaged in cases involving\n+     assigned `GOTO' and `ASSIGN'.\n+\n+   * Fix `DTime' intrinsic so as not to truncate results to integer\n+     values (on some systems).\n+\n+   * Fix `SIGNAL' intrinsic so it offers portable support for 64-bit\n+     systems (such as Digital Alphas running GNU/Linux).\n+\n+   * Fix run-time crash involving `NAMELIST' on 64-bit machines such as\n+     Alphas.\n+\n+   * Fix `g77' version of `libf2c' so it no longer produces a spurious\n+     `I/O recursion' diagnostic at run time when an I/O operation (such\n+     as `READ *,I') is interrupted in a manner that causes the program\n+     to be terminated via the `f_exit' routine (such as via `C-c').\n+\n+   * Fix `g77' crash triggered by `CASE' statement with an omitted\n+     lower or upper bound.\n+\n+   * Fix `g77' crash compiling references to `CPU_Time' intrinsic.\n+\n+   * Fix `g77' crash (or apparently infinite run-time) when compiling\n+     certain complicated expressions involving `COMPLEX' arithmetic\n+     (especially multiplication).\n+\n+   * Fix `g77' crash on statements such as `PRINT *,\n+     (REAL(Z(I)),I=1,2)', where `Z' is `DOUBLE COMPLEX'.\n+\n+   * Fix a `g++' crash.\n+\n+   * Support `FORMAT(I<EXPR>)' when EXPR is a compile-time constant\n+     `INTEGER' expression.\n+\n+   * Fix `g77' `-g' option so procedures that use `ENTRY' can be\n+     stepped through, line by line, in `gdb'.\n+\n+   * Fix a profiling-related bug in `gcc' back end for Intel x86\n+     architecture.\n+\n+   * Allow any `REAL' argument to intrinsics `Second' and `CPU_Time'.\n+\n+   * Allow any numeric argument to intrinsics `Int2' and `Int8'.\n+\n+   * Use `tempnam', if available, to open scratch files (as in\n+     `OPEN(STATUS='SCRATCH')' so that the `TMPDIR' environment variable,\n+     if present, is used.\n+\n+   * Rename the `gcc' keyword `restrict' to `__restrict__', to avoid\n+     rejecting valid, existing, C programs.  Support for `restrict' is\n+     now more like support for `complex'.\n+\n+   * Fix `-fpedantic' to not reject procedure invocations such as\n+     `I=J()' and `CALL FOO()'.\n+\n+   * Fix `-fugly-comma' to affect invocations of only external\n+     procedures.  Restore rejection of gratuitous trailing omitted\n+     arguments to intrinsics, as in `I=MAX(3,4,,)'.\n+\n+   * Fix compiler so it accepts `-fgnu-intrinsics-*' and\n+     `-fbadu77-intrinsics-*' options.\n+\n+   * Improve diagnostic messages from `libf2c' so it is more likely\n+     that the printing of the active format string is limited to the\n+     string, with no trailing garbage being printed.\n+\n+     (Unlike `f2c', `g77' did not append a null byte to its compiled\n+     form of every format string specified via a `FORMAT' statement.\n+     However, `f2c' would exhibit the problem anyway for a statement\n+     like `PRINT '(I)garbage', 1' by printing `(I)garbage' as the\n+     format string.)\n+\n+   * Improve compilation of FORMAT expressions so that a null byte is\n+     appended to the last operand if it is a constant.  This provides a\n+     cleaner run-time diagnostic as provided by `libf2c' for statements\n+     like `PRINT '(I1', 42'.\n+\n+   * Fix various crashes involving code with diagnosed errors.\n+\n+   * Fix cross-compilation bug when configuring `libf2c'.\n+\n+   * Improve diagnostics.\n+\n+   * Improve documentation and indexing.\n+\n+   * Upgrade to `libf2c' as of 1997-09-23.  This fixes a formatted-I/O\n+     bug that afflicted 64-bit systems with 32-bit integers (such as\n+     Digital Alpha running GNU/Linux).\n \n In 0.5.21:\n =========="}, {"sha": "479e3006ea6bcb8b19290eda89f3b1d9f12fddb7", "filename": "gcc/f/g77.1", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05afbe3ce425587f38261f523dc94c54bd82174/gcc%2Ff%2Fg77.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05afbe3ce425587f38261f523dc94c54bd82174/gcc%2Ff%2Fg77.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.1?ref=a05afbe3ce425587f38261f523dc94c54bd82174", "patch": "@@ -1,29 +1,29 @@\n .\\\" Copyright (c) 1995-1997 Free Software Foundation              -*-Text-*-\n .\\\" See section COPYING for conditions for redistribution\n .\\\" FIXME: no info here on predefines.  Should there be?  extra for F77...\n-.TH G77 1 \"1997-09-09\" \"GNU Tools\" \"GNU Tools\"\n+.TH G77 1 \"1998-03-08\" \"GNU Tools\" \"GNU Tools\"\n .de BP\n .sp\n .ti \\-.2i\n \\(**\n ..\n .SH NAME\n-g77 \\- GNU project Fortran Compiler (v0.5.21)\n+g77 \\- GNU project Fortran Compiler (v0.5.22)\n .SH SYNOPSIS\n .RB g77 \" [\" \\c\n .IR option \" | \" \"filename \" ].\\|.\\|.\n .SH WARNING\n The information in this man page is an extract from the full\n-documentation of the GNU Fortran compiler (version 0.5.21),\n+documentation of the GNU Fortran compiler (version 0.5.22),\n and is limited to the meaning of some of the options.\n .PP\n This man page is not up to date, since no volunteers want to\n maintain it.  If you find a discrepancy between the man page and the\n software, please check the Info file, which is the authoritative\n documentation.\n .\\\" .PP\n-.\\\" The version of GNU Fortran documented by the Info file is 0.5.21,\n-.\\\" which includes substantial improvements and changes since 0.5.21,\n+.\\\" The version of GNU Fortran documented by the Info file is 0.5.22,\n+.\\\" which includes substantial improvements and changes since 0.5.22,\n .\\\" the version documented in this man page.\n .PP\n If we find that the things in this man page that are out of date cause\n@@ -37,7 +37,7 @@ For complete and current documentation, refer to the Info file `\\|\\c\n .B g77\\c\n \\&\\|' or the manual\n .I\n-Using and Porting GNU Fortran (for version 0.5.21)\\c\n+Using and Porting GNU Fortran (for version 0.5.22)\\c\n \\&.  Both are made from the Texinfo source file\n .BR g77.texi .\n .PP\n@@ -333,7 +333,7 @@ entries in\n \\&.\n .br\n .I\n-Using and Porting GNU Fortran (for version 0.5.21)\\c\n+Using and Porting GNU Fortran (for version 0.5.22)\\c\n , James Craig Burley;\n .I\n Using and Porting GNU CC (for version 2.0)\\c"}]}