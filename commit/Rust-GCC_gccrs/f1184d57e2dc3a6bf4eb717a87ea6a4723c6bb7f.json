{"sha": "f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjExODRkNTdlMmRjM2E2YmY0ZWI3MTdhODdlYTZhNDcyM2M2YmI3Zg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-01-23T15:19:28Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-01-23T15:19:28Z"}, "message": "AbstractAction.java: Reformated.\n\n2004-01-23  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/AbstractAction.java: Reformated.\n\nFrom-SVN: r76424", "tree": {"sha": "d0c678b7ce950be79461657b5c8214c7e4076dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0c678b7ce950be79461657b5c8214c7e4076dff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f/comments", "author": null, "committer": null, "parents": [{"sha": "f0bf056e74c52135e14eb3ae11a599c2ab7ecb4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0bf056e74c52135e14eb3ae11a599c2ab7ecb4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0bf056e74c52135e14eb3ae11a599c2ab7ecb4a"}], "stats": {"total": 253, "additions": 141, "deletions": 112}, "files": [{"sha": "613e34a7eb90a9f8c950f729405889b19212cf6d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f", "patch": "@@ -1,3 +1,7 @@\n+2004-01-23  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/AbstractAction.java: Reformated.\n+\n 2004-01-23  Michael Koch  <konqueror@gmx.de>\n \n \t* java/text/CollationElementIterator.java:"}, {"sha": "889044938e90d45bc287228295d57e5aecb2413f", "filename": "libjava/javax/swing/AbstractAction.java", "status": "modified", "additions": 137, "deletions": 112, "changes": 249, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f/libjava%2Fjavax%2Fswing%2FAbstractAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAbstractAction.java?ref=f1184d57e2dc3a6bf4eb717a87ea6a4723c6bb7f", "patch": "@@ -56,118 +56,143 @@\n {\n   static final long serialVersionUID = -6803159439231523484L;\n \n-\t/**\n-\t * enabled\n-\t */\n-\tprotected boolean enabled = true;\n-\n-\t/**\n-\t * changeSupport\n-\t */\n-\tprotected SwingPropertyChangeSupport changeSupport =\n-\t\t\t\tnew SwingPropertyChangeSupport(this);\n-\n-\t/**\n-\t * store\n-\t */\n-\tprivate transient HashMap store = new HashMap();\n-\n-\t/**\n-\t * Constructor AbstractAction\n-\t */\n-\tpublic AbstractAction() {\n-\t\tthis(\"\"); // TODO: default name\n-\t} // AbstractAction()\n-\n-\t/**\n-\t * Constructor AbstractAction\n-\t * @param name TODO\n-\t */\n-\tpublic AbstractAction(String name) {\n-\t\tthis(name, null); // TODO: default icon??\n-\t} // AbstractAction()\n-\n-\t/**\n-\t * Constructor AbstractAction\n-\t * @param name TODO\n-\t * @param icon TODO\n-\t */\n-\tpublic AbstractAction(String name, Icon icon) {\n-\t\tputValue(NAME, name);\n-\t\tputValue(SMALL_ICON, icon);\n-\t} // AbstractAction()\n-\n-\t/**\n-\t * readObject\n-\t * @param stream TODO\n-\t * @exception ClassNotFoundException TODO\n-\t * @exception IOException TODO\n-\t */\n-\tprivate void readObject(ObjectInputStream stream) \n-\t\t\tthrows ClassNotFoundException, IOException {\n-\t\t// TODO\n-\t} // readObject()\n-\n-\t/**\n-\t * writeObject\n-\t * @param stream TODO\n-\t * @exception IOException TODO\n-\t */\n-\tprivate void writeObject(ObjectOutputStream stream) throws IOException {\n-\t\t// TODO\n-\t} // writeObject()\n-\n-\t/**\n-\t * clone\n-\t * @exception CloneNotSupportedException TODO\n-\t * @returns Object\n-\t */\n-\tprotected Object clone() throws CloneNotSupportedException {\n-\t\t// What to do??\n-\t\treturn null;\n-\t} // clone()\n-\n-\t/**\n-\t * getValue\n-\t * @param key TODO\n-\t * @returns Object\n-\t */\n-\tpublic Object getValue(String key) {\n-\t\treturn store.get(key);\n-\t} // getValue()\n-\n-\t/**\n-\t * putValue\n-\t * @param key TODO\n-\t * @param value TODO\n-\t */\n-\tpublic void putValue(String key, Object value) {\n-\t\tstore.put(key, value);\n-\t} // putValue()\n-\n-\t/**\n-\t * isEnabled\n-\t * @returns boolean\n-\t */\n-\tpublic boolean isEnabled() {\n-\t\treturn enabled;\n-\t} // isEnabled()\n-\n-\t/**\n-\t * setEnabled\n-\t * @param enabled TODO\n-\t */\n-\tpublic void setEnabled(boolean enabled) {\n-\t\tthis.enabled = enabled;\n-\t} // setEnabled()\n-\n-\t/**\n-\t * getKeys\n-\t * @returns Object[]\n-\t */\n-\tpublic Object[] getKeys() {\n-\t\treturn store.keySet().toArray();\n-\t} // getKeys()\n+  /**\n+   * enabled\n+   */\n+  protected boolean enabled = true;\n+\n+  /**\n+   * changeSupport\n+   */\n+  protected SwingPropertyChangeSupport changeSupport =\n+    new SwingPropertyChangeSupport(this);\n+\n+  /**\n+   * store\n+   */\n+  private transient HashMap store = new HashMap();\n+\n+  /**\n+   * Constructor AbstractAction\n+   */\n+  public AbstractAction()\n+  {\n+    this(\"\"); // TODO: default name\n+  }\n+\n+  /**\n+   * Constructor AbstractAction\n+   *\n+   * @param name TODO\n+   */\n+  public AbstractAction(String name)\n+  {\n+    this(name, null); // TODO: default icon??\n+  }\n+\n+  /**\n+   * Constructor AbstractAction\n+   *\n+   * @param name TODO\n+   * @param icon TODO\n+   */\n+  public AbstractAction(String name, Icon icon)\n+  {\n+    putValue(NAME, name);\n+    putValue(SMALL_ICON, icon);\n+  }\n+\n+  /**\n+   * readObject\n+   *\n+   * @param stream the stream to read from\n+   *\n+   * @exception ClassNotFoundException TODO\n+   * @exception IOException if an error occurs\n+   */\n+  private void readObject(ObjectInputStream stream)\n+    throws ClassNotFoundException, IOException\n+  {\n+    // TODO\n+  }\n+\n+  /**\n+   * writeObject\n+   *\n+   * @param stream the stream to write to\n+   *\n+   * @exception IOException if an error occurs\n+   */\n+  private void writeObject(ObjectOutputStream stream) throws IOException\n+  {\n+    // TODO\n+  }\n+\n+  /**\n+   * clone\n+   *\n+   * @return Object\n+   *\n+   * @exception CloneNotSupportedException TODO\n+   */\n+  protected Object clone() throws CloneNotSupportedException\n+  {\n+    AbstractAction copy = (AbstractAction) super.clone();\n+    copy.store = (HashMap) store.clone();\n+    return copy;\n+  }\n+\n+  /**\n+   * Returns a value for a given key from the built-in store.\n+   *\n+   * @param key the key to get the value for\n+   *\n+   * @return Object\n+   */\n+  public Object getValue(String key)\n+  {\n+    return store.get(key);\n+  }\n+\n+  /**\n+   * Puts a key/value pair into the built-in store.\n+   *\n+   * @param key the key\n+   * @param value the value\n+   */\n+  public void putValue(String key, Object value)\n+  {\n+    store.put(key, value);\n+  }\n+\n+  /**\n+   * isEnabled\n+   *\n+   * @return boolean\n+   */\n+  public boolean isEnabled()\n+  {\n+    return enabled;\n+  }\n+\n+  /**\n+   * setEnabled\n+   *\n+   * @param enabled TODO\n+   */\n+  public void setEnabled(boolean enabled)\n+  {\n+    this.enabled = enabled;\n+  }\n+\n+  /**\n+   * getKeys\n+   * @returns Object[]\n+   */\n+  public Object[] getKeys()\n+  {\n+    return store.keySet().toArray();\n+  }\n \n   /**\n    * firePropertyChange"}]}