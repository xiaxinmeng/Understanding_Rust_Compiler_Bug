{"sha": "c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRmZjIyMWVhODNjM2QxMTliZjViZGE4OTU4YTNkYTA5YWQ5ZDU3Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-20T19:17:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-20T19:17:12Z"}, "message": "re PR target/71559 (ICE in ix86_fp_cmp_code_to_pcmp_immediate, at config/i386/i386.c:23042 (KNL/AVX512))\n\n\tPR target/71559\n\t* config/i386/i386.c (ix86_fp_cmp_code_to_pcmp_immediate): Fix up\n\treturned values and add UN*/LTGT/*ORDERED cases with values matching\n\tD operand modifier on vcmp for AVX.\n\n\t* gcc.target/i386/sse2-pr71559.c: New test.\n\t* gcc.target/i386/avx-pr71559.c: New test.\n\t* gcc.target/i386/avx512f-pr71559.c: New test.\n\nFrom-SVN: r237614", "tree": {"sha": "052435d7801e694c948b4ed3aae522d3ff109e80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/052435d7801e694c948b4ed3aae522d3ff109e80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1b5abfbbbdcecb62a0ed3c3904fb1233b4db8a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b5abfbbbdcecb62a0ed3c3904fb1233b4db8a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b5abfbbbdcecb62a0ed3c3904fb1233b4db8a9"}], "stats": {"total": 129, "additions": 124, "deletions": 5}, "files": [{"sha": "68648a6384ccb20ed48c4dae0b24c0b1865d0583", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "patch": "@@ -1,3 +1,10 @@\n+2016-06-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/71559\n+\t* config/i386/i386.c (ix86_fp_cmp_code_to_pcmp_immediate): Fix up\n+\treturned values and add UN*/LTGT/*ORDERED cases with values matching\n+\tD operand modifier on vcmp for AVX.\n+\n 2016-06-20  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.opt"}, {"sha": "91cc0d29a30833c8ffb89e6f0bec4b102a70a9f9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "patch": "@@ -23622,17 +23622,33 @@ ix86_fp_cmp_code_to_pcmp_immediate (enum rtx_code code)\n   switch (code)\n     {\n     case EQ:\n-      return 0x08;\n+      return 0x00;\n     case NE:\n       return 0x04;\n     case GT:\n-      return 0x16;\n+      return 0x0e;\n     case LE:\n-      return 0x1a;\n+      return 0x02;\n     case GE:\n-      return 0x15;\n+      return 0x0d;\n     case LT:\n-      return 0x19;\n+      return 0x01;\n+    case UNLE:\n+      return 0x0a;\n+    case UNLT:\n+      return 0x09;\n+    case UNGE:\n+      return 0x05;\n+    case UNGT:\n+      return 0x06;\n+    case UNEQ:\n+      return 0x18;\n+    case LTGT:\n+      return 0x0c;\n+    case ORDERED:\n+      return 0x07;\n+    case UNORDERED:\n+      return 0x03;\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "d2963c3fe4a6db55a3a9a209598b494b3d3f69fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "patch": "@@ -1,3 +1,10 @@\n+2016-06-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/71559\n+\t* gcc.target/i386/sse2-pr71559.c: New test.\n+\t* gcc.target/i386/avx-pr71559.c: New test.\n+\t* gcc.target/i386/avx512f-pr71559.c: New test.\n+\n 2016-06-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/71194"}, {"sha": "af16d56d78581673d615dd4e2534a5cb8aa86bb2", "filename": "gcc/testsuite/gcc.target/i386/avx-pr71559.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr71559.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr71559.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr71559.c?ref=c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "patch": "@@ -0,0 +1,8 @@\n+/* PR target/71559 */\n+/* { dg-do run { target avx } } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx\" } */\n+\n+#include \"avx-check.h\"\n+#define PR71559_TEST avx_test\n+\n+#include \"sse2-pr71559.c\""}, {"sha": "d78d86ac2f88b4b2adb648ff9c49ded5d866b85a", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr71559.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr71559.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr71559.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr71559.c?ref=c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "patch": "@@ -0,0 +1,8 @@\n+/* PR target/71559 */\n+/* { dg-do run { target avx512f } } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx512f\" } */\n+\n+#include \"avx512f-check.h\"\n+#define PR71559_TEST avx512f_test\n+\n+#include \"sse2-pr71559.c\""}, {"sha": "59ecc7fb37f1e2e4634edfa1bfa1e274841467b6", "filename": "gcc/testsuite/gcc.target/i386/sse2-pr71559.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-pr71559.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ff221ea83c3d119bf5bda8958a3da09ad9d57f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-pr71559.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-pr71559.c?ref=c4ff221ea83c3d119bf5bda8958a3da09ad9d57f", "patch": "@@ -0,0 +1,73 @@\n+/* PR target/71559 */\n+/* { dg-do run { target sse2 } } */\n+/* { dg-options \"-O2 -ftree-vectorize -msse2\" } */\n+\n+#ifndef PR71559_TEST\n+#include \"sse2-check.h\"\n+#define PR71559_TEST sse2_test\n+#endif\n+\n+#define N 16\n+float a[N] = { 5.0f, -3.0f, 1.0f, __builtin_nanf (\"\"), 9.0f, 7.0f, -3.0f, -9.0f,\n+               -3.0f, -5.0f, -9.0f, __builtin_nanf (\"\"), 0.5f, -0.5f, 0.0f, 0.0f };\n+float b[N] = { -5.0f, 3.0f, 1.0f, 7.0f, 8.0f, 8.0f, -3.0f, __builtin_nanf (\"\"),\n+               -4.0f, -4.0f, -9.0f, __builtin_nanf (\"\"), 0.0f, 0.0f, 0.0f, __builtin_nanf (\"\") };\n+int c[N], d[N];\n+\n+#define FN(name, op) \\\n+void\t\t\t\t\t\\\n+name (void)\t\t\t\t\\\n+{\t\t\t\t\t\\\n+  int i;\t\t\t\t\\\n+  for (i = 0; i < N; i++)\t\t\\\n+    c[i] = (op || d[i] > 37) ? 5 : 32;\t\\\n+}\n+FN (eq, a[i] == b[i])\n+FN (ne, a[i] != b[i])\n+FN (gt, a[i] > b[i])\n+FN (ge, a[i] >= b[i])\n+FN (lt, a[i] < b[i])\n+FN (le, a[i] <= b[i])\n+FN (unle, !__builtin_isgreater (a[i], b[i]))\n+FN (unlt, !__builtin_isgreaterequal (a[i], b[i]))\n+FN (unge, !__builtin_isless (a[i], b[i]))\n+FN (ungt, !__builtin_islessequal (a[i], b[i]))\n+FN (uneq, !__builtin_islessgreater (a[i], b[i]))\n+FN (ordered, !__builtin_isunordered (a[i], b[i]))\n+FN (unordered, __builtin_isunordered (a[i], b[i]))\n+\n+#define TEST(name, GT, LT, EQ, UO) \\\n+  name ();\t\t\t\t\\\n+  for (i = 0; i < N; i++)\t\t\\\n+    {\t\t\t\t\t\\\n+      int v;\t\t\t\t\\\n+      switch (i % 4)\t\t\t\\\n+\t{\t\t\t\t\\\n+\tcase 0: v = GT ? 5 : 32; break;\t\\\n+\tcase 1: v = LT ? 5 : 32; break;\t\\\n+\tcase 2: v = EQ ? 5 : 32; break;\t\\\n+\tcase 3: v = UO ? 5 : 32; break;\t\\\n+\t}\t\t\t\t\\\n+      if (c[i] != v)\t\t\t\\\n+\t__builtin_abort ();\t\t\\\n+    }\n+\n+void\n+PR71559_TEST (void)\n+{\n+  int i;\n+  asm volatile (\"\" : : \"g\" (a), \"g\" (b), \"g\" (c), \"g\" (d) : \"memory\");\n+  TEST (eq, 0, 0, 1, 0)\n+  TEST (ne, 1, 1, 0, 1)\n+  TEST (gt, 1, 0, 0, 0)\n+  TEST (ge, 1, 0, 1, 0)\n+  TEST (lt, 0, 1, 0, 0)\n+  TEST (le, 0, 1, 1, 0)\n+  TEST (unle, 0, 1, 1, 1)\n+  TEST (unlt, 0, 1, 0, 1)\n+  TEST (unge, 1, 0, 1, 1)\n+  TEST (ungt, 1, 0, 0, 1)\n+  TEST (uneq, 0, 0, 1, 1)\n+  TEST (ordered, 1, 1, 1, 0)\n+  TEST (unordered, 0, 0, 0, 1)\n+}"}]}