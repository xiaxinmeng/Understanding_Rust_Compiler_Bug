{"sha": "6396547e62404f1a4965a61dd5c87258cda2be2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM5NjU0N2U2MjQwNGYxYTQ5NjVhNjFkZDVjODcyNThjZGEyYmUyYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-09-25T23:44:57Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-09-25T23:44:57Z"}, "message": "i386.md: Check cmp/branch fuse for cmp peephole optimization.\n\n2008-09-25  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.md: Check cmp/branch fuse for cmp peephole\n\toptimization.\n\nFrom-SVN: r140673", "tree": {"sha": "d82213a5409bf991ef8839f8fa82d55fca8a68ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d82213a5409bf991ef8839f8fa82d55fca8a68ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6396547e62404f1a4965a61dd5c87258cda2be2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6396547e62404f1a4965a61dd5c87258cda2be2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6396547e62404f1a4965a61dd5c87258cda2be2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6396547e62404f1a4965a61dd5c87258cda2be2c/comments", "author": null, "committer": null, "parents": [{"sha": "548a20809c652120304d3b2d2119b8b6c88f35a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548a20809c652120304d3b2d2119b8b6c88f35a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/548a20809c652120304d3b2d2119b8b6c88f35a7"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "aa42f0be5130e44e76899f8d193facf1ed3cbf3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6396547e62404f1a4965a61dd5c87258cda2be2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6396547e62404f1a4965a61dd5c87258cda2be2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6396547e62404f1a4965a61dd5c87258cda2be2c", "patch": "@@ -1,3 +1,8 @@\n+2008-09-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.md: Check cmp/branch fuse for cmp peephole\n+\toptimization.\n+\n 2008-09-25  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* combine.c (make_compound_operation): Handle the 'E' format.\n@@ -11,7 +16,7 @@\n \n 2008-09-25 Sergei Dyshel <sergeid@il.ibm.com>\n \n-      * matrix-reorg.c (transform_allocation_sites): Initializers \n+\t* matrix-reorg.c (transform_allocation_sites): Initializers \n \tadded to avoid the warning.\n \n 2008-09-25  Martin Jambor  <mjambor@suse.cz>"}, {"sha": "c6fba67ffbe9728888a98b7815f476f2000b25ae", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6396547e62404f1a4965a61dd5c87258cda2be2c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6396547e62404f1a4965a61dd5c87258cda2be2c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6396547e62404f1a4965a61dd5c87258cda2be2c", "patch": "@@ -20966,15 +20966,16 @@\n   \"\")\n \f\n ;; Convert compares with 1 to shorter inc/dec operations when CF is not\n-;; required and register dies.  Similarly for 128 to plus -128.\n+;; required and register dies.  Similarly for 128 to -128.\n (define_peephole2\n   [(set (match_operand 0 \"flags_reg_operand\" \"\")\n \t(match_operator 1 \"compare_operator\"\n \t  [(match_operand 2 \"register_operand\" \"\")\n \t   (match_operand 3 \"const_int_operand\" \"\")]))]\n-  \"(INTVAL (operands[3]) == -1\n-    || INTVAL (operands[3]) == 1\n-    || INTVAL (operands[3]) == 128)\n+  \"(((!TARGET_FUSE_CMP_AND_BRANCH || optimize_size)\n+     && incdec_operand (operands[3], GET_MODE (operands[3])))\n+    || (!TARGET_FUSE_CMP_AND_BRANCH\n+\t&& INTVAL (operands[3]) == 128))\n    && ix86_match_ccmode (insn, CCGCmode)\n    && peep2_reg_dead_p (1, operands[2])\"\n   [(parallel [(set (match_dup 0)"}]}