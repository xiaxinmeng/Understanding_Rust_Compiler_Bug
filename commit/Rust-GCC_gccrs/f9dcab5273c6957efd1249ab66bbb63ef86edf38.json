{"sha": "f9dcab5273c6957efd1249ab66bbb63ef86edf38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlkY2FiNTI3M2M2OTU3ZWZkMTI0OWFiNjZiYmI2M2VmODZlZGYzOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-09T13:09:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-09T13:09:05Z"}, "message": "(check_format_info): Correct handling of the 'a' flag which adds\nanother pointer level.\n\nFrom-SVN: r14176", "tree": {"sha": "54dfe04a6e74d5f68ab6078225ac29047efb97f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54dfe04a6e74d5f68ab6078225ac29047efb97f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9dcab5273c6957efd1249ab66bbb63ef86edf38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9dcab5273c6957efd1249ab66bbb63ef86edf38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9dcab5273c6957efd1249ab66bbb63ef86edf38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9dcab5273c6957efd1249ab66bbb63ef86edf38/comments", "author": null, "committer": null, "parents": [{"sha": "f428585b0584e19176a1073cc36c6dc812bcba94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f428585b0584e19176a1073cc36c6dc812bcba94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f428585b0584e19176a1073cc36c6dc812bcba94"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "8b6d9f3133a1677b2864868c756349f8fab417d2", "filename": "gcc/c-common.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9dcab5273c6957efd1249ab66bbb63ef86edf38/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9dcab5273c6957efd1249ab66bbb63ef86edf38/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=f9dcab5273c6957efd1249ab66bbb63ef86edf38", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines shared by all languages that are variants of C.\n-   Copyright (C) 1992, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1396,6 +1396,8 @@ check_format_info (info, params)\n \t  sprintf (message, \"`a' flag used with `%c' format\",\n \t\t   format_char);\n \t  warning (message);\n+\t  /* To simplify the following code.  */\n+\t  aflag = 0;\n \t}\n       if (info->is_scan && format_char == '[')\n \t{\n@@ -1485,7 +1487,7 @@ check_format_info (info, params)\n \n       /* Check the types of any additional pointer arguments\n \t that precede the \"real\" argument.  */\n-      for (i = 0; i < fci->pointer_count; ++i)\n+      for (i = 0; i < fci->pointer_count + aflag; ++i)\n \t{\n \t  if (TREE_CODE (cur_type) == POINTER_TYPE)\n \t    {\n@@ -1496,15 +1498,16 @@ check_format_info (info, params)\n \t    {\n \t      sprintf (message,\n \t\t       \"format argument is not a %s (arg %d)\",\n-\t\t       ((fci->pointer_count == 1) ? \"pointer\" : \"pointer to a pointer\"),\n+\t\t       ((fci->pointer_count + aflag == 1)\n+\t\t\t? \"pointer\" : \"pointer to a pointer\"),\n \t\t       arg_num);\n \t      warning (message);\n \t    }\n \t  break;\n \t}\n \n       /* Check the type of the \"real\" argument, if there's a type we want.  */\n-      if (i == fci->pointer_count && wanted_type != 0\n+      if (i == fci->pointer_count + aflag && wanted_type != 0\n \t  && TREE_CODE (cur_type) != ERROR_MARK\n \t  && wanted_type != TYPE_MAIN_VARIANT (cur_type)\n \t  /* If we want `void *', allow any pointer type."}]}