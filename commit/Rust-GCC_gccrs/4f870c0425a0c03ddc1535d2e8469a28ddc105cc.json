{"sha": "4f870c0425a0c03ddc1535d2e8469a28ddc105cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY4NzBjMDQyNWEwYzAzZGRjMTUzNWQyZTg0NjlhMjhkZGMxMDVjYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-09-18T01:23:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-18T01:23:34Z"}, "message": "libgcc2.c (find_exception_handler): Subtract one from our PC when looking for a handler...\n\n\t* libgcc2.c (find_exception_handler): Subtract one from our PC when\n \tlooking for a handler, to avoid hitting the beginning of the next\n \tregion.\n\n\t* except.c (expand_builtin_set_return_addr_reg): Use force_operand.\n\nFrom-SVN: r15534", "tree": {"sha": "d7cf840b09538a089b4015c393caa2b4c008faaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7cf840b09538a089b4015c393caa2b4c008faaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f870c0425a0c03ddc1535d2e8469a28ddc105cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f870c0425a0c03ddc1535d2e8469a28ddc105cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f870c0425a0c03ddc1535d2e8469a28ddc105cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f870c0425a0c03ddc1535d2e8469a28ddc105cc/comments", "author": null, "committer": null, "parents": [{"sha": "4eb66248bf9ba2c160f05da1b684412c17374aff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eb66248bf9ba2c160f05da1b684412c17374aff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eb66248bf9ba2c160f05da1b684412c17374aff"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "1d12a8f6fe5982d49f2c7e266c8f81914d4a9442", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f870c0425a0c03ddc1535d2e8469a28ddc105cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f870c0425a0c03ddc1535d2e8469a28ddc105cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f870c0425a0c03ddc1535d2e8469a28ddc105cc", "patch": "@@ -1,3 +1,11 @@\n+Wed Sep 17 18:19:53 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* libgcc2.c (find_exception_handler): Subtract one from our PC when\n+ \tlooking for a handler, to avoid hitting the beginning of the next\n+ \tregion.\n+\n+\t* except.c (expand_builtin_set_return_addr_reg): Use force_operand.\n+\n Wed Sep 17 18:33:59 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* mips/abi64.h (LONG_MAX_SPEC): Define."}, {"sha": "7929e9c890e6d9968eed18842f7f74f9ca74dfc2", "filename": "gcc/except.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f870c0425a0c03ddc1535d2e8469a28ddc105cc/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f870c0425a0c03ddc1535d2e8469a28ddc105cc/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=4f870c0425a0c03ddc1535d2e8469a28ddc105cc", "patch": "@@ -2207,13 +2207,16 @@ void\n expand_builtin_set_return_addr_reg (addr_tree)\n      tree addr_tree;\n {\n+  rtx tmp;\n   rtx ra = expand_builtin_return_addr (BUILT_IN_RETURN_ADDRESS,\n \t\t\t\t       0, hard_frame_pointer_rtx);\n \n   if (GET_CODE (ra) != REG || REGNO (ra) >= FIRST_PSEUDO_REGISTER)\n     return;\n \n-  emit_move_insn (ra, expand_builtin_frob_return_addr (addr_tree));\n+  tmp = force_operand (expand_builtin_frob_return_addr (addr_tree), ra);\n+  if (tmp != ra)\n+    emit_move_insn (ra, tmp);\n }\n \n /* Choose two registers for communication between the main body of"}, {"sha": "6b3b7b41f381cf48e67042f318579220694b08c9", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f870c0425a0c03ddc1535d2e8469a28ddc105cc/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f870c0425a0c03ddc1535d2e8469a28ddc105cc/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=4f870c0425a0c03ddc1535d2e8469a28ddc105cc", "patch": "@@ -3337,6 +3337,10 @@ find_exception_handler (void *pc, exception_table *table)\n       int pos;\n       int best = -1;\n \n+      /* We subtract 1 from PC to avoid hitting the beginning of the next\n+\t region.  */\n+      --pc;\n+\n       /* We can't do a binary search because the table isn't guaranteed\n \t to be sorted from function to function.  */\n       for (pos = 0; table[pos].exception_handler != (void *) -1; ++pos)"}]}