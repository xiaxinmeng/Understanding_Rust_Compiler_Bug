{"sha": "aa666e00632d6f6433ad549eb061e9c568708edd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE2NjZlMDA2MzJkNmY2NDMzYWQ1NDllYjA2MWU5YzU2ODcwOGVkZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-08-25T07:13:48Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-08-25T07:13:48Z"}, "message": "re PR tree-optimization/28807 (wrong code with may_alias and structs)\n\n2006-08-24  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/28807\n        * tree-ssa-operands.c (access_can_touch_variable): Don't say\n        the access through a base which has an alias set of 0 cannot\n        touch the variable.\n\n2006-08-24  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/28807\n        * gcc.c-torture/execute/mayalias-2.c: New test.\n        * gcc.dg/tree-ssa/alias-13.c: New test.\n\nFrom-SVN: r116393", "tree": {"sha": "f40e0754fe57cf6ccebf878a32456f5dde203129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f40e0754fe57cf6ccebf878a32456f5dde203129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa666e00632d6f6433ad549eb061e9c568708edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa666e00632d6f6433ad549eb061e9c568708edd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa666e00632d6f6433ad549eb061e9c568708edd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa666e00632d6f6433ad549eb061e9c568708edd/comments", "author": null, "committer": null, "parents": [{"sha": "a073516d43b79060b506f67083d291832c706a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a073516d43b79060b506f67083d291832c706a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a073516d43b79060b506f67083d291832c706a93"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "d6d4d0178407d3a1fca98afd17aca282e112d02e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa666e00632d6f6433ad549eb061e9c568708edd", "patch": "@@ -1,4 +1,11 @@\n-2006-08-24  Bill Wendling <wendling@apple.com>\n+2006-08-24  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/28807\n+\t* tree-ssa-operands.c (access_can_touch_variable): Don't say\n+\tthe access through a base which has an alias set of 0 cannot\n+\ttouch the variable.\n+\n+2006-08-24  Bill Wendling  <wendling@apple.com>\n \n \t* doc/tm.texi (TARGET_DEFAULT_PACK_STRUCT): Fixed English.\n \t"}, {"sha": "e7d53d3e32389890b3fc7610efef7aa144754b34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa666e00632d6f6433ad549eb061e9c568708edd", "patch": "@@ -1,3 +1,9 @@\n+2006-08-24  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/28807\n+\t* gcc.c-torture/execute/mayalias-2.c: New test.\n+\t* gcc.dg/tree-ssa/alias-13.c: New test.\n+\n 2006-08-24  Jan Hubicka  <jh@suse.cz>\n \n \tPR debug/26881"}, {"sha": "5a1a9d5e4a1b6207543974358d82ecf8a4693aec", "filename": "gcc/testsuite/gcc.c-torture/execute/mayalias-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmayalias-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmayalias-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmayalias-2.c?ref=aa666e00632d6f6433ad549eb061e9c568708edd", "patch": "@@ -0,0 +1,17 @@\n+struct S { short x; };\n+typedef struct S __attribute__((__may_alias__)) test;\n+\n+int f() {\n+  int a=10;\n+  test *p=(test *)&a;\n+  p->x = 1;\n+  return a;\n+}\n+\n+int main() {\n+  if (f() == 10)\n+    __builtin_abort();\n+  return 0;\n+}\n+\n+"}, {"sha": "ae7cc82148a707d8d292721cf819c75516d84d72", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-13.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-13.c?ref=aa666e00632d6f6433ad549eb061e9c568708edd", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do link } */\n+/* { dg-options \"-O2\" } */\n+\n+\n+struct a\n+{\n+  char a1;\n+};\n+\n+int *aa;\n+\n+void g(int *a)\n+{\n+  aa = a;\n+  *a = 2;\n+}\n+\n+int t(int i, struct a *b)\n+{\n+  g(&i);\n+  b->a1 = 1;\n+  i = 2;\n+  if (b->a1 != 1)\n+    link_failure ();\n+}\n+int main(void)\n+{\n+  struct a b;\n+  t(1, &b);\n+  return 0;\n+}\n+\n+"}, {"sha": "0e931ca74a9d7449941243ca14acc84ed2f626ee", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa666e00632d6f6433ad549eb061e9c568708edd/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=aa666e00632d6f6433ad549eb061e9c568708edd", "patch": "@@ -1150,7 +1150,10 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n \t       || TREE_CODE (TREE_TYPE (base)) != UNION_TYPE)\n \t   && !AGGREGATE_TYPE_P (TREE_TYPE (alias))\n \t   && TREE_CODE (TREE_TYPE (alias)) != COMPLEX_TYPE\n-\t   && !POINTER_TYPE_P (TREE_TYPE (alias)))\n+\t   && !POINTER_TYPE_P (TREE_TYPE (alias))\n+\t   /* When the struct has may_alias attached to it, we need not to\n+\t      return true.  */\n+\t   && get_alias_set (base))\n     {\n #ifdef ACCESS_DEBUGGING\n       fprintf (stderr, \"Access to \");"}]}