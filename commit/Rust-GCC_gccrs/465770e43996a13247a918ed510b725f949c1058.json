{"sha": "465770e43996a13247a918ed510b725f949c1058", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY1NzcwZTQzOTk2YTEzMjQ3YTkxOGVkNTEwYjcyNWY5NDljMTA1OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-05-07T09:52:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-05-07T09:52:38Z"}, "message": "re PR tree-optimization/66002 (paq8p benchmark 50% slower than clang on sandybridge)\n\n2015-05-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66002\n\t* passes.def: Schedule another pass_merge_phi after ifcombine, right\n\tbefore phiopt.\n\n\t* gcc.dg/vect/vect-125.c: New testcase.\n\nFrom-SVN: r222873", "tree": {"sha": "5610015ab1a2cf641d6417f9a4f4d4f6822e8a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5610015ab1a2cf641d6417f9a4f4d4f6822e8a97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/465770e43996a13247a918ed510b725f949c1058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465770e43996a13247a918ed510b725f949c1058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/465770e43996a13247a918ed510b725f949c1058", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465770e43996a13247a918ed510b725f949c1058/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0f0d3b9d210c7962d8186403b87c0b08c19b8ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f0d3b9d210c7962d8186403b87c0b08c19b8ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0f0d3b9d210c7962d8186403b87c0b08c19b8ff"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "c294b014d62199a1d3fd647fa003c24be909dff1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465770e43996a13247a918ed510b725f949c1058/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465770e43996a13247a918ed510b725f949c1058/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=465770e43996a13247a918ed510b725f949c1058", "patch": "@@ -1,3 +1,9 @@\n+2015-05-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66002\n+\t* passes.def: Schedule another pass_merge_phi after ifcombine, right\n+\tbefore phiopt.\n+\n 2015-05-07  Marek Polacek  <polacek@redhat.com>\n \t    Martin Uecker  <uecker@eecs.berkeley.edu>\n "}, {"sha": "4690e23afb2635704442c18eb0fbff1688907adb", "filename": "gcc/passes.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465770e43996a13247a918ed510b725f949c1058/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465770e43996a13247a918ed510b725f949c1058/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=465770e43996a13247a918ed510b725f949c1058", "patch": "@@ -177,6 +177,7 @@ along with GCC; see the file COPYING3.  If not see\n       NEXT_PASS (pass_cselim);\n       NEXT_PASS (pass_copy_prop);\n       NEXT_PASS (pass_tree_ifcombine);\n+      NEXT_PASS (pass_merge_phi);\n       NEXT_PASS (pass_phiopt);\n       NEXT_PASS (pass_tail_recursion);\n       NEXT_PASS (pass_ch);"}, {"sha": "69cb4ffd56c80b0dcac9530d76462478fa4370c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465770e43996a13247a918ed510b725f949c1058/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465770e43996a13247a918ed510b725f949c1058/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=465770e43996a13247a918ed510b725f949c1058", "patch": "@@ -1,3 +1,8 @@\n+2015-05-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66002\n+\t* gcc.dg/vect/vect-125.c: New testcase.\n+\n 2015-05-07  Marek Polacek  <polacek@redhat.com>\n \t    Martin Uecker  <uecker@eecs.berkeley.edu>\n "}, {"sha": "f6ffef5c42e9fe6c33926648a8c77b9f1d5914e4", "filename": "gcc/testsuite/gcc.dg/vect/vect-125.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465770e43996a13247a918ed510b725f949c1058/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-125.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465770e43996a13247a918ed510b725f949c1058/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-125.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-125.c?ref=465770e43996a13247a918ed510b725f949c1058", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target vect_int_mult } */\n+/* { dg-require-effective-target vect_pack_trunc } */\n+/* { dg-require-effective-target vect_unpack } */\n+\n+void train(short *t, short *w, int n, int err)\n+{\n+  n=(n+7)&-8;\n+  for (int i=0; i<n; ++i)\n+    {\n+      int wt=w[i]+((t[i]*err*2>>16)+1>>1);\n+      if (wt<-32768) wt=-32768;\n+      if (wt>32767) wt=32767;\n+      w[i]=wt;\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"vectorized 1 loops\" \"vect\" { xfail vect_no_int_max } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}