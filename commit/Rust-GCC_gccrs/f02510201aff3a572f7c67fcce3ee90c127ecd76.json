{"sha": "f02510201aff3a572f7c67fcce3ee90c127ecd76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAyNTEwMjAxYWZmM2E1NzJmN2M2N2ZjY2UzZWU5MGMxMjdlY2Q3Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-08-18T10:41:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-08-18T10:41:53Z"}, "message": "tree-pass.h (make_pass_materialize_all_clones): Declare.\n\n2016-08-18  Richard Biener  <rguenther@suse.de>\n\n\t* tree-pass.h (make_pass_materialize_all_clones): Declare.\n\t* ipa.c (pass_data_materialize_all_clones, pass_materialize_all_clones,\n\tmake_pass_materialize_all_clones): New simple IPA pass encapsulating\n\tclone materialization.\n\t* passes.def (all_late_ipa_passes): Start with\n\tpass_materialize_all_clones.\n\t* cgraphunit.c (symbol_table::compile): Remove call to\n\tmaterialize_all_clones.\n\t* tree-into-ssa.c: Include statistics.h.\n\t(update_ssa): Count number of times we do incremental/rewrite\n\tSSA update.\n\nFrom-SVN: r239567", "tree": {"sha": "66731264e5aac24db0964fd44ab89db11412cc57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66731264e5aac24db0964fd44ab89db11412cc57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f02510201aff3a572f7c67fcce3ee90c127ecd76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f02510201aff3a572f7c67fcce3ee90c127ecd76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f02510201aff3a572f7c67fcce3ee90c127ecd76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f02510201aff3a572f7c67fcce3ee90c127ecd76/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c62c8735891bd29be0bc379b51b295f2838019a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c62c8735891bd29be0bc379b51b295f2838019a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c62c8735891bd29be0bc379b51b295f2838019a"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "7df2a9a5c50d7218cac1e268f381af9f49f69de0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f02510201aff3a572f7c67fcce3ee90c127ecd76", "patch": "@@ -1,3 +1,17 @@\n+2016-08-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-pass.h (make_pass_materialize_all_clones): Declare.\n+\t* ipa.c (pass_data_materialize_all_clones, pass_materialize_all_clones,\n+\tmake_pass_materialize_all_clones): New simple IPA pass encapsulating\n+\tclone materialization.\n+\t* passes.def (all_late_ipa_passes): Start with\n+\tpass_materialize_all_clones.\n+\t* cgraphunit.c (symbol_table::compile): Remove call to\n+\tmaterialize_all_clones.\n+\t* tree-into-ssa.c: Include statistics.h.\n+\t(update_ssa): Count number of times we do incremental/rewrite\n+\tSSA update.\n+\n 2016-08-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77282"}, {"sha": "6a1d1267202ec7ac5f186d20111ad147f450a45b", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=f02510201aff3a572f7c67fcce3ee90c127ecd76", "patch": "@@ -2435,7 +2435,6 @@ symbol_table::compile (void)\n     fprintf (stderr, \"Assembling functions:\\n\");\n   symtab_node::checking_verify_symtab_nodes ();\n \n-  materialize_all_clones ();\n   bitmap_obstack_initialize (NULL);\n   execute_ipa_pass_list (g->get_passes ()->all_late_ipa_passes);\n   bitmap_obstack_release (NULL);"}, {"sha": "035fb64652786b1aaf9ccb092ba0712021d08ccc", "filename": "gcc/ipa.c", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=f02510201aff3a572f7c67fcce3ee90c127ecd76", "patch": "@@ -1443,3 +1443,44 @@ make_pass_ipa_single_use (gcc::context *ctxt)\n {\n   return new pass_ipa_single_use (ctxt);\n }\n+\n+/* Materialize all clones.  */\n+\n+namespace {\n+\n+const pass_data pass_data_materialize_all_clones =\n+{\n+  SIMPLE_IPA_PASS, /* type */\n+  \"materialize-all-clones\", /* name */\n+  OPTGROUP_NONE, /* optinfo_flags */\n+  TV_IPA_OPT, /* tv_id */\n+  0, /* properties_required */\n+  0, /* properties_provided */\n+  0, /* properties_destroyed */\n+  0, /* todo_flags_start */\n+  0, /* todo_flags_finish */\n+};\n+\n+class pass_materialize_all_clones : public simple_ipa_opt_pass\n+{\n+public:\n+  pass_materialize_all_clones (gcc::context *ctxt)\n+    : simple_ipa_opt_pass (pass_data_materialize_all_clones, ctxt)\n+  {}\n+\n+  /* opt_pass methods: */\n+  virtual unsigned int execute (function *)\n+    {\n+      symtab->materialize_all_clones ();\n+      return 0;\n+    }\n+\n+}; // class pass_materialize_all_clones\n+\n+} // anon namespace\n+\n+simple_ipa_opt_pass *\n+make_pass_materialize_all_clones (gcc::context *ctxt)\n+{\n+  return new pass_materialize_all_clones (ctxt);\n+}"}, {"sha": "533157d621c1932cccf8ba52e5a0d185b3f2fbb5", "filename": "gcc/passes.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=f02510201aff3a572f7c67fcce3ee90c127ecd76", "patch": "@@ -167,6 +167,7 @@ along with GCC; see the file COPYING3.  If not see\n      passes are executed after partitioning and thus see just parts of the\n      compiled unit.  */\n   INSERT_PASSES_AFTER (all_late_ipa_passes)\n+  NEXT_PASS (pass_materialize_all_clones);\n   NEXT_PASS (pass_ipa_pta);\n   NEXT_PASS (pass_dispatcher_calls);\n   NEXT_PASS (pass_omp_simd_clone);"}, {"sha": "ceafa68b9ea0c7f46c9cd4a4f3e41a053f67d102", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=f02510201aff3a572f7c67fcce3ee90c127ecd76", "patch": "@@ -37,6 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"domwalk.h\"\n+#include \"statistics.h\"\n \n #define PERCENT(x,y) ((float)(x) * 100.0 / (float)(y))\n \n@@ -3248,6 +3249,8 @@ update_ssa (unsigned update_flags)\n      OLD_SSA_NAMES.  */\n   if (bitmap_first_set_bit (new_ssa_names) >= 0)\n     {\n+      statistics_counter_event (cfun, \"Incremental SSA update\", 1);\n+\n       prepare_names_to_update (insert_phi_p);\n \n       /* If all the names in NEW_SSA_NAMES had been marked for\n@@ -3261,6 +3264,8 @@ update_ssa (unsigned update_flags)\n   /* Next, determine the block at which to start the renaming process.  */\n   if (cfun->gimple_df->ssa_renaming_needed)\n     {\n+      statistics_counter_event (cfun, \"Symbol to SSA rewrite\", 1);\n+\n       /* If we rename bare symbols initialize the mapping to\n          auxiliar info we need to keep track of.  */\n       var_infos = new hash_table<var_info_hasher> (47);"}, {"sha": "c0059de89ff771395e88e55af3e199040666959f", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f02510201aff3a572f7c67fcce3ee90c127ecd76/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=f02510201aff3a572f7c67fcce3ee90c127ecd76", "patch": "@@ -504,6 +504,8 @@ extern ipa_opt_pass_d *make_pass_ipa_profile (gcc::context *ctxt);\n extern ipa_opt_pass_d *make_pass_ipa_cdtor_merge (gcc::context *ctxt);\n extern ipa_opt_pass_d *make_pass_ipa_single_use (gcc::context *ctxt);\n extern ipa_opt_pass_d *make_pass_ipa_comdats (gcc::context *ctxt);\n+extern simple_ipa_opt_pass *make_pass_materialize_all_clones (gcc::context *\n+\t\t\t\t\t\t\t      ctxt);\n \n extern gimple_opt_pass *make_pass_cleanup_cfg_post_optimizing (gcc::context\n \t\t\t\t\t\t\t       *ctxt);"}]}