{"sha": "3afd5368f50f7a5060fddd652a41b141691172d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FmZDUzNjhmNTBmN2E1MDYwZmRkZDY1MmE0MWIxNDE2OTExNzJkMQ==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2021-06-22T08:15:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-20T12:31:28Z"}, "message": "[Ada] Work around CodePeer bug by declaring variable\n\ngcc/ada/\n\n\t* atree.adb (Get_32_Bit_Field): Declare result before returning.", "tree": {"sha": "5addc11968bd14b77eb1c9d61d92f78a5cce4de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5addc11968bd14b77eb1c9d61d92f78a5cce4de8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3afd5368f50f7a5060fddd652a41b141691172d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3afd5368f50f7a5060fddd652a41b141691172d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3afd5368f50f7a5060fddd652a41b141691172d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3afd5368f50f7a5060fddd652a41b141691172d1/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5ed0df53131328cfd4e072b79d5f0d21eeff15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c5ed0df53131328cfd4e072b79d5f0d21eeff15"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "3be7e0395e0f5bf9999e3cadddf59f3b302b0084", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3afd5368f50f7a5060fddd652a41b141691172d1/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3afd5368f50f7a5060fddd652a41b141691172d1/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=3afd5368f50f7a5060fddd652a41b141691172d1", "patch": "@@ -513,8 +513,13 @@ package body Atree is\n \n          function Cast is new\n            Unchecked_Conversion (Field_Size_32_Bit, Field_Type);\n+\n+         Result : constant Field_Type := Cast (Get_32_Bit_Val (N, Offset));\n+         --  Note: declaring Result here instead of directly returning\n+         --  Cast (...) helps CodePeer understand that there are no issues\n+         --  around uninitialized variables.\n       begin\n-         return Cast (Get_32_Bit_Val (N, Offset));\n+         return Result;\n       end Get_32_Bit_Field;\n \n       function Get_32_Bit_Field_With_Default"}]}