{"sha": "71f3e391b3fdd791965321747ac078a61472fb87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFmM2UzOTFiM2ZkZDc5MTk2NTMyMTc0N2FjMDc4YTYxNDcyZmI4Nw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-11-29T14:09:41Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-11-29T14:09:41Z"}, "message": "system.h: Include \"safe-ctype.h\" instead of <safe-ctype.h>.\n\n\t* system.h: Include \"safe-ctype.h\" instead of <safe-ctype.h>.\n\tInclude <signal.h>, <sys/mman.h>, <sys/resource.h> and\n\t<sys/times.h>.\n\t(O_BINARY, SIGCHLD, MAP_FAILED, MAP_ANONYMOUS, kill):\n\tConditionally define.\n\t(GET_ENVIRONMENT): Poison.\n\t* configure.ac: Don't test for mincore.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* collect2-aix.c: Don't include <sys/mman.h>.\n\t* collect2.c: Don't include <signal.h>.\n\t(SIGCHLD): Don't define.\n\t(prefix_from_env): Use getenv instead of GET_ENVIRONMENT.\n\t* config/alpha/alpha.c: Include \"splay-tree.h\" instead of\n\t<splay-tree.h>.\n\t* config/arm/arm.c (arm_target_help): Use getenv instead of\n\tGET_ENVIRONMENT.\n\t* config/avr/driver-avr.c: Don't include <stdlib.h>.\n\t* config/frv/frv.c: Don't include <ctype.h>.\n\t* config/host-darwin.c: Don't include <sys/mman.h>.\n\t* config/host-hpux.c: Don't include <sys/mman.h> or <unistd.h>.\n\t(MAP_FAILED): Don't define.\n\t* config/host-linux.c: Don't include <sys/mman.h> or <limits.h>.\n\t* config/host-solaris.c: Don't include <sys/mman.h>.\n\t* config/i386/cygming.h: Don't include <stdio.h>.\n\t* config/i386/driver-i386.c: Don't include <stdlib.h>.\n\t* config/i386/host-cygwin.c: Don't include <sys/mman.h>.\n\t* config/iq2000/iq2000.c: Don't include <signal.h>.\n\t* config/m32c/m32c-pragma.c: Don't include <stdio.h>.\n\t* config/m68hc11/m68hc11.c: Don't include <stdio.h>.\n\t* config/mep/mep-pragma.c: Don't include <stdio.h>.\n\t* config/microblaze/microblaze.c: Don't include <signal.h>.\n\t* config/mips/mips.c: Don't include <signal.h>.\n\t* config/rs6000/host-darwin.c: Don't include <signal.h>.\n\t* cppdefault.c (cpp_relocated): Use getenv instead of\n\tGET_ENVIRONMENT.\n\t* defaults.h (GET_ENVIRONMENT): Don't define.\n\t* et-forest.h: Don't include <ansidecl.h> or <stddef.h>.\n\t* gcc.c: Don't include <signal.h>, <sys/mman.h> or <sys/types.h>.\n\t(SIGCHLD, MAP_FAILED, kill): Don't define.\n\t(process_command): Use getenv instead of GET_ENVIRONMENT.\n\t* genhooks.c: Don't include <string.h>.\n\t* ggc-common.c: Don't include <sys/resource.h>, <sys/mman.h> or\n\t<sys/types.h>.\n\t(MAP_FAILED): Don't define.\n\t* ggc-page.c Don't include <sys/mman.h>.\n\t(MAP_ANONYMOUS, MAP_FAILED): Don't define.\n\t* ggc-zone.c: Don't include <sys/mman.h>.\n\t(MAP_ANONYMOUS, MAP_FAILED): Don't define.\n\t* graph.c: Include \"config.h\" instead of <config.h>.\n\t* incpath.c (add_env_var_paths): Use getenv instead of\n\tGET_ENVIRONMENT.\n\t* lto-wrapper.c: Don't include <errno.h>, <signal.h> or\n\t\"libiberty.h\".\n\t(SIGCHLD, kill): Don't define.\n\t* mips-tfile.c: Don't include <signal.h>.\n\t* opts.c: Don't include <signal.h> or <sys/resource.h>.\n\t(print_specific_help): Use getenv instead of GET_ENVIRONMENT.\n\t* passes.c: Don't include <signal.h>, <sys/resource.h> or\n\t<sys/times.h>.\n\t* sparseset.h: Don't include <assert.h>.\n\t* timevar.c: Don't include <sys/times.h> or <sys/resource.h>.\n\t* tlink.c: Don't include \"libiberty.h\".\n\t* toplev.c: Don't include <signal.h> or <sys/times.h>.\n\t* tree-mudflap.c: Include \"demangle.h\" instead of <demangle.h>.\n\t* tree-switch-conversion.c: Don't include <signal.h>.\n\t* vmsdbgout.c: Don't include <errno.h> or <string.h>.\n\nc-family:\n\t* c-opts.c (check_deps_environment_vars): Use getenv instead of\n\tGET_ENVIRONMENT.\n\t* c-pch.c (O_BINARY): Don't define here.\n\t* c-pragma.h: Include \"cpplib.h\" instead of <cpplib.h>.\n\nfortran:\n\t* gfortran.h (alloca): Don't include definitions.\n\t(NULL): Don't define.\n\njava:\n\t* boehm.c: Include \"config.h\" instead of <config.h>.\n\t* builtins.c: Don't include <stdarg.h>.\n\t* class.c: Don't include \"stdio.h\".\n\t(O_BINARY): Don't define here.\n\t* jcf-depend.c: Don't include <assert.h>.\n\t(jcf_dependency_set_dep_file, jcf_dependency_init,\n\tjcf_dependency_write): Use gcc_assert.\n\t* jcf-io.c (O_BINARY): Don't define here.\n\t* jcf-path.c: Don't include \"tm.h\".\n\t(jcf_path_init): Use getenv instead of GET_ENVIRONMENT.\n\t* resource.c: Don't include \"stdio.h\".\n\t(O_BINARY): Don't define here.\n\t* verify-impl.c: Don't include <stdio.h>.\n\nlto:\n\t* lto-endian.h: Delete.\n\t* lto-object.c: Don't include \"libiberty.h\".\n\t(O_BINARY): Don't define.\n\t* lto.c: Don't include \"libiberty.h\" or <sys/mman.h>.\n\t(O_BINARY): Don't define.\n\nFrom-SVN: r167241", "tree": {"sha": "7546d2e8d80d8eb06c632d680bcbe09820689b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7546d2e8d80d8eb06c632d680bcbe09820689b95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71f3e391b3fdd791965321747ac078a61472fb87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f3e391b3fdd791965321747ac078a61472fb87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71f3e391b3fdd791965321747ac078a61472fb87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f3e391b3fdd791965321747ac078a61472fb87/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3f122e0f9fc5d5503d23fc82d03456cc4a575b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f122e0f9fc5d5503d23fc82d03456cc4a575b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f122e0f9fc5d5503d23fc82d03456cc4a575b3"}], "stats": {"total": 666, "additions": 187, "deletions": 479}, "files": [{"sha": "585429c21af8cb99cacbfbc5ecac033d23430fb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,3 +1,73 @@\n+2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* system.h: Include \"safe-ctype.h\" instead of <safe-ctype.h>.\n+\tInclude <signal.h>, <sys/mman.h>, <sys/resource.h> and\n+\t<sys/times.h>.\n+\t(O_BINARY, SIGCHLD, MAP_FAILED, MAP_ANONYMOUS, kill):\n+\tConditionally define.\n+\t(GET_ENVIRONMENT): Poison.\n+\t* configure.ac: Don't test for mincore.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* collect2-aix.c: Don't include <sys/mman.h>.\n+\t* collect2.c: Don't include <signal.h>.\n+\t(SIGCHLD): Don't define.\n+\t(prefix_from_env): Use getenv instead of GET_ENVIRONMENT.\n+\t* config/alpha/alpha.c: Include \"splay-tree.h\" instead of\n+\t<splay-tree.h>.\n+\t* config/arm/arm.c (arm_target_help): Use getenv instead of\n+\tGET_ENVIRONMENT.\n+\t* config/avr/driver-avr.c: Don't include <stdlib.h>.\n+\t* config/frv/frv.c: Don't include <ctype.h>.\n+\t* config/host-darwin.c: Don't include <sys/mman.h>.\n+\t* config/host-hpux.c: Don't include <sys/mman.h> or <unistd.h>.\n+\t(MAP_FAILED): Don't define.\n+\t* config/host-linux.c: Don't include <sys/mman.h> or <limits.h>.\n+\t* config/host-solaris.c: Don't include <sys/mman.h>.\n+\t* config/i386/cygming.h: Don't include <stdio.h>.\n+\t* config/i386/driver-i386.c: Don't include <stdlib.h>.\n+\t* config/i386/host-cygwin.c: Don't include <sys/mman.h>.\n+\t* config/iq2000/iq2000.c: Don't include <signal.h>.\n+\t* config/m32c/m32c-pragma.c: Don't include <stdio.h>.\n+\t* config/m68hc11/m68hc11.c: Don't include <stdio.h>.\n+\t* config/mep/mep-pragma.c: Don't include <stdio.h>.\n+\t* config/microblaze/microblaze.c: Don't include <signal.h>.\n+\t* config/mips/mips.c: Don't include <signal.h>.\n+\t* config/rs6000/host-darwin.c: Don't include <signal.h>.\n+\t* cppdefault.c (cpp_relocated): Use getenv instead of\n+\tGET_ENVIRONMENT.\n+\t* defaults.h (GET_ENVIRONMENT): Don't define.\n+\t* et-forest.h: Don't include <ansidecl.h> or <stddef.h>.\n+\t* gcc.c: Don't include <signal.h>, <sys/mman.h> or <sys/types.h>.\n+\t(SIGCHLD, MAP_FAILED, kill): Don't define.\n+\t(process_command): Use getenv instead of GET_ENVIRONMENT.\n+\t* genhooks.c: Don't include <string.h>.\n+\t* ggc-common.c: Don't include <sys/resource.h>, <sys/mman.h> or\n+\t<sys/types.h>.\n+\t(MAP_FAILED): Don't define.\n+\t* ggc-page.c Don't include <sys/mman.h>.\n+\t(MAP_ANONYMOUS, MAP_FAILED): Don't define.\n+\t* ggc-zone.c: Don't include <sys/mman.h>.\n+\t(MAP_ANONYMOUS, MAP_FAILED): Don't define.\n+\t* graph.c: Include \"config.h\" instead of <config.h>.\n+\t* incpath.c (add_env_var_paths): Use getenv instead of\n+\tGET_ENVIRONMENT.\n+\t* lto-wrapper.c: Don't include <errno.h>, <signal.h> or\n+\t\"libiberty.h\".\n+\t(SIGCHLD, kill): Don't define.\n+\t* mips-tfile.c: Don't include <signal.h>.\n+\t* opts.c: Don't include <signal.h> or <sys/resource.h>.\n+\t(print_specific_help): Use getenv instead of GET_ENVIRONMENT.\n+\t* passes.c: Don't include <signal.h>, <sys/resource.h> or\n+\t<sys/times.h>.\n+\t* sparseset.h: Don't include <assert.h>.\n+\t* timevar.c: Don't include <sys/times.h> or <sys/resource.h>.\n+\t* tlink.c: Don't include \"libiberty.h\".\n+\t* toplev.c: Don't include <signal.h> or <sys/times.h>.\n+\t* tree-mudflap.c: Include \"demangle.h\" instead of <demangle.h>.\n+\t* tree-switch-conversion.c: Don't include <signal.h>.\n+\t* vmsdbgout.c: Don't include <errno.h> or <string.h>.\n+\n 2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* c-parser.c (c_parser_objc_try_catch_statement): Renamed to"}, {"sha": "dadedfa041a88ebbc9f9d641aa065e7c493182db", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,3 +1,10 @@\n+2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-opts.c (check_deps_environment_vars): Use getenv instead of\n+\tGET_ENVIRONMENT.\n+\t* c-pch.c (O_BINARY): Don't define here.\n+\t* c-pragma.h: Include \"cpplib.h\" instead of <cpplib.h>.\n+\n 2010-11-25  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Pass &global_options to"}, {"sha": "befd64498a4bc87400a8d5e4d2001512f6ac2154", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1131,12 +1131,12 @@ check_deps_environment_vars (void)\n {\n   char *spec;\n \n-  GET_ENVIRONMENT (spec, \"DEPENDENCIES_OUTPUT\");\n+  spec = getenv (\"DEPENDENCIES_OUTPUT\");\n   if (spec)\n     cpp_opts->deps.style = DEPS_USER;\n   else\n     {\n-      GET_ENVIRONMENT (spec, \"SUNPRO_DEPENDENCIES\");\n+      spec = getenv (\"SUNPRO_DEPENDENCIES\");\n       if (spec)\n \t{\n \t  cpp_opts->deps.style = DEPS_SYSTEM;"}, {"sha": "b863c25a93e4b9b1dda251a6bdaba7b2b16abf7d", "filename": "gcc/c-family/c-pch.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fc-family%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fc-family%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pch.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -472,10 +472,6 @@ c_common_no_more_pch (void)\n \n /* Handle #pragma GCC pch_preprocess, to load in the PCH file.  */\n \n-#ifndef O_BINARY\n-# define O_BINARY 0\n-#endif\n-\n void\n c_common_pch_pragma (cpp_reader *pfile, const char *name)\n {"}, {"sha": "cec9cd17616e14e5f7489cf90434e9c418376fd9", "filename": "gcc/c-family/c-pragma.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fc-family%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fc-family%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.h?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -21,7 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_C_PRAGMA_H\n #define GCC_C_PRAGMA_H\n \n-#include <cpplib.h> /* For enum cpp_ttype.  */\n+#include \"cpplib.h\" /* For enum cpp_ttype.  */\n \n /* Pragma identifiers built in to the front end parsers.  Identifiers\n    for ancillary handlers will follow these.  */"}, {"sha": "101826519e03585bd47627e374ce556df8a04814", "filename": "gcc/collect2-aix.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fcollect2-aix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fcollect2-aix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2-aix.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* AIX cross support for collect2.\n-   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -25,8 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #ifdef CROSS_AIX_SUPPORT\n \n-#include <sys/mman.h>\n-\n /* Read SIZE bytes starting at DATA as a big-endian value.  */\n \n static inline bfd_vma"}, {"sha": "df91d34117dcdcb0cf36da71471f9a0172dccac4", "filename": "gcc/collect2.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -30,10 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include <signal.h>\n-#if ! defined( SIGCHLD ) && defined( SIGCLD )\n-#  define SIGCHLD SIGCLD\n-#endif\n \n /* TARGET_64BIT may be defined to use driver specific functionality. */\n #undef TARGET_64BIT\n@@ -822,7 +818,7 @@ static void\n prefix_from_env (const char *env, struct path_prefix *pprefix)\n {\n   const char *p;\n-  GET_ENVIRONMENT (p, env);\n+  p = getenv (env);\n \n   if (p)\n     prefix_from_string (p, pprefix);"}, {"sha": "7c5c617102a338be0b79ee277eae409eae560a72", "filename": "gcc/config.in", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1251,12 +1251,6 @@\n #endif\n \n \n-/* Define to 1 if you have the `mincore' function. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_MINCORE\n-#endif\n-\n-\n /* Define to 1 if you have the `mmap' function. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_MMAP"}, {"sha": "1ecd2c4d70feae0083d094be19816c99b4c92037", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -50,7 +50,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target-def.h\"\n #include \"debug.h\"\n #include \"langhooks.h\"\n-#include <splay-tree.h>\n+#include \"splay-tree.h\"\n #include \"cfglayout.h\"\n #include \"gimple.h\"\n #include \"tree-flow.h\""}, {"sha": "53a847d7615971a4c09f5e6f50af01640a68859c", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1364,7 +1364,7 @@ arm_target_help (void)\n     {\n       const char *p;\n \n-      GET_ENVIRONMENT (p, \"COLUMNS\");\n+      p = getenv (\"COLUMNS\");\n       if (p != NULL)\n \t{\n \t  int value = atoi (p);"}, {"sha": "6ab0bb822efab3ee1332f168978369d7c81225e5", "filename": "gcc/config/avr/driver-avr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fdriver-avr.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for the gcc driver.\n-   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Anatoly Sokolov <aesok@post.ru>\n \n This file is part of GCC.\n@@ -22,7 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include <stdlib.h>\n \n /* Current architecture.  */\n const struct base_arch_s *avr_current_arch = NULL;"}, {"sha": "f8653c761e042b1102458fbdac808cf13c801757", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -44,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"tm_p.h\"\n #include \"ggc.h\"\n-#include <ctype.h>\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"targhooks.h\""}, {"sha": "3fd0a71c33ee272c3edcf673dc80cfdbac092624", "filename": "gcc/config/host-darwin.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-darwin.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* Darwin host-specific hook definitions.\n-   Copyright (C) 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2007, 2010 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -20,7 +20,6 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <sys/mman.h>\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n #include \"config/host-darwin.h\""}, {"sha": "00adfcf9b5b8983485b80247478576f67c31c933", "filename": "gcc/config/host-hpux.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fhost-hpux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fhost-hpux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-hpux.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* HP-UX host-specific hook definitions.\n-   Copyright (C) 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2010 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -20,15 +20,9 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <sys/mman.h>\n-#include <unistd.h>\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\"\n \n-#ifndef MAP_FAILED\n-#define MAP_FAILED (void *)-1L\n-#endif\n-\n static void *hpux_gt_pch_get_address (size_t, int);\n static int hpux_gt_pch_use_address (void *, size_t, int, size_t);\n "}, {"sha": "47ce3ea90a7ee88f88efad0f0e1674a94bb2670e", "filename": "gcc/config/host-linux.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fhost-linux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fhost-linux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-linux.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* Linux host-specific hook definitions.\n-   Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008, 2010 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -20,8 +20,6 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <sys/mman.h>\n-#include <limits.h>\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\"\n "}, {"sha": "12eab3c61b8dd39a909d5e2a75a69b003e618c93", "filename": "gcc/config/host-solaris.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fhost-solaris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fhost-solaris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-solaris.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -20,7 +20,6 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <sys/mman.h>\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\"\n "}, {"sha": "733c7c79a377f375db7abf195aaa566261b14c1f", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -118,8 +118,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #define TARGET_EXECUTABLE_SUFFIX \".exe\"\n \n-#include <stdio.h>\n-\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\"}, {"sha": "bf7ec0c81a3b7442a48dcef77e44e9ce5d0f2666", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -21,7 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include <stdlib.h>\n \n const char *host_detect_local_cpu (int argc, const char **argv);\n "}, {"sha": "8510bde125eac24f9eec4e132861671be3cf2a84", "filename": "gcc/config/i386/host-cygwin.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* Cygwin host-specific hook definitions.\n- Copyright (C) 2004, 2007 Free Software Foundation, Inc.\n+ Copyright (C) 2004, 2007, 2010 Free Software Foundation, Inc.\n \n  This file is part of GCC.\n \n@@ -20,7 +20,6 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <sys/mman.h>\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\"\n #include \"toplev.h\""}, {"sha": "cc4c80f2836cba03b768692e55ddf2f57a7db68b", "filename": "gcc/config/iq2000/iq2000.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -21,7 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <signal.h>\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"rtl.h\""}, {"sha": "fda6a6b54a3690d8bc7517b0ef65533a99e1ff52", "filename": "gcc/config/m32c/m32c-pragma.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* M32C Pragma support\n-   Copyright (C) 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2010 Free Software Foundation, Inc.\n    Contributed by Red Hat, Inc.\n \n    This file is part of GCC.\n@@ -18,7 +18,6 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\""}, {"sha": "00d409e8aac4bb6f854d03754a8771c7f955930c", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n \n */\n \n-#include <stdio.h>\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\""}, {"sha": "1e37403c77917ddcc801cb576666fa1f302594f4", "filename": "gcc/config/mep/mep-pragma.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-pragma.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of Toshiba Media Processor\n-   Copyright (C) 2001, 2002, 2003, 2005, 2006, 2007, 2009 Free\n+   Copyright (C) 2001, 2002, 2003, 2005, 2006, 2007, 2009, 2010 Free\n    Software Foundation, Inc.  Contributed by Red Hat, Inc.\n \n This file is part of GCC.\n@@ -18,7 +18,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\""}, {"sha": "2cd28fc8932253f96b3c3b0cf4e80508434f8f53", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -22,7 +22,6 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <signal.h>\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"regs.h\""}, {"sha": "7e7e428d17fc25fdf3ae473b6d544d24b12e5484", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include <signal.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "ca1f6bbb229793712670315587312c74b0f2bd3a", "filename": "gcc/config/rs6000/host-darwin.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* Darwin/powerpc host-specific hook definitions.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2010\n    Free Software Foundation, Inc.\n \n    This file is part of GCC.\n@@ -21,7 +21,6 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <signal.h>\n #include <sys/ucontext.h>\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\""}, {"sha": "e1866a4e538eb8093ec63b4a9c61694e3dbd83eb", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -8610,7 +8610,7 @@ fi\n \n for ac_func in times clock kill getrlimit setrlimit atoll atoq \\\n \tsysconf strsignal getrusage nl_langinfo \\\n-\tgettimeofday mbstowcs wcswidth mmap mincore setlocale \\\n+\tgettimeofday mbstowcs wcswidth mmap setlocale \\\n \tclearerr_unlocked feof_unlocked   ferror_unlocked fflush_unlocked fgetc_unlocked fgets_unlocked   fileno_unlocked fprintf_unlocked fputc_unlocked fputs_unlocked   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked   putchar_unlocked putc_unlocked\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`"}, {"sha": "dace19c9f96653059d7973df0d36c8bfea66a561", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -974,7 +974,7 @@ define(gcc_UNLOCKED_FUNCS, clearerr_unlocked feof_unlocked dnl\n   putchar_unlocked putc_unlocked)\n AC_CHECK_FUNCS(times clock kill getrlimit setrlimit atoll atoq \\\n \tsysconf strsignal getrusage nl_langinfo \\\n-\tgettimeofday mbstowcs wcswidth mmap mincore setlocale \\\n+\tgettimeofday mbstowcs wcswidth mmap setlocale \\\n \tgcc_UNLOCKED_FUNCS)\n \n if test x$ac_cv_func_mbstowcs = xyes; then"}, {"sha": "9b1495feb94c6a24bb110ed7586decd951197e94", "filename": "gcc/cppdefault.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fcppdefault.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fcppdefault.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppdefault.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,6 +1,6 @@\n /* CPP Library.\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2003, 2004, 2006, 2007 Free Software Foundation, Inc.\n+   1999, 2000, 2003, 2004, 2006, 2007, 2010 Free Software Foundation, Inc.\n    Contributed by Per Bothner, 1994-95.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -127,7 +127,7 @@ cpp_relocated (void)\n   if (relocated == -1)\n     {\n       /* Check if the toolchain was relocated?  */\n-      GET_ENVIRONMENT (gcc_exec_prefix, \"GCC_EXEC_PREFIX\");\n+      gcc_exec_prefix = getenv (\"GCC_EXEC_PREFIX\");\n       if (gcc_exec_prefix)\n        relocated = 1;\n       else"}, {"sha": "815ddd243f8ca0dc9e96e01f871c69adbe1e49ad", "filename": "gcc/defaults.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -28,10 +28,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #ifndef GCC_DEFAULTS_H\n #define GCC_DEFAULTS_H\n \n-#ifndef GET_ENVIRONMENT\n-#define GET_ENVIRONMENT(VALUE, NAME) do { (VALUE) = getenv (NAME); } while (0)\n-#endif\n-\n /* Store in OUTPUT a string (made with alloca) containing an\n    assembler-name for a local static variable or function named NAME.\n    LABELNO is an integer which is different for each call.  */"}, {"sha": "06bd82e3e8f271ed4d6c950e166099b80d37e5e8", "filename": "gcc/et-forest.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fet-forest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fet-forest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fet-forest.h?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,6 @@\n /* Et-forest data structure implementation.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005, 2007, 2010\n+   Free Software Foundation, Inc.\n \n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n@@ -48,9 +49,6 @@\n #ifndef _ET_TREE_H\n #define _ET_TREE_H\n \n-#include <ansidecl.h>\n-#include <stddef.h>\n-\n #ifdef __cplusplus\n extern \"C\" {\n #endif /* __cplusplus */"}, {"sha": "f8e8e20d01a56c7613fa13df8ad1ec8ee907906a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,3 +1,8 @@\n+2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gfortran.h (alloca): Don't include definitions.\n+\t(NULL): Don't define.\n+\n 2010-11-28  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46662"}, {"sha": "52f11c53787d70a06c21973d4b5c6496d48954bd", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -38,24 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"input.h\"\n #include \"splay-tree.h\"\n-/* The following ifdefs are recommended by the autoconf documentation\n-   for any code using alloca.  */\n-\n-/* AIX requires this to be the first thing in the file.  */\n-#ifdef __GNUC__\n-#else /* not __GNUC__ */\n-#ifdef HAVE_ALLOCA_H\n-#include <alloca.h>\n-#else /* do not HAVE_ALLOCA_H */\n-#ifdef _AIX\n-#pragma alloca\n-#else\n-#ifndef alloca\t\t\t/* predefined by HP cc +Olibcalls */\n-char *alloca ();\n-#endif /* not predefined */\n-#endif /* not _AIX */\n-#endif /* do not HAVE_ALLOCA_H */\n-#endif /* not __GNUC__ */\n \n /* Major control parameters.  */\n \n@@ -70,10 +52,6 @@ char *alloca ();\n #define free(x) Use_gfc_free_instead_of_free()\n #define gfc_is_whitespace(c) ((c==' ') || (c=='\\t'))\n \n-#ifndef NULL\n-#define NULL ((void *) 0)\n-#endif\n-\n /* Stringization.  */\n #define stringize(x) expand_macro(x)\n #define expand_macro(x) # x"}, {"sha": "1e525b53c3048859be7d4d4b21185f9ce0adb6ed", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -35,10 +35,6 @@ compilation is specified by a string called a \"spec\".  */\n #include \"coretypes.h\"\n #include \"multilib.h\" /* before tm.h */\n #include \"tm.h\"\n-#include <signal.h>\n-#if ! defined( SIGCHLD ) && defined( SIGCLD )\n-#  define SIGCHLD SIGCLD\n-#endif\n #include \"xregex.h\"\n #include \"obstack.h\"\n #include \"intl.h\"\n@@ -49,18 +45,6 @@ compilation is specified by a string called a \"spec\".  */\n #include \"opts.h\"\n #include \"vec.h\"\n \n-#ifdef HAVE_MMAP_FILE\n-# include <sys/mman.h>\n-# ifdef HAVE_MINCORE\n-/* This is on Solaris.  */\n-#  include <sys/types.h>\n-# endif\n-#endif\n-\n-#ifndef MAP_FAILED\n-# define MAP_FAILED ((void *)-1)\n-#endif\n-\n /* By default there is no special suffix for target executables.  */\n /* FIXME: when autoconf is fixed, remove the host check - dj */\n #if defined(TARGET_EXECUTABLE_SUFFIX) && defined(HOST_EXECUTABLE_SUFFIX)\n@@ -88,10 +72,6 @@ static const char dir_separator_str[] = { DIR_SEPARATOR, 0 };\n #define LIBRARY_PATH_ENV \"LIBRARY_PATH\"\n #endif\n \n-#ifndef HAVE_KILL\n-#define kill(p,s) raise(s)\n-#endif\n-\n /* If a stage of compilation returns an exit status >= 1,\n    compilation of that file ceases.  */\n \n@@ -3506,7 +3486,7 @@ process_command (unsigned int decoded_options_count,\n   struct cl_option_handlers handlers;\n   unsigned int j;\n \n-  GET_ENVIRONMENT (gcc_exec_prefix, \"GCC_EXEC_PREFIX\");\n+  gcc_exec_prefix = getenv (\"GCC_EXEC_PREFIX\");\n \n   n_switches = 0;\n   n_infiles = 0;\n@@ -3611,7 +3591,7 @@ process_command (unsigned int decoded_options_count,\n   /* COMPILER_PATH and LIBRARY_PATH have values\n      that are lists of directory names with colons.  */\n \n-  GET_ENVIRONMENT (temp, \"COMPILER_PATH\");\n+  temp = getenv (\"COMPILER_PATH\");\n   if (temp)\n     {\n       const char *startp, *endp;\n@@ -3645,7 +3625,7 @@ process_command (unsigned int decoded_options_count,\n \t}\n     }\n \n-  GET_ENVIRONMENT (temp, LIBRARY_PATH_ENV);\n+  temp = getenv (LIBRARY_PATH_ENV);\n   if (temp && *cross_compile == '0')\n     {\n       const char *startp, *endp;\n@@ -3678,7 +3658,7 @@ process_command (unsigned int decoded_options_count,\n     }\n \n   /* Use LPATH like LIBRARY_PATH (for the CMU build program).  */\n-  GET_ENVIRONMENT (temp, \"LPATH\");\n+  temp = getenv (\"LPATH\");\n   if (temp && *cross_compile == '0')\n     {\n       const char *startp, *endp;"}, {"sha": "6d9244879388732e80c8968086700a794730d261", "filename": "gcc/genhooks.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fgenhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fgenhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenhooks.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -19,7 +19,6 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n #include \"bconfig.h\"\n #include \"system.h\"\n-#include <string.h>\n #include \"hashtab.h\"\n #include \"errors.h\"\n "}, {"sha": "b7f1524387f816c0f149b7791bdce8efb9c3f2b9", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -36,22 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"vec.h\"\n #include \"timevar.h\"\n \n-#ifdef HAVE_SYS_RESOURCE_H\n-# include <sys/resource.h>\n-#endif\n-\n-#ifdef HAVE_MMAP_FILE\n-# include <sys/mman.h>\n-# ifdef HAVE_MINCORE\n-/* This is on Solaris.  */\n-#  include <sys/types.h>\n-# endif\n-#endif\n-\n-#ifndef MAP_FAILED\n-# define MAP_FAILED ((void *)-1)\n-#endif\n-\n /* When set, ggc_collect will do collection.  */\n bool ggc_force_collect;\n "}, {"sha": "3104058e8c7a6747a8a47aab973693ca57890aea", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -40,26 +40,11 @@ along with GCC; see the file COPYING3.  If not see\n    file open.  Prefer either to valloc.  */\n #ifdef HAVE_MMAP_ANON\n # undef HAVE_MMAP_DEV_ZERO\n-\n-# include <sys/mman.h>\n-# ifndef MAP_FAILED\n-#  define MAP_FAILED -1\n-# endif\n-# if !defined (MAP_ANONYMOUS) && defined (MAP_ANON)\n-#  define MAP_ANONYMOUS MAP_ANON\n-# endif\n # define USING_MMAP\n-\n #endif\n \n #ifdef HAVE_MMAP_DEV_ZERO\n-\n-# include <sys/mman.h>\n-# ifndef MAP_FAILED\n-#  define MAP_FAILED -1\n-# endif\n # define USING_MMAP\n-\n #endif\n \n #ifndef USING_MMAP"}, {"sha": "bd68008f63b7459e2af348c3932007d893e92671", "filename": "gcc/ggc-zone.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fggc-zone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fggc-zone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-zone.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -43,22 +43,10 @@ along with GCC; see the file COPYING3.  If not see\n    file open.  Prefer either to valloc.  */\n #ifdef HAVE_MMAP_ANON\n # undef HAVE_MMAP_DEV_ZERO\n-\n-# include <sys/mman.h>\n-# ifndef MAP_FAILED\n-#  define MAP_FAILED -1\n-# endif\n-# if !defined (MAP_ANONYMOUS) && defined (MAP_ANON)\n-#  define MAP_ANONYMOUS MAP_ANON\n-# endif\n # define USING_MMAP\n #endif\n \n #ifdef HAVE_MMAP_DEV_ZERO\n-# include <sys/mman.h>\n-# ifndef MAP_FAILED\n-#  define MAP_FAILED -1\n-# endif\n # define USING_MMAP\n #endif\n "}, {"sha": "d3513fde70b7b3278b0a31014d1074d82dd2a488", "filename": "gcc/graph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -19,7 +19,7 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#include <config.h>\n+#include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\""}, {"sha": "512659835e4eff1d8349227263cb4663625e15cb", "filename": "gcc/incpath.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fincpath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fincpath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fincpath.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -100,7 +100,7 @@ add_env_var_paths (const char *env_var, int chain)\n {\n   char *p, *q, *path;\n \n-  GET_ENVIRONMENT (q, env_var);\n+  q = getenv (env_var);\n \n   if (!q)\n     return;"}, {"sha": "075d183a8dfd029da1edf1650b4d2bdcf867e278", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,3 +1,19 @@\n+2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* boehm.c: Include \"config.h\" instead of <config.h>.\n+\t* builtins.c: Don't include <stdarg.h>.\n+\t* class.c: Don't include \"stdio.h\".\n+\t(O_BINARY): Don't define here.\n+\t* jcf-depend.c: Don't include <assert.h>.\n+\t(jcf_dependency_set_dep_file, jcf_dependency_init,\n+\tjcf_dependency_write): Use gcc_assert.\n+\t* jcf-io.c (O_BINARY): Don't define here.\n+\t* jcf-path.c: Don't include \"tm.h\".\n+\t(jcf_path_init): Use getenv instead of GET_ENVIRONMENT.\n+\t* resource.c: Don't include \"stdio.h\".\n+\t(O_BINARY): Don't define here.\n+\t* verify-impl.c: Don't include <stdio.h>.\n+\n 2010-11-17  Joseph Myers  <joseph@codesourcery.com>\n \n \t* jcf-parse.c (java_parse_file): Take no arguments."}, {"sha": "ce0ca2d790fc28419dbdc1d3261e51aa545fb5ca", "filename": "gcc/java/boehm.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fboehm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fboehm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fboehm.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,6 @@\n /* Functions related to the Boehm garbage collector.\n-   Copyright (C) 2000, 2003, 2004, 2006, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2003, 2004, 2006, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -23,8 +24,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Written by Tom Tromey <tromey@cygnus.com>.  */\n \n-#include <config.h>\n-\n+#include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"double-int.h\""}, {"sha": "2100f093a49636316e0caa35d44a47a9791f147b", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -36,7 +36,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"flags.h\"\n #include \"langhooks.h\"\n #include \"java-tree.h\"\n-#include <stdarg.h>\n \n /* FIXME: All these headers are necessary for sync_compare_and_swap.\n    Front ends should never have to look at that.  */"}, {"sha": "92091f9e9cfeb2c722ffed6786363909c485a578", "filename": "gcc/java/class.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -38,18 +38,12 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"parse.h\"\n #include \"function.h\"\n #include \"ggc.h\"\n-#include \"stdio.h\"\n #include \"cgraph.h\"\n #include \"tree-iterator.h\"\n #include \"vecprim.h\"\n #include \"tm.h\"         /* FIXME: For gcc_obstack_init from defaults.h.  */\n #include \"target.h\"\n \n-/* DOS brain-damage */\n-#ifndef O_BINARY\n-#define O_BINARY 0 /* MS-DOS brain-damage */\n-#endif\n-\n static tree make_method_value (tree);\n static tree build_java_method_type (tree, tree, int);\n static int32 hashUtf8String (const char *, int);"}, {"sha": "cde2a8dc72dd5e0dbee5dbeebb7790f14c2ed72c", "filename": "gcc/java/jcf-depend.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fjcf-depend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fjcf-depend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-depend.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,6 +1,6 @@\n /* Functions for handling dependency tracking when reading .class files.\n \n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2006, 2007\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2006, 2007, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -30,8 +30,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"mkdeps.h\"\n \n-#include <assert.h>\n-\n #include \"jcf.h\"\n \n \f\n@@ -89,7 +87,7 @@ jcf_dependency_add_target (const char *name)\n void\n jcf_dependency_set_dep_file (const char *name)\n {\n-  assert (dep_out != stdout);\n+  gcc_assert (dep_out != stdout);\n   if (dep_out)\n     fclose (dep_out);\n   if (! strcmp (name, \"-\"))\n@@ -117,7 +115,7 @@ jcf_dependency_add_file (const char *filename ATTRIBUTE_UNUSED, int system_p)\n void\n jcf_dependency_init (int system_p)\n {\n-  assert (! dependencies);\n+  gcc_assert (! dependencies);\n   system_files = system_p;\n   dependencies = deps_init ();\n }\n@@ -134,7 +132,7 @@ jcf_dependency_write (void)\n   if (! dep_out)\n     return;\n \n-  assert (dependencies);\n+  gcc_assert (dependencies);\n \n   deps_write (dependencies, dep_out, 72);\n   if (print_dummies)"}, {"sha": "0dc761534c6132b6f068fa46075475349c03d6cc", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,6 +1,6 @@\n /* Utility routines for finding and reading Java(TM) .class files.\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005,\n-   2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -36,11 +36,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n #include \"zlib.h\"\n \n-/* DOS brain-damage */\n-#ifndef O_BINARY\n-#define O_BINARY 0 /* MS-DOS brain-damage */\n-#endif\n-\n int\n jcf_unexpected_eof (JCF *jcf, int count ATTRIBUTE_UNUSED)\n {"}, {"sha": "16ec65538d0e07477a2001d26d925227e00fd409", "filename": "gcc/java/jcf-path.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fjcf-path.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fjcf-path.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-path.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,6 +1,6 @@\n /* Handle CLASSPATH, -classpath, and path searching.\n    Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006,\n-   2007, 2008 Free Software Foundation, Inc.\n+   2007, 2008, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -27,7 +27,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include \"tm.h\"\t\t/* FIXME: For GET_ENVIRONMENT from defaults.h.  */\n \n #include <dirent.h>\n \n@@ -224,7 +223,7 @@ jcf_path_init (void)\n   sep[0] = DIR_SEPARATOR;\n   sep[1] = '\\0';\n \n-  GET_ENVIRONMENT (cp, \"GCC_EXEC_PREFIX\");\n+  cp = getenv (\"GCC_EXEC_PREFIX\");\n   if (cp)\n     {\n       attempt = (char *) alloca (strlen (cp) + 50);\n@@ -295,7 +294,7 @@ jcf_path_init (void)\n \tjcf_path_extdirs_arg (extdirs);\n     }\n \n-  GET_ENVIRONMENT (cp, \"CLASSPATH\");\n+  cp = getenv (\"CLASSPATH\");\n   add_path (&classpath_env, cp, 0);\n }\n "}, {"sha": "25a9bdd223a1e77500512eb2aec39981bdae1444", "filename": "gcc/java/resource.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fresource.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,6 +1,6 @@\n /* Functions related to building resource files.\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-   2007, 2008 Free Software Foundation, Inc.\n+   2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -34,15 +34,9 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"parse.h\"\n #include \"function.h\"\n #include \"ggc.h\"\n-#include \"stdio.h\"\n #include \"tree-iterator.h\"\n #include \"cgraph.h\"\n \n-/* DOS brain-damage */\n-#ifndef O_BINARY\n-#define O_BINARY 0 /* MS-DOS brain-damage */\n-#endif\n-\n /* A list of all the resources files.  */\n static GTY(()) VEC(tree,gc) *resources;\n "}, {"sha": "1ca2d9fd66b5b0787d012138fe7932a3049ae3e0", "filename": "gcc/java/verify-impl.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fverify-impl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fjava%2Fverify-impl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify-impl.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009\n+/* Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010\n    Free Software Foundation\n \n    This file is part of libgcj.\n@@ -19,10 +19,6 @@ details.  */\n /* Hack to work around namespace pollution from java-tree.h.  */\n #undef current_class\n \n-#ifdef VERIFY_DEBUG\n-#include <stdio.h>\n-#endif /* VERIFY_DEBUG */\n-\n /* This is used to mark states which are not scheduled for\n    verification. */\n #define INVALID_STATE ((state *) -1)"}, {"sha": "143e3fd1b6623b11926dd567fa1782731b248c6b", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -40,19 +40,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n-#include <errno.h>\n-#include <signal.h>\n-#if ! defined( SIGCHLD ) && defined( SIGCLD )\n-#  define SIGCHLD SIGCLD\n-#endif\n #include \"intl.h\"\n-#include \"libiberty.h\"\n #include \"obstack.h\"\n \n-#ifndef HAVE_KILL\n-#define kill(p,s) raise(s)\n-#endif\n-\n int debug;\t\t\t\t/* true if -save-temps.  */\n int verbose;\t\t\t\t/* true if -v.  */\n "}, {"sha": "5bc6468c0f611e51b6625ca0577aa495d0130224", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,3 +1,11 @@\n+2010-11-29  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lto-endian.h: Delete.\n+\t* lto-object.c: Don't include \"libiberty.h\".\n+\t(O_BINARY): Don't define.\n+\t* lto.c: Don't include \"libiberty.h\" or <sys/mman.h>.\n+\t(O_BINARY): Don't define.\n+\n 2010-11-23  Richard Guenther  <rguenther@suse.de>\n \n \t* lto.c (read_cgraph_and_symbols): Remove newline from diagnostic."}, {"sha": "1f51cee79e92e6f93f1d953a28f8e70757014305", "filename": "gcc/lto/lto-endian.h", "status": "removed", "additions": 0, "deletions": 205, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3f122e0f9fc5d5503d23fc82d03456cc4a575b3/gcc%2Flto%2Flto-endian.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3f122e0f9fc5d5503d23fc82d03456cc4a575b3/gcc%2Flto%2Flto-endian.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-endian.h?ref=b3f122e0f9fc5d5503d23fc82d03456cc4a575b3", "patch": "@@ -1,205 +0,0 @@\n-/* Very simple endian-ness layer for LTO object file handling\n-   Copyright 2010 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* This header file provides a simple way to handle object files in\n-   another endian-ness than the host machine.  This is necesarry to\n-   enable cross-compilation with LTO enabled.  Targets that use the\n-   ELF binary object format do not need this (libelf already handles\n-   endian-ness) but for COFF and Mach-O the functions in this header\n-   are used in the minimal binary object reader/writer.\n-   \n-   For all functions in this header, the user is responsible for\n-   making sure that the memory accesses are valid.  */\n-\n-#ifndef GCC_LTO_ENDIAN_H\n-#define GCC_LTO_ENDIAN_H\n-\n-#include <stdint.h>\n-#include <inttypes.h>\n-\n-static inline uint16_t\n-get_uint16_le (const unsigned char *ptr)\n-{\n-  return ptr[0] | (ptr[1] << 8);\n-}\n-\n-static inline uint32_t\n-get_uint32_le (const unsigned char *ptr)\n-{\n-  return ptr[0] | (ptr[1] << 8) | (ptr[2] << 16) | (ptr[3] << 24);\n-}\n-\n-static inline uint64_t\n-get_uint64_le (const unsigned char *ptr_)\n-{\n-#define ptr (uint64_t) ptr_\n-  return ptr[0] | (ptr[1] << 8) | (ptr[2] << 16) | (ptr[3] << 24)\n-         | (ptr[4] << 32) | (ptr[5] << 40) | (ptr[6] << 48) | (ptr[7] << 56);\n-#undef ptr\n-}\n-\n-static inline uint16_t\n-get_uint16_be (const unsigned char *ptr)\n-{\n-  return ptr[1] | (ptr[2] << 8);\n-}\n-\n-static inline uint32_t\n-get_uint32_be (const unsigned char *ptr)\n-{\n-  return ptr[3] | (ptr[2] << 8) | (ptr[1] << 16) | (ptr[0] << 24);\n-}\n-\n-static inline uint64_t\n-get_uint64_be (const unsigned char *ptr_)\n-{\n-#define ptr (uint64_t) ptr_\n-  return ptr[7] | (ptr[6] << 8) | (ptr[5] << 16) | (ptr[4] << 24)\n-         | (ptr[3] << 32) | (ptr[2] << 40) | (ptr[1] << 48) | (ptr[0] << 56);\n-#undef ptr\n-}\n-\n-static inline void\n-put_uint16_le (unsigned char *ptr, uint16_t data)\n-{\n-  ptr[0] = data & 0xff;\n-  ptr[1] = (data >> 8) & 0xff;\n-}\n-\n-static inline void\n-put_uint32_le (unsigned char *ptr, uint32_t data)\n-{\n-  ptr[0] = data & 0xff;\n-  ptr[1] = (data >> 8) & 0xff;\n-  ptr[2] = (data >> 16) & 0xff;\n-  ptr[3] = (data >> 24) & 0xff;\n-}\n-\n-static inline void\n-put_uint64_le (unsigned char *ptr, uint64_t data)\n-{\n-  ptr[0] = data & 0xff;\n-  ptr[1] = (data >> 8) & 0xff;\n-  ptr[2] = (data >> 16) & 0xff;\n-  ptr[3] = (data >> 24) & 0xff;\n-  ptr[4] = (data >> 32) & 0xff;\n-  ptr[5] = (data >> 40) & 0xff;\n-  ptr[6] = (data >> 48) & 0xff;\n-  ptr[7] = (data >> 56) & 0xff;\n-}\n-\n-static inline void\n-put_uint16_be (unsigned char *ptr, uint16_t data)\n-{\n-  ptr[1] = data & 0xff;\n-  ptr[0] = (data >> 8) & 0xff;\n-}\n-\n-static inline void\n-put_uint32_be (unsigned char *ptr, uint32_t data)\n-{\n-  ptr[3] = data & 0xff;\n-  ptr[2] = (data >> 8) & 0xff;\n-  ptr[1] = (data >> 16) & 0xff;\n-  ptr[0] = (data >> 24) & 0xff;\n-}\n-\n-static inline void\n-put_uint64_be (unsigned char *ptr, uint64_t data)\n-{\n-  ptr[7] = data & 0xff;\n-  ptr[6] = (data >> 8) & 0xff;\n-  ptr[5] = (data >> 16) & 0xff;\n-  ptr[4] = (data >> 24) & 0xff;\n-  ptr[3] = (data >> 32) & 0xff;\n-  ptr[2] = (data >> 40) & 0xff;\n-  ptr[1] = (data >> 48) & 0xff;\n-  ptr[0] = (data >> 56) & 0xff;\n-}\n-\n-static inline void\n-get_string (unsigned char *ptr, char *dest, size_t len)\n-{\n-  memcpy (dest, ptr, len);\n-}\n-\n-static inline void\n-put_string (unsigned char *ptr, char *src, size_t len)\n-{\n-  memcpy (ptr, src, len);\n-}\n-\n-/* Use the target macro BYTES_BIG_ENDIAN to choose.  */\n-\n-static inline uint16_t\n-get_uint16 (const unsigned char *ptr)\n-{\n-  if (BYTES_BIG_ENDIAN)\n-    return get_uint16_be (ptr);\n-  else\n-    return get_uint16_le (ptr);\n-}\n-\n-static inline uint32_t\n-get_uint32 (const unsigned char *ptr)\n-{\n-  if (BYTES_BIG_ENDIAN)\n-    return get_uint32_be (ptr);\n-  else\n-    return get_uint32_le (ptr);\n-}\n-\n-static inline uint64_t\n-get_uint64 (const unsigned char *ptr)\n-{\n-  if (BYTES_BIG_ENDIAN)\n-    return get_uint64_be (ptr);\n-  else\n-    return get_uint64_le (ptr);\n-}\n-\n-static inline void\n-put_uint16 (unsigned char *ptr, uint16_t data)\n-{\n-  if (BYTES_BIG_ENDIAN)\n-    put_uint16_be (ptr, data);\n-  else\n-    put_uint16_le (ptr, data);\n-}\n-\n-static inline void\n-put_uint32 (unsigned char *ptr, uint32_t data)\n-{\n-  if (BYTES_BIG_ENDIAN)\n-    put_uint32_be (ptr, data);\n-  else\n-    put_uint32_le (ptr, data);\n-}\n-\n-static inline void\n-put_uint64 (unsigned char *ptr, uint64_t data)\n-{\n-  if (BYTES_BIG_ENDIAN)\n-    put_uint64_be (ptr, data);\n-  else\n-    put_uint64_le (ptr, data);\n-}\n-\n-#endif /* GCC_LTO_ENDIAN_H  */\n-"}, {"sha": "21da20b052a66ac41c0db6eade777eb56f3008b7", "filename": "gcc/lto/lto-object.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Flto%2Flto-object.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Flto%2Flto-object.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-object.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -26,15 +26,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lto.h\"\n #include \"tm.h\"\n #include \"lto-streamer.h\"\n-#include \"libiberty.h\"\n #include \"simple-object.h\"\n \n-/* Handle opening elf files on hosts, such as Windows, that may use\n-   text file handling that will break binary access.  */\n-#ifndef O_BINARY\n-# define O_BINARY 0\n-#endif\n-\n /* Segment name for LTO sections.  This is only used for Mach-O.\n    FIXME: This needs to be kept in sync with darwin.c.  */\n "}, {"sha": "9cfb5e272c7dd4cbfcc035d195ac6c5c5c2df53c", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n #include \"tm.h\"\n-#include \"libiberty.h\"\n #include \"cgraph.h\"\n #include \"ggc.h\"\n #include \"tree-ssa-operands.h\"\n@@ -46,20 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"splay-tree.h\"\n #include \"params.h\"\n \n-/* This needs to be included after config.h.  Otherwise, _GNU_SOURCE will not\n-   be defined in time to set __USE_GNU in the system headers, and strsignal\n-   will not be declared.  */\n-#if HAVE_MMAP_FILE\n-#include <sys/mman.h>\n-#endif\n-\n-/* Handle opening elf files on hosts, such as Windows, that may use \n-   text file handling that will break binary access.  */\n-\n-#ifndef O_BINARY\n-# define O_BINARY 0\n-#endif\n-\n static GTY(()) tree first_personality_decl;\n \n /* Returns a hash code for P.  */"}, {"sha": "3dfb8ae0a2d381868ef4f6782e0844c180884546", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -665,8 +665,6 @@ main (void)\n \n #undef index\n \n-#include <signal.h>\n-\n #ifndef CROSS_DIRECTORY_STRUCTURE\n #include <a.out.h>\n #else"}, {"sha": "8174d156f777f6fe4ef714d8547a0ea4348d220f", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -21,13 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n #include \"system.h\"\n-\n-#include <signal.h>\n-\n-#ifdef HAVE_SYS_RESOURCE_H\n-# include <sys/resource.h>\n-#endif\n-\n #include \"intl.h\"\n #include \"coretypes.h\"\n #include \"tm.h\" /* Needed by rtl.h and used for DWARF2_DEBUGGING_INFO\n@@ -1128,7 +1121,7 @@ print_specific_help (unsigned int include_flags,\n     {\n       const char *p;\n \n-      GET_ENVIRONMENT (p, \"COLUMNS\");\n+      p = getenv (\"COLUMNS\");\n       if (p != NULL)\n \t{\n \t  int value = atoi (p);"}, {"sha": "4be61a9455e577594d1d23c3948afb14ff7df631", "filename": "gcc/passes.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -28,16 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include <signal.h>\n-\n-#ifdef HAVE_SYS_RESOURCE_H\n-# include <sys/resource.h>\n-#endif\n-\n-#ifdef HAVE_SYS_TIMES_H\n-# include <sys/times.h>\n-#endif\n-\n #include \"line-map.h\"\n #include \"input.h\"\n #include \"tree.h\""}, {"sha": "c177d2d456d28ff4a06556baaeb04059a1242293", "filename": "gcc/sparseset.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fsparseset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fsparseset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsparseset.h?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,5 @@\n /* SparseSet implementation.\n-   Copyright (C) 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2007, 2010 Free Software Foundation, Inc.\n    Contributed by Peter Bergner <bergner@vnet.ibm.com>\n \n This file is part of GCC.\n@@ -21,8 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_SPARSESET_H\n #define GCC_SPARSESET_H\n \n-#include <assert.h>\n-\n #define SPARSESET_ELT_BITS ((unsigned) HOST_BITS_PER_WIDEST_FAST_INT)\n #define SPARSESET_ELT_TYPE unsigned int\n "}, {"sha": "3dc3b4e8d88915c4a46e58fa0ad9b799834b2c10", "filename": "gcc/system.h", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -180,7 +180,7 @@ extern int fprintf_unlocked (FILE *, const char *, ...);\n /* There are an extraordinary number of issues with <ctype.h>.\n    The last straw is that it varies with the locale.  Use libiberty's\n    replacement instead.  */\n-#include <safe-ctype.h>\n+#include \"safe-ctype.h\"\n \n #include <sys/types.h>\n \n@@ -314,6 +314,9 @@ extern int errno;\n #ifndef O_WRONLY\n # define O_WRONLY 1\n #endif\n+#ifndef O_BINARY\n+# define O_BINARY 0\n+#endif\n \n /* Some systems define these in, e.g., param.h.  We undefine these names\n    here to avoid the warnings.  We prefer to use our definitions since we\n@@ -353,6 +356,31 @@ extern int errno;\n #define WCOREFLG 0200\n #endif\n \n+#include <signal.h>\n+#if !defined (SIGCHLD) && defined (SIGCLD)\n+# define SIGCHLD SIGCLD\n+#endif\n+\n+#ifdef HAVE_SYS_MMAN_H\n+# include <sys/mman.h>\n+#endif\n+\n+#ifndef MAP_FAILED\n+# define MAP_FAILED ((void *)-1)\n+#endif\n+\n+#if !defined (MAP_ANONYMOUS) && defined (MAP_ANON)\n+# define MAP_ANONYMOUS MAP_ANON\n+#endif\n+\n+#ifdef HAVE_SYS_RESOURCE_H\n+# include <sys/resource.h>\n+#endif\n+\n+#ifdef HAVE_SYS_TIMES_H\n+# include <sys/times.h>\n+#endif\n+\n /* The HAVE_DECL_* macros are three-state, undefined, 0 or 1.  If they\n    are defined to 0 then we must provide the relevant declaration\n    here.  These checks will be in the undefined state while configure\n@@ -526,6 +554,10 @@ extern int vsnprintf(char *, size_t, const char *, va_list);\n # define mkdir(a,b) mkdir(a)\n #endif\n \n+#ifndef HAVE_KILL\n+# define kill(p,s) raise(s)\n+#endif\n+\n /* Provide a way to print an address via printf.  */\n #ifndef HOST_PTR_PRINTF\n #define HOST_PTR_PRINTF \"%p\"\n@@ -804,7 +836,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n    LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n \n /* Miscellaneous macros that are no longer used.  */\n- #pragma GCC poison USE_MAPPED_LOCATION\n+ #pragma GCC poison USE_MAPPED_LOCATION GET_ENVIRONMENT\n \n /* Libiberty macros that are no longer used in GCC.  */\n #undef ANSI_PROTOTYPES"}, {"sha": "f1d20e8d0c589bc71e33da1646181e77911a93bd", "filename": "gcc/timevar.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftimevar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftimevar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,5 +1,6 @@\n /* Timing variables for measuring compiler performance.\n-   Copyright (C) 2000, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2003, 2004, 2005, 2007, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Alex Samuel <samuel@codesourcery.com>\n \n This file is part of GCC.\n@@ -20,12 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config.h\"\n #include \"system.h\"\n-#ifdef HAVE_SYS_TIMES_H\n-# include <sys/times.h>\n-#endif\n-#ifdef HAVE_SYS_RESOURCE_H\n-#include <sys/resource.h>\n-#endif\n #include \"timevar.h\"\n \n #ifndef HAVE_CLOCK_T"}, {"sha": "44618ed40df2081e77939dca75d081cef43aa401", "filename": "gcc/tlink.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1,8 +1,8 @@\n /* Scan linker error messages for missing template instantiations and provide\n    them.\n \n-   Copyright (C) 1995, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2008\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2008,\n+   2009, 2010 Free Software Foundation, Inc.\n    Contributed by Jason Merrill (jason@cygnus.com).\n \n This file is part of GCC.\n@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"demangle.h\"\n #include \"collect2.h\"\n-#include \"libiberty.h\"\n \n /* TARGET_64BIT may be defined to use driver specific functionality. */\n #undef TARGET_64BIT"}, {"sha": "37114ceb550c762944fc2196e767d2ffca0153bb", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -28,12 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include <signal.h>\n-\n-#ifdef HAVE_SYS_TIMES_H\n-# include <sys/times.h>\n-#endif\n-\n #include \"line-map.h\"\n #include \"input.h\"\n #include \"tree.h\""}, {"sha": "a85733bb3b7ada8c4902540182b3b0b4ba070966", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -39,7 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"hashtab.h\"\n #include \"diagnostic.h\"\n-#include <demangle.h>\n+#include \"demangle.h\"\n #include \"langhooks.h\"\n #include \"ggc.h\"\n #include \"cgraph.h\""}, {"sha": "0f4b429c3140fb43b6c99e8a21ec81d514eb54db", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -80,8 +80,6 @@ eight) times the number of the actual switch branches. */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include <signal.h>\n-\n #include \"line-map.h\"\n #include \"params.h\"\n #include \"flags.h\""}, {"sha": "2278d1ab30d6b07aefaf3f7f3d789bf132c1cb28", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f3e391b3fdd791965321747ac078a61472fb87/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=71f3e391b3fdd791965321747ac078a61472fb87", "patch": "@@ -1625,9 +1625,7 @@ vmsdbgout_finish (const char *main_input_filename ATTRIBUTE_UNUSED)\n #include <vms/stsdef.h>\n #include <vms/iodef.h>\n #include <vms/fatdef.h>\n-#include <errno.h>\n #include <vms/descrip.h>\n-#include <string.h>\n #include <unixlib.h>\n \n #define MAXPATH 256"}]}