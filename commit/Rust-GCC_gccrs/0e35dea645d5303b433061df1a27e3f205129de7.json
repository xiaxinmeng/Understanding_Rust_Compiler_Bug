{"sha": "0e35dea645d5303b433061df1a27e3f205129de7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzNWRlYTY0NWQ1MzAzYjQzMzA2MWRmMWEyN2UzZjIwNTEyOWRlNw==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-06-05T16:00:08Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-16T09:18:06Z"}, "message": "[Ada] Handle N_Others_Choice case in range-building function\n\ngcc/ada/\n\n\t* sem_case.adb (Build_Choice): Set Is_Static_Expression flag.\n\t(Lit_Of): Update specification to mention Is_Static_Expression\n\tflag.\n\t* sem_ch13.adb (Membership_Entry): Check for N_Others_Choice.", "tree": {"sha": "7a71094cf07594bc7e23cf049d0b776a7defc4e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a71094cf07594bc7e23cf049d0b776a7defc4e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e35dea645d5303b433061df1a27e3f205129de7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e35dea645d5303b433061df1a27e3f205129de7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e35dea645d5303b433061df1a27e3f205129de7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e35dea645d5303b433061df1a27e3f205129de7/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad323bbf943820aab97a06d318aadd003f8b978e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad323bbf943820aab97a06d318aadd003f8b978e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad323bbf943820aab97a06d318aadd003f8b978e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "6cda6a96c0f25a2cc4928f60e4b624cada72c7fd", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e35dea645d5303b433061df1a27e3f205129de7/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e35dea645d5303b433061df1a27e3f205129de7/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=0e35dea645d5303b433061df1a27e3f205129de7", "patch": "@@ -998,7 +998,8 @@ package body Sem_Case is\n \n       function Lit_Of (Value : Uint) return Node_Id;\n       --  Returns the Node_Id for the enumeration literal corresponding to the\n-      --  position given by Value within the enumeration type Choice_Type.\n+      --  position given by Value within the enumeration type Choice_Type. The\n+      --  returned value has its Is_Static_Expression flag set to true.\n \n       ------------------\n       -- Build_Choice --\n@@ -1016,6 +1017,7 @@ package body Sem_Case is\n             if Is_Integer_Type (Choice_Type) then\n                Lit_Node := Make_Integer_Literal (Loc, Value1);\n                Set_Etype (Lit_Node, Choice_Type);\n+               Set_Is_Static_Expression (Lit_Node);\n             else\n                Lit_Node := Lit_Of (Value1);\n             end if;\n@@ -1028,8 +1030,10 @@ package body Sem_Case is\n             if Is_Integer_Type (Choice_Type) then\n                Lo := Make_Integer_Literal (Loc, Value1);\n                Set_Etype (Lo, Choice_Type);\n+               Set_Is_Static_Expression (Lo);\n                Hi := Make_Integer_Literal (Loc, Value2);\n                Set_Etype (Hi, Choice_Type);\n+               Set_Is_Static_Expression (Hi);\n                Lit_Node :=\n                  Make_Range (Loc,\n                    Low_Bound  => Lo,"}, {"sha": "9b7f64e84af97ab39c50d35762c9c7df5f02bcab", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e35dea645d5303b433061df1a27e3f205129de7/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e35dea645d5303b433061df1a27e3f205129de7/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=0e35dea645d5303b433061df1a27e3f205129de7", "patch": "@@ -9112,6 +9112,25 @@ package body Sem_Ch13 is\n                return RList'(1 => REnt'(SLo, SHi));\n             end if;\n \n+         --  Others case\n+\n+         elsif Nkind (N) = N_Others_Choice then\n+            declare\n+               Choices    : constant List_Id := Others_Discrete_Choices (N);\n+               Choice     : Node_Id;\n+               Range_List : RList (1 .. List_Length (Choices));\n+\n+            begin\n+               Choice := First (Choices);\n+\n+               for J in Range_List'Range loop\n+                  Range_List (J) := REnt'(Lo_Val (Choice), Hi_Val (Choice));\n+                  Next (Choice);\n+               end loop;\n+\n+               return Range_List;\n+            end;\n+\n          --  Static expression case\n \n          elsif Is_OK_Static_Expression (N) then"}]}