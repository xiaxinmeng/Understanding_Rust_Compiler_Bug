{"sha": "7d9492256aceb2fa94ec09d9a81db67b3d624472", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q5NDkyMjU2YWNlYjJmYTk0ZWMwOWQ5YTgxZGI2N2IzZDYyNDQ3Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2008-03-23T19:19:05Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-03-23T19:19:05Z"}, "message": "faq.xml: Fix various links.\n\n2008-03-23  Paolo Carlini  <pcarlini@suse.de>\n\n\t* doc/xml/faq.xml: Fix various links.\n\t* doc/xml/api.xml: Likewise.\n\t* doc/xml/manual/parallel_mode.xml: Likewise.\n\t* doc/html/faq.html: Regenerate.\n\t* doc/html/api.html: Likewise.\n\t* doc/html/manual/bk01pt12ch31s03.html: Likewise.\n\nFrom-SVN: r133463", "tree": {"sha": "eafd634dd65826006c150bddde2450910784e272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eafd634dd65826006c150bddde2450910784e272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d9492256aceb2fa94ec09d9a81db67b3d624472", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d9492256aceb2fa94ec09d9a81db67b3d624472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d9492256aceb2fa94ec09d9a81db67b3d624472", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d9492256aceb2fa94ec09d9a81db67b3d624472/comments", "author": null, "committer": null, "parents": [{"sha": "1c42f5c6adb364ddb9339a05cbea12b906263852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c42f5c6adb364ddb9339a05cbea12b906263852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c42f5c6adb364ddb9339a05cbea12b906263852"}], "stats": {"total": 69, "additions": 39, "deletions": 30}, "files": [{"sha": "c6b52a809865f12c411a154117526e25ed714b09", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7d9492256aceb2fa94ec09d9a81db67b3d624472", "patch": "@@ -1,3 +1,12 @@\n+2008-03-23  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* doc/xml/faq.xml: Fix various links.\n+\t* doc/xml/api.xml: Likewise.\n+\t* doc/xml/manual/parallel_mode.xml: Likewise.\n+\t* doc/html/faq.html: Regenerate.\n+\t* doc/html/api.html: Likewise.\n+\t* doc/html/manual/bk01pt12ch31s03.html: Likewise.\n+\n 2008-03-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/util/testsuite_abi.cc: Add support for not counting"}, {"sha": "dd895fc55068ab190fa528132772f1b07653da60", "filename": "libstdc++-v3/doc/html/api.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fapi.html?ref=7d9492256aceb2fa94ec09d9a81db67b3d624472", "patch": "@@ -3,9 +3,9 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>API and Source Level Documentation</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.73.2\" /><link rel=\"start\" href=\"spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk02.html\" title=\"\" /><link rel=\"prev\" href=\"bk02.html\" title=\"\" /><link rel=\"next\" href=\"bk03.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">API and Source Level Documentation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\"></th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk03.html\">Next</a></td></tr></table><hr /></div><div class=\"article\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"api\"></a>API and Source Level Documentation</h2></div><div><p class=\"copyright\">Copyright \u00a9 \n       2008\n      \n-      <a class=\"ulink\" href=\"http://fsf.org\" target=\"_top\">FSF\n+      <a class=\"ulink\" href=\"http://www.fsf.org/\" target=\"_top\">FSF\n       </a>\n-    </p></div><div><div class=\"legalnotice\"><a id=\"id330876\"></a><p>\n+    </p></div><div><div class=\"legalnotice\"><a id=\"id375791\"></a><p>\n       <a class=\"ulink\" href=\"17_intro/license.html\" target=\"_top\">License \n       </a>\n     </p></div></div></div><hr /></div><p>"}, {"sha": "b46c2b7ab5a6f54ef9fd2a6611a71999c0c1945b", "filename": "libstdc++-v3/doc/html/faq.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Ffaq.html?ref=7d9492256aceb2fa94ec09d9a81db67b3d624472", "patch": "@@ -164,7 +164,7 @@\n     </p></td></tr><tr class=\"question\"><td align=\"left\" valign=\"top\"><a id=\"faq.how\"></a><a id=\"q-how\"></a><p><b>1.5.</b></p></td><td align=\"left\" valign=\"top\"><p>\n       How do I contribute to the effort?\n     </p></td></tr><tr class=\"answer\"><td align=\"left\" valign=\"top\"><a id=\"a-how\"></a></td><td align=\"left\" valign=\"top\"><p>\n-    Here is <a class=\"ulink\" href=\"../17_intro/contribute.html\" target=\"_top\">a page devoted to\n+    Here is <a class=\"link\" href=\"manual/appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0Contributing\">a page devoted to\n     this topic</a>. Subscribing to the mailing list (see above, or\n     the homepage) is a very good idea if you have something to\n     contribute, or if you have spare time and want to\n@@ -320,7 +320,7 @@\n     </p></td></tr><tr class=\"answer\"><td align=\"left\" valign=\"top\"><a id=\"a-what_is_libsupcxx\"></a></td><td align=\"left\" valign=\"top\"><p>\n       If the only functions from <code class=\"filename\">libstdc++.a</code>\n       which you need are language support functions (those listed in\n-      <a class=\"ulink\" href=\"../18_support/howto.html\" target=\"_top\">clause 18</a> of the\n+      <a class=\"link\" href=\"manual/support.html\" title=\"Part\u00a0II.\u00a0Support\">clause 18</a> of the\n       standard, e.g., <code class=\"function\">new</code> and\n       <code class=\"function\">delete</code>), then try linking against\n       <code class=\"filename\">libsupc++.a</code>, which is a subset of\n@@ -578,13 +578,13 @@\n     reason is that the state flags are <span class=\"emphasis\"><em>not</em></span> cleared\n     on a successful call to open().  The standard unfortunately did\n     not specify behavior in this case, and to everybody's great sorrow,\n-    the <a class=\"ulink\" href=\"../ext/howto.html#5\" target=\"_top\">proposed LWG resolution in\n+    the <a class=\"link\" href=\"manual/bk01pt01ch01s03.html\" title=\"Bugs\">proposed LWG resolution in\n       DR #22</a> is to leave the flags unchanged.  You must insert a call\n     to <code class=\"function\">fs.clear()</code> between the calls to close() and open(),\n     and then everything will work like we all expect it to work.\n     <span class=\"emphasis\"><em>Update:</em></span> for GCC 4.0 we implemented the resolution\n-    of <a class=\"ulink\" href=\"../ext/howto.html#5\" target=\"_top\">DR #409</a> and open() now calls\n-    <code class=\"function\">clear()</code> on success!\n+    of <a class=\"link\" href=\"manual/bk01pt01ch01s03.html\" title=\"Bugs\">DR #409</a> and open() \n+    now calls <code class=\"function\">clear()</code> on success!\n     </p></td></tr><tr class=\"question\"><td align=\"left\" valign=\"top\"><a id=\"faq.wefcxx_verbose\"></a><a id=\"q-wefcxx_verbose\"></a><p><b>6.2.</b></p></td><td align=\"left\" valign=\"top\"><p>\n       -Weffc++ complains too much\n     </p></td></tr><tr class=\"answer\"><td align=\"left\" valign=\"top\"><a id=\"a-wefcxx_verbose\"></a></td><td align=\"left\" valign=\"top\"><p>\n@@ -647,7 +647,7 @@\n     </p><p>\n     More information, including how to optionally enable/disable the\n     checks, is available\n-    <a class=\"ulink\" href=\"../19_diagnostics/howto.html#3\" target=\"_top\">here</a>.\n+    <a class=\"link\" href=\"manual/bk01pt03ch08.html\" title=\"Chapter\u00a08.\u00a0Concept Checking\">here</a>.\n     </p></td></tr><tr class=\"question\"><td align=\"left\" valign=\"top\"><a id=\"faq.dlopen_crash\"></a><a id=\"q-dlopen_crash\"></a><p><b>6.6.</b></p></td><td align=\"left\" valign=\"top\"><p>\n       Program crashes when using library code in a\n       dynamically-loaded library\n@@ -672,19 +672,19 @@\n     </p></td></tr><tr class=\"answer\"><td align=\"left\" valign=\"top\"><a id=\"a-memory_leaks\"></a></td><td align=\"left\" valign=\"top\"><p>\n     A few people have reported that the standard containers appear\n     to leak memory when tested with memory checkers such as\n-    <a class=\"ulink\" href=\"http://developer.kde.org/~sewardj/\" target=\"_top\">valgrind</a>.\n+    <a class=\"ulink\" href=\"http://valgrind.org/\" target=\"_top\">valgrind</a>.\n     The library's default allocators keep free memory in a pool\n     for later reuse, rather than returning it to the OS.  Although\n     this memory is always reachable by the library and is never\n     lost, memory debugging tools can report it as a leak.  If you\n     want to test the library for memory leaks please read\n-    <a class=\"ulink\" href=\"../debug.html#mem\" target=\"_top\">Tips for memory leak hunting</a>\n+    <a class=\"link\" href=\"manual/debug.html#debug.memory\" title=\"Memory Leak Hunting\">Tips for memory leak hunting</a>\n     first.\n     </p></td></tr><tr class=\"question\"><td align=\"left\" valign=\"top\"><a id=\"faq.list_size_on\"></a><a id=\"q-list_size_on\"></a><p><b>6.8.</b></p></td><td align=\"left\" valign=\"top\"><p>\n       list::size() is O(n)!\n     </p></td></tr><tr class=\"answer\"><td align=\"left\" valign=\"top\"><a id=\"a-list_size_on\"></a></td><td align=\"left\" valign=\"top\"><p>\n     See\n-    the <a class=\"ulink\" href=\"../23_containers/howto.html#6\" target=\"_top\">Containers</a>\n+    the <a class=\"link\" href=\"manual/containers.html\" title=\"Part\u00a0VII.\u00a0Containers\">Containers</a>\n     chapter.\n     </p></td></tr><tr class=\"question\"><td align=\"left\" valign=\"top\"><a id=\"faq.easy_to_fix\"></a><a id=\"q-easy_to_fix\"></a><p><b>6.9.</b></p></td><td align=\"left\" valign=\"top\"><p>\n       Aw, that's easy to fix!\n@@ -695,7 +695,7 @@\n     patches</a> that covers the procedure, but for libstdc++ you\n     should also send the patch to our mailing list in addition to\n     the GCC patches mailing list.  The libstdc++\n-    <a class=\"ulink\" href=\"../17_intro/contribute.html\" target=\"_top\">contributors' page</a>\n+    <a class=\"link\" href=\"manual/appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0Contributing\">contributors' page</a>\n     also talks about how to submit patches.\n     </p><p>\n     In addition to the description, the patch, and the ChangeLog\n@@ -868,6 +868,6 @@\n \u00a0\u00a0\u00a0\u00a0</p></div><p>\n     The copy will take O(n) time and the swap is constant time.\n     </p><p>\n-    See <a class=\"ulink\" href=\"../21_strings/howto.html#6\" target=\"_top\">Shrink-to-fit\n+    See <a class=\"link\" href=\"manual/bk01pt05ch13s05.html\" title=\"Shrink to Fit\">Shrink-to-fit\n     strings</a> for a similar solution for strings.\n     </p></td></tr></tbody></table></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk03.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0</td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>"}, {"sha": "97fdb5ba1b575cb3548dd6df0a3b24dc21b28f5c", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch31s03.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch31s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch31s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch31s03.html?ref=7d9492256aceb2fa94ec09d9a81db67b3d624472", "patch": "@@ -2,7 +2,7 @@\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n <html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Using</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.73.2\" /><meta name=\"keywords\" content=\"&#10;      C++&#10;    , &#10;      library&#10;    , &#10;      parallel&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"start\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"parallel_mode.html\" title=\"Chapter\u00a031.\u00a0Parallel Mode\" /><link rel=\"prev\" href=\"bk01pt12ch31s02.html\" title=\"Semantics\" /><link rel=\"next\" href=\"bk01pt12ch31s04.html\" title=\"Design\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Using</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a031.\u00a0Parallel Mode</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch31s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.using\"></a>Using</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"parallel_mode.using.parallel_mode\"></a>Using Parallel Mode</h3></div></div></div><p>To use the libstdc++ parallel mode, compile your application with\n   the compiler flag <code class=\"code\">-D_GLIBCXX_PARALLEL -fopenmp</code>. This\n-  will link in <code class=\"code\">libgomp</code>, the GNU OpenMP <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libgomp\" target=\"_top\">implementation</a>,\n+  will link in <code class=\"code\">libgomp</code>, the GNU OpenMP <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libgomp/\" target=\"_top\">implementation</a>,\n   whose presence is mandatory. In addition, hardware capable of atomic\n   operations is mandatory. Actually activating these atomic\n   operations may require explicit compiler flags on some targets"}, {"sha": "506f631ba0ae984183efa034fc23a6cb06f67ce2", "filename": "libstdc++-v3/doc/xml/api.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fapi.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fapi.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fapi.xml?ref=7d9492256aceb2fa94ec09d9a81db67b3d624472", "patch": "@@ -15,7 +15,7 @@\n       2008\n     </year>\n     <holder>\n-      <ulink url=\"http://fsf.org\">FSF\n+      <ulink url=\"http://www.fsf.org/\">FSF\n       </ulink>\n     </holder>\n   </copyright>"}, {"sha": "a60bee3e287257850c8f0f1c884c983a30a73d78", "filename": "libstdc++-v3/doc/xml/faq.xml", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Ffaq.xml?ref=7d9492256aceb2fa94ec09d9a81db67b3d624472", "patch": "@@ -130,8 +130,8 @@\n   </question>\n   <answer id=\"a-how\">\n     <para>\n-    Here is <ulink url=\"../17_intro/contribute.html\">a page devoted to\n-    this topic</ulink>. Subscribing to the mailing list (see above, or\n+    Here is <link linkend=\"appendix.contrib\">a page devoted to\n+    this topic</link>. Subscribing to the mailing list (see above, or\n     the homepage) is a very good idea if you have something to\n     contribute, or if you have spare time and want to\n     help. Contributions don't have to be in the form of source code;\n@@ -400,7 +400,7 @@\n     <para>\n       If the only functions from <filename>libstdc++.a</filename>\n       which you need are language support functions (those listed in\n-      <ulink url=\"../18_support/howto.html\">clause 18</ulink> of the\n+      <link linkend=\"manual.support\">clause 18</link> of the\n       standard, e.g., <function>new</function> and\n       <function>delete</function>), then try linking against\n       <filename>libsupc++.a</filename>, which is a subset of\n@@ -785,13 +785,13 @@\n     reason is that the state flags are <emphasis>not</emphasis> cleared\n     on a successful call to open().  The standard unfortunately did\n     not specify behavior in this case, and to everybody's great sorrow,\n-    the <ulink url=\"../ext/howto.html#5\">proposed LWG resolution in\n-      DR #22</ulink> is to leave the flags unchanged.  You must insert a call\n+    the <link linkend=\"manual.intro.status.bugs\">proposed LWG resolution in\n+      DR #22</link> is to leave the flags unchanged.  You must insert a call\n     to <function>fs.clear()</function> between the calls to close() and open(),\n     and then everything will work like we all expect it to work.\n     <emphasis>Update:</emphasis> for GCC 4.0 we implemented the resolution\n-    of <ulink url=\"../ext/howto.html#5\">DR #409</ulink> and open() now calls\n-    <function>clear()</function> on success!\n+    of <link linkend=\"manual.intro.status.bugs\">DR #409</link> and open() \n+    now calls <function>clear()</function> on success!\n     </para> \n   </answer>\n </qandaentry>\n@@ -895,7 +895,7 @@\n     <para>\n     More information, including how to optionally enable/disable the\n     checks, is available\n-    <ulink url=\"../19_diagnostics/howto.html#3\">here</ulink>.\n+    <link linkend=\"manual.diagnostics.concept_checking\">here</link>.\n     </para> \n   </answer>\n </qandaentry>\n@@ -940,13 +940,13 @@\n     <para>\n     A few people have reported that the standard containers appear\n     to leak memory when tested with memory checkers such as\n-    <ulink url=\"http://developer.kde.org/~sewardj/\">valgrind</ulink>.\n+    <ulink url=\"http://valgrind.org/\">valgrind</ulink>.\n     The library's default allocators keep free memory in a pool\n     for later reuse, rather than returning it to the OS.  Although\n     this memory is always reachable by the library and is never\n     lost, memory debugging tools can report it as a leak.  If you\n     want to test the library for memory leaks please read\n-    <ulink url=\"../debug.html#mem\">Tips for memory leak hunting</ulink>\n+    <link linkend=\"debug.memory\">Tips for memory leak hunting</link>\n     first.\n     </para> \n   </answer>\n@@ -961,7 +961,7 @@\n   <answer id=\"a-list_size_on\">\n     <para>\n     See\n-    the <ulink url=\"../23_containers/howto.html#6\">Containers</ulink>\n+    the <link linkend=\"manual.containers\">Containers</link>\n     chapter.\n     </para> \n   </answer>\n@@ -981,7 +981,7 @@\n     patches</ulink> that covers the procedure, but for libstdc++ you\n     should also send the patch to our mailing list in addition to\n     the GCC patches mailing list.  The libstdc++\n-    <ulink url=\"../17_intro/contribute.html\">contributors' page</ulink>\n+    <link linkend=\"appendix.contrib\">contributors' page</link>\n     also talks about how to submit patches.\n     </para>\n     <para>\n@@ -1237,8 +1237,8 @@\n     The copy will take O(n) time and the swap is constant time.\n     </para>\n     <para>\n-    See <ulink url=\"../21_strings/howto.html#6\">Shrink-to-fit\n-    strings</ulink> for a similar solution for strings.\n+    See <link linkend=\"strings.string.shrink\">Shrink-to-fit\n+    strings</link> for a similar solution for strings.\n     </para> \n   </answer>\n </qandaentry>"}, {"sha": "449cbda29b675a0c26bde5d3cd12c12ffcf2ed0c", "filename": "libstdc++-v3/doc/xml/manual/parallel_mode.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d9492256aceb2fa94ec09d9a81db67b3d624472/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml?ref=7d9492256aceb2fa94ec09d9a81db67b3d624472", "patch": "@@ -116,7 +116,7 @@ It might work with other compilers, though.</para>\n <para>\n   To use the libstdc++ parallel mode, compile your application with\n   the compiler flag <constant>-D_GLIBCXX_PARALLEL -fopenmp</constant>. This\n-  will link in <code>libgomp</code>, the GNU OpenMP <ulink url=\"http://gcc.gnu.org/onlinedocs/libgomp\">implementation</ulink>,\n+  will link in <code>libgomp</code>, the GNU OpenMP <ulink url=\"http://gcc.gnu.org/onlinedocs/libgomp/\">implementation</ulink>,\n   whose presence is mandatory. In addition, hardware capable of atomic\n   operations is mandatory. Actually activating these atomic\n   operations may require explicit compiler flags on some targets"}]}