{"sha": "0a6d5a9e3eb03b97884b2b06f8239f8371b278cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE2ZDVhOWUzZWIwM2I5Nzg4NGIyYjA2ZjgyMzlmODM3MWIyNzhjZg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-03-18T17:44:56Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-03-18T17:44:56Z"}, "message": "rs6000: Use pointers in bswap testcases\n\nCurrently these bswap testcases use global variables, which causes\nproblems with -m32: the memory access is a D-form access, and when\ncombine tries to combine that with the bswap it tries a D-form store\nwith byte reverse.  That instruction does not exist, and since combine\nstarted with only two insns here it will not try splitting this.\n\nThis should be improved, but it is not what this test is testing, and\nthe \"load\" case already uses a pointer, so let's do that for the store\ncase as well.\n\n\n\t* gcc.target/powerpc/bswap16.c: Use a pointer instead of a global for\n\tthe \"store\" test as well.\n\t* gcc.target/powerpc/bswap32.c: Ditto.\n\nFrom-SVN: r269771", "tree": {"sha": "47cb5fcf28684e04421e472cba789d34076559cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47cb5fcf28684e04421e472cba789d34076559cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2ebe97358d4e40304af37324146e8f87e4b8106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2ebe97358d4e40304af37324146e8f87e4b8106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2ebe97358d4e40304af37324146e8f87e4b8106"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "ba77fc552018a0709c2086ce175a7d719ff22271", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a6d5a9e3eb03b97884b2b06f8239f8371b278cf", "patch": "@@ -1,3 +1,9 @@\n+2019-03-18  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/bswap16.c: Use a pointer instead of a global for\n+\tthe \"store\" test as well.\n+\t* gcc.target/powerpc/bswap32.c: Ditto.\n+\n 2019-03-18  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.target/powerpc/pr18096-1.c: Allow an error message that says"}, {"sha": "89efc8118442b27aeedfe7c19b173d277da0f64b", "filename": "gcc/testsuite/gcc.target/powerpc/bswap16.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbswap16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbswap16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbswap16.c?ref=0a6d5a9e3eb03b97884b2b06f8239f8371b278cf", "patch": "@@ -3,6 +3,5 @@\n /* { dg-final { scan-assembler \"lhbrx\" } } */\n /* { dg-final { scan-assembler \"sthbrx\" } } */\n \n-unsigned short us;\n unsigned int load_bswap16 (unsigned short *p) { return __builtin_bswap16 (*p); }\n-void store_bswap16 (unsigned int a) { us = __builtin_bswap16 (a); }\n+void store_bswap16 (unsigned short *p, unsigned int a) { *p = __builtin_bswap16 (a); }"}, {"sha": "0d1788ff666e84b2f645f5935d74ec95587a0f79", "filename": "gcc/testsuite/gcc.target/powerpc/bswap32.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbswap32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6d5a9e3eb03b97884b2b06f8239f8371b278cf/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbswap32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbswap32.c?ref=0a6d5a9e3eb03b97884b2b06f8239f8371b278cf", "patch": "@@ -3,6 +3,5 @@\n /* { dg-final { scan-assembler \"lwbrx\" } } */\n /* { dg-final { scan-assembler \"stwbrx\" } } */\n \n-unsigned int ui;\n unsigned int load_bswap32 (unsigned int *p) { return __builtin_bswap32 (*p); }\n-void store_bswap32 (unsigned int a) { ui = __builtin_bswap32 (a); }\n+void store_bswap32 (unsigned int *p, unsigned int a) { *p = __builtin_bswap32 (a); }"}]}