{"sha": "1d6a323453a9261b5ffea44bf37af20369203ef8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2YTMyMzQ1M2E5MjYxYjVmZmVhNDRiZjM3YWYyMDM2OTIwM2VmOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-12-17T22:07:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-12-17T22:07:13Z"}, "message": "dwarf2out.c (loc_descriptor): For SYMBOL_REFs and LABEL_REFs use DW_OP_addr+DW_OP_stack_value instead of...\n\n\t* dwarf2out.c (loc_descriptor): For SYMBOL_REFs and LABEL_REFs\n\tuse DW_OP_addr+DW_OP_stack_value instead of DW_OP_implicit_value.\n\t(add_const_value_attribute): For CONST_STRING, SYMBOL_REFs and\n\tLABEL_REFs use DW_OP_addr+DW_OP_stack_value DW_AT_location instead of\n\tDW_AT_const_value.\n\n\t* gcc.dg/debug/dwarf2/const-1.c: Don't expect DW_AT_const_value,\n\tbut instead DW_AT_location with DW_OP_addr+DW_OP_stack_value.  Add\n\t-gno-strict-dwarf -fno-merge-debug-strings to dg-options.\n\t* g++.dg/debug/dwarf2/const1.C: Likewise.\n\t* g++.dg/debug/dwarf2/template-params-3.C: Likewise.\n\t* g++.dg/debug/dwarf2/template-func-params-3.C: Likewise.\n\nFrom-SVN: r155327", "tree": {"sha": "035d2af942a102f0f2d21ec3c9dc44b27f699373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/035d2af942a102f0f2d21ec3c9dc44b27f699373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d6a323453a9261b5ffea44bf37af20369203ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6a323453a9261b5ffea44bf37af20369203ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d6a323453a9261b5ffea44bf37af20369203ef8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6a323453a9261b5ffea44bf37af20369203ef8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cbdd74793b8442f78a18c036cdac8a5ba472b7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbdd74793b8442f78a18c036cdac8a5ba472b7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbdd74793b8442f78a18c036cdac8a5ba472b7c5"}], "stats": {"total": 73, "additions": 50, "deletions": 23}, "files": [{"sha": "c74baf6b393bd6988090c2d53724b71ec9daa2c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d6a323453a9261b5ffea44bf37af20369203ef8", "patch": "@@ -1,3 +1,11 @@\n+2009-12-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2out.c (loc_descriptor): For SYMBOL_REFs and LABEL_REFs\n+\tuse DW_OP_addr+DW_OP_stack_value instead of DW_OP_implicit_value.\n+\t(add_const_value_attribute): For CONST_STRING, SYMBOL_REFs and\n+\tLABEL_REFs use DW_OP_addr+DW_OP_stack_value DW_AT_location instead of\n+\tDW_AT_const_value.\n+\n 2009-12-17  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/41679"}, {"sha": "da0405774c655efb2433e98d003db724d647c84a", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1d6a323453a9261b5ffea44bf37af20369203ef8", "patch": "@@ -13775,10 +13775,10 @@ loc_descriptor (rtx rtl, enum machine_mode mode,\n       if (mode != VOIDmode && GET_MODE_SIZE (mode) == DWARF2_ADDR_SIZE\n \t  && (dwarf_version >= 4 || !dwarf_strict))\n \t{\n-\t  loc_result = new_loc_descr (DW_OP_implicit_value,\n-\t\t\t\t      DWARF2_ADDR_SIZE, 0);\n-\t  loc_result->dw_loc_oprnd2.val_class = dw_val_class_addr;\n-\t  loc_result->dw_loc_oprnd2.v.val_addr = rtl;\n+\t  loc_result = new_loc_descr (DW_OP_addr, 0, 0);\n+\t  loc_result->dw_loc_oprnd1.val_class = dw_val_class_addr;\n+\t  loc_result->dw_loc_oprnd1.v.val_addr = rtl;\n+\t  add_loc_descr (&loc_result, new_loc_descr (DW_OP_stack_value, 0, 0));\n \t  VEC_safe_push (rtx, gc, used_rtx_array, rtl);\n \t}\n       break;\n@@ -15223,10 +15223,20 @@ add_const_value_attribute (dw_die_ref die, rtx rtl)\n       return true;\n \n     case CONST_STRING:\n-      resolve_one_addr (&rtl, NULL);\n-      add_AT_addr (die, DW_AT_const_value, rtl);\n-      VEC_safe_push (rtx, gc, used_rtx_array, rtl);\n-      return true;\n+      if (dwarf_version >= 4 || !dwarf_strict)\n+\t{\n+\t  dw_loc_descr_ref loc_result;\n+\t  resolve_one_addr (&rtl, NULL);\n+\trtl_addr:\n+\t  loc_result = new_loc_descr (DW_OP_addr, 0, 0);\n+\t  loc_result->dw_loc_oprnd1.val_class = dw_val_class_addr;\n+\t  loc_result->dw_loc_oprnd1.v.val_addr = rtl;\n+\t  add_loc_descr (&loc_result, new_loc_descr (DW_OP_stack_value, 0, 0));\n+\t  add_AT_loc (die, DW_AT_location, loc_result);\n+\t  VEC_safe_push (rtx, gc, used_rtx_array, rtl);\n+\t  return true;\n+\t}\n+      return false;\n \n     case CONST:\n       if (CONSTANT_P (XEXP (rtl, 0)))\n@@ -15236,9 +15246,9 @@ add_const_value_attribute (dw_die_ref die, rtx rtl)\n       if (!const_ok_for_output (rtl))\n \treturn false;\n     case LABEL_REF:\n-      add_AT_addr (die, DW_AT_const_value, rtl);\n-      VEC_safe_push (rtx, gc, used_rtx_array, rtl);\n-      return true;\n+      if (dwarf_version >= 4 || !dwarf_strict)\n+\tgoto rtl_addr;\n+      return false;\n \n     case PLUS:\n       /* In cases where an inlined instance of an inline function is passed"}, {"sha": "ace164a9edb87ad5714dea356a287db3025e20a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d6a323453a9261b5ffea44bf37af20369203ef8", "patch": "@@ -1,3 +1,12 @@\n+2009-12-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/debug/dwarf2/const-1.c: Don't expect DW_AT_const_value,\n+\tbut instead DW_AT_location with DW_OP_addr+DW_OP_stack_value.  Add\n+\t-gno-strict-dwarf -fno-merge-debug-strings to dg-options.\n+\t* g++.dg/debug/dwarf2/const1.C: Likewise.\n+\t* g++.dg/debug/dwarf2/template-params-3.C: Likewise.\n+\t* g++.dg/debug/dwarf2/template-func-params-3.C: Likewise.\n+\n 2009-12-17  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/41679"}, {"sha": "7b18fa0693bfb183dd6eecb78491e61c5965297f", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/const1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fconst1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fconst1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fconst1.C?ref=1d6a323453a9261b5ffea44bf37af20369203ef8", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -gdwarf-2 -dA\" } */\n+/* { dg-options \"-O -gdwarf-2 -dA -gno-strict-dwarf -fno-merge-debug-strings\" } */\n /* { dg-require-visibility \"\" } */\n-/* { dg-final { scan-assembler \"DW_AT_const_value\" } } */\n+/* { dg-final { scan-assembler \"DW_AT_location\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*DW_OP_addr\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*fnx\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*DW_OP_stack_value\" } } */\n \n-extern void x () __attribute__((visibility (\"hidden\")));\n-void (* const f) () = x;\n+extern void fnx () __attribute__((visibility (\"hidden\")));\n+void (* const f) () = fnx;"}, {"sha": "4c72490351b88f5823cec769fa5fcf36c9f1fca1", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-func-params-3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-func-params-3.C?ref=1d6a323453a9261b5ffea44bf37af20369203ef8", "patch": "@@ -1,9 +1,9 @@\n // Contributed by Dodji Seketeli <dodji@redhat.com>\n // Origin PR debug/30161\n-// { dg-options \"-g -dA\" }\n+// { dg-options \"-g -dA -gno-strict-dwarf -fno-merge-debug-strings\" }\n // { dg-final { scan-assembler \"DW_TAG_template_value_param\" } }\n // { dg-final { scan-assembler \"f.*DW_AT_name\" } }\n-// { dg-final { scan-assembler \"_Z4blehv.*DW_AT_const_value\" } }\n+// { dg-final { scan-assembler \"DW_AT_location\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*DW_OP_addr\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*_Z4blehv\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*DW_OP_stack_value\" } } */\n \n typedef void (*func_ptr)();\n "}, {"sha": "e69e1c9f37bb3cdf2d80a9353502b3efc440c71b", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/template-params-3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftemplate-params-3.C?ref=1d6a323453a9261b5ffea44bf37af20369203ef8", "patch": "@@ -1,9 +1,9 @@\n // Contributed by Dodji Seketeli <dodji@redhat.com>\n // Origin PR debug/30161\n-// { dg-options \"-g -dA\" }\n+// { dg-options \"-g -dA -gno-strict-dwarf -fno-merge-debug-strings\" }\n // { dg-final { scan-assembler \"DW_TAG_template_value_param\" } }\n // { dg-final { scan-assembler \"f.*DW_AT_name\" } }\n-// { dg-final { scan-assembler \"_Z4blehv.*DW_AT_const_value\" } }\n+// { dg-final { scan-assembler \"DW_AT_location\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*DW_OP_addr\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*_Z4blehv\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*DW_OP_stack_value\" } } */\n \n typedef void (*func_ptr) ();\n "}, {"sha": "bc5c7d611de68ba02fa7dfc2b143781a0ddc42aa", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/const-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6a323453a9261b5ffea44bf37af20369203ef8/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fconst-1.c?ref=1d6a323453a9261b5ffea44bf37af20369203ef8", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -gdwarf-2 -dA\" } */\n+/* { dg-options \"-O -gdwarf-2 -dA -gno-strict-dwarf -fno-merge-debug-strings\" } */\n /* { dg-require-visibility \"\" } */\n-/* { dg-final { scan-assembler \"DW_AT_const_value\" } } */\n+/* { dg-final { scan-assembler \"DW_AT_location\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*DW_OP_addr\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*fnx\\[^\\\\r\\\\n\\]*\\[\\\\r\\\\n\\]*\\[^\\\\r\\\\n\\]*DW_OP_stack_value\" } } */\n \n-extern void x() __attribute__((visibility(\"hidden\")));\n-static void (*f)() = x;\n+extern void fnx() __attribute__((visibility(\"hidden\")));\n+static void (*f)() = fnx;"}]}