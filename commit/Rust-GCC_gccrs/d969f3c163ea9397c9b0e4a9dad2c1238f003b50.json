{"sha": "d969f3c163ea9397c9b0e4a9dad2c1238f003b50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk2OWYzYzE2M2VhOTM5N2M5YjBlNGE5ZGFkMmMxMjM4ZjAwM2I1MA==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2014-06-06T07:21:02Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2014-06-06T07:21:02Z"}, "message": "re PR tree-optimization/43934 (LIM should handle PHI nodes)\n\nPR tree-optimization/43934\n* tree-ssa-loop-im.c (determine_max_movement): Add PHI def constant cost.\n\nFrom-SVN: r211302", "tree": {"sha": "e8aeff7f4e0f8ff2ca895abc3ea5f4e11f53171a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8aeff7f4e0f8ff2ca895abc3ea5f4e11f53171a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d969f3c163ea9397c9b0e4a9dad2c1238f003b50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d969f3c163ea9397c9b0e4a9dad2c1238f003b50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d969f3c163ea9397c9b0e4a9dad2c1238f003b50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/comments", "author": null, "committer": null, "parents": [{"sha": "4a450ea0d103b9d10a5dd293af5c984ca07f094d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a450ea0d103b9d10a5dd293af5c984ca07f094d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a450ea0d103b9d10a5dd293af5c984ca07f094d"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "e807a610d78eea74bc593bb281c8227eaeaedc14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d969f3c163ea9397c9b0e4a9dad2c1238f003b50", "patch": "@@ -1,3 +1,8 @@\n+2014-06-06  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR tree-optimization/43934\n+\t* tree-ssa-loop-im.c (determine_max_movement): Add PHI def constant cost.\n+\n 2014-06-06  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* ira-lives.c (single_reg_class): Add missing break.  Explicitly"}, {"sha": "98a2a053249a1893a372aab2b9744ff56a1575e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d969f3c163ea9397c9b0e4a9dad2c1238f003b50", "patch": "@@ -1,3 +1,8 @@\n+2014-06-06  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR tree-optimization/43934\n+\t* gcc.dg/tree-ssa/ssa-lim-8.c: New testcase.\n+\n 2014-06-05  S. Gilles  <sgilles@terpmail.umd.edu>\n \n \tPR c/53119"}, {"sha": "551b68ff2deb983bfabf23bb4e9598a45f27e033", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-8.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-8.c?ref=d969f3c163ea9397c9b0e4a9dad2c1238f003b50", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-lim1-details\" } */\n+\n+void bar (int);\n+void foo (int n, int m)\n+{\n+  unsigned i;\n+  for (i = 0; i < n; ++i)\n+    {\n+      int x;\n+      if (m < 0)\n+\tx = 1;\n+      else\n+\tx = m;\n+      bar (x);\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Moving PHI node\" 1 \"lim1\"  } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "e957f92114151d11fb01b94b20db970066b4f677", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d969f3c163ea9397c9b0e4a9dad2c1238f003b50/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=d969f3c163ea9397c9b0e4a9dad2c1238f003b50", "patch": "@@ -719,8 +719,14 @@ determine_max_movement (gimple stmt, bool must_preserve_exec)\n       FOR_EACH_PHI_ARG (use_p, stmt, iter, SSA_OP_USE)\n \t{\n \t  val = USE_FROM_PTR (use_p);\n+\n \t  if (TREE_CODE (val) != SSA_NAME)\n-\t    continue;\n+\t    {\n+\t      /* Assign const 1 to constants.  */\n+\t      min_cost = MIN (min_cost, 1);\n+\t      total_cost += 1;\n+\t      continue;\n+\t    }\n \t  if (!add_dependency (val, lim_data, loop, false))\n \t    return false;\n \t  def_data = get_lim_data (SSA_NAME_DEF_STMT (val));"}]}