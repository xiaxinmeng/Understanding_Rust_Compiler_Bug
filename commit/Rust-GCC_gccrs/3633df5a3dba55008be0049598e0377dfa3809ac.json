{"sha": "3633df5a3dba55008be0049598e0377dfa3809ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYzM2RmNWEzZGJhNTUwMDhiZTAwNDk1OThlMDM3N2RmYTM4MDlhYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-04-06T21:20:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-04-06T21:20:49Z"}, "message": "re PR middle-end/35400 (-Wtype-limits -O2 causes ICE tree check: expected ssa_name, have addr_expr in get_value_range, at tree-vrp.c:469)\n\n2008-04-06  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/35400\n\t* tree-vrp.c (vrp_evaluate_conditional): Only query value-range\n\tinformation from SSA_NAMEs.\n\n\t* gcc.dg/torture/pr35400.c: New testcase.\n\t* g++.dg/torture/pr35400.C: Likewise.\n\nFrom-SVN: r133967", "tree": {"sha": "e96c1e164c8e0a70789c96a57a9bd3fd508a3528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96c1e164c8e0a70789c96a57a9bd3fd508a3528"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3633df5a3dba55008be0049598e0377dfa3809ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3633df5a3dba55008be0049598e0377dfa3809ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3633df5a3dba55008be0049598e0377dfa3809ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3633df5a3dba55008be0049598e0377dfa3809ac/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dc77808914b3924b156c1960636d7c320cdd4c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc77808914b3924b156c1960636d7c320cdd4c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc77808914b3924b156c1960636d7c320cdd4c5"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "921982ecbb4414677852e5899e7cc4b1f91b7acd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3633df5a3dba55008be0049598e0377dfa3809ac", "patch": "@@ -1,3 +1,9 @@\n+2008-04-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35400\n+\t* tree-vrp.c (vrp_evaluate_conditional): Only query value-range\n+\tinformation from SSA_NAMEs.\n+\n 2008-04-06  Anatoly Sokolov <aesok@post.ru>\n \n \t* config/avr/avr.h (avr_mega_p): Remove declaration."}, {"sha": "beac0eb46d6973a3173809870474837e6f2854cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3633df5a3dba55008be0049598e0377dfa3809ac", "patch": "@@ -1,3 +1,9 @@\n+2008-04-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/35400\n+\t* gcc.dg/torture/pr35400.c: New testcase.\n+\t* g++.dg/torture/pr35400.C: Likewise.\n+\n 2008-04-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/35780"}, {"sha": "021135df81372ab17a7ab7c01444be131c3d8333", "filename": "gcc/testsuite/g++.dg/torture/pr35400.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr35400.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr35400.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr35400.C?ref=3633df5a3dba55008be0049598e0377dfa3809ac", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wtype-limits\" } */\n+\n+struct A\n+{\n+  A();\n+  ~A();\n+};\n+\n+void foo()\n+{\n+  A x[1];\n+}"}, {"sha": "285dc72e3a3bb19b3a5a29c4240307ea7cc2ad50", "filename": "gcc/testsuite/gcc.dg/torture/pr35400.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35400.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35400.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr35400.c?ref=3633df5a3dba55008be0049598e0377dfa3809ac", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wtype-limits\" } */\n+\n+struct A\n+{\n+  struct A *p;\n+};\n+\n+int foo(const struct A *q)\n+{\n+  return q->p == q;\n+}\n+\n+void bar(int);\n+\n+void baz()\n+{\n+  struct A a;\n+\n+  while (foo(&a))\n+    bar(foo(&a));\n+}"}, {"sha": "273b5fdfdc07c3b3794c8110e2daa74690d8ae05", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3633df5a3dba55008be0049598e0377dfa3809ac/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=3633df5a3dba55008be0049598e0377dfa3809ac", "patch": "@@ -5385,7 +5385,8 @@ vrp_evaluate_conditional (tree cond, tree stmt)\n \n   if (warn_type_limits\n       && ret\n-      && TREE_CODE_CLASS (TREE_CODE (cond)) == tcc_comparison)\n+      && TREE_CODE_CLASS (TREE_CODE (cond)) == tcc_comparison\n+      && TREE_CODE (TREE_OPERAND (cond, 0)) == SSA_NAME)\n     {\n       /* If the comparison is being folded and the operand on the LHS\n \t is being compared against a constant value that is outside of"}]}