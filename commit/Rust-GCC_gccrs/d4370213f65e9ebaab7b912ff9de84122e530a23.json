{"sha": "d4370213f65e9ebaab7b912ff9de84122e530a23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQzNzAyMTNmNjVlOWViYWFiN2I5MTJmZjlkZTg0MTIyZTUzMGEyMw==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-04-05T12:00:08Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-04-05T12:00:08Z"}, "message": "parse.y (struct parser_ctxt *ctxp): Now global.\n\nMon Apr  5 11:24:19 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.y (struct parser_ctxt *ctxp): Now global.\n\t(declare_local_variables): Use WFL compound value for the\n \tdeclaration source line value, when doing cross-referencing.\n\nFrom-SVN: r26201", "tree": {"sha": "d784f537cd199cf415f196248e87a5ab5e0b9413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d784f537cd199cf415f196248e87a5ab5e0b9413"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4370213f65e9ebaab7b912ff9de84122e530a23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4370213f65e9ebaab7b912ff9de84122e530a23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4370213f65e9ebaab7b912ff9de84122e530a23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4370213f65e9ebaab7b912ff9de84122e530a23/comments", "author": null, "committer": null, "parents": [{"sha": "7325ab47d114da4caec9bc12c56ff0df76ff9eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7325ab47d114da4caec9bc12c56ff0df76ff9eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7325ab47d114da4caec9bc12c56ff0df76ff9eb8"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "737a03b292f9a83a614d21bac76b0e94b5582f2b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4370213f65e9ebaab7b912ff9de84122e530a23/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4370213f65e9ebaab7b912ff9de84122e530a23/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d4370213f65e9ebaab7b912ff9de84122e530a23", "patch": "@@ -1,3 +1,9 @@\n+Mon Apr  5 11:24:19 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (struct parser_ctxt *ctxp): Now global.\n+\t(declare_local_variables): Use WFL compound value for the\n+ \tdeclaration source line value, when doing cross-referencing.\n+\n 1999-03-31  Tom Tromey  <tromey@cygnus.com>\n \n \t* gjavah.c (print_field_info): Allow constants of other types."}, {"sha": "5a9e85670b3c206612f6c33f2ee82f8f3787eb23", "filename": "gcc/java/parse.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4370213f65e9ebaab7b912ff9de84122e530a23/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4370213f65e9ebaab7b912ff9de84122e530a23/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=d4370213f65e9ebaab7b912ff9de84122e530a23", "patch": "@@ -324,9 +324,9 @@ int java_error_count;\n int java_warning_count;\n \n /* The current parser context */\n-static struct parser_ctxt *ctxp;\n+struct parser_ctxt *ctxp;\n \n-/* List of things that were anlyzed for which code will be generated */\n+/* List of things that were analyzed for which code will be generated */\n static struct parser_ctxt *ctxp_for_generation = NULL;\n \n /* binop_lookup maps token to tree_code. It is used where binary\n@@ -7921,6 +7921,11 @@ declare_local_variables (modifier, type, vlist)\n       decl = build_decl (VAR_DECL, name, real_type);\n       BLOCK_CHAIN_DECL (decl);\n       \n+      /* If doing xreferencing, replace the line number with the WFL\n+         compound value */\n+      if (flag_emit_xref)\n+\tDECL_SOURCE_LINE (decl) = EXPR_WFL_LINECOL (wfl);\n+      \n       /* Don't try to use an INIT statement when an error was found */\n       if (init && java_error_count)\n \tinit = NULL_TREE;"}, {"sha": "2afbddee3ad60b648d061355017a7d798fc2a9fe", "filename": "gcc/java/parse.y", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4370213f65e9ebaab7b912ff9de84122e530a23/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4370213f65e9ebaab7b912ff9de84122e530a23/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=d4370213f65e9ebaab7b912ff9de84122e530a23", "patch": "@@ -248,9 +248,9 @@ int java_error_count;\n int java_warning_count;\n \n /* The current parser context */\n-static struct parser_ctxt *ctxp;\n+struct parser_ctxt *ctxp;\n \n-/* List of things that were anlyzed for which code will be generated */\n+/* List of things that were analyzed for which code will be generated */\n static struct parser_ctxt *ctxp_for_generation = NULL;\n \n /* binop_lookup maps token to tree_code. It is used where binary\n@@ -5320,6 +5320,11 @@ declare_local_variables (modifier, type, vlist)\n       decl = build_decl (VAR_DECL, name, real_type);\n       BLOCK_CHAIN_DECL (decl);\n       \n+      /* If doing xreferencing, replace the line number with the WFL\n+         compound value */\n+      if (flag_emit_xref)\n+\tDECL_SOURCE_LINE (decl) = EXPR_WFL_LINECOL (wfl);\n+      \n       /* Don't try to use an INIT statement when an error was found */\n       if (init && java_error_count)\n \tinit = NULL_TREE;"}]}