{"sha": "2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0ZDE0YWMzOWU1YjM1ZGE2YmFmY2RmNzE2Y2ExZDBhZGIwNjFkZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-08T15:07:23Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-08T15:07:23Z"}, "message": "tree-dfa.c (referenced_vars, [...]): Use VEC instead of VARRAY.\n\n\t* tree-dfa.c (referenced_vars, add_referenced_var): Use VEC\n\tinstead of VARRAY.\n\t* tree-flow.h (num_referenced_var, referenced_var): Likewise.\n\t* tree-into-ssa.c (mark_def_site_blocks): Likewise.\n\t* tree-ssa.c (init_tree_ssa, delete_tree_ssa): Likewise.\n\t* tree-tailcall.c (suitable_for_tail_opt_p): Likewise.\n\nFrom-SVN: r99393", "tree": {"sha": "c2beba32b4a6c9a75f36f059d8cc836dc81b2cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2beba32b4a6c9a75f36f059d8cc836dc81b2cee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/comments", "author": null, "committer": null, "parents": [{"sha": "e956d1824234ec0a9b5cad6c9fa57d3edcbf5ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e956d1824234ec0a9b5cad6c9fa57d3edcbf5ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e956d1824234ec0a9b5cad6c9fa57d3edcbf5ce9"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "06575e79820afdf91fbd654a2ab9449ca8e4fa84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "patch": "@@ -1,3 +1,12 @@\n+2005-05-08  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-dfa.c (referenced_vars, add_referenced_var): Use VEC\n+\tinstead of VARRAY.\n+\t* tree-flow.h (num_referenced_var, referenced_var): Likewise.\n+\t* tree-into-ssa.c (mark_def_site_blocks): Likewise.\n+\t* tree-ssa.c (init_tree_ssa, delete_tree_ssa): Likewise.\n+\t* tree-tailcall.c (suitable_for_tail_opt_p): Likewise.\n+\n 2005-05-08  Stephane Carrez  <stcarrez@nerim.fr>\n \n \tPR target/16925"}, {"sha": "6876a65ba82bbcbfa68e5219eb919d7918d5ff17", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "patch": "@@ -84,7 +84,7 @@ static void add_referenced_var (tree, struct walk_state *);\n /* Global declarations.  */\n \n /* Array of all variables referenced in the function.  */\n-varray_type referenced_vars;\n+VEC(tree,gc) *referenced_vars;\n \n \n /*---------------------------------------------------------------------------\n@@ -558,7 +558,7 @@ add_referenced_var (tree var, struct walk_state *walk_state)\n       if (slot)\n \t*slot = (void *) var;\n       v_ann->uid = num_referenced_vars;\n-      VARRAY_PUSH_TREE (referenced_vars, var);\n+      VEC_safe_push (tree, gc, referenced_vars, var);\n \n       /* Global variables are always call-clobbered.  */\n       if (is_global_var (var))"}, {"sha": "f3e3334e34287a9bf9e49260198633f424d8bf24", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "patch": "@@ -406,10 +406,10 @@ static inline void set_phi_nodes (basic_block, tree);\n \t\t\t      Global declarations\n ---------------------------------------------------------------------------*/\n /* Array of all variables referenced in the function.  */\n-extern GTY(()) varray_type referenced_vars;\n+extern GTY(()) VEC(tree,gc) *referenced_vars;\n \n-#define num_referenced_vars VARRAY_ACTIVE_SIZE (referenced_vars)\n-#define referenced_var(i) VARRAY_TREE (referenced_vars, i)\n+#define num_referenced_vars VEC_length (tree, referenced_vars)\n+#define referenced_var(i) VEC_index (tree, referenced_vars, i)\n \n /* Array of all SSA_NAMEs used in the function.  */\n extern GTY(()) VEC(tree,gc) *ssa_names;"}, {"sha": "2e4c7f35d3d84db906bdc74191067c8ea04ba9bb", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "patch": "@@ -1668,7 +1668,7 @@ mark_def_site_blocks (sbitmap interesting_blocks)\n   struct mark_def_sites_global_data mark_def_sites_global_data;\n \n   /* Allocate memory for the DEF_BLOCKS hash table.  */\n-  def_blocks = htab_create (VARRAY_ACTIVE_SIZE (referenced_vars),\n+  def_blocks = htab_create (VEC_length (tree, referenced_vars),\n \t\t\t    def_blocks_hash, def_blocks_eq, def_blocks_free);\n \n   for (i = 0; i < num_referenced_vars; i++)"}, {"sha": "e4a5ba1d8a34dd11fcc8cc457388b13b2a0561b8", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "patch": "@@ -786,7 +786,7 @@ verify_ssa (bool check_modified_stmt)\n void\n init_tree_ssa (void)\n {\n-  VARRAY_TREE_INIT (referenced_vars, 20, \"referenced_vars\");\n+  referenced_vars = VEC_alloc (tree, gc, 20);\n   call_clobbered_vars = BITMAP_ALLOC (NULL);\n   addressable_vars = BITMAP_ALLOC (NULL);\n   init_ssanames ();\n@@ -827,16 +827,13 @@ delete_tree_ssa (void)\n       }\n \n   /* Remove annotations from every referenced variable.  */\n-  if (referenced_vars)\n+  for (i = 0; i < num_referenced_vars; i++)\n     {\n-      for (i = 0; i < num_referenced_vars; i++)\n-\t{\n-\t  tree var = referenced_var (i);\n-\t  ggc_free (var->common.ann);\n-\t  var->common.ann = NULL;\n-\t}\n-      referenced_vars = NULL;\n+      tree var = referenced_var (i);\n+      ggc_free (var->common.ann);\n+      var->common.ann = NULL;\n     }\n+  VEC_free (tree, gc, referenced_vars);\n \n   fini_ssanames ();\n   fini_phinodes ();"}, {"sha": "fd8aecc8ce0785ca28dd7a8f11e412751a7cf7e2", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4d14ac39e5b35da6bafcdf716ca1d0adb061df/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=2d4d14ac39e5b35da6bafcdf716ca1d0adb061df", "patch": "@@ -139,9 +139,9 @@ suitable_for_tail_opt_p (void)\n \n   /* No local variable nor structure field should be call-clobbered.  We\n      ignore any kind of memory tag, as these are not real variables.  */\n-  for (i = 0; i < (int) VARRAY_ACTIVE_SIZE (referenced_vars); i++)\n+  for (i = 0; i < (int) num_referenced_vars; i++)\n     {\n-      tree var = VARRAY_TREE (referenced_vars, i);\n+      tree var = VEC_index (tree, referenced_vars, i);\n \n       if (!(TREE_STATIC (var) || DECL_EXTERNAL (var))\n \t  && (var_ann (var)->mem_tag_kind == NOT_A_TAG"}]}