{"sha": "bb0f5ca786de6649e1350b281d289ed4ad871b9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwZjVjYTc4NmRlNjY0OWUxMzUwYjI4MWQyODllZDRhZDg3MWI5ZQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2016-01-08T18:02:35Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2016-01-08T18:02:35Z"}, "message": "[PATCH] Fix PR68707\n\ngcc/:\n\t* tree-vect-slp.c (vect_analyze_slp_instance): Cancel permuted SLP\n\tinstances that can be handled via vect_load_lanes.\n\ngcc/testsuite/:\n\n\t* lib/target-supports.exp (check_effective_target_vect_load_lanes): New.\n\t* gcc.dg/vect/slp-perm-1.c: Look for vect_load_lanes instead of SLP\n\ton platforms supporting it.\n\t* gcc.dg/vect/slp-perm-2.c: Likewise.\n\t* gcc.dg/vect/slp-perm-3.c: Likewise.\n\t* gcc.dg/vect/slp-perm-5.c: Likewise.\n\t* gcc.dg/vect/slp-perm-7.c: Likewise.\n\t* gcc.dg/vect/slp-perm-8.c: Likewise.\n\t* gcc.dg/vect/slp-perm-6.c: Look for vect_load_lanes in addition to SLP\n\ton platforms supporting it.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r232174", "tree": {"sha": "aae52e353a02f79b8e006b12971ea81911cbb103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aae52e353a02f79b8e006b12971ea81911cbb103"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb0f5ca786de6649e1350b281d289ed4ad871b9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb0f5ca786de6649e1350b281d289ed4ad871b9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb0f5ca786de6649e1350b281d289ed4ad871b9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb0f5ca786de6649e1350b281d289ed4ad871b9e/comments", "author": null, "committer": null, "parents": [{"sha": "5c07bed61da66d09c304a1e21023a8ee9a637c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c07bed61da66d09c304a1e21023a8ee9a637c4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c07bed61da66d09c304a1e21023a8ee9a637c4b"}], "stats": {"total": 119, "additions": 105, "deletions": 14}, "files": [{"sha": "2cb0b0196bcf611f74b5b0c60f74581d2a73feaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -1,3 +1,10 @@\n+2016-01-08  Alan Lawrence  <alan.lawrence@arm.com>\n+\tRichard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68707\n+\t* tree-vect-slp.c (vect_analyze_slp_instance): Cancel permuted SLP\n+\tinstances that can be handled via vect_load_lanes.\n+\n 2016-01-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* symtab.c (symtab_node::equal_address_to): Return -1 instead of 2"}, {"sha": "235eab744931c047cbe5c4bc2e5521ed20b13dbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -1,3 +1,17 @@\n+2016-01-08  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\tPR tree-optimization/68707\n+\t* lib/target-supports.exp (check_effective_target_vect_load_lanes): New.\n+\t* gcc.dg/vect/slp-perm-1.c: Look for vect_load_lanes instead of SLP\n+\ton platforms supporting it.\n+\t* gcc.dg/vect/slp-perm-2.c: Likewise.\n+\t* gcc.dg/vect/slp-perm-3.c: Likewise.\n+\t* gcc.dg/vect/slp-perm-5.c: Likewise.\n+\t* gcc.dg/vect/slp-perm-7.c: Likewise.\n+\t* gcc.dg/vect/slp-perm-8.c: Likewise.\n+\t* gcc.dg/vect/slp-perm-6.c: Look for vect_load_lanes in addition to SLP\n+\ton platforms supporting it.\n+\n 2016-01-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/69162"}, {"sha": "6d0d66f9c2100239cc2427d6b8d01e225a787311", "filename": "gcc/testsuite/gcc.dg/vect/slp-perm-1.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-1.c?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -58,5 +58,9 @@ int main (int argc, const char* argv[])\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_perm } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_perm } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target { vect_perm && {! vect_load_lanes } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"note: Built SLP cancelled: can use load/store-lanes\" { target { vect_perm && vect_load_lanes } } } } */\n+/* { dg-final { scan-tree-dump \"LOAD_LANES\" \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"STORE_LANES\" \"vect\" { target vect_load_lanes } } } */\n "}, {"sha": "34b413d0dd65161b246a61d1b5ce7dce8cfbe927", "filename": "gcc/testsuite/gcc.dg/vect/slp-perm-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-2.c?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -54,5 +54,8 @@ int main (int argc, const char* argv[])\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_perm } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_perm } } } */\n-\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target { vect_perm && {! vect_load_lanes } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"note: Built SLP cancelled: can use load/store-lanes\" { target { vect_perm && vect_load_lanes } } } } */\n+/* { dg-final { scan-tree-dump \"LOAD_LANES\" \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"STORE_LANES\" \"vect\" { target vect_load_lanes } } } */"}, {"sha": "ec13e0f54f50684eb791cf92077aafc6b79ae063", "filename": "gcc/testsuite/gcc.dg/vect/slp-perm-3.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-3.c?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -67,6 +67,9 @@ int main (int argc, const char* argv[])\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_perm } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_perm } } } */\n-\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target { vect_perm && {! vect_load_lanes } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"note: Built SLP cancelled: can use load/store-lanes\" { target { vect_perm && vect_load_lanes } } } } */\n+/* { dg-final { scan-tree-dump \"LOAD_LANES\" \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"STORE_LANES\" \"vect\" { target vect_load_lanes } } } */\n "}, {"sha": "f44f44ffd9fcdede6d9c1b129bd419a0dd5d57e6", "filename": "gcc/testsuite/gcc.dg/vect/slp-perm-5.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-5.c?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -73,6 +73,9 @@ int main (int argc, const char* argv[])\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_perm } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"vect\" { target vect_perm } } } */\n-\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"vect\" { target { vect_perm && {! vect_load_lanes } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"note: Built SLP cancelled: can use load/store-lanes\" { target { vect_perm && vect_load_lanes } } } } */\n+/* { dg-final { scan-tree-dump \"LOAD_LANES\" \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"STORE_LANES\" \"vect\" { target vect_load_lanes } } } */\n "}, {"sha": "551734ac4c0cdbbede7738796d9f616c529a75ae", "filename": "gcc/testsuite/gcc.dg/vect/slp-perm-6.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-6.c?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -72,5 +72,8 @@ int main (int argc, const char* argv[])\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_perm } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"vect\" { target vect_perm } } } */\n-\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"vect\" { target { vect_perm && {! vect_load_lanes } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"note: Built SLP cancelled: can use load/store-lanes\" { target { vect_perm && vect_load_lanes } } } } */\n+/* { dg-final { scan-tree-dump \"LOAD_LANES\" \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"STORE_LANES\" \"vect\" { target vect_load_lanes } } } */"}, {"sha": "8b66142a9ef386490f32ca54cefab317733c4f1a", "filename": "gcc/testsuite/gcc.dg/vect/slp-perm-7.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-7.c?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -71,6 +71,8 @@ int main (int argc, const char* argv[])\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\"  { target vect_perm } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_perm } } } */\n-\n-\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target { vect_perm && {! vect_load_lanes } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"note: Built SLP cancelled: can use load/store-lanes\" { target { vect_perm && vect_load_lanes } } } } */\n+/* { dg-final { scan-tree-dump \"LOAD_LANES\" \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"STORE_LANES\" \"vect\" { target vect_load_lanes } } } */"}, {"sha": "b1e9a10e35ec3a18179fcc50b67a4c91dd741054", "filename": "gcc/testsuite/gcc.dg/vect/slp-perm-8.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-perm-8.c?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -54,5 +54,8 @@ int main (int argc, const char* argv[])\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { target { vect_perm_byte && vect_char_mult } } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_perm_byte && {! vect_char_mult } } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_perm_byte } } } */\n-\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target { vect_perm_byte && {! vect_load_lanes } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"note: Built SLP cancelled: can use load/store-lanes\" { target { vect_perm_byte && vect_load_lanes } } } } */\n+/* { dg-final { scan-tree-dump \"LOAD_LANES\" \"vect\" { target vect_load_lanes } } } */\n+/* { dg-final { scan-tree-dump \"STORE_LANES\" \"vect\" { target vect_load_lanes } } } */"}, {"sha": "31a4f60e4eddae39daf60fe3a061e8a65b4138dc", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -4876,6 +4876,25 @@ proc check_effective_target_vect_element_align { } {\n     return $et_vect_element_align\n }\n \n+# Return 1 if the target supports vector LOAD_LANES operations, 0 otherwise.\n+\n+proc check_effective_target_vect_load_lanes { } {\n+    global et_vect_load_lanes\n+\n+    if [info exists et_vect_load_lanes] {\n+\tverbose \"check_effective_target_vect_load_lanes: using cached result\" 2\n+    } else {\n+\tset et_vect_load_lanes 0\n+\tif { ([istarget arm*-*-*] && [check_effective_target_arm_neon_ok])\n+\t     || [istarget aarch64*-*-*] } {\n+\t    set et_vect_load_lanes 1\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_vect_load_lanes: returning $et_vect_load_lanes\" 2\n+    return $et_vect_load_lanes\n+}\n+\n # Return 1 if the target supports vector conditional operations, 0 otherwise.\n \n proc check_effective_target_vect_condition { } {"}, {"sha": "0aac2e2f6cfd2d1bd8fb26c6e6e7359a3428f266", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb0f5ca786de6649e1350b281d289ed4ad871b9e/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=bb0f5ca786de6649e1350b281d289ed4ad871b9e", "patch": "@@ -1820,6 +1820,36 @@ vect_analyze_slp_instance (vec_info *vinfo,\n             }\n         }\n \n+      /* If the loads and stores can be handled with load/store-lane\n+\t instructions do not generate this SLP instance.  */\n+      if (is_a <loop_vec_info> (vinfo)\n+\t  && loads_permuted\n+\t  && dr && vect_store_lanes_supported (vectype, group_size))\n+\t{\n+\t  slp_tree load_node;\n+\t  FOR_EACH_VEC_ELT (loads, i, load_node)\n+\t    {\n+\t      gimple *first_stmt = GROUP_FIRST_ELEMENT\n+\t\t  (vinfo_for_stmt (SLP_TREE_SCALAR_STMTS (load_node)[0]));\n+\t      stmt_vec_info stmt_vinfo = vinfo_for_stmt (first_stmt);\n+\t      /* Use SLP for strided accesses (or if we can't load-lanes).  */\n+\t      if (STMT_VINFO_STRIDED_P (stmt_vinfo)\n+\t\t  || ! vect_load_lanes_supported\n+\t\t\t(STMT_VINFO_VECTYPE (stmt_vinfo),\n+\t\t\t GROUP_SIZE (stmt_vinfo)))\n+\t\tbreak;\n+\t    }\n+\t  if (i == loads.length ())\n+\t    {\n+\t      if (dump_enabled_p ())\n+\t\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t\t \"Built SLP cancelled: can use \"\n+\t\t\t\t \"load/store-lanes\\n\");\n+\t      vect_free_slp_instance (new_instance);\n+\t      return false;\n+\t    }\n+\t}\n+\n       vinfo->slp_instances.safe_push (new_instance);\n \n       if (dump_enabled_p ())"}]}