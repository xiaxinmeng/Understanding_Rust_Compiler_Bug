{"sha": "edfe833a31a4e34875f30ec5eb8c56da556384d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmZTgzM2EzMWE0ZTM0ODc1ZjMwZWM1ZWI4YzU2ZGE1NTYzODRkOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-16T23:11:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-16T23:11:10Z"}, "message": "Fix failing filesystem tests on mingw targets\n\n\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.26): Add exports for fstream\n\tconstructors and open members taking wide strings. Fix patterns for\n\tfilesystem::path members to match wstring_view parameters. Add\n\texports for shared_ptr members used by directory iterators.\n\t* src/c++17/fs_ops.cc (remove(const path&, error_code&)): Clear the\n\terror code parameter if the file doesn't exist.\n\t* src/filesystem/ops.cc (remove(const path&, error_code&)):\n\tLikewise.\n\t* testsuite/27_io/filesystem/operations/canonical.cc: Fix expected\n\tvalues for mingw targets, where \"/\" is not an absolute path. Do not\n\ttest symlinks on mingw targets.\n\t* testsuite/experimental/filesystem/operations/canonical.cc: Likewise.\n\t* testsuite/27_io/filesystem/operations/copy.cc: Do not test symlinks\n\ton mingw targets.\n\t* testsuite/experimental/filesystem/operations/copy.cc: Likewise.\n\t* testsuite/27_io/filesystem/operations/create_directories.cc: Check\n\tthat each component of the path is created.\n\t* testsuite/experimental/filesystem/operations/create_directories.cc:\n\tLikewise.\n\t* testsuite/27_io/filesystem/operations/exists.cc: Do not test\n\tpermissions on mingw targets.\n\t* testsuite/experimental/filesystem/operations/exists.cc: Likewise.\n\t* testsuite/27_io/filesystem/operations/is_empty.cc: Likewise.\n\t* testsuite/experimental/filesystem/operations/is_empty.cc: Likewise.\n\t* testsuite/27_io/filesystem/operations/permissions.cc: XFAIL for\n\tmingw targets.\n\t* testsuite/experimental/filesystem/operations/permissions.cc:\n\tLikewise.\n\t* testsuite/27_io/filesystem/operations/remove.cc: Do not test\n\tsymlinks or permissions on mingw targets.\n\t* testsuite/experimental/filesystem/operations/remove.cc: Likewise.\n\t* testsuite/27_io/filesystem/operations/remove_all.cc: Do not test\n\tsymlinks on mingw targets.\n\t* testsuite/experimental/filesystem/operations/remove_all.cc:\n\tLikewise.\n\t* testsuite/27_io/filesystem/operations/status.cc: Do not test\n\tpermissions on mingw targets.\n\t* testsuite/27_io/filesystem/operations/weakly_canonical.cc: Do not\n\ttest symlinks on mingw targets.\n\t* testsuite/experimental/filesystem/operations/space.cc: Fix test\n\tfor mingw targets.\n\nFrom-SVN: r267991", "tree": {"sha": "b75c9381a29979c48f823d36c572f16eb55e3871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75c9381a29979c48f823d36c572f16eb55e3871"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edfe833a31a4e34875f30ec5eb8c56da556384d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfe833a31a4e34875f30ec5eb8c56da556384d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edfe833a31a4e34875f30ec5eb8c56da556384d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfe833a31a4e34875f30ec5eb8c56da556384d8/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6804ea9293fc10c85568c475ecdb402106fce8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6804ea9293fc10c85568c475ecdb402106fce8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6804ea9293fc10c85568c475ecdb402106fce8c"}], "stats": {"total": 233, "additions": 202, "deletions": 31}, "files": [{"sha": "2ed0254425624483d20de9095c4107e400a4142d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -1,3 +1,47 @@\n+2019-01-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.26): Add exports for fstream\n+\tconstructors and open members taking wide strings. Fix patterns for\n+\tfilesystem::path members to match wstring_view parameters. Add\n+\texports for shared_ptr members used by directory iterators.\n+\t* src/c++17/fs_ops.cc (remove(const path&, error_code&)): Clear the\n+\terror code parameter if the file doesn't exist.\n+\t* src/filesystem/ops.cc (remove(const path&, error_code&)):\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/canonical.cc: Fix expected\n+\tvalues for mingw targets, where \"/\" is not an absolute path. Do not\n+\ttest symlinks on mingw targets.\n+\t* testsuite/experimental/filesystem/operations/canonical.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/copy.cc: Do not test symlinks\n+\ton mingw targets.\n+\t* testsuite/experimental/filesystem/operations/copy.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/create_directories.cc: Check\n+\tthat each component of the path is created.\n+\t* testsuite/experimental/filesystem/operations/create_directories.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/exists.cc: Do not test\n+\tpermissions on mingw targets.\n+\t* testsuite/experimental/filesystem/operations/exists.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/is_empty.cc: Likewise.\n+\t* testsuite/experimental/filesystem/operations/is_empty.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/permissions.cc: XFAIL for\n+\tmingw targets.\n+\t* testsuite/experimental/filesystem/operations/permissions.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/remove.cc: Do not test\n+\tsymlinks or permissions on mingw targets.\n+\t* testsuite/experimental/filesystem/operations/remove.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/remove_all.cc: Do not test\n+\tsymlinks on mingw targets.\n+\t* testsuite/experimental/filesystem/operations/remove_all.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/status.cc: Do not test\n+\tpermissions on mingw targets.\n+\t* testsuite/27_io/filesystem/operations/weakly_canonical.cc: Do not\n+\ttest symlinks on mingw targets.\n+\t* testsuite/experimental/filesystem/operations/space.cc: Fix test\n+\tfor mingw targets.\n+\n 2019-02-14  Ulrich Drepper  <drepper@redhat.com>\n \n \tPR libstdc++/88738"}, {"sha": "3b254b2289f7c12089068859bb32401d6dc32a5f", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -2060,6 +2060,10 @@ GLIBCXX_3.4.26 {\n     _ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreExt;\n     # std::basic_filebuf::open(const wchar_t*, openmode)\n     _ZNSt13basic_filebufI[cw]St11char_traitsI[cw]EE4openEPKwSt13_Ios_Openmode;\n+    _ZNSt13basic_fstreamI[cw]St11char_traitsI[cw]EEC[12]EPKwSt13_Ios_Openmode;\n+    _ZNSt13basic_fstreamI[cw]St11char_traitsI[cw]EE4openEPKwSt13_Ios_Openmode;\n+    _ZNSt14basic_[io]fstreamI[cw]St11char_traitsI[cw]EEC[12]EPKwSt13_Ios_Openmode;\n+    _ZNSt14basic_[io]fstreamI[cw]St11char_traitsI[cw]EE4openEPKwSt13_Ios_Openmode;\n \n     _ZN11__gnu_debug25_Safe_local_iterator_base16_M_attach_singleEPNS_19_Safe_sequence_baseEb;\n \n@@ -2122,7 +2126,7 @@ GLIBCXX_3.4.26 {\n     _ZNKSt10filesystem4path5_List3endEv;\n     _ZNKSt10filesystem4path5_List5beginEv;\n     _ZNKSt10filesystem4path7compareERKS0_;\n-    _ZNKSt10filesystem4path7compareESt17basic_string_viewIcSt11char_traitsIcEE;\n+    _ZNKSt10filesystem4path7compareESt17basic_string_viewI[cw]St11char_traitsI[cw]EE;\n     _ZNKSt10filesystem4path9root_*Ev;\n     _ZNSt10filesystem10hash_valueERKNS_4pathE;\n     _ZNSt10filesystem16filesystem_errorC[12]E*;\n@@ -2132,8 +2136,8 @@ GLIBCXX_3.4.26 {\n     _ZNSt10filesystem4path1[567]re*;\n     _ZNSt10filesystem4path5_ListC1ERKS1_;\n     _ZNSt10filesystem4path5_ListC1Ev;\n-    _ZNSt10filesystem4path9_M_appendESt17basic_string_viewIcSt11char_traitsIcEE;\n-    _ZNSt10filesystem4path9_M_concatESt17basic_string_viewIcSt11char_traitsIcEE;\n+    _ZNSt10filesystem4path9_M_appendESt17basic_string_viewI[cw]St11char_traitsI[cw]EE;\n+    _ZNSt10filesystem4path9_M_concatESt17basic_string_viewI[cw]St11char_traitsI[cw]EE;\n     _ZNSt10filesystem4pathaSERKS0_;\n     _ZNSt10filesystem4pathdVERKS0_;\n     _ZNSt10filesystem4pathpLERKS0_;\n@@ -2148,7 +2152,7 @@ GLIBCXX_3.4.26 {\n     _ZNKSt10filesystem7__cxx114path5_List3endEv;\n     _ZNKSt10filesystem7__cxx114path5_List5beginEv;\n     _ZNKSt10filesystem7__cxx114path7compareERKS1_;\n-    _ZNKSt10filesystem7__cxx114path7compareESt17basic_string_viewIcSt11char_traitsIcEE;\n+    _ZNKSt10filesystem7__cxx114path7compareESt17basic_string_viewI[cw]St11char_traitsI[cw]EE;\n     _ZNKSt10filesystem7__cxx114path9root_*Ev;\n     _ZNSt10filesystem7__cxx1110hash_valueERKNS0_4pathE;\n     _ZNSt10filesystem7__cxx1116filesystem_errorC[12]E*;\n@@ -2158,8 +2162,8 @@ GLIBCXX_3.4.26 {\n     _ZNSt10filesystem7__cxx114path1[567]re*;\n     _ZNSt10filesystem7__cxx114path5_ListC1ERKS2_;\n     _ZNSt10filesystem7__cxx114path5_ListC1Ev;\n-    _ZNSt10filesystem7__cxx114path9_M_appendESt17basic_string_viewIcSt11char_traitsIcEE;\n-    _ZNSt10filesystem7__cxx114path9_M_concatESt17basic_string_viewIcSt11char_traitsIcEE;\n+    _ZNSt10filesystem7__cxx114path9_M_appendESt17basic_string_viewI[cw]St11char_traitsI[cw]EE;\n+    _ZNSt10filesystem7__cxx114path9_M_concatESt17basic_string_viewI[cw]St11char_traitsI[cw]EE;\n     _ZNSt10filesystem7__cxx114pathaSERKS1_;\n     _ZNSt10filesystem7__cxx114pathdVERKS1_;\n     _ZNSt10filesystem7__cxx114pathpLERKS1_;\n@@ -2221,6 +2225,12 @@ GLIBCXX_3.4.26 {\n     _ZNSt10filesystem7__cxx1128recursive_directory_iteratoraSEOS1_;\n     _ZNSt10filesystem7__cxx1128recursive_directory_iteratorppEv;\n \n+    _ZNSt12__shared_ptrINSt10filesystem7__cxx114_DirELN9__gnu_cxx12_Lock_policyE2EEC1Ev;\n+    _ZNSt12__shared_ptrINSt10filesystem7__cxx114_DirELN9__gnu_cxx12_Lock_policyE2EEC1EOS5_;\n+    _ZNSt12__shared_ptrINSt10filesystem7__cxx114_DirELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_;\n+    _ZNSt12__shared_ptrINSt10filesystem7__cxx1128recursive_directory_iterator10_Dir_stackELN9__gnu_cxx12_Lock_policyE2EEC1Ev;\n+    _ZNSt12__shared_ptrINSt10filesystem7__cxx1128recursive_directory_iterator10_Dir_stackELN9__gnu_cxx12_Lock_policyE2EEC1EOS6_;\n+\n     # basic_ostream::operator<<(nullptr_t)\n     _ZNSolsEDn;\n     _ZNSt13basic_ostreamIwSt11char_traitsIwEElsEDn;"}, {"sha": "7ece478b62a7f61fb3d668e5328e767d3136ee72", "filename": "libstdc++-v3/src/c++17/fs_ops.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -1175,7 +1175,8 @@ bool\n fs::remove(const path& p, error_code& ec) noexcept\n {\n #ifdef _GLIBCXX_FILESYSTEM_IS_WINDOWS\n-  if (exists(symlink_status(p, ec)))\n+  auto st = symlink_status(p, ec);\n+  if (exists(st))\n     {\n       if ((is_directory(p, ec) && RemoveDirectoryW(p.c_str()))\n \t  || DeleteFileW(p.c_str()))\n@@ -1186,6 +1187,8 @@ fs::remove(const path& p, error_code& ec) noexcept\n       else if (!ec)\n \tec.assign((int)GetLastError(), generic_category());\n     }\n+  else if (status_known(st))\n+    ec.clear();\n #else\n   if (::remove(p.c_str()) == 0)\n     {"}, {"sha": "36b5d2c24f645c86feca02e92d44c6bbde889d30", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -1045,7 +1045,8 @@ bool\n fs::remove(const path& p, error_code& ec) noexcept\n {\n #ifdef _GLIBCXX_FILESYSTEM_IS_WINDOWS\n-  if (exists(symlink_status(p, ec)))\n+  auto st = symlink_status(p, ec);\n+  if (exists(st))\n     {\n       if ((is_directory(p, ec) && RemoveDirectoryW(p.c_str()))\n \t  || DeleteFileW(p.c_str()))\n@@ -1056,6 +1057,8 @@ fs::remove(const path& p, error_code& ec) noexcept\n       else if (!ec)\n \tec.assign((int)GetLastError(), generic_category());\n     }\n+  else if (status_known(st))\n+    ec.clear();\n #else\n   if (::remove(p.c_str()) == 0)\n     {"}, {"sha": "75794cca26d9fa79300f64724765d655591d875c", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/canonical.cc", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcanonical.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcanonical.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcanonical.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -52,28 +52,30 @@ test01()\n   compare_paths( p2, p );\n   VERIFY( !ec );\n \n+  const auto root = fs::absolute(\"/\");\n+\n   ec = bad_ec;\n   p = \"/\";\n   p = canonical( p, ec );\n-  compare_paths( p, \"/\" );\n+  compare_paths( p, root );\n   VERIFY( !ec );\n \n   ec = bad_ec;\n   p = \"/.\";\n   p = canonical( p, ec );\n-  compare_paths( p, \"/\" );\n+  compare_paths( p, root );\n   VERIFY( !ec );\n \n   ec = bad_ec;\n   p = \"/..\";\n   p = canonical( p, ec );\n-  compare_paths( p, \"/\" );\n+  compare_paths( p, root );\n   VERIFY( !ec );\n \n   ec = bad_ec;\n   p = \"/../.././.\";\n   p = canonical( p, ec );\n-  compare_paths( p, \"/\" );\n+  compare_paths( p, root );\n   VERIFY( !ec );\n }\n \n@@ -101,7 +103,6 @@ test02()\n #endif\n }\n \n-\n void\n test03()\n {\n@@ -111,22 +112,28 @@ test03()\n   fs::path foo = dir/\"foo\", bar = dir/\"bar\";\n   fs::create_directory(foo);\n   fs::create_directory(bar);\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No symlink support\n+  const fs::path baz = dir/\"foo\\\\\\\\..\\\\bar///\";\n+#else\n   fs::create_symlink(\"../bar\", foo/\"baz\");\n+  const fs::path baz = dir/\"foo//./baz///\";\n+#endif\n \n   auto dirc = canonical(dir);\n   auto barc = canonical(bar);\n \n   auto p1 = fs::canonical(dir/\"foo//.///..//./\");\n   compare_paths( p1, dirc );\n-  auto p2 = fs::canonical(dir/\"foo//./baz///..//./\");\n+  auto p2 = fs::canonical(baz/\"..//./\");\n   compare_paths( p2, dirc );\n-  auto p3 = fs::canonical(dir/\"foo//./baz////./\");\n+  auto p3 = fs::canonical(baz/\"./\");\n   compare_paths( p3, barc );\n-  auto p4 = fs::canonical(dir/\"foo//./baz///..//./bar\");\n+  auto p4 = fs::canonical(baz/\"..//./bar\");\n   compare_paths( p4, barc );\n-  auto p5 = fs::canonical(dir/\"foo//./baz///..//./bar/\");\n+  auto p5 = fs::canonical(baz/\"..//./bar/\");\n   compare_paths( p5, p4 );\n-  auto p6 = fs::canonical(dir/\"foo//./baz///..//./bar/.\");\n+  auto p6 = fs::canonical(baz/\"..//./bar/.\");\n   compare_paths( p6, p4 );\n \n   remove_all(dir);"}, {"sha": "b19b0f4d6266f922e5cbd98d9e4f6c5fdf09bb6a", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/copy.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcopy.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -67,6 +67,11 @@ test01()\n void\n test02()\n {\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No symlink support\n+  return;\n+#endif\n+\n   const std::error_code bad_ec = make_error_code(std::errc::invalid_argument);\n   auto from = __gnu_test::nonexistent_path();\n   auto to = __gnu_test::nonexistent_path();"}, {"sha": "9ad5ef09f4a8fd0eb5cd308e6a37cea722838940", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/create_directories.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directories.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -70,6 +70,8 @@ test01()\n   b = fs::create_directories( p/\"./d4/../d5\", ec );\n   VERIFY( !ec );\n   VERIFY( b );\n+  VERIFY( is_directory(p/\"d4\") );\n+  VERIFY( is_directory(p/\"d5\") );\n   VERIFY( is_directory(p/\"./d4/../d5\") );\n \n   std::uintmax_t count = remove_all(p, ec);"}, {"sha": "0aa5fd5791b9e96b15c5b754dda492b69ade06a6", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/exists.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fexists.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fexists.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fexists.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -80,6 +80,11 @@ test03()\n void\n test04()\n {\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // filesystem permissions not supported\n+  return;\n+#endif\n+\n   using std::filesystem::perms;\n   using std::filesystem::perm_options;\n   path p = __gnu_test::nonexistent_path();"}, {"sha": "1e68c9be480c7ee51151694859a1244428c40c01", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/is_empty.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fis_empty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fis_empty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fis_empty.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -28,6 +28,11 @@ namespace fs = std::filesystem;\n void\n test01()\n {\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // filesystem permissions not supported\n+  return;\n+#endif\n+\n   auto p = __gnu_test::nonexistent_path();\n   create_directory(p);\n   permissions(p, fs::perms::none);"}, {"sha": "77dd788499fd68fccfdd14879228f5c2487eedaf", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/permissions.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fpermissions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fpermissions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fpermissions.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -18,6 +18,7 @@\n // { dg-options \"-std=gnu++17\" }\n // { dg-do run { target c++17 } }\n // { dg-require-filesystem-ts \"\" }\n+// { dg-xfail-if \"permissions not supported\" { *-*-mingw* } }\n \n // C++17 30.10.14.26 Permissions [fs.op.permissions]\n "}, {"sha": "f7a5bb3e66371179f66050f94c2673cb2ec915cf", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/remove.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -42,6 +42,9 @@ test01()\n   VERIFY( !ec );\n   VERIFY( !n );\n \n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No symlink support\n+#else\n   auto link = __gnu_test::nonexistent_path();\n   create_symlink(p, link);  // dangling symlink\n   ec = bad_ec;\n@@ -64,6 +67,7 @@ test01()\n   VERIFY( !ec );\n   VERIFY( n );\n   VERIFY( !exists(symlink_status(p)) );\n+#endif\n \n   const auto dir = __gnu_test::nonexistent_path();\n   create_directories(dir/\"a/b\");\n@@ -73,6 +77,9 @@ test01()\n   VERIFY( !n );\n   VERIFY( exists(dir/\"a/b\") );\n \n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No permissions support\n+#else\n   permissions(dir, fs::perms::none, ec);\n   if (!ec)\n   {\n@@ -82,6 +89,7 @@ test01()\n     VERIFY( !n );\n     permissions(dir, fs::perms::owner_all, ec);\n   }\n+#endif\n \n   ec = bad_ec;\n   n = remove(dir/\"a/b\", ec);"}, {"sha": "119dd3dc78301b04a3aca9c0f52ded8b0957aea1", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/remove_all.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove_all.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove_all.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fremove_all.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -42,6 +42,9 @@ test01()\n   VERIFY( !ec );\n   VERIFY( n == 0 );\n \n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No symlink support\n+#else\n   auto link = __gnu_test::nonexistent_path();\n   create_symlink(p, link);  // dangling symlink\n   ec = bad_ec;\n@@ -58,6 +61,7 @@ test01()\n   VERIFY( n == 1 );\n   VERIFY( !exists(symlink_status(link)) );  // The symlink is removed, but\n   VERIFY( exists(p) );                      // its target is not.\n+#endif\n \n   const auto dir = __gnu_test::nonexistent_path();\n   create_directories(dir/\"a/b/c\");"}, {"sha": "38c0f65370cf0e4642cdd647d39817ec3000261f", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/status.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fstatus.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fstatus.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fstatus.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -56,6 +56,11 @@ test02()\n void\n test03()\n {\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No permissions support\n+  return;\n+#endif\n+\n   fs::path dir = __gnu_test::nonexistent_path();\n   fs::create_directory(dir);\n   __gnu_test::scoped_file d(dir, __gnu_test::scoped_file::adopt_file);"}, {"sha": "9e9233de7a560abab8541a4eadbd431fa6562e51", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/weakly_canonical.cc", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fweakly_canonical.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fweakly_canonical.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fweakly_canonical.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -28,25 +28,30 @@ namespace fs = std::filesystem;\n void\n test01()\n {\n+  const std::error_code bad_ec = make_error_code(std::errc::invalid_argument);\n+  std::error_code ec;\n+\n   auto dir = __gnu_test::nonexistent_path();\n   fs::create_directory(dir);\n   const auto dirc = canonical(dir);\n   fs::path foo = dir/\"foo\", bar = dir/\"bar\";\n   fs::create_directory(foo);\n   fs::create_directory(bar);\n   fs::create_directory(bar/\"baz\");\n+  fs::path p;\n+\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No symlink support\n+#else\n   fs::create_symlink(\"../bar\", foo/\"bar\");\n \n-  auto p = fs::weakly_canonical(dir/\"foo//./bar///../biz/.\");\n+  p = fs::weakly_canonical(dir/\"foo//./bar///../biz/.\");\n   VERIFY( p == dirc/\"biz/\" );\n   p = fs::weakly_canonical(dir/\"foo/.//bar/././baz/.\");\n   VERIFY( p == dirc/\"bar/baz\" );\n   p = fs::weakly_canonical(fs::current_path()/dir/\"bar//../foo/bar/baz\");\n   VERIFY( p == dirc/\"bar/baz\" );\n \n-  const std::error_code bad_ec = make_error_code(std::errc::invalid_argument);\n-  std::error_code ec;\n-\n   ec = bad_ec;\n   p = fs::weakly_canonical(dir/\"foo//./bar///../biz/.\", ec);\n   VERIFY( !ec );\n@@ -59,6 +64,30 @@ test01()\n   p = fs::weakly_canonical(fs::current_path()/dir/\"bar//../foo/bar/baz\", ec);\n   VERIFY( !ec );\n   VERIFY( p == dirc/\"bar/baz\" );\n+#endif\n+\n+  // As above, but using \"foo/..\" instead of \"foo\",\n+  // because there is no \"foo/bar\" symlink\n+\n+  p = fs::weakly_canonical(dir/\"./bar///../biz/.\");\n+  VERIFY( p == dirc/\"biz/\" );\n+  p = fs::weakly_canonical(dir/\"foo/.././/bar/././baz/.\");\n+  VERIFY( p == dirc/\"bar/baz\" );\n+  p = fs::weakly_canonical(fs::current_path()/dir/\"bar//../foo/../bar/baz\");\n+  VERIFY( p == dirc/\"bar/baz\" );\n+\n+  ec = bad_ec;\n+  p = fs::weakly_canonical(dir/\"foo/..//./bar///../biz/.\", ec);\n+  VERIFY( !ec );\n+  VERIFY( p == dirc/\"biz/\" );\n+  ec = bad_ec;\n+  p = fs::weakly_canonical(dir/\"foo/.././/bar/././baz/.\", ec);\n+  VERIFY( !ec );\n+  VERIFY( p == dirc/\"bar/baz\" );\n+  ec = bad_ec;\n+  p = fs::weakly_canonical(fs::current_path()/dir/\"bar//../foo/../bar/baz\", ec);\n+  VERIFY( !ec );\n+  VERIFY( p == dirc/\"bar/baz\" );\n \n   fs::remove_all(dir, ec);\n }"}, {"sha": "7fad6c0317d36913b4c85cc8c7e8b2cba96dd9c9", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/canonical.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcanonical.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcanonical.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcanonical.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -37,24 +37,26 @@ test01()\n   canonical( p, ec );\n   VERIFY( !ec );\n \n+  const auto root = fs::absolute(\"/\");\n+\n   p = \"/\";\n   p = canonical( p, ec );\n-  VERIFY( p == \"/\" );\n+  VERIFY( p == root );\n   VERIFY( !ec );\n \n   p = \"/.\";\n   p = canonical( p, ec );\n-  VERIFY( p == \"/\" );\n+  VERIFY( p == root );\n   VERIFY( !ec );\n \n   p = \"/..\";\n   p = canonical( p, ec );\n-  VERIFY( p == \"/\" );\n+  VERIFY( p == root );\n   VERIFY( !ec );\n \n   p = \"/../.././.\";\n   p = canonical( p, ec );\n-  VERIFY( p == \"/\" );\n+  VERIFY( p == root );\n   VERIFY( !ec );\n }\n "}, {"sha": "61028111fc38dca9aa7a62caf979a0af3c5d37b0", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/copy.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcopy.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -67,6 +67,11 @@ test01()\n void\n test02()\n {\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No symlink support\n+  return;\n+#endif\n+\n   auto from = __gnu_test::nonexistent_path();\n   auto to = __gnu_test::nonexistent_path();\n   std::error_code ec, bad = std::make_error_code(std::errc::invalid_argument);"}, {"sha": "5b3e3783af51ec08e7ab726f073dda053fb508a6", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/create_directories.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -63,6 +63,8 @@ test01()\n   b = fs::create_directories( p/\"./d4/../d5\", ec );\n   VERIFY( !ec );\n   VERIFY( b );\n+  VERIFY( is_directory(p/\"d4\") );\n+  VERIFY( is_directory(p/\"d5\") );\n   VERIFY( is_directory(p/\"./d4/../d5\") );\n \n   std::uintmax_t count = remove_all(p, ec);"}, {"sha": "bb29b4760150933f5c416c88094f13e8d55924a4", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/exists.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -74,6 +74,11 @@ test03()\n void\n test04()\n {\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // filesystem permissions not supported\n+  return;\n+#endif\n+\n   using perms = std::experimental::filesystem::perms;\n   path p = __gnu_test::nonexistent_path();\n   create_directory(p);"}, {"sha": "1168ec78b4c601d3859b116ad1ea42c2be1b947a", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/is_empty.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fis_empty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fis_empty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fis_empty.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -28,6 +28,11 @@ namespace fs = std::experimental::filesystem;\n void\n test01()\n {\n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // filesystem permissions not supported\n+  return;\n+#endif\n+\n   auto p = __gnu_test::nonexistent_path();\n   create_directory(p);\n   permissions(p, fs::perms::none);"}, {"sha": "6d904b2bed7e0ce09a243970ce66e8990ac322bf", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/permissions.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fpermissions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fpermissions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fpermissions.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -18,6 +18,7 @@\n // { dg-options \"-DUSE_FILESYSTEM_TS -lstdc++fs\" }\n // { dg-do run { target c++11 } }\n // { dg-require-filesystem-ts \"\" }\n+// { dg-xfail-if \"permissions not supported\" { *-*-mingw* } }\n \n // 15.26 Permissions [fs.op.permissions]\n "}, {"sha": "36672074938c6fe35c19d24bc06da32019d5d1d7", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/remove.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fremove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fremove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fremove.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -42,6 +42,10 @@ test01()\n   VERIFY( !ec );\n   VERIFY( !n );\n \n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No symlink support\n+  return;\n+#else\n   auto link = __gnu_test::nonexistent_path();\n   create_symlink(p, link);  // dangling symlink\n   ec = bad_ec;\n@@ -64,6 +68,7 @@ test01()\n   VERIFY( !ec );\n   VERIFY( n );\n   VERIFY( !exists(symlink_status(p)) );\n+#endif\n \n   const auto dir = __gnu_test::nonexistent_path();\n   create_directories(dir/\"a/b\");\n@@ -73,6 +78,9 @@ test01()\n   VERIFY( !n );\n   VERIFY( exists(dir/\"a/b\") );\n \n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No permissions support\n+#else\n   permissions(dir, fs::perms::none, ec);\n   if (!ec)\n   {\n@@ -82,6 +90,7 @@ test01()\n     VERIFY( !n );\n     permissions(dir, fs::perms::owner_all, ec);\n   }\n+#endif\n \n   ec = bad_ec;\n   n = remove(dir/\"a/b\", ec);"}, {"sha": "99fb14a71d723f9ac4d59797cad36c3ec35b63b1", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/remove_all.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fremove_all.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fremove_all.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fremove_all.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -42,6 +42,9 @@ test01()\n   VERIFY( !ec );\n   VERIFY( n == 0 );\n \n+#if defined(__MINGW32__) || defined(__MINGW64__)\n+  // No symlink support\n+#else\n   auto link = __gnu_test::nonexistent_path();\n   create_symlink(p, link);  // dangling symlink\n   ec = bad_ec;\n@@ -58,6 +61,7 @@ test01()\n   VERIFY( n == 1 );\n   VERIFY( !exists(symlink_status(link)) );  // The symlink is removed, but\n   VERIFY( exists(p) );                      // its target is not.\n+#endif\n \n   const auto dir = __gnu_test::nonexistent_path();\n   create_directories(dir/\"a/b/c\");"}, {"sha": "f68937e36f71eecefbe3afe511653df179b2bfb7", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/space.cc", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fspace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe833a31a4e34875f30ec5eb8c56da556384d8/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fspace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fspace.cc?ref=edfe833a31a4e34875f30ec5eb8c56da556384d8", "patch": "@@ -27,6 +27,12 @@\n \n namespace fs = std::experimental::filesystem;\n \n+bool check(fs::space_info const& s)\n+{\n+  const std::uintmax_t err = -1;\n+  return s.capacity != err || s.free != err || s.available != err;\n+}\n+\n void\n test01()\n {\n@@ -36,17 +42,18 @@ test01()\n   s = fs::space(root, ec);\n   VERIFY( !ec );\n \n-  s = fs::space(__gnu_test::nonexistent_path(), ec);\n-  VERIFY( ec );\n-  VERIFY( s.capacity ==  static_cast<uintmax_t>(-1) );\n-  VERIFY( s.free ==  static_cast<uintmax_t>(-1) );\n-  VERIFY( s.available ==  static_cast<uintmax_t>(-1) );\n+  s = fs::space(__gnu_test::nonexistent_path()/\".\", ec);\n+  if (ec)\n+    VERIFY( ! check(s) );\n+  else\n+    VERIFY( check(s) );\n }\n \n void\n test02()\n {\n   fs::space_info s = fs::space(\".\");\n+  VERIFY( check(s) );\n   VERIFY( s.capacity >= s.free );\n }\n "}]}