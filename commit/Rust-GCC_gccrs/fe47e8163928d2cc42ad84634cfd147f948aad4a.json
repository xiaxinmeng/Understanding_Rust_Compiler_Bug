{"sha": "fe47e8163928d2cc42ad84634cfd147f948aad4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU0N2U4MTYzOTI4ZDJjYzQyYWQ4NDYzNGNmZDE0N2Y5NDhhYWQ0YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-12T10:47:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-12T10:47:39Z"}, "message": "Fix small inconsistency in new predicate\n\nThis can result on the mainline in a segfault when an object declared\nat library level is used in the declaration of another, local object.\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/trans.c (lvalue_for_aggr_p) <N_Object_Declaration>:\n\tReturn false unconditionally.", "tree": {"sha": "c88158b031825e42dd913860df20550440e007d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c88158b031825e42dd913860df20550440e007d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe47e8163928d2cc42ad84634cfd147f948aad4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe47e8163928d2cc42ad84634cfd147f948aad4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe47e8163928d2cc42ad84634cfd147f948aad4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe47e8163928d2cc42ad84634cfd147f948aad4a/comments", "author": null, "committer": null, "parents": [{"sha": "b440715089382938b9729d20f5dcaf646e6372fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b440715089382938b9729d20f5dcaf646e6372fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b440715089382938b9729d20f5dcaf646e6372fd"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "39d4d28fa67ba8c522cba3607b291697e07ff663", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe47e8163928d2cc42ad84634cfd147f948aad4a/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe47e8163928d2cc42ad84634cfd147f948aad4a/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=fe47e8163928d2cc42ad84634cfd147f948aad4a", "patch": "@@ -968,12 +968,8 @@ lvalue_for_aggregate_p (Node_Id gnat_node, tree gnu_type)\n \t\t\t\t     get_unpadded_type (Etype (gnat_parent)));\n \n     case N_Object_Declaration:\n-      /* For an aggregate object declaration, return the constant at top level\n-\t in order to avoid generating elaboration code.  */\n-      if (global_bindings_p ())\n-\treturn false;\n-\n-      /* ... fall through ... */\n+      /* For an aggregate object declaration, return false consistently.  */\n+      return false;\n \n     case N_Assignment_Statement:\n       /* For an aggregate assignment, decide based on the size.  */"}]}