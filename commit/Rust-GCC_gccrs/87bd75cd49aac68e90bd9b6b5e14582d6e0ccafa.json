{"sha": "87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdiZDc1Y2Q0OWFhYzY4ZTkwYmQ5YjZiNWUxNDU4MmQ2ZTBjY2FmYQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-07-21T23:16:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-07-21T23:16:08Z"}, "message": "analyzer: fix ICE in binding_cluster::purge_state_involving [PR101522]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/101522\n\t* store.cc (binding_cluster::purge_state_involving): Don't change\n\tm_map whilst iterating through it.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/101522\n\t* g++.dg/analyzer/pr101522.C: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "39adb93d85850540941105c81d2ba3c0028def68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39adb93d85850540941105c81d2ba3c0028def68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a61f6afbee370785cf091fe46e2e022748528307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a61f6afbee370785cf091fe46e2e022748528307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a61f6afbee370785cf091fe46e2e022748528307"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "8ee414da5c81125341ab3171b3513860036435df", "filename": "gcc/analyzer/store.cc", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa/gcc%2Fanalyzer%2Fstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa/gcc%2Fanalyzer%2Fstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.cc?ref=87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa", "patch": "@@ -1323,6 +1323,7 @@ binding_cluster::purge_state_involving (const svalue *sval,\n \t\t\t\t\tregion_model_manager *sval_mgr)\n {\n   auto_vec<const binding_key *> to_remove;\n+  auto_vec<std::pair<const binding_key *, tree> > to_make_unknown;\n   for (auto iter : m_map)\n     {\n       const binding_key *iter_key = iter.first;\n@@ -1335,17 +1336,20 @@ binding_cluster::purge_state_involving (const svalue *sval,\n \t}\n       const svalue *iter_sval = iter.second;\n       if (iter_sval->involves_p (sval))\n-\t{\n-\t  const svalue *new_sval\n-\t    = sval_mgr->get_or_create_unknown_svalue (iter_sval->get_type ());\n-\t  m_map.put (iter_key, new_sval);\n-\t}\n+\tto_make_unknown.safe_push (std::make_pair(iter_key,\n+\t\t\t\t\t\t  iter_sval->get_type ()));\n     }\n   for (auto iter : to_remove)\n     {\n       m_map.remove (iter);\n       m_touched = true;\n     }\n+  for (auto iter : to_make_unknown)\n+    {\n+      const svalue *new_sval\n+\t= sval_mgr->get_or_create_unknown_svalue (iter.second);\n+      m_map.put (iter.first, new_sval);\n+    }\n }\n \n /* Get any SVAL bound to REG within this cluster via kind KIND,"}, {"sha": "634a2ac30cde62def63bc7b0b1160f19b7277668", "filename": "gcc/testsuite/g++.dg/analyzer/pr101522.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr101522.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr101522.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr101522.C?ref=87bd75cd49aac68e90bd9b6b5e14582d6e0ccafa", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile { target c++11 } }\n+\n+double\n+sqrt ();\n+\n+namespace std {\n+  class gamma_distribution {\n+  public:\n+    gamma_distribution () : _M_param () {}\n+\n+  private:\n+    struct param_type {\n+      param_type () : _M_beta () { _M_a2 = 1 / ::sqrt (); }\n+      double _M_beta, _M_a2;\n+    };\n+    param_type _M_param;\n+    int _M_saved_available, _M_saved = 0, _M_param0 = 0;\n+  };\n+\n+  struct fisher_f_distribution {\n+    gamma_distribution _M_gd_x, _M_gd_y;\n+  };\n+}\n+\n+int\n+main ()\n+{\n+  std::fisher_f_distribution d;\n+\n+  return 0;\n+}"}]}