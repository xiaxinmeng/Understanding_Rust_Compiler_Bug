{"sha": "570e228b5e0ca01cc433786df5c61aa583e22469", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcwZTIyOGI1ZTBjYTAxY2M0MzM3ODZkZjVjNjFhYTU4M2UyMjQ2OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-07-24T13:02:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-07-24T13:02:06Z"}, "message": "re PR target/81521 (After [r250413] GCC 8.0 doesn't compile for Windows)\n\n\tPR bootstrap/81521\n\t* tree.def: Remove TYPE_METHODS documentation, adjust TYPE_FIELDS\n\tdocumentation.\n\t* doc/generic.texi: Likewise.\n\t* config/i386/winnt-cxx.c (i386_pe_adjust_class_at_definition): Look\n\tfor FUNCTION_DECLs in TYPE_FIELDS rather than TYPE_METHODS.\n\nFrom-SVN: r250476", "tree": {"sha": "97d8af1b430b9803999c016095e5a8f6836fa34e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97d8af1b430b9803999c016095e5a8f6836fa34e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/570e228b5e0ca01cc433786df5c61aa583e22469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570e228b5e0ca01cc433786df5c61aa583e22469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570e228b5e0ca01cc433786df5c61aa583e22469", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570e228b5e0ca01cc433786df5c61aa583e22469/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b40986c044a5c80bfa3edb1670104f89bc8fd6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b40986c044a5c80bfa3edb1670104f89bc8fd6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b40986c044a5c80bfa3edb1670104f89bc8fd6b"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "ef43c77e1645fdf0f9fcdbba606407359370b2bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570e228b5e0ca01cc433786df5c61aa583e22469/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570e228b5e0ca01cc433786df5c61aa583e22469/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=570e228b5e0ca01cc433786df5c61aa583e22469", "patch": "@@ -1,3 +1,12 @@\n+2017-07-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/81521\n+\t* tree.def: Remove TYPE_METHODS documentation, adjust TYPE_FIELDS\n+\tdocumentation.\n+\t* doc/generic.texi: Likewise.\n+\t* config/i386/winnt-cxx.c (i386_pe_adjust_class_at_definition): Look\n+\tfor FUNCTION_DECLs in TYPE_FIELDS rather than TYPE_METHODS.\n+\n 2017-07-24  Jackson Woodruff  <jackson.woodruff@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_mla_elt_merge<mode>): New."}, {"sha": "cf271d301c95995f4ee026974aea085a39db5952", "filename": "gcc/config/i386/winnt-cxx.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570e228b5e0ca01cc433786df5c61aa583e22469/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570e228b5e0ca01cc433786df5c61aa583e22469/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt-cxx.c?ref=570e228b5e0ca01cc433786df5c61aa583e22469", "patch": "@@ -114,14 +114,11 @@ i386_pe_adjust_class_at_definition (tree t)\n \t  decl_attributes (&ti_decl, na, 0);\n \t}\n \n-      /* Check static VAR_DECL's.  */\n+      /* Check FUNCTION_DECL's and static VAR_DECL's.  */\n       for (member = TYPE_FIELDS (t); member; member = DECL_CHAIN (member))\n \tif (TREE_CODE (member) == VAR_DECL)     \n \t  maybe_add_dllexport (member);\n-    \n-      /* Check FUNCTION_DECL's.  */\n-      for (member = TYPE_METHODS (t); member;  member = DECL_CHAIN (member))\n-\tif (TREE_CODE (member) == FUNCTION_DECL)\n+\telse if (TREE_CODE (member) == FUNCTION_DECL)\n \t  {\n \t    tree thunk;\n \t    maybe_add_dllexport (member);\n@@ -132,7 +129,8 @@ i386_pe_adjust_class_at_definition (tree t)\n \t      maybe_add_dllexport (thunk);\n \t}\n       /* Check vtables  */\n-      for (member = CLASSTYPE_VTABLES (t); member;  member = DECL_CHAIN (member))\n+      for (member = CLASSTYPE_VTABLES (t);\n+\t   member; member = DECL_CHAIN (member))\n \tif (TREE_CODE (member) == VAR_DECL) \n \t  maybe_add_dllexport (member);\n     }"}, {"sha": "874d46440f4bbb0da132484b19c804aed40c6f6d", "filename": "gcc/doc/generic.texi", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570e228b5e0ca01cc433786df5c61aa583e22469/gcc%2Fdoc%2Fgeneric.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570e228b5e0ca01cc433786df5c61aa583e22469/gcc%2Fdoc%2Fgeneric.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgeneric.texi?ref=570e228b5e0ca01cc433786df5c61aa583e22469", "patch": "@@ -2820,7 +2820,6 @@ This function cannot be used with namespaces that have\n @findex BINFO_TYPE\n @findex TYPE_FIELDS\n @findex TYPE_VFIELD\n-@findex TYPE_METHODS\n \n Besides namespaces, the other high-level scoping construct in C++ is the\n class.  (Throughout this manual the term @dfn{class} is used to mean the\n@@ -2837,7 +2836,7 @@ macro to discern whether or not a particular type is a @code{class} as\n opposed to a @code{struct}.  This macro will be true only for classes\n declared with the @code{class} tag.\n \n-Almost all non-function members are available on the @code{TYPE_FIELDS}\n+Almost all members are available on the @code{TYPE_FIELDS}\n list.  Given one member, the next can be found by following the\n @code{TREE_CHAIN}.  You should not depend in any way on the order in\n which fields appear on this list.  All nodes on this list will be\n@@ -2849,22 +2848,18 @@ list, if the enumeration type was declared in the class.  (Of course,\n the @code{TYPE_DECL} for the enumeration type will appear here as well.)\n There are no entries for base classes on this list.  In particular,\n there is no @code{FIELD_DECL} for the ``base-class portion'' of an\n-object.\n+object.  If a function member is overloaded, each of the overloaded\n+functions appears; no @code{OVERLOAD} nodes appear on the @code{TYPE_FIELDS}\n+list.  Implicitly declared functions (including default constructors,\n+copy constructors, assignment operators, and destructors) will appear on\n+this list as well.\n \n The @code{TYPE_VFIELD} is a compiler-generated field used to point to\n virtual function tables.  It may or may not appear on the\n @code{TYPE_FIELDS} list.  However, back ends should handle the\n @code{TYPE_VFIELD} just like all the entries on the @code{TYPE_FIELDS}\n list.\n \n-The function members are available on the @code{TYPE_METHODS} list.\n-Again, subsequent members are found by following the @code{TREE_CHAIN}\n-field.  If a function is overloaded, each of the overloaded functions\n-appears; no @code{OVERLOAD} nodes appear on the @code{TYPE_METHODS}\n-list.  Implicitly declared functions (including default constructors,\n-copy constructors, assignment operators, and destructors) will appear on\n-this list as well.\n-\n Every class has an associated @dfn{binfo}, which can be obtained with\n @code{TYPE_BINFO}.  Binfos are used to represent base-classes.  The\n binfo given by @code{TYPE_BINFO} is the degenerate case, whereby every"}, {"sha": "9f80c4d41f5f481f0c8539146aaf1289fa0a9b17", "filename": "gcc/tree.def", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570e228b5e0ca01cc433786df5c61aa583e22469/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570e228b5e0ca01cc433786df5c61aa583e22469/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=570e228b5e0ca01cc433786df5c61aa583e22469", "patch": "@@ -112,10 +112,7 @@ DEFTREECODE (BLOCK, \"block\", tcc_exceptional, 0)\n     itself or have named members doesn't really have a \"scope\" per se.\n   The TYPE_STUB_DECL field is used as a forward-references to names for\n     ENUMERAL_TYPE, RECORD_TYPE, UNION_TYPE, and QUAL_UNION_TYPE nodes;\n-    see below.\n-  The TYPE_METHODS points to list of all methods associated with the type.\n-    It is non-NULL only at main variant of the type and after free_lang_data\n-    it may be set to error_mark_node instead of actual list to save memory. */\n+    see below.  */\n \n /* The ordering of the following codes is optimized for the checking\n    macros in tree.h.  Changing the order will degrade the speed of the\n@@ -213,8 +210,9 @@ DEFTREECODE (ARRAY_TYPE, \"array_type\", tcc_type, 0)\n /* Struct in C, or record in Pascal.  */\n /* Special fields:\n    TYPE_FIELDS  chain of FIELD_DECLs for the fields of the struct,\n-     and VAR_DECLs, TYPE_DECLs and CONST_DECLs for record-scope variables,\n-     types and enumerators.\n+     VAR_DECLs, TYPE_DECLs and CONST_DECLs for record-scope variables,\n+     types and enumerators and FUNCTION_DECLs for methods associated\n+     with the type.\n    A few may need to be added for Pascal.  */\n /* See the comment above, before ENUMERAL_TYPE, for how\n    forward references to struct tags are handled in C.  */"}]}