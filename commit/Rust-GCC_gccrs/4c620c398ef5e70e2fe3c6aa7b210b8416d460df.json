{"sha": "4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2MjBjMzk4ZWY1ZTcwZTJmZTNjNmFhN2IyMTBiODQxNmQ0NjBkZg==", "commit": {"author": {"name": "Petur Runolfsson", "email": "peturr02@ru.is", "date": "2003-09-03T14:57:04Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-09-03T14:57:04Z"}, "message": "re PR libstdc++/12048 (unget does not work)\n\n\n2003-09-03  Petur Runolfsson  <peturr02@ru.is>\n\n\tPR libstdc++/12048\n\t* include/ext/stdio_sync_filebuf.h\n\t(stdio_sync_filebuf::_M_unget_buf): Declare it.\n\t(stdio_sync_filebuf::stdio_sync_filebuf): Initialize _M_unget_buf.\n\t(stdio_sync_filebuf::uflow): Store the returned character in\n\t_M_unget_buf.\n\t(stdio_sync_filebuf::pbackfail): If argument is eof(), pass\n\t_M_unget_buf to syncungetc(). Set _M_unget_buf to eof().\n\t(stdio_sync_filebuf<char>::xsgetn): Store last read character in\n\t_M_unget_buf, if any, else eof().\n\t(stdio_sync_filebuf<wchar_t>::xsgetn: Store last read character in\n\t_M_unget_buf, if any, else eof().\n\t* testsuite/27_io/objects/char/12048.cc: Rename to...\n\t* testsuite/27_io/objects/char/12048-1.cc: ...this.\n\t* testsuite/27_io/objects/char/12048-2.cc: New test.\n\t* testsuite/27_io/objects/char/12048-3.cc: New test.\n\t* testsuite/27_io/objects/char/12048-4.cc: New test.\n\t* testsuite/27_io/objects/char/12048-5.cc: New test. XFAIL.\n\t* testsuite/27_io/objects/wchar_t/12048-1.cc: New test.\n\t* testsuite/27_io/objects/wchar_t/12048-2.cc: New test.\n\t* testsuite/27_io/objects/wchar_t/12048-3.cc: New test.\n\t* testsuite/27_io/objects/wchar_t/12048-4.cc: New test.\n\t* testsuite/27_io/objects/wchar_t/12048-5.cc: New test. XFAIL.\n\t* testsuite/ext/stdio_sync_filebuf_char.cc\n\t(test02, test03, test04, test05): New tests.\n\t* testsuite/ext/stdio_sync_filebuf_wchar_t.cc\n\t(test02, test03, test04, test05): New tests.\n\nFrom-SVN: r71027", "tree": {"sha": "057dcd9e4f0a7b45d37e2a156328ee83c523b147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/057dcd9e4f0a7b45d37e2a156328ee83c523b147"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/comments", "author": null, "committer": null, "parents": [{"sha": "149639d4f14ae921b4d14f6e35a840755b29f098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/149639d4f14ae921b4d14f6e35a840755b29f098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/149639d4f14ae921b4d14f6e35a840755b29f098"}], "stats": {"total": 400, "additions": 399, "deletions": 1}, "files": [{"sha": "7ad336dafe6a4c4a093063ebb269591ff68ee15e", "filename": "libstdc++-v3/testsuite/27_io/objects/char/12048-1.cc", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-1.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -32,7 +32,8 @@ test01()\n   std::cin.get(c1);\n   std::cin.unget();\n   std::cin.get(c2);\n-  VERIFY (c1 == c2);\n+  VERIFY( std::cin.good() );\n+  VERIFY( c1 == c2 );\n }\n \n int main(void)", "previous_filename": "libstdc++-v3/testsuite/27_io/objects/char/12048.cc"}, {"sha": "d544d644065ff88884a45f5138e6b38740c33695", "filename": "libstdc++-v3/testsuite/27_io/objects/char/12048-2.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-2.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <iostream>\n+#include <cstdio>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  char c1;\n+  int c2;\n+  std::cin.get(c1);\n+  std::cin.unget();\n+  VERIFY( std::cin.good() );\n+  c2 = std::fgetc(stdin);\n+  VERIFY( c2 == std::char_traits<char>::to_int_type(c1) );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2f69b0722335037a34ccad3d44d0dc2743785a3a", "filename": "libstdc++-v3/testsuite/27_io/objects/char/12048-3.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-3.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <iostream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  char buf[2];\n+  VERIFY( std::cin.rdbuf()->sgetn(buf, 2) == 2 );\n+  int c1 = std::cin.rdbuf()->sungetc();\n+  int c2 = std::cin.rdbuf()->sbumpc();\n+  VERIFY( c1 == std::char_traits<char>::to_int_type(buf[1]) );\n+  VERIFY( c2 == c1 );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "6c0b28fe4dbd8915af5de160c6ce1ffee2ef0430", "filename": "libstdc++-v3/testsuite/27_io/objects/char/12048-4.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-4.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,40 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <iostream>\n+#include <cstdio>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  char buf[2];\n+  VERIFY( std::cin.rdbuf()->sgetn(buf, 2) == 2 );\n+  int c1 = std::cin.rdbuf()->sungetc();\n+  int c2 = std::fgetc(stdin);\n+  VERIFY( c1 == std::char_traits<char>::to_int_type(buf[1]) );\n+  VERIFY( c2 == c1 );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "884f49e9010e2ef2a292df046f329d510577bfcd", "filename": "libstdc++-v3/testsuite/27_io/objects/char/12048-5.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F12048-5.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,55 @@\n+// Derived from libstdc++/12048 by LJR <ljrittle@acm.org> with\n+// reminder from Petur Runolfsson <peturr02@ru.is>.\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// DR 49 states that cin.rdbuf()->sbumpc() and fgetc(stdin) should be\n+// equivalent and interchangable. Currently however, cin.rdbuf()->sungetc()\n+// only returns characters that were read with cin.rdbuf()->sbumpc()\n+\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <iostream>\n+#include <cstdio>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  char c1;\n+  int c2;\n+  char c3;\n+  std::cin.get(c1);\n+  c2 = std::fgetc(stdin);\n+  std::cin.unget();\n+  if (std::cin.good())\n+    {\n+      std::cin.get(c3);\n+      VERIFY( std::cin.good() );\n+      VERIFY( c3 == std::char_traits<char>::to_char_type(c2) );\n+    }\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "dbdf1d12f7eb83f2e0fc3c65f7a8f185ceb0b0b0", "filename": "libstdc++-v3/testsuite/27_io/objects/wchar_t/12048-1.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-1.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,43 @@\n+// Derived from libstdc++/12048 by LJR <ljrittle@acm.org> with\n+// reminder from Petur Runolfsson <peturr02@ru.is>.\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <iostream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  wchar_t c1;\n+  wchar_t c2;\n+  std::wcin.get(c1);\n+  std::wcin.unget();\n+  std::wcin.get(c2);\n+  VERIFY( std::wcin.good() );\n+  VERIFY( c1 == c2 );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "f96302ad2928f6b54b83e3b189d3b6e9241ae187", "filename": "libstdc++-v3/testsuite/27_io/objects/wchar_t/12048-2.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-2.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,42 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <iostream>\n+#include <cstdio>\n+#include <cwchar>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  wchar_t c1;\n+  std::wint_t c2;\n+  std::wcin.get(c1);\n+  std::wcin.unget();\n+  VERIFY( std::wcin.good() );\n+  c2 = std::fgetwc(stdin);\n+  VERIFY( c2 == std::char_traits<wchar_t>::to_int_type(c1) );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "568b6a1409ac23f4da01ea2f78bc5fe313ccb15e", "filename": "libstdc++-v3/testsuite/27_io/objects/wchar_t/12048-3.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-3.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,43 @@\n+// Derived from libstdc++/12048 by LJR <ljrittle@acm.org> with\n+// reminder from Petur Runolfsson <peturr02@ru.is>.\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <iostream>\n+#include <cwchar>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  wchar_t buf[2];\n+  VERIFY( std::wcin.rdbuf()->sgetn(buf, 2) == 2 );\n+  std::wint_t c1 = std::wcin.rdbuf()->sungetc();\n+  std::wint_t c2 = std::wcin.rdbuf()->sbumpc();\n+  VERIFY( c1 == std::char_traits<wchar_t>::to_int_type(buf[1]) );\n+  VERIFY( c2 == c1 );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5096cd055e302c5e2a360c7abf0078dddc92d2e6", "filename": "libstdc++-v3/testsuite/27_io/objects/wchar_t/12048-4.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-4.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <iostream>\n+#include <cstdio>\n+#include <cwchar>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  wchar_t buf[2];\n+  VERIFY( std::wcin.rdbuf()->sgetn(buf, 2) == 2 );\n+  wint_t c1 = std::wcin.rdbuf()->sungetc();\n+  wint_t c2 = std::fgetwc(stdin);\n+  VERIFY( c1 == std::char_traits<wchar_t>::to_int_type(buf[1]) );\n+  VERIFY( c2 == c1 );\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "bc965fd35f9ac2c8452d578f96debbc9bb474305", "filename": "libstdc++-v3/testsuite/27_io/objects/wchar_t/12048-5.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c620c398ef5e70e2fe3c6aa7b210b8416d460df/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fwchar_t%2F12048-5.cc?ref=4c620c398ef5e70e2fe3c6aa7b210b8416d460df", "patch": "@@ -0,0 +1,53 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// DR 49 states that cin.rdbuf()->sbumpc() and fgetc(stdin) should be\n+// equivalent and interchangable. Currently however, cin.rdbuf()->sungetc()\n+// only returns characters that were read with cin.rdbuf()->sbumpc()\n+\n+// { dg-do run { xfail *-*-* } }\n+\n+#include <iostream>\n+#include <cstdio>\n+#include <cwchar>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::freopen(\"cin_unget-1.txt\", \"r\", stdin);\n+\n+  wchar_t c1;\n+  std::wint_t c2;\n+  wchar_t c3;\n+  std::wcin.get(c1);\n+  c2 = std::fgetwc(stdin);\n+  std::wcin.unget();\n+  if (std::wcin.good())\n+    {\n+      std::wcin.get(c3);\n+      VERIFY( std::wcin.good() );\n+      VERIFY( c3 == std::char_traits<wchar_t>::to_char_type(c2) );\n+    }\n+}\n+\n+int main(void)\n+{\n+  test01();\n+  return 0;\n+}"}]}