{"sha": "745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ1ZjIyMDk2YzNhMmE1ZTYzZDViYWIxZmIwNzllMmM0MzdjZjliYw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-23T22:17:17Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-23T22:26:50Z"}, "message": "c++: EOF location [PR 96045]\n\nSetting the EOF token location to be the start of a line just after\nthe ending newline is not most helpful.  While that location is\nprobably the right place to report preprocessing and lexing issues,\nwhen parsing, the location just after the last token is better.  That\nway we get to point at some actual text.  Setting the location from\nthe previous token has the advantage over just setting the location to\nbe the end of the final line, in that any ending comments do not get\nconsidered, which I think is better.\n\n\tPR c++/96045\n\tgcc/cp/\n\t* parser.c (cp_lexer_new_main): Adjust EOF token location.\n\tgcc/testsuite/\n\t* g++.dg/diagnostic/pr96045-1.C: New.\n\t* g++.dg/diagnostic/pr96045-2.C: New.\n\t* g++.dg/diagnostic/pr96045-3.C: New.\n\t* c-c++-common/goacc/pr79428-1.c: Adjust EOF diagnostic location.\n\t* c-c++-common/gomp/pr79428-2.c: Likewise\n\t* c-c++-common/raw-string-6.c: Likewise\n\t* g++.dg/cpp0x/decltype63.C: Likewise\n\t* g++.dg/cpp0x/gen-attrs-64.C: Likewise\n\t* g++.dg/cpp0x/pr68726.C: Likewise\n\t* g++.dg/cpp0x/pr78341.C: Likewise\n\t* g++.dg/cpp1y/pr65202.C: Likewise\n\t* g++.dg/cpp1y/pr65340.C: Likewise\n\t* g++.dg/cpp1y/pr68578.C: Likewise\n\t* g++.dg/cpp1z/class-deduction44.C: Likewise\n\t* g++.dg/diagnostic/unclosed-extern-c.C: Likewise\n\t* g++.dg/diagnostic/unclosed-function.C: Likewise\n\t* g++.dg/diagnostic/unclosed-namespace.C: Likewise\n\t* g++.dg/diagnostic/unclosed-struct.C: Likewise\n\t* g++.dg/ext/pr84598.C: Likewise\n\t* g++.dg/other/switch4.C: Likewise\n\t* g++.dg/parse/attr4.C: Likewise\n\t* g++.dg/parse/cond4.C: Likewise\n\t* g++.dg/parse/crash10.C: Likewise\n\t* g++.dg/parse/crash18.C: Likewise\n\t* g++.dg/parse/crash27.C: Likewise\n\t* g++.dg/parse/crash34.C: Likewise\n\t* g++.dg/parse/crash35.C: Likewise\n\t* g++.dg/parse/crash52.C: Likewise\n\t* g++.dg/parse/crash59.C: Likewise\n\t* g++.dg/parse/crash61.C: Likewise\n\t* g++.dg/parse/crash67.C: Likewise\n\t* g++.dg/parse/error14.C: Likewise\n\t* g++.dg/parse/error56.C: Likewise\n\t* g++.dg/parse/invalid1.C: Likewise\n\t* g++.dg/parse/parameter-declaration-1.C: Likewise\n\t* g++.dg/parse/parser-pr28152-2.C: Likewise\n\t* g++.dg/parse/parser-pr28152.C: Likewise\n\t* g++.dg/parse/pr68722.C: Likewise\n\t* g++.dg/parse/pr96258.C: Likewise\n\t* g++.dg/pr46852.C: Likewise\n\t* g++.dg/pr46868.C: Likewise\n\t* g++.dg/template/crash115.C: Likewise\n\t* g++.dg/template/crash43.C: Likewise\n\t* g++.dg/template/crash90.C: Likewise\n\t* g++.dg/template/error-recovery1.C: Likewise\n\t* g++.dg/template/error57.C: Likewise\n\t* g++.old-deja/g++.other/crash31.C: Likewise", "tree": {"sha": "536cc4b67f0c8e27bf3dd5e2d328fdcd5d4c9d0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/536cc4b67f0c8e27bf3dd5e2d328fdcd5d4c9d0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "612cf351c700b6216209e3f3f4b3a0959bf2dee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/612cf351c700b6216209e3f3f4b3a0959bf2dee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/612cf351c700b6216209e3f3f4b3a0959bf2dee7"}], "stats": {"total": 119, "additions": 59, "deletions": 60}, "files": [{"sha": "dd8e8081847ccdec5aeeceea24895e06217aac1b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -666,6 +666,16 @@ cp_lexer_new_main (void)\n                       + lexer->buffer->length ()\n \t\t      - 1;\n \n+  if (lexer->buffer->length () != 1)\n+    {\n+      /* Set the EOF token's location to be the just after the previous\n+         token's range.  That way 'at-eof' diagnostics point at something\n+\t meaninful.  */\n+      auto range = get_range_from_loc (line_table, tok[-1].location);\n+      tok[0].location\n+\t= linemap_position_for_loc_and_offset (line_table, range.m_finish, 1);\n+    }\n+\n   if (filter)\n     module_token_cdtor (parse_in, filter);\n "}, {"sha": "a8047e98123249caea87a75c437d33125878ea21", "filename": "gcc/testsuite/c-c++-common/goacc/pr79428-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr79428-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr79428-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr79428-1.c?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -4,5 +4,5 @@ void\n foo ()\n {\n #pragma acc routine /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n-// { dg-error \"expected\" \"end\" { target c } .-1 }\n-// { dg-error \"-:expected\" \"end\" { target c++ } .+1 }\n+// { dg-error \"expected\" \"end\" { target *-*-* } .-1 }\n+"}, {"sha": "6d162a2c13f987207c2290300274c570b50d5337", "filename": "gcc/testsuite/c-c++-common/gomp/pr79428-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr79428-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr79428-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr79428-2.c?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -5,5 +5,4 @@ foo ()\n {\n #pragma omp sections\n #pragma omp section /* { dg-error \"'#pragma omp section' may only be used in '#pragma omp sections' construct|not allowed\" } */\n-// { dg-error \"expected\" \"end\" { target c } .-1 }\n-// { dg-error \"-:expected\" \"end\" { target c++ } .+1 }\n+// { dg-error \"expected\" \"end\" { target *-*-* } .-1 }"}, {"sha": "819dd44aff46ae1f2106c073dfec6303fb725bde", "filename": "gcc/testsuite/c-c++-common/raw-string-6.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-6.c?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -3,5 +3,4 @@\n // { dg-options \"-std=c++0x\" { target c++ } }\n \n const void *s0 = R\"ouch()ouCh\"; \t// { dg-error \"unterminated raw string\" \"unterminated\" }\n-// { dg-error \"at end of input\" \"end\" { target c } .-1 }\n-// { dg-error \"-:at end of input\" \"end\" { target c++ } .+1 }\n+// { dg-error \"at end of input\" \"end\" { target *-*-* } .-1 }"}, {"sha": "ab1a4111eee01189628eee5e338fbc55039ec8c1", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype63.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype63.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype63.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype63.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -4,5 +4,4 @@\n template<typename T>\n class C{\n  T t;\n-  decltype(t)::a:: // { dg-error \"expected\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+  decltype(t)::a:: // { dg-error \"expected\"  }"}, {"sha": "c82beb9838191adf72d62f9bedc06f6d3e01b33d", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-64.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-64.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -2,4 +2,3 @@\n // { dg-do compile { target c++11 } }\n \n namespace alignas() N  {} // { dg-error \"expected\"  }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "8edd43996ffb52043afac32c4d01bd1e05ac443b", "filename": "gcc/testsuite/g++.dg/cpp0x/pr68726.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr68726.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr68726.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr68726.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -5,4 +5,3 @@ template <typename> struct A {\n   template <typename... _Args>\n   using __has_construct typename __construct_helper<_Args...>::type;  // { dg-error \"expected\" }\n } struct : A<int> {   // { dg-error \"expected\" }\n-  // { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "0a69210e5a1c52e1847bee3c069bb7992c8f787a", "filename": "gcc/testsuite/g++.dg/cpp0x/pr78341.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr78341.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr78341.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr78341.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -2,4 +2,3 @@\n // { dg-do compile { target c++11 } }\n \n alignas (alignas double // { dg-error \"expected\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "1f7219b5b0a0ec887b6d0871a7101a9ec2f7b788", "filename": "gcc/testsuite/g++.dg/cpp1y/pr65202.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr65202.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr65202.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr65202.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -24,5 +24,4 @@ int main()\n {\n     foo<ns::bar> f;\n     adl::swap(f, f) // { dg-error \"expected ';'\" }\n-}\n-// { dg-error \"-:expected '.'\" \"expected end of namespace\" { target *-*-* } .+1 }\n+} // { dg-error \"2:expected\" }"}, {"sha": "e0ce6810906df2b4f4c769295e33d11ea2064458", "filename": "gcc/testsuite/g++.dg/cpp1y/pr65340.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr65340.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr65340.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr65340.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -17,4 +17,4 @@ struct traverse {\n }\n auto &traverse = constant < functors :: traverse > ;\n operator()()->decltype(traverse(0, 0))// { dg-error \"no match\"  }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"39:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "f4be9daa8c6b74f61b42e847b6067450a25fbf45", "filename": "gcc/testsuite/g++.dg/cpp1y/pr68578.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr68578.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr68578.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr68578.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,4 +1,4 @@\n // { dg-do compile { target c++14 } }\n \n template <typename> struct bar foo; template <> struct foo<>:  // { dg-error \"class template|redeclared\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"62:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "419aaa20cbdd00972cf1a2f8e98644114b4f068a", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction44.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction44.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -3,4 +3,3 @@\n \n template <typename> struct A;\n template <typename> struct B : A < B { , // { dg-error \"\"  }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "b84a5d5c007c6b98543d3ca26cab9dc5d9c1c5c8", "filename": "gcc/testsuite/g++.dg/diagnostic/pr96045-1.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-1.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -0,0 +1,4 @@\n+// PR 96045  EOF location\n+\n+template <class> class A {};\n+struct A <int> // { dg-error \"15:\" }"}, {"sha": "1009ad0a4de8f55158cecd1853620a5cfedb06d7", "filename": "gcc/testsuite/g++.dg/diagnostic/pr96045-2.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-2.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -0,0 +1,6 @@\n+// PR 96045  EOF location\n+\n+template <class> class A {};\n+struct A <int> // { dg-error \"15:\" }\n+/* A comment */\n+  "}, {"sha": "ad1f2a5f96d7b608b84036c2fee6e73f88eb74e2", "filename": "gcc/testsuite/g++.dg/diagnostic/pr96045-3.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fpr96045-3.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -0,0 +1,6 @@\n+// PR 96045  EOF location\n+\n+#define BORKED <int> // { dg-error \"20:\" }\n+\n+template <class> class A {};\n+struct A BORKED // { dg-message \"10: in expansion of\" }"}, {"sha": "4dad8a21c166a557afaf354476416a43a3ba4df8", "filename": "gcc/testsuite/g++.dg/diagnostic/unclosed-extern-c.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-extern-c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-extern-c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-extern-c.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -10,4 +10,4 @@ void bar (void);\n \n void test (void);\n // { message \"12: to match this '.'\" \"\" { target *-*-* } open_extern_c }\n-/* { dg-error \"-:expected '.' at end of input\" \"\" { target *-*-* } .+1 } */\n+/* { dg-error \"18:expected '.' at end of input\" \"\" { target *-*-* } .-2 } */"}, {"sha": "ff94bc7b262c6dd44e1e3c7421a8cb96536bdd1b", "filename": "gcc/testsuite/g++.dg/diagnostic/unclosed-function.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-function.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-function.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-function.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,4 +1,3 @@\n void test (void)\n { /* { dg-message \"1: to match this '.'\" } */\n-  int filler;\n-  /* { dg-error \"-:expected '.' at end of input\" \"\" { target *-*-* } .+1 } */\n+  int filler; /* { dg-error \"14:expected '.' at end of input\"  } */"}, {"sha": "fc3fc08595aca921247c7a5452d5fa33fb893b3b", "filename": "gcc/testsuite/g++.dg/diagnostic/unclosed-namespace.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-namespace.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-namespace.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-namespace.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,3 +1,2 @@\n namespace unclosed { /* { dg-message \"20: to match this '.'\" } */\n-int filler;\n-/* { dg-error \"-:expected '.' at end of input\" \"\" { target *-*-* } .+1 } */\n+int filler; /* { dg-error \"12:expected '.' at end of input\" } */"}, {"sha": "e3faaae715c1d6fd7cd80c9a17258b449cd84608", "filename": "gcc/testsuite/g++.dg/diagnostic/unclosed-struct.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-struct.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-struct.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Funclosed-struct.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,3 +1,2 @@\n struct unclosed { /* { dg-message \"17: to match this '.'\" } */\n-  int dummy;\n-  // { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+  int dummy; // { dg-error \"13:expected\"  }"}, {"sha": "1dd09f9870d05193f66d8be87eb04fe17be63e38", "filename": "gcc/testsuite/g++.dg/ext/pr84598.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr84598.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr84598.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr84598.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,4 +1,4 @@\n // { dg-options \"-fpermissive -w\" }\n \n-template<int b> __attribute__ a([] { class c, __attribute__(vector_size(operator+()))) d; // { dg-error \"\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+template<int b> __attribute__ a([] { class c, __attribute__(vector_size(operator+()))) d; // { dg-error \"before\" }\n+// { dg-error \"90:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "070c55e49329dafe12cfe15f2edaa8a2071ea759", "filename": "gcc/testsuite/g++.dg/other/switch4.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fswitch4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fswitch4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fswitch4.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -3,5 +3,4 @@\n class a b;  // { dg-error \"aggregate\" }\n void c() {\n   switch ()  // { dg-error \"expected\" }\n-  case b  // { dg-error \"expected\" }\n-    // { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+  case b  // { dg-error \"9:expected\" }"}, {"sha": "f16bf4779b9d29480a6e3b4580c1d7962d07c4b5", "filename": "gcc/testsuite/g++.dg/parse/attr4.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr4.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,4 +1,3 @@\n // PR c++/93684 - ICE-on-invalid with broken attribute.\n \n [[a:: // { dg-error \"expected\" }\n-  // { dg-error \"-:expected\" \"\" { target c++11 } .+1 }"}, {"sha": "6484f86072a6572bcfcca47dbc2910c773987251", "filename": "gcc/testsuite/g++.dg/parse/cond4.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcond4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcond4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcond4.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -3,5 +3,4 @@\n \n void foo()                                                                                                                              \n {                                                                                                                                       \n-  if (struct A{}// { dg-error \"types may not be defined|expected\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+  if (struct A{}// { dg-error \"\" }"}, {"sha": "f713c3cc65b8951bcc21ee50205f80695bcb0c92", "filename": "gcc/testsuite/g++.dg/parse/crash10.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash10.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -9,4 +9,3 @@ class\n {\n   typename::\n ; // { dg-error \"expected\" }\n- // { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "25311332e5714dfe8ad3b6bd760e7524408453de", "filename": "gcc/testsuite/g++.dg/parse/crash18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash18.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -4,4 +4,4 @@\n // PR 18095: ICE\n // Origin: Volker Reichelt <reichelt@gcc.gnu.org>\n \n-struct A // { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+struct A // { dg-error \"9:expected\" }"}, {"sha": "4090fc5eab6bd07debbe85470de3785276b5a9f5", "filename": "gcc/testsuite/g++.dg/parse/crash27.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash27.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -2,4 +2,4 @@\n \n void Dispatcher()\n \t (__builtin_offsetof (ArgsType, largeMsgLen)) // { dg-error \"initialize\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"54:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "60f44ae39a1e52303aa9caea34e3cb007c68133d", "filename": "gcc/testsuite/g++.dg/parse/crash34.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash34.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -4,4 +4,4 @@\n void foo()\n {\n   namespace N { /* { dg-error \"is not allowed\" } */\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"16:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "24b69f15afc4dba53b4e65a04398465c8b4b1d2c", "filename": "gcc/testsuite/g++.dg/parse/crash35.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash35.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -4,4 +4,4 @@\n struct a {};\n \n class foo : public a, a\t\t// { dg-error \"duplicate base\" }\n-{ // { dg-error \"-:at end of input\" \"\" { target *-*-* } .+1 } \n+{ // { dg-error \"2:at end of input\" } "}, {"sha": "ab30a7a5d5776e8f7ce25ccc4daa411bbf7d3b6f", "filename": "gcc/testsuite/g++.dg/parse/crash52.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash52.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,4 +1,4 @@\n // PR c++/39053\n \n void foo() = // { dg-error \"initialized\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"13:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "52b6b24381e91e136fb04f318023dffa497808e0", "filename": "gcc/testsuite/g++.dg/parse/crash59.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash59.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,4 +1,4 @@\n // PR c++/53003\n \n struct A{ void a{} return b  // { dg-error \"16:function definition\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"28:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "b2004b85173e24d1886bc15264b97bdded40787c", "filename": "gcc/testsuite/g++.dg/parse/crash61.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash61.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -5,4 +5,3 @@\n struct pair { constexpr pair (const) : }; // { dg-error \"\" }\n template <0> make_pair () {}\t\t  // { dg-error \"\" }\n pair prefix[] = { 0, make_pair }\t  // { dg-error \"\" }\n-// { dg-error \"-:expected\" \"\" { target c++11 } .+1 }"}, {"sha": "8f6305dff3c710fc2beb49266d073435e63245aa", "filename": "gcc/testsuite/g++.dg/parse/crash67.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash67.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash67.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash67.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -4,4 +4,4 @@\n class x0;\n template <x1> x2() {  // { dg-error \"declared|type\" }\n x0 x3 = x3. // { dg-error \"incomplete type\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"12:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "3d87d46a5d0a4f78811ba6843f34f9f8c9a5c7fc", "filename": "gcc/testsuite/g++.dg/parse/error14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -20,4 +20,4 @@ struct X\n \t\t  //    }\n \n };   // { dg-error \"1:expected primary-expression before '.' token\" \"primary\"  }\n-// { dg-error \"-:expected\" \"at end of input\" { target *-*-* } .+1 }\n+// { dg-error \"3:expected\" \"at end of input\" { target *-*-* } .-1 }"}, {"sha": "bd3d27e8fcd9dcad24731f5943c5ef64935aa4a3", "filename": "gcc/testsuite/g++.dg/parse/error56.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror56.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -4,4 +4,3 @@ template <0> int __copy_streambufs_eof; // { dg-error \"\" }\n class {\n // { dg-error \"forbids\" \"\" { target *-*-* } .+1 }\n     friend __copy_streambufs_eof <> ( // { dg-error \"\" }\n- // { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "971898f2d54345598ad54bfa58d0656c61b125a3", "filename": "gcc/testsuite/g++.dg/parse/invalid1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid1.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -3,4 +3,4 @@\n // { dg-options \"-w\" }\n \n int foo ( foo += *[ // { dg-error \"expected\" }\n-// { dg-error \"-:invalid|expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"20:invalid|expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "bd8f7f93b0d765c986b0644f1706a5ed1a98f237", "filename": "gcc/testsuite/g++.dg/parse/parameter-declaration-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -3,5 +3,5 @@\n // { dg-do compile }\n \n struct {\n-  a(void = 0; a(0), a(0) // { dg-error \"\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+  a(void = 0; a(0), a(0) // { dg-error \"invalid|cannot|before|forbid|member\" }\n+// { dg-error \"25:end of input\" \"\" { target *-*-* } .-1 }"}, {"sha": "8f6cce8077875b12784438bd63c6973b7d2e6fa9", "filename": "gcc/testsuite/g++.dg/parse/parser-pr28152-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152-2.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -8,4 +8,4 @@ main (void)\n \n   z = __complex__ (1.90000007326203904e+19, 0.0);   // { dg-error \"expected primary-expression before '__complex__'\" \"primary-expression\" } \n   z = __complex__ (1.0e+0, 0.0) / z;    // { dg-error \"expected primary-expression before '__complex__'\" \"primaty-expression\" } \n-  // { dg-error \"-:at end of input\" \"end\" { target *-*-* } .+1 }\n+  // { dg-error \"37:at end of input\" \"end\" { target *-*-* } .-1 }"}, {"sha": "748c355bafce1b40e2f9fff8f1dbfd8c293293ea", "filename": "gcc/testsuite/g++.dg/parse/parser-pr28152.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparser-pr28152.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -8,4 +8,4 @@ main (void)\n \n   z = _Complex (1.90000007326203904e+19, 0.0);   // { dg-error \"expected primary-expression before '_Complex'\" \"primary-expression\" } \n   z = _Complex (1.0e+0, 0.0) / z;    // { dg-error \"expected primary-expression before '_Complex'\" \"primary-expression\" } \n-  // { dg-error \"-:at end of input\" \"end\" { target *-*-* } .+1 }\n+  // { dg-error \"34:at end of input\" \"end\" { target *-*-* } .-1 }"}, {"sha": "6d2f1008cf9173468aec0768219c2e44be857443", "filename": "gcc/testsuite/g++.dg/parse/pr68722.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr68722.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr68722.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr68722.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -6,4 +6,3 @@ class A {\n   A _M_ios_locale ios_base(ios_base &) template <_Traits> class basic_ios {  // { dg-error \"\" }\n     basic_ios basic_ios = operator= // { dg-error \"\" }\n // { dg-prune-output \"file ends in default argument\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "4d14a80e2553faa99e6ca58518e5b6f62319667a", "filename": "gcc/testsuite/g++.dg/parse/pr96258.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr96258.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr96258.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr96258.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,5 +1,3 @@\n // { dg-additional-options -fopenmp }\n // { dg-require-effective-target fopenmp } \n-#pragma omp declare simd // { dg-error \"not immediately followed by\" }\n-\n-// { dg-error \"-:expected unqualified-id\" \"\" { target *-*-* } .+1 }\n+#pragma omp declare simd // { dg-error \"\" }"}, {"sha": "e3cb40247ba76396d8c88301fdf40ae2a3e788d8", "filename": "gcc/testsuite/g++.dg/pr46852.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46852.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46852.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46852.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -5,4 +5,3 @@ template\n <\n class\n { // { dg-error \"\" }\n-// { dg-error \"-:\" \"\" { target *-*-* } .+1 }"}, {"sha": "544c7b219df0a6ff8677c7b35c0ce05f5bc45312", "filename": "gcc/testsuite/g++.dg/pr46868.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46868.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46868.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr46868.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -2,4 +2,3 @@\n // { dg-do compile }\n \n template < int > struct S { S < // { dg-error \"\" }\n-  // { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "80f8683a1366e591d3870f15ecc9b7693f9b050f", "filename": "gcc/testsuite/g++.dg/template/crash115.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash115.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash115.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash115.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -1,4 +1,3 @@\n // PR c++/56534\n \n template < struct template rebind < > // { dg-error \"expected|must follow\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "ae644ede97ee3bd34de756196941aa5fccfb7e87", "filename": "gcc/testsuite/g++.dg/template/crash43.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash43.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -5,4 +5,3 @@ extern \"C\" {\n   struct ___is_pod {\n     enum {\n       __value = (sizeof(__gnu_internal::__test_type<_Tp>(0)))}; // { dg-error \"expected|declared\"  }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "125ab0a9d4645aca8ff4ad7c183c0c2ed58e5b9b", "filename": "gcc/testsuite/g++.dg/template/crash90.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash90.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash90.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash90.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -5,5 +5,4 @@ struct A ;\n template < typename >\n struct B ;\n template < typename T , A < B < T > {} // { dg-error \"parse error|non-type|initializer\" }\n-\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"39:expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "962571474fb9d6fb07bfbc9a181646d0d862bad1", "filename": "gcc/testsuite/g++.dg/template/error-recovery1.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror-recovery1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror-recovery1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror-recovery1.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -7,4 +7,3 @@ template < typename > struct T\n   template < bool > struct T < S > // { dg-error \"\" }\n   {\n     void f () { // { dg-error \"expected\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }"}, {"sha": "f67e0a6fa630dd74c3e46c59038ecef371d234d0", "filename": "gcc/testsuite/g++.dg/template/error57.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror57.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -2,4 +2,4 @@\n \n template <int()> struct a;\n template <int(b)> a < b\t\t// { dg-error \"int\" }\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+// { dg-error \"expected\" \"\" { target *-*-* } .-1 }"}, {"sha": "d777691c66c7869082842988c48c89ca18cc770d", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash31.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745f22096c3a2a5e63d5bab1fb079e2c437cf9bc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash31.C?ref=745f22096c3a2a5e63d5bab1fb079e2c437cf9bc", "patch": "@@ -6,5 +6,4 @@ namespace bar\n struct foo\n {\n   foo();\n-};\n-// { dg-error \"-:expected\" \"\" { target *-*-* } .+1 }\n+}; // { dg-error \"3:expected\"  }"}]}