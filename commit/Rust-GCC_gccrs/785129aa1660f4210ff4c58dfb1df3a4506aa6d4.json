{"sha": "785129aa1660f4210ff4c58dfb1df3a4506aa6d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg1MTI5YWExNjYwZjQyMTBmZjRjNThkZmIxZGYzYTQ1MDZhYTZkNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-07-24T12:01:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-07-24T12:01:31Z"}, "message": "re PR ipa/61823 (gcc.dg/torture/pr43879_[12].c FAILs with -fno-inline)\n\n2014-07-24  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/61823\n\t* tree-ssa-structalias.c (create_variable_info_for_1):\n\tUse varpool_get_constructor.\n\t(create_variable_info_for): Likewise.\n\n\t* gcc.dg/torture/pr43879_1.c: Add -fno-inline.\n\nFrom-SVN: r212980", "tree": {"sha": "e6e7fc2e41654412dd63c27c2a029de05556c32d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6e7fc2e41654412dd63c27c2a029de05556c32d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/785129aa1660f4210ff4c58dfb1df3a4506aa6d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/785129aa1660f4210ff4c58dfb1df3a4506aa6d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/785129aa1660f4210ff4c58dfb1df3a4506aa6d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7249d318f8e25b6dfe43672a0b28385eb2847c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7249d318f8e25b6dfe43672a0b28385eb2847c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7249d318f8e25b6dfe43672a0b28385eb2847c3"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "f36f2459acab9277f46f957936ce3992f6b85ac6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=785129aa1660f4210ff4c58dfb1df3a4506aa6d4", "patch": "@@ -1,3 +1,10 @@\n+2014-07-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/61823\n+\t* tree-ssa-structalias.c (create_variable_info_for_1):\n+\tUse varpool_get_constructor.\n+\t(create_variable_info_for): Likewise.\n+\n 2014-07-24  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_expand_epilogue): Don't"}, {"sha": "ae5dd749e755cc4291091e524b30d4a13eb9a8bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=785129aa1660f4210ff4c58dfb1df3a4506aa6d4", "patch": "@@ -1,3 +1,8 @@\n+2014-07-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/61823\n+\t* gcc.dg/torture/pr43879_1.c: Add -fno-inline.\n+\n 2014-07-24  Andreas Schwab  <schwab@suse.de>\n \n \t* lib/target-supports.exp (check_effective_target_arm_nothumb):"}, {"sha": "9c9e2ca88820af4a338feae7c81a372ddcc5ea9d", "filename": "gcc/testsuite/gcc.dg/torture/pr43879_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr43879_1.c?ref=785129aa1660f4210ff4c58dfb1df3a4506aa6d4", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-fipa-pta\" } */\n+/* { dg-options \"-fipa-pta -fno-inline\" } */\n /* { dg-additional-sources \"pr43879_2.c\" } */\n \n void bar(int c)"}, {"sha": "662fa24b661d7bd67477748e8ff0a1138e32aacb", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785129aa1660f4210ff4c58dfb1df3a4506aa6d4/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=785129aa1660f4210ff4c58dfb1df3a4506aa6d4", "patch": "@@ -5671,7 +5671,7 @@ create_variable_info_for_1 (tree decl, const char *name)\n \t in IPA mode.  Else we'd have to parse arbitrary initializers.  */\n       && !(in_ipa_mode\n \t   && is_global_var (decl)\n-\t   && DECL_INITIAL (decl)))\n+\t   && varpool_get_constructor (varpool_get_node (decl))))\n     {\n       fieldoff_s *fo = NULL;\n       bool notokay = false;\n@@ -5797,13 +5797,13 @@ create_variable_info_for (tree decl, const char *name)\n \n \t  /* If this is a global variable with an initializer and we are in\n \t     IPA mode generate constraints for it.  */\n-\t  if (DECL_INITIAL (decl)\n+\t  if (varpool_get_constructor (vnode)\n \t      && vnode->definition)\n \t    {\n \t      auto_vec<ce_s> rhsc;\n \t      struct constraint_expr lhs, *rhsp;\n \t      unsigned i;\n-\t      get_constraint_for_rhs (DECL_INITIAL (decl), &rhsc);\n+\t      get_constraint_for_rhs (varpool_get_constructor (vnode), &rhsc);\n \t      lhs.var = vi->id;\n \t      lhs.offset = 0;\n \t      lhs.type = SCALAR;"}]}