{"sha": "46e950dbb155a0bc0abb279920d3fd3914032bde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlOTUwZGJiMTU1YTBiYzBhYmIyNzk5MjBkM2ZkMzkxNDAzMmJkZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-09-26T12:45:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-09-26T12:45:19Z"}, "message": "re PR tree-optimization/58539 (ICE with segfault at -O3 with -g enabled on x86_64-linux-gnu)\n\n2013-09-26  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/58539\n\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Honor\n\tthe fact that debug statements are not taking part in loop-closed\n\tSSA construction.\n\n\t* gcc.dg/torture/pr58539.c: New testcase.\n\nFrom-SVN: r202942", "tree": {"sha": "268ca12fe8554623fafe7680262025d39f07f6e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/268ca12fe8554623fafe7680262025d39f07f6e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46e950dbb155a0bc0abb279920d3fd3914032bde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e950dbb155a0bc0abb279920d3fd3914032bde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e950dbb155a0bc0abb279920d3fd3914032bde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e950dbb155a0bc0abb279920d3fd3914032bde/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40ada30a792dd7e6518118b83cacc03ff03ffc69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ada30a792dd7e6518118b83cacc03ff03ffc69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ada30a792dd7e6518118b83cacc03ff03ffc69"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "90feb2c573995675571694caa92cb87ed977cba5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e950dbb155a0bc0abb279920d3fd3914032bde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e950dbb155a0bc0abb279920d3fd3914032bde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46e950dbb155a0bc0abb279920d3fd3914032bde", "patch": "@@ -1,3 +1,10 @@\n+2013-09-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/58539\n+\t* tree-vect-loop.c (vect_create_epilog_for_reduction): Honor\n+\tthe fact that debug statements are not taking part in loop-closed\n+\tSSA construction.\n+\n 2013-09-26  Nick Clifton  <nickc@redhat.com>\n \n \t* config/msp430/msp430.c (msp430_expand_epilogue): Fix compile"}, {"sha": "065eebd55569ccdd77569684996fc5c309080736", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e950dbb155a0bc0abb279920d3fd3914032bde/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e950dbb155a0bc0abb279920d3fd3914032bde/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46e950dbb155a0bc0abb279920d3fd3914032bde", "patch": "@@ -1,3 +1,8 @@\n+2013-09-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/58539\n+\t* gcc.dg/torture/pr58539.c: New testcase.\n+\n 2013-09-25  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/ssa-dom-thread-3.c: Update expected output."}, {"sha": "a016150f18ee7a55228660f4915fb945cfa08511", "filename": "gcc/testsuite/gcc.dg/torture/pr58539.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e950dbb155a0bc0abb279920d3fd3914032bde/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58539.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e950dbb155a0bc0abb279920d3fd3914032bde/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58539.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr58539.c?ref=46e950dbb155a0bc0abb279920d3fd3914032bde", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g\" } */\n+\n+int a, b;\n+\n+extern void baz (int);\n+\n+int foo (int p)\n+{\n+  return p ? p : 1;\n+}\n+\n+void bar ()\n+{\n+  int *c = &a, *d = &a;\n+  for (b = 0; b < 12; b++)\n+    *d |= 1;\n+  foo (*c);\n+  baz (*c && 1);\n+}"}, {"sha": "072d44ef2b26e10479acf1722942f7a24ccb5697", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e950dbb155a0bc0abb279920d3fd3914032bde/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e950dbb155a0bc0abb279920d3fd3914032bde/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=46e950dbb155a0bc0abb279920d3fd3914032bde", "patch": "@@ -4411,7 +4411,8 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple stmt,\n          result.  (The reduction result is expected to have two immediate uses -\n          one at the latch block, and one at the loop exit).  */\n       FOR_EACH_IMM_USE_FAST (use_p, imm_iter, scalar_dest)\n-        if (!flow_bb_inside_loop_p (loop, gimple_bb (USE_STMT (use_p))))\n+        if (!flow_bb_inside_loop_p (loop, gimple_bb (USE_STMT (use_p)))\n+\t    && !is_gimple_debug (USE_STMT (use_p)))\n           phis.safe_push (USE_STMT (use_p));\n \n       /* While we expect to have found an exit_phi because of loop-closed-ssa\n@@ -4541,7 +4542,10 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple stmt,\n       FOR_EACH_IMM_USE_FAST (use_p, imm_iter, scalar_dest)\n         {\n           if (!flow_bb_inside_loop_p (loop, gimple_bb (USE_STMT (use_p))))\n-            phis.safe_push (USE_STMT (use_p));\n+\t    {\n+\t      if (!is_gimple_debug (USE_STMT (use_p)))\n+\t\tphis.safe_push (USE_STMT (use_p));\n+\t    }\n           else\n             {\n               if (double_reduc && gimple_code (USE_STMT (use_p)) == GIMPLE_PHI)\n@@ -4551,7 +4555,8 @@ vect_create_epilog_for_reduction (vec<tree> vect_defs, gimple stmt,\n                   FOR_EACH_IMM_USE_FAST (phi_use_p, phi_imm_iter, phi_res)\n                     {\n                       if (!flow_bb_inside_loop_p (loop,\n-                                             gimple_bb (USE_STMT (phi_use_p))))\n+                                             gimple_bb (USE_STMT (phi_use_p)))\n+\t\t\t  && !is_gimple_debug (USE_STMT (phi_use_p)))\n                         phis.safe_push (USE_STMT (phi_use_p));\n                     }\n                 }"}]}