{"sha": "9b7424a705ede81bcf45b214744872e54ffb9297", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI3NDI0YTcwNWVkZTgxYmNmNDViMjE0NzQ0ODcyZTU0ZmZiOTI5Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:44:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:44:33Z"}, "message": "[multiple changes]\n\n2013-02-06  Robert Dewar  <dewar@adacore.com>\n\n\t* osint.ads: Minor fix of typo.\n\n2013-02-06  Sergey Rybin  <rybin@adacore.com frybin>\n\n\t* gnat_ugn.texi: gnatmetric: update the documentation of\n\tcomplexity metrics for Ada 2012.\n\n2013-02-06  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Make_Secondary_DT): Code cleanup:\n\tremove useless initialization.\n\n2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Build_Discriminant_Constraints): Do not\n\tgenerate overflow checks on a discriminant expression if the\n\tdiscriminant constraint is applied to a private type that has\n\ta full view, because the check will be applied when the full\n\tview is elaborated.  Removing the redundant check is not just\n\tan optimization, but it prevents spurious assembler errors,\n\tbecause of the way the backend generates names for expressions\n\tthat require overflow checking.\n\n2013-02-06  Pascal Obry  <obry@adacore.com>\n\n\t* s-osprim-mingw.adb: Removes workaround for an old GNU/Linker\n\tlimitation on Windows.\n\t(DA): Removed.\n\t(LIA): Removed.\n\t(LLIA): Removed.\n\t(TFA): Removed.\n\t(BTA): Removed.\n\t(BMTA): Removed.\n\t(BCA): Removed.\n\t(BMCA): Removed.\n\t(BTiA): Removed.\n\t(Clock): Use variable corresponding to access.\n\t(Get_Base_Time): Likewise.\n\t(Monotonic_Clock): Likewise.\n\n2013-02-06  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Gnatmake): When gnatmake is called with a project\n\tfile, do not invoke gnatbind with -I-.\n\t* makeutl.adb (Create_Binder_Mapping_File): Rewrite function. Get\n\tthe infos from all the sources.\n\n2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* snames.ads-tmpl: Add Name_Overriding_Renamings and pragma\n\tOverriding_Renamings.\n\t* par-prag.adb: Recognize pragma Overriding_Renamings.\n\t* opt.ads (Overriding_Renamings): flag to control compatibility\n\tmode with Rational compiler, replaces Rational_Profile flag.\n\t* sem_ch8.adb (Analyze_Subprogram_Renaming): When\n\tOverriding_Renamings is enabled, accept renaming declarations\n\twhere the new subprogram renames and overrides a locally inherited\n\toperation. Improve error message for some illegal renamings.\n\t* sem_prag.adb (Analyze_Pragma): Add case for Overriding_Renamings.\n\t(Set_Rational_Profile): The Rational_Profile enables\n\tOverriding_Renamings, Implicit_Packing, and Use_Vads_Size.\n\n2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb: Set parent of copied aggregate component, to\n\tprevent infinite loop.\n\nFrom-SVN: r195798", "tree": {"sha": "d5faf65f688ce9d431c15195adea371db53dcf30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5faf65f688ce9d431c15195adea371db53dcf30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b7424a705ede81bcf45b214744872e54ffb9297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7424a705ede81bcf45b214744872e54ffb9297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7424a705ede81bcf45b214744872e54ffb9297", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7424a705ede81bcf45b214744872e54ffb9297/comments", "author": null, "committer": null, "parents": [{"sha": "d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7761b2d64f02ce7b9fd7c354c2f5b98805235c6"}], "stats": {"total": 443, "additions": 282, "deletions": 161}, "files": [{"sha": "8f99e15ce980de6a050c844279fa6e25e6278f81", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -1,3 +1,72 @@\n+2013-02-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* osint.ads: Minor fix of typo.\n+\n+2013-02-06  Sergey Rybin  <rybin@adacore.com frybin>\n+\n+\t* gnat_ugn.texi: gnatmetric: update the documentation of\n+\tcomplexity metrics for Ada 2012.\n+\n+2013-02-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Make_Secondary_DT): Code cleanup:\n+\tremove useless initialization.\n+\n+2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Discriminant_Constraints): Do not\n+\tgenerate overflow checks on a discriminant expression if the\n+\tdiscriminant constraint is applied to a private type that has\n+\ta full view, because the check will be applied when the full\n+\tview is elaborated.  Removing the redundant check is not just\n+\tan optimization, but it prevents spurious assembler errors,\n+\tbecause of the way the backend generates names for expressions\n+\tthat require overflow checking.\n+\n+2013-02-06  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-osprim-mingw.adb: Removes workaround for an old GNU/Linker\n+\tlimitation on Windows.\n+\t(DA): Removed.\n+\t(LIA): Removed.\n+\t(LLIA): Removed.\n+\t(TFA): Removed.\n+\t(BTA): Removed.\n+\t(BMTA): Removed.\n+\t(BCA): Removed.\n+\t(BMCA): Removed.\n+\t(BTiA): Removed.\n+\t(Clock): Use variable corresponding to access.\n+\t(Get_Base_Time): Likewise.\n+\t(Monotonic_Clock): Likewise.\n+\n+2013-02-06  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Gnatmake): When gnatmake is called with a project\n+\tfile, do not invoke gnatbind with -I-.\n+\t* makeutl.adb (Create_Binder_Mapping_File): Rewrite function. Get\n+\tthe infos from all the sources.\n+\n+2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* snames.ads-tmpl: Add Name_Overriding_Renamings and pragma\n+\tOverriding_Renamings.\n+\t* par-prag.adb: Recognize pragma Overriding_Renamings.\n+\t* opt.ads (Overriding_Renamings): flag to control compatibility\n+\tmode with Rational compiler, replaces Rational_Profile flag.\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): When\n+\tOverriding_Renamings is enabled, accept renaming declarations\n+\twhere the new subprogram renames and overrides a locally inherited\n+\toperation. Improve error message for some illegal renamings.\n+\t* sem_prag.adb (Analyze_Pragma): Add case for Overriding_Renamings.\n+\t(Set_Rational_Profile): The Rational_Profile enables\n+\tOverriding_Renamings, Implicit_Packing, and Use_Vads_Size.\n+\n+2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb: Set parent of copied aggregate component, to\n+\tprevent infinite loop.\n+\n 2013-02-06  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, sem_ch10.adb: Minor reformatting."}, {"sha": "bf530cb4769052543335b2da5b3cf39c61b04f7a", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -4129,20 +4129,10 @@ package body Exp_Disp is\n          DT_Constr_List := New_List;\n          DT_Aggr_List   := New_List;\n \n-         --  Nb_Prim. If the tagged type has no primitives we add a dummy\n-         --  slot whose address will be the tag of this type.\n-\n-         --  ???codepeer???\n-         --  Nb_Prim cannot be zero here, so this test is wrong\n+         --  Nb_Prim\n \n-         if Nb_Prim = 0 then\n-            New_Node := Make_Integer_Literal (Loc, 1);\n-         else\n-            New_Node := Make_Integer_Literal (Loc, Nb_Prim);\n-         end if;\n-\n-         Append_To (DT_Constr_List, New_Node);\n-         Append_To (DT_Aggr_List, New_Copy (New_Node));\n+         Append_To (DT_Constr_List, Make_Integer_Literal (Loc, Nb_Prim));\n+         Append_To (DT_Aggr_List, Make_Integer_Literal (Loc, Nb_Prim));\n \n          --  Signature\n "}, {"sha": "f36faff47014c9d2beb44967c398d315267f702d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -7,7 +7,7 @@\n @c                                                                            o\n @c                             G N A T _ U G N                                o\n @c                                                                            o\n-@c           Copyright (C) 1992-2012, Free Software Foundation, Inc.          o\n+@c           Copyright (C) 1992-2013, Free Software Foundation, Inc.          o\n @c                                                                            o\n @c oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n \n@@ -14916,8 +14916,9 @@ The McCabe cyclomatic complexity metric is defined\n in @url{http://www.mccabe.com/pdf/mccabe-nist235r.pdf}\n \n According to McCabe, both control statements and short-circuit control forms\n-should be taken into account when computing cyclomatic complexity. For each\n-body, we compute three metric values:\n+should be taken into account when computing cyclomatic complexity.\n+For Ada 2012 we have also take into account conditional expressions\n+and quantified expressions. For each body, we compute three metric values:\n \n @itemize @bullet\n @item\n@@ -14934,6 +14935,10 @@ cyclomatic complexity, which is the sum of these two values.\n \n @noindent\n \n+The cyclomatic complexity is also computed for Ada 2012 expression functions.\n+An expression function cannot have statements as its components, so only one\n+metric value is computed as a cyclomatic complexity of an expression function.\n+\n The origin of cyclomatic complexity metric is the need to estimate the number\n of independent paths in the control flow graph that in turn gives the number\n of tests needed to satisfy paths coverage testing completeness criterion.\n@@ -14962,7 +14967,9 @@ suitable for typical Ada usage. For example, short circuit forms\n are not penalized as unstructured in the Ada essential complexity metric.\n \n When computing cyclomatic and essential complexity, @command{gnatmetric} skips\n-the code in the exception handlers and in all the nested program units.\n+the code in the exception handlers and in all the nested program units. The\n+code of assertions and predicates (that is, subprogram preconditions and\n+postconditions, subtype predicates and type invariants) is also skipped.\n \n By default, all the complexity metrics are computed and reported.\n For more fine-grained control you can use"}, {"sha": "27d0f697e980af41e62552bc5016c3014364f8ae", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5895,7 +5895,6 @@ package body Make is\n          --  projects.\n \n          Look_In_Primary_Dir := False;\n-         Add_Switch (\"-I-\", Binder, And_Save => True);\n       end if;\n \n       --  If the user wants a program without a main subprogram, add the"}, {"sha": "6d33aaacca77f60c68d9402aa8bc9419f5cab0a3", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 107, "deletions": 95, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -369,64 +369,77 @@ package body Makeutl is\n       Status : Boolean;\n       --  For call to Close\n \n+      Iter : Source_Iterator :=\n+        For_Each_Source\n+          (In_Tree           => Project_Tree,\n+           Language          => Name_Ada,\n+           Encapsulated_Libs => False,\n+           Locally_Removed   => False);\n+      Source : Prj.Source_Id;\n+\n    begin\n       Tempdir.Create_Temp_File (Mapping_FD, Mapping_Path);\n       Record_Temp_File (Project_Tree.Shared, Mapping_Path);\n \n       if Mapping_FD /= Invalid_FD then\n          OK := True;\n \n-         --  Traverse all units\n+         loop\n+            Source := Element (Iter);\n+            exit when Source = No_Source;\n \n-         Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n-         while Unit /= No_Unit_Index loop\n-            if Unit.Name /= No_Name then\n+            Unit := Source.Unit;\n \n-               --  If there is a body, put it in the mapping\n+            if Unit = No_Unit_Index or else Unit.Name = No_Name then\n+               ALI_Name := No_File;\n \n-               if Unit.File_Names (Impl) /= No_Source\n-                 and then Unit.File_Names (Impl).Project /= No_Project\n-               then\n-                  Get_Name_String (Unit.Name);\n-                  Add_Str_To_Name_Buffer (\"%b\");\n-                  ALI_Unit := Name_Find;\n-                  ALI_Name :=\n-                    Lib_File_Name (Unit.File_Names (Impl).Display_File);\n-                  ALI_Project := Unit.File_Names (Impl).Project;\n+            --  If this is a body, put it in the mapping\n \n-                  --  Otherwise, if there is a spec, put it in the mapping\n-\n-               elsif Unit.File_Names (Spec) /= No_Source\n-                 and then Unit.File_Names (Spec).Project /= No_Project\n-               then\n-                  Get_Name_String (Unit.Name);\n-                  Add_Str_To_Name_Buffer (\"%s\");\n-                  ALI_Unit := Name_Find;\n-                  ALI_Name :=\n-                    Lib_File_Name (Unit.File_Names (Spec).Display_File);\n-                  ALI_Project := Unit.File_Names (Spec).Project;\n+            elsif Source.Kind = Impl\n+              and then Unit.File_Names (Impl) /= No_Source\n+              and then Unit.File_Names (Impl).Project /= No_Project\n+            then\n+               Get_Name_String (Unit.Name);\n+               Add_Str_To_Name_Buffer (\"%b\");\n+               ALI_Unit := Name_Find;\n+               ALI_Name :=\n+                 Lib_File_Name (Unit.File_Names (Impl).Display_File);\n+               ALI_Project := Unit.File_Names (Impl).Project;\n+\n+            --  Otherwise, if this is a spec and there is no body, put it in\n+            --  the mapping.\n+\n+            elsif Source.Kind = Spec\n+              and then Unit.File_Names (Impl) = No_Source\n+              and then Unit.File_Names (Spec) /= No_Source\n+              and then Unit.File_Names (Spec).Project /= No_Project\n+            then\n+               Get_Name_String (Unit.Name);\n+               Add_Str_To_Name_Buffer (\"%s\");\n+               ALI_Unit := Name_Find;\n+               ALI_Name :=\n+                 Lib_File_Name (Unit.File_Names (Spec).Display_File);\n+               ALI_Project := Unit.File_Names (Spec).Project;\n \n-               else\n-                  ALI_Name := No_File;\n-               end if;\n+            else\n+               ALI_Name := No_File;\n+            end if;\n \n-               --  If we have something to put in the mapping then do it now.\n-               --  However, if the project is extended, we don't put anything\n-               --  in the mapping file, since we don't know where the ALI file\n-               --  is: it might be in the extended project object directory as\n-               --  well as in the extending project object directory.\n+            --  If we have something to put in the mapping then do it now. If\n+            --  the project is extended, look for the ALI file in the project,\n+            --  then in the extending projects in order, and use the last one\n+            --  found.\n \n-               if ALI_Name /= No_File\n-                 and then ALI_Project.Extended_By = No_Project\n-                 and then ALI_Project.Extends = No_Project\n-               then\n-                  --  First check if the ALI file exists. If it does not, do\n-                  --  not put the unit in the mapping file.\n+            if ALI_Name /= No_File then\n+               --  Look in the project and the projects that are extending it\n+               --  to find the real ALI file.\n \n-                  declare\n-                     ALI : constant String := Get_Name_String (ALI_Name);\n+               declare\n+                  ALI : constant String := Get_Name_String (ALI_Name);\n \n-                  begin\n+                  ALI_Path : Name_Id := No_Name;\n+               begin\n+                  loop\n                      --  For library projects, use the library ALI directory,\n                      --  for other projects, use the object directory.\n \n@@ -439,63 +452,62 @@ package body Makeutl is\n                      end if;\n \n                      Add_Str_To_Name_Buffer (ALI);\n+\n+                     if Is_Regular_File (Name_Buffer (1 .. Name_Len)) then\n+                        ALI_Path := Name_Find;\n+                     end if;\n+\n+                     ALI_Project := ALI_Project.Extended_By;\n+                     exit when ALI_Project = No_Project;\n+                  end loop;\n+\n+                  if ALI_Path /= No_Name then\n+                     --  First line is the unit name\n+\n+                     Get_Name_String (ALI_Unit);\n                      Add_Char_To_Name_Buffer (ASCII.LF);\n+                     Bytes :=\n+                       Write\n+                         (Mapping_FD,\n+                          Name_Buffer (1)'Address,\n+                          Name_Len);\n+                     OK := Bytes = Name_Len;\n \n-                     declare\n-                        ALI_Path_Name : constant String :=\n-                                          Name_Buffer (1 .. Name_Len);\n+                     exit when not OK;\n \n-                     begin\n-                        if Is_Regular_File\n-                             (ALI_Path_Name (1 .. ALI_Path_Name'Last - 1))\n-                        then\n-                           --  First line is the unit name\n-\n-                           Get_Name_String (ALI_Unit);\n-                           Add_Char_To_Name_Buffer (ASCII.LF);\n-                           Bytes :=\n-                             Write\n-                               (Mapping_FD,\n-                                Name_Buffer (1)'Address,\n-                                Name_Len);\n-                           OK := Bytes = Name_Len;\n-\n-                           exit when not OK;\n-\n-                           --  Second line it the ALI file name\n-\n-                           Get_Name_String (ALI_Name);\n-                           Add_Char_To_Name_Buffer (ASCII.LF);\n-                           Bytes :=\n-                             Write\n-                               (Mapping_FD,\n-                                Name_Buffer (1)'Address,\n-                                Name_Len);\n-                           OK := (Bytes = Name_Len);\n-\n-                           exit when not OK;\n-\n-                           --  Third line it the ALI path name\n-\n-                           Bytes :=\n-                             Write\n-                               (Mapping_FD,\n-                                ALI_Path_Name (1)'Address,\n-                                ALI_Path_Name'Length);\n-                           OK := (Bytes = ALI_Path_Name'Length);\n-\n-                           --  If OK is False, it means we were unable to\n-                           --  write a line. No point in continuing with the\n-                           --  other units.\n-\n-                           exit when not OK;\n-                        end if;\n-                     end;\n-                  end;\n-               end if;\n+                     --  Second line it the ALI file name\n+\n+                     Get_Name_String (ALI_Name);\n+                     Add_Char_To_Name_Buffer (ASCII.LF);\n+                     Bytes :=\n+                       Write\n+                         (Mapping_FD,\n+                          Name_Buffer (1)'Address,\n+                          Name_Len);\n+                     OK := (Bytes = Name_Len);\n+\n+                     exit when not OK;\n+\n+                     --  Third line it the ALI path name\n+\n+                     Get_Name_String (ALI_Path);\n+                     Add_Char_To_Name_Buffer (ASCII.LF);\n+                     Bytes :=\n+                       Write\n+                         (Mapping_FD,\n+                          Name_Buffer (1)'Address,\n+                          Name_Len);\n+                     OK := (Bytes = Name_Len);\n+\n+                     --  If OK is False, it means we were unable to write a\n+                     --  line. No point in continuing with the other units.\n+\n+                     exit when not OK;\n+                  end if;\n+               end;\n             end if;\n \n-            Unit := Units_Htable.Get_Next (Project_Tree.Units_HT);\n+            Next (Iter);\n          end loop;\n \n          Close (Mapping_FD, Status);"}, {"sha": "9beeb5835232476164330ff7db256664f25ee77a", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -1181,9 +1181,10 @@ package Opt is\n    --  Set to True if the tool should not have any output if there are no\n    --  errors or warnings.\n \n-   Rational_Profile : Boolean := False;\n+   Overriding_Renamings : Boolean := False;\n    --  GNAT\n-   --  Set to True to enable compatibility mode with Rational compiler.\n+   --  Set to True to enable compatibility mode with Rational compiler, and\n+   --  to accept renamings of implicit operations in their own scope.\n \n    Replace_In_Comments : Boolean := False;\n    --  GNATPREP"}, {"sha": "dba06aad1c4f1c12b6072fcda576e0dcb843b3b2", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -637,7 +637,7 @@ package Osint is\n    --  Set_Exit_Status as the last action of the program.\n \n    procedure OS_Exit_Through_Exception (Status : Integer);\n-   pragma No_Return;\n+   pragma No_Return (OS_Exit_Through_Exception);\n    --  Set the Current_Exit_Status, then raise Types.Terminate_Program\n \n    type Exit_Code_Type is ("}, {"sha": "4e02bfb70300aa6c4f80c50d5a7a3aa9d1b4fd9a", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -1218,6 +1218,7 @@ begin\n            Pragma_Optimize                       |\n            Pragma_Optimize_Alignment             |\n            Pragma_Overflow_Mode                  |\n+           Pragma_Overriding_Renamings           |\n            Pragma_Pack                           |\n            Pragma_Partition_Elaboration_Policy   |\n            Pragma_Passive                        |"}, {"sha": "34d3e344da470499952b15fa66842ab962a24aa1", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 15, "deletions": 38, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,46 +42,23 @@ package body System.OS_Primitives is\n    -- Data for the high resolution clock --\n    ----------------------------------------\n \n-   --  Declare some pointers to access multi-word data above. This is needed\n-   --  to workaround a limitation in the GNU/Linker auto-import feature used\n-   --  to build the GNAT runtime DLLs. In fact the Clock and Monotonic_Clock\n-   --  routines are inlined and they are using some multi-word variables.\n-   --  GNU/Linker will fail to auto-import those variables when building\n-   --  libgnarl.dll. The indirection level introduced here has no measurable\n-   --  penalties.\n-\n-   type DA is access all Duration;\n-   --  Use to have indirect access to multi-word variables\n-\n-   type LIA is access all LARGE_INTEGER;\n-   --  Use to have indirect access to multi-word variables\n-\n-   type LLIA is access all Long_Long_Integer;\n-   --  Use to have indirect access to multi-word variables\n-\n    Tick_Frequency : aliased LARGE_INTEGER;\n-   TFA : constant LIA := Tick_Frequency'Access;\n    --  Holds frequency of high-performance counter used by Clock\n    --  Windows NT uses a 1_193_182 Hz counter on PCs.\n \n-   Base_Ticks : aliased LARGE_INTEGER;\n-   BTA : constant LIA := Base_Ticks'Access;\n+   Base_Ticks : LARGE_INTEGER;\n    --  Holds the Tick count for the base time\n \n-   Base_Monotonic_Ticks : aliased LARGE_INTEGER;\n-   BMTA : constant LIA := Base_Monotonic_Ticks'Access;\n+   Base_Monotonic_Ticks : LARGE_INTEGER;\n    --  Holds the Tick count for the base monotonic time\n \n-   Base_Clock : aliased Duration;\n-   BCA : constant DA := Base_Clock'Access;\n+   Base_Clock : Duration;\n    --  Holds the current clock for the standard clock's base time\n \n-   Base_Monotonic_Clock : aliased Duration;\n-   BMCA : constant DA := Base_Monotonic_Clock'Access;\n+   Base_Monotonic_Clock : Duration;\n    --  Holds the current clock for monotonic clock's base time\n \n-   Base_Time : aliased Long_Long_Integer;\n-   BTiA : constant LLIA := Base_Time'Access;\n+   Base_Time : Long_Long_Integer;\n    --  Holds the base time used to check for system time change, used with\n    --  the standard clock.\n \n@@ -118,12 +95,12 @@ package body System.OS_Primitives is\n       GetSystemTimeAsFileTime (Now'Access);\n \n       Elap_Secs_Sys :=\n-        Duration (Long_Long_Float (abs (Now - BTiA.all)) /\n+        Duration (Long_Long_Float (abs (Now - Base_Time)) /\n                     Hundreds_Nano_In_Sec);\n \n       Elap_Secs_Tick :=\n-        Duration (Long_Long_Float (Current_Ticks - BTA.all) /\n-                  Long_Long_Float (TFA.all));\n+        Duration (Long_Long_Float (Current_Ticks - Base_Ticks) /\n+                  Long_Long_Float (Tick_Frequency));\n \n       --  If we have a shift of more than Max_Shift seconds we resynchronize\n       --  the Clock. This is probably due to a manual Clock adjustment, a DST\n@@ -134,11 +111,11 @@ package body System.OS_Primitives is\n          Get_Base_Time;\n \n          Elap_Secs_Tick :=\n-           Duration (Long_Long_Float (Current_Ticks - BTA.all) /\n-                     Long_Long_Float (TFA.all));\n+           Duration (Long_Long_Float (Current_Ticks - Base_Ticks) /\n+                     Long_Long_Float (Tick_Frequency));\n       end if;\n \n-      return BCA.all + Elap_Secs_Tick;\n+      return Base_Clock + Elap_Secs_Tick;\n    end Clock;\n \n    -------------------\n@@ -243,9 +220,9 @@ package body System.OS_Primitives is\n \n       else\n          Elap_Secs_Tick :=\n-           Duration (Long_Long_Float (Current_Ticks - BMTA.all) /\n-                       Long_Long_Float (TFA.all));\n-         return BMCA.all + Elap_Secs_Tick;\n+           Duration (Long_Long_Float (Current_Ticks - Base_Monotonic_Ticks) /\n+                       Long_Long_Float (Tick_Frequency));\n+         return Base_Monotonic_Clock + Elap_Secs_Tick;\n       end if;\n    end Monotonic_Clock;\n "}, {"sha": "2346b10a1d031c0f97914883aa354b7fa97c06dd", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -8295,6 +8295,15 @@ package body Sem_Ch3 is\n       --  Return the Position number within array Discr_Expr of a discriminant\n       --  D within the discriminant list of the discriminated type T.\n \n+      procedure Process_Discriminant_Expression\n+         (Expr : Node_Id;\n+          D    : Entity_Id);\n+      --  If this is a discriminant constraint on a partial view, do not\n+      --  generate an overflow check on the discriminant expression. The check\n+      --  will be generated when constraining the full view. Otherwise the\n+      --  backend creates duplicate symbols for the temporaries corresponding\n+      --  to the expressions to be checked, causing spurious assembler errors.\n+\n       ------------------\n       -- Pos_Of_Discr --\n       ------------------\n@@ -8319,6 +8328,31 @@ package body Sem_Ch3 is\n          raise Program_Error;\n       end Pos_Of_Discr;\n \n+      -------------------------------------\n+      -- Process_Discriminant_Expression --\n+      -------------------------------------\n+\n+      procedure Process_Discriminant_Expression\n+         (Expr : Node_Id;\n+          D    : Entity_Id)\n+      is\n+         BDT : constant Entity_Id := Base_Type (Etype (D));\n+\n+      begin\n+         --  If this is a discriminant constraint on a partial view, do\n+         --  not generate an overflow on the discriminant expression. The\n+         --  check will be generated when constraining the full view.\n+\n+         if Is_Private_Type (T)\n+           and then Present (Full_View (T))\n+         then\n+            Analyze_And_Resolve (Expr, BDT, Suppress => Overflow_Check);\n+\n+         else\n+            Analyze_And_Resolve (Expr, BDT);\n+         end if;\n+      end Process_Discriminant_Expression;\n+\n       --  Declarations local to Build_Discriminant_Constraints\n \n       Discr : Entity_Id;\n@@ -8359,7 +8393,7 @@ package body Sem_Ch3 is\n             Discr_Expr (D) := Error;\n \n          else\n-            Analyze_And_Resolve (Constr, Base_Type (Etype (Discr)));\n+            Process_Discriminant_Expression (Constr, Discr);\n             Discr_Expr (D) := Constr;\n          end if;\n \n@@ -8470,7 +8504,7 @@ package body Sem_Ch3 is\n                   end if;\n \n                   Discr_Expr (Position) := Expr;\n-                  Analyze_And_Resolve (Expr, Base_Type (Etype (Discr)));\n+                  Process_Discriminant_Expression (Expr, Discr);\n                end if;\n \n                --  A discriminant association with more than one discriminant"}, {"sha": "32d49cc69327b3e4a7939ffc6202bd5ebfb3ac8b", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -2820,9 +2820,15 @@ package body Sem_Ch8 is\n          elsif Nkind (Nam) = N_Expanded_Name\n            and then Entity (Prefix (Nam)) = Current_Scope\n            and then Chars (Selector_Name (Nam)) = Chars (New_S)\n-           and then not Rational_Profile\n          then\n-            Error_Msg_N (\"subprogram cannot rename itself\", N);\n+            if Overriding_Renamings then\n+               null;\n+\n+            else\n+               Error_Msg_NE\n+                  (\"implicit operation& is not visible (RM 8.3 (15))\",\n+                     Nam, Old_S);\n+            end if;\n          end if;\n \n          Set_Convention (New_S, Convention (Old_S));"}, {"sha": "70916cdc5db11b7818be224f7ddd5b370fc2a803", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -947,6 +947,10 @@ package body Sem_Prag is\n       --  argument has the right form then the Mechanism field of Ent is\n       --  set appropriately.\n \n+      procedure Set_Rational_Profile;\n+      --  Activate the set of configuration pragmas and permissions that make\n+      --  up the Rational profile.\n+\n       procedure Set_Ravenscar_Profile (N : Node_Id);\n       --  Activate the set of configuration pragmas and restrictions that make\n       --  up the Ravenscar Profile. N is the corresponding pragma node, which\n@@ -6362,6 +6366,20 @@ package body Sem_Prag is\n          end if;\n       end Set_Mechanism_Value;\n \n+      --------------------------\n+      -- Set_Rational_Profile --\n+      --------------------------\n+\n+      --  The Rational profile includes Implicit_Packing, Use_Vads_Size, and\n+      --  and extension to the semantics of renaming declarations.\n+\n+      procedure Set_Rational_Profile is\n+      begin\n+         Implicit_Packing     := True;\n+         Overriding_Renamings := True;\n+         Use_VADS_Size        := True;\n+      end Set_Rational_Profile;\n+\n       ---------------------------\n       -- Set_Ravenscar_Profile --\n       ---------------------------\n@@ -13063,6 +13081,9 @@ package body Sem_Prag is\n             end if;\n          end Overflow_Mode;\n \n+         when Pragma_Overriding_Renamings =>\n+            Overriding_Renamings := True;\n+\n          -------------\n          -- Ordered --\n          -------------\n@@ -13884,7 +13905,7 @@ package body Sem_Prag is\n                      N, Warn => Treat_Restrictions_As_Warnings);\n \n                elsif Chars (Argx) = Name_Rational then\n-                  Rational_Profile := True;\n+                  Set_Rational_Profile;\n \n                elsif Chars (Argx) = Name_No_Implementation_Extensions then\n                   Set_Profile_Restrictions\n@@ -14289,7 +14310,7 @@ package body Sem_Prag is\n          --  pragma Rational, for compatibility with foreign compiler\n \n          when Pragma_Rational =>\n-            Rational_Profile := True;\n+            Set_Rational_Profile;\n \n          -----------------------\n          -- Relative_Deadline --\n@@ -16591,6 +16612,7 @@ package body Sem_Prag is\n       Pragma_Optimize                       => -1,\n       Pragma_Optimize_Alignment             => -1,\n       Pragma_Overflow_Mode                  =>  0,\n+      Pragma_Overriding_Renamings           =>  0,\n       Pragma_Ordered                        =>  0,\n       Pragma_Pack                           =>  0,\n       Pragma_Page                           => -1,"}, {"sha": "74a701770acd491eece3d5c45361a5ec83d03d50", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -1746,6 +1746,7 @@ package body Sem_Util is\n                               if not Analyzed (Expression (Assoc)) then\n                                  Comp_Expr :=\n                                    New_Copy_Tree (Expression (Assoc));\n+                                 Set_Parent (Comp_Expr, Parent (N));\n                                  Preanalyze_Without_Errors (Comp_Expr);\n                               else\n                                  Comp_Expr := Expression (Assoc);"}, {"sha": "55c6329920d2d131b450f05a707523b8189f5fc2", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7424a705ede81bcf45b214744872e54ffb9297/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=9b7424a705ede81bcf45b214744872e54ffb9297", "patch": "@@ -414,6 +414,7 @@ package Snames is\n    Name_Normalize_Scalars              : constant Name_Id := N + $;\n    Name_Optimize_Alignment             : constant Name_Id := N + $; -- GNAT\n    Name_Overflow_Mode                  : constant Name_Id := N + $; -- GNAT\n+   Name_Overriding_Renamings           : constant Name_Id := N + $; -- GNAT\n    Name_Partition_Elaboration_Policy   : constant Name_Id := N + $; -- Ada 05\n    Name_Persistent_BSS                 : constant Name_Id := N + $; -- GNAT\n    Name_Polling                        : constant Name_Id := N + $; -- GNAT\n@@ -1710,6 +1711,7 @@ package Snames is\n       Pragma_Normalize_Scalars,\n       Pragma_Optimize_Alignment,\n       Pragma_Overflow_Mode,\n+      Pragma_Overriding_Renamings,\n       Pragma_Partition_Elaboration_Policy,\n       Pragma_Persistent_BSS,\n       Pragma_Polling,"}]}