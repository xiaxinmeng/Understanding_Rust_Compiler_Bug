{"sha": "cae81f177de95c5de06a61f769f3008925ebcb35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FlODFmMTc3ZGU5NWM1ZGUwNmE2MWY3NjlmMzAwODkyNWViY2IzNQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2011-08-02T10:02:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T10:02:23Z"}, "message": "exp_util.adb (Safe_Prefixed_Reference): Do not consider safe an in-mode parameter whose type is an access type since it...\n\n2011-08-02  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_util.adb (Safe_Prefixed_Reference): Do not consider safe an\n\tin-mode parameter whose type is an access type since it can be used to\n\tmodify its designated object. Enforce code that handles as safe an\n\taccess type that is not access-to-constant but it is the result of a\n\tprevious removal of side-effects.\n\t(Remove_Side_Effects): Minor code reorganization of cases which require\n\tno action. Done to incorporate documentation on new cases uncovered\n\tworking in this ticket: no action needed if this routine was invoked\n\ttoo early and the nodes are not yet decorated.\n\t* sem_res.adb (Resolve_Slice): Minor code cleanup replacling two calls\n\tto routine Remove_Side_Effects by calls to Force_Evaluation since they\n\twere issued with actuals that are implicitly provided by\n\tForce_Evaluation.\n\nFrom-SVN: r177120", "tree": {"sha": "496ee54f86dd92f4260963f3fd5496ca9fcb2d5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/496ee54f86dd92f4260963f3fd5496ca9fcb2d5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cae81f177de95c5de06a61f769f3008925ebcb35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae81f177de95c5de06a61f769f3008925ebcb35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae81f177de95c5de06a61f769f3008925ebcb35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae81f177de95c5de06a61f769f3008925ebcb35/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "218e6deed7eb149fdf8cc25fa80d9220cd9e8402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218e6deed7eb149fdf8cc25fa80d9220cd9e8402", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218e6deed7eb149fdf8cc25fa80d9220cd9e8402"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "2ade68e62132141688839f7dfb9b4ddeb042d8ac", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae81f177de95c5de06a61f769f3008925ebcb35/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae81f177de95c5de06a61f769f3008925ebcb35/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cae81f177de95c5de06a61f769f3008925ebcb35", "patch": "@@ -1,3 +1,19 @@\n+2011-08-02  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_util.adb (Safe_Prefixed_Reference): Do not consider safe an\n+\tin-mode parameter whose type is an access type since it can be used to\n+\tmodify its designated object. Enforce code that handles as safe an\n+\taccess type that is not access-to-constant but it is the result of a\n+\tprevious removal of side-effects.\n+\t(Remove_Side_Effects): Minor code reorganization of cases which require\n+\tno action. Done to incorporate documentation on new cases uncovered\n+\tworking in this ticket: no action needed if this routine was invoked\n+\ttoo early and the nodes are not yet decorated.\n+\t* sem_res.adb (Resolve_Slice): Minor code cleanup replacling two calls\n+\tto routine Remove_Side_Effects by calls to Force_Evaluation since they\n+\twere issued with actuals that are implicitly provided by\n+\tForce_Evaluation.\n+\n 2011-08-02  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, sem_res.adb: Minor reformatting."}, {"sha": "8923702bc3c454fd620428e19fb8214c0d0e62c3", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae81f177de95c5de06a61f769f3008925ebcb35/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae81f177de95c5de06a61f769f3008925ebcb35/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=cae81f177de95c5de06a61f769f3008925ebcb35", "patch": "@@ -4616,21 +4616,19 @@ package body Exp_Util is\n \n          --  If the prefix is of an access type that is not access-to-constant,\n          --  then this construct is a variable reference, which means it is to\n-         --  be considered to have side effects if Variable_Ref is set True\n-         --  Exception is an access to an entity that is a constant or an\n-         --  in-parameter which does not come from source, and is the result\n-         --  of a previous removal of side-effects.\n+         --  be considered to have side effects if Variable_Ref is set True.\n \n          elsif Is_Access_Type (Etype (Prefix (N)))\n            and then not Is_Access_Constant (Etype (Prefix (N)))\n            and then Variable_Ref\n          then\n-            if not Is_Entity_Name (Prefix (N)) then\n-               return False;\n-            else\n-               return Ekind (Entity (Prefix (N))) = E_Constant\n-                 or else Ekind (Entity (Prefix (N))) = E_In_Parameter;\n-            end if;\n+            --  Exception is a prefix that is the result of a previous removal\n+            --  of side-effects.\n+\n+            return Is_Entity_Name (Prefix (N))\n+              and then not Comes_From_Source (Prefix (N))\n+              and then Ekind (Entity (Prefix (N))) = E_Constant\n+              and then Is_Internal_Name (Chars (Entity (Prefix (N))));\n \n          --  If the prefix is an explicit dereference then this construct is a\n          --  variable reference, which means it is to be considered to have\n@@ -4945,10 +4943,24 @@ package body Exp_Util is\n    --  Start of processing for Remove_Side_Effects\n \n    begin\n-      --  If we are side effect free already or expansion is disabled,\n-      --  there is nothing to do.\n+      --  Handle cases in which there is nothing to do\n+\n+      if not Expander_Active then\n+         return;\n+\n+      --  Cannot generate temporaries if the invocation to remove side effects\n+      --  was issued too early and the type of the expression is not resolved\n+      --  (this happens because routines Duplicate_Subexpr_XX implicitly invoke\n+      --  Remove_Side_Effects).\n+\n+      elsif No (Exp_Type)\n+        or else Ekind (Exp_Type) = E_Access_Attribute_Type\n+      then\n+         return;\n+\n+      --  No action needed for side-effect free expressions\n \n-      if Side_Effect_Free (Exp) or else not Expander_Active then\n+      elsif Side_Effect_Free (Exp) then\n          return;\n       end if;\n "}, {"sha": "a94ecc2717155f8e5c2dbcdef74f534f3d2eff10", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae81f177de95c5de06a61f769f3008925ebcb35/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae81f177de95c5de06a61f769f3008925ebcb35/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=cae81f177de95c5de06a61f769f3008925ebcb35", "patch": "@@ -8631,8 +8631,8 @@ package body Sem_Res is\n \n             --  Ensure that side effects in the bounds are properly handled\n \n-            Remove_Side_Effects (Low_Bound  (Drange), Variable_Ref => True);\n-            Remove_Side_Effects (High_Bound (Drange), Variable_Ref => True);\n+            Force_Evaluation (Low_Bound (Drange));\n+            Force_Evaluation (High_Bound (Drange));\n \n             --  Do not apply the range check to nodes associated with the\n             --  frontend expansion of the dispatch table. We first check"}]}