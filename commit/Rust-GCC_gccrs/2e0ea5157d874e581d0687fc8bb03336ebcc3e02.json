{"sha": "2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUwZWE1MTU3ZDg3NGU1ODFkMDY4N2ZjOGJiMDMzMzZlYmNjM2UwMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-03-23T19:10:01Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-03-23T19:10:01Z"}, "message": "params.def: Fix a typo.\n\n\t* params.def: Fix a typo.\n\t* config/mips/mips.c: Follow the spelling convensions.\n\t* doc/invoke.texi: Fix typos.\n\nFrom-SVN: r96944", "tree": {"sha": "3c832e34a17145e240e0663f35d46fec799e0211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c832e34a17145e240e0663f35d46fec799e0211"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/comments", "author": null, "committer": null, "parents": [{"sha": "251c9c81684781973356a9baaeac09bfcf0df582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251c9c81684781973356a9baaeac09bfcf0df582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251c9c81684781973356a9baaeac09bfcf0df582"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "66bece7d1bd7c9f6e30ecdce9faf66cdb3065ecd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "patch": "@@ -1,3 +1,9 @@\n+2005-03-23  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* params.def: Fix a typo.\n+\t* config/mips/mips.c: Follow the spelling convensions.\n+\t* doc/invoke.texi: Fix typos.\n+\n 2005-03-18  Dale Johannese  <dalej@apple.com>\n \n \t* cp/tree.c (cp_tree_equal):  Handle SSA_NAME."}, {"sha": "ee23d4f59b65096682101652b24b10b81cb8243b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "patch": "@@ -9193,7 +9193,7 @@ mips_matching_cpu_name_p (const char *canonical, const char *given)\n \n \n /* Return the mips_cpu_info entry for the processor or ISA given\n-   by CPU_STRING.  Return null if the string isn't recognised.\n+   by CPU_STRING.  Return null if the string isn't recognized.\n \n    A similar function exists in GAS.  */\n "}, {"sha": "c750c995677ea4bd648b0052950a63a7d09fa246", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "patch": "@@ -5572,12 +5572,12 @@ default value is 450.\n \n @item inline-call-cost\n Specify cost of call instruction relative to simple arithmetics operations\n-(having cost of 1).  Increasing this cost disqualify inlinining of non-leaf\n-functions and at same time increase size of leaf function that is believed to\n-reduce function size by being inlined.  In effect it increase amount of\n+(having cost of 1).  Increasing this cost disqualifies inlining of non-leaf\n+functions and at the same time increases size of leaf function that is believed to\n+reduce function size by being inlined.  In effect it increases amount of\n inlining for code having large abstraction penalty (many functions that just\n-pass the argumetns to other functions) and decrease inlining for code with low\n-abstraction penalty.  Default value is 16.\n+pass the arguments to other functions) and decrease inlining for code with low\n+abstraction penalty.  The default value is 16.\n \n @item max-unrolled-insns\n The maximum number of instructions that a loop should have if that loop"}, {"sha": "2dbc19758e01eff2de097a20ae6ff3894d9714f4", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0ea5157d874e581d0687fc8bb03336ebcc3e02/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=2e0ea5157d874e581d0687fc8bb03336ebcc3e02", "patch": "@@ -158,7 +158,7 @@ DEFPARAM(PARAM_INLINE_UNIT_GROWTH,\n \t 50, 0, 0)\n DEFPARAM(PARAM_INLINE_CALL_COST,\n \t \"inline-call-cost\",\n-\t \"expense of call operation relative to ordinary aritmetic operations\",\n+\t \"expense of call operation relative to ordinary arithmetic operations\",\n \t 16, 0, 0)\n \n /* The GCSE optimization will be disabled if it would require"}]}