{"sha": "e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIzMjNmNWIzMzM1ZDcwZDRhMWUwNGMzZjI1MWE5NzdhNDAwZTVmYQ==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2013-08-19T17:49:33Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2013-08-19T17:49:33Z"}, "message": "builtins.def (BUILT_IN_FABSD32): New DFP ABS builtin.\n\ngcc/\n\t* builtins.def (BUILT_IN_FABSD32): New DFP ABS builtin.\n\t(BUILT_IN_FABSD64): Likewise.\n\t(BUILT_IN_FABSD128): Likewise.\n\t* builtins.c (expand_builtin): Add support for new DFP ABS builtins.\n\t(fold_builtin_1): Likewise.\n\t* config/rs6000/dfp.md (*negtd2_fpr): Handle non-overlapping destination\n\tand source operands.\n\t(*abstd2_fpr): Likewise.\n\t(*nabstd2_fpr): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/dfp-dd-2.c: New test.\n\t* gcc.target/powerpc/dfp-td-2.c: Likewise.\n\t* gcc.target/powerpc/dfp-td-3.c: Likewise.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r201849", "tree": {"sha": "2160dd15d5baffff0f1a85c953a8333adee72fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2160dd15d5baffff0f1a85c953a8333adee72fa8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a3def9768c4ad790f4d5f14c1bf17d39b184987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3def9768c4ad790f4d5f14c1bf17d39b184987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a3def9768c4ad790f4d5f14c1bf17d39b184987"}], "stats": {"total": 145, "additions": 133, "deletions": 12}, "files": [{"sha": "fa0a7907556372927a98a23a6ca0aff394915492", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "patch": "@@ -1,3 +1,16 @@\n+2013-08-19  Peter Bergner  <bergner@vnet.ibm.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* builtins.def (BUILT_IN_FABSD32): New DFP ABS builtin.\n+\t(BUILT_IN_FABSD64): Likewise.\n+\t(BUILT_IN_FABSD128): Likewise.\n+\t* builtins.c (expand_builtin): Add support for new DFP ABS builtins.\n+\t(fold_builtin_1): Likewise.\n+\t* config/rs6000/dfp.md (*negtd2_fpr): Handle non-overlapping destination\n+\tand source operands.\n+\t(*abstd2_fpr): Likewise.\n+\t(*nabstd2_fpr): Likewise.\n+\n 2013-08-19  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (mips_adjust_insn_length): Add checks for"}, {"sha": "f6f61c75018d4c4b5c807972d0c1bc7c418ee03d", "filename": "gcc/builtins.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "patch": "@@ -5889,6 +5889,9 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n   switch (fcode)\n     {\n     CASE_FLT_FN (BUILT_IN_FABS):\n+    case BUILT_IN_FABSD32:\n+    case BUILT_IN_FABSD64:\n+    case BUILT_IN_FABSD128:\n       target = expand_builtin_fabs (exp, target, subtarget);\n       if (target)\n \treturn target;\n@@ -10338,6 +10341,9 @@ fold_builtin_1 (location_t loc, tree fndecl, tree arg0, bool ignore)\n       return fold_builtin_strlen (loc, type, arg0);\n \n     CASE_FLT_FN (BUILT_IN_FABS):\n+    case BUILT_IN_FABSD32:\n+    case BUILT_IN_FABSD64:\n+    case BUILT_IN_FABSD128:\n       return fold_builtin_fabs (loc, arg0, type);\n \n     case BUILT_IN_ABS:"}, {"sha": "858f190835a3c44795a19dd56937ca1a8f06e808", "filename": "gcc/builtins.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "patch": "@@ -263,6 +263,9 @@ DEF_C99_BUILTIN        (BUILT_IN_EXPM1L, \"expm1l\", BT_FN_LONGDOUBLE_LONGDOUBLE,\n DEF_LIB_BUILTIN        (BUILT_IN_FABS, \"fabs\", BT_FN_DOUBLE_DOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_C90RES_BUILTIN (BUILT_IN_FABSF, \"fabsf\", BT_FN_FLOAT_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_C90RES_BUILTIN (BUILT_IN_FABSL, \"fabsl\", BT_FN_LONGDOUBLE_LONGDOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)\n+DEF_GCC_BUILTIN        (BUILT_IN_FABSD32, \"fabsd32\", BT_FN_DFLOAT32_DFLOAT32, ATTR_CONST_NOTHROW_LEAF_LIST)\n+DEF_GCC_BUILTIN        (BUILT_IN_FABSD64, \"fabsd64\", BT_FN_DFLOAT64_DFLOAT64, ATTR_CONST_NOTHROW_LEAF_LIST)\n+DEF_GCC_BUILTIN        (BUILT_IN_FABSD128, \"fabsd128\", BT_FN_DFLOAT128_DFLOAT128, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_BUILTIN        (BUILT_IN_FDIM, \"fdim\", BT_FN_DOUBLE_DOUBLE_DOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_BUILTIN        (BUILT_IN_FDIMF, \"fdimf\", BT_FN_FLOAT_FLOAT_FLOAT, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_BUILTIN        (BUILT_IN_FDIML, \"fdiml\", BT_FN_LONGDOUBLE_LONGDOUBLE_LONGDOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)"}, {"sha": "9a846239b045052c28ed8f3d794a1644ce928790", "filename": "gcc/config/rs6000/dfp.md", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Fconfig%2Frs6000%2Fdfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Fconfig%2Frs6000%2Fdfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdfp.md?ref=e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "patch": "@@ -132,11 +132,14 @@\n   \"\")\n \n (define_insn \"*negtd2_fpr\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n-\t(neg:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d,d\")\n+\t(neg:TD (match_operand:TD 1 \"gpc_reg_operand\" \"0,d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n-  \"fneg %0,%1\"\n-  [(set_attr \"type\" \"fp\")])\n+  \"@\n+   fneg %0,%1\n+   fneg %0,%1\\;fmr %L0,%L1\"\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"length\" \"4,8\")])\n \n (define_expand \"abstd2\"\n   [(set (match_operand:TD 0 \"gpc_reg_operand\" \"\")\n@@ -145,18 +148,24 @@\n   \"\")\n \n (define_insn \"*abstd2_fpr\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n-\t(abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\")))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d,d\")\n+\t(abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"0,d\")))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n-  \"fabs %0,%1\"\n-  [(set_attr \"type\" \"fp\")])\n+  \"@\n+   fabs %0,%1\n+   fabs %0,%1\\;fmr %L0,%L1\"\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"*nabstd2_fpr\"\n-  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d\")\n-\t(neg:TD (abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"d\"))))]\n+  [(set (match_operand:TD 0 \"gpc_reg_operand\" \"=d,d\")\n+\t(neg:TD (abs:TD (match_operand:TD 1 \"gpc_reg_operand\" \"0,d\"))))]\n   \"TARGET_HARD_FLOAT && TARGET_FPRS\"\n-  \"fnabs %0,%1\"\n-  [(set_attr \"type\" \"fp\")])\n+  \"@\n+   fnabs %0,%1\n+   fnabs %0,%1\\;fmr %L0,%L1\"\n+  [(set_attr \"type\" \"fp\")\n+   (set_attr \"length\" \"4,8\")])\n \n ;; Hardware support for decimal floating point operations.\n "}, {"sha": "9d262b9d0529cbc4957d0368b7e4abf59b7855ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "patch": "@@ -1,3 +1,9 @@\n+2013-08-19  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/dfp-dd-2.c: New test.\n+\t* gcc.target/powerpc/dfp-td-2.c: Likewise.\n+\t* gcc.target/powerpc/dfp-td-3.c: Likewise.\n+\n 2013-08-19  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/mulsize-1.c: Check for SLL as well as SUBU."}, {"sha": "fcb72bdff2b3e866ac01dccd8a19fefbe0a0a87e", "filename": "gcc/testsuite/gcc.target/powerpc/dfp-dd-2.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-dd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-dd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-dd-2.c?ref=e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "patch": "@@ -0,0 +1,26 @@\n+/* Test generation of DFP instructions for POWER6.  */\n+/* { dg-do compile { target { powerpc*-*-linux* && powerpc_fprs } } } */\n+/* { dg-options \"-std=gnu99 -O1 -mcpu=power6\" } */\n+\n+/* { dg-final { scan-assembler-times \"fneg\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fabs\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fnabs\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fmr\" 0 } } */\n+\n+_Decimal64\n+func1 (_Decimal64 a, _Decimal64 b)\n+{\n+  return -b;\n+}\n+\n+_Decimal64\n+func2 (_Decimal64 a, _Decimal64 b)\n+{\n+  return __builtin_fabsd64 (b);\n+}\n+\n+_Decimal64\n+func3 (_Decimal64 a, _Decimal64 b)\n+{\n+  return - __builtin_fabsd64 (b);\n+}"}, {"sha": "a078cc46980ceea44c362f9fea9a0ea1185267b4", "filename": "gcc/testsuite/gcc.target/powerpc/dfp-td-2.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-td-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-td-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-td-2.c?ref=e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "patch": "@@ -0,0 +1,29 @@\n+/* Test generation of DFP instructions for POWER6.  */\n+/* { dg-do compile { target { powerpc*-*-linux* && powerpc_fprs } } } */\n+/* { dg-options \"-std=gnu99 -O1 -mcpu=power6\" } */\n+\n+/* { dg-final { scan-assembler-times \"fneg\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fabs\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fnabs\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fmr\" 0 } } */\n+\n+/* These tests verify we only generate fneg, fabs and fnabs\n+   instructions and no fmr's since these are done in place.  */\n+\n+_Decimal128\n+func1 (_Decimal128 a)\n+{\n+  return -a;\n+}\n+\n+_Decimal128\n+func2 (_Decimal128 a)\n+{\n+  return __builtin_fabsd128 (a);\n+}\n+\n+_Decimal128\n+func3 (_Decimal128 a)\n+{\n+  return - __builtin_fabsd128 (a);\n+}"}, {"sha": "e825e5cad28828b7c341b52e04d14d9e6009efb2", "filename": "gcc/testsuite/gcc.target/powerpc/dfp-td-3.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-td-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2323f5b3335d70d4a1e04c3f251a977a400e5fa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-td-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp-td-3.c?ref=e2323f5b3335d70d4a1e04c3f251a977a400e5fa", "patch": "@@ -0,0 +1,29 @@\n+/* Test generation of DFP instructions for POWER6.  */\n+/* { dg-do compile { target { powerpc*-*-linux* && powerpc_fprs } } } */\n+/* { dg-options \"-std=gnu99 -O1 -mcpu=power6\" } */\n+\n+/* { dg-final { scan-assembler-times \"fneg\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fabs\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fnabs\" 1 } } */\n+/* { dg-final { scan-assembler-times \"fmr\" 3 } } */\n+\n+/* These tests verify we generate fneg, fabs and fnabs and\n+   associated fmr's since these are not done in place.  */\n+\n+_Decimal128\n+func1 (_Decimal128 a, _Decimal128 b)\n+{\n+  return -b;\n+}\n+\n+_Decimal128\n+func2 (_Decimal128 a, _Decimal128 b)\n+{\n+  return __builtin_fabsd128 (b);\n+}\n+\n+_Decimal128\n+func3 (_Decimal128 a, _Decimal128 b)\n+{\n+  return - __builtin_fabsd128 (b);\n+}"}]}