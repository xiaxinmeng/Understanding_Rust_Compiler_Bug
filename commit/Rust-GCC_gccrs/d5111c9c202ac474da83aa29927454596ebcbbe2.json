{"sha": "d5111c9c202ac474da83aa29927454596ebcbbe2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUxMTFjOWMyMDJhYzQ3NGRhODNhYTI5OTI3NDU0NTk2ZWJjYmJlMg==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2004-03-02T21:55:35Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2004-03-02T21:55:35Z"}, "message": "m68hc11.md (\"*pushdi_internal\"): New insn and split to separate push from moves.\n\n\t* config/m68hc11/m68hc11.md (\"*pushdi_internal\"): New insn and split\n\tto separate push from moves.\n\t(\"*pushdf_internal\"): Likewise.\n\t(\"*pushsf_internal\"): Likewise.\n\t(\"*pushsi_internal\"): Likewise.\n\t(\"movdi_internal\"): Use define_insn_and_split; non push operand.\n\t(\"movdf_internal\"): Likewise.\n\t(\"movsf_internal\"): Likewise.\n\t(\"movsi_internal\"): Likewise.\n\t(\"*movhi_68hc12\", \"*addhi3_68hc12\"): Fix and tune constraints\n\t(\"*addhi3\", \"*subhi3\", \"*andhi3_mem\", \"*iorhi3_mem\"): Likewise.\n\t(\"*ashlsi3_const1\", \"*lshrsi3_const1\"): Likewise.\n\nFrom-SVN: r78785", "tree": {"sha": "27ca46c1302c0994394b8377ac0697f8d98e7345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27ca46c1302c0994394b8377ac0697f8d98e7345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5111c9c202ac474da83aa29927454596ebcbbe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5111c9c202ac474da83aa29927454596ebcbbe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5111c9c202ac474da83aa29927454596ebcbbe2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5111c9c202ac474da83aa29927454596ebcbbe2/comments", "author": null, "committer": null, "parents": [{"sha": "9449502d0168919f09e3d35f154ee41b6612935b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9449502d0168919f09e3d35f154ee41b6612935b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9449502d0168919f09e3d35f154ee41b6612935b"}], "stats": {"total": 167, "additions": 105, "deletions": 62}, "files": [{"sha": "534f1fb9b48e1115165e9482e42f74a3b5ee069f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5111c9c202ac474da83aa29927454596ebcbbe2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5111c9c202ac474da83aa29927454596ebcbbe2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5111c9c202ac474da83aa29927454596ebcbbe2", "patch": "@@ -1,3 +1,18 @@\n+2004-03-02  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* config/m68hc11/m68hc11.md (\"*pushdi_internal\"): New insn and split\n+\tto separate push from moves.\n+\t(\"*pushdf_internal\"): Likewise.\n+\t(\"*pushsf_internal\"): Likewise.\n+\t(\"*pushsi_internal\"): Likewise.\n+\t(\"movdi_internal\"): Use define_insn_and_split; non push operand.\n+\t(\"movdf_internal\"): Likewise.\n+\t(\"movsf_internal\"): Likewise.\n+\t(\"movsi_internal\"): Likewise.\n+\t(\"*movhi_68hc12\", \"*addhi3_68hc12\"): Fix and tune constraints\n+\t(\"*addhi3\", \"*subhi3\", \"*andhi3_mem\", \"*iorhi3_mem\"): Likewise.\n+\t(\"*ashlsi3_const1\", \"*lshrsi3_const1\"): Likewise.\n+\n 2004-03-02  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.md (\"tstqi_z_used\"): Use define_insn_and_split."}, {"sha": "4140733212854b692a1ba021c250daad7ee29348", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 90, "deletions": 62, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5111c9c202ac474da83aa29927454596ebcbbe2/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5111c9c202ac474da83aa29927454596ebcbbe2/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=d5111c9c202ac474da83aa29927454596ebcbbe2", "patch": "@@ -627,17 +627,26 @@\n     }\n \")\n \n-(define_insn \"movdi_internal\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=ou,U,!u,U,m,m,!u\")\n+;; Separate push from normal moves to avoid reloading problems\n+;; The 'clr' is not able to push on 68HC11 so we really need a scratch.\n+;; We can also accept more scratch registers.\n+(define_insn_and_split \"*pushdi_internal\"\n+  [(set (match_operand:DI 0 \"push_operand\" \"=<,<,<,<\")\n+\t(match_operand:DI 1 \"general_operand\" \"i,U,m,!u\"))\n+   (clobber (match_scratch:HI 2 \"=&dA,&d,&d,&dA\"))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(const_int 0)]\n+  \"m68hc11_split_move (operands[0], operands[1], operands[2]);\n+   DONE;\")\n+\n+(define_insn_and_split \"movdi_internal\"\n+  [(set (match_operand:DI 0 \"non_push_operand\" \"=m!u,U,!u,U,m,m,!u\")\n \t(match_operand:DI 1 \"general_operand\" \"K,iU,iU,!u,mi,!u,!mu\"))\n    (clobber (match_scratch:HI 2 \"=X,&d,&d,&d,&d,&d,&d\"))]\n   \"\"\n-  \"#\")\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-\t(match_operand:DI 1 \"general_operand\" \"\"))\n-   (clobber (match_scratch:HI 2 \"\"))]\n+  \"#\"\n   \"reload_completed\"\n   [(const_int 0)]\n   \"m68hc11_split_move (operands[0], operands[1], operands[2]);\n@@ -663,17 +672,24 @@\n     }\n \")\n \n-(define_insn \"movdf_internal\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=ou,U,!u,U,m,m,!u\")\n+;; See pushdi_internal\n+(define_insn_and_split \"*pushdf_internal\"\n+  [(set (match_operand:DF 0 \"push_operand\" \"=<,<,<,<\")\n+\t(match_operand:DF 1 \"general_operand\" \"i,U,m,!u\"))\n+   (clobber (match_scratch:HI 2 \"=&dA,&d,&d,&dA\"))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(const_int 0)]\n+  \"m68hc11_split_move (operands[0], operands[1], operands[2]);\n+   DONE;\")\n+\n+(define_insn_and_split \"movdf_internal\"\n+  [(set (match_operand:DF 0 \"non_push_operand\" \"=mu,U,!u,U,m,m,!u\")\n \t(match_operand:DF 1 \"general_operand\" \"G,iU,iU,!u,mi,!u,!mu\"))\n    (clobber (match_scratch:HI 2 \"=X,&d,&d,&d,&d,&d,&d\"))]\n   \"\"\n-  \"#\")\n-\n-(define_split\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n-\t(match_operand:DF 1 \"general_operand\" \"\"))\n-   (clobber (match_scratch:HI 2 \"\"))]\n+  \"#\"\n   \"reload_completed\"\n   [(const_int 0)]\n   \"m68hc11_split_move (operands[0], operands[1], operands[2]);\n@@ -708,17 +724,23 @@\n     }\n \")\n \n-(define_insn \"movsi_internal\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=ou,mu,?D,m,?D,?u,?u,!u,D\")\n-\t(match_operand:SI 1 \"general_operand\"      \"K,imu,im,?D,!u,?D,mi,!u,!D\"))\n-   (clobber (match_scratch:HI 2                    \"=X,&d,X,X,X,X,&d,&d,X\"))]\n+(define_insn_and_split \"*pushsi_internal\"\n+  [(set (match_operand:SI 0 \"push_operand\" \"=<,<,<,<,<\")\n+\t(match_operand:SI 1 \"general_operand\" \"!D,i,U,m,!u\"))\n+   (clobber (match_scratch:HI 2 \"=X,&dA,&d,&d,&dA\"))]\n   \"\"\n-  \"#\")\n+  \"#\"\n+  \"reload_completed\"\n+  [(const_int 0)]\n+  \"m68hc11_split_move (operands[0], operands[1], operands[2]);\n+   DONE;\")\n \n-(define_split\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t(match_operand:SI 1 \"general_operand\" \"\"))\n-   (clobber (match_scratch:HI 2 \"\"))]\n+(define_insn_and_split \"movsi_internal\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=mu,mu,?D,m,?D,?u,?u,!u,D\")\n+\t(match_operand:SI 1 \"general_operand\" \"K,imu,im,?D,!u,?D,mi,!u,!D\"))\n+   (clobber (match_scratch:HI 2               \"=X,&d,X,X,X,X,&d,&d,X\"))]\n+  \"\"\n+  \"#\"\n   \"reload_completed\"\n   [(const_int 0)]\n   \"m68hc11_split_move (operands[0], operands[1], operands[2]);\n@@ -744,17 +766,23 @@\n     }\n \")\n \n-(define_insn \"movsf_internal\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=o!u,m,D,m,D,!u,!u,!u,D\")\n+(define_insn_and_split \"*pushsf_internal\"\n+  [(set (match_operand:SF 0 \"push_operand\" \"=<,<,<,<,<\")\n+\t(match_operand:SF 1 \"general_operand\" \"!D,i,U,m,!u\"))\n+   (clobber (match_scratch:HI 2 \"=X,&dA,&d,&d,&dA\"))]\n+  \"\"\n+  \"#\"\n+  \"reload_completed\"\n+  [(const_int 0)]\n+  \"m68hc11_split_move (operands[0], operands[1], operands[2]);\n+   DONE;\")\n+\n+(define_insn_and_split \"movsf_internal\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m!u,m,D,m,D,!u,!u,!u,D\")\n \t(match_operand:SF 1 \"general_operand\" \"G,im,im,D,!u,D,mi,!u,!D\"))\n    (clobber (match_scratch:HI 2 \"=X,&d,X,X,X,X,&d,&d,X\"))]\n   \"\"\n-  \"#\")\n-\n-(define_split\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n-\t(match_operand:SF 1 \"general_operand\" \"\"))\n-   (clobber (match_scratch:HI 2 \"\"))]\n+  \"#\"\n   \"reload_completed\"\n   [(const_int 0)]\n   \"m68hc11_split_move (operands[0], operands[1], operands[2]);\n@@ -864,8 +892,8 @@\n    clr\\\\t%b0\\\\n\\\\tclr\\\\t%h0\")\n \n (define_insn \"*movhi_68hc12\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=U,dAw,U,U,m,!u\")\n-\t(match_operand:HI 1 \"general_operand\" \"U,rim,dAwi,!u,dAw,riU\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=U,dAw,dAw,U,U,m,!u\")\n+\t(match_operand:HI 1 \"general_operand\" \"U,dAwim,!u,dAwi,!u,dAw,riU\"))]\n   \"TARGET_M6812\"\n   \"*\n {\n@@ -1205,7 +1233,7 @@\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,m,!u,!u\")\n \t(zero_extend:DI \n \t    (match_operand:SI 1 \"nonimmediate_operand\" \"m,Du,m,Du\")))\n-   (clobber (match_scratch:HI 2 \"=d,d,d,d\"))]\n+   (clobber (match_scratch:HI 2 \"=d,d,&d,d\"))]\n   \"\"\n   \"#\")\n \n@@ -2066,8 +2094,8 @@\n }\")\n \n (define_insn \"*addhi3_68hc12\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=xyd,d,xy*z*w,xy*z*w,xy*z\")\n-        (plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,xy*zw,0\")\n+  [(set (match_operand:HI 0 \"register_operand\" \"=d*A,d,xy*A*w,xy*A*w,xy*A\")\n+        (plus:HI (match_operand:HI 1 \"register_operand\" \"%0,0,0,xy*Aw,0\")\n                  (match_operand:HI 2 \"general_operand\" \"i,m*A*wu,id,id,!mu*A\")))]\n   \"TARGET_M6812\"\n   \"*\n@@ -2255,9 +2283,9 @@\n }\")\n \n (define_insn \"*addhi3\"\n-  [(set (match_operand:HI 0 \"hard_reg_operand\" \"=A,dA,d,!A,d*A,!d*A\")\n-\t(plus:HI (match_operand:HI 1 \"general_operand\" \"%0,0,0,0,0,0\")\n-\t\t (match_operand:HI 2 \"general_operand\" \"N,I,i,I,mi*A*d,!u*d*w\")))]\n+  [(set (match_operand:HI 0 \"hard_reg_operand\" \"=A,dA,d,!A,d*A,d,!d*A\")\n+\t(plus:HI (match_operand:HI 1 \"general_operand\" \"%0,0,0,0,0,0,0\")\n+\t\t (match_operand:HI 2 \"general_operand\" \"N,I,i,I,mi*A*d,*u,!u*d*w\")))]\n   \"TARGET_M6811\"\n   \"*\n {\n@@ -2683,9 +2711,9 @@\n \n \n (define_insn \"*subhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=d,*A,d*A\")\n-\t(minus:HI (match_operand:HI 1 \"register_operand\" \"0,0,0\")\n-\t\t  (match_operand:HI 2 \"general_operand\" \"im*A*d,im*d*A,!u\")))]\n+  [(set (match_operand:HI 0 \"register_operand\" \"=d,*A,d,*A\")\n+\t(minus:HI (match_operand:HI 1 \"register_operand\" \"0,0,0,0\")\n+\t\t  (match_operand:HI 2 \"general_operand\" \"im*A*d,im*d*A,u,!u\")))]\n   \"\"\n   \"*\n {\n@@ -3062,10 +3090,10 @@\n   \"\")\n \n (define_insn \"*andhi3_mem\"\n-  [(set (match_operand:HI 0 \"memory_operand\" \"=Q,R\")\n+  [(set (match_operand:HI 0 \"memory_operand\" \"=R,Q\")\n \t(and:HI (match_dup 0)\n \t        (match_operand:HI 1 \"immediate_operand\" \"i,i\")))\n-   (clobber (match_scratch:HI 2 \"=xy,X\"))]\n+   (clobber (match_scratch:HI 2 \"=X,xy\"))]\n   \"TARGET_RELAX && !TARGET_M6812\"\n   \"*\n {\n@@ -3085,7 +3113,7 @@\n   /* When destination is a global variable, generate a .relax instruction\n      and load the address in the clobber register.  That load can be\n      eliminated by the linker if the address is in page0.  */\n-  if (which_alternative == 0)\n+  if (which_alternative == 1)\n     {\n       rtx ops[3];\n \n@@ -3220,10 +3248,10 @@\n   \"\")\n \n (define_insn \"*andqi3_mem\"\n-  [(set (match_operand:QI 0 \"memory_operand\" \"=Q,R\")\n+  [(set (match_operand:QI 0 \"memory_operand\" \"=R,Q\")\n \t(and:QI (match_dup 0)\n \t        (match_operand:QI 1 \"const_int_operand\" \"i,i\")))\n-   (clobber (match_scratch:HI 2 \"=xy,X\"))]\n+   (clobber (match_scratch:HI 2 \"=X,xy\"))]\n   \"TARGET_RELAX && !TARGET_M6812\"\n   \"*\n {\n@@ -3241,7 +3269,7 @@\n   /* When destination is a global variable, generate a .relax instruction\n      and load the address in the clobber register.  That load can be\n      eliminated by the linker if the address is in page0.  */\n-  if (which_alternative == 0)\n+  if (which_alternative == 1)\n     {\n       rtx ops[3];\n \n@@ -3346,10 +3374,10 @@\n   \"\")\n \n (define_insn \"*iorhi3_mem\"\n-  [(set (match_operand:HI 0 \"memory_operand\" \"=Q,R\")\n+  [(set (match_operand:HI 0 \"memory_operand\" \"=R,Q\")\n \t(ior:HI (match_dup 0)\n \t        (match_operand:HI 1 \"const_int_operand\" \"\")))\n-   (clobber (match_scratch:HI 2 \"=xy,X\"))]\n+   (clobber (match_scratch:HI 2 \"=X,xy\"))]\n   \"TARGET_RELAX && !TARGET_M6812\"\n   \"*\n {\n@@ -3361,7 +3389,7 @@\n       return \\\"\\\";\n     }\n   CC_STATUS_INIT;\n-  if (which_alternative == 0)\n+  if (which_alternative == 1)\n     {\n       rtx ops[3];\n \n@@ -3449,10 +3477,10 @@\n   \"\")\n \n (define_insn \"*iorqi3_mem\"\n-  [(set (match_operand:QI 0 \"memory_operand\" \"=Q,R\")\n+  [(set (match_operand:QI 0 \"memory_operand\" \"=R,Q\")\n \t(ior:QI (match_dup 0)\n \t        (match_operand:QI 1 \"const_int_operand\" \"\")))\n-   (clobber (match_scratch:HI 2 \"=xy,X\"))]\n+   (clobber (match_scratch:HI 2 \"=X,xy\"))]\n   \"TARGET_RELAX && !TARGET_M6812\"\n   \"*\n {\n@@ -3463,7 +3491,7 @@\n       cc_status = cc_prev_status;\n       return \\\"\\\";\n     }\n-  if (which_alternative == 0)\n+  if (which_alternative == 1)\n     {\n       rtx ops[3];\n \n@@ -4587,10 +4615,10 @@\n    \"\")\n \n (define_insn \"*ashlsi3_const1\"\n-  [(set (match_operand:SI 0 \"non_push_operand\" \"=D,D,m,!*u,?*um\")\n-\t(ashift:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,*um,0,0,*um\")\n+  [(set (match_operand:SI 0 \"non_push_operand\" \"=D,D,D,m,*u\")\n+\t(ashift:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,m,*u,m,*u\")\n \t           (const_int 1)))\n-   (clobber (match_scratch:HI 2 \"=X,X,&d,&d,&d\"))]\n+   (clobber (match_scratch:HI 2 \"=X,X,X,&d,&d\"))]\n    \"\"\n    \"*\n {\n@@ -5339,10 +5367,10 @@\n     #\")\n \n (define_insn \"*lshrsi3_const1\"\n-  [(set (match_operand:SI 0 \"non_push_operand\" \"=D,m,*u\")\n-\t(lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"D*um,*um,*um\")\n+  [(set (match_operand:SI 0 \"non_push_operand\" \"=D,D,D,m,*u\")\n+\t(lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,m,*u,m,*u\")\n \t             (const_int 1)))\n-   (clobber (match_scratch:HI 2 \"=X,&d,&d\"))]\n+   (clobber (match_scratch:HI 2 \"=X,X,X,&d,&d\"))]\n    \"\"\n    \"*\n {"}]}