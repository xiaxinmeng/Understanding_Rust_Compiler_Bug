{"sha": "bfa9b58039ceacb1bae803fbbfb049b93540f2a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZhOWI1ODAzOWNlYWNiMWJhZTgwM2ZiYmZiMDQ5YjkzNTQwZjJhNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-02T19:27:25Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-02T19:27:25Z"}, "message": "merge.sh: Add files, add revision option, handle middle dot.\n\nFrom-SVN: r181937", "tree": {"sha": "a7d9295b44f2312e0262b6f8f72055204cc6de2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7d9295b44f2312e0262b6f8f72055204cc6de2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfa9b58039ceacb1bae803fbbfb049b93540f2a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfa9b58039ceacb1bae803fbbfb049b93540f2a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfa9b58039ceacb1bae803fbbfb049b93540f2a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfa9b58039ceacb1bae803fbbfb049b93540f2a7/comments", "author": null, "committer": null, "parents": [{"sha": "b3c85d792d9ab861fb5c44c4569729204ef64470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c85d792d9ab861fb5c44c4569729204ef64470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3c85d792d9ab861fb5c44c4569729204ef64470"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "638182b7c9a3b9d1d0bbecd47313fac042c91b29", "filename": "libgo/merge.sh", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfa9b58039ceacb1bae803fbbfb049b93540f2a7/libgo%2Fmerge.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfa9b58039ceacb1bae803fbbfb049b93540f2a7/libgo%2Fmerge.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmerge.sh?ref=bfa9b58039ceacb1bae803fbbfb049b93540f2a7", "patch": "@@ -25,10 +25,15 @@ if ! test -f MERGE; then\n   exit 1\n fi\n \n-if test $# -ne 1; then\n-  echo 1>&2 \"merge.sh: Usage: merge.sh mercurial-repository\"\n+rev=weekly\n+case $# in\n+1) ;;\n+2) rev=$2 ;;\n+*)\n+  echo 1>&2 \"merge.sh: Usage: merge.sh mercurial-repository [revision]\"\n   exit 1\n-fi\n+  ;;\n+esac\n \n repository=$1\n \n@@ -38,9 +43,9 @@ rm -rf ${OLDDIR}\n hg clone -r ${old_rev} ${repository} ${OLDDIR}\n \n rm -rf ${NEWDIR}\n-hg clone -u weekly ${repository} ${NEWDIR}\n+hg clone -u ${rev} ${repository} ${NEWDIR}\n \n-new_rev=`cd ${NEWDIR} && hg log -r weekly | sed 1q | sed -e 's/.*://'`\n+new_rev=`cd ${NEWDIR} && hg log -r ${rev} | sed 1q | sed -e 's/.*://'`\n \n merge() {\n   name=$1\n@@ -146,12 +151,33 @@ done\n   done\n done\n \n-runtime=\"goc2c.c mcache.c mcentral.c mfinal.c mfixalloc.c mgc0.c mheap.c msize.c malloc.h malloc.goc mprof.goc\"\n+runtime=\"chan.c cpuprof.c goc2c.c lock_futex.c lock_sema.c mcache.c mcentral.c mfinal.c mfixalloc.c mgc0.c mheap.c msize.c proc.c runtime.c runtime.h malloc.h malloc.goc mprof.goc runtime1.goc sema.goc sigqueue.goc string.goc\"\n for f in $runtime; do\n   oldfile=${OLDDIR}/src/pkg/runtime/$f\n-  newfile=${NEWDIR}/src/pkg/runtime/$f\n-  libgofile=runtime/$f\n-  merge $f ${oldfile} ${newfile} ${libgofile}\n+  if test -f ${oldfile}; then\n+    sed -e 's/\u00b7/_/g' < ${oldfile} > ${oldfile}.tmp\n+    oldfile=${oldfile}.tmp\n+    newfile=${NEWDIR}/src/pkg/runtime/$f\n+    sed -e 's/\u00b7/_/g' < ${newfile} > ${newfile}.tmp\n+    newfile=${newfile}.tmp\n+    libgofile=runtime/$f\n+    merge $f ${oldfile} ${newfile} ${libgofile}\n+  fi\n+done\n+\n+runtime2=\"linux/thread.c thread-linux.c linux/mem.c mem.c\"\n+echo $runtime2 | while read from; do\n+  read to\n+  oldfile=${OLDDIR}/src/pkg/runtime/$from\n+  if test -f ${oldfile}; then\n+    sed -e 's/\u00b7/_/g' < ${oldfile} > ${oldfile}.tmp\n+    oldfile=${oldfile}.tmp\n+    newfile=${NEWDIR}/src/pkg/runtime/$from\n+    sed -e 's/\u00b7/_/g' < ${newfile} > ${newfile}.tmp\n+    newfile=${newfile}.tmp\n+    libgofile=runtime/$to\n+    merge $f ${oldfile} ${newfile} ${libgofile}\n+  fi\n done\n \n (cd ${OLDDIR}/src/pkg && find . -name '*.go' -print) | while read f; do"}]}