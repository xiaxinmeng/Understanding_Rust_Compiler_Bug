{"sha": "62bc00e258331aeba39f47e9fee275f4ba5b7956", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJiYzAwZTI1ODMzMWFlYmEzOWY0N2U5ZmVlMjc1ZjRiYTViNzk1Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-03-27T16:32:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-03-27T16:32:28Z"}, "message": "re PR tree-optimization/32810 (Not folding of const element for goto)\n\n2008-03-27  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/32810\n\t* tree-ssa-ccp.c (get_symbol_constant_value): Strip useless\n\tconversions from DECL_INITIAL.\n\t(fold_const_aggregate_ref): Likewise from constructor elements.\n\n\t* gcc.dg/tree-ssa/ssa-ccp-18.c: New testcase.\n\nFrom-SVN: r133645", "tree": {"sha": "c628fc1d3e3534745082337d622e3b846f62f870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c628fc1d3e3534745082337d622e3b846f62f870"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62bc00e258331aeba39f47e9fee275f4ba5b7956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62bc00e258331aeba39f47e9fee275f4ba5b7956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62bc00e258331aeba39f47e9fee275f4ba5b7956", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62bc00e258331aeba39f47e9fee275f4ba5b7956/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "525521b6ddb69a9f0478704e0eec2231c0923d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525521b6ddb69a9f0478704e0eec2231c0923d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/525521b6ddb69a9f0478704e0eec2231c0923d2d"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "215f0b26728755b2a786a206119b4d03c3c1dae1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bc00e258331aeba39f47e9fee275f4ba5b7956/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bc00e258331aeba39f47e9fee275f4ba5b7956/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62bc00e258331aeba39f47e9fee275f4ba5b7956", "patch": "@@ -1,3 +1,10 @@\n+2008-03-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32810\n+\t* tree-ssa-ccp.c (get_symbol_constant_value): Strip useless\n+\tconversions from DECL_INITIAL.\n+\t(fold_const_aggregate_ref): Likewise from constructor elements.\n+\n 2008-03-27  Zdenek Dvorak  <ook@ucw.cz>\n \n \t* tree-affine.h (aff_combination_expand): Declare."}, {"sha": "abaed69e399269f75234b99e9cef42a9656649a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bc00e258331aeba39f47e9fee275f4ba5b7956/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bc00e258331aeba39f47e9fee275f4ba5b7956/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62bc00e258331aeba39f47e9fee275f4ba5b7956", "patch": "@@ -1,3 +1,8 @@\n+2008-03-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32810\n+\t* gcc.dg/tree-ssa/ssa-ccp-18.c: New testcase.\n+\n 2008-03-27  Douglas Gregor  <doug.gregor@gmail.com>\n \n        * g++.dg/cpp0x/variadic91.C: New."}, {"sha": "cbe12598b46a5506bb66a9c63fb32656552ccab9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-18.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bc00e258331aeba39f47e9fee275f4ba5b7956/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bc00e258331aeba39f47e9fee275f4ba5b7956/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-18.c?ref=62bc00e258331aeba39f47e9fee275f4ba5b7956", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-ccp1\" } */\n+\n+/* Check that we constant propagate &&c into the goto and remove\n+   the unreachable BBs.  */\n+\n+void a(int*);  void b(int*);  void c(int*);  void d(int*);\n+void func2(int* val)\n+{\n+  const void *const labels[] = { &&a, &&b, &&c, &&d };\n+  goto *labels[2];\n+  a: a(val);\n+  b: b(val);\n+  c: c(val);\n+  d: d(val);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"a \\\\\\(\" \"ccp1\" } } */\n+/* { dg-final { scan-tree-dump-not \"b \\\\\\(\" \"ccp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"ccp1\" } } */"}, {"sha": "9bba5053e60fa27ade004161caf83d86ca11bb4c", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bc00e258331aeba39f47e9fee275f4ba5b7956/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bc00e258331aeba39f47e9fee275f4ba5b7956/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=62bc00e258331aeba39f47e9fee275f4ba5b7956", "patch": "@@ -278,9 +278,12 @@ get_symbol_constant_value (tree sym)\n       && !MTAG_P (sym))\n     {\n       tree val = DECL_INITIAL (sym);\n-      if (val\n-\t  && is_gimple_min_invariant (val))\n-\treturn val;\n+      if (val)\n+\t{\n+\t  STRIP_USELESS_TYPE_CONVERSION (val);\n+\t  if (is_gimple_min_invariant (val))\n+\t    return val;\n+\t}\n       /* Variables declared 'const' without an initializer\n \t have zero as the intializer if they may not be\n \t overridden at link or run time.  */\n@@ -1104,7 +1107,10 @@ fold_const_aggregate_ref (tree t)\n       /* Whoo-hoo!  I'll fold ya baby.  Yeah!  */\n       FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (ctor), cnt, cfield, cval)\n \tif (tree_int_cst_equal (cfield, idx))\n-\t  return cval;\n+\t  {\n+\t    STRIP_USELESS_TYPE_CONVERSION (cval);\n+\t    return cval;\n+\t  }\n       break;\n \n     case COMPONENT_REF:\n@@ -1144,7 +1150,10 @@ fold_const_aggregate_ref (tree t)\n \tif (cfield == field\n \t    /* FIXME: Handle bit-fields.  */\n \t    && ! DECL_BIT_FIELD (cfield))\n-\t  return cval;\n+\t  {\n+\t    STRIP_USELESS_TYPE_CONVERSION (cval);\n+\t    return cval;\n+\t  }\n       break;\n \n     case REALPART_EXPR:"}]}