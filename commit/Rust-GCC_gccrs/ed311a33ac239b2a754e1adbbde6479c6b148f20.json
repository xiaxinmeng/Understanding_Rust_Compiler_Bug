{"sha": "ed311a33ac239b2a754e1adbbde6479c6b148f20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQzMTFhMzNhYzIzOWIyYTc1NGUxYWRiYmRlNjQ3OWM2YjE0OGYyMA==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2003-09-09T06:40:46Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-09-09T06:40:46Z"}, "message": "m68k.c (m68k_output_function_prologue): Simplify by removing redundant variable cfa_store_offset.\n\n\t* config/m68k/m68k.c (m68k_output_function_prologue): Simplify\n\tby removing redundant variable cfa_store_offset.\n\nFrom-SVN: r71230", "tree": {"sha": "ff876de98ee6dafb2349d0402f6841703f14d69e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff876de98ee6dafb2349d0402f6841703f14d69e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed311a33ac239b2a754e1adbbde6479c6b148f20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed311a33ac239b2a754e1adbbde6479c6b148f20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed311a33ac239b2a754e1adbbde6479c6b148f20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed311a33ac239b2a754e1adbbde6479c6b148f20/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e517f636177b2379b1bd805efac97601f96062fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e517f636177b2379b1bd805efac97601f96062fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e517f636177b2379b1bd805efac97601f96062fc"}], "stats": {"total": 43, "additions": 18, "deletions": 25}, "files": [{"sha": "bd9c479fb39044da8fb95f889e581ce6a954189d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed311a33ac239b2a754e1adbbde6479c6b148f20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed311a33ac239b2a754e1adbbde6479c6b148f20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed311a33ac239b2a754e1adbbde6479c6b148f20", "patch": "@@ -1,3 +1,8 @@\n+2003-09-08  Bernardo Innocenti  <bernie@develer.com>\n+\n+\t* config/m68k/m68k.c (m68k_output_function_prologue): Simplify\n+\tby removing redundant variable cfa_store_offset.\n+\n 2003-09-08  Mark Mitchell  <mark@codesourcery.com>\n \n \t* langhooks-def.h (lhd_register_builtin_type): New function."}, {"sha": "ccdedce6fa9c5db63af64d7421c99a111041bb50", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 13, "deletions": 25, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed311a33ac239b2a754e1adbbde6479c6b148f20/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed311a33ac239b2a754e1adbbde6479c6b148f20/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=ed311a33ac239b2a754e1adbbde6479c6b148f20", "patch": "@@ -262,7 +262,6 @@ m68k_output_function_prologue (FILE *stream, HOST_WIDE_INT size)\n   int num_saved_regs = 0;\n   HOST_WIDE_INT fsize = (size + 3) & -4;\n   HOST_WIDE_INT cfa_offset = INCOMING_FRAME_SP_OFFSET;\n-  HOST_WIDE_INT cfa_store_offset = cfa_offset;\n   \n   /* If the stack limit is a symbol, we can check it here,\n      before actually allocating the space.  */\n@@ -330,11 +329,10 @@ m68k_output_function_prologue (FILE *stream, HOST_WIDE_INT size)\n \t{\n \t  char *l;\n           l = (char *) dwarf2out_cfi_label ();   \n-\t  cfa_store_offset += 4;\n-\t  cfa_offset = cfa_store_offset;\n-\t  dwarf2out_reg_save (l, FRAME_POINTER_REGNUM, -cfa_store_offset);\n+\t  cfa_offset += 4;\n+\t  dwarf2out_reg_save (l, FRAME_POINTER_REGNUM, -cfa_offset);\n \t  dwarf2out_def_cfa (l, FRAME_POINTER_REGNUM, cfa_offset);\n-\t  cfa_store_offset += fsize;\n+\t  cfa_offset += fsize;\n \t}\n     }\n   else if (fsize)\n@@ -406,8 +404,7 @@ m68k_output_function_prologue (FILE *stream, HOST_WIDE_INT size)\n \t}\n       if (dwarf2out_do_frame ())\n \t{\n-\t  cfa_store_offset += fsize + 4;\n-\t  cfa_offset = cfa_store_offset;\n+\t  cfa_offset += fsize + 4;\n \t  dwarf2out_def_cfa (\"\", STACK_POINTER_REGNUM, cfa_offset);\n \t}\n     }\n@@ -431,16 +428,13 @@ m68k_output_function_prologue (FILE *stream, HOST_WIDE_INT size)\n \t      char *l = (char *) dwarf2out_cfi_label ();\n \t      int n_regs;\n \n-\t      cfa_store_offset += num_saved_regs * 12;\n+\t      cfa_offset += num_saved_regs * 12;\n \t      if (! frame_pointer_needed)\n-\t\t{\n-\t\t  cfa_offset = cfa_store_offset;\n-\t\t  dwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n-\t\t}\n+\t\tdwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n \t      for (regno = 16, n_regs = 0; regno < 24; regno++)\n \t\tif (mask & (1 << (regno - 16)))\n \t\t  dwarf2out_reg_save (l, regno,\n-\t\t\t\t      -cfa_store_offset + n_regs++ * 12);\n+\t\t\t\t      -cfa_offset + n_regs++ * 12);\n \t    }\n \t}\n       mask = 0;\n@@ -495,13 +489,10 @@ m68k_output_function_prologue (FILE *stream, HOST_WIDE_INT size)\n \t      {\n \t\tchar *l = (char *) dwarf2out_cfi_label ();\n \n-\t\tcfa_store_offset += 4;\n+\t\tcfa_offset += 4;\n  \t\tif (! frame_pointer_needed)\n- \t\t  {\n- \t\t    cfa_offset = cfa_store_offset;\n- \t\t    dwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n- \t\t  }\n- \t\tdwarf2out_reg_save (l, 15 - i, -cfa_store_offset);\n+ \t\t  dwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n+ \t\tdwarf2out_reg_save (l, 15 - i, -cfa_offset);\n \t      }\n \t  }\n     }\n@@ -547,16 +538,13 @@ m68k_output_function_prologue (FILE *stream, HOST_WIDE_INT size)\n \t  char *l = (char *) dwarf2out_cfi_label ();\n \t  int n_regs;\n \n-\t  cfa_store_offset += num_saved_regs * 4;\n+\t  cfa_offset += num_saved_regs * 4;\n \t  if (! frame_pointer_needed)\n-\t    {\n-\t      cfa_offset = cfa_store_offset;\n-\t      dwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n-\t    }\n+\t    dwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n \t  for (regno = 0, n_regs = 0; regno < 16; regno++)\n \t    if (mask & (1 << (15 - regno)))\n \t      dwarf2out_reg_save (l, regno,\n-\t\t\t\t  -cfa_store_offset + n_regs++ * 4);\n+\t\t\t\t  -cfa_offset + n_regs++ * 4);\n \t}\n     }\n   if (flag_pic && current_function_uses_pic_offset_table)"}]}