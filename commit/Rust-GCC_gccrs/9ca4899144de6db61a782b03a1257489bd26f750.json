{"sha": "9ca4899144de6db61a782b03a1257489bd26f750", "node_id": "C_kwDOANBUbNoAKDljYTQ4OTkxNDRkZTZkYjYxYTc4MmIwM2ExMjU3NDg5YmQyNmY3NTA", "commit": {"author": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2022-12-29T21:55:21Z"}, "committer": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2023-01-12T00:02:42Z"}, "message": "preprocessor: Don't register pragmas in directives-only mode [PR108244]\n\nlibcpp's directives-only mode does not expect deferred pragmas to be\nregistered, but to date the c-family registration process has not checked for\nthis case. That issue became more visible since r13-1544, which added the\ncommonly used GCC diagnostic pragmas to the set of those registered in\npreprocessing modes. Fix it by checking for directives-only mode in\nc-family/c-pragma.cc.\n\ngcc/c-family/ChangeLog:\n\n\tPR preprocessor/108244\n\t* c-pragma.cc (c_register_pragma_1): Don't attempt to register any\n\tdeferred pragmas if -fdirectives-only.\n\t(init_pragma): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/cpp/pr108244-1.c: New test.\n\t* c-c++-common/cpp/pr108244-2.c: New test.\n\t* c-c++-common/gomp/pr108244-3.c: New test.", "tree": {"sha": "a1320804b3636dd81ad2ca9d73a89ec84336f53a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1320804b3636dd81ad2ca9d73a89ec84336f53a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ca4899144de6db61a782b03a1257489bd26f750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ca4899144de6db61a782b03a1257489bd26f750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ca4899144de6db61a782b03a1257489bd26f750", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ca4899144de6db61a782b03a1257489bd26f750/comments", "author": null, "committer": null, "parents": [{"sha": "688fc162b76dc6747a30fcfd470f4770da0f4924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688fc162b76dc6747a30fcfd470f4770da0f4924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688fc162b76dc6747a30fcfd470f4770da0f4924"}], "stats": {"total": 71, "additions": 46, "deletions": 25}, "files": [{"sha": "91fabf0a513344b60f006362fe5e578421f9bcb1", "filename": "gcc/c-family/c-pragma.cc", "status": "modified", "additions": 31, "deletions": 25, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ca4899144de6db61a782b03a1257489bd26f750/gcc%2Fc-family%2Fc-pragma.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ca4899144de6db61a782b03a1257489bd26f750/gcc%2Fc-family%2Fc-pragma.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.cc?ref=9ca4899144de6db61a782b03a1257489bd26f750", "patch": "@@ -1647,7 +1647,8 @@ c_register_pragma_1 (const char *space, const char *name,\n \n   if (flag_preprocess_only)\n     {\n-      if (!(allow_expansion || ihandler.early_handler.handler_1arg))\n+      if (cpp_get_options (parse_in)->directives_only\n+\t  || !(allow_expansion || ihandler.early_handler.handler_1arg))\n \treturn;\n \n       pragma_pp_data pp_data;\n@@ -1811,34 +1812,39 @@ c_pp_invoke_early_pragma_handler (unsigned int id)\n void\n init_pragma (void)\n {\n-  if (flag_openacc)\n-    {\n-      const int n_oacc_pragmas = ARRAY_SIZE (oacc_pragmas);\n-      int i;\n-\n-      for (i = 0; i < n_oacc_pragmas; ++i)\n-\tcpp_register_deferred_pragma (parse_in, \"acc\", oacc_pragmas[i].name,\n-\t\t\t\t      oacc_pragmas[i].id, true, true);\n-    }\n \n-  if (flag_openmp)\n+  if (!cpp_get_options (parse_in)->directives_only)\n     {\n-      const int n_omp_pragmas = ARRAY_SIZE (omp_pragmas);\n-      int i;\n+      if (flag_openacc)\n+\t{\n+\t  const int n_oacc_pragmas = ARRAY_SIZE (oacc_pragmas);\n+\t  int i;\n \n-      for (i = 0; i < n_omp_pragmas; ++i)\n-\tcpp_register_deferred_pragma (parse_in, \"omp\", omp_pragmas[i].name,\n-\t\t\t\t      omp_pragmas[i].id, true, true);\n-    }\n-  if (flag_openmp || flag_openmp_simd)\n-    {\n-      const int n_omp_pragmas_simd = sizeof (omp_pragmas_simd)\n-\t\t\t\t     / sizeof (*omp_pragmas);\n-      int i;\n+\t  for (i = 0; i < n_oacc_pragmas; ++i)\n+\t    cpp_register_deferred_pragma (parse_in, \"acc\", oacc_pragmas[i].name,\n+\t\t\t\t\t  oacc_pragmas[i].id, true, true);\n+\t}\n+\n+      if (flag_openmp)\n+\t{\n+\t  const int n_omp_pragmas = ARRAY_SIZE (omp_pragmas);\n+\t  int i;\n \n-      for (i = 0; i < n_omp_pragmas_simd; ++i)\n-\tcpp_register_deferred_pragma (parse_in, \"omp\", omp_pragmas_simd[i].name,\n-\t\t\t\t      omp_pragmas_simd[i].id, true, true);\n+\t  for (i = 0; i < n_omp_pragmas; ++i)\n+\t    cpp_register_deferred_pragma (parse_in, \"omp\", omp_pragmas[i].name,\n+\t\t\t\t\t  omp_pragmas[i].id, true, true);\n+\t}\n+      if (flag_openmp || flag_openmp_simd)\n+\t{\n+\t  const int n_omp_pragmas_simd\n+\t    = sizeof (omp_pragmas_simd) / sizeof (*omp_pragmas);\n+\t  int i;\n+\n+\t  for (i = 0; i < n_omp_pragmas_simd; ++i)\n+\t    cpp_register_deferred_pragma (parse_in, \"omp\",\n+\t\t\t\t\t  omp_pragmas_simd[i].name,\n+\t\t\t\t\t  omp_pragmas_simd[i].id, true, true);\n+\t}\n     }\n \n   if (!flag_preprocess_only)"}, {"sha": "1678004a4d95178a0152d00dbda9cf9a963db118", "filename": "gcc/testsuite/c-c++-common/cpp/pr108244-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ca4899144de6db61a782b03a1257489bd26f750/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr108244-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ca4899144de6db61a782b03a1257489bd26f750/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr108244-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr108244-1.c?ref=9ca4899144de6db61a782b03a1257489bd26f750", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do preprocess } */\n+/* { dg-additional-options \"-fdirectives-only\" } */\n+#pragma GCC diagnostic push\n+#ifdef t\n+#endif"}, {"sha": "017682ad18626d3d30d914352036e66bf8be5d9d", "filename": "gcc/testsuite/c-c++-common/cpp/pr108244-2.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ca4899144de6db61a782b03a1257489bd26f750/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr108244-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ca4899144de6db61a782b03a1257489bd26f750/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr108244-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr108244-2.c?ref=9ca4899144de6db61a782b03a1257489bd26f750", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do preprocess } */\n+/* { dg-additional-options \"-fdirectives-only\" } */\n+#pragma message \"hello\"\n+#ifdef t\n+#endif"}, {"sha": "e99fd52a313ad8c6e498fac52174dbfc37a77c15", "filename": "gcc/testsuite/c-c++-common/gomp/pr108244-3.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ca4899144de6db61a782b03a1257489bd26f750/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr108244-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ca4899144de6db61a782b03a1257489bd26f750/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr108244-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr108244-3.c?ref=9ca4899144de6db61a782b03a1257489bd26f750", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do preprocess } */\n+/* { dg-additional-options \"-fdirectives-only -fopenmp\" } */\n+#pragma omp parallel\n+#ifdef t\n+#endif"}]}