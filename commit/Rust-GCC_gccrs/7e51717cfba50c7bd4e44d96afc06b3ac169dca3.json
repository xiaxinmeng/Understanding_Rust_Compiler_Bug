{"sha": "7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U1MTcxN2NmYmE1MGM3YmQ0ZTQ0ZDk2YWZjMDZiM2FjMTY5ZGNhMw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-07-06T20:42:56Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-07-06T20:42:56Z"}, "message": "stmt.c: Convert remaining prototypes to ISO C90.\n\n\t* stmt.c: Convert remaining prototypes to ISO C90.\n\t* cfglayout.c: Likewise.\n\t* dbxout.c: Likewise.\n\t* gcc.c: Likewise.\n\t* genemit.c: Likewise.\n\nFrom-SVN: r69015", "tree": {"sha": "3f6751e6128a794a9cd52796dc7b26e75a461d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f6751e6128a794a9cd52796dc7b26e75a461d2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "ceee443808e6dc8643342adbb4aa00fb949ac733", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "patch": "@@ -1,5 +1,11 @@\n 2003-07-06  Andreas Jaeger  <aj@suse.de>\n \n+\t* stmt.c: Convert remaining prototypes to ISO C90.\n+\t* cfglayout.c: Likewise.\n+\t* dbxout.c: Likewise.\n+\t* gcc.c: Likewise.\n+\t* genemit.c: Likewise.\n+\n \t* basic-block.h: Convert prototypes to ISO C90.\n \t* c-parse.in: Likewise.\n \t* c-pragma.h: Likewise."}, {"sha": "121e3e0e0f3425b376d27940669278225275a1d4", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "patch": "@@ -1084,8 +1084,7 @@ cfg_layout_duplicate_bb (basic_block bb, edge e)\n }\n \f\n void\n-cfg_layout_initialize_rbi (bb)\n-     basic_block bb;\n+cfg_layout_initialize_rbi (basic_block bb)\n {\n   if (bb->rbi)\n     abort ();\n@@ -1097,7 +1096,7 @@ cfg_layout_initialize_rbi (bb)\n    CFG layout changes.  It keeps LOOPS up-to-date if not null.  */\n \n void\n-cfg_layout_initialize ()\n+cfg_layout_initialize (void)\n {\n   basic_block bb;\n "}, {"sha": "0fb46a924f34bacd49c568588949a5750e5dab1e", "filename": "gcc/dbxout.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "patch": "@@ -574,7 +574,7 @@ emit_bincl_stab (const char *name)\n /* If there are pending bincls then it is time to emit all of them.  */\n \n static inline void\n-emit_pending_bincls_if_required ()\n+emit_pending_bincls_if_required (void)\n {\n   if (pending_bincls)\n     emit_pending_bincls ();\n@@ -583,7 +583,7 @@ emit_pending_bincls_if_required ()\n /* Emit all pending bincls.  */\n \n static void\n-emit_pending_bincls ()\n+emit_pending_bincls (void)\n {\n   struct dbx_file *f = current_file;\n \n@@ -616,7 +616,7 @@ emit_pending_bincls ()\n #else\n \n static inline void\n-emit_pending_bincls_if_required () {}\n+emit_pending_bincls_if_required (void) {}\n #endif\n \n /* Change to reading from a new source file.  Generate a N_BINCL stab.  */"}, {"sha": "0f59b27ba2d9a1b8684bc8ea4c32c9a2cf94adcc", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "patch": "@@ -1561,7 +1561,7 @@ init_gcc_specs (struct obstack *obstack, const char *shared_name,\n /* Initialize the specs lookup routines.  */\n \n static void\n-init_spec ()\n+init_spec (void)\n {\n   struct spec_list *next = (struct spec_list *) 0;\n   struct spec_list *sl   = (struct spec_list *) 0;\n@@ -1802,7 +1802,7 @@ static const char *programname;\n /* Allocate the argument vector.  */\n \n static void\n-alloc_args ()\n+alloc_args (void)\n {\n   argbuf_length = 10;\n   argbuf = (const char **) xmalloc (argbuf_length * sizeof (const char *));"}, {"sha": "ea787d24c003416741689404b216eb5db5b5f6b4", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "patch": "@@ -671,7 +671,7 @@ gen_split (rtx split)\n    the end of the vector.  */\n \n static void\n-output_add_clobbers ()\n+output_add_clobbers (void)\n {\n   struct clobber_pat *clobber;\n   struct clobber_ent *ent;"}, {"sha": "493c87a1f860bcb478e83970b65e85e4fc0e194b", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e51717cfba50c7bd4e44d96afc06b3ac169dca3/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=7e51717cfba50c7bd4e44d96afc06b3ac169dca3", "patch": "@@ -5130,7 +5130,8 @@ struct case_bit_test\n \n /* Determine whether \"1 << x\" is relatively cheap in word_mode.  */\n \n-static bool lshift_cheap_p ()\n+static\n+bool lshift_cheap_p (void)\n {\n   static bool init = false;\n   static bool cheap = true;\n@@ -5150,9 +5151,8 @@ static bool lshift_cheap_p ()\n    number of case nodes, i.e. the node with the most cases gets\n    tested first.  */\n \n-static int case_bit_test_cmp (p1, p2)\n-     const void *p1;\n-     const void *p2;\n+static\n+int case_bit_test_cmp (const void *p1, const void *p2)\n {\n   const struct case_bit_test *d1 = p1;\n   const struct case_bit_test *d2 = p2;"}]}