{"sha": "5c542b4a1934271e41e4156d2a78f1ea80baf2a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM1NDJiNGExOTM0MjcxZTQxZTQxNTZkMmE3OGYxZWE4MGJhZjJhMQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-05-18T05:47:46Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-05-18T05:47:46Z"}, "message": "std_valarray.h (valarray<>::operator[] const): Return a const reference.\n\n        * include/bits/std_valarray.h (valarray<>::operator[] const):\n        Return a const reference.\n        * testsuite/26_numerics/valarray_const_bracket.cc: New test.\n\nFrom-SVN: r42245", "tree": {"sha": "c967660c82a2fb3597f0b28d0a6f0741086dce8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c967660c82a2fb3597f0b28d0a6f0741086dce8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c542b4a1934271e41e4156d2a78f1ea80baf2a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c542b4a1934271e41e4156d2a78f1ea80baf2a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c542b4a1934271e41e4156d2a78f1ea80baf2a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c542b4a1934271e41e4156d2a78f1ea80baf2a1/comments", "author": null, "committer": null, "parents": [{"sha": "a75b7b0bd7d15075936cce6902742d1a495b506b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a75b7b0bd7d15075936cce6902742d1a495b506b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a75b7b0bd7d15075936cce6902742d1a495b506b"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "a250dfd122e84acb2032d5b4c48a387af4b3094b", "filename": "libstdc++-v3/include/bits/std_valarray.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c542b4a1934271e41e4156d2a78f1ea80baf2a1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_valarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c542b4a1934271e41e4156d2a78f1ea80baf2a1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_valarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_valarray.h?ref=5c542b4a1934271e41e4156d2a78f1ea80baf2a1", "patch": "@@ -120,7 +120,8 @@ namespace std\n       \toperator= (const _Expr<_Dom,_Tp>&);\n \n       // _lib.valarray.access_ element access:\n-      _Tp                 operator[](size_t) const;\n+      // XXX: LWG to be resolved.\n+      const _Tp&                 operator[](size_t) const;\n       _Tp&                operator[](size_t);\t\t\n       // _lib.valarray.sub_ subset operations:\n       _Expr<_SClos<_ValArray,_Tp>, _Tp> operator[](slice) const;\n@@ -236,7 +237,7 @@ namespace std\n \n   \n   template<typename _Tp>\n-  inline _Tp\n+  inline const _Tp&\n   valarray<_Tp>::operator[] (size_t __i) const\n   { return _M_data[__i]; }\n "}, {"sha": "53819f43ad192b4dac7f3616d6af462f080f7c21", "filename": "libstdc++-v3/testsuite/26_numerics/valarray_const_bracket.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c542b4a1934271e41e4156d2a78f1ea80baf2a1/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray_const_bracket.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c542b4a1934271e41e4156d2a78f1ea80baf2a1/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray_const_bracket.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray_const_bracket.cc?ref=5c542b4a1934271e41e4156d2a78f1ea80baf2a1", "patch": "@@ -0,0 +1,48 @@\n+// 20010518 gdr\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <valarray>\n+\n+// dg-do compile\n+\n+template<typename P>\n+  void copy(P, std::size_t) { }\n+\n+template<typename T>\n+  void test(const std::valarray<T>& v)\n+  {\n+     copy(&v[0], v.size());\n+  }\n+\n+int main()\n+{\n+  std::valarray<double> v(190);\n+  test(v);\n+  return 0;\n+}"}]}