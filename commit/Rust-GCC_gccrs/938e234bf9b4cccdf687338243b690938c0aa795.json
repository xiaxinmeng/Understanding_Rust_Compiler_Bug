{"sha": "938e234bf9b4cccdf687338243b690938c0aa795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM4ZTIzNGJmOWI0Y2NjZGY2ODczMzgyNDNiNjkwOTM4YzBhYTc5NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-09-01T19:41:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-09-01T19:41:40Z"}, "message": "ns32k.h (TRANSFER_FROM_TRAMPOLINE): Remove.\n\n        * config/ns32k/ns32k.h (TRANSFER_FROM_TRAMPOLINE): Remove.\n        (TRAMPOLINE_TEMPLATE): Merge code from __trampoline inline.\n\nFrom-SVN: r86922", "tree": {"sha": "74f37cf68201a9cf74e25c31e80183fe99fc5306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74f37cf68201a9cf74e25c31e80183fe99fc5306"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/938e234bf9b4cccdf687338243b690938c0aa795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938e234bf9b4cccdf687338243b690938c0aa795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938e234bf9b4cccdf687338243b690938c0aa795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938e234bf9b4cccdf687338243b690938c0aa795/comments", "author": null, "committer": null, "parents": [{"sha": "d0879c9868d32770f13233ccf67752f16e97a8ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0879c9868d32770f13233ccf67752f16e97a8ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0879c9868d32770f13233ccf67752f16e97a8ea"}], "stats": {"total": 50, "additions": 21, "deletions": 29}, "files": [{"sha": "220d75d89bad2ba1033a8fef859ac44a048dd883", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938e234bf9b4cccdf687338243b690938c0aa795/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938e234bf9b4cccdf687338243b690938c0aa795/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=938e234bf9b4cccdf687338243b690938c0aa795", "patch": "@@ -1,3 +1,8 @@\n+2004-09-01  Richard Henderson  <rth@redhat.com>\n+\n+        * config/ns32k/ns32k.h (TRANSFER_FROM_TRAMPOLINE): Remove.\n+        (TRAMPOLINE_TEMPLATE): Merge code from __trampoline inline.\n+\n 2004-09-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libgcc-std.ver (GCC_3.4.2): Export also __trampoline_setup."}, {"sha": "93b56faa9bb3c0b19dfb64ff8f5fd655201831eb", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 16, "deletions": 29, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938e234bf9b4cccdf687338243b690938c0aa795/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938e234bf9b4cccdf687338243b690938c0aa795/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=938e234bf9b4cccdf687338243b690938c0aa795", "patch": "@@ -760,20 +760,25 @@ enum reg_class\n    of a trampoline, leaving space for the variable parts.  */\n \n /* On the 32k, the trampoline looks like this:\n-     addr  0(pc),r2\n-     jump  @__trampoline\n-     .int STATIC\n-     .int FUNCTION\n-Doing trampolines with a library assist function is easier than figuring\n-out how to do stores to memory in reverse byte order (the way immediate\n-operands on the 32k are stored).  */\n+\n+\taddr    0(pc),r2\n+        movd    16(r2),tos\n+        movd    12(r2),r1\n+        ret     0\n+\t.align 4\n+\t.int STATIC\n+\t.int FUNCTION\n+  \n+   Putting the data in following data is easier than figuring out how to\n+   do stores to memory in reverse byte order (the way immediate operands\n+   on the 32k are stored).  */\n \n #define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\taddr 0(pc),r2\\n\" );\t\t\t\t\t\\\n-  fprintf (FILE, \"\\tjump \" );\t\t\t\t\t\t\\\n-  PUT_ABSOLUTE_PREFIX (FILE);\t\t\t\t\t\t\\\n-  fprintf (FILE, \"__trampoline\\n\" );\t\t\t\t\t\\\n+  fprintf (FILE, \"\\taddr 0(pc),r2\\n\");\t\t\t\t\t\\\n+  fprintf (FILE, \"\\tmovd 16(r2),tos\\n\");\t\t\t\t\\\n+  fprintf (FILE, \"\\tmovd 12(r2),r1\\n\");\t\t\t\t\t\\\n+  fprintf (FILE, \"\\tret 0\\n\");\t\t\t\t\t\t\\\n   assemble_aligned_integer (UNITS_PER_WORD, const0_rtx);\t\t\\\n   assemble_aligned_integer (UNITS_PER_WORD, const0_rtx);\t\t\\\n }\n@@ -791,24 +796,6 @@ operands on the 32k are stored).  */\n   emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 12)), CXT);    \\\n   emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 16)), FNADDR); \\\n }\n-\n-/* This is the library routine that is used\n-   to transfer control from the trampoline\n-   to the actual nested function.  */\n-\n-/* The function name __transfer_from_trampoline is not actually used.\n-   The function definition just permits use of \"asm with operands\"\n-   (though the operand list is empty).  */\n-#define TRANSFER_FROM_TRAMPOLINE\t\\\n-void\t\t\t\t\t\\\n-__transfer_from_trampoline ()\t\t\\\n-{\t\t\t\t\t\\\n-  asm (\".globl __trampoline\");\t\t\\\n-  asm (\"__trampoline:\");\t\t\\\n-  asm (\"movd 16(r2),tos\");\t\t\\\n-  asm (\"movd 12(r2),r1\");\t\t\\\n-  asm (\"ret 0\");\t\t\t\\\n-}\n \f\n /* Addressing modes, and classification of registers for them.  */\n "}]}