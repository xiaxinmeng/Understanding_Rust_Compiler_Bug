{"sha": "810241a5bfdbe0a3921916d3287eba6ef59ab575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEwMjQxYTViZmRiZTBhMzkyMTkxNmQzMjg3ZWJhNmVmNTlhYjU3NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-11T12:25:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-11T12:25:22Z"}, "message": "2014-06-11  Sergey Rybin  <rybin@adacore.com frybin>\n\n\t* gnat_ugn.texi, vms_data.ads: add description of gnatstub -W<par>\n\toption to specify the result file encoding.\n\n2014-06-11  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.ads, sem_ch12.adb: Minor reformatting.\n\t* debug.adb, erroutc.adb: Remove -gnatd.q debug switch.\n\t* lib-xref.adb: Minor reformatting.\n\t* restrict.adb: Minor code reorganization (put routines in\n\talpha order).\n\nFrom-SVN: r211455", "tree": {"sha": "abae9747d4b5ac4bf69f8d9d20381f63a4858c08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abae9747d4b5ac4bf69f8d9d20381f63a4858c08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/810241a5bfdbe0a3921916d3287eba6ef59ab575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810241a5bfdbe0a3921916d3287eba6ef59ab575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/810241a5bfdbe0a3921916d3287eba6ef59ab575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/810241a5bfdbe0a3921916d3287eba6ef59ab575/comments", "author": null, "committer": null, "parents": [{"sha": "2c8d828a5fc1c18ef630ea45ce1ff13638d97918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c8d828a5fc1c18ef630ea45ce1ff13638d97918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c8d828a5fc1c18ef630ea45ce1ff13638d97918"}], "stats": {"total": 255, "additions": 161, "deletions": 94}, "files": [{"sha": "6575396f96d0a657ecf03eb96ffc83ad6f3fb25d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -1,3 +1,16 @@\n+2014-06-11  Sergey Rybin  <rybin@adacore.com frybin>\n+\n+\t* gnat_ugn.texi, vms_data.ads: add description of gnatstub -W<par>\n+\toption to specify the result file encoding.\n+\n+2014-06-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.ads, sem_ch12.adb: Minor reformatting.\n+\t* debug.adb, erroutc.adb: Remove -gnatd.q debug switch.\n+\t* lib-xref.adb: Minor reformatting.\n+\t* restrict.adb: Minor code reorganization (put routines in\n+\talpha order).\n+\n 2014-06-11  Yannick Moy  <moy@adacore.com>\n \n \t* einfo.ads: Minor typo in comment"}, {"sha": "8399a2c99000e186e595f1c1addc819f205b9e0c", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -107,7 +107,7 @@ package body Debug is\n    --  d.n  Print source file names\n    --  d.o  Generate .NET listing of CIL code\n    --  d.p  Enable the .NET CIL verifier\n-   --  d.q  Quit on badly tagged warning message\n+   --  d.q\n    --  d.r  Enable OK_To_Reorder_Components in non-variant records\n    --  d.s  Disable expansion of slice move, use memmove\n    --  d.t  Disable static allocation of library level dispatch tables\n@@ -561,12 +561,6 @@ package body Debug is\n    --       disabled by default and this flag is used to enable it. In the\n    --       future we will reverse this functionality.\n \n-   --  d.q  All warning and info messages are supposed to be tagged with one\n-   --       of the extended warning sequences such as ?? or <x<. The use of a\n-   --       single ? or < is allowed for transitional purposes, but these are\n-   --       intended to disappear. This debug switch makes it fatal to have a\n-   --       warning presented which is not tagged (Program Error is raised).\n-\n    --  d.r  Forces the flag OK_To_Reorder_Components to be set in all record\n    --       base types that have no discriminants.\n "}, {"sha": "d7bc7001c0f0cb314369bfea552e3322ee171c49", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -282,7 +282,8 @@ package Errout is\n    --      status of continuations is determined only by the parent message\n    --      which is being continued. It is allowable to put ? in continuation\n    --      messages, and the usual style is to include it, since it makes it\n-   --      clear that the continuation is part of a warning message.\n+   --      clear that the continuation is part of a warning message, but it is\n+   --      not necessary to go through any computational effort to include it.\n    --\n    --      Note: this usage is obsolete, use ?? ?*? ?$? ?x? ?X? to specify\n    --      the string to be added when Warn_Doc_Switch is set to True. If this"}, {"sha": "eb54a02b710b543210a85fc13dc78edf1833b0da", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -756,14 +756,12 @@ package body Erroutc is\n                end;\n             end if;\n \n-            --  Bomb if untagged warning message and -gnatd.q set\n+            --  Bomb if untagged warning message. This code can be uncommented\n+            --  for debugging when looking for untagged warning messages.\n \n-            if Debug_Flag_Dot_Q\n-              and then Is_Warning_Msg\n-              and then Warning_Msg_Char = ' '\n-            then\n-               raise Program_Error;\n-            end if;\n+            --  if Is_Warning_Msg and then Warning_Msg_Char = ' ' then\n+            --     raise Program_Error;\n+            --  end if;\n \n          --  Unconditional message (! insertion)\n "}, {"sha": "d199b6c1a8898ba8f24e6d4548fbc104eecff497", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -14539,7 +14539,7 @@ is made; this is the default.\n @cindex @option{^--par_threshold^/MAX_PAR^} (@command{gnatpp})\n If the number of parameter specifications is greater than @var{nnn}\n (or equal to @var{nnn} in case of a function), start each specification from\n-a new line. The default for @var{nnn} is 3.\n+a new line. This feature is disabled by default.\n @end table\n \n @node Setting the Source Search Path\n@@ -19520,6 +19520,32 @@ conventions. If this switch is omitted the default name for the body will be\n obtained\n from the argument file name according to the GNAT file naming conventions.\n \n+@item ^-W^/RESULT_ENCODING=^@var{e}\n+@cindex @option{^-W^/RESULT_ENCODING=^} (@command{gnatstub})\n+Specify the wide character encoding method for the output body file.\n+@var{e} is one of the following:\n+\n+@itemize @bullet\n+\n+@item ^h^HEX^\n+Hex encoding\n+\n+@item ^u^UPPER^\n+Upper half encoding\n+\n+@item ^s^SHIFT_JIS^\n+Shift/JIS encoding\n+\n+@item ^e^EUC^\n+EUC encoding\n+\n+@item ^8^UTF8^\n+UTF-8 encoding\n+\n+@item ^b^BRACKETS^\n+Brackets encoding (default value)\n+@end itemize\n+\n @item ^-q^/QUIET^\n @cindex @option{^-q^/QUIET^} (@command{gnatstub})\n Quiet mode: do not generate a confirmation when a body is"}, {"sha": "283c0294a84579fd852a767d2aec1f69a093bcca", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -660,7 +660,6 @@ package body Lib.Xref is\n              (GNATprove_Mode\n                and then In_Extended_Main_Code_Unit (N)\n                and then (Typ = 'm' or else Typ = 'r' or else Typ = 's'))\n-\n          then\n             null;\n "}, {"sha": "a376efe4fb00b73f7cc2b4d96ff0bf100bd2d62d", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -274,72 +274,6 @@ package body Restrict is\n       Check_Restriction (No_Implicit_Heap_Allocations, N);\n    end Check_No_Implicit_Heap_Alloc;\n \n-   -------------------------------------------\n-   -- Check_Restriction_No_Use_Of_Attribute --\n-   --------------------------------------------\n-\n-   procedure Check_Restriction_No_Use_Of_Attribute (N : Node_Id) is\n-      Id   : constant Name_Id      := Chars (N);\n-      A_Id : constant Attribute_Id := Get_Attribute_Id (Id);\n-\n-   begin\n-      --  Ignore call if node N is not in the main source unit, since we only\n-      --  give messages for the main unit. This avoids giving messages for\n-      --  aspects that are specified in withed units.\n-\n-      if not In_Extended_Main_Source_Unit (N) then\n-         return;\n-      end if;\n-\n-      --  If nothing set, nothing to check\n-\n-      if not No_Use_Of_Attribute_Set then\n-         return;\n-      end if;\n-\n-      Error_Msg_Sloc := No_Use_Of_Attribute (A_Id);\n-\n-      if Error_Msg_Sloc /= No_Location then\n-         Error_Msg_Node_1 := N;\n-         Error_Msg_Warn := No_Use_Of_Attribute_Warning (A_Id);\n-         Error_Msg_N\n-           (\"<*<violation of restriction `No_Use_Of_Attribute '='> &`#\", N);\n-      end if;\n-   end Check_Restriction_No_Use_Of_Attribute;\n-\n-   ----------------------------------------\n-   -- Check_Restriction_No_Use_Of_Pragma --\n-   ----------------------------------------\n-\n-   procedure Check_Restriction_No_Use_Of_Pragma (N : Node_Id) is\n-      Id   : constant Node_Id   := Pragma_Identifier (N);\n-      P_Id : constant Pragma_Id := Get_Pragma_Id (Chars (Id));\n-\n-   begin\n-      --  Ignore call if node N is not in the main source unit, since we only\n-      --  give messages for the main unit. This avoids giving messages for\n-      --  aspects that are specified in withed units.\n-\n-      if not In_Extended_Main_Source_Unit (N) then\n-         return;\n-      end if;\n-\n-      --  If nothing set, nothing to check\n-\n-      if not No_Use_Of_Pragma_Set then\n-         return;\n-      end if;\n-\n-      Error_Msg_Sloc := No_Use_Of_Pragma (P_Id);\n-\n-      if Error_Msg_Sloc /= No_Location then\n-         Error_Msg_Node_1 := Id;\n-         Error_Msg_Warn := No_Use_Of_Pragma_Warning (P_Id);\n-         Error_Msg_N\n-           (\"<*<violation of restriction `No_Use_Of_Pragma '='> &`#\", Id);\n-      end if;\n-   end Check_Restriction_No_Use_Of_Pragma;\n-\n    -----------------------------------\n    -- Check_Obsolescent_2005_Entity --\n    -----------------------------------\n@@ -696,6 +630,72 @@ package body Restrict is\n       end if;\n    end Check_Restriction_No_Specification_Of_Aspect;\n \n+   -------------------------------------------\n+   -- Check_Restriction_No_Use_Of_Attribute --\n+   --------------------------------------------\n+\n+   procedure Check_Restriction_No_Use_Of_Attribute (N : Node_Id) is\n+      Id   : constant Name_Id      := Chars (N);\n+      A_Id : constant Attribute_Id := Get_Attribute_Id (Id);\n+\n+   begin\n+      --  Ignore call if node N is not in the main source unit, since we only\n+      --  give messages for the main unit. This avoids giving messages for\n+      --  aspects that are specified in withed units.\n+\n+      if not In_Extended_Main_Source_Unit (N) then\n+         return;\n+      end if;\n+\n+      --  If nothing set, nothing to check\n+\n+      if not No_Use_Of_Attribute_Set then\n+         return;\n+      end if;\n+\n+      Error_Msg_Sloc := No_Use_Of_Attribute (A_Id);\n+\n+      if Error_Msg_Sloc /= No_Location then\n+         Error_Msg_Node_1 := N;\n+         Error_Msg_Warn := No_Use_Of_Attribute_Warning (A_Id);\n+         Error_Msg_N\n+           (\"<*<violation of restriction `No_Use_Of_Attribute '='> &`#\", N);\n+      end if;\n+   end Check_Restriction_No_Use_Of_Attribute;\n+\n+   ----------------------------------------\n+   -- Check_Restriction_No_Use_Of_Pragma --\n+   ----------------------------------------\n+\n+   procedure Check_Restriction_No_Use_Of_Pragma (N : Node_Id) is\n+      Id   : constant Node_Id   := Pragma_Identifier (N);\n+      P_Id : constant Pragma_Id := Get_Pragma_Id (Chars (Id));\n+\n+   begin\n+      --  Ignore call if node N is not in the main source unit, since we only\n+      --  give messages for the main unit. This avoids giving messages for\n+      --  aspects that are specified in withed units.\n+\n+      if not In_Extended_Main_Source_Unit (N) then\n+         return;\n+      end if;\n+\n+      --  If nothing set, nothing to check\n+\n+      if not No_Use_Of_Pragma_Set then\n+         return;\n+      end if;\n+\n+      Error_Msg_Sloc := No_Use_Of_Pragma (P_Id);\n+\n+      if Error_Msg_Sloc /= No_Location then\n+         Error_Msg_Node_1 := Id;\n+         Error_Msg_Warn := No_Use_Of_Pragma_Warning (P_Id);\n+         Error_Msg_N\n+           (\"<*<violation of restriction `No_Use_Of_Pragma '='> &`#\", Id);\n+      end if;\n+   end Check_Restriction_No_Use_Of_Pragma;\n+\n    --------------------------------------\n    -- Check_Wide_Character_Restriction --\n    --------------------------------------"}, {"sha": "7456ac4bc71adf39c3f32cd1523da338ad7f2f3d", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -9965,11 +9965,11 @@ package body Sem_Ch12 is\n                Uninit_Var := Uninitialized_Variable (Decl);\n \n             elsif Nkind (Decl) = N_Formal_Type_Declaration\n-                    and then Nkind (Formal_Type_Definition (Decl))\n-                      = N_Formal_Private_Type_Definition\n+                    and then Nkind (Formal_Type_Definition (Decl)) =\n+                                          N_Formal_Private_Type_Definition\n             then\n-               Uninit_Var := Uninitialized_Variable\n-                                (Formal_Type_Definition (Decl));\n+               Uninit_Var :=\n+                 Uninitialized_Variable (Formal_Type_Definition (Decl));\n             end if;\n \n             if Present (Uninit_Var) then\n@@ -9979,8 +9979,8 @@ package body Sem_Ch12 is\n                --  For each formal there is a subtype declaration that renames\n                --  the actual and has the same name as the formal. Locate the\n                --  formal for warning message about uninitialized variables\n-               --  in the generic, for which the actual type should be a\n-               --  fully initialized type.\n+               --  in the generic, for which the actual type should be a fully\n+               --  initialized type.\n \n                while Present (Actual) loop\n                   exit when Ekind (Actual) = E_Package\n@@ -9993,10 +9993,11 @@ package body Sem_Ch12 is\n                   then\n                      Error_Msg_Node_2 := Formal;\n                      Error_Msg_NE\n-                       (\"generic unit has uninitialzed variable& of \"\n-                          & \" formal private type &?v?\", Actual, Uninit_Var);\n-                     Error_Msg_NE (\"actual type for& should be \"\n-                        & \"fully initialized type?v?\", Actual, Formal);\n+                       (\"generic unit has uninitialized variable& of \"\n+                        & \"formal private type &?v?\", Actual, Uninit_Var);\n+                     Error_Msg_NE\n+                       (\"actual type for& should be fully initialized type?v?\",\n+                        Actual, Formal);\n                      exit;\n                   end if;\n "}, {"sha": "ac07c620b887b4fd23d235d474fdf9db5c36c922", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/810241a5bfdbe0a3921916d3287eba6ef59ab575/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=810241a5bfdbe0a3921916d3287eba6ef59ab575", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -7155,6 +7155,40 @@ package VMS_Data is\n    --\n    --   Look for source, library or object files in the default directory.\n \n+   S_Stub_Encoding : aliased constant S := \"/RESULT_ENCODING=\"             &\n+                                            \"BRACKETS \"                    &\n+                                               \"-Wb \"                      &\n+                                            \"HEX \"                         &\n+                                               \"-Wh \"                      &\n+                                            \"UPPER \"                       &\n+                                               \"-Wu \"                      &\n+                                            \"SHIFT_JIS \"                   &\n+                                               \"-Ws \"                      &\n+                                            \"EUC \"                         &\n+                                               \"-We \"                      &\n+                                            \"UTF8 \"                        &\n+                                               \"-W8\";\n+   --        /RESULT_ENCODING[=encoding-type]\n+   --\n+   --   Specify the wide character encoding method used when writing the\n+   --   generated body in the result file. 'encoding-type' is one of the\n+   --   following:\n+   --\n+   --      BRACKETS (D)      Brackets encoding.\n+   --\n+   --      HEX               Hex ESC encoding.\n+   --\n+   --      UPPER             Upper half encoding.\n+   --\n+   --      SHIFT_JIS         Shift-JIS encoding.\n+   --\n+   --      EUC               EUC Encoding.\n+   --\n+   --      UTF8              UTF-8 encoding.\n+   --\n+   --   See 'HELP GNAT COMPILE /WIDE_CHARACTER_ENCODING' for an explanation\n+   --   about the different character encoding methods.\n+\n    S_Stub_Ext     : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"'     &\n                                             \"-X\" & '\"';\n    --        /EXTERNAL_REFERENCE=\"name=val\"\n@@ -7349,6 +7383,7 @@ package VMS_Data is\n                      (S_Stub_Add        'Access,\n                       S_Stub_Config     'Access,\n                       S_Stub_Current    'Access,\n+                      S_Stub_Encoding   'Access,\n                       S_Stub_Ext        'Access,\n                       S_Stub_Follow     'Access,\n                       S_Stub_Full       'Access,"}]}