{"sha": "d5243c46266f92f8e5373c3f314aa2abc15c9db4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUyNDNjNDYyNjZmOTJmOGU1MzczYzNmMzE0YWEyYWJjMTVjOWRiNA==", "commit": {"author": {"name": "Mike Crowe", "email": "mac@mcrowe.com", "date": "2020-10-05T10:07:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-05T10:09:03Z"}, "message": "libstdc++: Test C++11 implementation of std::chrono::__detail::ceil\n\nCommit 53ad6b1979f4bd7121e977c4a44151b14d8a0147 split the implementation\nof std::chrono::__detail::ceil so that when compiling for C++17 and\nlater std::chrono::ceil is used but when compiling for earlier versions\na separate implementation is used to comply with C++11's limited\nconstexpr rules. Let's run the equivalent of the existing\nstd::chrono::ceil test cases on std::chrono::__detail::ceil too to make\nsure that it doesn't get broken.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/20_util/duration_cast/rounding_c++11.cc: Copy\n\trounding.cc and alter to support compilation for C++11 and to\n\ttest std::chrono::__detail::ceil.", "tree": {"sha": "98b550b6e83154e22e87cd9ab517a6f886c69e01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98b550b6e83154e22e87cd9ab517a6f886c69e01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5243c46266f92f8e5373c3f314aa2abc15c9db4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5243c46266f92f8e5373c3f314aa2abc15c9db4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5243c46266f92f8e5373c3f314aa2abc15c9db4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5243c46266f92f8e5373c3f314aa2abc15c9db4/comments", "author": {"login": "mikecrowe", "id": 93615, "node_id": "MDQ6VXNlcjkzNjE1", "avatar_url": "https://avatars.githubusercontent.com/u/93615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikecrowe", "html_url": "https://github.com/mikecrowe", "followers_url": "https://api.github.com/users/mikecrowe/followers", "following_url": "https://api.github.com/users/mikecrowe/following{/other_user}", "gists_url": "https://api.github.com/users/mikecrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikecrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikecrowe/subscriptions", "organizations_url": "https://api.github.com/users/mikecrowe/orgs", "repos_url": "https://api.github.com/users/mikecrowe/repos", "events_url": "https://api.github.com/users/mikecrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/mikecrowe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b98d3cc5666f36bf3cbeed7cd6a23483cc5e4eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98d3cc5666f36bf3cbeed7cd6a23483cc5e4eca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98d3cc5666f36bf3cbeed7cd6a23483cc5e4eca"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "f10d27fd0821dc153c643ca5116727acf34c2567", "filename": "libstdc++-v3/testsuite/20_util/duration_cast/rounding_c++11.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5243c46266f92f8e5373c3f314aa2abc15c9db4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration_cast%2Frounding_c%2B%2B11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5243c46266f92f8e5373c3f314aa2abc15c9db4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration_cast%2Frounding_c%2B%2B11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration_cast%2Frounding_c%2B%2B11.cc?ref=d5243c46266f92f8e5373c3f314aa2abc15c9db4", "patch": "@@ -0,0 +1,43 @@\n+// Copyright (C) 2016-2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile { target c++11 } }\n+\n+#include <chrono>\n+\n+using std::chrono::seconds;\n+using std::chrono::milliseconds;\n+\n+using fp_seconds = std::chrono::duration<float>;\n+\n+static_assert( std::chrono::__detail::ceil<seconds>(milliseconds(1000))\n+\t       == seconds(1) );\n+static_assert( std::chrono::__detail::ceil<seconds>(milliseconds(1001))\n+\t       == seconds(2) );\n+static_assert( std::chrono::__detail::ceil<seconds>(milliseconds(1500))\n+\t       == seconds(2) );\n+static_assert( std::chrono::__detail::ceil<seconds>(milliseconds(1999))\n+\t       == seconds(2) );\n+static_assert( std::chrono::__detail::ceil<seconds>(milliseconds(2000))\n+\t       == seconds(2) );\n+static_assert( std::chrono::__detail::ceil<seconds>(milliseconds(2001))\n+\t       == seconds(3) );\n+static_assert( std::chrono::__detail::ceil<seconds>(milliseconds(2500))\n+\t       == seconds(3) );\n+static_assert( std::chrono::__detail::ceil<fp_seconds>(milliseconds(500))\n+\t       == fp_seconds{0.5f} );"}]}