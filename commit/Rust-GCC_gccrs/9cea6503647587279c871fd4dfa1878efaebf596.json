{"sha": "9cea6503647587279c871fd4dfa1878efaebf596", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNlYTY1MDM2NDc1ODcyNzljODcxZmQ0ZGZhMTg3OGVmYWViZjU5Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-05T23:41:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-05T23:41:22Z"}, "message": "Add new define_split for doing sign-extended adds of some large\nconstants using sNaddl.\n\nFrom-SVN: r3662", "tree": {"sha": "0549abefbe08cc0f18b5c4c025e40952f2f8466c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0549abefbe08cc0f18b5c4c025e40952f2f8466c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cea6503647587279c871fd4dfa1878efaebf596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cea6503647587279c871fd4dfa1878efaebf596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cea6503647587279c871fd4dfa1878efaebf596", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cea6503647587279c871fd4dfa1878efaebf596/comments", "author": null, "committer": null, "parents": [{"sha": "6076248a1ea124e4368566e0d1590df6834fe4ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6076248a1ea124e4368566e0d1590df6834fe4ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6076248a1ea124e4368566e0d1590df6834fe4ea"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "698fa6680cbedf519464da87c2c18efec6432e9e", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cea6503647587279c871fd4dfa1878efaebf596/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cea6503647587279c871fd4dfa1878efaebf596/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=9cea6503647587279c871fd4dfa1878efaebf596", "patch": "@@ -123,6 +123,30 @@\n    subl %r1,%n2,%0\"\n   [(set_attr \"type\" \"iaddlog\")])\n \n+(define_split\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(sign_extend:DI\n+\t (plus:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t  (match_operand:SI 2 \"const_int_operand\" \"\"))))\n+   (clobber (match_operand:SI 3 \"register_operand\" \"\"))]\n+  \"! add_operand (operands[2], SImode) && INTVAL (operands[2]) > 0\n+   && INTVAL (operands[2]) % 4 == 0\"\n+  [(set (match_dup 3) (match_dup 4))\n+   (set (match_dup 0) (sign_extend:DI (plus:SI (mult:SI (match_dup 3)\n+\t\t\t\t\t\t\t(match_dup 5))\n+\t\t\t\t\t       (match_dup 1))))]\n+  \"\n+{\n+  HOST_WIDE_INT val = INTVAL (operands[2]) / 4;\n+  int mult = 4;\n+\n+  if (val % 2 == 0)\n+    val /= 2, mult = 8;\n+\n+  operands[4] = GEN_INT (val);\n+  operands[5] = GEN_INT (mult);\n+}\")\n+\n (define_insn \"adddi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r\")\n \t(plus:DI (match_operand:DI 1 \"reg_or_0_operand\" \"%rJ,%rJ,%rJ\")"}]}