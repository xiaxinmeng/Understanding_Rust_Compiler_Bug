{"sha": "44685d378f723f8cd54770a445b6dfeab085ac99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ2ODVkMzc4ZjcyM2Y4Y2Q1NDc3MGE0NDViNmRmZWFiMDg1YWM5OQ==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2017-11-17T21:11:42Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T21:11:42Z"}, "message": "Enable building libbacktrace with Intel CET\n\nlibbacktrace/\n\t* configure.ac: Add CET_FLAGS to EXTRA_FLAGS.\n\t* aclocal.m4: Regenerate.\n\t* Makefile.in: Likewise.\n\t* configure: Likewise.\n\nFrom-SVN: r254892", "tree": {"sha": "84bed2319e12c2cfe2bd21e79633eb52940375ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84bed2319e12c2cfe2bd21e79633eb52940375ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44685d378f723f8cd54770a445b6dfeab085ac99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44685d378f723f8cd54770a445b6dfeab085ac99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44685d378f723f8cd54770a445b6dfeab085ac99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44685d378f723f8cd54770a445b6dfeab085ac99/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dbc00611a86e17d34184aaf748bd5c4832c05b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbc00611a86e17d34184aaf748bd5c4832c05b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dbc00611a86e17d34184aaf748bd5c4832c05b6"}], "stats": {"total": 97, "additions": 94, "deletions": 3}, "files": [{"sha": "35af7e5c318c5b0896540741102b160b13d5c9c3", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=44685d378f723f8cd54770a445b6dfeab085ac99", "patch": "@@ -1,3 +1,10 @@\n+2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* configure.ac: Add CET_FLAGS to EXTRA_FLAGS.\n+\t* aclocal.m4: Regenerate.\n+\t* Makefile.in: Likewise.\n+\t* configure: Likewise.\n+\n 2017-10-06  Ian Lance Taylor  <iant@golang.org>\n \n \t* ztest.c (test_large): Pass unsigned long *, not size_t *, to"}, {"sha": "f7f849bdeaf2da4e440f86b75d1d82c2f5a54713", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=44685d378f723f8cd54770a445b6dfeab085ac99", "patch": "@@ -95,7 +95,9 @@ DIST_COMMON = README ChangeLog $(srcdir)/Makefile.in \\\n \t$(am__configure_deps) $(srcdir)/config.h.in \\\n \t$(srcdir)/../mkinstalldirs $(srcdir)/backtrace-supported.h.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../config/lead-dot.m4 \\\n+am__aclocal_m4_deps = $(top_srcdir)/../config/cet.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\"}, {"sha": "7a6ea55fb34e0d89345873cdc910cc36b6c5fcbe", "filename": "libbacktrace/aclocal.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Faclocal.m4?ref=44685d378f723f8cd54770a445b6dfeab085ac99", "patch": "@@ -670,6 +670,8 @@ AC_SUBST([am__tar])\n AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n+m4_include([../config/cet.m4])\n+m4_include([../config/enable.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])"}, {"sha": "8943b0ca7fd8a1a30c92a27a23d91eed55d6752e", "filename": "libbacktrace/configure", "status": "modified", "additions": 76, "deletions": 2, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=44685d378f723f8cd54770a445b6dfeab085ac99", "patch": "@@ -743,6 +743,7 @@ enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n enable_largefile\n+enable_cet\n with_system_libunwind\n enable_host_shared\n '\n@@ -1385,6 +1386,8 @@ Optional Features:\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --disable-largefile     omit support for large files\n+  --enable-cet            enable Intel CET in target libraries\n+                          [default=default]\n   --enable-host-shared    build host code as shared libraries\n \n Optional Packages:\n@@ -11146,7 +11149,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11149 \"configure\"\n+#line 11152 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11252,7 +11255,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11255 \"configure\"\n+#line 11258 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11784,6 +11787,77 @@ $as_echo \"$libbacktrace_cv_c_random_seed_string\" >&6; }\n   fi\n fi\n \n+if test -n \"${with_target_subdir}\"; then\n+  # Add CET specific flags is Intel CET is enabled.\n+   # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|default) ;;\n+       *) as_fn_error \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=default\n+fi\n+\n+\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    case \"$enable_cet\" in\n+      default)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    ;;\n+  *)\n+    enable_cet=no\n+    ;;\n+esac\n+if test x$enable_cet = xyes; then\n+  CET_FLAGS=\"-fcf-protection -mcet\"\n+fi\n+\n+  EXTRA_FLAGS=\"$EXTRA_FLAGS $CET_FLAGS\"\n+fi\n+\n \n ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'"}, {"sha": "bca3c818775546e39c56c4bf51c83bdc481d769c", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44685d378f723f8cd54770a445b6dfeab085ac99/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=44685d378f723f8cd54770a445b6dfeab085ac99", "patch": "@@ -130,6 +130,12 @@ else\n     EXTRA_FLAGS=\"$EXTRA_FLAGS -frandom-seed=\\$@\"\n   fi\n fi\n+\n+if test -n \"${with_target_subdir}\"; then\n+  # Add CET specific flags is Intel CET is enabled.\n+  GCC_CET_FLAGS(CET_FLAGS)\n+  EXTRA_FLAGS=\"$EXTRA_FLAGS $CET_FLAGS\"\n+fi\n AC_SUBST(EXTRA_FLAGS)\n \n ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\"}]}