{"sha": "522da4c233cb626f66e413dabb86a0a78adaafce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyZGE0YzIzM2NiNjI2ZjY2ZTQxM2RhYmI4NmEwYTc4YWRhYWZjZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-09-20T09:11:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-09-20T09:11:20Z"}, "message": "re PR c/91815 (questionable error on type definition at file scope)\n\n\tPR c/91815\n\t* c-decl.c (pushdecl): In C detect duplicate declarations across scopes\n\tof identifiers in the external scope only for variables and functions.\n\nFrom-SVN: r275992", "tree": {"sha": "a0abe9960690bcc01823bad777578966aa454173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0abe9960690bcc01823bad777578966aa454173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/522da4c233cb626f66e413dabb86a0a78adaafce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522da4c233cb626f66e413dabb86a0a78adaafce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522da4c233cb626f66e413dabb86a0a78adaafce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522da4c233cb626f66e413dabb86a0a78adaafce/comments", "author": null, "committer": null, "parents": [{"sha": "6e222b2a3aede20f3093802d1649e75848e3bd2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e222b2a3aede20f3093802d1649e75848e3bd2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e222b2a3aede20f3093802d1649e75848e3bd2b"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "96655493ac008fdf279eec22b34a124a44783cfa", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=522da4c233cb626f66e413dabb86a0a78adaafce", "patch": "@@ -1,3 +1,9 @@\n+2019-09-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR c/91815\n+\t* c-decl.c (pushdecl): In C detect duplicate declarations across scopes\n+\tof identifiers in the external scope only for variables and functions.\n+\n 2019-09-04  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR c/78736"}, {"sha": "132fa3edb27d780bb922243f6795bf782d8775c7", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=522da4c233cb626f66e413dabb86a0a78adaafce", "patch": "@@ -3130,8 +3130,11 @@ pushdecl (tree x)\n      detecting duplicate declarations of the same object, no matter\n      what scope they are in; this is what we do here.  (C99 6.2.7p2:\n      All declarations that refer to the same object or function shall\n-     have compatible type; otherwise, the behavior is undefined.)  */\n-  if (DECL_EXTERNAL (x) || scope == file_scope)\n+     have compatible type; otherwise, the behavior is undefined.)\n+     However, in Objective-C, we also want to detect declarations\n+     conflicting with those of the basic types.  */\n+  if ((DECL_EXTERNAL (x) || scope == file_scope)\n+      && (VAR_OR_FUNCTION_DECL_P (x) || c_dialect_objc ()))\n     {\n       tree type = TREE_TYPE (x);\n       tree vistype = NULL_TREE;"}, {"sha": "59c6b7991ad6b2ee95f6cd55b34b874f79584bea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=522da4c233cb626f66e413dabb86a0a78adaafce", "patch": "@@ -1,3 +1,8 @@\n+2019-09-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/typedef-var-1.c: New test.\n+\t* gcc.dg/typedef-var-2.c: Likewise.\n+\n 2019-09-20  Martin Jambor  <mjambor@suse.cz>\n \n         * g++.dg/ipa/pr81248.C: Adjust dg-options and dump-scan."}, {"sha": "2cda92d3d04adfddb8cd9282e996631ae79a1294", "filename": "gcc/testsuite/gcc.dg/typedef-var-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-1.c?ref=522da4c233cb626f66e413dabb86a0a78adaafce", "patch": "@@ -0,0 +1,14 @@\n+/* PR c/91815 */\n+/* { dg-do compile } */\n+\n+int f (void)\n+{\n+  extern int t;\n+  extern float v;   \n+\n+  return (v > 0.0f);\n+}\n+\n+typedef float t;\n+\n+t v = 4.5f;"}, {"sha": "716d29ca3232fdd1837d03c4324ea7d15e5c47ad", "filename": "gcc/testsuite/gcc.dg/typedef-var-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522da4c233cb626f66e413dabb86a0a78adaafce/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-2.c?ref=522da4c233cb626f66e413dabb86a0a78adaafce", "patch": "@@ -0,0 +1,15 @@\n+/* PR c/91815 */\n+/* { dg-do compile } */\n+\n+int f (void)\n+{\n+  extern float v;   \n+\n+  return (v > 0.0f);\n+}\n+\n+extern int t;\n+\n+typedef float t; /* { dg-error \"redeclared as different kind of symbol\" } */\n+\n+t v = 4.5f;"}]}