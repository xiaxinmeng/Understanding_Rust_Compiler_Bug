{"sha": "f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhlNGM1NWNiYzA5ZmJiZTEzNmIyYmEyZGE0MDVkN2JkY2VkMDdhZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-11-17T00:27:06Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-11-17T00:27:06Z"}, "message": "float.h: C2x decimal signaling NaN macros\n\nC2x adds macros for decimal floating-point signaling NaNs to\n<float.h>.  Add these macros to GCC's <float.h> implementation.\n\nNote that the current C2x draft has these under incorrect names\nD32_SNAN, D64_SNAN, D128_SNAN.  The intent was to change the naming\nconvention to be consistent with other <float.h> macros when they were\nmoved to <float.h>, so DEC32_SNAN, DEC64_SNAN, DEC128_NAN, which this\npatch uses (as does the current draft integration of TS 18661-3 as an\nAnnex to C2x, for its _Decimal* and _Decimal*x types).\n\nBootstrapped with no regressions for x86_64-pc-linux-gnu.\n\ngcc/\n2020-11-17  Joseph Myers  <joseph@codesourcery.com>\n\n\t* ginclude/float.h (DEC32_SNAN, DEC64_SNAN, DEC128_SNAN): New C2x\n\tmacros.\n\ngcc/testsuite/\n2020-11-17  Joseph Myers  <joseph@codesourcery.com>\n\n\t* gcc.dg/dfp/c2x-float-dfp-7.c, gcc.dg/dfp/c2x-float-dfp-8.c: New\n\ttests.\n\t* gcc.dg/c2x-float-no-dfp-3.c: Also check that DEC32_SNAN,\n\tDEC64_SNAN and DEC128_SNAN are not defined.", "tree": {"sha": "b937d5e9dc9e4b0c6182e10ceb6ee47c5372308a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b937d5e9dc9e4b0c6182e10ceb6ee47c5372308a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cfe746fc5255f8dd1674bf4a8873b7b8e178c89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cfe746fc5255f8dd1674bf4a8873b7b8e178c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cfe746fc5255f8dd1674bf4a8873b7b8e178c89"}], "stats": {"total": 110, "additions": 110, "deletions": 0}, "files": [{"sha": "0fa00461230af71ad807ca6d715c16580c5fa86c", "filename": "gcc/ginclude/float.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/gcc%2Fginclude%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/gcc%2Fginclude%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Ffloat.h?ref=f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae", "patch": "@@ -601,6 +601,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #undef DEC_NAN\n #define DEC_NAN\t\t(__builtin_nand32 (\"\"))\n \n+/* Signaling NaN in each decimal floating-point type.  */\n+#undef DEC32_SNAN\n+#define DEC32_SNAN\t(__builtin_nansd32 (\"\"))\n+#undef DEC64_SNAN\n+#define DEC64_SNAN\t(__builtin_nansd64 (\"\"))\n+#undef DEC128_SNAN\n+#define DEC128_SNAN\t(__builtin_nansd128 (\"\"))\n+\n #endif /* C2X */\n \n #endif /* __DEC32_MANT_DIG__ */"}, {"sha": "aa790c8e21d5cac0e1ef7c015d794b1ba630e185", "filename": "gcc/testsuite/gcc.dg/c2x-float-no-dfp-3.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-float-no-dfp-3.c?ref=f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae", "patch": "@@ -12,3 +12,15 @@\n #ifdef DEC_NAN\n # error \"DEC_NAN defined\"\n #endif\n+\n+#ifdef DEC32_SNAN\n+# error \"DEC32_SNAN defined\"\n+#endif\n+\n+#ifdef DEC64_SNAN\n+# error \"DEC64_SNAN defined\"\n+#endif\n+\n+#ifdef DEC128_SNAN\n+# error \"DEC128_SNAN defined\"\n+#endif"}, {"sha": "dec6b500656c43db7baaf86c0b157708c7b176eb", "filename": "gcc/testsuite/gcc.dg/dfp/c2x-float-dfp-7.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-7.c?ref=f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae", "patch": "@@ -0,0 +1,45 @@\n+/* Test DEC*_SNAN macros defined in <float.h> with DFP support.  */\n+/* { dg-do run } */\n+/* { dg-options \"-std=c2x\" } */\n+\n+#include <float.h>\n+\n+#ifndef DEC32_SNAN\n+# error \"DEC32_SNAN not defined\"\n+#endif\n+\n+#ifndef DEC64_SNAN\n+# error \"DEC64_SNAN not defined\"\n+#endif\n+\n+#ifndef DEC128_SNAN\n+# error \"DEC128_SNAN not defined\"\n+#endif\n+\n+volatile _Decimal32 d32 = DEC32_SNAN;\n+volatile _Decimal64 d64 = DEC64_SNAN;\n+volatile _Decimal128 d128 = DEC128_SNAN;\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  (void) _Generic (DEC32_SNAN, _Decimal32 : 0);\n+  if (!__builtin_isnan (DEC32_SNAN))\n+    abort ();\n+  if (!__builtin_isnan (d32))\n+    abort ();\n+  (void) _Generic (DEC64_SNAN, _Decimal64 : 0);\n+  if (!__builtin_isnan (DEC64_SNAN))\n+    abort ();\n+  if (!__builtin_isnan (d64))\n+    abort ();\n+  (void) _Generic (DEC128_SNAN, _Decimal128 : 0);\n+  if (!__builtin_isnan (DEC128_SNAN))\n+    abort ();\n+  if (!__builtin_isnan (d128))\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "4169602fd9c949a48f2a022f216927a147af351b", "filename": "gcc/testsuite/gcc.dg/dfp/c2x-float-dfp-8.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fc2x-float-dfp-8.c?ref=f8e4c55cbc09fbbe136b2ba2da405d7bdced07ae", "patch": "@@ -0,0 +1,45 @@\n+/* Test DEC*_SNAN macros.  Test requiring runtime exceptions\n+   support.  */\n+/* { dg-do run } */\n+/* { dg-require-effective-target fenv_exceptions_dfp } */\n+/* { dg-options \"-std=c2x\" } */\n+\n+#include <fenv.h>\n+#include <float.h>\n+\n+volatile _Decimal32 d32 = DEC32_SNAN;\n+volatile _Decimal64 d64 = DEC64_SNAN;\n+volatile _Decimal128 d128 = DEC128_SNAN;\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  feclearexcept (FE_ALL_EXCEPT);\n+  d32 += d32;\n+  if (!fetestexcept (FE_INVALID))\n+    abort ();\n+  feclearexcept (FE_ALL_EXCEPT);\n+  d32 += d32;\n+  if (fetestexcept (FE_INVALID))\n+    abort ();\n+  feclearexcept (FE_ALL_EXCEPT);\n+  d64 += d64;\n+  if (!fetestexcept (FE_INVALID))\n+    abort ();\n+  feclearexcept (FE_ALL_EXCEPT);\n+  d64 += d64;\n+  if (fetestexcept (FE_INVALID))\n+    abort ();\n+  feclearexcept (FE_ALL_EXCEPT);\n+  d128 += d128;\n+  if (!fetestexcept (FE_INVALID))\n+    abort ();\n+  feclearexcept (FE_ALL_EXCEPT);\n+  d128 += d128;\n+  if (fetestexcept (FE_INVALID))\n+    abort ();\n+  exit (0);\n+}"}]}