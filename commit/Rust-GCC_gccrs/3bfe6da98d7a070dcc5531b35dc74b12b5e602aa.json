{"sha": "3bfe6da98d7a070dcc5531b35dc74b12b5e602aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JmZTZkYTk4ZDdhMDcwZGNjNTUzMWIzNWRjNzRiMTJiNWU2MDJhYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-01-28T16:57:28Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-01-28T16:57:28Z"}, "message": "re PR fortran/51972 ([OOP] Wrong code as _copy does not honor CLASS components)\n\n2012-01-28  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51972\n        * trans-stmt.c (gfc_trans_allocate): Properly check whether\n        we have a BT_CLASS which needs to be memset.\n\n2012-01-28  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51972\n        * gfortran.dg/class_allocate_12.f90: New.\n\nFrom-SVN: r183668", "tree": {"sha": "f4a543b8d7885ccccb2a7c8d3a40f5b7ac458c8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4a543b8d7885ccccb2a7c8d3a40f5b7ac458c8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce590933fe3c617e15fb1efe4f5e9ddc1dfafbfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce590933fe3c617e15fb1efe4f5e9ddc1dfafbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce590933fe3c617e15fb1efe4f5e9ddc1dfafbfb"}], "stats": {"total": 111, "additions": 110, "deletions": 1}, "files": [{"sha": "076f0483ea00c79b12c76cb10e7b045f4576b45a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3bfe6da98d7a070dcc5531b35dc74b12b5e602aa", "patch": "@@ -1,3 +1,9 @@\n+2012-01-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51972\n+\t* trans-stmt.c (gfc_trans_allocate): Properly check whether\n+\twe have a BT_CLASS which needs to be memset.\n+\n 2012-01-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52022"}, {"sha": "7a6f8b2b419a8b17667a567e7b8d92fa97532204", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=3bfe6da98d7a070dcc5531b35dc74b12b5e602aa", "patch": "@@ -4950,7 +4950,8 @@ gfc_trans_allocate (gfc_code * code)\n \t  else\n \t    gfc_allocate_using_malloc (&se.pre, se.expr, memsz, stat);\n \n-\t  if (expr->ts.type == BT_DERIVED && expr->ts.u.derived->attr.alloc_comp)\n+\t  if (al->expr->ts.type == BT_DERIVED\n+\t      && expr->ts.u.derived->attr.alloc_comp)\n \t    {\n \t      tmp = build_fold_indirect_ref_loc (input_location, se.expr);\n \t      tmp = gfc_nullify_alloc_comp (expr->ts.u.derived, tmp, 0);"}, {"sha": "5ec0ccd29b9b8e3c9b6bb672ea2d8007de623fc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3bfe6da98d7a070dcc5531b35dc74b12b5e602aa", "patch": "@@ -1,3 +1,8 @@\n+2012-01-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51972\n+\t* gfortran.dg/class_allocate_12.f90: New.\n+\n 2012-01-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/torture/pr50444.c: Fix dg directives."}, {"sha": "5cb7ab177f224c74264692370dd941cdbc118d7f", "filename": "gcc/testsuite/gfortran.dg/class_allocate_12.f90", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bfe6da98d7a070dcc5531b35dc74b12b5e602aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_12.f90?ref=3bfe6da98d7a070dcc5531b35dc74b12b5e602aa", "patch": "@@ -0,0 +1,97 @@\n+! { dg-do run }\n+!\n+! PR fortran/51972\n+!\n+! Contributed by Damian Rouson\n+!\n+! TODO: Remove the STOP line below after fixing\n+!       The remaining issue of the PR\n+!\n+\n+module surrogate_module\n+  type ,abstract :: surrogate\n+  end type\n+end module\n+\n+module strategy_module\n+  use surrogate_module\n+\n+  type :: strategy\n+  end type\n+end module\n+\n+module integrand_module\n+  use surrogate_module\n+  use strategy_module\n+  implicit none\n+\n+  type ,abstract, extends(surrogate) :: integrand\n+    class(strategy), allocatable :: quadrature  \n+  end type\n+end module integrand_module\n+\n+module lorenz_module\n+  use strategy_module\n+  use integrand_module\n+  implicit none\n+\n+  type ,extends(integrand) :: lorenz\n+    real, dimension(:), allocatable :: state\n+  contains\n+    procedure ,public :: assign   => assign_lorenz\n+  end type\n+contains\n+  type(lorenz) function constructor(initial_state, this_strategy)\n+    real ,dimension(:) ,intent(in)  :: initial_state\n+    class(strategy)    ,intent(in)  :: this_strategy\n+    constructor%state=initial_state\n+    allocate (constructor%quadrature, source=this_strategy)\n+  end function\n+\n+  subroutine assign_lorenz(lhs,rhs)\n+    class(lorenz)    ,intent(inout) :: lhs\n+    class(integrand) ,intent(in)    :: rhs\n+    select type(rhs)\n+      class is (lorenz)\n+        allocate (lhs%quadrature, source=rhs%quadrature)\n+        lhs%state=rhs%state\n+    end select\n+  end subroutine\n+end module lorenz_module\n+\n+module runge_kutta_2nd_module \n+  use surrogate_module,only : surrogate\n+  use strategy_module ,only : strategy\n+  use integrand_module,only : integrand\n+  implicit none\n+\n+  type, extends(strategy) ,public :: runge_kutta_2nd\n+  contains\n+    procedure, nopass :: integrate\n+  end type\n+contains\n+  subroutine integrate(this)\n+    class(surrogate) ,intent(inout) :: this\n+    class(integrand) ,allocatable   :: this_half\n+\n+    select type (this)\n+      class is (integrand)\n+        allocate (this_half, source=this)\n+    end select\n+    STOP 'SUCESS!' ! See TODO above\n+  end subroutine\n+end module \n+\n+program main\n+  use lorenz_module\n+  use runge_kutta_2nd_module ,only : runge_kutta_2nd, integrate\n+  implicit none\n+\n+  type(runge_kutta_2nd) :: timed_lorenz_integrator\n+  type(lorenz)          :: attractor\n+\n+  attractor = constructor( [1., 1., 1.] , timed_lorenz_integrator)\n+  call integrate(attractor)\n+end program main\n+\n+! { dg-final { cleanup-modules \"surrogate_module strategy_module integrand_module runge_kutta_2nd_module\" } }"}]}