{"sha": "85d346f13c0c237c34624d0f00819df44168d1a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVkMzQ2ZjEzYzBjMjM3YzM0NjI0ZDBmMDA4MTlkZjQ0MTY4ZDFhNg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2004-08-13T14:38:47Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-08-13T14:38:47Z"}, "message": "rs6000.c (any_parallel_operand): New predicate.\n\n\t* config/rs6000/rs6000.c (any_parallel_operand): New predicate.\n\t* config/rs6000/rs6000.h (PREDICATE_CODES): Add\n\tany_parallel_operand, lmw_operation, stmw_operation,\n\tmfcr_operation, mtcrf_operation.\n\t* config/rs6000/rs6000.md (save_fpregs_{si,di}): Use\n\tany_parallel_operand.\n\t(return_and_restore_fpregs_{si,di}): Same.\n\nFrom-SVN: r85937", "tree": {"sha": "3cda598721a58487c19d5fc34453622586fd77db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cda598721a58487c19d5fc34453622586fd77db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d346f13c0c237c34624d0f00819df44168d1a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d346f13c0c237c34624d0f00819df44168d1a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d346f13c0c237c34624d0f00819df44168d1a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d346f13c0c237c34624d0f00819df44168d1a6/comments", "author": null, "committer": null, "parents": [{"sha": "20f3bb804a38fe104b4e6ec982fb959b5279879e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f3bb804a38fe104b4e6ec982fb959b5279879e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f3bb804a38fe104b4e6ec982fb959b5279879e"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "801149af860ab30a622d6ac550e6084bfa4c57a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d346f13c0c237c34624d0f00819df44168d1a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d346f13c0c237c34624d0f00819df44168d1a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85d346f13c0c237c34624d0f00819df44168d1a6", "patch": "@@ -1,3 +1,13 @@\n+2004-08-12  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (any_parallel_operand): New predicate.\n+\t* config/rs6000/rs6000.h (PREDICATE_CODES): Add\n+\tany_parallel_operand, lmw_operation, stmw_operation,\n+\tmfcr_operation, mtcrf_operation.\n+\t* config/rs6000/rs6000.md (save_fpregs_{si,di}): Use\n+\tany_parallel_operand.\n+\t(return_and_restore_fpregs_{si,di}): Same.\n+\n 2004-08-12  Zack Weinberg  <zack@codesourcery.com>\n \n \t* genrecog.c (add_to_sequence): When processing a MATCH_PARALLEL,"}, {"sha": "56008c0b2e73d881b6f197d0635d39df365d394e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d346f13c0c237c34624d0f00819df44168d1a6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d346f13c0c237c34624d0f00819df44168d1a6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=85d346f13c0c237c34624d0f00819df44168d1a6", "patch": "@@ -1672,7 +1672,17 @@ any_operand (rtx op ATTRIBUTE_UNUSED,\n   return 1;\n }\n \n+/* Returns 1 always.  */\n+\n+int\n+any_parallel_operand (rtx op ATTRIBUTE_UNUSED, \n+\t\t      enum machine_mode mode ATTRIBUTE_UNUSED)\n+{\n+  return 1;\n+}\n+\n /* Returns 1 if op is the count register.  */\n+\n int\n count_register_operand (rtx op, enum machine_mode mode ATTRIBUTE_UNUSED)\n {\n@@ -1689,6 +1699,7 @@ count_register_operand (rtx op, enum machine_mode mode ATTRIBUTE_UNUSED)\n }\n \n /* Returns 1 if op is an altivec register.  */\n+\n int\n altivec_register_operand (rtx op, enum machine_mode mode ATTRIBUTE_UNUSED)\n {"}, {"sha": "6cbb477c5433fbb23db32c102272379480ec641d", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d346f13c0c237c34624d0f00819df44168d1a6/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d346f13c0c237c34624d0f00819df44168d1a6/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=85d346f13c0c237c34624d0f00819df44168d1a6", "patch": "@@ -2530,6 +2530,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n #define PREDICATE_CODES\t\t\t\t\t\t\t   \\\n   {\"any_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\t\t   \\\n \t\t   LABEL_REF, SUBREG, REG, MEM, PARALLEL}},\t\t   \\\n+  {\"any_parallel_operand\", {PARALLEL}},\t\t\t\t\t   \\\n   {\"zero_constant\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\t   \\\n \t\t    LABEL_REF, SUBREG, REG, MEM}},\t\t\t   \\\n   {\"short_cint_operand\", {CONST_INT}},\t\t\t\t\t   \\\n@@ -2580,7 +2581,11 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n \t\t     CONST_DOUBLE, SYMBOL_REF}},\t\t\t   \\\n   {\"load_multiple_operation\", {PARALLEL}},\t\t\t\t   \\\n   {\"store_multiple_operation\", {PARALLEL}},\t\t\t\t   \\\n+  {\"lmw_operation\", {PARALLEL}},\t\t\t\t\t   \\\n+  {\"stmw_operation\", {PARALLEL}},\t\t\t\t\t   \\\n   {\"vrsave_operation\", {PARALLEL}},\t\t\t\t\t   \\\n+  {\"mfcr_operation\", {PARALLEL}},\t\t\t\t\t   \\\n+  {\"mtcrf_operation\", {PARALLEL}},\t\t\t\t\t   \\\n   {\"branch_comparison_operator\", {EQ, NE, LE, LT, GE,\t\t\t   \\\n \t\t\t\t  GT, LEU, LTU, GEU, GTU,\t\t   \\\n \t\t\t\t  UNORDERED, ORDERED,\t\t\t   \\"}, {"sha": "198291e22b40be589bde2c8b162c88c44d286d30", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d346f13c0c237c34624d0f00819df44168d1a6/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d346f13c0c237c34624d0f00819df44168d1a6/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=85d346f13c0c237c34624d0f00819df44168d1a6", "patch": "@@ -14393,7 +14393,7 @@\n   \"{stm|stmw} %2,%1\")\n \n (define_insn \"*save_fpregs_si\"\n-  [(match_parallel 0 \"any_operand\"\n+  [(match_parallel 0 \"any_parallel_operand\"\n \t\t   [(clobber (match_operand:SI 1 \"register_operand\" \"=l\"))\n \t\t    (use (match_operand:SI 2 \"call_operand\" \"s\"))\n \t\t    (set (match_operand:DF 3 \"memory_operand\" \"=m\")\n@@ -14404,7 +14404,7 @@\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"*save_fpregs_di\"\n-  [(match_parallel 0 \"any_operand\"\n+  [(match_parallel 0 \"any_parallel_operand\"\n \t\t   [(clobber (match_operand:DI 1 \"register_operand\" \"=l\"))\n \t\t    (use (match_operand:DI 2 \"call_operand\" \"s\"))\n \t\t    (set (match_operand:DF 3 \"memory_operand\" \"=m\")\n@@ -14500,10 +14500,10 @@\n   [(set_attr \"type\" \"jmpreg\")])\n \n ; FIXME: This would probably be somewhat simpler if the Cygnus sibcall\n-; stuff was in GCC.  Oh, and \"any_operand\" is a bit flexible...\n+; stuff was in GCC.  Oh, and \"any_parallel_operand\" is a bit flexible...\n \n (define_insn \"*return_and_restore_fpregs_si\"\n- [(match_parallel 0 \"any_operand\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n                   [(return)\n \t\t   (use (match_operand:SI 1 \"register_operand\" \"l\"))\n \t\t   (use (match_operand:SI 2 \"call_operand\" \"s\"))\n@@ -14513,7 +14513,7 @@\n  \"b %z2\")\n \n (define_insn \"*return_and_restore_fpregs_di\"\n- [(match_parallel 0 \"any_operand\"\n+ [(match_parallel 0 \"any_parallel_operand\"\n                   [(return)\n \t\t   (use (match_operand:DI 1 \"register_operand\" \"l\"))\n \t\t   (use (match_operand:DI 2 \"call_operand\" \"s\"))"}]}