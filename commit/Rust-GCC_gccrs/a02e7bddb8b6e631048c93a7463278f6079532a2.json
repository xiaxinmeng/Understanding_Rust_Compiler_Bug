{"sha": "a02e7bddb8b6e631048c93a7463278f6079532a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAyZTdiZGRiOGI2ZTYzMTA0OGM5M2E3NDYzMjc4ZjYwNzk1MzJhMg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2014-01-03T02:05:44Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2014-01-03T02:05:44Z"}, "message": "ibm-ldouble.c (__gcc_qdiv): Scale up arguments in case of small numerator and finite nonzero result.\n\nlibgcc:\n\t* config/rs6000/ibm-ldouble.c (__gcc_qdiv): Scale up arguments in\n\tcase of small numerator and finite nonzero result.\n\ngcc/testsuite:\n\t* gcc.target/powerpc/rs6000-ldouble-3.c: New test.\n\nFrom-SVN: r206310", "tree": {"sha": "600f5ab6116c9a7fad8b0f87b548b842bbf02f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/600f5ab6116c9a7fad8b0f87b548b842bbf02f7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a02e7bddb8b6e631048c93a7463278f6079532a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02e7bddb8b6e631048c93a7463278f6079532a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a02e7bddb8b6e631048c93a7463278f6079532a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02e7bddb8b6e631048c93a7463278f6079532a2/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "927734cfafbc115c51401621f37d17b56b162d2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/927734cfafbc115c51401621f37d17b56b162d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/927734cfafbc115c51401621f37d17b56b162d2a"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "ebc453d590123b3e384e323148559b10137f2277", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a02e7bddb8b6e631048c93a7463278f6079532a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a02e7bddb8b6e631048c93a7463278f6079532a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a02e7bddb8b6e631048c93a7463278f6079532a2", "patch": "@@ -1,3 +1,7 @@\n+2014-01-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.target/powerpc/rs6000-ldouble-3.c: New test.\n+\n 2014-01-02  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/59641"}, {"sha": "1c78052e6d74a7f0abc6f00ad23c23d228ef27bd", "filename": "gcc/testsuite/gcc.target/powerpc/rs6000-ldouble-3.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a02e7bddb8b6e631048c93a7463278f6079532a2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a02e7bddb8b6e631048c93a7463278f6079532a2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Frs6000-ldouble-3.c?ref=a02e7bddb8b6e631048c93a7463278f6079532a2", "patch": "@@ -0,0 +1,21 @@\n+/* Test accuracy of long double division (glibc bug 15396).  */\n+/* { dg-do run { target powerpc*-*-linux* powerpc*-*-darwin* powerpc*-*-aix* rs6000-*-* } } */\n+/* { dg-options \"-mlong-double-128\" } */\n+\n+extern void exit (int);\n+extern void abort (void);\n+\n+volatile long double a = 0x1p-1024L;\n+volatile long double b = 0x3p-53L;\n+volatile long double r;\n+volatile long double expected = 0x1.55555555555555555555555555p-973L;\n+\n+int\n+main (void)\n+{\n+  r = a / b;\n+  /* Allow error up to 2ulp.  */\n+  if (__builtin_fabsl (r - expected) > 0x1p-1073L)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "7fc4bd08449c5d3a32d0a42af997fcab00f95aa5", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a02e7bddb8b6e631048c93a7463278f6079532a2/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a02e7bddb8b6e631048c93a7463278f6079532a2/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a02e7bddb8b6e631048c93a7463278f6079532a2", "patch": "@@ -1,3 +1,8 @@\n+2014-01-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/rs6000/ibm-ldouble.c (__gcc_qdiv): Scale up arguments in\n+\tcase of small numerator and finite nonzero result.\n+\n 2014-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tUpdate copyright years"}, {"sha": "abcd3c5143526d4a682dace19ad59c7023b0dd03", "filename": "libgcc/config/rs6000/ibm-ldouble.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a02e7bddb8b6e631048c93a7463278f6079532a2/libgcc%2Fconfig%2Frs6000%2Fibm-ldouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a02e7bddb8b6e631048c93a7463278f6079532a2/libgcc%2Fconfig%2Frs6000%2Fibm-ldouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Fibm-ldouble.c?ref=a02e7bddb8b6e631048c93a7463278f6079532a2", "patch": "@@ -190,7 +190,16 @@ __gcc_qdiv (double a, double b, double c, double d)\n       || nonfinite (t))\n     return t;\n \n-  /* Finite nonzero result requires corrections to the highest order term.  */\n+  /* Finite nonzero result requires corrections to the highest order\n+     term.  These corrections require the low part of c * t to be\n+     exactly represented in double.  */\n+  if (fabs (a) <= 0x1p-969)\n+    {\n+      a *= 0x1p106;\n+      b *= 0x1p106;\n+      c *= 0x1p106;\n+      d *= 0x1p106;\n+    }\n \n   s = c * t;                    /* (s,sigma) = c*t exactly.  */\n   w = -(-b + d * t);\t/* Written to get fnmsub for speed, but not"}]}