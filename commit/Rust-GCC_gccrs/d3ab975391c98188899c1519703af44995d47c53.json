{"sha": "d3ab975391c98188899c1519703af44995d47c53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNhYjk3NTM5MWM5ODE4ODg5OWMxNTE5NzAzYWY0NDk5NWQ0N2M1Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-06T07:08:12Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-06T07:08:12Z"}, "message": "(output_init_element): Call default_conversion here.\n\nSet constructor_erroneous, etc., here.\n(process_init_element): Not here.\n\nFrom-SVN: r5086", "tree": {"sha": "b2bf95e9cccfdb9056549073ba377223530d114b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2bf95e9cccfdb9056549073ba377223530d114b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3ab975391c98188899c1519703af44995d47c53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ab975391c98188899c1519703af44995d47c53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ab975391c98188899c1519703af44995d47c53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ab975391c98188899c1519703af44995d47c53/comments", "author": null, "committer": null, "parents": [{"sha": "fda59a9a3fbfd129dbe3869e7aef5530e6ac0229", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda59a9a3fbfd129dbe3869e7aef5530e6ac0229", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fda59a9a3fbfd129dbe3869e7aef5530e6ac0229"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "ec9d44e2ac7871fa05844982d7f381531f3dd4d8", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ab975391c98188899c1519703af44995d47c53/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ab975391c98188899c1519703af44995d47c53/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=d3ab975391c98188899c1519703af44995d47c53", "patch": "@@ -5734,6 +5734,18 @@ output_init_element (value, type, field, pending)\n {\n   int duplicate = 0;\n \n+  if (TREE_CODE (TREE_TYPE (value)) == FUNCTION_TYPE\n+      || (TREE_CODE (TREE_TYPE (value)) == ARRAY_TYPE\n+\t  && comptypes (TREE_TYPE (value), type)))\n+    value = default_conversion (value);\n+\n+  if (value == error_mark_node)\n+    constructor_erroneous = 1;\n+  else if (!TREE_CONSTANT (value))\n+    constructor_constant = 0;\n+  else if (initializer_constant_valid_p (value, TREE_TYPE (value)) == 0)\n+    constructor_simple = 0;\n+\n   if (require_constant_value && ! TREE_CONSTANT (value))\n     {\n       error_init (\"initializer element%s is not constant\",\n@@ -6026,18 +6038,6 @@ process_init_element (value)\n       return;\n     }\n \n-  if (value != 0)\n-    value = default_conversion (value);\n-\n-  if (value == 0)\n-    ;\n-  else if (value == error_mark_node)\n-    constructor_erroneous = 1;\n-  else if (!TREE_CONSTANT (value))\n-    constructor_constant = 0;\n-  else if (initializer_constant_valid_p (value, TREE_TYPE (value)) == 0)\n-    constructor_simple = 0;\n-\n   if (constructor_stack->replacement_value != 0)\n     {\n       error_init (\"excess elements in struct initializer%s\","}]}