{"sha": "0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZjNTU1ZmJkMzFjOTFmYTc2MDdhZjJhNmE2Y2VjZDU3OGMxZjYwNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-05T17:54:54Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-05T17:54:54Z"}, "message": "tree-into-ssa.c (insert_phi_nodes): Use bitmap heads for dominance frontiers.\n\n\n\t* tree-into-ssa.c (insert_phi_nodes): Use bitmap heads\n\tfor dominance frontiers.\n\t(rewrite_into_ssa): Update for bitmap heads in dominance\n\tfrontiers.\n\t(insert_updated_phi_nodes_for): Likewise.\n\t(update_ssa): Likewise.\n\t* cfganal.c (compute_dominance_frontiers_1): Likewise.\n\t(compute_dominance_frontiers): Likewise.\n\t(compute_idf): Likewise.\n\t* df-problems.c (df_md_local_compute): Likewise.\n\nFrom-SVN: r160327", "tree": {"sha": "1fdfe012e004f5839f2b8afc708456a60fd9464b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fdfe012e004f5839f2b8afc708456a60fd9464b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/comments", "author": null, "committer": null, "parents": [{"sha": "546a65d9a8ac46ba01bfec34d964732481fa3949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/546a65d9a8ac46ba01bfec34d964732481fa3949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/546a65d9a8ac46ba01bfec34d964732481fa3949"}], "stats": {"total": 57, "additions": 35, "deletions": 22}, "files": [{"sha": "be4b7c7048900a093d66970cdaf3ca485b9310fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "patch": "@@ -1,3 +1,16 @@\n+2010-06-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-into-ssa.c (insert_phi_nodes): Use bitmap heads\n+\tfor dominance frontiers.\n+\t(rewrite_into_ssa): Update for bitmap heads in dominance\n+\tfrontiers.\n+\t(insert_updated_phi_nodes_for): Likewise.\n+\t(update_ssa): Likewise.\n+\t* cfganal.c (compute_dominance_frontiers_1): Likewise.\n+\t(compute_dominance_frontiers): Likewise.\n+\t(compute_idf): Likewise.\n+\t* df-problems.c (df_md_local_compute): Likewise.\n+\n 2010-06-05  Anatoly Sokolov  <aesok@post.ru>\n \n \t* target.h (struct gcc_target): Add memory_move_cost field."}, {"sha": "1d8d53beb58cc61ced2065ac6e9792788b8e9380", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "patch": "@@ -443,8 +443,8 @@ extern int pre_and_rev_post_order_compute (int *, int *, bool);\n extern int dfs_enumerate_from (basic_block, int,\n \t\t\t       bool (*)(const_basic_block, const void *),\n \t\t\t       basic_block *, int, const void *);\n-extern void compute_dominance_frontiers (bitmap *);\n-extern bitmap compute_idf (bitmap, bitmap *);\n+extern void compute_dominance_frontiers (struct bitmap_head_def *);\n+extern bitmap compute_idf (bitmap, struct bitmap_head_def *);\n extern void dump_bb_info (basic_block, bool, bool, int, const char *, FILE *);\n extern void dump_edge_info (FILE *, edge, int);\n extern void brief_dump_cfg (FILE *);"}, {"sha": "65fe337ab017c2db2e698658dba1c4586ebb09f1", "filename": "gcc/cfganal.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "patch": "@@ -1256,7 +1256,7 @@ dfs_enumerate_from (basic_block bb, int reverse,\n \n \n static void\n-compute_dominance_frontiers_1 (bitmap *frontiers)\n+compute_dominance_frontiers_1 (bitmap_head *frontiers)\n {\n   edge p;\n   edge_iterator ei;\n@@ -1275,7 +1275,7 @@ compute_dominance_frontiers_1 (bitmap *frontiers)\n \t      domsb = get_immediate_dominator (CDI_DOMINATORS, b);\n \t      while (runner != domsb)\n \t\t{\n-\t\t  if (!bitmap_set_bit (frontiers[runner->index],\n+\t\t  if (!bitmap_set_bit (&frontiers[runner->index],\n \t\t\t\t       b->index))\n \t\t    break;\n \t\t  runner = get_immediate_dominator (CDI_DOMINATORS,\n@@ -1288,7 +1288,7 @@ compute_dominance_frontiers_1 (bitmap *frontiers)\n \n \n void\n-compute_dominance_frontiers (bitmap *frontiers)\n+compute_dominance_frontiers (bitmap_head *frontiers)\n {\n   timevar_push (TV_DOM_FRONTIERS);\n \n@@ -1307,7 +1307,7 @@ compute_dominance_frontiers (bitmap *frontiers)\n    allocated for the return value.  */\n \n bitmap\n-compute_idf (bitmap def_blocks, bitmap *dfs)\n+compute_idf (bitmap def_blocks, bitmap_head *dfs)\n {\n   bitmap_iterator bi;\n   unsigned bb_index, i;\n@@ -1340,7 +1340,7 @@ compute_idf (bitmap def_blocks, bitmap *dfs)\n \t we may pull a non-existing block from the work stack.  */\n       gcc_assert (bb_index < (unsigned) last_basic_block);\n \n-      EXECUTE_IF_AND_COMPL_IN_BITMAP (dfs[bb_index], phi_insertion_points,\n+      EXECUTE_IF_AND_COMPL_IN_BITMAP (&dfs[bb_index], phi_insertion_points,\n \t                              0, i, bi)\n \t{\n \t  /* Use a safe push because if there is a definition of VAR"}, {"sha": "d4921f50778f45f47b00501c87005612845d8830", "filename": "gcc/df-problems.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "patch": "@@ -4390,7 +4390,7 @@ df_md_local_compute (bitmap all_blocks)\n   unsigned int bb_index, df_bb_index;\n   bitmap_iterator bi1, bi2;\n   basic_block bb;\n-  bitmap *frontiers;\n+  bitmap_head *frontiers;\n \n   bitmap_initialize (&seen_in_insn, &bitmap_default_obstack);\n \n@@ -4401,17 +4401,17 @@ df_md_local_compute (bitmap all_blocks)\n \n   bitmap_clear (&seen_in_insn);\n \n-  frontiers = XNEWVEC (bitmap, last_basic_block);\n+  frontiers = XNEWVEC (bitmap_head, last_basic_block);\n   FOR_ALL_BB (bb)\n-    frontiers[bb->index] = BITMAP_ALLOC (NULL);\n+    bitmap_initialize (&frontiers[bb->index], &bitmap_default_obstack);\n \n   compute_dominance_frontiers (frontiers);\n \n   /* Add each basic block's kills to the nodes in the frontier of the BB.  */\n   EXECUTE_IF_SET_IN_BITMAP (all_blocks, 0, bb_index, bi1)\n     {\n       bitmap kill = &df_md_get_bb_info (bb_index)->kill;\n-      EXECUTE_IF_SET_IN_BITMAP (frontiers[bb_index], 0, df_bb_index, bi2)\n+      EXECUTE_IF_SET_IN_BITMAP (&frontiers[bb_index], 0, df_bb_index, bi2)\n \t{\n \t  basic_block bb = BASIC_BLOCK (df_bb_index);\n \t  if (bitmap_bit_p (all_blocks, df_bb_index))\n@@ -4421,7 +4421,7 @@ df_md_local_compute (bitmap all_blocks)\n     }\n \n   FOR_ALL_BB (bb)\n-    BITMAP_FREE (frontiers[bb->index]);\n+    bitmap_clear (&frontiers[bb->index]);\n   free (frontiers);\n }\n "}, {"sha": "05b313cbe3e05b8930bbdc0e585d9fce564ecbe7", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc555fbd31c91fa7607af2a6a6cecd578c1f605/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=0fc555fbd31c91fa7607af2a6a6cecd578c1f605", "patch": "@@ -1143,7 +1143,7 @@ insert_phi_nodes_for (tree var, bitmap phi_insertion_points, bool update_p)\n    the flowgraph.  */\n \n static void\n-insert_phi_nodes (bitmap *dfs)\n+insert_phi_nodes (bitmap_head *dfs)\n {\n   referenced_var_iterator rvi;\n   bitmap_iterator bi;\n@@ -2349,7 +2349,7 @@ fini_ssa_renamer (void)\n static unsigned int\n rewrite_into_ssa (void)\n {\n-  bitmap *dfs;\n+  bitmap_head *dfs;\n   basic_block bb;\n \n   timevar_push (TV_TREE_SSA_OTHER);\n@@ -2367,9 +2367,9 @@ rewrite_into_ssa (void)\n   sbitmap_zero (interesting_blocks);\n \n   /* Initialize dominance frontier.  */\n-  dfs = XNEWVEC (bitmap, last_basic_block);\n+  dfs = XNEWVEC (bitmap_head, last_basic_block);\n   FOR_EACH_BB (bb)\n-    dfs[bb->index] = BITMAP_ALLOC (NULL);\n+    bitmap_initialize (&dfs[bb->index], &bitmap_default_obstack);\n \n   /* 1- Compute dominance frontiers.  */\n   calculate_dominance_info (CDI_DOMINATORS);\n@@ -2386,7 +2386,7 @@ rewrite_into_ssa (void)\n \n   /* Free allocated memory.  */\n   FOR_EACH_BB (bb)\n-    BITMAP_FREE (dfs[bb->index]);\n+    bitmap_clear (&dfs[bb->index]);\n   free (dfs);\n \n   sbitmap_free (interesting_blocks);\n@@ -3005,7 +3005,7 @@ release_ssa_name_after_update_ssa (tree name)\n      names is not pruned.  PHI nodes are inserted at every IDF block.  */\n \n static void\n-insert_updated_phi_nodes_for (tree var, bitmap *dfs, bitmap blocks,\n+insert_updated_phi_nodes_for (tree var, bitmap_head *dfs, bitmap blocks,\n                               unsigned update_flags)\n {\n   basic_block entry;\n@@ -3332,13 +3332,13 @@ update_ssa (unsigned update_flags)\n      and for symbols in SYMS_TO_RENAME.  */\n   if (insert_phi_p)\n     {\n-      bitmap *dfs;\n+      bitmap_head *dfs;\n \n       /* If the caller requested PHI nodes to be added, compute\n \t dominance frontiers.  */\n-      dfs = XNEWVEC (bitmap, last_basic_block);\n+      dfs = XNEWVEC (bitmap_head, last_basic_block);\n       FOR_EACH_BB (bb)\n-\tdfs[bb->index] = BITMAP_ALLOC (NULL);\n+\tbitmap_initialize (&dfs[bb->index], &bitmap_default_obstack);\n       compute_dominance_frontiers (dfs);\n \n       if (sbitmap_first_set_bit (old_ssa_names) >= 0)\n@@ -3363,7 +3363,7 @@ update_ssa (unsigned update_flags)\n \t                              update_flags);\n \n       FOR_EACH_BB (bb)\n-\tBITMAP_FREE (dfs[bb->index]);\n+\tbitmap_clear (&dfs[bb->index]);\n       free (dfs);\n \n       /* Insertion of PHI nodes may have added blocks to the region."}]}