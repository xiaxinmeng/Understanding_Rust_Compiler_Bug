{"sha": "31a02448c02a74e9e20dc3f456ad9614253d2909", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhMDI0NDhjMDJhNzRlOWUyMGRjM2Y0NTZhZDk2MTQyNTNkMjkwOQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@redhat.com", "date": "2001-03-03T03:53:44Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2001-03-03T03:53:44Z"}, "message": "tm.texi: Change STRUCT_FORCE_BLK to MEMBER_TYPE_FORCES_BLK.\n\n\t* tm.texi: Change STRUCT_FORCE_BLK to MEMBER_TYPE_FORCES_BLK.\n\t* config/c4x/c4x.h: Likewise.\n\t* stor-layout.c (compute_record_mode): Likewise.\n\t(layout_type, case ARRAY_TYPE): Use MEMBER_TYPE_FORCES_BLK.\n\nFrom-SVN: r40200", "tree": {"sha": "10c1e0656f3453c646774445c67f49fbce2877ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10c1e0656f3453c646774445c67f49fbce2877ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31a02448c02a74e9e20dc3f456ad9614253d2909", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a02448c02a74e9e20dc3f456ad9614253d2909", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a02448c02a74e9e20dc3f456ad9614253d2909", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a02448c02a74e9e20dc3f456ad9614253d2909/comments", "author": null, "committer": null, "parents": [{"sha": "eaf4e6183e957581cc1a01378a88f7ca571e7db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf4e6183e957581cc1a01378a88f7ca571e7db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaf4e6183e957581cc1a01378a88f7ca571e7db7"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "37f188048d210684b3de05d1cc69ae7461b438a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a02448c02a74e9e20dc3f456ad9614253d2909/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a02448c02a74e9e20dc3f456ad9614253d2909/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31a02448c02a74e9e20dc3f456ad9614253d2909", "patch": "@@ -1,3 +1,10 @@\n+Sat Mar  3 03:46:47 2001  J\"orn Rennecke <amylaar@redhat.com>\n+\n+\t* tm.texi: Change STRUCT_FORCE_BLK to MEMBER_TYPE_FORCES_BLK.\n+\t* config/c4x/c4x.h: Likewise.\n+\t* stor-layout.c (compute_record_mode): Likewise.\n+\t(layout_type, case ARRAY_TYPE): Use MEMBER_TYPE_FORCES_BLK.\n+\n 2001-03-02  Zack Weinberg  <zackw@stanford.edu>\n \n \t* configure.in: Kill tm.h.  Include the files in the $tm_file"}, {"sha": "72155650c9873e1f3ab9baeaddd8d90474ba2ca3", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a02448c02a74e9e20dc3f456ad9614253d2909/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a02448c02a74e9e20dc3f456ad9614253d2909/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=31a02448c02a74e9e20dc3f456ad9614253d2909", "patch": "@@ -370,7 +370,8 @@ extern const char *c4x_rpts_cycles_string, *c4x_cpu_version_string;\n \n /* If a structure has a floating point field then force structure\n    to have BLKMODE.  */\n-#define STRUCT_FORCE_BLK(FIELD) (TREE_CODE (TREE_TYPE (FIELD)) == REAL_TYPE)\n+#define MEMBER_TYPE_FORCES_BLK(FIELD) \\\n+  (TREE_CODE (TREE_TYPE (FIELD)) == REAL_TYPE)\n \n /* Number of bits in the high and low parts of a two stage\n    load of an immediate constant.  */"}, {"sha": "152eff10f36aab7218aa61c088233b378c8b5b26", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a02448c02a74e9e20dc3f456ad9614253d2909/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a02448c02a74e9e20dc3f456ad9614253d2909/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=31a02448c02a74e9e20dc3f456ad9614253d2909", "patch": "@@ -1111,12 +1111,12 @@ compute_record_mode (type)\n       if (simple_cst_equal (TYPE_SIZE (type), DECL_SIZE (field)))\n \tmode = DECL_MODE (field);\n \n-#ifdef STRUCT_FORCE_BLK\n+#ifdef MEMBER_TYPE_FORCES_BLK\n       /* With some targets, eg. c4x, it is sub-optimal\n \t to access an aligned BLKmode structure as a scalar.  */\n-      if (mode == VOIDmode && STRUCT_FORCE_BLK (field))\n+      if (mode == VOIDmode && MEMBER_TYPE_FORCES_BLK (field))\n \treturn;\n-#endif /* STRUCT_FORCE_BLK  */\n+#endif /* MEMBER_TYPE_FORCES_BLK  */\n     }\n \n   /* If we only have one real field; use its mode.  This only applies to\n@@ -1450,6 +1450,9 @@ layout_type (type)\n \n \tTYPE_MODE (type) = BLKmode;\n \tif (TYPE_SIZE (type) != 0\n+#ifdef MEMBER_TYPE_FORCES_BLK\n+\t    && ! MEMBER_TYPE_FORCES_BLK (type)\n+#endif\n \t    /* BLKmode elements force BLKmode aggregate;\n \t       else extract/store fields may lose.  */\n \t    && (TYPE_MODE (TREE_TYPE (type)) != BLKmode"}, {"sha": "9f20053e07d12417c7219037e0ba551a28230810", "filename": "gcc/tm.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a02448c02a74e9e20dc3f456ad9614253d2909/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a02448c02a74e9e20dc3f456ad9614253d2909/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=31a02448c02a74e9e20dc3f456ad9614253d2909", "patch": "@@ -1118,9 +1118,9 @@ get from @code{PCC_BITFIELD_TYPE_MATTERS}.\n Like PCC_BITFIELD_TYPE_MATTERS except that its effect is limited to\n aligning a bitfield within the structure.\n \n-@findex STRUCT_FORCE_BLK\n-@item STRUCT_FORCE_BLK (@var{field})\n-Return 1 if a structure containing @var{field} should be accessed using\n+@findex MEMBER_TYPE_FORCES_BLK\n+@item MEMBER_TYPE_FORCES_BLK (@var{field})\n+Return 1 if a structure or array containing @var{field} should be accessed using\n @code{BLKMODE}.\n \n Normally, this is not needed.  See the file @file{c4x.h} for an example"}]}