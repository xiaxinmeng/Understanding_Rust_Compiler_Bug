{"sha": "a93e7e14139f2639da66227294cef81fb58855b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkzZTdlMTQxMzlmMjYzOWRhNjYyMjcyOTRjZWY4MWZiNTg4NTViNA==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2017-06-27T08:54:53Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2017-06-27T08:54:53Z"}, "message": "vxworks.h (VXWORKS_LIBS_RTP): Alternative definition for 64bit configurations.\n\n2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* config/vxworks.h (VXWORKS_LIBS_RTP): Alternative definition for\n  \t64bit configurations.\n  \t(PTR_DIFF_TYPE): Alternative definition for TARGET_LP64.\n  \t(SIZE_TYPE): Likewise.\n  \t* config/vxworks.c (vxworks_emutls_var_fields): Use\n  \tlong_unsigned_type_node instead of unsigned_type_node as the offset\n\tfield type, which is \"pointer\" mode in emutls.c.\n\nFrom-SVN: r249681", "tree": {"sha": "ea72a8d8973094166a3f0f4cd6d17d0e6f720425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea72a8d8973094166a3f0f4cd6d17d0e6f720425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a93e7e14139f2639da66227294cef81fb58855b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a93e7e14139f2639da66227294cef81fb58855b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a93e7e14139f2639da66227294cef81fb58855b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a93e7e14139f2639da66227294cef81fb58855b4/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c103185290d8e69b03ab40678093514821615abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c103185290d8e69b03ab40678093514821615abd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c103185290d8e69b03ab40678093514821615abd"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "3f2754154a2267561bcca89b19130e48b0c93731", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93e7e14139f2639da66227294cef81fb58855b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93e7e14139f2639da66227294cef81fb58855b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a93e7e14139f2639da66227294cef81fb58855b4", "patch": "@@ -1,3 +1,13 @@\n+2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* config/vxworks.h (VXWORKS_LIBS_RTP): Alternative definition for\n+  \t64bit configurations.\n+  \t(PTR_DIFF_TYPE): Alternative definition for TARGET_LP64.\n+  \t(SIZE_TYPE): Likewise.\n+  \t* config/vxworks.c (vxworks_emutls_var_fields): Use\n+  \tlong_unsigned_type_node instead of unsigned_type_node as the offset\n+\tfield type, which is \"pointer\" mode in emutls.c.\n+\n 2017-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/81209"}, {"sha": "8f1c78d5207939bd0b53dcca1bb3552f652e303f", "filename": "gcc/config/vxworks.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93e7e14139f2639da66227294cef81fb58855b4/gcc%2Fconfig%2Fvxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93e7e14139f2639da66227294cef81fb58855b4/gcc%2Fconfig%2Fvxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.c?ref=a93e7e14139f2639da66227294cef81fb58855b4", "patch": "@@ -80,8 +80,10 @@ vxworks_emutls_var_fields (tree type, tree *name)\n   DECL_CHAIN (field) = next_field;\n   next_field = field;\n \n+  /* The offset field is declared as an unsigned int with pointer mode.  */\n   field = build_decl (BUILTINS_LOCATION, FIELD_DECL,\n-\t\t      get_identifier (\"offset\"), unsigned_type_node);\n+\t\t      get_identifier (\"offset\"), long_unsigned_type_node);\n+\n   DECL_CONTEXT (field) = type;\n   DECL_CHAIN (field) = next_field;\n "}, {"sha": "9afd332e0144aa410f7c47f480454f11c6075ecf", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93e7e14139f2639da66227294cef81fb58855b4/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93e7e14139f2639da66227294cef81fb58855b4/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=a93e7e14139f2639da66227294cef81fb58855b4", "patch": "@@ -70,7 +70,11 @@ along with GCC; see the file COPYING3.  If not see\n /* The references to __init and __fini will be satisfied by\n    libc_internal.a.  */\n \n+#if TARGET_64BIT_DEFAULT\n+#define VXWORKS_LIBS_RTP \"-lsyscall -lc -lgcc -lc_internal -lnet -ldsi\"\n+#else\n #define VXWORKS_LIBS_RTP \"-lc -lgcc -lc_internal -lnet -ldsi\"\n+#endif\n \n /* On Vx6 and previous, the libraries to pick up depends on the architecture,\n    so cannot be defined for all archs at once.  On Vx7, a VSB is always needed\n@@ -147,10 +151,10 @@ extern void vxworks_asm_out_destructor (rtx symbol, int priority);\n #define VXWORKS_GOTT_INDEX \"__GOTT_INDEX__\"\n \n #undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n+#define PTRDIFF_TYPE (TARGET_LP64 ? \"long int\" : \"int\")\n \n #undef SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n+#define SIZE_TYPE (TARGET_LP64 ? \"long unsigned int\" : \"unsigned int\")\n \n #undef TARGET_LIBC_HAS_FUNCTION\n #define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}]}