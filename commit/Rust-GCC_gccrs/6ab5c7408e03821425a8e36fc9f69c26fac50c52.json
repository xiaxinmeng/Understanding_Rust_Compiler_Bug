{"sha": "6ab5c7408e03821425a8e36fc9f69c26fac50c52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFiNWM3NDA4ZTAzODIxNDI1YThlMzZmYzlmNjljMjZmYWM1MGM1Mg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-05-28T01:56:31Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-05-28T01:56:31Z"}, "message": "decl.c (complete_array_type): Allocate off same obstack.\n\n\t* decl.c (complete_array_type): Allocate off same obstack. Fix\n\tDO_DEFAULT comment to match reality.\n\t* friend.c (make_friend_class): Fix diagnostic typo.\n\nFrom-SVN: r27210", "tree": {"sha": "9791b3b59a56e1f45b6babe5c71b68fc3b150ecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9791b3b59a56e1f45b6babe5c71b68fc3b150ecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ab5c7408e03821425a8e36fc9f69c26fac50c52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab5c7408e03821425a8e36fc9f69c26fac50c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab5c7408e03821425a8e36fc9f69c26fac50c52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab5c7408e03821425a8e36fc9f69c26fac50c52/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cb15ab62fc0326dc0be48ac872c1d4e9e44a7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb15ab62fc0326dc0be48ac872c1d4e9e44a7b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb15ab62fc0326dc0be48ac872c1d4e9e44a7b7"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "f6496eca372fefd7d209abec935151cbeb4d111b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab5c7408e03821425a8e36fc9f69c26fac50c52/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab5c7408e03821425a8e36fc9f69c26fac50c52/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6ab5c7408e03821425a8e36fc9f69c26fac50c52", "patch": "@@ -1,3 +1,10 @@\n+1999-05-28  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl.c (complete_array_type): Allocate off same obstack. Fix\n+\tDO_DEFAULT comment to match reality.\n+\n+\t* friend.c (make_friend_class): Fix diagnostic typo.\n+\n 1999-05-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (lookup_namespace_name): Handle getting a"}, {"sha": "ea6acd738903dd38befdd153eda379fd72215044", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab5c7408e03821425a8e36fc9f69c26fac50c52/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab5c7408e03821425a8e36fc9f69c26fac50c52/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6ab5c7408e03821425a8e36fc9f69c26fac50c52", "patch": "@@ -8558,7 +8558,7 @@ expand_static_init (decl, init)\n \f\n /* Make TYPE a complete type based on INITIAL_VALUE.\n    Return 0 if successful, 1 if INITIAL_VALUE can't be deciphered,\n-   2 if there was no information (in which case assume 1 if DO_DEFAULT).  */\n+   2 if there was no information (in which case assume 0 if DO_DEFAULT).  */\n \n int\n complete_array_type (type, initial_value, do_default)\n@@ -8567,7 +8567,10 @@ complete_array_type (type, initial_value, do_default)\n {\n   register tree maxindex = NULL_TREE;\n   int value = 0;\n-\n+  \n+  /* Allocate on the same obstack as TYPE.  */\n+  push_obstacks (TYPE_OBSTACK (type), TYPE_OBSTACK (type));\n+  \n   if (initial_value)\n     {\n       /* Note MAXINDEX  is really the maximum index,\n@@ -8615,23 +8618,28 @@ complete_array_type (type, initial_value, do_default)\n   if (maxindex)\n     {\n       tree itype;\n+      tree domain;\n+\n+      domain = build_index_type (maxindex);\n+      TYPE_DOMAIN (type) = domain;\n \n-      TYPE_DOMAIN (type) = build_index_type (maxindex);\n       if (! TREE_TYPE (maxindex))\n-\tTREE_TYPE (maxindex) = TYPE_DOMAIN (type);\n+\tTREE_TYPE (maxindex) = domain;\n       if (initial_value)\n         itype = TREE_TYPE (initial_value);\n       else\n \titype = NULL;\n       if (itype && !TYPE_DOMAIN (itype))\n-\tTYPE_DOMAIN (itype) = TYPE_DOMAIN (type);\n+\tTYPE_DOMAIN (itype) = domain;\n       /* The type of the main variant should never be used for arrays\n \t of different sizes.  It should only ever be completed with the\n \t size of the array.  */\n       if (! TYPE_DOMAIN (TYPE_MAIN_VARIANT (type)))\n-\tTYPE_DOMAIN (TYPE_MAIN_VARIANT (type)) = TYPE_DOMAIN (type);\n+\tTYPE_DOMAIN (TYPE_MAIN_VARIANT (type)) = domain;\n     }\n \n+  pop_obstacks();\n+  \n   /* Lay out the type now that we can get the real answer.  */\n \n   layout_type (type);"}, {"sha": "a2d0c4d8d70e8dded88364911f0dd3510020fb07", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab5c7408e03821425a8e36fc9f69c26fac50c52/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab5c7408e03821425a8e36fc9f69c26fac50c52/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=6ab5c7408e03821425a8e36fc9f69c26fac50c52", "patch": "@@ -296,7 +296,7 @@ make_friend_class (type, friend_type)\n \t   template <class T> friend typename S<T>::X;\n \n \t which isn't any of these.  */\n-      cp_error (\"typename type `%T' declare `friend'\",\n+      cp_error (\"typename type `%T' declared `friend'\",\n \t\tfriend_type);\n       return;\n     }"}]}