{"sha": "595ae7743c93bfda40a5914d15ae0db2e7e57301", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk1YWU3NzQzYzkzYmZkYTQwYTU5MTRkMTVhZTBkYjJlN2U1NzMwMQ==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-23T16:24:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-23T16:24:39Z"}, "message": "Merge #521\n\n521: Handle empty/unit tuple structs in the parser. r=philberty a=philberty\n\nA tuple struct can be empty, in which case it is a unit tuple struct.\r\nHandle this in Parser<ManagedTokenSource>::parse_struct by creating\r\na empty tuple_field vector instead of calling parse_tuple_fields.\r\n\r\nAdd a testcase to show empty tuple structs are now accepted.\r\n\r\nAddresses: #385\r\n\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "7011e1532b856d9e3beb2062ddf2dd1d5f5c169e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7011e1532b856d9e3beb2062ddf2dd1d5f5c169e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/595ae7743c93bfda40a5914d15ae0db2e7e57301", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg02BHCRBK7hj4Ov3rIwAA9XAIACDwph2B3mGsC453WJPLE7Yk\nfCU+Pa1UH8MrPjgotfO2kiTCE9rah1djw+NfL6+p2/SgyQwEdaKq70ys+rv2Uhuq\nak0jpspUQ+ARh1Wn3fPPuw1ZSlU/fae7WxiZPeXRfqd6502ACViTQiXpYmsHf2eK\n9FHTmevuhSCcOXbOH1x3lcIVpVqQPb1ZWonHfb/61eJ32oZIV3HpeZtO3kY6u5a1\n5GVjr2RN6PgMfUtoleUNFDVQPktqoF2ePkDa7BY3BA2e658JvFaM5JIDuUFZzZCZ\nF0eCe9bL7MOnBvqSDdbFhDwrH415alAxZ/IUK3oFBDQFivv/IeYj2xfMPmHeSKg=\n=+5ek\n-----END PGP SIGNATURE-----\n", "payload": "tree 7011e1532b856d9e3beb2062ddf2dd1d5f5c169e\nparent 4e5baf7e679a890c22804d16b99fc6794486825b\nparent 23f622047ec24aa15b98fecbfc9376f6bafcd8cb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1624465479 +0000\ncommitter GitHub <noreply@github.com> 1624465479 +0000\n\nMerge #521\n\n521: Handle empty/unit tuple structs in the parser. r=philberty a=philberty\n\nA tuple struct can be empty, in which case it is a unit tuple struct.\r\nHandle this in Parser<ManagedTokenSource>::parse_struct by creating\r\na empty tuple_field vector instead of calling parse_tuple_fields.\r\n\r\nAdd a testcase to show empty tuple structs are now accepted.\r\n\r\nAddresses: #385\r\n\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595ae7743c93bfda40a5914d15ae0db2e7e57301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/595ae7743c93bfda40a5914d15ae0db2e7e57301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595ae7743c93bfda40a5914d15ae0db2e7e57301/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e5baf7e679a890c22804d16b99fc6794486825b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e5baf7e679a890c22804d16b99fc6794486825b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e5baf7e679a890c22804d16b99fc6794486825b"}, {"sha": "23f622047ec24aa15b98fecbfc9376f6bafcd8cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f622047ec24aa15b98fecbfc9376f6bafcd8cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23f622047ec24aa15b98fecbfc9376f6bafcd8cb"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "dfac00e3dbc94077377106f68f96f3eead42d916", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595ae7743c93bfda40a5914d15ae0db2e7e57301/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595ae7743c93bfda40a5914d15ae0db2e7e57301/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=595ae7743c93bfda40a5914d15ae0db2e7e57301", "patch": "@@ -3980,7 +3980,12 @@ Parser<ManagedTokenSource>::parse_struct (AST::Visibility vis,\n       lexer.skip_token ();\n \n       // parse tuple fields\n-      std::vector<AST::TupleField> tuple_fields = parse_tuple_fields ();\n+      std::vector<AST::TupleField> tuple_fields;\n+      // Might be empty tuple for unit tuple struct.\n+      if (lexer.peek_token ()->get_id () == RIGHT_PAREN)\n+\ttuple_fields = std::vector<AST::TupleField> ();\n+      else\n+\ttuple_fields = parse_tuple_fields ();\n \n       // tuple parameters must have closing parenthesis\n       if (!skip_token (RIGHT_PAREN))"}, {"sha": "cda19d2af0bc41820956a0e1c2c710cd2a485c67", "filename": "gcc/testsuite/rust/compile/torture/tuple_struct_unit.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/595ae7743c93bfda40a5914d15ae0db2e7e57301/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_struct_unit.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/595ae7743c93bfda40a5914d15ae0db2e7e57301/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_struct_unit.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_struct_unit.rs?ref=595ae7743c93bfda40a5914d15ae0db2e7e57301", "patch": "@@ -0,0 +1,11 @@\n+struct E();\n+struct T(E,E,());\n+\n+fn main()\n+{\n+  let z0 = E();\n+  let z1 = E();\n+  let t = T(z0,z1,());\n+  let z = t.2;\n+  z\n+}"}]}