{"sha": "c34938a8aa48af61df1835c2c0dab95d4ef6ca1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM0OTM4YThhYTQ4YWY2MWRmMTgzNWMyYzBkYWI5NWQ0ZWY2Y2ExYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-06-12T11:03:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-06-12T11:03:50Z"}, "message": "re PR middle-end/36506 (Broken #pragma omp sections reduction (+:x))\n\n\tPR middle-end/36506\n\t* omp-low.c (expand_omp_sections): Handle #pragma omp sections with\n\treductions.\n\n\t* testsuite/libgomp.c/reduction-5.c: New test.\n\nFrom-SVN: r136696", "tree": {"sha": "8845c75445d9484761a9f34010411ff92b5aefca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8845c75445d9484761a9f34010411ff92b5aefca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b377855627f22cdef5712621e89e68048a94a164", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b377855627f22cdef5712621e89e68048a94a164", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b377855627f22cdef5712621e89e68048a94a164"}], "stats": {"total": 123, "additions": 121, "deletions": 2}, "files": [{"sha": "f2c51854bcd63458a6218afe835fcfb3a6c25fea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c34938a8aa48af61df1835c2c0dab95d4ef6ca1a", "patch": "@@ -1,3 +1,9 @@\n+2008-06-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/36506\n+\t* omp-low.c (expand_omp_sections): Handle #pragma omp sections with\n+\treductions.\n+\n 2008-06-12  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/36345"}, {"sha": "85b83332ff80614dde1c7c1522fbc76e447793d4", "filename": "gcc/omp-low.c", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=c34938a8aa48af61df1835c2c0dab95d4ef6ca1a", "patch": "@@ -4389,6 +4389,8 @@ expand_omp_sections (struct omp_region *region)\n   unsigned i, casei, len;\n   basic_block entry_bb, l0_bb, l1_bb, l2_bb, default_bb;\n   block_stmt_iterator si;\n+  edge_iterator ei;\n+  edge e;\n   struct omp_region *inner;\n   bool exit_reachable = region->cont != NULL;\n \n@@ -4399,10 +4401,30 @@ expand_omp_sections (struct omp_region *region)\n   l2_bb = region->exit;\n   if (exit_reachable)\n     {\n-      gcc_assert (single_pred (l2_bb) == l0_bb);\n+      if (single_pred (l2_bb) == l0_bb)\n+\tl2 = tree_block_label (l2_bb);\n+      else\n+\t{\n+\t  /* This can happen if there are reductions.  */\n+\t  len = EDGE_COUNT (l0_bb->succs);\n+\t  gcc_assert (len > 0);\n+\t  e = EDGE_SUCC (l0_bb, len - 1);\n+\t  si = bsi_last (e->dest);\n+\t  if (bsi_end_p (si) || TREE_CODE (bsi_stmt (si)) != OMP_SECTION)\n+\t    l2 = tree_block_label (e->dest);\n+\t  else\n+\t    FOR_EACH_EDGE (e, ei, l0_bb->succs)\n+\t      {\n+\t\tsi = bsi_last (e->dest);\n+\t\tif (bsi_end_p (si) || TREE_CODE (bsi_stmt (si)) != OMP_SECTION)\n+\t\t  {\n+\t\t    l2 = tree_block_label (e->dest);\n+\t\t    break;\n+\t\t  }\n+\t      }\n+\t}\n       default_bb = create_empty_bb (l1_bb->prev_bb);\n       l1 = tree_block_label (l1_bb);\n-      l2 = tree_block_label (l2_bb);\n     }\n   else\n     {\n@@ -4480,6 +4502,14 @@ expand_omp_sections (struct omp_region *region)\n     {\n       basic_block s_entry_bb, s_exit_bb;\n \n+      /* Skip optional reduction region.  */\n+      if (inner->type == OMP_ATOMIC_LOAD)\n+\t{\n+\t  --i;\n+\t  --casei;\n+\t  continue;\n+\t}\n+\n       s_entry_bb = inner->entry;\n       s_exit_bb = inner->exit;\n "}, {"sha": "ff9ed0374c935f80029a31b550e6a26118c2e6c3", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=c34938a8aa48af61df1835c2c0dab95d4ef6ca1a", "patch": "@@ -1,3 +1,8 @@\n+2008-06-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/36506\n+\t* testsuite/libgomp.c/reduction-5.c: New test.\n+\n 2008-06-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libgomp.h (struct gomp_task): Add in_tied_task field."}, {"sha": "de87d9f6dc89773d358d846f170ccd4864980447", "filename": "libgomp/testsuite/libgomp.c/reduction-5.c", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/libgomp%2Ftestsuite%2Flibgomp.c%2Freduction-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c34938a8aa48af61df1835c2c0dab95d4ef6ca1a/libgomp%2Ftestsuite%2Flibgomp.c%2Freduction-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Freduction-5.c?ref=c34938a8aa48af61df1835c2c0dab95d4ef6ca1a", "patch": "@@ -0,0 +1,78 @@\n+/* PR middle-end/36506 */\n+\n+extern void abort (void);\n+\n+int\n+main (void)\n+{\n+  int sum = 0, prod = 1;\n+#pragma omp parallel\n+  #pragma omp sections reduction (+:sum)\n+    {\n+    #pragma omp section\n+      sum += 2;\n+    #pragma omp section\n+      sum += 2;\n+    #pragma omp section\n+      sum += 2;\n+    }\n+  if (sum != 6)\n+    abort ();\n+  sum = 0;\n+#pragma omp parallel sections reduction (+:sum)\n+  {\n+  #pragma omp section\n+    sum += 2;\n+  #pragma omp section\n+    sum += 2;\n+  #pragma omp section\n+    sum += 2;\n+  }\n+  if (sum != 6)\n+    abort ();\n+  sum = 0;\n+#pragma omp parallel\n+  #pragma omp sections reduction (+:sum) reduction (*:prod)\n+    {\n+    #pragma omp section\n+      {\n+\tsum += 2;\n+\tprod *= 2;\n+      }\n+    #pragma omp section\n+      {\n+\tsum += 2;\n+\tprod *= 2;\n+      }\n+    #pragma omp section\n+      {\n+\tsum += 2;\n+\tprod *= 2;\n+      }\n+    }\n+  if (sum != 6 || prod != 8)\n+    abort ();\n+  sum = 0;\n+  prod = 1;\n+#pragma omp parallel sections reduction (+:sum) reduction (*:prod)\n+  {\n+  #pragma omp section\n+    {\n+      sum += 2;\n+      prod *= 2;\n+    }\n+  #pragma omp section\n+    {\n+      sum += 2;\n+      prod *= 2;\n+    }\n+  #pragma omp section\n+    {\n+      sum += 2;\n+      prod *= 2;\n+    }\n+  }\n+  if (sum != 6 || prod != 8)\n+    abort ();\n+  return 0;\n+}"}]}