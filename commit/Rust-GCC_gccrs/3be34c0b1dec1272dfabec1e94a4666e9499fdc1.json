{"sha": "3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JlMzRjMGIxZGVjMTI3MmRmYWJlYzFlOTRhNDY2NmU5NDk5ZmRjMQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-01-29T07:11:16Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-01-29T07:11:16Z"}, "message": "re PR fortran/84073 (In -fc-prototypes fixed (nonzero) length strings are mapped to plain char in prototype.)\n\n2017-01-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/84073\n\t* resolve.c (resolve_component): Ensure BIND(C) character\n\tcomponents have length one.\n\t(resolve_symbol): Likewise for variables.\n\n2017-01-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/84073\n\t* gfortran.dg/bind_c_usage_31.f90: New test.\n\nFrom-SVN: r257138", "tree": {"sha": "d1acf816d6e79e1b17fc516eaa0ccb9955c86ab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1acf816d6e79e1b17fc516eaa0ccb9955c86ab6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/comments", "author": null, "committer": null, "parents": [{"sha": "d6ffdc5b0a7e6fcd42fa9d658008589b6175e87c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ffdc5b0a7e6fcd42fa9d658008589b6175e87c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6ffdc5b0a7e6fcd42fa9d658008589b6175e87c"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "96e6fb214029ad054a48fbdc9e82105fce553e45", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "patch": "@@ -1,3 +1,10 @@\n+2017-01-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/84073\n+\t* resolve.c (resolve_component): Ensure BIND(C) character\n+\tcomponents have length one.\n+\t(resolve_symbol): Likewise for variables.\n+\n 2018-01-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/84065"}, {"sha": "9c8ba868a5a09a0b846a63f059d22f0c0f075599", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "patch": "@@ -13557,6 +13557,17 @@ resolve_component (gfc_component *c, gfc_symbol *sym)\n       return false;\n     }\n \n+  /* F2003, 15.2.1 - length has to be one.  */\n+  if (sym->attr.is_bind_c && c->ts.type == BT_CHARACTER\n+      && (c->ts.u.cl == NULL || c->ts.u.cl->length == NULL\n+\t  || !gfc_is_constant_expr (c->ts.u.cl->length)\n+\t  || mpz_cmp_si (c->ts.u.cl->length->value.integer, 1) != 0))\n+    {\n+      gfc_error (\"Component %qs of BIND(C) type at %L must have length one\",\n+\t\t c->name, &c->loc);\n+      return false;\n+    }\n+\n   if (c->attr.proc_pointer && c->ts.interface)\n     {\n       gfc_symbol *ifc = c->ts.interface;\n@@ -14804,6 +14815,15 @@ resolve_symbol (gfc_symbol *sym)\n \t\t     \"module level scope\", sym->name, &(sym->declared_at));\n \t  t = false;\n \t}\n+      else if (sym->ts.type == BT_CHARACTER\n+\t       && (sym->ts.u.cl == NULL || sym->ts.u.cl->length == NULL\n+\t\t   || !gfc_is_constant_expr (sym->ts.u.cl->length)\n+\t\t   || mpz_cmp_si (sym->ts.u.cl->length->value.integer, 1) != 0))\n+\t{\n+\t  gfc_error (\"BIND(C) Variable %qs at %L must have length one\",\n+\t\t     sym->name, &sym->declared_at);\n+\t  t = false;\n+\t}\n       else if (sym->common_head != NULL && sym->attr.implicit_type == 0)\n         {\n           t = verify_com_block_vars_c_interop (sym->common_head);"}, {"sha": "fa663f297e293f06d8dc784145742d93a8791d6f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "patch": "@@ -1,3 +1,8 @@\n+2017-01-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/84073\n+\t* gfortran.dg/bind_c_usage_31.f90: New test.\n+\n 2018-01-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/83924"}, {"sha": "052713ede35f607050137663296605779812801a", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_31.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_31.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be34c0b1dec1272dfabec1e94a4666e9499fdc1/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_31.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_31.f90?ref=3be34c0b1dec1272dfabec1e94a4666e9499fdc1", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/84073 - this was accepted before.\n+module mod\n+  use iso_c_binding\n+  type, bind(c) :: a\n+     character(len=2,kind=c_char) :: b ! { dg-error \"must have length one\" }\n+  end type a\n+  character(len=2), bind(C) :: c ! { dg-error \"must have length one\" }\n+end module mod"}]}