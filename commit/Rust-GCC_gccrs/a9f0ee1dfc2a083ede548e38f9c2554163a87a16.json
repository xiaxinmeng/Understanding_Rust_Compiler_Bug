{"sha": "a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "node_id": "C_kwDOANBUbNoAKGE5ZjBlZTFkZmMyYTA4M2VkZTU0OGUzOGY5YzI1NTQxNjNhODdhMTY", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-12-08T14:19:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-06T17:11:39Z"}, "message": "[Ada] Remove unnecessary guards for non-empty lists\n\ngcc/ada/\n\n\t* errout.adb (Remove_Warning_Messages): Remove unnecessary guard.\n\t* exp_util.adb (Kill_Dead_Code): Likewise.\n\t* par_sco.adb (Traverse_Declarations_Or_Statements): Likewise.\n\t* sem_ch3.adb (Build_Derived_Record_Type): Likewise.\n\t* sem_ch4.adb (Traverse_Interfaces): Likewise.\n\t* sem_eval.adb (Traverse_Interfaces): Likewise.\n\t* sem_util.adb (Collect_Interfaces): Likewise.\n\t(Has_Non_Null_Statements, Side_Effect_Free_Statements):\n\tLikewise; turn into WHILE loops, for consistency.", "tree": {"sha": "3a084becc3f847857887226894b2da973078a8fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a084becc3f847857887226894b2da973078a8fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ca7f4e26dd10243da57584175db137115e5aefd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca7f4e26dd10243da57584175db137115e5aefd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ca7f4e26dd10243da57584175db137115e5aefd"}], "stats": {"total": 200, "additions": 90, "deletions": 110}, "files": [{"sha": "8bfbe46315abbc4a12779ee352813a1a1b00fed7", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "patch": "@@ -3378,13 +3378,11 @@ package body Errout is\n    procedure Remove_Warning_Messages (L : List_Id) is\n       Stat : Node_Id;\n    begin\n-      if Is_Non_Empty_List (L) then\n-         Stat := First (L);\n-         while Present (Stat) loop\n-            Remove_Warning_Messages (Stat);\n-            Next (Stat);\n-         end loop;\n-      end if;\n+      Stat := First (L);\n+      while Present (Stat) loop\n+         Remove_Warning_Messages (Stat);\n+         Next (Stat);\n+      end loop;\n    end Remove_Warning_Messages;\n \n    --------------------"}, {"sha": "7a3e4b597e8964b2d50d4a2dfa0420a2c23dff7a", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "patch": "@@ -9495,14 +9495,12 @@ package body Exp_Util is\n    begin\n       W := Warn;\n \n-      if Is_Non_Empty_List (L) then\n-         N := First (L);\n-         while Present (N) loop\n-            Kill_Dead_Code (N, W);\n-            W := False;\n-            Next (N);\n-         end loop;\n-      end if;\n+      N := First (L);\n+      while Present (N) loop\n+         Kill_Dead_Code (N, W);\n+         W := False;\n+         Next (N);\n+      end loop;\n    end Kill_Dead_Code;\n \n    -----------------------------"}, {"sha": "5ddd213ae2ef99def8c89639b7d0483379be522f", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "patch": "@@ -2417,21 +2417,18 @@ package body Par_SCO is\n \n       --  Loop through statements or declarations\n \n-      if Is_Non_Empty_List (L) then\n-         N := First (L);\n-         while Present (N) loop\n+      N := First (L);\n+      while Present (N) loop\n \n-            --  Note: For separate bodies, we see the tree after Par.Labl has\n-            --  introduced implicit labels, so we need to ignore those nodes.\n+         --  Note: For separate bodies, we see the tree after Par.Labl has\n+         --  introduced implicit labels, so we need to ignore those nodes.\n \n-            if Nkind (N) /= N_Implicit_Label_Declaration then\n-               Traverse_One (N);\n-            end if;\n-\n-            Next (N);\n-         end loop;\n+         if Nkind (N) /= N_Implicit_Label_Declaration then\n+            Traverse_One (N);\n+         end if;\n \n-      end if;\n+         Next (N);\n+      end loop;\n \n       --  End sequence of statements and flush deferred decisions\n "}, {"sha": "7643cd163776a9b5e79d7978c717736ce6f3df13", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "patch": "@@ -9351,13 +9351,11 @@ package body Sem_Ch3 is\n          declare\n             Iface : Node_Id;\n          begin\n-            if Is_Non_Empty_List (Interface_List (Type_Def)) then\n-               Iface := First (Interface_List (Type_Def));\n-               while Present (Iface) loop\n-                  Freeze_Before (N, Etype (Iface));\n-                  Next (Iface);\n-               end loop;\n-            end if;\n+            Iface := First (Interface_List (Type_Def));\n+            while Present (Iface) loop\n+               Freeze_Before (N, Etype (Iface));\n+               Next (Iface);\n+            end loop;\n          end;\n       end if;\n "}, {"sha": "36ebf37859f061d69b2d83876f07019118ddd4ec", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "patch": "@@ -9597,31 +9597,29 @@ package body Sem_Ch4 is\n          begin\n             Error := False;\n \n-            if Is_Non_Empty_List (Intface_List) then\n-               Intface := First (Intface_List);\n-               while Present (Intface) loop\n+            Intface := First (Intface_List);\n+            while Present (Intface) loop\n \n-                  --  Look for acceptable class-wide homonyms associated with\n-                  --  the interface.\n+               --  Look for acceptable class-wide homonyms associated with the\n+               --  interface.\n \n-                  Traverse_Homonyms (Etype (Intface), Error);\n+               Traverse_Homonyms (Etype (Intface), Error);\n \n-                  if Error then\n-                     return;\n-                  end if;\n+               if Error then\n+                  return;\n+               end if;\n \n-                  --  Continue the search by looking at each of the interface's\n-                  --  associated interface ancestors.\n+               --  Continue the search by looking at each of the interface's\n+               --  associated interface ancestors.\n \n-                  Traverse_Interfaces (Etype (Intface), Error);\n+               Traverse_Interfaces (Etype (Intface), Error);\n \n-                  if Error then\n-                     return;\n-                  end if;\n+               if Error then\n+                  return;\n+               end if;\n \n-                  Next (Intface);\n-               end loop;\n-            end if;\n+               Next (Intface);\n+            end loop;\n          end Traverse_Interfaces;\n \n       --  Start of processing for Try_Class_Wide_Operation"}, {"sha": "33303c4015b02db1c62914697609a63ddbddbb17", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "patch": "@@ -7479,13 +7479,11 @@ package body Sem_Eval is\n       procedure Why_Not_Static_List (L : List_Id) is\n          N : Node_Id;\n       begin\n-         if Is_Non_Empty_List (L) then\n-            N := First (L);\n-            while Present (N) loop\n-               Why_Not_Static (N);\n-               Next (N);\n-            end loop;\n-         end if;\n+         N := First (L);\n+         while Present (N) loop\n+            Why_Not_Static (N);\n+            Next (N);\n+         end loop;\n       end Why_Not_Static_List;\n \n    --  Start of processing for Why_Not_Static"}, {"sha": "48f4bfb7d924d87c69995444a3605eab8c94b1e6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 44, "deletions": 51, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f0ee1dfc2a083ede548e38f9c2554163a87a16/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a9f0ee1dfc2a083ede548e38f9c2554163a87a16", "patch": "@@ -6046,31 +6046,29 @@ package body Sem_Util is\n \n          --  Traverse the graph of ancestor interfaces\n \n-         if Is_Non_Empty_List (Abstract_Interface_List (Full_T)) then\n-            Id := First (Abstract_Interface_List (Full_T));\n-            while Present (Id) loop\n-               Iface := Etype (Id);\n-\n-               --  Protect against wrong uses. For example:\n-               --    type I is interface;\n-               --    type O is tagged null record;\n-               --    type Wrong is new I and O with null record; -- ERROR\n-\n-               if Is_Interface (Iface) then\n-                  if Exclude_Parents\n-                    and then Etype (T) /= T\n-                    and then Interface_Present_In_Ancestor (Etype (T), Iface)\n-                  then\n-                     null;\n-                  else\n-                     Collect (Iface);\n-                     Append_Unique_Elmt (Iface, Ifaces_List);\n-                  end if;\n+         Id := First (Abstract_Interface_List (Full_T));\n+         while Present (Id) loop\n+            Iface := Etype (Id);\n+\n+            --  Protect against wrong uses. For example:\n+            --    type I is interface;\n+            --    type O is tagged null record;\n+            --    type Wrong is new I and O with null record; -- ERROR\n+\n+            if Is_Interface (Iface) then\n+               if Exclude_Parents\n+                 and then Etype (T) /= T\n+                 and then Interface_Present_In_Ancestor (Etype (T), Iface)\n+               then\n+                  null;\n+               else\n+                  Collect (Iface);\n+                  Append_Unique_Elmt (Iface, Ifaces_List);\n                end if;\n+            end if;\n \n-               Next (Id);\n-            end loop;\n-         end if;\n+            Next (Id);\n+         end loop;\n       end Collect;\n \n    --  Start of processing for Collect_Interfaces\n@@ -13024,18 +13022,15 @@ package body Sem_Util is\n       Node : Node_Id;\n \n    begin\n-      if Is_Non_Empty_List (L) then\n-         Node := First (L);\n+      Node := First (L);\n \n-         loop\n-            if Nkind (Node) not in N_Null_Statement | N_Call_Marker then\n-               return True;\n-            end if;\n+      while Present (Node) loop\n+         if Nkind (Node) not in N_Null_Statement | N_Call_Marker then\n+            return True;\n+         end if;\n \n-            Next (Node);\n-            exit when Node = Empty;\n-         end loop;\n-      end if;\n+         Next (Node);\n+      end loop;\n \n       return False;\n    end Has_Non_Null_Statements;\n@@ -13094,28 +13089,26 @@ package body Sem_Util is\n       Node : Node_Id;\n \n    begin\n-      if Is_Non_Empty_List (L) then\n-         Node := First (L);\n+      Node := First (L);\n \n-         loop\n-            case Nkind (Node) is\n-               when N_Null_Statement | N_Call_Marker | N_Raise_xxx_Error =>\n-                  null;\n-               when N_Object_Declaration =>\n-                  if Present (Expression (Node))\n-                    and then not Side_Effect_Free (Expression (Node))\n-                  then\n-                     return False;\n-                  end if;\n+      while Present (Node) loop\n+         case Nkind (Node) is\n+            when N_Null_Statement | N_Call_Marker | N_Raise_xxx_Error =>\n+               null;\n \n-               when others =>\n+            when N_Object_Declaration =>\n+               if Present (Expression (Node))\n+                 and then not Side_Effect_Free (Expression (Node))\n+               then\n                   return False;\n-            end case;\n+               end if;\n \n-            Next (Node);\n-            exit when Node = Empty;\n-         end loop;\n-      end if;\n+            when others =>\n+               return False;\n+         end case;\n+\n+         Next (Node);\n+      end loop;\n \n       return True;\n    end Side_Effect_Free_Statements;"}]}