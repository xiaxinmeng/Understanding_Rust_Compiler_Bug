{"sha": "f4f29b599812c8790f6d7903f5da8ca211c7657e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmMjliNTk5ODEyYzg3OTBmNmQ3OTAzZjVkYThjYTIxMWM3NjU3ZQ==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2007-07-25T06:26:45Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2007-07-25T06:26:45Z"}, "message": "ternary.h: Remove.\n\ninclude/\n\t* ternary.h: Remove.\n\nlibiberty/\n\t* Makefile.in (CFILES): Remove ternary.c.\n\t(REQUIRED_OFILES): Remove ./ternary.o.\n\t(INSTALLED_HEADERS): Remove ternary.h.\n\t(ternary.o): Remove.\n\t* ternary.c: Remove.\n\nFrom-SVN: r126902", "tree": {"sha": "0fa89e843aa491d4e26213a565df90bc6da95edb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fa89e843aa491d4e26213a565df90bc6da95edb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4f29b599812c8790f6d7903f5da8ca211c7657e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f29b599812c8790f6d7903f5da8ca211c7657e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f29b599812c8790f6d7903f5da8ca211c7657e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f29b599812c8790f6d7903f5da8ca211c7657e/comments", "author": null, "committer": null, "parents": [{"sha": "779d7a1a92077724180c32fd35541b2cb2ab84b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/779d7a1a92077724180c32fd35541b2cb2ab84b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/779d7a1a92077724180c32fd35541b2cb2ab84b9"}], "stats": {"total": 248, "additions": 19, "deletions": 229}, "files": [{"sha": "cf9421e1d6be41394b236c4559d7c3265c264c2d", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f29b599812c8790f6d7903f5da8ca211c7657e/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f29b599812c8790f6d7903f5da8ca211c7657e/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=f4f29b599812c8790f6d7903f5da8ca211c7657e", "patch": "@@ -1,3 +1,7 @@\n+2007-07-25  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* ternary.h: Remove.\n+\n 2007-07-18  Bob Wilson  <bob.wilson@acm.org>\n \t\n \t* xtensa-config.h (XCHAL_HAVE_THREADPTR): New."}, {"sha": "31c1fcef6ad73b742f7062a7da0509cc2cdfdc07", "filename": "include/ternary.h", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/779d7a1a92077724180c32fd35541b2cb2ab84b9/include%2Fternary.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/779d7a1a92077724180c32fd35541b2cb2ab84b9/include%2Fternary.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fternary.h?ref=779d7a1a92077724180c32fd35541b2cb2ab84b9", "patch": "@@ -1,51 +0,0 @@\n-/* ternary.h - Ternary Search Trees\n-   Copyright 2001 Free Software Foundation, Inc.\n-\n-   Contributed by Daniel Berlin (dan@cgsoftware.com)\n-\n-\n-   This program is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by the\n-   Free Software Foundation; either version 2, or (at your option) any\n-   later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301,\n-   USA.  */\n-#ifndef TERNARY_H_\n-#define TERNARY_H_\n-/* Ternary search trees */\n-\n-typedef struct ternary_node_def *ternary_tree;\n-\n-typedef struct ternary_node_def\n-{\n-  char splitchar;\n-  ternary_tree lokid;\n-  ternary_tree eqkid;\n-  ternary_tree hikid;\n-}\n-ternary_node;\n-\n-/* Insert string S into tree P, associating it with DATA. \n-   Return the data in the tree associated with the string if it's\n-   already there, and replace is 0.\n-   Otherwise, replaces if it it exists, inserts if it doesn't, and\n-   returns the data you passed in. */\n-void *ternary_insert (ternary_tree *p, const char *s,\n-\t\t      void *data, int replace);\n-\n-/* Delete the ternary search tree rooted at P. \n-   Does NOT delete the data you associated with the strings. */\n-void ternary_cleanup (ternary_tree p);\n-\n-/* Search the ternary tree for string S, returning the data associated\n-   with it if found. */\n-void *ternary_search (const ternary_node *p, const char *s);\n-#endif"}, {"sha": "c1ef6d12ecf98d2510a56ae82534b326f2dbae89", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f29b599812c8790f6d7903f5da8ca211c7657e/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f29b599812c8790f6d7903f5da8ca211c7657e/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=f4f29b599812c8790f6d7903f5da8ca211c7657e", "patch": "@@ -1,3 +1,11 @@\n+2007-07-25  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* Makefile.in (CFILES): Remove ternary.c.\n+\t(REQUIRED_OFILES): Remove ./ternary.o.\n+\t(INSTALLED_HEADERS): Remove ternary.h.\n+\t(ternary.o): Remove.\n+\t* ternary.c: Remove.\n+\n 2007-07-23  DJ Delorie  <dj@redhat.com>\n \n \t* argv.c (writeargv): Fix typo in inline documentation."}, {"sha": "3b99f40415ba93de0397fc2ea2a20095b4f56932", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f29b599812c8790f6d7903f5da8ca211c7657e/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f29b599812c8790f6d7903f5da8ca211c7657e/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=f4f29b599812c8790f6d7903f5da8ca211c7657e", "patch": "@@ -1,7 +1,9 @@\n+# Makefile for the libiberty library.\n+# Originally written by K. Richard Pixley <rich@cygnus.com>.\n #\n-# Makefile\n-#   Copyright (C) 1990, 91-99, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n-#   Free Software Foundation\n+# Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n+# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007 Free Software\n+# Foundation\n #\n # This file is part of the libiberty library.\n # Libiberty is free software; you can redistribute it and/or\n@@ -18,13 +20,6 @@\n # License along with libiberty; see the file COPYING.LIB.  If not,\n # write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,\n # Boston, MA 02110-1301, USA.\n-#\n-\n-# This file was written by K. Richard Pixley <rich@cygnus.com>.\n-\n-#\n-# Makefile for libiberty directory\n-#\n \n libiberty_topdir = @libiberty_topdir@\n srcdir = @srcdir@\n@@ -152,7 +147,7 @@ CFILES = alloca.c argv.c asprintf.c atexit.c\t\t\t\t\\\n \t splay-tree.c stpcpy.c stpncpy.c strcasecmp.c strchr.c strdup.c\t\\\n \t strerror.c strncasecmp.c strncmp.c strrchr.c strsignal.c\t\\\n \t strstr.c strtod.c strtol.c strtoul.c strndup.c\tstrverscmp.c\t\\\n-\tternary.c tmpnam.c\t\t\t\t\t\t\\\n+\ttmpnam.c\t\t\t\t\t\t\t\\\n \tunlink-if-ordinary.c\t\t\t\t\t\t\\\n \tvasprintf.c vfork.c vfprintf.c vprintf.c vsnprintf.c vsprintf.c\t\\\n \twaitpid.c\t\t\t\t\t\t\t\\\n@@ -176,7 +171,6 @@ REQUIRED_OFILES = ./regex.o ./cplus-dem.o ./cp-demangle.o ./md5.o\t\\\n \t./pex-common.o ./pex-one.o @pexecute@\t\t\t\t\\\n \t./safe-ctype.o ./sort.o ./spaces.o ./splay-tree.o ./strerror.o\t\\\n \t ./strsignal.o\t\t\t\t\t\t\t\\\n-\t./ternary.o\t\t\t\t\t\t\t\\\n \t./unlink-if-ordinary.o\t\t\t\t\t\t\\\n \t./xatexit.o ./xexit.o ./xmalloc.o ./xmemdup.o ./xstrdup.o\t\\\n \t ./xstrerror.o ./xstrndup.o\n@@ -219,8 +213,7 @@ INSTALLED_HEADERS =                                                     \\\n \t$(INCDIR)/partition.h                                           \\\n \t$(INCDIR)/safe-ctype.h                                          \\\n \t$(INCDIR)/sort.h                                                \\\n-\t$(INCDIR)/splay-tree.h                                          \\\n-\t$(INCDIR)/ternary.h\n+\t$(INCDIR)/splay-tree.h\n \n $(TARGETLIB): $(REQUIRED_OFILES) $(EXTRA_OFILES) $(LIBOBJS)\n \t-rm -f $(TARGETLIB) pic/$(TARGETLIB)\n@@ -1083,13 +1076,6 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/strverscmp.c $(OUTPUT_OPTION)\n \n-./ternary.o: $(srcdir)/ternary.c stamp-h $(INCDIR)/ansidecl.h \\\n-\t$(INCDIR)/libiberty.h $(INCDIR)/ternary.h\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.c) $(PICFLAG) $(srcdir)/ternary.c -o pic/$@; \\\n-\telse true; fi\n-\t$(COMPILE.c) $(srcdir)/ternary.c $(OUTPUT_OPTION)\n-\n ./tmpnam.o: $(srcdir)/tmpnam.c\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/tmpnam.c -o pic/$@; \\"}, {"sha": "8fc561a4531530eb7fa373b9a77c56e21359bf84", "filename": "libiberty/ternary.c", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/779d7a1a92077724180c32fd35541b2cb2ab84b9/libiberty%2Fternary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/779d7a1a92077724180c32fd35541b2cb2ab84b9/libiberty%2Fternary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fternary.c?ref=779d7a1a92077724180c32fd35541b2cb2ab84b9", "patch": "@@ -1,157 +0,0 @@\n-/* ternary.c - Ternary Search Trees\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n-\n-   Contributed by Daniel Berlin (dan@cgsoftware.com)\n-\n-   This program is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by the\n-   Free Software Foundation; either version 2, or (at your option) any\n-   later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301,\n-   USA.  */\n-#ifdef HAVE_CONFIG_H\n-#include \"config.h\"\n-#endif\n-\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#include <stdio.h>\n-\n-#include \"libiberty.h\"\n-#include \"ternary.h\"\n-\n-/* Non-recursive so we don't waste stack space/time on large\n-   insertions. */\n-\n-PTR\n-ternary_insert (ternary_tree *root, const char *s, PTR data, int replace)\n-{\n-  int diff;\n-  ternary_tree curr, *pcurr;\n-\n-  /* Start at the root. */\n-  pcurr = root;\n-  /* Loop until we find the right position */\n-  while ((curr = *pcurr))\n-    {\n-      /* Calculate the difference */\n-      diff = *s - curr->splitchar;\n-      /* Handle current char equal to node splitchar */\n-      if (diff == 0)\n-\t{\n-\t  /* Handle the case of a string we already have */\n-\t  if (*s++ == 0)\n-\t    {\n-\t      if (replace)\n-\t\tcurr->eqkid = (ternary_tree) data;\n-\t      return (PTR) curr->eqkid;\n-\t    }\n-\t  pcurr = &(curr->eqkid);\n-\t}\n-      /* Handle current char less than node splitchar */\n-      else if (diff < 0)\n-\t{\n-\t  pcurr = &(curr->lokid);\n-\t}\n-      /* Handle current char greater than node splitchar */\n-      else\n-\t{\n-\t  pcurr = &(curr->hikid);\n-\t}\n-    }\n-  /* It's not a duplicate string, and we should insert what's left of\n-     the string, into the tree rooted at curr */\n-  for (;;)\n-    {\n-      /* Allocate the memory for the node, and fill it in */\n-      *pcurr = XNEW (ternary_node);\n-      curr = *pcurr;\n-      curr->splitchar = *s;\n-      curr->lokid = curr->hikid = curr->eqkid = 0;\n-\n-      /* Place nodes until we hit the end of the string.\n-         When we hit it, place the data in the right place, and\n-         return.\n-       */\n-      if (*s++ == 0)\n-\t{\n-\t  curr->eqkid = (ternary_tree) data;\n-\t  return data;\n-\t}\n-      pcurr = &(curr->eqkid);\n-    }\n-}\n-\n-/* Free the ternary search tree rooted at p. */\n-void\n-ternary_cleanup (ternary_tree p)\n-{\n-  if (p)\n-    {\n-      ternary_cleanup (p->lokid);\n-      if (p->splitchar)\n-\tternary_cleanup (p->eqkid);\n-      ternary_cleanup (p->hikid);\n-      free (p);\n-    }\n-}\n-\n-/* Non-recursive find of a string in the ternary tree */\n-PTR\n-ternary_search (const ternary_node *p, const char *s)\n-{\n-  const ternary_node *curr;\n-  int diff, spchar;\n-  spchar = *s;\n-  curr = p;\n-  /* Loop while we haven't hit a NULL node or returned */\n-  while (curr)\n-    {\n-      /* Calculate the difference */\n-      diff = spchar - curr->splitchar;\n-      /* Handle the equal case */\n-      if (diff == 0)\n-\t{\n-\t  if (spchar == 0)\n-\t    return (PTR) curr->eqkid;\n-\t  spchar = *++s;\n-\t  curr = curr->eqkid;\n-\t}\n-      /* Handle the less than case */\n-      else if (diff < 0)\n-\tcurr = curr->lokid;\n-      /* All that's left is greater than */\n-      else\n-\tcurr = curr->hikid;\n-    }\n-  return NULL;\n-}\n-\n-/* For those who care, the recursive version of the search. Useful if\n-   you want a starting point for pmsearch or nearsearch. */\n-static PTR\n-ternary_recursivesearch (const ternary_node *p, const char *s)\n-{\n-  if (!p)\n-    return 0;\n-  if (*s < p->splitchar)\n-    return ternary_recursivesearch (p->lokid, s);\n-  else if (*s > p->splitchar)\n-    return ternary_recursivesearch (p->hikid, s);\n-  else\n-    {\n-      if (*s == 0)\n-\treturn (PTR) p->eqkid;\n-      return ternary_recursivesearch (p->eqkid, ++s);\n-    }\n-}"}]}