{"sha": "5123acd24138878133e447eb369831caa03d305a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEyM2FjZDI0MTM4ODc4MTMzZTQ0N2ViMzY5ODMxY2FhMDNkMzA1YQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2015-06-03T16:38:10Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2015-06-03T16:38:10Z"}, "message": "config.gcc (powerpc*-*-*): Add support for a new configure option --with-advance-toolchain=<xxx> which...\n\n2015-06-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config.gcc (powerpc*-*-*): Add support for a new configure\n\toption --with-advance-toolchain=<xxx> which overrides using the\n\tdefault header files, libraries and dynamic linker.\n\n\t* config/rs6000/linux64.h (SUBSUBTARGET_EXTRA_SPECS): Add new\n\tspecs to support the configure --with-advance-toolchain=<xxx>\n\toption.\n\t(INCLUDE_EXTRA_SPEC): Likewise.\n\t(LINK_OS_EXTRA_SPEC32): Likewise.\n\t(LINK_OK_EXTRA_SPEC64): Likewise.\n\t(LINK_OS_NEW_DTAGS_SPEC): Likewise.\n\t(DYNAMIC_LINKER_PREFIX): Likewise.\n\t(CPP_OS_DEFAULT_SPEC): Use the new specs for providing advance\n\ttoolchain support.\n\t(GLIBC_DYNAMIC_LINKER32): Likewise.\n\t(GLIBC_DYNAMIC_LINKER64): Likewise.\n\t(LINK_OS_LINUX_SPEC32): Likewise.\n\t(LINK_OS_LINUX_SPEC64): Likewise.\n\n\t* doc/install.texi (--enable-advance-toolchain=<xx>): Document new\n\tconfiguration option.\n\nFrom-SVN: r224095", "tree": {"sha": "ebacaa694ad2837c4490e108f3bbd2e38a3963e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebacaa694ad2837c4490e108f3bbd2e38a3963e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5123acd24138878133e447eb369831caa03d305a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5123acd24138878133e447eb369831caa03d305a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5123acd24138878133e447eb369831caa03d305a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5123acd24138878133e447eb369831caa03d305a/comments", "author": null, "committer": null, "parents": [{"sha": "27a0b7f2ee9689c9a0092a6403edacdcb7158516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27a0b7f2ee9689c9a0092a6403edacdcb7158516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27a0b7f2ee9689c9a0092a6403edacdcb7158516"}], "stats": {"total": 135, "additions": 127, "deletions": 8}, "files": [{"sha": "2124e52439bab6221a232a23a9e4b55b3d28efa8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5123acd24138878133e447eb369831caa03d305a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5123acd24138878133e447eb369831caa03d305a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5123acd24138878133e447eb369831caa03d305a", "patch": "@@ -1,3 +1,27 @@\n+2015-06-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config.gcc (powerpc*-*-*): Add support for a new configure\n+\toption --with-advance-toolchain=<xxx> which overrides using the\n+\tdefault header files, libraries and dynamic linker.\n+\n+\t* config/rs6000/linux64.h (SUBSUBTARGET_EXTRA_SPECS): Add new\n+\tspecs to support the configure --with-advance-toolchain=<xxx>\n+\toption.\n+\t(INCLUDE_EXTRA_SPEC): Likewise.\n+\t(LINK_OS_EXTRA_SPEC32): Likewise.\n+\t(LINK_OK_EXTRA_SPEC64): Likewise.\n+\t(LINK_OS_NEW_DTAGS_SPEC): Likewise.\n+\t(DYNAMIC_LINKER_PREFIX): Likewise.\n+\t(CPP_OS_DEFAULT_SPEC): Use the new specs for providing advance\n+\ttoolchain support.\n+\t(GLIBC_DYNAMIC_LINKER32): Likewise.\n+\t(GLIBC_DYNAMIC_LINKER64): Likewise.\n+\t(LINK_OS_LINUX_SPEC32): Likewise.\n+\t(LINK_OS_LINUX_SPEC64): Likewise.\n+\n+\t* doc/install.texi (--enable-advance-toolchain=<xx>): Document new\n+\tconfiguration option.\n+\n 2015-06-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/66275"}, {"sha": "13a567fadbfab7508936ad0681ff9e5f98fd42f8", "filename": "gcc/config.gcc", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5123acd24138878133e447eb369831caa03d305a/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5123acd24138878133e447eb369831caa03d305a/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5123acd24138878133e447eb369831caa03d305a", "patch": "@@ -4044,7 +4044,7 @@ case \"${target}\" in\n \t\t;;\n \n \tpowerpc*-*-* | rs6000-*-*)\n-\t\tsupported_defaults=\"abi cpu cpu_32 cpu_64 float tune tune_32 tune_64\"\n+\t\tsupported_defaults=\"abi cpu cpu_32 cpu_64 float tune tune_32 tune_64 advance_toolchain\"\n \n \t\tfor which in cpu cpu_32 cpu_64 tune tune_32 tune_64; do\n \t\t\teval \"val=\\$with_$which\"\n@@ -4091,6 +4091,56 @@ case \"${target}\" in\n \t\t\texit 1\n \t\t\t;;\n \t\tesac\n+\n+\t\tif test \"x$with_advance_toolchain\" != x; then\n+\t\t    if test -d \"/opt/$with_advance_toolchain/.\" -a \\\n+\t\t\t-d \"/opt/$with_advance_toolchain/bin/.\" -a \\\n+\t\t\t-d \"/opt/$with_advance_toolchain/include/.\"; then\n+\n+\t\t\ttm_file=\"$tm_file ./advance-toolchain.h\"\n+\t\t\t(at=\"/opt/$with_advance_toolchain\"\n+\t\t\t echo \"/* Use Advance Toolchain $at */\"\n+\t\t\t echo\n+\t\t\t echo \"#ifndef USE_AT_INCLUDE_FILES\"\n+\t\t\t echo \"#define USE_AT_INCLUDE_FILES 1\"\n+\t\t\t echo \"#endif\"\n+\t\t\t echo\n+\t\t\t echo \"#if USE_AT_INCLUDE_FILES\"\n+\t\t\t echo \"#undef  INCLUDE_EXTRA_SPEC\"\n+\t\t\t echo \"#define INCLUDE_EXTRA_SPEC\" \\\n+\t\t\t      \"\\\"-isystem $at/include\\\"\"\n+\t\t\t echo \"#endif\"\n+\t\t\t echo\n+\t\t\t echo \"#undef  LINK_OS_EXTRA_SPEC32\"\n+\t\t\t echo \"#define LINK_OS_EXTRA_SPEC32\" \\\n+\t\t\t      \"\\\"%(link_os_new_dtags)\" \\\n+\t\t\t      \"-rpath $prefix/lib -rpath $at/lib\" \\\n+\t\t\t      \"-L $prefix/lib -L $at/lib\\\"\"\n+\t\t\t echo\n+\t\t\t echo \"#undef  LINK_OS_EXTRA_SPEC64\"\n+\t\t\t echo \"#define LINK_OS_EXTRA_SPEC64\" \\\n+\t\t\t      \"\\\"%(link_os_new_dtags)\" \\\n+\t\t\t      \"-rpath $prefix/lib64 -rpath $at/lib64\" \\\n+\t\t\t      \"-L $prefix/lib64 -L $at/lib64\\\"\"\n+\t\t\t echo\n+\t\t\t echo \"#undef  LINK_OS_NEW_DTAGS_SPEC\"\n+\t\t\t echo \"#define LINK_OS_NEW_DTAGS_SPEC\" \\\n+\t\t\t      \"\\\"--enable-new-dtags\\\"\"\n+\t\t\t echo\n+\t\t\t echo \"#undef  DYNAMIC_LINKER_PREFIX\"\n+\t\t\t echo \"#define DYNAMIC_LINKER_PREFIX \\\"$at\\\"\"\n+\t\t\t echo\n+\t\t\t echo \"#undef  MD_EXEC_PREFIX\"\n+\t\t\t echo \"#define MD_EXEC_PREFIX \\\"$at/bin/\\\"\"\n+\t\t\t echo\n+\t\t\t echo \"#undef  MD_STARTFILE_PREFIX\"\n+\t\t\t echo \"#define MD_STARTFILE_PREFIX \\\"$at/lib/\\\"\") \\\n+\t\t\t    > advance-toolchain.h\n+\t\t    else\n+\t\t\techo \"Unknown advance-toolchain $with_advance_toolchain\"\n+\t\t\texit 1\n+\t\t    fi\n+\t\tfi\n \t\t;;\n \n \ts390*-*-*)"}, {"sha": "95997357579ce6c95e7587c7145ac6e79f78f2be", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 44, "deletions": 7, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5123acd24138878133e447eb369831caa03d305a/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5123acd24138878133e447eb369831caa03d305a/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=5123acd24138878133e447eb369831caa03d305a", "patch": "@@ -207,7 +207,36 @@ extern int dot_symbols;\n   { \"asm_spec32\",\t\tASM_SPEC32 },\t\t\t\t\\\n   { \"asm_spec64\",\t\tASM_SPEC64 },\t\t\t\t\\\n   { \"link_os_linux_spec32\",\tLINK_OS_LINUX_SPEC32 },\t\t\t\\\n-  { \"link_os_linux_spec64\",\tLINK_OS_LINUX_SPEC64 },\n+  { \"link_os_linux_spec64\",\tLINK_OS_LINUX_SPEC64 },\t\t\t\\\n+  { \"link_os_extra_spec32\",\tLINK_OS_EXTRA_SPEC32 },\t\t\t\\\n+  { \"link_os_extra_spec64\",\tLINK_OS_EXTRA_SPEC64 },\t\t\t\\\n+  { \"link_os_new_dtags\",\tLINK_OS_NEW_DTAGS_SPEC },\t\t\\\n+  { \"include_extra\",\t\tINCLUDE_EXTRA_SPEC },\t\t\t\\\n+  { \"dynamic_linker_prefix\",\tDYNAMIC_LINKER_PREFIX },\n+\n+/* Optional specs used for overriding the system include directory, default\n+   -rpath links, and prefix for the dynamic linker.  Normally, there are not\n+   defined, but if the user configure with the --with-advance-toolchain=<xxx>\n+   option, the advance-toolchain.h file will override these.  */\n+#ifndef INCLUDE_EXTRA_SPEC\n+#define INCLUDE_EXTRA_SPEC\t\"\"\n+#endif\n+\n+#ifndef LINK_OS_EXTRA_SPEC32\n+#define LINK_OS_EXTRA_SPEC32\t\"\"\n+#endif\n+\n+#ifndef LINK_OS_EXTRA_SPEC64\n+#define LINK_OS_EXTRA_SPEC64\t\"\"\n+#endif\n+\n+#ifndef LINK_OS_NEW_DTAGS_SPEC\n+#define LINK_OS_NEW_DTAGS_SPEC\t\"\"\n+#endif\n+\n+#ifndef DYNAMIC_LINKER_PREFIX\n+#define DYNAMIC_LINKER_PREFIX\t\"\"\n+#endif\n \n #undef\tMULTILIB_DEFAULTS\n #if DEFAULT_ARCH64_P\n@@ -341,7 +370,7 @@ extern int dot_symbols;\n   while (0)\n \n #undef  CPP_OS_DEFAULT_SPEC\n-#define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux)\"\n+#define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux) %(include_extra)\"\n \n #undef  LINK_SHLIB_SPEC\n #define LINK_SHLIB_SPEC \"%{shared:-shared} %{!shared: %{static:-static}}\"\n@@ -361,12 +390,18 @@ extern int dot_symbols;\n #undef\tLINK_OS_DEFAULT_SPEC\n #define LINK_OS_DEFAULT_SPEC \"%(link_os_linux)\"\n \n-#define GLIBC_DYNAMIC_LINKER32 \"/lib/ld.so.1\"\n+#define GLIBC_DYNAMIC_LINKER32 \"%(dynamic_linker_prefix)/lib/ld.so.1\"\n+\n #ifdef LINUX64_DEFAULT_ABI_ELFv2\n-#define GLIBC_DYNAMIC_LINKER64 \"%{mabi=elfv1:/lib64/ld64.so.1;:/lib64/ld64.so.2}\"\n+#define GLIBC_DYNAMIC_LINKER64 \\\n+\"%{mabi=elfv1:%(dynamic_linker_prefix)/lib64/ld64.so.1;\" \\\n+\":%(dynamic_linker_prefix)/lib64/ld64.so.2}\"\n #else\n-#define GLIBC_DYNAMIC_LINKER64 \"%{mabi=elfv2:/lib64/ld64.so.2;:/lib64/ld64.so.1}\"\n+#define GLIBC_DYNAMIC_LINKER64 \\\n+\"%{mabi=elfv2:%(dynamic_linker_prefix)/lib64/ld64.so.2;\" \\\n+\":%(dynamic_linker_prefix)/lib64/ld64.so.1}\"\n #endif\n+\n #define UCLIBC_DYNAMIC_LINKER32 \"/lib/ld-uClibc.so.0\"\n #define UCLIBC_DYNAMIC_LINKER64 \"/lib/ld64-uClibc.so.0\"\n #if DEFAULT_LIBC == LIBC_UCLIBC\n@@ -402,11 +437,13 @@ extern int dot_symbols;\n \n #define LINK_OS_LINUX_SPEC32 LINK_OS_LINUX_EMUL32 \" %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n-  -dynamic-linker \" GNU_USER_DYNAMIC_LINKER32 \"}}\"\n+  -dynamic-linker \" GNU_USER_DYNAMIC_LINKER32 \"}} \\\n+  %(link_os_extra_spec32)\"\n \n #define LINK_OS_LINUX_SPEC64 LINK_OS_LINUX_EMUL64 \" %{!shared: %{!static: \\\n   %{rdynamic:-export-dynamic} \\\n-  -dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"}}\"\n+  -dynamic-linker \" GNU_USER_DYNAMIC_LINKER64 \"}} \\\n+  %(link_os_extra_spec64)\"\n \n #undef  TOC_SECTION_ASM_OP\n #define TOC_SECTION_ASM_OP \\"}, {"sha": "bcebcd225c73030ae72e685ea58733e30b9fd496", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5123acd24138878133e447eb369831caa03d305a/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5123acd24138878133e447eb369831caa03d305a/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=5123acd24138878133e447eb369831caa03d305a", "patch": "@@ -1607,6 +1607,14 @@ should not be built.\n Specify that the compiler should\n use DWARF 2 debugging information as the default.\n \n+@item --with-advance-toolchain=@var{at}\n+On 64-bit PowerPC Linux systems, configure the compiler to use the\n+header files, library files, and the dynamic linker from the Advance\n+Toolchain release @var{at} instead of the default versions that are\n+provided by the Linux distribution.  In general, this option is\n+intended for the developers of GCC, and it is not intended for general\n+use.\n+\n @item --enable-targets=all\n @itemx --enable-targets=@var{target_list}\n Some GCC targets, e.g.@: powerpc64-linux, build bi-arch compilers."}]}