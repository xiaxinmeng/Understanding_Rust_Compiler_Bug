{"sha": "f0913ab8d6b3990d68fc498fd2f9d6407fd10536", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5MTNhYjhkNmIzOTkwZDY4ZmM0OThmZDJmOWQ2NDA3ZmQxMDUzNg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-05-01T16:28:42Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-05-01T16:28:42Z"}, "message": "boehm.cc (_Jv_InitGC): Check both HAVE_DLFCN_H and HAVE_DLADDR before calling...\n\n\n\t* boehm.cc (_Jv_InitGC): Check both HAVE_DLFCN_H and HAVE_DLADDR\n\tbefore calling GC_register_has_static_roots_callback.\n\t(_Jv_RegisterLibForGc): Likewise, test for both HAVE_DLFCN_H and\n\tHAVE_DLADDR before calling dladdr.\n\n\nCo-Authored-By: Andrew Haley <aph@redhat.com>\n\nFrom-SVN: r113417", "tree": {"sha": "7c0899b1a6808cf8991f60413da35668ed2c6eee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c0899b1a6808cf8991f60413da35668ed2c6eee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0913ab8d6b3990d68fc498fd2f9d6407fd10536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0913ab8d6b3990d68fc498fd2f9d6407fd10536", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0913ab8d6b3990d68fc498fd2f9d6407fd10536", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0913ab8d6b3990d68fc498fd2f9d6407fd10536/comments", "author": null, "committer": null, "parents": [{"sha": "ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6431202d7e3c472f6c039bbfc0c22f2e8e9a52"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "61d096ad11f15bdad7b4e8a18054173f8cc3a33c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0913ab8d6b3990d68fc498fd2f9d6407fd10536/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0913ab8d6b3990d68fc498fd2f9d6407fd10536/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f0913ab8d6b3990d68fc498fd2f9d6407fd10536", "patch": "@@ -1,3 +1,11 @@\n+2006-05-01  Roger Sayle  <roger@eyesopen.com>\n+\t    Andrew Haley  <aph@redhat.com>\n+\n+\t* boehm.cc (_Jv_InitGC): Check both HAVE_DLFCN_H and HAVE_DLADDR\n+\tbefore calling GC_register_has_static_roots_callback.\n+\t(_Jv_RegisterLibForGc): Likewise, test for both HAVE_DLFCN_H and\n+\tHAVE_DLADDR before calling dladdr.\n+\n 2006-04-28  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* link.cc (_Jv_Linker::resolve_pool_entry): Don't pass vtable_index"}, {"sha": "a6f7fdf482604b76896fa3b491141bd294f12673", "filename": "libjava/boehm.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0913ab8d6b3990d68fc498fd2f9d6407fd10536/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0913ab8d6b3990d68fc498fd2f9d6407fd10536/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=f0913ab8d6b3990d68fc498fd2f9d6407fd10536", "patch": "@@ -486,7 +486,7 @@ _Jv_InitGC (void)\n   // Ignore pointers that do not point to the start of an object.\n   GC_all_interior_pointers = 0;\n \n-#ifdef HAVE_DLFCN_H\n+#if defined (HAVE_DLFCN_H) && defined (HAVE_DLADDR)\n   // Tell the collector to ask us before scanning DSOs.\n   GC_register_has_static_roots_callback (_Jv_GC_has_static_roots);\n #endif\n@@ -581,7 +581,7 @@ _Jv_GCCanReclaimSoftReference (jobject)\n \n \f\n \n-#ifdef HAVE_DLFCN_H\n+#if defined (HAVE_DLFCN_H) && defined (HAVE_DLADDR)\n \n // We keep a store of the filenames of DSOs that need to be\n // conservatively scanned by the garbage collector.  During collection\n@@ -661,7 +661,7 @@ _Jv_GC_has_static_roots (const char *filename, void *, size_t)\n void\n _Jv_RegisterLibForGc (const void *p __attribute__ ((__unused__)))\n {\n-#ifdef HAVE_DLFCN_H\n+#if defined (HAVE_DLFCN_H) && defined (HAVE_DLADDR)\n   Dl_info info;\n \n   if (dladdr (const_cast<void *>(p), &info) != 0)"}]}