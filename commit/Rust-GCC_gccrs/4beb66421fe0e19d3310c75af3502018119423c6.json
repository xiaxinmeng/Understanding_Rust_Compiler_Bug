{"sha": "4beb66421fe0e19d3310c75af3502018119423c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJlYjY2NDIxZmUwZTE5ZDMzMTBjNzVhZjM1MDIwMTgxMTk0MjNjNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-09T14:37:24Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-09T14:37:24Z"}, "message": "Fix invalid assumption in vect_transform_stmt (PR 86871)\n\nThe handling of outer-loop uses of inner-loop definitions assumed\nthat anything that wasn't a PHI would be a gassign.  It's also\npossible for it to be a gcall.\n\n2018-08-08  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR tree-optimization/86871\n\t* tree-vect-stmts.c (vect_transform_stmt): Use gimple_get_lhs\n\tinstead of gimple_assign_lhs.\n\ngcc/testsuite/\n\tPR tree-optimization/86871\n\t* gcc.dg/vect/pr86871.c: New test.\n\nFrom-SVN: r263447", "tree": {"sha": "d29d725c6db8bb82ab3bf4eb09d205680c70ba69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d29d725c6db8bb82ab3bf4eb09d205680c70ba69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4beb66421fe0e19d3310c75af3502018119423c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4beb66421fe0e19d3310c75af3502018119423c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4beb66421fe0e19d3310c75af3502018119423c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4beb66421fe0e19d3310c75af3502018119423c6/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16621f0de36074287eca820cd34de79ab8ee3486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16621f0de36074287eca820cd34de79ab8ee3486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16621f0de36074287eca820cd34de79ab8ee3486"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "3e5f849e252a5edc6f997c601e4db78a8c90e695", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4beb66421fe0e19d3310c75af3502018119423c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4beb66421fe0e19d3310c75af3502018119423c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4beb66421fe0e19d3310c75af3502018119423c6", "patch": "@@ -1,3 +1,9 @@\n+2018-08-09  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/86871\n+\t* tree-vect-stmts.c (vect_transform_stmt): Use gimple_get_lhs\n+\tinstead of gimple_assign_lhs.\n+\n 2018-08-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/86887"}, {"sha": "1edcf1eb7f791e9cf70456b65390e65dde2ec9a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4beb66421fe0e19d3310c75af3502018119423c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4beb66421fe0e19d3310c75af3502018119423c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4beb66421fe0e19d3310c75af3502018119423c6", "patch": "@@ -1,3 +1,8 @@\n+2018-08-09  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/86871\n+\t* gcc.dg/vect/pr86871.c: New test.\n+\n 2018-08-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.old-deja/g++.mike/p784.C: Add -fpermissive."}, {"sha": "a1816819e48ad66bb099df41656b25539074aa5e", "filename": "gcc/testsuite/gcc.dg/vect/pr86871.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4beb66421fe0e19d3310c75af3502018119423c6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr86871.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4beb66421fe0e19d3310c75af3502018119423c6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr86871.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr86871.c?ref=4beb66421fe0e19d3310c75af3502018119423c6", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+\n+extern int b[];\n+extern int c[];\n+void g(int f) {\n+  for (; f; f++) {\n+    int d = 0;\n+    for (int e = -1; e <= 1; e++) {\n+      int a = f + e;\n+      if (a)\n+        d = *(c + a);\n+    }\n+    *(b + f) = d;\n+  }\n+ }"}, {"sha": "89d516c4f4e737e8824c9dceef94fc22cba5aac7", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4beb66421fe0e19d3310c75af3502018119423c6/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4beb66421fe0e19d3310c75af3502018119423c6/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=4beb66421fe0e19d3310c75af3502018119423c6", "patch": "@@ -9804,7 +9804,7 @@ vect_transform_stmt (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n       if (gimple_code (stmt) == GIMPLE_PHI)\n         scalar_dest = PHI_RESULT (stmt);\n       else\n-        scalar_dest = gimple_assign_lhs (stmt);\n+        scalar_dest = gimple_get_lhs (stmt);\n \n       FOR_EACH_IMM_USE_FAST (use_p, imm_iter, scalar_dest)\n \tif (!flow_bb_inside_loop_p (innerloop, gimple_bb (USE_STMT (use_p))))"}]}