{"sha": "cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5ZWQ0YjRlYmExMGIyY2U4YWUxMGUxMTZjMzkwMTM0YzJiOThiMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-11-10T16:58:56Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-11-10T16:58:56Z"}, "message": "re PR middle-end/22127 (register window not preserved after getcontext call)\n\n\tPR middle-end/22127\n\t* calls.c (special_function_p): Set ECF_RETURNS_TWICE for getcontext.\n\nFrom-SVN: r106739", "tree": {"sha": "94c8156a8b66b07c532022712b8d1e2837d4f4e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94c8156a8b66b07c532022712b8d1e2837d4f4e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d25f3b83ce00e7b7750bcfb9d564a318313b60ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25f3b83ce00e7b7750bcfb9d564a318313b60ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d25f3b83ce00e7b7750bcfb9d564a318313b60ab"}], "stats": {"total": 131, "additions": 130, "deletions": 1}, "files": [{"sha": "9465d8060a2bd042db4613b6a89e7e67381a55e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3", "patch": "@@ -1,3 +1,8 @@\n+2005-11-10  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR middle-end/22127\n+\t* calls.c (special_function_p): Set ECF_RETURNS_TWICE for getcontext.\n+\n 2005-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree.c (int_fits_type_p): Only look at the base type"}, {"sha": "1a680ae5159cd2391758f3be7e24a41f35cb9214", "filename": "gcc/calls.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3", "patch": "@@ -527,7 +527,9 @@ special_function_p (tree fndecl, int flags)\n       else if ((tname[0] == 'q' && tname[1] == 's'\n \t\t&& ! strcmp (tname, \"qsetjmp\"))\n \t       || (tname[0] == 'v' && tname[1] == 'f'\n-\t\t   && ! strcmp (tname, \"vfork\")))\n+\t\t   && ! strcmp (tname, \"vfork\"))\n+\t       || (tname[0] == 'g' && tname[1] == 'e'\n+\t\t   && !strcmp (tname, \"getcontext\")))\n \tflags |= ECF_RETURNS_TWICE;\n \n       else if (tname[0] == 'l' && tname[1] == 'o'"}, {"sha": "7d3254f58b4959d9457b5cdc33038525d5987aa6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3", "patch": "@@ -1,3 +1,7 @@\n+2005-11-10  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/sparc-getcontext-1.c: New test.\n+\n 2005-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/ifcvt-fabs-1.c: New test."}, {"sha": "762804cf78cce7697470c5a8cf921e2b185f6a3b", "filename": "gcc/testsuite/gcc.dg/sparc-getcontext-1.c", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-getcontext-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-getcontext-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsparc-getcontext-1.c?ref=cd9ed4b4eba10b2ce8ae10e116c390134c2b98b3", "patch": "@@ -0,0 +1,118 @@\n+/* PR middle-end/22127 */\n+/* Testcase by <akr@m17n.org> */\n+\n+/* [ dg-do run { target sparc*-sun-solaris2.* } } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-O\" } */\n+\n+typedef unsigned int size_t;\n+extern int printf(const char *, ...);\n+typedef unsigned char uint8_t;\n+typedef unsigned int uint32_t;\n+typedef unsigned int uint_t;\n+typedef char *caddr_t;\n+typedef int greg_t;\n+typedef greg_t gregset_t[19];\n+struct rwindow {\n+ greg_t rw_local[8];\n+ greg_t rw_in[8];\n+};\n+typedef struct gwindows {\n+ int wbcnt;\n+ greg_t *spbuf[31];\n+ struct rwindow wbuf[31];\n+} gwindows_t;\n+struct fpu {\n+ union {\n+  uint32_t fpu_regs[32];\n+  double fpu_dregs[16];\n+ } fpu_fr;\n+ struct fq *fpu_q;\n+ uint32_t fpu_fsr;\n+ uint8_t fpu_qcnt;\n+ uint8_t fpu_q_entrysize;\n+ uint8_t fpu_en;\n+};\n+typedef struct fpu fpregset_t;\n+typedef struct {\n+ unsigned int xrs_id;\n+ caddr_t xrs_ptr;\n+} xrs_t;\n+typedef struct {\n+ gregset_t gregs;\n+ gwindows_t *gwins;\n+ fpregset_t fpregs;\n+ xrs_t xrs;\n+ long filler[19];\n+} mcontext_t;\n+typedef struct {\n+ unsigned int __sigbits[4];\n+} sigset_t;\n+typedef struct sigaltstack {\n+ void *ss_sp;\n+ size_t ss_size;\n+ int ss_flags;\n+} stack_t;\n+typedef struct ucontext ucontext_t;\n+struct ucontext {\n+ uint_t uc_flags;\n+ ucontext_t *uc_link;\n+ sigset_t uc_sigmask;\n+ stack_t uc_stack;\n+ mcontext_t uc_mcontext;\n+ long uc_filler[23];\n+};\n+extern int getcontext(ucontext_t *);\n+extern int setcontext(const ucontext_t *);\n+\n+int flag;\n+ucontext_t cont;\n+int pad[100];\n+typedef void (*fun_t)(int);\n+fun_t p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12;\n+\n+int global;\n+\n+extern void abort(void);\n+\n+void h1(int v)\n+{\n+  global = v;\n+}\n+\n+void h2(int v)\n+{\n+  if (v != 1)\n+    abort();\n+}\n+\n+void f(void)\n+{\n+  flag = 1;\n+  setcontext(&cont);\n+}\n+\n+int g(void)\n+{\n+  int ret;\n+\n+  flag = 0;\n+  getcontext(&cont);\n+  ret = flag;\n+  if (ret == 0) {\n+    h1 (flag);\n+    p0 = p1 = p2 = p3 = p4 = p5 = p6 = p7 = p8 = h1;\n+    f();\n+    p0(ret); p1(ret); p2(ret); p3(ret); p4(ret); p5(ret); p6(ret); p7(ret); p8(ret);\n+  }\n+  else {\n+    h2 (flag);\n+  }\n+  return ret;\n+}\n+\n+int main(void)\n+{\n+  g();\n+  return 0;\n+}"}]}