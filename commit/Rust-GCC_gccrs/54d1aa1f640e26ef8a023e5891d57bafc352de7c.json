{"sha": "54d1aa1f640e26ef8a023e5891d57bafc352de7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRkMWFhMWY2NDBlMjZlZjhhMDIzZTU4OTFkNTdiYWZjMzUyZGU3Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-12-03T10:18:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-03T10:18:04Z"}, "message": "ref.cc: Add.\n\n2009-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/20_util/bind/ref.cc: Add.\n\t* testsuite/20_util/bind/all_bound.cc: Likewise.\n\t* testsuite/20_util/bind/nested.cc: Likewise.\n\t* testsuite/20_util/bind/placeholders.cc: Likewise.\n\nFrom-SVN: r154939", "tree": {"sha": "5f9072892510374b7739c5cdc75a28ec5e6f945e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f9072892510374b7739c5cdc75a28ec5e6f945e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54d1aa1f640e26ef8a023e5891d57bafc352de7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d1aa1f640e26ef8a023e5891d57bafc352de7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54d1aa1f640e26ef8a023e5891d57bafc352de7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d1aa1f640e26ef8a023e5891d57bafc352de7c/comments", "author": null, "committer": null, "parents": [{"sha": "84894f850fd94064c2673de1d26a1390a65508dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84894f850fd94064c2673de1d26a1390a65508dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84894f850fd94064c2673de1d26a1390a65508dd"}], "stats": {"total": 183, "additions": 183, "deletions": 0}, "files": [{"sha": "7585153ed1d891cc70d52192692ef1cc6ffe509d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=54d1aa1f640e26ef8a023e5891d57bafc352de7c", "patch": "@@ -1,3 +1,10 @@\n+2009-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/20_util/bind/ref.cc: Add.\n+\t* testsuite/20_util/bind/all_bound.cc: Likewise.\n+\t* testsuite/20_util/bind/nested.cc: Likewise.\n+\t* testsuite/20_util/bind/placeholders.cc: Likewise.\n+\n 2009-12-03  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* testsuite/ext/profile/mutex_extensions.cc: Adjust dg-error line"}, {"sha": "4335ee1d1fbc8e61ed873eac4d92c5d7f680789e", "filename": "libstdc++-v3/testsuite/20_util/bind/all_bound.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fall_bound.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fall_bound.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fall_bound.cc?ref=54d1aa1f640e26ef8a023e5891d57bafc352de7c", "patch": "@@ -0,0 +1,39 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.7.11 Function template bind\n+\n+#include <functional>\n+#include <testsuite_hooks.h>\n+\n+// Operations on empty function<> objects\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  VERIFY( std::bind(std::plus<int>(), 3, 5)() == 8 );\n+  VERIFY( std::bind(std::minus<int>(), 3, 5)() == -2 );\n+  VERIFY( std::bind<int>(std::plus<int>(), 3, 5)() == 8 );\n+  VERIFY( std::bind<int>(std::minus<int>(), 3, 5)() == -2 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "ae3a1668620284dbe799aebf0b137e39800413a9", "filename": "libstdc++-v3/testsuite/20_util/bind/nested.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fnested.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fnested.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fnested.cc?ref=54d1aa1f640e26ef8a023e5891d57bafc352de7c", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.7.11 Function template bind\n+\n+#include <functional>\n+#include <testsuite_hooks.h>\n+\n+// Operations on empty function<> objects\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std::placeholders;\n+\n+  int five = 5;\n+  int seven = 7;\n+  VERIFY( std::bind(std::multiplies<int>(), _1,\n+\t\t    std::bind(std::minus<int>(), 6, _2))(five, seven) == -5 );\n+  VERIFY( std::bind(std::multiplies<int>(), _1,\n+\t\t    std::bind(std::minus<int>(), 6, _2))(seven, five) == 7 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "fc0d9c64f62567e39af987193931e887f4de62f1", "filename": "libstdc++-v3/testsuite/20_util/bind/placeholders.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fplaceholders.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fplaceholders.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fplaceholders.cc?ref=54d1aa1f640e26ef8a023e5891d57bafc352de7c", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.7.11 Function template bind\n+\n+#include <functional>\n+#include <testsuite_hooks.h>\n+\n+// Operations on empty function<> objects\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std::placeholders;\n+\n+  int five = 5;\n+  int seven = 7;\n+  VERIFY( std::bind(std::minus<int>(), _1, _2)(five, seven) == -2 );\n+  VERIFY( std::bind(std::minus<int>(), _2, _1)(five, seven) == 2 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "6b41f188791ccb80081cadbb4e9c9834b5082168", "filename": "libstdc++-v3/testsuite/20_util/bind/ref.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d1aa1f640e26ef8a023e5891d57bafc352de7c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fref.cc?ref=54d1aa1f640e26ef8a023e5891d57bafc352de7c", "patch": "@@ -0,0 +1,55 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.7.11 Function template bind\n+\n+#include <functional>\n+#include <testsuite_hooks.h>\n+\n+struct X\n+{\n+  X() : bar(17) {}\n+\n+  int foo(int x, int y) { return bar + x + y; }\n+\n+  int bar;\n+\n+private:\n+  X(const X&);\n+  X& operator=(const X&);\n+};\n+\n+// Operations on empty function<> objects\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::bind;\n+  using std::ref;\n+  ::X x;\n+\n+  VERIFY( bind(&::X::foo, ref(x), 1, 2)() == 20 );\n+  VERIFY( bind<int>(&::X::foo, ref(x), 1, 2)() == 20 );\n+  VERIFY( bind(&::X::bar, ref(x))() == 17 );\n+  VERIFY( bind<int>(&::X::bar, ref(x))() == 17 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}