{"sha": "98e4350fe2f3c5bcf343d648046cab7564545077", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThlNDM1MGZlMmYzYzViY2YzNDNkNjQ4MDQ2Y2FiNzU2NDU0NTA3Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-01-30T12:43:51Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-01-30T12:43:51Z"}, "message": "re PR target/51920 (64-bit gcc.target/sparc/vec-init-1-vis1.c FAILs)\n\n\tPR target/51920\n\t* config/sparc/sparc.c (vector_init_fpmerge): Remove INNER_MODE\n\tparameter and use short-lived pseudos.\n\t(vector_init_faligndata): Remove INNER_MODE parameter and use loop.\n\t(sparc_expand_vector_init): Const-ify local variables and adjust\n\tcalls to above functions.\n\nFrom-SVN: r183717", "tree": {"sha": "1c9aee376465aa00f23c6b95675cd3fbd60e3b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c9aee376465aa00f23c6b95675cd3fbd60e3b21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98e4350fe2f3c5bcf343d648046cab7564545077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e4350fe2f3c5bcf343d648046cab7564545077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e4350fe2f3c5bcf343d648046cab7564545077", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e4350fe2f3c5bcf343d648046cab7564545077/comments", "author": null, "committer": null, "parents": [{"sha": "982edf3a271c8da05a4fff68f727ffa3c4ce5462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/982edf3a271c8da05a4fff68f727ffa3c4ce5462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/982edf3a271c8da05a4fff68f727ffa3c4ce5462"}], "stats": {"total": 61, "additions": 34, "deletions": 27}, "files": [{"sha": "3fbd36b14e9b4d256142ed2f49b9822881bfc169", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e4350fe2f3c5bcf343d648046cab7564545077/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e4350fe2f3c5bcf343d648046cab7564545077/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98e4350fe2f3c5bcf343d648046cab7564545077", "patch": "@@ -1,3 +1,12 @@\n+2012-01-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/51920\n+\t* config/sparc/sparc.c (vector_init_fpmerge): Remove INNER_MODE\n+\tparameter and use short-lived pseudos.\n+\t(vector_init_faligndata): Remove INNER_MODE parameter and use loop.\n+\t(sparc_expand_vector_init): Const-ify local variables and adjust\n+\tcalls to above functions.\n+\n 2012-01-30  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.c (out_movqi_mr_r): Fix length computation."}, {"sha": "40db03f1750361dadf37e8af7333fc529111763b", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 25, "deletions": 27, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e4350fe2f3c5bcf343d648046cab7564545077/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e4350fe2f3c5bcf343d648046cab7564545077/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=98e4350fe2f3c5bcf343d648046cab7564545077", "patch": "@@ -11485,59 +11485,57 @@ vector_init_bshuffle (rtx target, rtx elt, enum machine_mode mode,\n   emit_insn (final_insn);\n }\n \n+/* Subroutine of sparc_expand_vector_init.  Emit code to initialize\n+   all fields of TARGET to ELT in V8QI by means of VIS FPMERGE insn.  */\n+\n static void\n-vector_init_fpmerge (rtx target, rtx elt, enum machine_mode inner_mode)\n+vector_init_fpmerge (rtx target, rtx elt)\n {\n-  rtx t1, t2, t3, t3_low;\n+  rtx t1, t2, t2_low, t3, t3_low;\n \n   t1 = gen_reg_rtx (V4QImode);\n-  elt = convert_modes (SImode, inner_mode, elt, true);\n+  elt = convert_modes (SImode, QImode, elt, true);\n   emit_move_insn (gen_lowpart (SImode, t1), elt);\n \n-  t2 = gen_reg_rtx (V4QImode);\n-  emit_move_insn (t2, t1);\n+  t2 = gen_reg_rtx (V8QImode);\n+  t2_low = gen_lowpart (V4QImode, t2);\n+  emit_insn (gen_fpmerge_vis (t2, t1, t1));\n \n   t3 = gen_reg_rtx (V8QImode);\n   t3_low = gen_lowpart (V4QImode, t3);\n+  emit_insn (gen_fpmerge_vis (t3, t2_low, t2_low));\n \n-  emit_insn (gen_fpmerge_vis (t3, t1, t2));\n-  emit_move_insn (t1, t3_low);\n-  emit_move_insn (t2, t3_low);\n-\n-  emit_insn (gen_fpmerge_vis (t3, t1, t2));\n-  emit_move_insn (t1, t3_low);\n-  emit_move_insn (t2, t3_low);\n-\n-  emit_insn (gen_fpmerge_vis (gen_lowpart (V8QImode, target), t1, t2));\n+  emit_insn (gen_fpmerge_vis (target, t3_low, t3_low));\n }\n \n+/* Subroutine of sparc_expand_vector_init.  Emit code to initialize\n+   all fields of TARGET to ELT in V4HI by means of VIS FALIGNDATA insn.  */\n+\n static void\n-vector_init_faligndata (rtx target, rtx elt, enum machine_mode inner_mode)\n+vector_init_faligndata (rtx target, rtx elt)\n {\n   rtx t1 = gen_reg_rtx (V4HImode);\n+  int i;\n \n-  elt = convert_modes (SImode, inner_mode, elt, true);\n-\n+  elt = convert_modes (SImode, HImode, elt, true);\n   emit_move_insn (gen_lowpart (SImode, t1), elt);\n \n   emit_insn (gen_alignaddrsi_vis (gen_reg_rtx (SImode),\n \t\t\t\t  force_reg (SImode, GEN_INT (6)),\n-\t\t\t\t  CONST0_RTX (SImode)));\n+\t\t\t\t  const0_rtx));\n \n-  emit_insn (gen_faligndatav4hi_vis (target, t1, target));\n-  emit_insn (gen_faligndatav4hi_vis (target, t1, target));\n-  emit_insn (gen_faligndatav4hi_vis (target, t1, target));\n-  emit_insn (gen_faligndatav4hi_vis (target, t1, target));\n+  for (i = 0; i < 4; i++)\n+    emit_insn (gen_faligndatav4hi_vis (target, t1, target));\n }\n \n /* Emit code to initialize TARGET to values for individual fields VALS.  */\n \n void\n sparc_expand_vector_init (rtx target, rtx vals)\n {\n-  enum machine_mode mode = GET_MODE (target);\n-  enum machine_mode inner_mode = GET_MODE_INNER (mode);\n-  int n_elts = GET_MODE_NUNITS (mode);\n+  const enum machine_mode mode = GET_MODE (target);\n+  const enum machine_mode inner_mode = GET_MODE_INNER (mode);\n+  const int n_elts = GET_MODE_NUNITS (mode);\n   int i, n_var = 0;\n   bool all_same;\n   rtx mem;\n@@ -11593,12 +11591,12 @@ sparc_expand_vector_init (rtx target, rtx vals)\n \t}\n       if (mode == V8QImode)\n \t{\n-\t  vector_init_fpmerge (target, XVECEXP (vals, 0, 0), inner_mode);\n+\t  vector_init_fpmerge (target, XVECEXP (vals, 0, 0));\n \t  return;\n \t}\n       if (mode == V4HImode)\n \t{\n-\t  vector_init_faligndata (target, XVECEXP (vals, 0, 0), inner_mode);\n+\t  vector_init_faligndata (target, XVECEXP (vals, 0, 0));\n \t  return;\n \t}\n     }"}]}