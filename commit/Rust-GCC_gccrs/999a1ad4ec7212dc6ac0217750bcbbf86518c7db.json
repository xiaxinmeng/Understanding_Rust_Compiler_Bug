{"sha": "999a1ad4ec7212dc6ac0217750bcbbf86518c7db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk5YTFhZDRlYzcyMTJkYzZhYzAyMTc3NTBiY2JiZjg2NTE4YzdkYg==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2004-07-09T18:49:04Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2004-07-09T18:49:04Z"}, "message": "typeck.c (build_class_member_access_expr): Skip null deref warning when we don't dereference it.\n\n        * typeck.c (build_class_member_access_expr): Skip null deref\n        warning when we don't dereference it.\n\nRadar 3718909\n\nFrom-SVN: r84389", "tree": {"sha": "4fc27f75faf22e9d883e4eb40f33c4250fcb5606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fc27f75faf22e9d883e4eb40f33c4250fcb5606"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/999a1ad4ec7212dc6ac0217750bcbbf86518c7db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/999a1ad4ec7212dc6ac0217750bcbbf86518c7db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/999a1ad4ec7212dc6ac0217750bcbbf86518c7db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/999a1ad4ec7212dc6ac0217750bcbbf86518c7db/comments", "author": null, "committer": null, "parents": [{"sha": "85fd2947bd37c39eb2b8b237359743ae0ecbb657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85fd2947bd37c39eb2b8b237359743ae0ecbb657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85fd2947bd37c39eb2b8b237359743ae0ecbb657"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "01112d52c3cb41bfd80f32f04948a3817eaca7a5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999a1ad4ec7212dc6ac0217750bcbbf86518c7db/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999a1ad4ec7212dc6ac0217750bcbbf86518c7db/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=999a1ad4ec7212dc6ac0217750bcbbf86518c7db", "patch": "@@ -1,3 +1,8 @@\n+2004-07-09  Mike Stump  <mrs@apple.com>\n+\n+\t* typeck.c (build_class_member_access_expr): Skip null deref\n+\twarning when we don't dereference it.\n+\n 2004-07-09  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/8211"}, {"sha": "6b113255bdab76d49786a157c1b1e0fad67e7d65", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999a1ad4ec7212dc6ac0217750bcbbf86518c7db/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999a1ad4ec7212dc6ac0217750bcbbf86518c7db/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=999a1ad4ec7212dc6ac0217750bcbbf86518c7db", "patch": "@@ -1707,7 +1707,8 @@ build_class_member_access_expr (tree object, tree member,\n \t actually used the offsetof macro, since there's no way to know at this\n \t point.  So we just give a warning, instead of a pedwarn.  */\n       if (null_object_p && warn_invalid_offsetof\n-\t  && CLASSTYPE_NON_POD_P (object_type))\n+\t  && CLASSTYPE_NON_POD_P (object_type)\n+\t  && ! skip_evaluation)\n \t{\n \t  warning (\"invalid access to non-static data member `%D' of NULL object\", \n \t\t   member);"}, {"sha": "c336a7a4642275e098316a240a4c527d3bcb8dd1", "filename": "gcc/testsuite/g++.old-deja/g++.mike/sizeof.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999a1ad4ec7212dc6ac0217750bcbbf86518c7db/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fsizeof.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999a1ad4ec7212dc6ac0217750bcbbf86518c7db/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fsizeof.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fsizeof.C?ref=999a1ad4ec7212dc6ac0217750bcbbf86518c7db", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do compile }\n+\n+class Foo {\n+  int children[4];\n+public:\n+  unsigned function(void) {\n+    return sizeof (((Foo*)0)->children);\n+  }\n+};"}]}