{"sha": "75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjZmU0NDVkOWU0ZTMxMDQzNzU3YjlhYWVjMGZhOWUzM2Q3ZDdmMQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2012-07-18T15:15:36Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2012-07-18T15:15:36Z"}, "message": "invoke.texi: Add -fhoist-adjacent-loads and -ftree-slsr to list of flags controlling...\n\n2012-07-18  Bill Schmidt  <wschmidt@linux.ibm.com>\n\n\t* doc/invoke.texi: Add -fhoist-adjacent-loads and -ftree-slsr to list\n\tof flags controlling optimization; add -ftree-slsr to list of flags\n\tenabled by default at -O; add -fhoist-adjacent-loads to list of flags\n\tenabled by default at -O2; add -fvect-cost-model to list of flags\n\tenabled by default at -O3; document -fhoist-adjacent-loads and\n\t-ftree-slsr.\n\t* opts.c (default_option): Make -ftree-slsr default at -O1 and above.\n\t* gimple-ssa-strength-reduction.c (gate_strength_reduction): Use\n\tflag_tree_slsr.\n\t* common.opt: Add -ftree-slsr with flag_tree_slsr.\n\nFrom-SVN: r189617", "tree": {"sha": "70fc9421478cd9042bf16fdfce0894709050cc2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70fc9421478cd9042bf16fdfce0894709050cc2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/comments", "author": null, "committer": null, "parents": [{"sha": "a712b009c56fde0f26e757509b1019d6fb7b6ed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a712b009c56fde0f26e757509b1019d6fb7b6ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a712b009c56fde0f26e757509b1019d6fb7b6ed6"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "37490ee5306c4e8e1aa93ae59478e4025a22df52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "patch": "@@ -1,3 +1,16 @@\n+2012-07-18  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* doc/invoke.texi: Add -fhoist-adjacent-loads and -ftree-slsr to list\n+\tof flags controlling optimization; add -ftree-slsr to list of flags\n+\tenabled by default at -O; add -fhoist-adjacent-loads to list of flags\n+\tenabled by default at -O2; add -fvect-cost-model to list of flags\n+\tenabled by default at -O3; document -fhoist-adjacent-loads and\n+\t-ftree-slsr.\n+\t* opts.c (default_option): Make -ftree-slsr default at -O1 and above.\n+\t* gimple-ssa-strength-reduction.c (gate_strength_reduction): Use\n+\tflag_tree_slsr.\n+\t* common.opt: Add -ftree-slsr with flag_tree_slsr.\n+\n 2012-07-18  Jie Zhang  <jzhang918@gmail.com>\n \t    Julian Brown  <julian@codesourcery.com>\n "}, {"sha": "f415f14d92447e6e49de1effd39b21c4ce82ea40", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "patch": "@@ -2080,6 +2080,10 @@ ftree-sink\n Common Report Var(flag_tree_sink) Optimization\n Enable SSA code sinking on trees\n \n+ftree-slsr\n+Common Report Var(flag_tree_slsr) Optimization\n+Perform straight-line strength reduction\n+\n ftree-sra\n Common Report Var(flag_tree_sra) Optimization\n Perform scalar replacement of aggregates"}, {"sha": "d83f58993805d09ca0bdd3f3cc343a2206e28890", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "patch": "@@ -364,7 +364,8 @@ Objective-C and Objective-C++ Dialects}.\n -ffast-math -ffinite-math-only -ffloat-store -fexcess-precision=@var{style} @gol\n -fforward-propagate -ffp-contract=@var{style} -ffunction-sections @gol\n -fgcse -fgcse-after-reload -fgcse-las -fgcse-lm -fgraphite-identity @gol\n--fgcse-sm -fif-conversion -fif-conversion2 -findirect-inlining @gol\n+-fgcse-sm -fhoist-adjacent-loads -fif-conversion @gol\n+-fif-conversion2 -findirect-inlining @gol\n -finline-functions -finline-functions-called-once -finline-limit=@var{n} @gol\n -finline-small-functions -fipa-cp -fipa-cp-clone -fipa-matrix-reorg @gol\n -fipa-pta -fipa-profile -fipa-pure-const -fipa-reference @gol\n@@ -413,8 +414,8 @@ Objective-C and Objective-C++ Dialects}.\n -ftree-phiprop -ftree-loop-distribution -ftree-loop-distribute-patterns @gol\n -ftree-loop-ivcanon -ftree-loop-linear -ftree-loop-optimize @gol\n -ftree-parallelize-loops=@var{n} -ftree-pre -ftree-partial-pre -ftree-pta @gol\n--ftree-reassoc @gol\n--ftree-sink -ftree-sra -ftree-switch-conversion -ftree-tail-merge @gol\n+-ftree-reassoc -ftree-sink -ftree-slsr -ftree-sra @gol\n+-ftree-switch-conversion -ftree-tail-merge @gol\n -ftree-ter -ftree-vect-loop-version -ftree-vectorize -ftree-vrp @gol\n -funit-at-a-time -funroll-all-loops -funroll-loops @gol\n -funsafe-loop-optimizations -funsafe-math-optimizations -funswitch-loops @gol\n@@ -6260,6 +6261,7 @@ compilation time.\n -ftree-forwprop @gol\n -ftree-fre @gol\n -ftree-phiprop @gol\n+-ftree-slsr @gol\n -ftree-sra @gol\n -ftree-pta @gol\n -ftree-ter @gol\n@@ -6287,6 +6289,7 @@ also turns on the following optimization flags:\n -fdevirtualize @gol\n -fexpensive-optimizations @gol\n -fgcse  -fgcse-lm  @gol\n+-fhoist-adjacent-loads @gol\n -finline-small-functions @gol\n -findirect-inlining @gol\n -fipa-sra @gol\n@@ -6312,6 +6315,7 @@ Optimize yet more.  @option{-O3} turns on all optimizations specified\n by @option{-O2} and also turns on the @option{-finline-functions},\n @option{-funswitch-loops}, @option{-fpredictive-commoning},\n @option{-fgcse-after-reload}, @option{-ftree-vectorize},\n+@option{-fvect-cost-model},\n @option{-ftree-partial-pre} and @option{-fipa-cp-clone} options.\n \n @item -O0\n@@ -7130,6 +7134,13 @@ This flag is enabled by default at @option{-O} and higher.\n Perform hoisting of loads from conditional pointers on trees.  This\n pass is enabled by default at @option{-O} and higher.\n \n+@item -fhoist-adjacent-loads\n+@opindex hoist-adjacent-loads\n+Speculatively hoist loads from both branches of an if-then-else if the\n+loads are from adjacent locations in the same structure and the target\n+architecture has a conditional move instruction.  This flag is enabled\n+by default at @option{-O2} and higher.\n+\n @item -ftree-copy-prop\n @opindex ftree-copy-prop\n Perform copy propagation on trees.  This pass eliminates unnecessary\n@@ -7530,6 +7541,13 @@ defining expression.  This results in non-GIMPLE code, but gives the expanders\n much more complex trees to work on resulting in better RTL generation.  This is\n enabled by default at @option{-O} and higher.\n \n+@item -ftree-slsr\n+@opindex ftree-slsr\n+Perform straight-line strength reduction on trees.  This recognizes related\n+expressions involving multiplications and replaces them by less expensive\n+calculations when possible.  This is enabled by default at @option{-O} and\n+higher.\n+\n @item -ftree-vectorize\n @opindex ftree-vectorize\n Perform loop vectorization on trees. This flag is enabled by default at\n@@ -7551,7 +7569,8 @@ except at level @option{-Os} where it is disabled.\n \n @item -fvect-cost-model\n @opindex fvect-cost-model\n-Enable cost model for vectorization.\n+Enable cost model for vectorization.  This option is enabled by default at\n+@option{-O3}.\n \n @item -ftree-vrp\n @opindex ftree-vrp"}, {"sha": "c7ec1e9b0a88d9906391a87973f750182c2db990", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "patch": "@@ -1501,7 +1501,7 @@ execute_strength_reduction (void)\n static bool\n gate_strength_reduction (void)\n {\n-  return optimize > 0;\n+  return flag_tree_slsr;\n }\n \n struct gimple_opt_pass pass_strength_reduction ="}, {"sha": "6224c6acd17fd755b6527cc355c0dfe6435876f8", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=75cfe445d9e4e31043757b9aaec0fa9e33d7d7f1", "patch": "@@ -452,6 +452,7 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_1_PLUS, OPT_ftree_ch, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fcombine_stack_adjustments, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fcompare_elim, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS, OPT_ftree_slsr, NULL, 1 },\n \n     /* -O2 optimizations.  */\n     { OPT_LEVELS_2_PLUS, OPT_finline_small_functions, NULL, 1 },"}]}