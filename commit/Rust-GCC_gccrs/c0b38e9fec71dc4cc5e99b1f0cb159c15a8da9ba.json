{"sha": "c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba", "node_id": "C_kwDOANBUbNoAKGMwYjM4ZTlmZWM3MWRjNGNjNWU5OWIxZjBjYjE1OWMxNWE4ZGE5YmE", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-11-03T18:55:35Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-11-03T18:55:35Z"}, "message": "c++: constexpr error with defaulted virtual dtor [PR93413]\n\nWe're rejecting the below testcase with\n\n  error: 'virtual constexpr Base::~Base()' used before its definition\n  error: 'virtual constexpr Derived::~Derived()' used before its definition\n\ndue to special handling in mark_used added by r181272 to defer synthesis\nof virtual destructors until EOF (where we can set their linkage), which\nin turn makes them effectively unusable during constexpr evaluation.\n\nFortunately it seems this special handling is unnecessary ever since\nr208030 enabled us to tentatively set linkage of all defaulted virtual\ndestructors, including templated ones.  So this patch gets rid of this\nspecial handling.\n\n\tPR c++/93413\n\ngcc/cp/ChangeLog:\n\n\t* decl2.cc (mark_used): Don't defer synthesis of virtual\n\tfunctions.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp2a/constexpr-virtual21.C: New test.", "tree": {"sha": "fcb8632e8648eb54eb5bfacd9cc07d71cafad8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcb8632e8648eb54eb5bfacd9cc07d71cafad8c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba/comments", "author": null, "committer": null, "parents": [{"sha": "db6a9fe39ab08526b920af2b233b06860d286943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db6a9fe39ab08526b920af2b233b06860d286943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db6a9fe39ab08526b920af2b233b06860d286943"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "eeb59eae64f901dc0c1c653f6d81f29bb803d62d", "filename": "gcc/cp/decl2.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba/gcc%2Fcp%2Fdecl2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba/gcc%2Fcp%2Fdecl2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.cc?ref=c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba", "patch": "@@ -5788,14 +5788,6 @@ mark_used (tree decl, tsubst_flags_t complain /* = tf_warning_or_error */)\n       && !DECL_DEFAULTED_OUTSIDE_CLASS_P (decl)\n       && ! DECL_INITIAL (decl))\n     {\n-      /* Defer virtual destructors so that thunks get the right\n-\t linkage.  */\n-      if (DECL_VIRTUAL_P (decl) && !at_eof)\n-\t{\n-\t  note_vague_linkage_fn (decl);\n-\t  return true;\n-\t}\n-\n       /* Remember the current location for a function we will end up\n \t synthesizing.  Then we can inform the user where it was\n \t required in the case of error.  */"}, {"sha": "8b70c5f538b5a787cf77885e2abed96aa50b382c", "filename": "gcc/testsuite/g++.dg/cpp2a/constexpr-virtual21.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual21.C?ref=c0b38e9fec71dc4cc5e99b1f0cb159c15a8da9ba", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/93413\n+// { dg-do compile { target c++20 } }\n+\n+struct Base {\n+  virtual ~Base() = default;\n+};\n+constexpr Base b;\n+\n+struct Derived : Base { };\n+constexpr Derived d;"}]}