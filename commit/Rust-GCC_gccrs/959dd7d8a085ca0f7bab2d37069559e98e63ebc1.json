{"sha": "959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5ZGQ3ZDhhMDg1Y2EwZjdiYWIyZDM3MDY5NTU5ZTk4ZTYzZWJjMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2009-07-13T09:37:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T09:37:28Z"}, "message": "lib.adb, [...]: Update comments.\n\n\t* lib.adb, make.adb, mlib.adb, exp_dist.adb: Update comments.\n\tMinor reformatting.\n\nFrom-SVN: r149562", "tree": {"sha": "01093db3683cb59864162cc2613f13425ec775f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01093db3683cb59864162cc2613f13425ec775f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f"}], "stats": {"total": 52, "additions": 31, "deletions": 21}, "files": [{"sha": "a7a3dbcd6db41656bb4826a3561caa32e0be4a38", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "patch": "@@ -1,3 +1,8 @@\n+2009-07-13  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* lib.adb, make.adb, mlib.adb, exp_dist.adb: Update comments.\n+\tMinor reformatting.\n+\n 2009-07-13  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-env.adb (Create_Config_Pragmas_File): Iterate on sources rather"}, {"sha": "f13c8a45eef6f4087b0e4d58aa741da32793603c", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "patch": "@@ -874,7 +874,7 @@ package body Exp_Dist is\n          --  includes all limited types), append code to Stmts performing the\n          --  equivalent of:\n          --    Target := Typ'From_Any (N)\n-\n+         --\n          --  or, if Target is Empty:\n          --    return Typ'From_Any (N)\n \n@@ -8439,21 +8439,21 @@ package body Exp_Dist is\n                    Prefix         => New_Occurrence_Of (Typ, Loc),\n                    Attribute_Name => Name_Input,\n                    Expressions    => New_List (\n-                 Make_Attribute_Reference (Loc,\n-                   Prefix         => New_Occurrence_Of (Strm, Loc),\n-                   Attribute_Name => Name_Access)));\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         => New_Occurrence_Of (Strm, Loc),\n+                       Attribute_Name => Name_Access)));\n \n-               if Present (Target) then\n-                  --  Target := Typ'Input (Strm'Access)\n+               --  Target := Typ'Input (Strm'Access)\n \n+               if Present (Target) then\n                   Append_To (Stms,\n                     Make_Assignment_Statement (Loc,\n                       Name       => New_Occurrence_Of (Target, Loc),\n                       Expression => Expr));\n \n-               else\n-                  --  return Typ'Input (Strm'Access);\n+               --  return Typ'Input (Strm'Access);\n \n+               else\n                   Append_To (Stms,\n                     Make_Simple_Return_Statement (Loc,\n                       Expression => Expr));\n@@ -8469,6 +8469,7 @@ package body Exp_Dist is\n                      Temp : constant Entity_Id :=\n                               Make_Defining_Identifier\n                                 (Loc, New_Internal_Name ('R'));\n+\n                   begin\n                      Read_Call_List := New_List;\n                      Expr := New_Occurrence_Of (Temp, Loc);\n@@ -8500,6 +8501,7 @@ package body Exp_Dist is\n                      Expr)));\n \n                if No (Target) then\n+\n                   --  return Temp\n \n                   Append_To (Read_Call_List,\n@@ -8796,10 +8798,10 @@ package body Exp_Dist is\n                                  Build_From_Any_Call (Ctyp,\n                                    Build_Get_Aggregate_Element (Loc,\n                                      Any => Any,\n-                                     TC  => Build_TypeCode_Call (Loc,\n-                                              Ctyp, Decls),\n-                                     Idx => Make_Integer_Literal (Loc,\n-                                              Counter)),\n+                                     TC  =>\n+                                       Build_TypeCode_Call (Loc, Ctyp, Decls),\n+                                     Idx =>\n+                                       Make_Integer_Literal (Loc, Counter)),\n                                    Decls)));\n \n                         else"}, {"sha": "802506b56722a375f5674ed3f21148df9e84b584", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "patch": "@@ -606,6 +606,9 @@ package body Lib is\n       --  child subprogram body which we have not inserted into the table yet.\n \n       if N /= Library_Unit (Cunit (Main_Unit)) then\n+         --  We do not use a pragma Assert here, since this would not be\n+         --  enabled in case assertions are not active.\n+\n          raise Program_Error;\n       else\n          return Main_Unit;"}, {"sha": "877bff7dd63600d44a75d67df69a182cb9713c5b", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "patch": "@@ -4446,8 +4446,8 @@ package body Make is\n                              (ALI_Project.Object_Directory.Name);\n                         end if;\n \n-                        if not Is_Directory_Separator\n-                          (Name_Buffer (Name_Len))\n+                        if not\n+                          Is_Directory_Separator (Name_Buffer (Name_Len))\n                         then\n                            Add_Char_To_Name_Buffer (Directory_Separator);\n                         end if;\n@@ -5308,8 +5308,8 @@ package body Make is\n                   if not Is_Absolute_Path (Exec_File_Name) then\n                      Get_Name_String (Main_Project.Exec_Directory.Name);\n \n-                     if\n-                        not Is_Directory_Separator (Name_Buffer (Name_Len))\n+                     if not\n+                       Is_Directory_Separator (Name_Buffer (Name_Len))\n                      then\n                         Add_Char_To_Name_Buffer (Directory_Separator);\n                      end if;"}, {"sha": "4c4d375f3243bc547bcc8538b2ce335322532866", "filename": "gcc/ada/mlib.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2Fmlib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959dd7d8a085ca0f7bab2d37069559e98e63ebc1/gcc%2Fada%2Fmlib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.adb?ref=959dd7d8a085ca0f7bab2d37069559e98e63ebc1", "patch": "@@ -210,11 +210,11 @@ package body MLib is\n                         --  since the whole file is read at once except on VMS.\n \n                         Curr := S'First;\n-\n                         while Curr <= Len loop\n                            Actual_Len := Read (FD, S (Curr)'Address, Len);\n \n                            --  Exit if we could not read for some reason\n+\n                            exit when Actual_Len = 0;\n \n                            Curr := Curr + Actual_Len;\n@@ -231,10 +231,10 @@ package body MLib is\n                         --  at the beginning of the P line.\n \n                         for Index in 1 .. Len - 3 loop\n-                           if (S (Index) = ASCII.LF or else\n-                                 S (Index) = ASCII.CR)\n-                             and then\n-                               S (Index + 1) = 'P'\n+                           if (S (Index) = ASCII.LF\n+                                 or else\n+                               S (Index) = ASCII.CR)\n+                             and then S (Index + 1) = 'P'\n                            then\n                               S (Index + 5 .. Len + 3) := S (Index + 2 .. Len);\n                               S (Index + 2 .. Index + 4) := \" SL\";"}]}