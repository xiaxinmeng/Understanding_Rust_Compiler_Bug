{"sha": "d3dc619d32bd97c1b3046b59a49bb25f4e511818", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNkYzYxOWQzMmJkOTdjMWIzMDQ2YjU5YTQ5YmIyNWY0ZTUxMTgxOA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-02-28T22:46:01Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-02-28T22:46:01Z"}, "message": "revert: Makefile.def (dependencies): Add dependency for install-target-libssp and install-target-libgomp on install-gcc.\n\n2007-02-28  Eric Christopher  <echristo@apple.com>\n\n   Revert:\n   2006-12-07  Mike Stump  <mrs@apple.com>\n\n       * Makefile.def (dependencies): Add dependency for\n       install-target-libssp and install-target-libgomp on\n       install-gcc.\n       * Makefile.in: Regenerate.\n\n2007-02-28  Eric Christopher  <echristo@apple.com>\n\n   * Makefile.in (install-include-dir): Don't rm -rf include.\n\nFrom-SVN: r122415", "tree": {"sha": "8f2ec494d164f6dc830f60514bc739adc6fa0224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f2ec494d164f6dc830f60514bc739adc6fa0224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3dc619d32bd97c1b3046b59a49bb25f4e511818", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3dc619d32bd97c1b3046b59a49bb25f4e511818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3dc619d32bd97c1b3046b59a49bb25f4e511818", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3dc619d32bd97c1b3046b59a49bb25f4e511818/comments", "author": null, "committer": null, "parents": [{"sha": "a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9"}], "stats": {"total": 60, "additions": 28, "deletions": 32}, "files": [{"sha": "7376c119a8201517d381997e4f9af730df8cd807", "filename": "Makefile.def", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3dc619d32bd97c1b3046b59a49bb25f4e511818/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3dc619d32bd97c1b3046b59a49bb25f4e511818/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=d3dc619d32bd97c1b3046b59a49bb25f4e511818", "patch": "@@ -484,10 +484,6 @@ dependencies = { module=all-target-libobjc; on=all-target-libiberty; };\n dependencies = { module=all-target-libobjc; on=all-target-boehm-gc; };\n dependencies = { module=all-target-libstdc++-v3; on=all-target-libiberty; };\n \n-// Target libraries installed under gcc need to be installed before gcc\n-dependencies = { module=install-target-libssp; on=install-gcc; };\n-dependencies = { module=install-target-libgomp; on=install-gcc; };\n-\n // Target modules in the 'src' repository.\n lang_env_dependencies = { module=examples; };\n lang_env_dependencies = { module=libtermcap; };"}, {"sha": "96fb4563a09d4f80a0127217760d1214ca962784", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3dc619d32bd97c1b3046b59a49bb25f4e511818/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3dc619d32bd97c1b3046b59a49bb25f4e511818/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=d3dc619d32bd97c1b3046b59a49bb25f4e511818", "patch": "@@ -46464,8 +46464,6 @@ configure-target-libobjc: maybe-configure-target-boehm-gc\n all-target-libobjc: maybe-all-target-libiberty\n all-target-libobjc: maybe-all-target-boehm-gc\n all-target-libstdc++-v3: maybe-all-target-libiberty\n-install-target-libssp: maybe-install-gcc\n-install-target-libgomp: maybe-install-gcc\n all-target-libgloss: maybe-configure-target-newlib\n all-target-winsup: maybe-all-target-libiberty\n all-target-winsup: maybe-all-target-libtermcap"}, {"sha": "61ffafb663cf626d4f112606d95a338ee0ccbe3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3dc619d32bd97c1b3046b59a49bb25f4e511818/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3dc619d32bd97c1b3046b59a49bb25f4e511818/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3dc619d32bd97c1b3046b59a49bb25f4e511818", "patch": "@@ -1,3 +1,7 @@\n+2007-02-28  Eric Christopher  <echristo@apple.com>\n+\n+\t* Makefile.in (install-include-dir): Don't rm -rf include.\n+\n 2007-02-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/30364\n@@ -35,7 +39,7 @@\n \n \t* calls.c (emit_library_call_value_1): Handle partial registers\n \tcorrectly when building up CALL_INSN_FUNCTION_USAGE.\n-\t\n+\n 2007-02-27  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa/predicates.md (move_src_operand): Allow zero for mode.\n@@ -173,7 +177,7 @@\n \n \t* loop-iv.c (simplify_using_initial_values): Fix oversight in previous\n \tchange; avoid a memory leak when returning early.\n-\t\n+\n 2007-02-26  Mark Mitchell  <mark@codesourcery.com>\n \n \t* c-decl.c (static_ctors): Move to c-common.c.\n@@ -472,7 +476,7 @@\n 2007-02-22  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/30843\n-\t* tree-vect-transform.c (vect_transform_loop): Remove strided scalar \n+\t* tree-vect-transform.c (vect_transform_loop): Remove strided scalar\n \tstores only after all the group is vectorized.\n \n 2007-02-22  Dorit Nuzman  <dorit@il.ibm.com>"}, {"sha": "2331ef0343c248861115e2929815711e16d27e28", "filename": "gcc/Makefile.in", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3dc619d32bd97c1b3046b59a49bb25f4e511818/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3dc619d32bd97c1b3046b59a49bb25f4e511818/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d3dc619d32bd97c1b3046b59a49bb25f4e511818", "patch": "@@ -752,9 +752,9 @@ SCHED_INT_H = sched-int.h $(INSN_ATTR_H) $(BASIC_BLOCK_H) $(RTL_H)\n INTEGRATE_H = integrate.h $(VARRAY_H)\n CFGLAYOUT_H = cfglayout.h $(BASIC_BLOCK_H)\n CFGLOOP_H = cfgloop.h $(BASIC_BLOCK_H) $(RTL_H) vecprim.h\n-IPA_UTILS_H = ipa-utils.h $(TREE_H) $(CGRAPH_H) \n-IPA_REFERENCE_H = ipa-reference.h bitmap.h $(TREE_H)  \n-IPA_TYPE_ESCAPE_H = ipa-type-escape.h $(TREE_H)  \n+IPA_UTILS_H = ipa-utils.h $(TREE_H) $(CGRAPH_H)\n+IPA_REFERENCE_H = ipa-reference.h bitmap.h $(TREE_H)\n+IPA_TYPE_ESCAPE_H = ipa-type-escape.h $(TREE_H)\n CGRAPH_H = cgraph.h $(TREE_H)\n DF_H = df.h bitmap.h $(BASIC_BLOCK_H) alloc-pool.h\n DDG_H = ddg.h sbitmap.h $(DF_H)\n@@ -1880,7 +1880,7 @@ s-options: $(ALL_OPT_FILES) Makefile $(srcdir)/opt-gather.awk\n \n options.c: optionlist $(srcdir)/opt-functions.awk $(srcdir)/optc-gen.awk\n \t$(AWK) -f $(srcdir)/opt-functions.awk -f $(srcdir)/optc-gen.awk \\\n-\t       -v header_name=\"config.h system.h coretypes.h tm.h\" < $< > $@ \n+\t       -v header_name=\"config.h system.h coretypes.h tm.h\" < $< > $@\n \n options.h: s-options-h ; @true\n s-options-h: optionlist $(srcdir)/opt-functions.awk $(srcdir)/opth-gen.awk\n@@ -1976,13 +1976,13 @@ tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) vecprim.h\n tree-ssa-ter.o : tree-ssa-ter.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) bitmap.h \n+   $(TREE_SSA_LIVE_H) bitmap.h\n tree-ssa-coalesce.o : tree-ssa-coalesce.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) bitmap.h $(FLAGS_H) $(HASHTAB_H) toplev.h \n+   $(TREE_SSA_LIVE_H) bitmap.h $(FLAGS_H) $(HASHTAB_H) toplev.h\n tree-outof-ssa.o : tree-outof-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) bitmap.h $(GGC_H) toplev.h \n+   tree-pass.h $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) bitmap.h $(GGC_H) toplev.h\n tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n@@ -2035,7 +2035,7 @@ domwalk.o : domwalk.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) domwalk.h $(GGC_H)\n tree-ssa-live.o : tree-ssa-live.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_SSA_LIVE_H) bitmap.h toplev.h \n+   $(TREE_SSA_LIVE_H) bitmap.h toplev.h\n tree-ssa-copyrename.o : tree-ssa-copyrename.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) tree-pass.h \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) \\\n@@ -2093,7 +2093,7 @@ tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n    tree-pass.h $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n-   $(TREE_GIMPLE_H) \n+   $(TREE_GIMPLE_H)\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) errors.h $(TREE_INLINE_H) \\\n    $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) tree-pass.h toplev.h \\\n@@ -2423,17 +2423,17 @@ cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(FLAGS_H) $(GGC_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(TREE_GIMPLE_H) \\\n    $(TREE_FLOW_H) tree-pass.h $(C_COMMON_H) debug.h $(DIAGNOSTIC_H) \\\n-   $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) ipa-prop.h \n+   $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) ipa-prop.h\n cgraphbuild.o : cgraphbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(CGRAPH_H) intl.h pointer-set.h $(TREE_GIMPLE_H) \\\n-   $(TREE_FLOW_H) tree-pass.h \n+   $(TREE_FLOW_H) tree-pass.h\n varpool.o : varpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(FLAGS_H) $(GGC_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(TREE_GIMPLE_H) \\\n    $(TREE_FLOW_H) tree-pass.h $(C_COMMON_H) debug.h $(DIAGNOSTIC_H) \\\n    $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) ipa-prop.h \\\n    gt-varpool.h\n-ipa.o : ipa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(CGRAPH_H) \n+ipa.o : ipa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(CGRAPH_H)\n ipa-prop.o : ipa-prop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H) ipa-prop.h \\\n    $(TREE_FLOW_H) $(TM_H) tree-pass.h $(FLAGS_H) $(TREE_H)\n@@ -2447,22 +2447,22 @@ ipa-inline.o : ipa-inline.c gt-ipa-inline.h $(CONFIG_H) $(SYSTEM_H) coretypes.h\n ipa-utils.o : ipa-utils.c $(IPA_UTILS_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(C_COMMON_H) $(TREE_GIMPLE_H) \\\n-   $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H) \n+   $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H)\n ipa-reference.o : ipa-reference.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_REFERENCE_H) $(IPA_UTILS_H) $(C_COMMON_H) \\\n    $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) \n+   $(DIAGNOSTIC_H) $(FUNCTION_H)\n \n ipa-pure-const.o : ipa-pure-const.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_UTILS_H) $(C_COMMON_H) $(TARGET_H) \\\n-   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H)  \n+   $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(DIAGNOSTIC_H)\n ipa-type-escape.o : ipa-type-escape.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_TYPE_ESCAPE_H) $(IPA_UTILS_H) $(C_COMMON_H) \\\n    $(TREE_GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) \n+   $(DIAGNOSTIC_H) $(FUNCTION_H)\n \n coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n@@ -2534,7 +2534,7 @@ df-problems.o : df-problems.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n df-scan.o : df-scan.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n    hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) bitmap.h sbitmap.h $(TM_P_H) \\\n-   $(FLAGS_H) $(TARGET_H) $(TARGET_DEF_H) $(TREE_H) output.h tree-pass.h \n+   $(FLAGS_H) $(TARGET_H) $(TARGET_DEF_H) $(TREE_H) output.h tree-pass.h\n var-tracking.o : var-tracking.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) hard-reg-set.h insn-config.h reload.h $(FLAGS_H) \\\n    $(BASIC_BLOCK_H) output.h sbitmap.h alloc-pool.h $(FIBHEAP_H) $(HASHTAB_H) \\\n@@ -2875,7 +2875,7 @@ insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n # The \"; @true\" construct forces Make to recheck the timestamp on the\n # target file.\n \n-simple_generated_h = insn-attr.h insn-codes.h insn-config.h insn-flags.h \n+simple_generated_h = insn-attr.h insn-codes.h insn-config.h insn-flags.h\n \n simple_generated_c = insn-attrtab.c insn-automata.c insn-emit.c \\\n \t\t     insn-extract.c insn-opinit.c insn-output.c \\\n@@ -3358,7 +3358,7 @@ install-gcc-tooldir:\n \t$(mkinstalldirs) $(DESTDIR)$(gcc_tooldir)\n \n macro_list: s-macro_list; @true\n-s-macro_list : $(GCC_PASSES) \n+s-macro_list : $(GCC_PASSES)\n \techo | $(GCC_FOR_TARGET) -E -dM - | \\\n \t  sed -n -e 's/^#define \\([^_][a-zA-Z0-9_]*\\).*/\\1/p' \\\n \t\t -e 's/^#define \\(_[^_A-Z][a-zA-Z0-9_]*\\).*/\\1/p' | \\\n@@ -3896,7 +3896,7 @@ $(DESTDIR)$(infodir)/%.info: doc/%.info installdirs\n \telse true; fi;\n \n html__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n- \n+\n install-html: $(HTMLS_BUILD)\n \t@$(NORMAL_INSTALL)\n \ttest -z \"$(htmldir)\" || $(mkinstalldirs) \"$(DESTDIR)$(htmldir)\"\n@@ -3962,11 +3962,9 @@ install-headers: $(INSTALL_HEADERS_DIR)\n \n # Create or recreate the gcc private include file directory.\n install-include-dir: installdirs\n-\t-rm -rf $(DESTDIR)$(libsubdir)/include\n+\t$(mkinstalldirs) $(DESTDIR)$(libsubdir)/include\n \t-rm -rf $(DESTDIR)$(libsubdir)/include-fixed\n-\tmkdir $(DESTDIR)$(libsubdir)/include\n \tmkdir $(DESTDIR)$(libsubdir)/include-fixed\n-\t-chmod a+rx $(DESTDIR)$(libsubdir)/include\n \t-chmod a+rx $(DESTDIR)$(libsubdir)/include-fixed\n \n # Create or recreate the install-tools include file directory."}]}