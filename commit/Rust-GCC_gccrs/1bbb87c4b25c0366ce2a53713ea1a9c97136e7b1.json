{"sha": "1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJiYjg3YzRiMjVjMDM2NmNlMmE1MzcxM2VhMWE5Yzk3MTM2ZTdiMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-05-21T05:41:46Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-05-21T05:41:46Z"}, "message": "re PR bootstrap/60984 (AIX: gcc-4.9.0 bootstrap fails in stage-2)\n\n\n\tPR bootstrap/60984\n\t* ipa-inline-transform.c (inline_call): Use add CALLEE_REMOVED parameter.\n\t* ipa-inline.c (inline_to_all_callers): If callee was removed; return.\n\t(ipa_inline): Loop inline_to_all_callers until no more aliases are removed.\n\nFrom-SVN: r210674", "tree": {"sha": "4b9f247bf7f2f748f5c2c735e1b8ccd0f27c1d99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b9f247bf7f2f748f5c2c735e1b8ccd0f27c1d99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/comments", "author": null, "committer": null, "parents": [{"sha": "d5ce4663f3d2f1d6c102757a2bbcdf00c7e9b49e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ce4663f3d2f1d6c102757a2bbcdf00c7e9b49e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ce4663f3d2f1d6c102757a2bbcdf00c7e9b49e"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "104c87d0ccbd7ab401fc9b692cff2a1e6b03a187", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1", "patch": "@@ -1,3 +1,10 @@\n+2014-05-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR bootstrap/60984\n+\t* ipa-inline-transform.c (inline_call): Use add CALLEE_REMOVED parameter.\n+\t* ipa-inline.c (inline_to_all_callers): If callee was removed; return.\n+\t(ipa_inline): Loop inline_to_all_callers until no more aliases are removed.\n+\n 2014-05-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa.c (ipa_discover_readonly_nonaddressable_var): Fix dumping;"}, {"sha": "82fe839b380c1714a226b434848bded9a3d715bc", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1", "patch": "@@ -215,14 +215,16 @@ clone_inlined_nodes (struct cgraph_edge *e, bool duplicate,\n    it is NULL. If UPDATE_OVERALL_SUMMARY is false, do not bother to recompute overall\n    size of caller after inlining. Caller is required to eventually do it via\n    inline_update_overall_summary.\n+   If callee_removed is non-NULL, set it to true if we removed callee node.\n \n    Return true iff any new callgraph edges were discovered as a\n    result of inlining.  */\n \n bool\n inline_call (struct cgraph_edge *e, bool update_original,\n \t     vec<cgraph_edge_p> *new_edges,\n-\t     int *overall_size, bool update_overall_summary)\n+\t     int *overall_size, bool update_overall_summary,\n+\t     bool *callee_removed)\n {\n   int old_size = 0, new_size = 0;\n   struct cgraph_node *to = NULL;\n@@ -261,6 +263,8 @@ inline_call (struct cgraph_edge *e, bool update_original,\n \t    {\n \t      next_alias = cgraph_alias_target (alias);\n \t      cgraph_remove_node (alias);\n+\t      if (callee_removed)\n+\t\t*callee_removed = true;\n \t      alias = next_alias;\n \t    }\n \t  else"}, {"sha": "176d7c64d3c3adf0ba06ee45ae8f111ba82bb3a7", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1", "patch": "@@ -1971,6 +1971,8 @@ static bool\n inline_to_all_callers (struct cgraph_node *node, void *data)\n {\n   int *num_calls = (int *)data;\n+  bool callee_removed = false;\n+\n   while (node->callers && !node->global.inlined_to)\n     {\n       struct cgraph_node *caller = node->callers->caller;\n@@ -1987,7 +1989,7 @@ inline_to_all_callers (struct cgraph_node *node, void *data)\n \t\t   inline_summary (node->callers->caller)->size);\n \t}\n \n-      inline_call (node->callers, true, NULL, NULL, true);\n+      inline_call (node->callers, true, NULL, NULL, true, &callee_removed);\n       if (dump_file)\n \tfprintf (dump_file,\n \t\t \" Inlined into %s which now has %i size\\n\",\n@@ -1997,8 +1999,10 @@ inline_to_all_callers (struct cgraph_node *node, void *data)\n \t{\n \t  if (dump_file)\n \t    fprintf (dump_file, \"New calls found; giving up.\\n\");\n-\t  return true;\n+\t  return callee_removed;\n \t}\n+      if (callee_removed)\n+\treturn true;\n     }\n   return false;\n }\n@@ -2244,8 +2248,9 @@ ipa_inline (void)\n \t      int num_calls = 0;\n \t      cgraph_for_node_and_aliases (node, sum_callers,\n \t\t\t\t\t   &num_calls, true);\n-\t      cgraph_for_node_and_aliases (node, inline_to_all_callers,\n-\t\t\t\t\t   &num_calls, true);\n+\t      while (cgraph_for_node_and_aliases (node, inline_to_all_callers,\n+\t\t\t\t\t          &num_calls, true))\n+\t\t;\n \t      remove_functions = true;\n \t    }\n \t}"}, {"sha": "bddf29a2430b0270a5ecbc459eec903cdcf2d11b", "filename": "gcc/ipa-inline.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/gcc%2Fipa-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1/gcc%2Fipa-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.h?ref=1bbb87c4b25c0366ce2a53713ea1a9c97136e7b1", "patch": "@@ -236,7 +236,8 @@ void compute_inline_parameters (struct cgraph_node *, bool);\n bool speculation_useful_p (struct cgraph_edge *e, bool anticipate_inlining);\n \n /* In ipa-inline-transform.c  */\n-bool inline_call (struct cgraph_edge *, bool, vec<cgraph_edge_p> *, int *, bool);\n+bool inline_call (struct cgraph_edge *, bool, vec<cgraph_edge_p> *, int *, bool,\n+\t\t  bool *callee_removed = NULL);\n unsigned int inline_transform (struct cgraph_node *);\n void clone_inlined_nodes (struct cgraph_edge *e, bool, bool, int *,\n \t\t\t  int freq_scale);"}]}