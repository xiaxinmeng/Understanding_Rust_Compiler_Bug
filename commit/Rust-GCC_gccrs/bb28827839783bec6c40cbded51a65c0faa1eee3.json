{"sha": "bb28827839783bec6c40cbded51a65c0faa1eee3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIyODgyNzgzOTc4M2JlYzZjNDBjYmRlZDUxYTY1YzBmYWExZWVlMw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-08-12T02:43:49Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-08-12T02:43:49Z"}, "message": "(get_file_function_name):  New function.\n\nFrom-SVN: r5136", "tree": {"sha": "a6d1a4cf78fbdbf29f58250d0201a856924c5868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6d1a4cf78fbdbf29f58250d0201a856924c5868"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb28827839783bec6c40cbded51a65c0faa1eee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb28827839783bec6c40cbded51a65c0faa1eee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb28827839783bec6c40cbded51a65c0faa1eee3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb28827839783bec6c40cbded51a65c0faa1eee3/comments", "author": null, "committer": null, "parents": [{"sha": "a2f541382982d674825d853512b77ecfbe329c28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f541382982d674825d853512b77ecfbe329c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f541382982d674825d853512b77ecfbe329c28"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "317e8ad0cee906c16e81e641ca29cca2ba670323", "filename": "gcc/tree.c", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb28827839783bec6c40cbded51a65c0faa1eee3/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb28827839783bec6c40cbded51a65c0faa1eee3/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=bb28827839783bec6c40cbded51a65c0faa1eee3", "patch": "@@ -3352,3 +3352,68 @@ dump_tree_statistics ()\n #endif\n   print_lang_statistics ();\n }\n+\f\n+#define FILE_FUNCTION_PREFIX_LEN 9\n+\n+#ifndef NO_DOLLAR_IN_LABEL\n+#define FILE_FUNCTION_FORMAT \"_GLOBAL_$D$%s\"\n+#else /* NO_DOLLAR_IN_LABEL */\n+#ifndef NO_DOT_IN_LABEL\n+#define FILE_FUNCTION_FORMAT \"_GLOBAL_.D.%s\"\n+#else /* NO_DOT_IN_LABEL */\n+#define FILE_FUNCTION_FORMAT \"__GLOBAL_D_%s\"\n+#endif\t/* NO_DOT_IN_LABEL */\n+#endif\t/* NO_DOLLAR_IN_LABEL */\n+\n+extern char * first_global_object_name;\n+\n+/* If KIND=='I', return a suitable global initializer (constructor) name.\n+   If KIND=='D', return a suitable global clean-up (destructor) name. */\n+\n+tree\n+get_file_function_name (kind)\n+     int kind;\n+{\n+  char *buf;\n+  register char *p;\n+\n+  if (first_global_object_name)\n+    p = first_global_object_name;\n+  else if (main_input_filename)\n+    p = main_input_filename;\n+  else\n+    p = input_filename;\n+\n+  buf = (char *) alloca (sizeof (FILE_FUNCTION_FORMAT) + strlen (p));\n+\n+  /* Set up the name of the file-level functions we may need.  */\n+  /* Use a global object (which is already required to be unique over\n+     the program) rather than the file name (which imposes extra\n+     constraints).  -- Raeburn@MIT.EDU, 10 Jan 1990.  */\n+  sprintf (buf, FILE_FUNCTION_FORMAT, p);\n+\n+  /* Don't need to pull wierd characters out of global names.  */\n+  if (p != first_global_object_name)\n+    {\n+      for (p = buf+11; *p; p++)\n+\tif (! ((*p >= '0' && *p <= '9')\n+#if 0 /* we always want labels, which are valid C++ identifiers (+ `$') */\n+#ifndef ASM_IDENTIFY_GCC\t/* this is required if `.' is invalid -- k. raeburn */\n+\t       || *p == '.'\n+#endif\n+#endif\n+#ifndef NO_DOLLAR_IN_LABEL\t/* this for `$'; unlikely, but... -- kr */\n+\t       || *p == '$'\n+#endif\n+#ifndef NO_DOT_IN_LABEL\t\t/* this for `.'; unlikely, but... */\n+\t       || *p == '.'\n+#endif\n+\t       || (*p >= 'A' && *p <= 'Z')\n+\t       || (*p >= 'a' && *p <= 'z')))\n+\t  *p = '_';\n+    }\n+\n+  buf[FILE_FUNCTION_PREFIX_LEN] = kind;\n+\n+  return get_identifier (buf);\n+}"}]}