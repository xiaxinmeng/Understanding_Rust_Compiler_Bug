{"sha": "d23dff51b29c5bb2f2e1480ccc1064440e872fa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIzZGZmNTFiMjljNWJiMmYyZTE0ODBjY2MxMDY0NDQwZTg3MmZhNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-11-29T16:10:21Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-11-29T16:10:21Z"}, "message": "h8300.md (an anonymous pattern): Give an internal name *tst_extzv_bitqi_1_n.\n\n\t* config/h8300/h8300.md (an anonymous pattern): Give an\n\tinternal name *tst_extzv_bitqi_1_n.\n\tAccept bit_operand instead of bit_memory_operand.\n\tDo not accept bit tests with the MSB.\n\t(*tst_extzv_memqi_1_n): New.\n\nFrom-SVN: r59636", "tree": {"sha": "fe85f4416aef856faf789ba958f509e05ad28372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe85f4416aef856faf789ba958f509e05ad28372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d23dff51b29c5bb2f2e1480ccc1064440e872fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23dff51b29c5bb2f2e1480ccc1064440e872fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23dff51b29c5bb2f2e1480ccc1064440e872fa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23dff51b29c5bb2f2e1480ccc1064440e872fa7/comments", "author": null, "committer": null, "parents": [{"sha": "a1cd285d75847b6cad6c80992763198123a09428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1cd285d75847b6cad6c80992763198123a09428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1cd285d75847b6cad6c80992763198123a09428"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "8d4f86cb61de97bb4cd1f0fdf3c75cbaf14eb5db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23dff51b29c5bb2f2e1480ccc1064440e872fa7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23dff51b29c5bb2f2e1480ccc1064440e872fa7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d23dff51b29c5bb2f2e1480ccc1064440e872fa7", "patch": "@@ -1,3 +1,11 @@\n+2002-11-29  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (an anonymous pattern): Give an\n+\tinternal name *tst_extzv_bitqi_1_n.\n+\tAccept bit_operand instead of bit_memory_operand.\n+\tDo not accept bit tests with the MSB.\n+\t(*tst_extzv_memqi_1_n): New.\n+\n 2002-11-28  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (h8300_eightbit_constant_address_p):"}, {"sha": "5da3397fffa3533f3a6ef2d387709b988463346f", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d23dff51b29c5bb2f2e1480ccc1064440e872fa7/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d23dff51b29c5bb2f2e1480ccc1064440e872fa7/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=d23dff51b29c5bb2f2e1480ccc1064440e872fa7", "patch": "@@ -580,15 +580,33 @@\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"set_zn\")])\n \n-(define_insn \"\"\n-  [(set (cc0) (zero_extract:SI (match_operand:QI 0 \"bit_memory_operand\" \"r,U\")\n+(define_insn \"*tst_extzv_bitqi_1_n\"\n+  [(set (cc0) (zero_extract:SI (match_operand:QI 0 \"bit_operand\" \"r,U\")\n \t\t\t       (const_int 1)\n \t\t\t       (match_operand 1 \"const_int_operand\" \"n,n\")))]\n-  \"TARGET_H8300H || TARGET_H8300S\"\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && INTVAL (operands[1]) != 7\"\n   \"btst\t%Z1,%Y0\"\n   [(set_attr \"length\" \"2,8\")\n    (set_attr \"cc\" \"set_zn,set_zn\")])\n \n+(define_insn_and_split \"*tst_extzv_memqi_1_n\"\n+  [(set (cc0) (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"m\")\n+\t\t\t       (const_int 1)\n+\t\t\t       (match_operand 1 \"const_int_operand\" \"n\")))\n+   (clobber (match_scratch:QI 2 \"=&r\"))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && !EXTRA_CONSTRAINT (operands[0], 'U')\n+   && INTVAL (operands[1]) != 7\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 2)\n+\t(match_dup 0))\n+   (set (cc0) (zero_extract:SI (match_dup 2)\n+\t\t\t       (const_int 1)\n+\t\t\t       (match_dup 1)))]\n+  \"\")\n+\n (define_insn \"\"\n   [(set (cc0) (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t       (const_int 1)"}]}