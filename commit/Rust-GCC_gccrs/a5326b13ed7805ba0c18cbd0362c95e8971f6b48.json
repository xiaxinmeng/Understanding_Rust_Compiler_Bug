{"sha": "a5326b13ed7805ba0c18cbd0362c95e8971f6b48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUzMjZiMTNlZDc4MDViYTBjMThjYmQwMzYyYzk1ZTg5NzFmNmI0OA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2006-10-24T12:25:06Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2006-10-24T12:25:06Z"}, "message": "builtin-math-2.c: New test.\n\n\t* gcc.dg/torture/builtin-math-2.c: New test.\n\nFrom-SVN: r118003", "tree": {"sha": "99506c5eb0cdbf2dfd9841d13a428627c1e65a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99506c5eb0cdbf2dfd9841d13a428627c1e65a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5326b13ed7805ba0c18cbd0362c95e8971f6b48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5326b13ed7805ba0c18cbd0362c95e8971f6b48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5326b13ed7805ba0c18cbd0362c95e8971f6b48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5326b13ed7805ba0c18cbd0362c95e8971f6b48/comments", "author": null, "committer": null, "parents": [{"sha": "27d7d0422ce932e1f531fec5de9b81bced2f369b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d7d0422ce932e1f531fec5de9b81bced2f369b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d7d0422ce932e1f531fec5de9b81bced2f369b"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "5ed77bf1391675c0ee72961c95baa68ae75f5118", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5326b13ed7805ba0c18cbd0362c95e8971f6b48/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5326b13ed7805ba0c18cbd0362c95e8971f6b48/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5326b13ed7805ba0c18cbd0362c95e8971f6b48", "patch": "@@ -1,3 +1,7 @@\n+2006-10-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/torture/builtin-math-2.c: New test.\n+\n 2006-10-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/28796"}, {"sha": "deeedf7142c0ad2760dba65b271d272fa238ba8d", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-2.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5326b13ed7805ba0c18cbd0362c95e8971f6b48/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5326b13ed7805ba0c18cbd0362c95e8971f6b48/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-2.c?ref=a5326b13ed7805ba0c18cbd0362c95e8971f6b48", "patch": "@@ -0,0 +1,67 @@\n+/* Test things that should block GCC from optimizing compile-time\n+   constants passed to a builtin transcendental function.\n+\n+   Origin: Kaveh R. Ghazi 10/22/2006.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+extern void foof (float);\n+extern void foo (double);\n+extern void fool (long double);\n+\n+void bar()\n+{\n+  /* An argument of NaN is not evaluated at compile-time.  */\n+  foof (__builtin_exp2f (__builtin_nanf(\"\")));\n+  foo (__builtin_exp2 (__builtin_nan(\"\")));\n+  fool (__builtin_exp2l (__builtin_nanl(\"\")));\n+\n+  /* An argument of Inf/-Inf is not evaluated at compile-time.  */\n+  foof (__builtin_exp2f (__builtin_inff()));\n+  foo (__builtin_exp2 (__builtin_inf()));\n+  fool (__builtin_exp2l (__builtin_infl()));\n+  foof (__builtin_exp2f (-__builtin_inff()));\n+  foo (__builtin_exp2 (-__builtin_inf()));\n+  fool (__builtin_exp2l (-__builtin_infl()));\n+\n+  /* Result overflows MPFR, which in version 2.2.x has 30 exponent bits.  */\n+  foof (__builtin_exp2f (0x1p50F));\n+  foo (__builtin_exp2 (0x1p50));\n+  fool (__builtin_exp2l (0x1p50L));\n+  /* Result underflows MPFR, which in version 2.2.x has 30 exponent bits.  */\n+  foof (__builtin_exp2f (-0x1p50F));\n+  foo (__builtin_exp2 (-0x1p50));\n+  fool (__builtin_exp2l (-0x1p50L));\n+\n+  /* Result overflows GCC's REAL_VALUE_TYPE, which has 26 exponent bits.  */\n+  foof (__builtin_exp2f (0x1p28F));\n+  foo (__builtin_exp2 (0x1p28));\n+  fool (__builtin_exp2l (0x1p28L));\n+  /* Result underflows GCC's REAL_VALUE_TYPE, which has 26 exponent bits.  */\n+  foof (__builtin_exp2f (-0x1p28F));\n+  foo (__builtin_exp2 (-0x1p28));\n+  fool (__builtin_exp2l (-0x1p28L));\n+\n+  /* Result overflows (even an extended) C double's mode.  */\n+  foof (__builtin_exp2f (0x1p24F));\n+  foo (__builtin_exp2 (0x1p24));\n+  fool (__builtin_exp2l (0x1p24L));\n+  /* Result underflows (even an extended) C double's mode.  */\n+  foof (__builtin_exp2f (-0x1p24F));\n+  foo (__builtin_exp2 (-0x1p24));\n+  fool (__builtin_exp2l (-0x1p24L));\n+\n+  /* Ensure that normal arguments/results are folded.  */\n+  foof (__builtin_exp2f (1.5F));\n+  foo (__builtin_exp2 (1.5));\n+  fool (__builtin_exp2l (1.5L));\n+  foof (__builtin_exp2f (-1.5F));\n+  foo (__builtin_exp2 (-1.5));\n+  fool (__builtin_exp2l (-1.5L));\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"exp2 \" 9 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"exp2f\" 9 \"original\" } } */\n+/* { dg-final { scan-tree-dump-times \"exp2l\" 9 \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}]}