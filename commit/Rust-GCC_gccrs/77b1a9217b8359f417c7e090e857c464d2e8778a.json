{"sha": "77b1a9217b8359f417c7e090e857c464d2e8778a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdiMWE5MjE3YjgzNTlmNDE3YzdlMDkwZTg1N2M0NjRkMmU4Nzc4YQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-10-21T21:03:48Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-10-21T21:03:48Z"}, "message": "langhooks.c (lang_hook_default_do_nothing, [...]): New defaults.\n\n\t* langhooks.c (lang_hook_default_do_nothing,\n\tlang_hook_default_decode_option): New defaults.\n\t* langhooks.h: Make hooks unconditional and non-NULL.\n\t* toplev.c (compile_file, toplev_main): Update.\n\t* toplev.h: Update comments.\n\t* objc/objc-act.c (lang_hooks): Update to new paradigm.\n\nFrom-SVN: r46396", "tree": {"sha": "077954c4a4f3e25d4a7bfbc4efdc3428750adc5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/077954c4a4f3e25d4a7bfbc4efdc3428750adc5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77b1a9217b8359f417c7e090e857c464d2e8778a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b1a9217b8359f417c7e090e857c464d2e8778a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77b1a9217b8359f417c7e090e857c464d2e8778a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b1a9217b8359f417c7e090e857c464d2e8778a/comments", "author": null, "committer": null, "parents": [{"sha": "5297e08564adcb6d396d0870df9c1df1d2c6aab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5297e08564adcb6d396d0870df9c1df1d2c6aab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5297e08564adcb6d396d0870df9c1df1d2c6aab9"}], "stats": {"total": 114, "additions": 60, "deletions": 54}, "files": [{"sha": "009967f384224868dcc7cc89388fe85341450269", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77b1a9217b8359f417c7e090e857c464d2e8778a", "patch": "@@ -1,3 +1,12 @@\n+2001-10-21  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* langhooks.c (lang_hook_default_do_nothing,\n+\tlang_hook_default_decode_option): New defaults.\n+\t* langhooks.h: Make hooks unconditional and non-NULL.\n+\t* toplev.c (compile_file, toplev_main): Update.\n+\t* toplev.h: Update comments.\n+\t* objc/objc-act.c (lang_hooks): Update to new paradigm.\n+\n 2001-10-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* arm.h (FUNCTION_ARG_REGNO_P): Use IN_RANGE."}, {"sha": "aa6422a325c3d09e766d41b10a9efcf1c6edb3af", "filename": "gcc/langhooks.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=77b1a9217b8359f417c7e090e857c464d2e8778a", "patch": "@@ -29,6 +29,20 @@ Boston, MA 02111-1307, USA.  */\n #include \"integrate.h\"\n #include \"langhooks.h\"\n \n+/* Do nothing; in many cases the default hook.  */\n+void\n+lang_hook_default_do_nothing ()\n+{\n+}\n+\n+/* Do nothing; the default hook to decode an option.  */\n+int\n+lang_hook_default_decode_option (argc, argv)\n+     int argc ATTRIBUTE_UNUSED;\n+     char **argv ATTRIBUTE_UNUSED;\n+{\n+  return 0;\n+}\n \n /* lang_hooks.tree_inlining.walk_subtrees is called by walk_tree()\n    after handling common cases, but before walking code-specific"}, {"sha": "0b4d72f6c46e239daff88b35cdc8fd9f5bb9ed62", "filename": "gcc/langhooks.h", "status": "modified", "additions": 20, "deletions": 37, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=77b1a9217b8359f417c7e090e857c464d2e8778a", "patch": "@@ -1,4 +1,4 @@\n-/* Macros to initialize the lang_hooks data structure.\n+/* Default macros to initialize the lang_hooks data structure.\n    Copyright 2001 Free Software Foundation, Inc.\n    Contributed by Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -22,26 +22,25 @@ Boston, MA 02111-1307, USA.  */\n #ifndef GCC_LANG_HOOKS_H\n #define GCC_LANG_HOOKS_H\n \n-/* Older hooks, that don't go in sub-structures for backward\n-   compatibility.  */\n-#ifndef LANG_HOOKS_INIT\n-#define LANG_HOOKS_INIT NULL\n-#endif\n-#ifndef LANG_HOOKS_FINISH\n-#define LANG_HOOKS_FINISH NULL\n-#endif\n-#ifndef LANG_HOOKS_INIT_OPTIONS\n-#define LANG_HOOKS_INIT_OPTIONS NULL\n-#endif\n-#ifndef LANG_HOOKS_DECODE_OPTION\n-#define LANG_HOOKS_DECODE_OPTION NULL\n-#endif\n-#ifndef LANG_HOOKS_POST_OPTIONS\n-#define LANG_HOOKS_POST_OPTIONS NULL\n-#endif\n-#ifndef LANG_HOOKS_HONOR_READONLY\n-#define LANG_HOOKS_HONOR_READONLY 0\n-#endif\n+/* Note to creators of new hooks:\n+\n+   The macros in this file should NOT be surrounded by a\n+   #ifdef...#endif pair, since this file declares the defaults.  Each\n+   front end overrides any hooks it wishes to, in the file containing\n+   its struct lang_hooks, AFTER including this file.  */\n+\n+/* See toplev.h for the definition and documentation of each hook.  */\n+\n+extern void lang_hook_default_do_nothing PARAMS ((void));\n+extern int lang_hook_default_decode_option PARAMS ((int, char **));\n+\n+#define LANG_HOOKS_INIT\t\t\tlang_hook_default_do_nothing\n+#define LANG_HOOKS_FINISH\t\tlang_hook_default_do_nothing\n+#define LANG_HOOKS_INIT_OPTIONS\t\tlang_hook_default_do_nothing\n+#define LANG_HOOKS_DECODE_OPTION\tlang_hook_default_decode_option\n+#define LANG_HOOKS_POST_OPTIONS\t\tlang_hook_default_do_nothing\n+\n+#define LANG_HOOKS_HONOR_READONLY\tfalse\n \n /* Declarations of default tree inlining hooks.  */\n tree tree_inlining_default_hook_walk_subtrees PARAMS ((tree*, int *,\n@@ -60,38 +59,22 @@ tree tree_inlining_default_hook_copy_res_decl_for_inlining PARAMS ((tree, tree,\n int tree_inlining_default_hook_anon_aggr_type_p PARAMS ((tree));\n \n /* Tree inlining hooks.  */\n-#ifndef LANG_HOOKS_TREE_INLINING_WALK_SUBTREES\n #define LANG_HOOKS_TREE_INLINING_WALK_SUBTREES \\\n   tree_inlining_default_hook_walk_subtrees\n-#endif\n-#ifndef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n #define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\\n   tree_inlining_default_hook_cannot_inline_tree_fn\n-#endif\n-#ifndef LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS\n #define LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS \\\n   tree_inlining_default_hook_disregard_inline_limits\n-#endif\n-#ifndef LANG_HOOKS_TREE_INLINING_ADD_PENDING_FN_DECLS\n #define LANG_HOOKS_TREE_INLINING_ADD_PENDING_FN_DECLS \\\n   tree_inlining_default_hook_add_pending_fn_decls\n-#endif\n-#ifndef LANG_HOOKS_TREE_INLINING_TREE_CHAIN_MATTERS_P\n #define LANG_HOOKS_TREE_INLINING_TREE_CHAIN_MATTERS_P \\\n   tree_inlining_default_hook_tree_chain_matters_p\n-#endif\n-#ifndef LANG_HOOKS_TREE_INLINING_AUTO_VAR_IN_FN_P\n #define LANG_HOOKS_TREE_INLINING_AUTO_VAR_IN_FN_P \\\n   tree_inlining_default_hook_auto_var_in_fn_p\n-#endif\n-#ifndef LANG_HOOKS_TREE_INLINING_COPY_RES_DECL_FOR_INLINING\n #define LANG_HOOKS_TREE_INLINING_COPY_RES_DECL_FOR_INLINING \\\n   tree_inlining_default_hook_copy_res_decl_for_inlining\n-#endif\n-#ifndef LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P\n #define LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P \\\n   tree_inlining_default_hook_anon_aggr_type_p\n-#endif\n \n #define LANG_HOOKS_TREE_INLINING_INITIALIZER { \\\n   LANG_HOOKS_TREE_INLINING_WALK_SUBTREES, \\"}, {"sha": "8cf02865693309db1731a06e668715021bc4c2c7", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=77b1a9217b8359f417c7e090e857c464d2e8778a", "patch": "@@ -58,6 +58,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"cpplib.h\"\n #include \"debug.h\"\n #include \"target.h\"\n+#include \"langhooks.h\"\n \n /* This is the default way of generating a method name.  */\n /* I am not sure it is really correct.\n@@ -449,12 +450,17 @@ static int generating_instance_variables = 0;\n \n static int print_struct_values = 0;\n \n+#undef LANG_HOOKS_INIT\n+#define LANG_HOOKS_INIT objc_init\n+#undef LANG_HOOKS_INIT_OPTIONS\n+#define LANG_HOOKS_INIT_OPTIONS objc_init_options\n+#undef LANG_HOOKS_DECODE_OPTION\n+#define LANG_HOOKS_DECODE_OPTION objc_decode_option\n+#undef LANG_HOOKS_POST_OPTIONS\n+#define LANG_HOOKS_POST_OPTIONS objc_post_options\n+\n /* Each front end provides its own.  */\n-struct lang_hooks lang_hooks = {objc_init,\n-\t\t\t\tNULL, /* objc_finish */\n-\t\t\t\tobjc_init_options,\n-\t\t\t\tobjc_decode_option,\n-\t\t\t\tobjc_post_options};\n+struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n /* Post-switch processing.  */\n static void"}, {"sha": "b702a8f7ecbd70257da8f3e4be44c492963e8537", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=77b1a9217b8359f417c7e090e857c464d2e8778a", "patch": "@@ -2227,8 +2227,7 @@ compile_file (name)\n \n   /* Perform language-specific initialization.\n      This may set main_input_filename.  */\n-  if (lang_hooks.init)\n-    (*lang_hooks.init) ();\n+  (*lang_hooks.init) ();\n \n   /* If the input doesn't start with a #line, use the input name\n      as the official input file name.  */\n@@ -2428,8 +2427,7 @@ compile_file (name)\n \n   /* Language-specific end of compilation actions.  */\n  finish_syntax:\n-  if (lang_hooks.finish)\n-    (*lang_hooks.finish) ();\n+  (*lang_hooks.finish) ();\n \n   /* Close the dump files.  */\n \n@@ -4671,8 +4669,7 @@ toplev_main (argc, argv)\n   add_params (lang_independent_params, LAST_PARAM);\n \n   /* Perform language-specific options intialization.  */\n-  if (lang_hooks.init_options)\n-    (*lang_hooks.init_options) ();\n+  (*lang_hooks.init_options) ();\n \n   /* Scan to see what optimization level has been specified.  That will\n      determine the default value of many flags.  */\n@@ -4847,8 +4844,7 @@ toplev_main (argc, argv)\n     }\n \n   /* All command line options have been processed.  */\n-  if (lang_hooks.post_options)\n-    (*lang_hooks.post_options) ();\n+  (*lang_hooks.post_options) ();\n \n   if (exit_after_options)\n     exit (0);"}, {"sha": "4203207f09657bb4ee15bd9c7f8ac0db8fb7bde1", "filename": "gcc/toplev.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b1a9217b8359f417c7e090e857c464d2e8778a/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=77b1a9217b8359f417c7e090e857c464d2e8778a", "patch": "@@ -138,7 +138,7 @@ struct lang_hooks_for_tree_inlining\n   int (*anon_aggr_type_p) PARAMS ((union tree_node *));\n };\n \n-/* Language-specific hooks.  Can be NULL unless otherwise specified.  */\n+/* Language-specific hooks.  See langhooks.h for defaults.  */\n \n struct lang_hooks\n {\n@@ -158,9 +158,7 @@ struct lang_hooks\n      option.  If this function returns a negative number, then its\n      absolute value is the number of command-line arguments used, but,\n      in addition, no language-independent option processing should be\n-     done for this option.\n-\n-     This hook cannot be NULL.  */\n+     done for this option.  */\n   int (*decode_option) PARAMS ((int, char **));\n \n   /* Called when all command line options have been processed.  */"}]}