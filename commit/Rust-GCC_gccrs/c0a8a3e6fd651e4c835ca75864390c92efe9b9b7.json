{"sha": "c0a8a3e6fd651e4c835ca75864390c92efe9b9b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBhOGEzZTZmZDY1MWU0YzgzNWNhNzU4NjQzOTBjOTJlZmU5YjliNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-02-03T11:13:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-02-03T11:13:51Z"}, "message": "expmed.c (extract_bit_field_1): Pass the full width of the structure to get_best_reg_extraction_insn.\n\ngcc/\n\t* expmed.c (extract_bit_field_1): Pass the full width of the\n\tstructure to get_best_reg_extraction_insn.\n\nFrom-SVN: r195692", "tree": {"sha": "efbb771b3a388d61f8226c7ed36bf91657873d70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efbb771b3a388d61f8226c7ed36bf91657873d70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0a8a3e6fd651e4c835ca75864390c92efe9b9b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0a8a3e6fd651e4c835ca75864390c92efe9b9b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0a8a3e6fd651e4c835ca75864390c92efe9b9b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0a8a3e6fd651e4c835ca75864390c92efe9b9b7/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5031121c4390a074d77907f702f29d070a317302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5031121c4390a074d77907f702f29d070a317302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5031121c4390a074d77907f702f29d070a317302"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "b12b46590c6ce0a87134cc4e6d4fea5b84116814", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0a8a3e6fd651e4c835ca75864390c92efe9b9b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0a8a3e6fd651e4c835ca75864390c92efe9b9b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0a8a3e6fd651e4c835ca75864390c92efe9b9b7", "patch": "@@ -1,3 +1,8 @@\n+2013-02-03  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* expmed.c (extract_bit_field_1): Pass the full width of the\n+\tstructure to get_best_reg_extraction_insn.\n+\n 2013-02-01  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR target/54601"}, {"sha": "4a6ddb06b1105f68ffaac17d1c15dd555c957d8c", "filename": "gcc/expmed.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0a8a3e6fd651e4c835ca75864390c92efe9b9b7/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0a8a3e6fd651e4c835ca75864390c92efe9b9b7/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=c0a8a3e6fd651e4c835ca75864390c92efe9b9b7", "patch": "@@ -1569,7 +1569,11 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n   enum extraction_pattern pattern = unsignedp ? EP_extzv : EP_extv;\n   extraction_insn extv;\n   if (!MEM_P (op0)\n-      && get_best_reg_extraction_insn (&extv, pattern, bitnum + bitsize,\n+      /* ??? We could limit the structure size to the part of OP0 that\n+\t contains the field, with appropriate checks for endianness\n+\t and TRULY_NOOP_TRUNCATION.  */\n+      && get_best_reg_extraction_insn (&extv, pattern,\n+\t\t\t\t       GET_MODE_BITSIZE (GET_MODE (op0)),\n \t\t\t\t       tmode))\n     {\n       rtx result = extract_bit_field_using_extv (&extv, op0, bitsize, bitnum,"}]}