{"sha": "45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVhY2EyMWY0MGVhMWFhZDdjZjk0ODU3ZTA2NGZhMGNkOWVhMWE5Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-04-22T17:32:25Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-22T17:32:25Z"}, "message": "std_streambuf.h (_S_pback_size, [...]): Move to basic_filebuf.\n\n2003-04-22  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/std/std_streambuf.h (_S_pback_size, _M_pback,\n\t_M_pback_cur_save, _M_pback_end_save, _M_pback_init,\n\t_M_pback_create(), _M_pback_destroy()): Move to basic_filebuf.\n\t(basic_streambuf::basic_streambuf()): Adjust.\n\t* include/std/std_fstream.h (_S_pback_size, _M_pback,\n\t_M_pback_cur_save, _M_pback_end_save, _M_pback_init,\n\t_M_pback_create(), _M_pback_destroy()): Moved here\n\tfrom basic_streambuf.\n\t* include/bits/fstream.tcc (basic_filebuf::basic_filebuf()):\n\tAdjust.\n\t(basic_filebuf::_S_pback_size): Add declaration.\n\t* include/bits/streambuf.tcc (basic_streambuf::_S_pback_size):\n\tRemove declaration.\n\nFrom-SVN: r65950", "tree": {"sha": "069830803bb424afab4785ed59e67503edfcb81b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/069830803bb424afab4785ed59e67503edfcb81b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/comments", "author": null, "committer": null, "parents": [{"sha": "77c915d8799fae4eaef052af7e99d98d9637ab5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c915d8799fae4eaef052af7e99d98d9637ab5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77c915d8799fae4eaef052af7e99d98d9637ab5d"}], "stats": {"total": 151, "additions": 82, "deletions": 69}, "files": [{"sha": "c5441ba491b4de483a4b93a3fc27f9f000d655ae", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "patch": "@@ -1,3 +1,19 @@\n+2003-04-22  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/std/std_streambuf.h (_S_pback_size, _M_pback,\n+\t_M_pback_cur_save, _M_pback_end_save, _M_pback_init,\n+\t_M_pback_create(), _M_pback_destroy()): Move to basic_filebuf.\n+\t(basic_streambuf::basic_streambuf()): Adjust.\n+\t* include/std/std_fstream.h (_S_pback_size, _M_pback,\n+\t_M_pback_cur_save, _M_pback_end_save, _M_pback_init,\n+\t_M_pback_create(), _M_pback_destroy()): Moved here\n+\tfrom basic_streambuf.\n+\t* include/bits/fstream.tcc (basic_filebuf::basic_filebuf()):\n+\tAdjust.\n+\t(basic_filebuf::_S_pback_size): Add declaration.\n+\t* include/bits/streambuf.tcc (basic_streambuf::_S_pback_size):\n+\tRemove declaration.\n+\n 2003-04-21  Paolo Carlini  <pcarlini@unitus.it>\n \n \tConsistently use _M_in_beg instead of eback(), _M_in_cur"}, {"sha": "b68e5a6710a1ffebe514002c9d28508887d5f30a", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "patch": "@@ -39,6 +39,10 @@\n \n namespace std\n {\n+  template<typename _CharT, typename _Traits>\n+    const size_t\n+    basic_filebuf<_CharT, _Traits>::_S_pback_size;\n+\n   template<typename _CharT, typename _Traits>\n     void\n     basic_filebuf<_CharT, _Traits>::\n@@ -72,7 +76,8 @@ namespace std\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf() : __streambuf_type(), _M_file(&_M_lock), \n     _M_state_cur(__state_type()), _M_state_beg(__state_type()), \n-    _M_buf_allocated(false), _M_last_overflowed(false)\n+    _M_buf_allocated(false), _M_last_overflowed(false),\n+    _M_pback_cur_save(0), _M_pback_end_save(0), _M_pback_init(false)\n     { this->_M_buf_unified = true; }\n \n   template<typename _CharT, typename _Traits>"}, {"sha": "dff48d25dfc79121329666784933a00ab9d996aa", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "patch": "@@ -39,10 +39,6 @@\n \n namespace std \n {\n-  template<typename _CharT, typename _Traits>\n-    const size_t\n-    basic_streambuf<_CharT, _Traits>::_S_pback_size;\n-\n   template<typename _CharT, typename _Traits>\n     typename basic_streambuf<_CharT, _Traits>::int_type\n     basic_streambuf<_CharT, _Traits>::"}, {"sha": "6be39c69395865d14d9136094d1ef1ed345fc0af", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "patch": "@@ -134,6 +134,65 @@ namespace std\n       */\n       char_type*\t\t_M_filepos;\n \n+      //@{\n+      /**\n+       *  @if maint\n+       *  Necessary bits for putback buffer management.\n+       *\n+       *  @note pbacks of over one character are not currently supported.\n+       *  @endif\n+      */\n+      static const size_t   \t_S_pback_size = 1; \n+      char_type\t\t\t_M_pback[_S_pback_size]; \n+      char_type*\t\t_M_pback_cur_save;\n+      char_type*\t\t_M_pback_end_save;\n+      bool\t\t\t_M_pback_init; \n+      //@}\n+\n+      // Initializes pback buffers, and moves normal buffers to safety.\n+      // Assumptions:\n+      // _M_in_cur has already been moved back\n+      void\n+      _M_pback_create()\n+      {\n+\tif (!_M_pback_init)\n+\t  {\n+\t    size_t __dist = this->_M_in_end - this->_M_in_cur;\n+\t    size_t __len = std::min(_S_pback_size, __dist);\n+\t    traits_type::copy(_M_pback, this->_M_in_cur, __len);\n+\t    _M_pback_cur_save = this->_M_in_cur;\n+\t    _M_pback_end_save = this->_M_in_end;\n+\t    this->setg(_M_pback, _M_pback, _M_pback + __len);\n+\t    _M_pback_init = true;\n+\t  }\n+      }\n+\n+      // Deactivates pback buffer contents, and restores normal buffer.\n+      // Assumptions:\n+      // The pback buffer has only moved forward.\n+      void\n+      _M_pback_destroy()\n+      {\n+\tif (_M_pback_init)\n+\t  {\n+\t    // Length _M_in_cur moved in the pback buffer.\n+\t    size_t __off_cur = this->_M_in_cur - _M_pback;\n+\t    \n+\t    // For in | out buffers, the end can be pushed back...\n+\t    size_t __off_end = 0;\n+\t    size_t __pback_len = this->_M_in_end - _M_pback;\n+\t    size_t __save_len = _M_pback_end_save - this->_M_buf;\n+\t    if (__pback_len > __save_len)\n+\t      __off_end = __pback_len - __save_len;\n+\n+\t    this->setg(this->_M_buf, _M_pback_cur_save + __off_cur, \n+\t\t       _M_pback_end_save + __off_end);\n+\t    _M_pback_cur_save = NULL;\n+\t    _M_pback_end_save = NULL;\n+\t    _M_pback_init = false;\n+\t  }\n+      }\n+\n     public:\n       // Constructors/destructor:\n       /**"}, {"sha": "9065fd17cbaf9d5f80bc3e0dc750d14105a17603", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 1, "deletions": 64, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45aca21f40ea1aad7cf94857e064fa0cd9ea1a93/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=45aca21f40ea1aad7cf94857e064fa0cd9ea1a93", "patch": "@@ -229,74 +229,13 @@ namespace std\n       */\n       locale \t\t\t_M_buf_locale;\t\n \n-      //@{\n-      /**\n-       *  @if maint\n-       *  Necessary bits for putback buffer management. Only used in\n-       *  the basic_filebuf class, as necessary for the standard\n-       *  requirements.\n-       *  \n-       *  @note pbacks of over one character are not currently supported.\n-       *  @endif\n-      */\n-      static const size_t   \t_S_pback_size = 1; \n-      char_type\t\t\t_M_pback[_S_pback_size]; \n-      char_type*\t\t_M_pback_cur_save;\n-      char_type*\t\t_M_pback_end_save;\n-      bool\t\t\t_M_pback_init; \n-      //@}\n-\n       /**\n        *  @if maint\n        *  Yet unused.\n        *  @endif\n       */\n       fpos<__state_type>\t_M_pos;\n \n-      // Initializes pback buffers, and moves normal buffers to safety.\n-      // Assumptions:\n-      // _M_in_cur has already been moved back\n-      void\n-      _M_pback_create()\n-      {\n-\tif (!_M_pback_init)\n-\t  {\n-\t    size_t __dist = _M_in_end - _M_in_cur;\n-\t    size_t __len = std::min(_S_pback_size, __dist);\n-\t    traits_type::copy(_M_pback, _M_in_cur, __len);\n-\t    _M_pback_cur_save = _M_in_cur;\n-\t    _M_pback_end_save = _M_in_end;\n-\t    this->setg(_M_pback, _M_pback, _M_pback + __len);\n-\t    _M_pback_init = true;\n-\t  }\n-      }\n-\n-      // Deactivates pback buffer contents, and restores normal buffer.\n-      // Assumptions:\n-      // The pback buffer has only moved forward.\n-      void\n-      _M_pback_destroy()\n-      {\n-\tif (_M_pback_init)\n-\t  {\n-\t    // Length _M_in_cur moved in the pback buffer.\n-\t    size_t __off_cur = _M_in_cur - _M_pback;\n-\t    \n-\t    // For in | out buffers, the end can be pushed back...\n-\t    size_t __off_end = 0;\n-\t    size_t __pback_len = _M_in_end - _M_pback;\n-\t    size_t __save_len = _M_pback_end_save - _M_buf;\n-\t    if (__pback_len > __save_len)\n-\t      __off_end = __pback_len - __save_len;\n-\n-\t    this->setg(_M_buf, _M_pback_cur_save + __off_cur, \n-\t\t       _M_pback_end_save + __off_end);\n-\t    _M_pback_cur_save = NULL;\n-\t    _M_pback_end_save = NULL;\n-\t    _M_pback_init = false;\n-\t  }\n-      }\n-\n       // Correctly sets the _M_in_cur pointer, and bumps the\n       // _M_out_cur pointer as well if necessary.\n       void \n@@ -541,9 +480,7 @@ namespace std\n       : _M_buf(NULL), _M_buf_size(BUFSIZ), _M_buf_unified(false),\n       _M_in_beg(0), _M_in_cur(0), _M_in_end(0), _M_out_beg(0),\n       _M_out_cur(0), _M_out_end(0), _M_out_lim(0),\n-      _M_mode(ios_base::openmode(0)), _M_buf_locale(locale()), \n-      _M_pback_cur_save(0), _M_pback_end_save(0), \n-      _M_pback_init(false)\n+      _M_mode(ios_base::openmode(0)), _M_buf_locale(locale()) \n       { }\n \n       // [27.5.2.3.1] get area access"}]}