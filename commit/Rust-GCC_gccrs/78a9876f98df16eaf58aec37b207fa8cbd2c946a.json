{"sha": "78a9876f98df16eaf58aec37b207fa8cbd2c946a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhOTg3NmY5OGRmMTZlYWY1OGFlYzM3YjIwN2ZhOGNiZDJjOTQ2YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-04-10T15:34:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-04-10T15:34:19Z"}, "message": "tree-ssa-structalias.c (find_func_aliases): Properly handle asm inputs.\n\n2017-04-10  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (find_func_aliases): Properly handle\n\tasm inputs.\n\nFrom-SVN: r246809", "tree": {"sha": "de7e9bc1b9ca097b5f65d733c4a876d244d13705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de7e9bc1b9ca097b5f65d733c4a876d244d13705"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78a9876f98df16eaf58aec37b207fa8cbd2c946a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a9876f98df16eaf58aec37b207fa8cbd2c946a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a9876f98df16eaf58aec37b207fa8cbd2c946a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a9876f98df16eaf58aec37b207fa8cbd2c946a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b195552ab86ef09b69ddcd3c2243c166c4a8558", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b195552ab86ef09b69ddcd3c2243c166c4a8558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b195552ab86ef09b69ddcd3c2243c166c4a8558"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "b6d385b357979b24bd6f341c4765361e5b9b2574", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a9876f98df16eaf58aec37b207fa8cbd2c946a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a9876f98df16eaf58aec37b207fa8cbd2c946a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78a9876f98df16eaf58aec37b207fa8cbd2c946a", "patch": "@@ -1,3 +1,8 @@\n+2017-04-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (find_func_aliases): Properly handle\n+\tasm inputs.\n+\n 2017-04-10  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/70478"}, {"sha": "77736f51153320f7dccc7a65097bd26918cd8317", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a9876f98df16eaf58aec37b207fa8cbd2c946a/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a9876f98df16eaf58aec37b207fa8cbd2c946a/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=78a9876f98df16eaf58aec37b207fa8cbd2c946a", "patch": "@@ -4944,14 +4944,14 @@ find_func_aliases (struct function *fn, gimple *origt)\n \t    make_escape_constraint (build_fold_addr_expr (op));\n \n \t  /* The asm may read global memory, so outputs may point to\n-\t     any global memory.  */\n+\t     any global or escaped memory.  */\n \t  if (op)\n \t    {\n \t      auto_vec<ce_s, 2> lhsc;\n \t      struct constraint_expr rhsc, *lhsp;\n \t      unsigned j;\n \t      get_constraint_for (op, &lhsc);\n-\t      rhsc.var = nonlocal_id;\n+\t      rhsc.var = escaped_id;\n \t      rhsc.offset = 0;\n \t      rhsc.type = SCALAR;\n \t      FOR_EACH_VEC_ELT (lhsc, j, lhsp)"}]}