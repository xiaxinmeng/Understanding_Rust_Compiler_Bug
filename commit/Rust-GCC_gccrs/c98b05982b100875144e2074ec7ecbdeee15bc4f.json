{"sha": "c98b05982b100875144e2074ec7ecbdeee15bc4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4YjA1OTgyYjEwMDg3NTE0NGUyMDc0ZWM3ZWNiZGVlZTE1YmM0Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-05-18T16:18:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-05-18T16:18:35Z"}, "message": "utility (exchange): Define.\n\n\t* include/std/utility (exchange): Define.\n\t* testsuite/20_util/exchange/1.cc: New.\n\nFrom-SVN: r199061", "tree": {"sha": "f2b2b59742efeb4164b966ee4103f5f852051c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2b2b59742efeb4164b966ee4103f5f852051c65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c98b05982b100875144e2074ec7ecbdeee15bc4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98b05982b100875144e2074ec7ecbdeee15bc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98b05982b100875144e2074ec7ecbdeee15bc4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98b05982b100875144e2074ec7ecbdeee15bc4f/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9769eb0d92ea9ffa19fac1f7a30c1b31caae4be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9769eb0d92ea9ffa19fac1f7a30c1b31caae4be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9769eb0d92ea9ffa19fac1f7a30c1b31caae4be"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "0f9cee846282c86359b4705c9414c9ffddc76ccd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98b05982b100875144e2074ec7ecbdeee15bc4f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98b05982b100875144e2074ec7ecbdeee15bc4f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c98b05982b100875144e2074ec7ecbdeee15bc4f", "patch": "@@ -1,3 +1,8 @@\n+2013-05-18  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/std/utility (exchange): Define.\n+\t* testsuite/20_util/exchange/1.cc: New.\n+\n 2013-05-18  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/bits/unique_ptr.h (make_unique): Define."}, {"sha": "ee8c6b19609e62be1abe5c4709db0b66e260fec8", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98b05982b100875144e2074ec7ecbdeee15bc4f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98b05982b100875144e2074ec7ecbdeee15bc4f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=c98b05982b100875144e2074ec7ecbdeee15bc4f", "patch": "@@ -152,6 +152,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     get(const std::pair<_Tp1, _Tp2>& __in) noexcept\n     { return __pair_get<_Int>::__const_get(__in); }\n \n+#if __cplusplus > 201103L\n+  /// Assign @p __new_val to @p __obj and return its previous value.\n+  template <class _Tp, class _Up = _Tp>\n+    inline _Tp\n+    exchange(_Tp& __obj, _Up&& __new_val)\n+    {\n+      _Tp __old_val = std::move(__obj);\n+      __obj = std::forward<_Up>(__new_val);\n+      return __old_val;\n+    }\n+#endif\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n "}, {"sha": "d16d9e9642e97d03b67b513c498ec106cc540d7a", "filename": "libstdc++-v3/testsuite/20_util/exchange/1.cc", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98b05982b100875144e2074ec7ecbdeee15bc4f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98b05982b100875144e2074ec7ecbdeee15bc4f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fexchange%2F1.cc?ref=c98b05982b100875144e2074ec7ecbdeee15bc4f", "patch": "@@ -0,0 +1,103 @@\n+// { dg-options \"-std=gnu++1y\" }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.2.3 exchange [utility.exchange]\n+\n+#include <utility>\n+#include <type_traits>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  const unsigned val = 4;\n+  int i = 1;\n+  auto prev = std::exchange(i, val);\n+  static_assert( std::is_same<decltype(prev), int>::value, \"return type\" );\n+  VERIFY( i == 4 );\n+  VERIFY( prev == 1 );\n+  prev = std::exchange(i, 3);\n+  VERIFY( i == 3 );\n+  VERIFY( prev == 4 );\n+}\n+\n+// Default construction from empty braces\n+void\n+test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  struct DefaultConstructible\n+  {\n+    DefaultConstructible(int i = 0) : value(i) { }\n+    int value;\n+  };\n+\n+  DefaultConstructible x = 1;\n+  auto old = std::exchange(x, {});\n+  VERIFY( x.value == 0 );\n+  VERIFY( old.value == 1 );\n+}\n+\n+// Deduce type of overloaded function\n+void\n+test03()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  int (*fp)(int);\n+  int f(int);\n+  double f(double);\n+  std::exchange(fp, &f);\n+  VERIFY( fp != nullptr );\n+}\n+\n+void test04()\n+{\n+  struct From { };\n+  struct To {\n+    int value = 0;\n+    To() = default;\n+    To(const To&) = default;\n+    To(const From&) = delete;\n+    To& operator=(const From&) { value = 1; }\n+    To& operator=(From&&) { value = 2; }\n+  };\n+\n+  To t;\n+  From f;\n+\n+  auto prev = std::exchange(t, f);\n+  VERIFY( t.value == 1 );\n+  VERIFY( prev.value == 0 );\n+\n+  prev = std::exchange(t, From{});\n+  VERIFY( t.value == 2 );\n+  VERIFY( prev.value == 1 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+  test04();\n+  return 0;\n+}"}]}