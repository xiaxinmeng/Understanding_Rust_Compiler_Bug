{"sha": "1b829d45a824ffabbc1e0cd6b3999d64bd783a17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI4MjlkNDVhODI0ZmZhYmJjMWUwY2Q2YjM5OTlkNjRiZDc4M2ExNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-09-17T16:05:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-17T16:05:11Z"}, "message": "re PR preprocessor/37324 (FAIL: gcc.dg/utf-array.c  (test for errors))\n\n\tPR preprocessor/37324\n\t* lib/target-supports.exp\n\t(check_effective_target_wchar_t_char16_t_compatible,\n\tcheck_effective_target_wchar_t_char32_t_compatible): New.\n\t* gcc.dg/utf-array.c: Use __CHAR{16,32}_TYPE__ macros in typedefs.\n\tOnly require from incompatible errors for char{16,32}_t vs. wchar_t\n\tinitializations if those types are indeed incompatible.\n\nFrom-SVN: r140421", "tree": {"sha": "29f85dfecd5ae18c466e99d1adceadb929068aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29f85dfecd5ae18c466e99d1adceadb929068aa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b829d45a824ffabbc1e0cd6b3999d64bd783a17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b829d45a824ffabbc1e0cd6b3999d64bd783a17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b829d45a824ffabbc1e0cd6b3999d64bd783a17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b829d45a824ffabbc1e0cd6b3999d64bd783a17/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71b10713042adcba36768039d3f0d5231b34f90a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71b10713042adcba36768039d3f0d5231b34f90a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71b10713042adcba36768039d3f0d5231b34f90a"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "f62304edc6dfe7852bf645dc9aed40e2bcce647a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b829d45a824ffabbc1e0cd6b3999d64bd783a17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b829d45a824ffabbc1e0cd6b3999d64bd783a17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b829d45a824ffabbc1e0cd6b3999d64bd783a17", "patch": "@@ -1,3 +1,13 @@\n+2008-09-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/37324\n+\t* lib/target-supports.exp\n+\t(check_effective_target_wchar_t_char16_t_compatible,\n+\tcheck_effective_target_wchar_t_char32_t_compatible): New.\n+\t* gcc.dg/utf-array.c: Use __CHAR{16,32}_TYPE__ macros in typedefs.\n+\tOnly require from incompatible errors for char{16,32}_t vs. wchar_t\n+\tinitializations if those types are indeed incompatible.\n+\n 2008-09-16  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR testsuite/25241"}, {"sha": "2db8e51012bff81504fa17cd065fbcb0b5877850", "filename": "gcc/testsuite/gcc.dg/utf-array.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b829d45a824ffabbc1e0cd6b3999d64bd783a17/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b829d45a824ffabbc1e0cd6b3999d64bd783a17/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-array.c?ref=1b829d45a824ffabbc1e0cd6b3999d64bd783a17", "patch": "@@ -5,8 +5,8 @@\n \n #include <wchar.h>\n \n-typedef short unsigned int\tchar16_t;\n-typedef unsigned int\t\tchar32_t;\n+typedef __CHAR16_TYPE__\tchar16_t;\n+typedef __CHAR32_TYPE__\tchar32_t;\n \n const char\ts_0[]\t= \"ab\";\n const char\ts_1[]\t= u\"ab\";\t/* { dg-error \"from wide string\" } */\n@@ -16,7 +16,7 @@ const char\ts_3[]\t= L\"ab\";\t/* { dg-error \"from wide string\" } */\n const char16_t\ts16_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n const char16_t\ts16_1[]\t= u\"ab\";\n const char16_t\ts16_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const char16_t\ts16_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n+const char16_t\ts16_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" { target !wchar_t_char16_t_compatible } } */\n \n const char16_t\ts16_4[0] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n const char16_t\ts16_5[1] = u\"ab\";\t/* { dg-warning \"chars is too long\" } */\n@@ -27,7 +27,7 @@ const char16_t\ts16_8[4] = u\"ab\";\n const char32_t\ts32_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n const char32_t\ts32_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n const char32_t\ts32_2[]\t= U\"ab\";\n-const char32_t\ts32_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" } */\n+const char32_t\ts32_3[]\t= L\"ab\";\t/* { dg-error \"from incompatible\" { target !wchar_t_char32_t_compatible } } */\n \n const char32_t\ts32_4[0] = U\"ab\";\t/* { dg-warning \"chars is too long\" } */\n const char32_t\ts32_5[1] = U\"ab\";\t/* { dg-warning \"chars is too long\" } */\n@@ -36,6 +36,6 @@ const char32_t\ts32_7[3] = U\"ab\";\n const char32_t\ts32_8[4] = U\"ab\";\n \n const wchar_t\tsw_0[]\t= \"ab\";\t\t/* { dg-error \"from non-wide\" } */\n-const wchar_t\tsw_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" } */\n-const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" } */\n+const wchar_t\tsw_1[]\t= u\"ab\";\t/* { dg-error \"from incompatible\" { target !wchar_t_char16_t_compatible } } */\n+const wchar_t\tsw_2[]\t= U\"ab\";\t/* { dg-error \"from incompatible\" { target !wchar_t_char32_t_compatible } } */\n const wchar_t\tsw_3[]\t= L\"ab\";"}, {"sha": "72117c64b914ed9f04211b307970635fc00ff234", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b829d45a824ffabbc1e0cd6b3999d64bd783a17/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b829d45a824ffabbc1e0cd6b3999d64bd783a17/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=1b829d45a824ffabbc1e0cd6b3999d64bd783a17", "patch": "@@ -2592,3 +2592,23 @@ proc check_effective_target_avx { } {\n \t}\n     } \"-O2 -mavx\" ]\n }\n+\n+# Return 1 if C wchar_t type is compatible with char16_t.\n+\n+proc check_effective_target_wchar_t_char16_t_compatible { } {\n+    return [check_no_compiler_messages wchar_t_char16_t object {\n+        __WCHAR_TYPE__ wc;\n+        __CHAR16_TYPE__ *p16 = &wc;\n+        char t[(((__CHAR16_TYPE__) -1) < 0 == ((__WCHAR_TYPE__) -1) < 0) ? 1 : -1];\n+    }]\n+}\n+\n+# Return 1 if C wchar_t type is compatible with char32_t.\n+\n+proc check_effective_target_wchar_t_char32_t_compatible { } {\n+    return [check_no_compiler_messages wchar_t_char32_t object {\n+        __WCHAR_TYPE__ wc;\n+        __CHAR32_TYPE__ *p32 = &wc;\n+        char t[(((__CHAR32_TYPE__) -1) < 0 == ((__WCHAR_TYPE__) -1) < 0) ? 1 : -1];\n+    }]\n+}"}]}