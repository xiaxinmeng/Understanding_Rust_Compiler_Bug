{"sha": "39123624ff2ab0c737d88382b350937a2ed9bc24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkxMjM2MjRmZjJhYjBjNzM3ZDg4MzgyYjM1MDkzN2EyZWQ5YmMyNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-11-24T16:10:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-11-24T16:10:06Z"}, "message": "tree-pretty-print.c (dump_generic_node, [...]): Handle TYPE_REF_CAN_ALIAS_ALL.\n\n\t* tree-pretty-print.c (dump_generic_node, case POINTER_TYPE):\n\tHandle TYPE_REF_CAN_ALIAS_ALL.\n\t(print_declaration): Print array dimensions like dump_generic_node.\n\nFrom-SVN: r91173", "tree": {"sha": "4a1bf870d79f91ae11522495f926a1436ad98ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a1bf870d79f91ae11522495f926a1436ad98ab7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39123624ff2ab0c737d88382b350937a2ed9bc24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39123624ff2ab0c737d88382b350937a2ed9bc24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39123624ff2ab0c737d88382b350937a2ed9bc24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39123624ff2ab0c737d88382b350937a2ed9bc24/comments", "author": null, "committer": null, "parents": [{"sha": "f2ede5d6213c42e75ce7dfeaa98950adfa6de73b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2ede5d6213c42e75ce7dfeaa98950adfa6de73b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2ede5d6213c42e75ce7dfeaa98950adfa6de73b"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "9d9423452f06b6c077cb55d306849d494b1717c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39123624ff2ab0c737d88382b350937a2ed9bc24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39123624ff2ab0c737d88382b350937a2ed9bc24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39123624ff2ab0c737d88382b350937a2ed9bc24", "patch": "@@ -1,5 +1,9 @@\n 2004-11-24  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* tree-pretty-print.c (dump_generic_node, case POINTER_TYPE):\n+\tHandle TYPE_REF_CAN_ALIAS_ALL.\n+\t(print_declaration): Print array dimensions like dump_generic_node.\n+\n \t* fold-const.c (operand_equal_p): Remove kludge allowing ARG0 and\n \tARG1 to be null; instead define OP_SAME and OP_SAME_NULL and use them.\n "}, {"sha": "e1e0c63db50f88ee222a3d8beef73d637e7d4ca7", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39123624ff2ab0c737d88382b350937a2ed9bc24/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39123624ff2ab0c737d88382b350937a2ed9bc24/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=39123624ff2ab0c737d88382b350937a2ed9bc24", "patch": "@@ -397,6 +397,9 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n \t    pp_string (buffer,  \"volatile\");\n \t  else if (quals & TYPE_QUAL_RESTRICT)\n \t    pp_string (buffer, \" restrict\");\n+\n+\t  if (TYPE_REF_CAN_ALIAS_ALL (node))\n+\t    pp_string (buffer, \" {ref-all}\");\n \t}\n       break;\n \n@@ -1515,13 +1518,18 @@ print_declaration (pretty_printer *buffer, tree t, int spc, int flags)\n \t  pp_character (buffer, '[');\n \t  if (TYPE_DOMAIN (tmp))\n \t    {\n-\t      if (TREE_CODE (TYPE_SIZE (tmp)) == INTEGER_CST)\n-\t\tpp_wide_integer (buffer,\n-\t\t\t\tTREE_INT_CST_LOW (TYPE_SIZE (tmp)) /\n-\t\t\t\tTREE_INT_CST_LOW (TYPE_SIZE (TREE_TYPE (tmp))));\n-\t      else\n-\t\tdump_generic_node (buffer, TYPE_SIZE_UNIT (tmp), spc, flags,\n-\t\t\t\t   false);\n+\t      if (TYPE_MIN_VALUE (TYPE_DOMAIN (tmp))\n+\t\t  && !integer_zerop (TYPE_MIN_VALUE (TYPE_DOMAIN (tmp))))\n+\t\t{\n+\t\t  dump_generic_node (buffer,\n+\t\t\t\t     TYPE_MIN_VALUE (TYPE_DOMAIN (tmp)),\n+\t\t\t\t     spc, flags, false);\n+\t\t  pp_string (buffer, \" .. \");\n+\t\t}\n+\n+\t      if (TYPE_MAX_VALUE (TYPE_DOMAIN (tmp)))\n+\t\tdump_generic_node (buffer, TYPE_MAX_VALUE (TYPE_DOMAIN (tmp)),\n+\t\t\t\t   spc, flags, false);\n \t    }\n \t  pp_character (buffer, ']');\n \t  tmp = TREE_TYPE (tmp);"}]}