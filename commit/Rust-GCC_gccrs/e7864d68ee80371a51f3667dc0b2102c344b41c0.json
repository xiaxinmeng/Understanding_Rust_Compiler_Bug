{"sha": "e7864d68ee80371a51f3667dc0b2102c344b41c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4NjRkNjhlZTgwMzcxYTUxZjM2NjdkYzBiMjEwMmMzNDRiNDFjMA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-08-06T18:06:30Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-08-06T18:06:30Z"}, "message": "Fix crash in selftest::test_lexer_string_locations_ucn4 (PR bootstrap/72823)\n\nlibcpp/ChangeLog:\n\tPR bootstrap/72823\n\t* charset.c (_cpp_valid_ucn): Replace overzealous assert with one\n\tthat allows for char_range to be non-NULL when loc_reader is NULL.\n\nFrom-SVN: r239211", "tree": {"sha": "c0caa06ec8575f87392744b9a05b0b8aed5dddfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0caa06ec8575f87392744b9a05b0b8aed5dddfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7864d68ee80371a51f3667dc0b2102c344b41c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7864d68ee80371a51f3667dc0b2102c344b41c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7864d68ee80371a51f3667dc0b2102c344b41c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7864d68ee80371a51f3667dc0b2102c344b41c0/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "851e6c6a8e43977768b9ca8db1bfd66bfda67f2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/851e6c6a8e43977768b9ca8db1bfd66bfda67f2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/851e6c6a8e43977768b9ca8db1bfd66bfda67f2f"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "f7cc1c410fa4736eea91c645712a2f10203ef8da", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7864d68ee80371a51f3667dc0b2102c344b41c0/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7864d68ee80371a51f3667dc0b2102c344b41c0/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=e7864d68ee80371a51f3667dc0b2102c344b41c0", "patch": "@@ -1,3 +1,9 @@\n+2016-08-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR bootstrap/72823\n+\t* charset.c (_cpp_valid_ucn): Replace overzealous assert with one\n+\tthat allows for char_range to be non-NULL when loc_reader is NULL.\n+\n 2016-08-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* charset.c (cpp_substring_ranges::cpp_substring_ranges): New"}, {"sha": "6a92ade272a101fc0d76cac2039bc9cecf3aebaf", "filename": "libcpp/charset.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7864d68ee80371a51f3667dc0b2102c344b41c0/libcpp%2Fcharset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7864d68ee80371a51f3667dc0b2102c344b41c0/libcpp%2Fcharset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fcharset.c?ref=e7864d68ee80371a51f3667dc0b2102c344b41c0", "patch": "@@ -1027,7 +1027,7 @@ ucn_valid_in_identifier (cpp_reader *pfile, cppchar_t c,\n    IDENTIFIER_POS is 0 when not in an identifier, 1 for the start of\n    an identifier, or 2 otherwise.\n \n-   If CHAR_RANGE and LOC_READER are non-NULL, then position information is\n+   If LOC_READER is non-NULL, then position information is\n    read from *LOC_READER and CHAR_RANGE->m_finish is updated accordingly.  */\n \n bool\n@@ -1042,10 +1042,6 @@ _cpp_valid_ucn (cpp_reader *pfile, const uchar **pstr,\n   const uchar *str = *pstr;\n   const uchar *base = str - 2;\n \n-  /* char_range and loc_reader must either be both NULL, or both be\n-     non-NULL.  */\n-  gcc_assert ((char_range != NULL) == (loc_reader != NULL));\n-\n   if (!CPP_OPTION (pfile, cplusplus) && !CPP_OPTION (pfile, c99))\n     cpp_error (pfile, CPP_DL_WARNING,\n \t       \"universal character names are only valid in C++ and C99\");\n@@ -1076,7 +1072,10 @@ _cpp_valid_ucn (cpp_reader *pfile, const uchar **pstr,\n \tbreak;\n       str++;\n       if (loc_reader)\n-\tchar_range->m_finish = loc_reader->get_next ().m_finish;\n+\t{\n+\t  gcc_assert (char_range);\n+\t  char_range->m_finish = loc_reader->get_next ().m_finish;\n+\t}\n       result = (result << 4) + hex_value (c);\n     }\n   while (--length && str < limit);"}]}