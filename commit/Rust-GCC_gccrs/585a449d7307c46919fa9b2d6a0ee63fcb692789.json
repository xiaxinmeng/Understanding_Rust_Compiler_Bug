{"sha": "585a449d7307c46919fa9b2d6a0ee63fcb692789", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg1YTQ0OWQ3MzA3YzQ2OTE5ZmE5YjJkNmEwZWU2M2ZjYjY5Mjc4OQ==", "commit": {"author": {"name": "Sergey Shalnov", "email": "Sergey.Shalnov@intel.com", "date": "2017-10-24T10:34:55Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2017-10-24T10:34:55Z"}, "message": "Avoid 512-bit mode MOV for prefer-avx256 option in Intel AVX512 configuration\n\ngcc/\n\t* config/i386/i386.md(*movsf_internal, *movdf_internal):\n\tAvoid 512-bit AVX modes for TARGET_PREFER_AVX256.\n\nFrom-SVN: r254038", "tree": {"sha": "eece9293b9dd8e2ab723d02a536fef36aef24f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eece9293b9dd8e2ab723d02a536fef36aef24f27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/585a449d7307c46919fa9b2d6a0ee63fcb692789", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585a449d7307c46919fa9b2d6a0ee63fcb692789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/585a449d7307c46919fa9b2d6a0ee63fcb692789", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585a449d7307c46919fa9b2d6a0ee63fcb692789/comments", "author": {"login": "shssf", "id": 19515906, "node_id": "MDQ6VXNlcjE5NTE1OTA2", "avatar_url": "https://avatars.githubusercontent.com/u/19515906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shssf", "html_url": "https://github.com/shssf", "followers_url": "https://api.github.com/users/shssf/followers", "following_url": "https://api.github.com/users/shssf/following{/other_user}", "gists_url": "https://api.github.com/users/shssf/gists{/gist_id}", "starred_url": "https://api.github.com/users/shssf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shssf/subscriptions", "organizations_url": "https://api.github.com/users/shssf/orgs", "repos_url": "https://api.github.com/users/shssf/repos", "events_url": "https://api.github.com/users/shssf/events{/privacy}", "received_events_url": "https://api.github.com/users/shssf/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc2a7cebfda15f53bc8fa4b596e96a87b53193fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc2a7cebfda15f53bc8fa4b596e96a87b53193fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc2a7cebfda15f53bc8fa4b596e96a87b53193fe"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "82d69edfb0b8ec63a81d960d3d664772ce86e05a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585a449d7307c46919fa9b2d6a0ee63fcb692789/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585a449d7307c46919fa9b2d6a0ee63fcb692789/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=585a449d7307c46919fa9b2d6a0ee63fcb692789", "patch": "@@ -1,3 +1,8 @@\n+2017-10-06  Sergey Shalnov  <Sergey.Shalnov@intel.com>\n+\n+\t* config/i386/i386.md(*movsf_internal, *movdf_internal):\n+\tAvoid 512-bit AVX modes for TARGET_PREFER_AVX256.\n+\n 2017-10-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR middle-end/82569"}, {"sha": "d5792eb22a4161380fb8f5f526968fafcbd6d073", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585a449d7307c46919fa9b2d6a0ee63fcb692789/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585a449d7307c46919fa9b2d6a0ee63fcb692789/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=585a449d7307c46919fa9b2d6a0ee63fcb692789", "patch": "@@ -3575,8 +3575,10 @@\n \n \t       /* movaps is one byte shorter for non-AVX targets.  */\n \t       (eq_attr \"alternative\" \"13,17\")\n-\t\t (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n-\t\t\t     (match_operand 1 \"ext_sse_reg_operand\"))\n+\t\t (cond [(and (ior (not (match_test \"TARGET_PREFER_AVX256\"))\n+\t\t\t\t  (not (match_test \"TARGET_AVX512VL\")))\n+\t\t\t     (ior (match_operand 0 \"ext_sse_reg_operand\")\n+\t\t\t\t  (match_operand 1 \"ext_sse_reg_operand\")))\n \t\t\t  (const_string \"V8DF\")\n \t\t\t(ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t     (match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\"))\n@@ -3750,8 +3752,10 @@\n \t\t  better to maintain the whole registers in single format\n \t\t  to avoid problems on using packed logical operations.  */\n \t       (eq_attr \"alternative\" \"6\")\n-\t\t (cond [(ior  (match_operand 0 \"ext_sse_reg_operand\")\n-\t\t\t      (match_operand 1 \"ext_sse_reg_operand\"))\n+\t\t (cond [(and (ior (not (match_test \"TARGET_PREFER_AVX256\"))\n+\t\t\t\t  (not (match_test \"TARGET_AVX512VL\")))\n+\t\t\t     (ior (match_operand 0 \"ext_sse_reg_operand\")\n+\t\t\t\t  (match_operand 1 \"ext_sse_reg_operand\")))\n \t\t\t  (const_string \"V16SF\")\n \t\t\t(ior (match_test \"TARGET_SSE_PARTIAL_REG_DEPENDENCY\")\n \t\t\t     (match_test \"TARGET_SSE_SPLIT_REGS\"))"}]}