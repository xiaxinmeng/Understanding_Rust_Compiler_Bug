{"sha": "3984e89a1850369bff1cce7b0ce53ef658e84649", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk4NGU4OWExODUwMzY5YmZmMWNjZTdiMGNlNTNlZjY1OGU4NDY0OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-04-06T14:21:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-04-06T14:21:20Z"}, "message": "[multiple changes]\n\n2004-04-06  Pascal Obry  <obry@gnat.com>\n\n\t* adaint.c (DIR_SEPARATOR): Properly set DIR_SEPARATOR on Win32.\n\n\t* osint.adb (Program_Name): Do not look past a directory separator.\n\n2004-04-06  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* atree.adb: Update comment (Rewrite_Substitute_Node no longer exists).\n\n\t* exp_ch6.adb (Rewrite_Function_Call): Clarify documentation of\n\trequirement for preserving a copy of the original assignment node.\n\n\t* sinfo.ads: Update comment (Original_Tree -> Original_Node).\n\n2004-04-06  Olivier Hainque  <hainque@act-europe.fr>\n\n\t(__gnat_initialize [Vxworks]): Enable references to the crtstuff bits\n\twhen supported.\n\n2004-04-06  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_ch4.adb (Remove_Abstract_Operations): Extend previous changes to\n\toperator calls in functional notation, and apply\n\tUniversal_Interpretation to operands, not to their type.\n\n2004-04-06  Robert Dewar  <dewar@gnat.com>\n\n\t* 5wdirval.adb: Minor reformatting\n\n2004-04-06  Ed Falis  <falis@gnat.com>\n\n\t* gnat_rm.texi: Improve a reference to the GCC manual\n\nFrom-SVN: r80453", "tree": {"sha": "22743ad17c4fb05c9d0205bbb36a11d6338a0918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22743ad17c4fb05c9d0205bbb36a11d6338a0918"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3984e89a1850369bff1cce7b0ce53ef658e84649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3984e89a1850369bff1cce7b0ce53ef658e84649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3984e89a1850369bff1cce7b0ce53ef658e84649", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3984e89a1850369bff1cce7b0ce53ef658e84649/comments", "author": null, "committer": null, "parents": [{"sha": "13ecc9e00390125437b13b4f977f96a34d682b4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ecc9e00390125437b13b4f977f96a34d682b4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13ecc9e00390125437b13b4f977f96a34d682b4a"}], "stats": {"total": 150, "additions": 118, "deletions": 32}, "files": [{"sha": "a20ff1779737637a9f26e55d351386eaf1fbe81e", "filename": "gcc/ada/5wdirval.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2F5wdirval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2F5wdirval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wdirval.adb?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -52,6 +52,7 @@ package body Ada.Directories.Validity is\n    function Is_Valid_Path_Name (Name : String) return Boolean is\n       Start : Positive := Name'First;\n       Last  : Natural;\n+\n    begin\n       --  A path name cannot be empty, cannot contain more than 256 characters,\n       --  cannot contain invalid characters and each directory/file name need\n@@ -114,28 +115,31 @@ package body Ada.Directories.Validity is\n    --------------------------\n \n    function Is_Valid_Simple_Name (Name : String) return Boolean is\n-      Only_Spaces : Boolean := True;\n+      Only_Spaces : Boolean;\n+\n    begin\n       --  A file name cannot be empty, cannot contain more than 256 characters,\n       --  and cannot contain invalid characters, including '\\'\n \n       if Name'Length = 0 or else Name'Length > 256 then\n          return False;\n \n+      --  Name length is OK\n+\n       else\n+         Only_Spaces := True;\n          for J in Name'Range loop\n             if Invalid_Character (Name (J)) or else Name (J) = '\\' then\n                return False;\n-\n             elsif Name (J) /= ' ' then\n                Only_Spaces := False;\n             end if;\n          end loop;\n-      end if;\n \n-      --  If Name follows the rules, it is valid\n+         --  If no invalid chars, and not all spaces, file name is valid.\n \n-      return not Only_Spaces;\n+         return not Only_Spaces;\n+      end if;\n    end Is_Valid_Simple_Name;\n \n end Ada.Directories.Validity;"}, {"sha": "5ca1aeb4b0069e6f924b0504cbe26030bb4bdc7f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -1,3 +1,37 @@\n+2004-04-06  Pascal Obry  <obry@gnat.com>\n+\n+\t* adaint.c (DIR_SEPARATOR): Properly set DIR_SEPARATOR on Win32.\n+\n+\t* osint.adb (Program_Name): Do not look past a directory separator.\n+\n+2004-04-06  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* atree.adb: Update comment (Rewrite_Substitute_Node no longer exists).\n+\n+\t* exp_ch6.adb (Rewrite_Function_Call): Clarify documentation of\n+\trequirement for preserving a copy of the original assignment node.\n+\n+\t* sinfo.ads: Update comment (Original_Tree -> Original_Node).\n+\n+2004-04-06  Olivier Hainque  <hainque@act-europe.fr>\n+\n+\t(__gnat_initialize [Vxworks]): Enable references to the crtstuff bits\n+\twhen supported.\n+\n+2004-04-06  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch4.adb (Remove_Abstract_Operations): Extend previous changes to\n+\toperator calls in functional notation, and apply\n+\tUniversal_Interpretation to operands, not to their type.\n+\n+2004-04-06  Robert Dewar  <dewar@gnat.com>\n+\n+\t* 5wdirval.adb: Minor reformatting\n+\n+2004-04-06  Ed Falis  <falis@gnat.com>\n+\n+\t* gnat_rm.texi: Improve a reference to the GCC manual\n+\n 2004-04-05  Vincent Celier  <celier@gnat.com>\n \n \t* adaint.h, adaint.c: Add function __gnat_named_file_length"}, {"sha": "67a457c35d2cf96c0410b18c141532d8c524a079", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -147,6 +147,8 @@ struct vstring\n #if defined (_WIN32)\n #include <dir.h>\n #include <windows.h>\n+#undef DIR_SEPARATOR\n+#define DIR_SEPARATOR '\\\\'\n #endif\n \n #include \"adaint.h\"\n@@ -2525,4 +2527,3 @@ get_gcc_version (void)\n {\n   return 3;\n }\n-"}, {"sha": "49938b98ecea5387b0e0b5322e1619e66e4eb5e5", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -2114,8 +2114,7 @@ package body Atree is\n \n       --  Since we are doing a replace, we assume that the original node\n       --  is intended to become the new replaced node. The call would be\n-      --  to Rewrite_Substitute_Node if there were an intention to save\n-      --  the original node.\n+      --  to Rewrite if there were an intention to save the original node.\n \n       Orig_Nodes.Table (Old_Node) := Old_Node;\n "}, {"sha": "1bfb5c1c86d929c4fe9bec691b33356e4e228b50", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -2466,6 +2466,9 @@ package body Exp_Ch6 is\n                --  complete assignment subtree consistent enough for\n                --  Analyze_Assignment to proceed. We do not use the\n                --  saved value, the point was just to do the relocation.\n+               --  We cannot rely on Original_Node to go back from the\n+               --  block node to the assignment node, because the\n+               --  assignment might already be a rewrite substitution.\n \n             begin\n                Rewrite (Original_Assignment, Blk);"}, {"sha": "b3097a1b592ef8529f9e85b62f074f2e1e32558a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -62,7 +62,7 @@ GNAT Reference Manual\n \n @noindent\n GNAT, The GNU Ada 95 Compiler@*\n-Version for GCC @value{version-GCC}@*\n+GCC version @value{version-GCC}@*\n \n @noindent\n Ada Core Technologies, Inc.\n@@ -12688,15 +12688,17 @@ including machine instructions in a subprogram.\n @end itemize\n \n @noindent\n-The two features are similar, and both closely related to the mechanism\n+The two features are similar, and both are closely related to the mechanism\n provided by the asm instruction in the GNU C compiler.  Full understanding\n and use of the facilities in this package requires understanding the asm\n-instruction as described in\n-@cite{Using and Porting the GNU Compiler Collection (GCC)} by Richard\n-Stallman.  Calls to the function @code{Asm} and the procedure @code{Asm}\n-have identical semantic restrictions and effects as described below.\n-Both are provided so that the procedure call can be used as a statement,\n-and the function call can be used to form a code_statement.\n+instruction as described in @cite{Using the GNU Compiler Collection (GCC)} \n+by Richard Stallman. The relevant section is titled ``Extensions to the C\n+Language Family'' -> ``Assembler Instructions with C Expression Operands''.\n+\n+Calls to the function @code{Asm} and the procedure @code{Asm} have identical\n+semantic restrictions and effects as described below.  Both are provided so\n+that the procedure call can be used as a statement, and the function call\n+can be used to form a code_statement.\n \n The first example given in the GCC documentation is the C @code{asm}\n instruction:"}, {"sha": "e627a8bde2ebee2c759ad43985056a5940e91891", "filename": "gcc/ada/init.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -1797,13 +1797,16 @@ __gnat_initialize (void)\n      call the appropriate function here. We'll never unload that, so there is\n      no de-registration to worry about.\n \n-     We can differentiate between the two cases by looking at the\n-     __module_has_ctors value provided by each class of crt objects. As of\n-     today, selecting the crt set intended for applications to be statically\n-     linked with the kernel is triggered by adding \"-static\" to the gcc *link*\n-     command line options.  */\n+     We can differentiate by looking at the __module_has_ctors value provided\n+     by each class of crt objects. As of today, selecting the crt set intended\n+     for applications to be statically linked with the kernel is triggered by\n+     adding \"-static\" to the gcc *link* command line options.\n \n-#if 0\n+     This is a first approach, tightly synchronized with a number of GCC\n+     configuration and crtstuff changes. We need to ensure that those changes\n+     are there to activate this circuitry.  */\n+\n+#if DWARF2_UNWIND_INFO && defined (_ARCH_PPC)\n  {\n    extern const int __module_has_ctors;\n    extern void __do_global_ctors ();"}, {"sha": "e2e559fac7e33eadce1087a25cafca86163aef64", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -1794,8 +1794,18 @@ package body Osint is\n       --  \"alpha-dec-vxworks-\"\n \n       while Name_Len > 0  loop\n+\n+         --  All done if we find the last hyphen\n+\n          if Name_Buffer (Name_Len) = '-' then\n             exit;\n+\n+         --  If directory separator found, we don't want to look further\n+         --  since in this case, no prefix has been found.\n+\n+         elsif Is_Directory_Separator (Name_Buffer (Name_Len)) then\n+            Name_Len := 0;\n+            exit;\n          end if;\n \n          Name_Len := Name_Len - 1;"}, {"sha": "9388125aaf1285ce2f543d73239795c498b118b0", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 39, "deletions": 9, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -4359,20 +4359,18 @@ package body Sem_Ch4 is\n          --  always added to the overload set, unless it is a universal\n          --  operation.\n \n-         if Nkind (N) in N_Op\n-           and then Has_Abstract_Op\n-         then\n+         if not Has_Abstract_Op then\n+            return;\n+\n+         elsif Nkind (N) in N_Op then\n             if Nkind (N) in N_Unary_Op\n-              and then\n-                Present (Universal_Interpretation (Etype (Right_Opnd (N))))\n+              and then Present (Universal_Interpretation (Right_Opnd (N)))\n             then\n                return;\n \n             elsif Nkind (N) in N_Binary_Op\n-              and then\n-                Present (Universal_Interpretation (Etype (Right_Opnd (N))))\n-              and then\n-                Present (Universal_Interpretation (Etype (Left_Opnd (N))))\n+              and then Present (Universal_Interpretation (Right_Opnd (N)))\n+              and then Present (Universal_Interpretation (Left_Opnd  (N)))\n             then\n                return;\n \n@@ -4386,6 +4384,38 @@ package body Sem_Ch4 is\n                   Get_Next_Interp (I, It);\n                end loop;\n             end if;\n+\n+         elsif Nkind (N) = N_Function_Call\n+           and then\n+             (Nkind (Name (N)) = N_Operator_Symbol\n+                or else\n+                  (Nkind (Name (N)) = N_Expanded_Name\n+                     and then\n+                       Nkind (Selector_Name (Name (N))) = N_Operator_Symbol))\n+         then\n+            declare\n+               Arg1 : constant Node_Id := First (Parameter_Associations (N));\n+\n+            begin\n+               if Present (Universal_Interpretation (Arg1))\n+                 or else\n+                   (Present (Next (Arg1))\n+                     and then\n+                       Present (Universal_Interpretation (Next (Arg1))))\n+               then\n+                  return;\n+\n+               else\n+                  Get_First_Interp (N, I, It);\n+                  while Present (It.Nam) loop\n+                     if Scope (It.Nam) = Standard_Standard then\n+                        Remove_Interp (I);\n+                     end if;\n+\n+                     Get_Next_Interp (I, It);\n+                  end loop;\n+               end if;\n+            end;\n          end if;\n       end if;\n    end Remove_Abstract_Operations;"}, {"sha": "c86ac9d8322404fcdf8ac4fdc1e84d609c3d0af9", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3984e89a1850369bff1cce7b0ce53ef658e84649/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=3984e89a1850369bff1cce7b0ce53ef658e84649", "patch": "@@ -1519,7 +1519,7 @@ package Sinfo is\n    --    stub. During the analysis procedure, stubs in some situations\n    --    get rewritten by the corresponding bodies, and we set this flag\n    --    to remember that this happened. Note that it is not good enough\n-   --    to rely on the use of Original_Tree here because of the case of\n+   --    to rely on the use of Original_Node here because of the case of\n    --    nested instantiations where the substituted node can be copied.\n \n    --  Zero_Cost_Handling (Flag5-Sem)"}]}