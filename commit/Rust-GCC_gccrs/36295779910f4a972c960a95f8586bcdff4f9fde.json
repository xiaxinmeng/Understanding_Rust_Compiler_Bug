{"sha": "36295779910f4a972c960a95f8586bcdff4f9fde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYyOTU3Nzk5MTBmNGE5NzJjOTYwYTk1Zjg1ODZiY2RmZjRmOWZkZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:19:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:19:52Z"}, "message": "[multiple changes]\n\n2014-07-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem.ads (Scope_Stack_Entry): Reorganize storage of action lists;\n\tintroduce a new list (cleanup actions) for each (transient) scope.\n\t* sinfo.ads, sinfo.adb (Cleanup_Actions): New attribute for\n\tN_Block_Statement\n\t* exp_ch7.ads (Store_Cleanup_Actions_In_Scope): New subprogram.\n\t* exp_ch7.adb (Store_Actions_In_Scope): New subprogram, common\n\tprocessing for Store_xxx_Actions_In_Scope.\n\t(Build_Cleanup_Statements): Allow for a list of additional\n\tcleanup statements to be passed by the caller.\n\t(Expand_Cleanup_Actions): Take custom cleanup actions associated\n\twith an N_Block_Statement into account.\n\t(Insert_Actions_In_Scope_Around): Account for Scope_Stack_Entry\n\treorganization (refactoring only, no behaviour change).\n\t(Make_Transient_Block): Add assertion to ensure that the current\n\tscope is indeed a block (namely, the entity for the transient\n\tblock being constructed syntactically, which has already been\n\testablished as a scope).  If cleanup actions are present in the\n\ttransient scope, transfer them now to the transient block.\n\t* exp_ch6.adb (Expand_Protected_Subprogram_Call): Freeze the\n\tcalled function while it is still present as the name in a call\n\tin the tree. This may not be the case later on if the call is\n\trewritten into a transient block.\n\t* exp_smem.adb (Add_Shared_Var_Lock_Procs): The post-actions\n\tinserted after calling a protected operation on a shared passive\n\tprotected must be performed in a block finalizer, not just\n\tinserted in the tree, so that they are executed even in case of\n\ta normal (RETURN) or abnormal (exception) transfer of control\n\toutside of the current scope.\n\t* exp_smem.ads (Add_Shared_Var_Lock_Procs): Update documentation\n\t* sem_ch8.adb, expander.adb, exp_ch11.adb: Adjust for\n\tScope_Stack_Entry reorganization.\n\n2014-07-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_disp.adb (Make_DT, Make_VM_TSD): Do not omit Check_TSD\n\tcall for types that do not have an explicit attribute definition\n\tclause for External_Tag, as their default tag may clash with an\n\texplicit tag defined for some other type.\n\n2014-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Is_Controlled_Function_Call): Recognize a\n\tcontrolled function call with multiple actual parameters that\n\tappears in Object.Operation form.\n\n2014-07-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* einfo.ads, einfo.adb (Has_External_Tag_Rep_Clause): Remove\n\tentity flag.\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case\n\tExternal_Tag): No need to set entity flag.\n\t* sem_aux.ads, sem_aux.adb (Has_External_Tag_Rep_Clause):\n\tReimplement correctly in terms of Has_Rep_Item.\n\nFrom-SVN: r212719", "tree": {"sha": "0f370971becd91540a889f7fd0b77b56047682bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f370971becd91540a889f7fd0b77b56047682bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36295779910f4a972c960a95f8586bcdff4f9fde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36295779910f4a972c960a95f8586bcdff4f9fde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36295779910f4a972c960a95f8586bcdff4f9fde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36295779910f4a972c960a95f8586bcdff4f9fde/comments", "author": null, "committer": null, "parents": [{"sha": "f65c67d3402cba1cc2ad95242d04abab5f24759f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65c67d3402cba1cc2ad95242d04abab5f24759f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f65c67d3402cba1cc2ad95242d04abab5f24759f"}], "stats": {"total": 523, "additions": 321, "deletions": 202}, "files": [{"sha": "ce6cadead7cddd0a2e6af161bb89850bda006d95", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -1,3 +1,59 @@\n+2014-07-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem.ads (Scope_Stack_Entry): Reorganize storage of action lists;\n+\tintroduce a new list (cleanup actions) for each (transient) scope.\n+\t* sinfo.ads, sinfo.adb (Cleanup_Actions): New attribute for\n+\tN_Block_Statement\n+\t* exp_ch7.ads (Store_Cleanup_Actions_In_Scope): New subprogram.\n+\t* exp_ch7.adb (Store_Actions_In_Scope): New subprogram, common\n+\tprocessing for Store_xxx_Actions_In_Scope.\n+\t(Build_Cleanup_Statements): Allow for a list of additional\n+\tcleanup statements to be passed by the caller.\n+\t(Expand_Cleanup_Actions): Take custom cleanup actions associated\n+\twith an N_Block_Statement into account.\n+\t(Insert_Actions_In_Scope_Around): Account for Scope_Stack_Entry\n+\treorganization (refactoring only, no behaviour change).\n+\t(Make_Transient_Block): Add assertion to ensure that the current\n+\tscope is indeed a block (namely, the entity for the transient\n+\tblock being constructed syntactically, which has already been\n+\testablished as a scope).  If cleanup actions are present in the\n+\ttransient scope, transfer them now to the transient block.\n+\t* exp_ch6.adb (Expand_Protected_Subprogram_Call): Freeze the\n+\tcalled function while it is still present as the name in a call\n+\tin the tree. This may not be the case later on if the call is\n+\trewritten into a transient block.\n+\t* exp_smem.adb (Add_Shared_Var_Lock_Procs): The post-actions\n+\tinserted after calling a protected operation on a shared passive\n+\tprotected must be performed in a block finalizer, not just\n+\tinserted in the tree, so that they are executed even in case of\n+\ta normal (RETURN) or abnormal (exception) transfer of control\n+\toutside of the current scope.\n+\t* exp_smem.ads (Add_Shared_Var_Lock_Procs): Update documentation\n+\t* sem_ch8.adb, expander.adb, exp_ch11.adb: Adjust for\n+\tScope_Stack_Entry reorganization.\n+\n+2014-07-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_disp.adb (Make_DT, Make_VM_TSD): Do not omit Check_TSD\n+\tcall for types that do not have an explicit attribute definition\n+\tclause for External_Tag, as their default tag may clash with an\n+\texplicit tag defined for some other type.\n+\n+2014-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Is_Controlled_Function_Call): Recognize a\n+\tcontrolled function call with multiple actual parameters that\n+\tappears in Object.Operation form.\n+\n+2014-07-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Has_External_Tag_Rep_Clause): Remove\n+\tentity flag.\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case\n+\tExternal_Tag): No need to set entity flag.\n+\t* sem_aux.ads, sem_aux.adb (Has_External_Tag_Rep_Clause):\n+\tReimplement correctly in terms of Has_Rep_Item.\n+\n 2014-07-17  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_ch7.adb (Establish_Transient_Scope.Find_Node_To_Be_Wrapped):"}, {"sha": "13349e18c6c37970f05e8e955aa0333a0d5117db", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -384,7 +384,6 @@ package body Einfo is\n    --    Is_Private_Composite            Flag107\n    --    Default_Expressions_Processed   Flag108\n    --    Is_Non_Static_Subtype           Flag109\n-   --    Has_External_Tag_Rep_Clause     Flag110\n \n    --    Is_Formal_Subprogram            Flag111\n    --    Is_Renaming_Of_Object           Flag112\n@@ -564,6 +563,8 @@ package body Einfo is\n    --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n+   --    (unused)                        Flag110\n+\n    --    (unused)                        Flag269\n    --    (unused)                        Flag270\n \n@@ -1443,12 +1444,6 @@ package body Einfo is\n       return Flag47 (Id);\n    end Has_Exit;\n \n-   function Has_External_Tag_Rep_Clause (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Tagged_Type (Id));\n-      return Flag110 (Id);\n-   end Has_External_Tag_Rep_Clause;\n-\n    function Has_Forward_Instantiation (Id : E) return B is\n    begin\n       return Flag175 (Id);\n@@ -4150,12 +4145,6 @@ package body Einfo is\n       Set_Flag47 (Id, V);\n    end Set_Has_Exit;\n \n-   procedure Set_Has_External_Tag_Rep_Clause (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Tagged_Type (Id));\n-      Set_Flag110 (Id, V);\n-   end Set_Has_External_Tag_Rep_Clause;\n-\n    procedure Set_Has_Forward_Instantiation (Id : E; V : B := True) is\n    begin\n       Set_Flag175 (Id, V);\n@@ -8188,7 +8177,6 @@ package body Einfo is\n       W (\"Has_Dynamic_Predicate_Aspect\",    Flag258 (Id));\n       W (\"Has_Enumeration_Rep_Clause\",      Flag66  (Id));\n       W (\"Has_Exit\",                        Flag47  (Id));\n-      W (\"Has_External_Tag_Rep_Clause\",     Flag110 (Id));\n       W (\"Has_Forward_Instantiation\",       Flag175 (Id));\n       W (\"Has_Fully_Qualified_Name\",        Flag173 (Id));\n       W (\"Has_Gigi_Rep_Item\",               Flag82  (Id));"}, {"sha": "a23463457f204aa7f6581ddd2f6439a422e94f59", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -1528,11 +1528,6 @@ package Einfo is\n --       that this does not imply a representation with holes, since the rep\n --       clause may merely confirm the default 0..N representation.\n \n---    Has_External_Tag_Rep_Clause (Flag110)\n---       Defined in tagged types. Set if an external_tag rep. clause has been\n---       given for this type. Use to avoid the generation of the default\n---       external_tag.\n-\n --    Has_Exit (Flag47)\n --       Defined in loop entities. Set if the loop contains an exit statement.\n \n@@ -5951,7 +5946,6 @@ package Einfo is\n    --    Component_Alignment                 (special)  (base type only)\n    --    C_Pass_By_Copy                      (Flag125)  (base type only)\n    --    Has_Dispatch_Table                  (Flag220)  (base tagged type only)\n-   --    Has_External_Tag_Rep_Clause         (Flag110)\n    --    Has_Pragma_Pack                     (Flag121)  (impl base type only)\n    --    Has_Private_Ancestor                (Flag151)\n    --    Has_Record_Rep_Clause               (Flag65)   (base type only)\n@@ -5983,7 +5977,6 @@ package Einfo is\n    --    Has_Completion                      (Flag26)\n    --    Has_Private_Ancestor                (Flag151)\n    --    Has_Record_Rep_Clause               (Flag65)   (base type only)\n-   --    Has_External_Tag_Rep_Clause         (Flag110)\n    --    Is_Concurrent_Record_Type           (Flag20)\n    --    Is_Constrained                      (Flag12)\n    --    Is_Controlled                       (Flag42)   (base type only)\n@@ -6488,7 +6481,6 @@ package Einfo is\n    function Has_Dynamic_Predicate_Aspect        (Id : E) return B;\n    function Has_Enumeration_Rep_Clause          (Id : E) return B;\n    function Has_Exit                            (Id : E) return B;\n-   function Has_External_Tag_Rep_Clause         (Id : E) return B;\n    function Has_Forward_Instantiation           (Id : E) return B;\n    function Has_Fully_Qualified_Name            (Id : E) return B;\n    function Has_Gigi_Rep_Item                   (Id : E) return B;\n@@ -7114,7 +7106,6 @@ package Einfo is\n    procedure Set_Has_Dynamic_Predicate_Aspect    (Id : E; V : B := True);\n    procedure Set_Has_Enumeration_Rep_Clause      (Id : E; V : B := True);\n    procedure Set_Has_Exit                        (Id : E; V : B := True);\n-   procedure Set_Has_External_Tag_Rep_Clause     (Id : E; V : B := True);\n    procedure Set_Has_Forward_Instantiation       (Id : E; V : B := True);\n    procedure Set_Has_Fully_Qualified_Name        (Id : E; V : B := True);\n    procedure Set_Has_Gigi_Rep_Item               (Id : E; V : B := True);\n@@ -7853,7 +7844,6 @@ package Einfo is\n    pragma Inline (Has_Dynamic_Predicate_Aspect);\n    pragma Inline (Has_Enumeration_Rep_Clause);\n    pragma Inline (Has_Exit);\n-   pragma Inline (Has_External_Tag_Rep_Clause);\n    pragma Inline (Has_Forward_Instantiation);\n    pragma Inline (Has_Fully_Qualified_Name);\n    pragma Inline (Has_Gigi_Rep_Item);\n@@ -8326,7 +8316,6 @@ package Einfo is\n    pragma Inline (Set_Has_Dynamic_Predicate_Aspect);\n    pragma Inline (Set_Has_Enumeration_Rep_Clause);\n    pragma Inline (Set_Has_Exit);\n-   pragma Inline (Set_Has_External_Tag_Rep_Clause);\n    pragma Inline (Set_Has_Forward_Instantiation);\n    pragma Inline (Set_Has_Fully_Qualified_Name);\n    pragma Inline (Set_Has_Gigi_Rep_Item);"}, {"sha": "1a27245d09cf17a99f06ed4375a4757920c37c33", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1960,9 +1960,11 @@ package body Exp_Ch11 is\n                begin\n                   if LCN = Statements (P)\n                        or else\n-                     LCN = SSE.Actions_To_Be_Wrapped_Before\n+                     LCN = SSE.Actions_To_Be_Wrapped (Before)\n                        or else\n-                     LCN = SSE.Actions_To_Be_Wrapped_After\n+                     LCN = SSE.Actions_To_Be_Wrapped (After)\n+                       or else\n+                     LCN = SSE.Actions_To_Be_Wrapped (Cleanup)\n                   then\n                      --  Loop through exception handlers\n "}, {"sha": "4a928965bf627e2065df3f4849a61328c4486873", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -7150,6 +7150,26 @@ package body Exp_Ch6 is\n    is\n       Rec   : Node_Id;\n \n+      procedure Freeze_Called_Function;\n+      --  If it is a function call it can appear in elaboration code and\n+      --  the called entity must be frozen before the call. This must be\n+      --  done before the call is expanded, as the expansion may rewrite it\n+      --  to something other than a call (e.g. a temporary initialized in a\n+      --  transient block).\n+\n+      ----------------------------\n+      -- Freeze_Called_Function --\n+      ----------------------------\n+\n+      procedure Freeze_Called_Function is\n+      begin\n+         if Ekind (Subp) = E_Function then\n+            Freeze_Expression (Name (N));\n+         end if;\n+      end Freeze_Called_Function;\n+\n+   --  Start of processing for Expand_Protected_Subprogram_Call\n+\n    begin\n       --  If the protected object is not an enclosing scope, this is an inter-\n       --  object function call. Inter-object procedure calls are expanded by\n@@ -7170,6 +7190,7 @@ package body Exp_Ch6 is\n             Rec := Prefix (Prefix (Name (N)));\n          end if;\n \n+         Freeze_Called_Function;\n          Build_Protected_Subprogram_Call (N,\n            Name     => New_Occurrence_Of (Subp, Sloc (N)),\n            Rec      => Convert_Concurrent (Rec, Etype (Rec)),\n@@ -7182,20 +7203,14 @@ package body Exp_Ch6 is\n             return;\n          end if;\n \n+         Freeze_Called_Function;\n          Build_Protected_Subprogram_Call (N,\n            Name     => Name (N),\n            Rec      => Rec,\n            External => False);\n \n       end if;\n \n-      --  If it is a function call it can appear in elaboration code and\n-      --  the called entity must be frozen here.\n-\n-      if Ekind (Subp) = E_Function then\n-         Freeze_Expression (Name (N));\n-      end if;\n-\n       --  Analyze and resolve the new call. The actuals have already been\n       --  resolved, but expansion of a function call will add extra actuals\n       --  if needed. Analysis of a procedure call already includes resolution."}, {"sha": "f48f1149b0e15b4633a3c12fde41855c41d93b44", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 103, "deletions": 90, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -150,6 +150,9 @@ package body Exp_Ch7 is\n    --  ??? The entire comment needs to be rewritten\n    --  ??? which entire comment?\n \n+   procedure Store_Actions_In_Scope (AK : Scope_Action_Kind; L : List_Id);\n+   --  Shared processing for Store_xxx_Actions_In_Scope\n+\n    -----------------------------\n    -- Finalization Management --\n    -----------------------------\n@@ -296,11 +299,14 @@ package body Exp_Ch7 is\n    --  Build the deep Initialize/Adjust/Finalize for a record Typ with\n    --  Has_Controlled_Component set and store them using the TSS mechanism.\n \n-   function Build_Cleanup_Statements (N : Node_Id) return List_Id;\n+   function Build_Cleanup_Statements\n+     (N                  : Node_Id;\n+      Additional_Cleanup : List_Id) return List_Id;\n    --  Create the clean up calls for an asynchronous call block, task master,\n-   --  protected subprogram body, task allocation block or task body. If the\n-   --  context does not contain the above constructs, the routine returns an\n-   --  empty list.\n+   --  protected subprogram body, task allocation block or task body, or\n+   --  additional cleanup actions parked on a transient block. If the context\n+   --  does not contain the above constructs, the routine returns an empty\n+   --  list.\n \n    procedure Build_Finalizer\n      (N           : Node_Id;\n@@ -467,7 +473,10 @@ package body Exp_Ch7 is\n    -- Build_Cleanup_Statements --\n    ------------------------------\n \n-   function Build_Cleanup_Statements (N : Node_Id) return List_Id is\n+   function Build_Cleanup_Statements\n+     (N                  : Node_Id;\n+      Additional_Cleanup : List_Id) return List_Id\n+   is\n       Is_Asynchronous_Call : constant Boolean :=\n                                Nkind (N) = N_Block_Statement\n                                  and then Is_Asynchronous_Call_Block (N);\n@@ -626,6 +635,7 @@ package body Exp_Ch7 is\n          end;\n       end if;\n \n+      Append_List_To (Stmts, Additional_Cleanup);\n       return Stmts;\n    end Build_Cleanup_Statements;\n \n@@ -792,9 +802,7 @@ package body Exp_Ch7 is\n    --  Start of processing for Build_Finalization_Master\n \n    begin\n-      if Is_Private_Type (Ptr_Typ)\n-        and then Present (Full_View (Ptr_Typ))\n-      then\n+      if Is_Private_Type (Ptr_Typ) and then Present (Full_View (Ptr_Typ)) then\n          Ptr_Typ := Full_View (Ptr_Typ);\n       end if;\n \n@@ -887,9 +895,7 @@ package body Exp_Ch7 is\n          --  inserted in the same source unit only once. The only exception to\n          --  this are instances using the same access type as generic actual.\n \n-         if Comes_From_Source (Ptr_Typ)\n-           and then not Inside_A_Generic\n-         then\n+         if Comes_From_Source (Ptr_Typ) and then not Inside_A_Generic then\n             Fin_Mas_Id :=\n               Make_Defining_Identifier (Loc,\n                 Chars => New_External_Name (Chars (Ptr_Typ), \"FM\"));\n@@ -1436,9 +1442,7 @@ package body Exp_Ch7 is\n                 Expression   => Make_Identifier (Loc, Chars (Counter_Id)),\n                 Alternatives => Jump_Alts);\n \n-            if Acts_As_Clean\n-              and then Present (Jump_Block_Insert_Nod)\n-            then\n+            if Acts_As_Clean and then Present (Jump_Block_Insert_Nod) then\n                Insert_After (Jump_Block_Insert_Nod, Jump_Block);\n             else\n                Prepend_To (Finalizer_Stmts, Jump_Block);\n@@ -1481,10 +1485,7 @@ package body Exp_Ch7 is\n          --  aborts are allowed and the clean up statements require deferral or\n          --  there are controlled objects to be finalized.\n \n-         if Abort_Allowed\n-           and then\n-             (Defer_Abort or else Has_Ctrl_Objs)\n-         then\n+         if Abort_Allowed and then (Defer_Abort or Has_Ctrl_Objs) then\n             Prepend_To (Finalizer_Stmts,\n               Make_Procedure_Call_Statement (Loc,\n                 Name => New_Occurrence_Of (RTE (RE_Abort_Defer), Loc)));\n@@ -1502,10 +1503,7 @@ package body Exp_Ch7 is\n          --       Raise_From_Controlled_Operation (E);\n          --    end if;\n \n-         if Has_Ctrl_Objs\n-           and then Exceptions_OK\n-           and then not For_Package\n-         then\n+         if Has_Ctrl_Objs and Exceptions_OK and not For_Package then\n             Append_To (Finalizer_Stmts,\n               Build_Raise_Statement (Finalizer_Data));\n          end if;\n@@ -1608,9 +1606,7 @@ package body Exp_Ch7 is\n             --  When the finalizer acts solely as a clean up routine, the body\n             --  is inserted right after the spec.\n \n-            if Acts_As_Clean\n-              and then not Has_Ctrl_Objs\n-            then\n+            if Acts_As_Clean and then not Has_Ctrl_Objs then\n                Insert_After (Fin_Spec, Fin_Body);\n \n             --  In all other cases the body is inserted after either:\n@@ -1706,9 +1702,7 @@ package body Exp_Ch7 is\n                if Preprocess then\n                   Has_Tagged_Types := True;\n \n-                  if Top_Level\n-                    and then No (Last_Top_Level_Ctrl_Construct)\n-                  then\n+                  if Top_Level and then No (Last_Top_Level_Ctrl_Construct) then\n                      Last_Top_Level_Ctrl_Construct := Decl;\n                   end if;\n \n@@ -1723,9 +1717,7 @@ package body Exp_Ch7 is\n                   Counter_Val   := Counter_Val + 1;\n                   Has_Ctrl_Objs := True;\n \n-                  if Top_Level\n-                    and then No (Last_Top_Level_Ctrl_Construct)\n-                  then\n+                  if Top_Level and then No (Last_Top_Level_Ctrl_Construct) then\n                      Last_Top_Level_Ctrl_Construct := Decl;\n                   end if;\n \n@@ -1774,9 +1766,7 @@ package body Exp_Ch7 is\n                --  finalization disabled. This applies only to objects at the\n                --  library level.\n \n-               if For_Package\n-                 and then Finalize_Storage_Only (Obj_Typ)\n-               then\n+               if For_Package and then Finalize_Storage_Only (Obj_Typ) then\n                   null;\n \n                --  Transient variables are treated separately in order to\n@@ -1824,7 +1814,7 @@ package body Exp_Ch7 is\n                elsif Is_Access_Type (Obj_Typ)\n                  and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n                  and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                                   N_Object_Declaration\n+                                                        N_Object_Declaration\n                  and then Is_Finalizable_Transient\n                             (Status_Flag_Or_Transient_Decl (Obj_Id), Decl)\n                then\n@@ -1893,9 +1883,7 @@ package body Exp_Ch7 is\n                --  finalization disabled. This applies only to objects at the\n                --  library level.\n \n-               if For_Package\n-                 and then Finalize_Storage_Only (Obj_Typ)\n-               then\n+               if For_Package and then Finalize_Storage_Only (Obj_Typ) then\n                   null;\n \n                --  Return object of a build-in-place function. This case is\n@@ -3534,9 +3522,7 @@ package body Exp_Ch7 is\n \n    begin\n       Func_Id := E;\n-      while Present (Func_Id)\n-        and then Func_Id /= Standard_Standard\n-      loop\n+      while Present (Func_Id) and then Func_Id /= Standard_Standard loop\n          if Ekind (Func_Id) = E_Function then\n             return Func_Id;\n          end if;\n@@ -3691,6 +3677,9 @@ package body Exp_Ch7 is\n                                  and then\n                                    not Sec_Stack_Needed_For_Return (Scop)\n                                  and then VM_Target = No_VM;\n+      Needs_Custom_Cleanup : constant Boolean :=\n+                               Nkind (N) = N_Block_Statement\n+                                 and then Present (Cleanup_Actions (N));\n \n       Actions_Required     : constant Boolean :=\n                                Requires_Cleanup_Actions (N, True)\n@@ -3699,10 +3688,12 @@ package body Exp_Ch7 is\n                                  or else Is_Protected_Body\n                                  or else Is_Task_Allocation\n                                  or else Is_Task_Body\n-                                 or else Needs_Sec_Stack_Mark;\n+                                 or else Needs_Sec_Stack_Mark\n+                                 or else Needs_Custom_Cleanup;\n \n       HSS : Node_Id := Handled_Statement_Sequence (N);\n       Loc : Source_Ptr;\n+      Cln : List_Id;\n \n       procedure Wrap_HSS_In_Block;\n       --  Move HSS inside a new block along with the original exception\n@@ -3761,6 +3752,12 @@ package body Exp_Ch7 is\n          return;\n       end if;\n \n+      if Needs_Custom_Cleanup then\n+         Cln := Cleanup_Actions (N);\n+      else\n+         Cln := No_List;\n+      end if;\n+\n       declare\n          Decls     : List_Id := Declarations (N);\n          Fin_Id    : Entity_Id;\n@@ -3898,7 +3895,7 @@ package body Exp_Ch7 is\n \n          Build_Finalizer\n            (N           => N,\n-            Clean_Stmts => Build_Cleanup_Statements (N),\n+            Clean_Stmts => Build_Cleanup_Statements (N, Cln),\n             Mark_Id     => Mark,\n             Top_Decls   => New_Decls,\n             Defer_Abort => Nkind (Original_Node (N)) = N_Task_Body\n@@ -4440,10 +4437,10 @@ package body Exp_Ch7 is\n    ------------------------------------\n \n    procedure Insert_Actions_In_Scope_Around (N : Node_Id) is\n-      After  : constant List_Id :=\n-        Scope_Stack.Table (Scope_Stack.Last).Actions_To_Be_Wrapped_After;\n-      Before : constant List_Id :=\n-        Scope_Stack.Table (Scope_Stack.Last).Actions_To_Be_Wrapped_Before;\n+      Act_After   : constant List_Id :=\n+        Scope_Stack.Table (Scope_Stack.Last).Actions_To_Be_Wrapped (After);\n+      Act_Before  : constant List_Id :=\n+        Scope_Stack.Table (Scope_Stack.Last).Actions_To_Be_Wrapped (Before);\n       --  Note: We used to use renamings of Scope_Stack.Table (Scope_Stack.\n       --  Last), but this was incorrect as Process_Transient_Object may\n       --  introduce new scopes and cause a reallocation of Scope_Stack.Table.\n@@ -4794,7 +4791,7 @@ package body Exp_Ch7 is\n    --  Start of processing for Insert_Actions_In_Scope_Around\n \n    begin\n-      if No (Before) and then No (After) then\n+      if No (Act_Before) and then No (Act_After) then\n          return;\n       end if;\n \n@@ -4833,22 +4830,22 @@ package body Exp_Ch7 is\n \n          --    3)                   Target ........ Last_Obj\n \n-         if Present (Before) then\n+         if Present (Act_Before) then\n \n             --  Flag declarations are inserted before the first object\n \n-            First_Obj := First (Before);\n+            First_Obj := First (Act_Before);\n \n-            Insert_List_Before (Target, Before);\n+            Insert_List_Before (Target, Act_Before);\n          end if;\n \n-         if Present (After) then\n+         if Present (Act_After) then\n \n             --  Finalization calls are inserted after the last object\n \n-            Last_Obj := Last (After);\n+            Last_Obj := Last (Act_After);\n \n-            Insert_List_After (Target, After);\n+            Insert_List_After (Target, Act_After);\n          end if;\n \n          --  Check for transient controlled objects associated with Target and\n@@ -4861,14 +4858,14 @@ package body Exp_Ch7 is\n \n          --  Reset the action lists\n \n-         if Present (Before) then\n+         if Present (Act_Before) then\n             Scope_Stack.Table (Scope_Stack.Last).\n-              Actions_To_Be_Wrapped_Before := No_List;\n+              Actions_To_Be_Wrapped (Before) := No_List;\n          end if;\n \n-         if Present (After) then\n+         if Present (Act_After) then\n             Scope_Stack.Table (Scope_Stack.Last).\n-              Actions_To_Be_Wrapped_After := No_List;\n+              Actions_To_Be_Wrapped (After) := No_List;\n          end if;\n       end;\n    end Insert_Actions_In_Scope_Around;\n@@ -6564,9 +6561,7 @@ package body Exp_Ch7 is\n             --  order to generate the same state counter names as those from\n             --  Build_Initialize_Statements.\n \n-            if Num_Comps > 0\n-              and then Is_Local\n-            then\n+            if Num_Comps > 0 and then Is_Local then\n                Counter := Counter + 1;\n \n                Counter_Id :=\n@@ -7253,7 +7248,7 @@ package body Exp_Ch7 is\n                   Ekind (Typ) = E_Record_Type\n                     and then Is_Concurrent_Record_Type (Typ)\n                     and then Ekind (Corresponding_Concurrent_Type (Typ)) =\n-                               E_Task_Type;\n+                                                                 E_Task_Type;\n       Loc     : constant Source_Ptr := Sloc (Typ);\n       Proc_Id : Entity_Id;\n       Stmts   : List_Id;\n@@ -7832,8 +7827,10 @@ package body Exp_Ch7 is\n       end if;\n \n       --  Create the transient block. Set the parent now since the block itself\n-      --  is not part of the tree.\n+      --  is not part of the tree. The current scope is the E_Block entity\n+      --  that has been pushed by Establish_Transient_Scope.\n \n+      pragma Assert (Ekind (Current_Scope) = E_Block);\n       Block :=\n         Make_Block_Statement (Loc,\n           Identifier                 => New_Occurrence_Of (Current_Scope, Loc),\n@@ -7853,6 +7850,17 @@ package body Exp_Ch7 is\n          Freeze_All (First_Entity (Current_Scope), Insert);\n       end if;\n \n+      --  Transfer cleanup actions to the newly created block\n+\n+      declare\n+         Cleanup_Actions : List_Id\n+           renames Scope_Stack.Table (Scope_Stack.Last).\n+                     Actions_To_Be_Wrapped (Cleanup);\n+      begin\n+         Set_Cleanup_Actions (Block, Cleanup_Actions);\n+         Cleanup_Actions := No_List;\n+      end;\n+\n       --  When the transient scope was established, we pushed the entry for the\n       --  transient scope onto the scope stack, so that the scope was active\n       --  for the installation of finalizable entities etc. Now we must remove\n@@ -7881,20 +7889,17 @@ package body Exp_Ch7 is\n       Scope_Stack.Table (Scope_Stack.Last).Node_To_Be_Wrapped := N;\n    end Set_Node_To_Be_Wrapped;\n \n-   ----------------------------------\n-   -- Store_After_Actions_In_Scope --\n-   ----------------------------------\n+   ----------------------------\n+   -- Store_Actions_In_Scope --\n+   ----------------------------\n \n-   procedure Store_After_Actions_In_Scope (L : List_Id) is\n-      SE : Scope_Stack_Entry renames Scope_Stack.Table (Scope_Stack.Last);\n+   procedure Store_Actions_In_Scope (AK : Scope_Action_Kind; L : List_Id) is\n+      SE      : Scope_Stack_Entry renames Scope_Stack.Table (Scope_Stack.Last);\n+      Actions : List_Id renames SE.Actions_To_Be_Wrapped (AK);\n \n    begin\n-      if Present (SE.Actions_To_Be_Wrapped_After) then\n-         Insert_List_Before_And_Analyze\n-           (First (SE.Actions_To_Be_Wrapped_After), L);\n-\n-      else\n-         SE.Actions_To_Be_Wrapped_After := L;\n+      if No (Actions) then\n+         Actions := L;\n \n          if Is_List_Member (SE.Node_To_Be_Wrapped) then\n             Set_Parent (L, Parent (SE.Node_To_Be_Wrapped));\n@@ -7903,33 +7908,41 @@ package body Exp_Ch7 is\n          end if;\n \n          Analyze_List (L);\n+\n+      elsif AK = Before then\n+         Insert_List_After_And_Analyze (Last (Actions), L);\n+\n+      else\n+         Insert_List_Before_And_Analyze (First (Actions), L);\n       end if;\n+   end Store_Actions_In_Scope;\n+\n+   ----------------------------------\n+   -- Store_After_Actions_In_Scope --\n+   ----------------------------------\n+\n+   procedure Store_After_Actions_In_Scope (L : List_Id) is\n+   begin\n+      Store_Actions_In_Scope (After, L);\n    end Store_After_Actions_In_Scope;\n \n    -----------------------------------\n    -- Store_Before_Actions_In_Scope --\n    -----------------------------------\n \n    procedure Store_Before_Actions_In_Scope (L : List_Id) is\n-      SE : Scope_Stack_Entry renames Scope_Stack.Table (Scope_Stack.Last);\n-\n    begin\n-      if Present (SE.Actions_To_Be_Wrapped_Before) then\n-         Insert_List_After_And_Analyze\n-           (Last (SE.Actions_To_Be_Wrapped_Before), L);\n-\n-      else\n-         SE.Actions_To_Be_Wrapped_Before := L;\n+      Store_Actions_In_Scope (Before, L);\n+   end Store_Before_Actions_In_Scope;\n \n-         if Is_List_Member (SE.Node_To_Be_Wrapped) then\n-            Set_Parent (L, Parent (SE.Node_To_Be_Wrapped));\n-         else\n-            Set_Parent (L, SE.Node_To_Be_Wrapped);\n-         end if;\n+   -----------------------------------\n+   -- Store_Cleanup_Actions_In_Scope --\n+   -----------------------------------\n \n-         Analyze_List (L);\n-      end if;\n-   end Store_Before_Actions_In_Scope;\n+   procedure Store_Cleanup_Actions_In_Scope (L : List_Id) is\n+   begin\n+      Store_Actions_In_Scope (Cleanup, L);\n+   end Store_Cleanup_Actions_In_Scope;\n \n    --------------------------------\n    -- Wrap_Transient_Declaration --"}, {"sha": "86faac934b4841104b714a15247e25b10f9cd699", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -302,6 +302,10 @@ package Exp_Ch7 is\n    --  stored in the top of the scope stack (also analyzes these actions).\n    --  Why prepend rather than append ???\n \n+   procedure Store_Cleanup_Actions_In_Scope (L : List_Id);\n+   --  Prepend the list L of actions to the beginning of the cleanup-actions\n+   --  store in the top of the scope stack.\n+\n    procedure Wrap_Transient_Declaration (N : Node_Id);\n    --  N is an object declaration. Expand the finalization calls after the\n    --  declaration and make the outer scope being the transient one."}, {"sha": "8b4977b27eb88aaf325793729e90345b98b7ed78", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -6209,9 +6209,8 @@ package body Exp_Disp is\n          end if;\n       end if;\n \n-      --  If the type has a representation clause which specifies its external\n-      --  tag then generate code to check if the external tag of this type is\n-      --  the same as the external tag of some other declaration.\n+      --  Generate code to check if the external tag of this type is the same\n+      --  as the external tag of some other declaration.\n \n       --     Check_TSD (TSD'Unrestricted_Access);\n \n@@ -6226,16 +6225,16 @@ package body Exp_Disp is\n \n       if not No_Run_Time_Mode\n         and then Ada_Version >= Ada_2005\n-        and then Has_External_Tag_Rep_Clause (Typ)\n         and then RTE_Available (RE_Check_TSD)\n         and then not Debug_Flag_QQ\n       then\n          Append_To (Elab_Code,\n            Make_Procedure_Call_Statement (Loc,\n-             Name => New_Occurrence_Of (RTE (RE_Check_TSD), Loc),\n+             Name                   =>\n+               New_Occurrence_Of (RTE (RE_Check_TSD), Loc),\n              Parameter_Associations => New_List (\n                Make_Attribute_Reference (Loc,\n-                 Prefix => New_Occurrence_Of (TSD, Loc),\n+                 Prefix         => New_Occurrence_Of (TSD, Loc),\n                  Attribute_Name => Name_Unchecked_Access))));\n       end if;\n \n@@ -6810,12 +6809,10 @@ package body Exp_Disp is\n             Expressions => TSD_Aggr_List)));\n \n       --  Generate:\n-      --     Check_TSD\n-      --       (TSD => TSD'Unrestricted_Access);\n+      --     Check_TSD (TSD => TSD'Unrestricted_Access);\n \n       if Ada_Version >= Ada_2005\n         and then Is_Library_Level_Entity (Typ)\n-        and then Has_External_Tag_Rep_Clause (Typ)\n         and then RTE_Available (RE_Check_TSD)\n         and then not Debug_Flag_QQ\n       then"}, {"sha": "819de1d9e5fe84875a2632cabd55803fb976c063", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 41, "deletions": 38, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -129,62 +129,65 @@ package body Exp_Smem is\n    -------------------------------\n \n    procedure Add_Shared_Var_Lock_Procs (N : Node_Id) is\n-      Loc   : constant Source_Ptr := Sloc (N);\n-      Obj   : constant Entity_Id  := Entity (Expression (First_Actual (N)));\n-      Inode : Node_Id;\n-      Vnm   : String_Id;\n+      Loc : constant Source_Ptr := Sloc (N);\n+      Obj : constant Entity_Id  := Entity (Expression (First_Actual (N)));\n+      Vnm : String_Id;\n+      Vid : Entity_Id;\n+      Aft : constant List_Id := New_List;\n \n    begin\n-      --  We have to add Shared_Var_Lock and Shared_Var_Unlock calls around\n-      --  the procedure or function call node. First we locate the right place\n-      --  to do the insertion, which is the call itself in the procedure call\n-      --  case, or else the nearest non subexpression node that contains the\n-      --  function call.\n-\n-      Inode := N;\n-      while Nkind (Inode) /= N_Procedure_Call_Statement\n-        and then Nkind (Inode) in N_Subexpr\n-      loop\n-         Inode := Parent (Inode);\n-      end loop;\n-\n-      --  Now insert the Lock and Unlock calls and the read/write calls\n-\n-      --  Two concerns here. First we are not dealing with the exception case,\n-      --  really we need some kind of cleanup routine to do the Unlock. Second,\n-      --  these lock calls should be inside the protected object processing,\n-      --  not outside, otherwise they can be done at the wrong priority,\n-      --  resulting in dead lock situations ???\n-\n       Build_Full_Name (Obj, Vnm);\n \n+      --  Create constant string. Note that this must be done prior to\n+      --  establishing the transient scope, as the finalizer needs to have\n+      --  access to this object.\n+\n+      Vid := Make_Temporary (Loc, 'N', Obj);\n+      Insert_Action (N,\n+        Make_Object_Declaration (Loc,\n+          Defining_Identifier => Vid,\n+          Constant_Present    => True,\n+          Object_Definition   => New_Occurrence_Of (Standard_String, Loc),\n+          Expression          => Make_String_Literal (Loc, Vnm)));\n+\n+      --  Now set up a transient scope around the call, which will hold the\n+      --  required lock/unlock actions.\n+\n+      Establish_Transient_Scope (N, Sec_Stack => False);\n+\n       --  First insert the Lock call before\n \n-      Insert_Before_And_Analyze (Inode,\n+      Insert_Action (N,\n         Make_Procedure_Call_Statement (Loc,\n           Name => New_Occurrence_Of (RTE (RE_Shared_Var_Lock), Loc),\n-          Parameter_Associations => New_List (\n-            Make_String_Literal (Loc, Vnm))));\n+          Parameter_Associations => New_List (New_Occurrence_Of (Vid, Loc))));\n \n       --  Now, right after the Lock, insert a call to read the object\n \n-      Insert_Before_And_Analyze (Inode,\n+      Insert_Action (N,\n         Build_Shared_Var_Proc_Call (Loc, Obj, Name_Read));\n \n-      --  Now insert the Unlock call after\n+      --  Now for a procedure call, but not a function call, insert the\n+      --  call to write the object just before the unlock.\n \n-      Insert_After_And_Analyze (Inode,\n+      if Nkind (N) = N_Procedure_Call_Statement then\n+         Append_To (Aft,\n+           Build_Shared_Var_Proc_Call (Loc, Obj, Name_Write));\n+      end if;\n+\n+      --  Finally insert the Unlock call after\n+\n+      Append_To (Aft,\n         Make_Procedure_Call_Statement (Loc,\n           Name => New_Occurrence_Of (RTE (RE_Shared_Var_Unlock), Loc),\n-          Parameter_Associations => New_List (\n-            Make_String_Literal (Loc, Vnm))));\n+          Parameter_Associations => New_List (New_Occurrence_Of (Vid, Loc))));\n \n-      --  Now for a procedure call, but not a function call, insert the\n-      --  call to write the object just before the unlock.\n+      Store_Cleanup_Actions_In_Scope (Aft);\n \n       if Nkind (N) = N_Procedure_Call_Statement then\n-         Insert_After_And_Analyze (Inode,\n-           Build_Shared_Var_Proc_Call (Loc, Obj, Name_Write));\n+         Wrap_Transient_Statement (N);\n+      else\n+         Wrap_Transient_Expression (N);\n       end if;\n    end Add_Shared_Var_Lock_Procs;\n "}, {"sha": "9596350aade4be10c75db4d92966078df1ac58f5", "filename": "gcc/ada/exp_smem.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_smem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_smem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.ads?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,9 +44,10 @@ package Exp_Smem is\n    --  The argument is a protected subprogram call, before it is rewritten\n    --  by Exp_Ch9.Build_Protected_Subprogram_Call. This routine, which is\n    --  called only in the case of an external call to a protected object\n-   --  that has Is_Shared_Passive set, deals with installing the required\n-   --  global lock calls for this case. It also generates the necessary\n-   --  read/write calls for the protected object within the lock region.\n+   --  that has Is_Shared_Passive set, deals with installing a transient scope\n+   --  and acquiring the appropriate global lock calls for this case. It also\n+   --  generates the necessary read/write calls for the protected object within\n+   --  the lock region.\n \n    function Make_Shared_Var_Procs (N : Node_Id) return Node_Id;\n    --  N is the node for the declaration of a shared passive variable."}, {"sha": "14895f50455fc76fa134c8f2197cab2484946962", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -4214,7 +4214,8 @@ package body Exp_Util is\n      (Obj_Id : Entity_Id) return Boolean\n    is\n       function Is_Controlled_Function_Call (N : Node_Id) return Boolean;\n-      --  Determine if particular node denotes a controlled function call\n+      --  Determine if particular node denotes a controlled function call. The\n+      --  call may have been heavily expanded.\n \n       function Is_Displace_Call (N : Node_Id) return Boolean;\n       --  Determine whether a particular node is a call to Ada.Tags.Displace.\n@@ -4233,12 +4234,22 @@ package body Exp_Util is\n       begin\n          if Nkind (Expr) = N_Function_Call then\n             Expr := Name (Expr);\n-         end if;\n \n-         --  The function call may appear in object.operation format\n+         --  When a function call appears in Object.Operation format, the\n+         --  original representation has two possible forms depending on the\n+         --  availability of actual parameters:\n+         --\n+         --    Obj.Func_Call          --  N_Selected_Component\n+         --    Obj.Func_Call (Param)  --  N_Indexed_Component\n \n-         if Nkind (Expr) = N_Selected_Component then\n-            Expr := Selector_Name (Expr);\n+         else\n+            if Nkind (Expr) = N_Indexed_Component then\n+               Expr := Prefix (Expr);\n+            end if;\n+\n+            if Nkind (Expr) = N_Selected_Component then\n+               Expr := Selector_Name (Expr);\n+            end if;\n          end if;\n \n          return"}, {"sha": "4d15e09d3e3a0bc2577bd038af86820159ea3976", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,10 +119,7 @@ package body Expander is\n \n          if Serious_Errors_Detected > 0 and then Scope_Is_Transient then\n             Scope_Stack.Table\n-             (Scope_Stack.Last).Actions_To_Be_Wrapped_Before := No_List;\n-            Scope_Stack.Table\n-             (Scope_Stack.Last).Actions_To_Be_Wrapped_After  := No_List;\n-\n+             (Scope_Stack.Last).Actions_To_Be_Wrapped := (others => No_List);\n             Pop_Scope;\n          end if;\n "}, {"sha": "667fbc1dc8537c83996d38f61d3720c433947104", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -450,6 +450,11 @@ package Sem is\n    --  units and their instantiations, have led to a hybrid model that carries\n    --  more state than one would wish.\n \n+   type Scope_Action_Kind is (Before, After, Cleanup);\n+   type Scope_Actions is array (Scope_Action_Kind) of List_Id;\n+   --  Transient blocks have three associated actions list, to be inserted\n+   --  before and after the block's statements, and as cleanup actions.\n+\n    type Scope_Stack_Entry is record\n       Entity : Entity_Id;\n       --  Entity representing the scope\n@@ -496,11 +501,11 @@ package Sem is\n       --  Only used in transient scopes. Records the node which will\n       --  be wrapped by the transient block.\n \n-      Actions_To_Be_Wrapped_Before : List_Id;\n-      Actions_To_Be_Wrapped_After  : List_Id;\n-      --  Actions that have to be inserted at the start or at the end of a\n-      --  transient block. Used to temporarily hold these actions until the\n-      --  block is created, at which time the actions are moved to the block.\n+      Actions_To_Be_Wrapped : Scope_Actions;\n+      --  Actions that have to be inserted at the start, at the end, or as\n+      --  cleanup actions of a transient block. Used to temporarily hold these\n+      --  actions until the block is created, at which time the actions are\n+      --  moved to the block.\n \n       Pending_Freeze_Actions : List_Id;\n       --  Used to collect freeze entity nodes and associated actions that are"}, {"sha": "3f9522152b65acd0c4668fb8851340d2342d8455", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -602,6 +602,16 @@ package body Sem_Aux is\n       return Empty;\n    end Get_Rep_Pragma;\n \n+   ---------------------------------\n+   -- Has_External_Tag_Rep_Clause --\n+   ---------------------------------\n+\n+   function Has_External_Tag_Rep_Clause (T : Entity_Id) return Boolean is\n+   begin\n+      pragma Assert (Is_Tagged_Type (T));\n+      return Has_Rep_Item (T, Name_External_Tag, Check_Parents => False);\n+   end Has_External_Tag_Rep_Clause;\n+\n    ------------------\n    -- Has_Rep_Item --\n    ------------------"}, {"sha": "cf722b299d766fd4351b43a20de3d0dc319e51c4", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -251,6 +251,11 @@ package Sem_Aux is\n    --  the given names then True is returned, otherwise False indicates that no\n    --  matching entry was found.\n \n+   function Has_External_Tag_Rep_Clause (T : Entity_Id) return Boolean;\n+   --  Defined in tagged types. Set if an External_Tag rep. clause has been\n+   --  given for this type. Use to avoid the generation of the default\n+   --  External_Tag.\n+\n    function Has_Unconstrained_Elements (T : Entity_Id) return Boolean;\n    --  True if T has discriminants and is unconstrained, or is an array type\n    --  whose element type Has_Unconstrained_Elements."}, {"sha": "f9bf2a3fb4efea70ad9c3b2d0b075bd4f895847e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -4353,9 +4353,7 @@ package body Sem_Ch13 is\n                     (\"static string required for tag name!\", Nam);\n                end if;\n \n-               if VM_Target = No_VM then\n-                  Set_Has_External_Tag_Rep_Clause (U_Ent);\n-               else\n+               if VM_Target /= No_VM then\n                   Error_Msg_Name_1 := Attr;\n                   Error_Msg_N\n                     (\"% attribute unsupported in this configuration\", Nam);"}, {"sha": "fb69ac69431839f473235096019171feddb50d1e", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -7541,10 +7541,7 @@ package body Sem_Ch8 is\n       --  this case (and we do the abort even with assertions off since the\n       --  penalty is incorrect code generation).\n \n-      if SST.Actions_To_Be_Wrapped_Before /= No_List\n-           or else\n-         SST.Actions_To_Be_Wrapped_After  /= No_List\n-      then\n+      if SST.Actions_To_Be_Wrapped /= Scope_Actions'(others => No_List) then\n          raise Program_Error;\n       end if;\n \n@@ -7611,8 +7608,7 @@ package body Sem_Ch8 is\n          SST.Is_Transient                   := False;\n          SST.Node_To_Be_Wrapped             := Empty;\n          SST.Pending_Freeze_Actions         := No_List;\n-         SST.Actions_To_Be_Wrapped_Before   := No_List;\n-         SST.Actions_To_Be_Wrapped_After    := No_List;\n+         SST.Actions_To_Be_Wrapped          := (others => No_List);\n          SST.First_Use_Clause               := Empty;\n          SST.Is_Active_Stack_Base           := False;\n          SST.Previous_Visibility            := False;"}, {"sha": "d2a19e24887ce4812cfc9f36d6a1e017786fad6d", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -432,6 +432,14 @@ package body Sinfo is\n       return Node3 (N);\n    end Classifications;\n \n+   function Cleanup_Actions\n+     (N : Node_Id) return List_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Block_Statement);\n+      return List5 (N);\n+   end Cleanup_Actions;\n+\n    function Comes_From_Extended_Return_Statement\n      (N : Node_Id) return Boolean is\n    begin\n@@ -3599,6 +3607,14 @@ package body Sinfo is\n       Set_Node3 (N, Val); -- semantic field, no parent set\n    end Set_Classifications;\n \n+   procedure Set_Cleanup_Actions\n+      (N : Node_Id; Val : List_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Block_Statement);\n+      Set_List5 (N, Val); -- semantic field, no parent set\n+   end Set_Cleanup_Actions;\n+\n    procedure Set_Comes_From_Extended_Return_Statement\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "4c282132abdd63aeec57bf0dde21d90f81ee3bd9", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36295779910f4a972c960a95f8586bcdff4f9fde/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=36295779910f4a972c960a95f8586bcdff4f9fde", "patch": "@@ -832,6 +832,10 @@ package Sinfo is\n    --    the secondary stack and thus the result is passed by reference rather\n    --    than copied another time.\n \n+   --  Cleanup_Actions (List5-Sem)\n+   --    Present in block statements created for transient blocks, contains\n+   --    additional cleanup actions carried over from the transient scope.\n+\n    --  Check_Address_Alignment (Flag11-Sem)\n    --    A flag present in N_Attribute_Definition clause for a 'Address\n    --    attribute definition. This flag is set if a dynamic check should be\n@@ -4731,6 +4735,7 @@ package Sinfo is\n       --  Identifier (Node1) block direct name (set to Empty if not present)\n       --  Declarations (List2) (set to No_List if no DECLARE part)\n       --  Handled_Statement_Sequence (Node4)\n+      --  Cleanup_Actions (List5-Sem)\n       --  Is_Task_Master (Flag5-Sem)\n       --  Activation_Chain_Entity (Node3-Sem)\n       --  Has_Created_Identifier (Flag15)\n@@ -8689,6 +8694,9 @@ package Sinfo is\n    function Classifications\n      (N : Node_Id) return Node_Id;    -- Node3\n \n+   function Cleanup_Actions\n+     (N : Node_Id) return List_Id;    -- List5\n+\n    function Comes_From_Extended_Return_Statement\n      (N : Node_Id) return Boolean;    -- Flag18\n \n@@ -9696,6 +9704,9 @@ package Sinfo is\n    procedure Set_Classifications\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n+   procedure Set_Cleanup_Actions\n+     (N : Node_Id; Val : List_Id);            -- List5\n+\n    procedure Set_Comes_From_Extended_Return_Statement\n      (N : Node_Id; Val : Boolean := True);    -- Flag18\n \n@@ -12369,6 +12380,7 @@ package Sinfo is\n    pragma Inline (Choices);\n    pragma Inline (Class_Present);\n    pragma Inline (Classifications);\n+   pragma Inline (Cleanup_Actions);\n    pragma Inline (Comes_From_Extended_Return_Statement);\n    pragma Inline (Compile_Time_Known_Aggregate);\n    pragma Inline (Component_Associations);\n@@ -12702,6 +12714,7 @@ package Sinfo is\n    pragma Inline (Set_Choices);\n    pragma Inline (Set_Class_Present);\n    pragma Inline (Set_Classifications);\n+   pragma Inline (Set_Cleanup_Actions);\n    pragma Inline (Set_Comes_From_Extended_Return_Statement);\n    pragma Inline (Set_Compile_Time_Known_Aggregate);\n    pragma Inline (Set_Component_Associations);"}]}