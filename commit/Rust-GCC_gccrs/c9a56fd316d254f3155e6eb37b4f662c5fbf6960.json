{"sha": "c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhNTZmZDMxNmQyNTRmMzE1NWU2ZWIzN2I0ZjY2MmM1ZmJmNjk2MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-04-22T10:11:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:27Z"}, "message": "[Ada] Profile mismatch between C and Ada functions\n\n2020-06-18  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* libgnarl/s-osinte__linux.ads, libgnat/g-io.adb,\n\tlibgnat/g-socket.adb, libgnat/g-socthi.adb,\n\tlibgnat/g-socthi.ads, libgnat/g-socthi__vxworks.adb,\n\tlibgnat/g-socthi__vxworks.ads, libgnat/g-sothco.ads,\n\tlibgnat/s-io.adb, libgnat/a-except.adb: Fix function profile\n\tmismatch with imported C functions.", "tree": {"sha": "c94ff5fd2f34969236b7cadd08d594d3ce3097a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c94ff5fd2f34969236b7cadd08d594d3ce3097a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5126ca1fa7796d252c0b418f20d21073e7772508", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5126ca1fa7796d252c0b418f20d21073e7772508", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5126ca1fa7796d252c0b418f20d21073e7772508"}], "stats": {"total": 120, "additions": 60, "deletions": 60}, "files": [{"sha": "f7af00bf5e286b7b5f0f3a1c9013159d484dcfd3", "filename": "gcc/ada/libgnarl/s-osinte__linux.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -278,9 +278,9 @@ package System.OS_Interface is\n    PR_GET_NAME : constant := 16;\n \n    function prctl\n-     (option                 : int;\n-      arg2, arg3, arg4, arg5 : unsigned_long := 0) return int;\n-   pragma Import (C, prctl);\n+     (option : int;\n+      arg    : unsigned_long) return int;\n+   pragma Import (C_Variadic_1, prctl, \"prctl\");\n \n    -------------\n    -- Threads --\n@@ -314,6 +314,8 @@ package System.OS_Interface is\n    -- Stack --\n    -----------\n \n+   subtype char_array is Interfaces.C.char_array;\n+\n    type stack_t is record\n       ss_sp    : System.Address;\n       ss_flags : int;\n@@ -326,13 +328,13 @@ package System.OS_Interface is\n       oss : access stack_t) return int;\n    pragma Import (C, sigaltstack, \"sigaltstack\");\n \n-   Alternate_Stack : aliased System.Address;\n-   pragma Import (C, Alternate_Stack, \"__gnat_alternate_stack\");\n-   --  The alternate signal stack for stack overflows\n-\n    Alternate_Stack_Size : constant := 16 * 1024;\n    --  This must be in keeping with init.c:__gnat_alternate_stack\n \n+   Alternate_Stack : aliased char_array (1 .. Alternate_Stack_Size);\n+   pragma Import (C, Alternate_Stack, \"__gnat_alternate_stack\");\n+   --  The alternate signal stack for stack overflows\n+\n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);\n    --  This is a dummy procedure to share some GNULLI files\n@@ -634,8 +636,6 @@ private\n \n    type pid_t is new int;\n \n-   subtype char_array is Interfaces.C.char_array;\n-\n    type pthread_attr_t is record\n       Data : char_array (1 .. OS_Constants.PTHREAD_ATTR_SIZE);\n    end record;"}, {"sha": "17f3db6e8bcf47be36dff265bd76a3830244b6e9", "filename": "gcc/ada/libgnat/a-except.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-except.adb?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -1660,10 +1660,10 @@ package body Ada.Exceptions is\n    ---------------\n \n    procedure To_Stderr (C : Character) is\n-      procedure Put_Char_Stderr (C : Character);\n+      procedure Put_Char_Stderr (C : Integer);\n       pragma Import (C, Put_Char_Stderr, \"put_char_stderr\");\n    begin\n-      Put_Char_Stderr (C);\n+      Put_Char_Stderr (Character'Pos (C));\n    end To_Stderr;\n \n    procedure To_Stderr (S : String) is"}, {"sha": "c2c1ffa14b0ede972a250e711e0fe0144513f3f6", "filename": "gcc/ada/libgnat/g-io.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-io.adb?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -47,10 +47,10 @@ package body GNAT.IO is\n    end Get;\n \n    procedure Get (C : out Character) is\n-      function Get_Char return Character;\n+      function Get_Char return Integer;\n       pragma Import (C, Get_Char, \"get_char\");\n    begin\n-      C := Get_Char;\n+      C := Character'Val (Get_Char);\n    end Get;\n \n    --------------\n@@ -121,16 +121,16 @@ package body GNAT.IO is\n    end Put;\n \n    procedure Put (File : File_Type; C : Character) is\n-      procedure Put_Char (C : Character);\n+      procedure Put_Char (C : Integer);\n       pragma Import (C, Put_Char, \"put_char\");\n \n-      procedure Put_Char_Stderr (C : Character);\n+      procedure Put_Char_Stderr (C : Integer);\n       pragma Import (C, Put_Char_Stderr, \"put_char_stderr\");\n \n    begin\n       case File is\n-         when Stdout => Put_Char (C);\n-         when Stderr => Put_Char_Stderr (C);\n+         when Stdout => Put_Char (Character'Pos (C));\n+         when Stderr => Put_Char_Stderr (Character'Pos (C));\n       end case;\n    end Put;\n "}, {"sha": "1b8032c95473eb688c29bfca39d68adf8179340c", "filename": "gcc/ada/libgnat/g-socket.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socket.adb?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -1222,7 +1222,7 @@ package body GNAT.Sockets is\n       pragma Unreferenced (Family);\n \n       HA     : aliased In_Addr_Union (Address.Family);\n-      Buflen : constant C.int := Netdb_Buffer_Size;\n+      Buflen : constant C.size_t := Netdb_Buffer_Size;\n       Buf    : aliased C.char_array (1 .. Netdb_Buffer_Size);\n       Res    : aliased Hostent;\n       Err    : aliased C.int;\n@@ -1277,7 +1277,7 @@ package body GNAT.Sockets is\n \n       declare\n          HN     : constant C.char_array := C.To_C (Name);\n-         Buflen : constant C.int := Netdb_Buffer_Size;\n+         Buflen : constant C.size_t := Netdb_Buffer_Size;\n          Buf    : aliased C.char_array (1 .. Netdb_Buffer_Size);\n          Res    : aliased Hostent;\n          Err    : aliased C.int;\n@@ -1325,7 +1325,7 @@ package body GNAT.Sockets is\n    is\n       SN     : constant C.char_array := C.To_C (Name);\n       SP     : constant C.char_array := C.To_C (Protocol);\n-      Buflen : constant C.int := Netdb_Buffer_Size;\n+      Buflen : constant C.size_t := Netdb_Buffer_Size;\n       Buf    : aliased C.char_array (1 .. Netdb_Buffer_Size);\n       Res    : aliased Servent;\n \n@@ -1355,7 +1355,7 @@ package body GNAT.Sockets is\n       Protocol : String) return Service_Entry_Type\n    is\n       SP     : constant C.char_array := C.To_C (Protocol);\n-      Buflen : constant C.int := Netdb_Buffer_Size;\n+      Buflen : constant C.size_t := Netdb_Buffer_Size;\n       Buf    : aliased C.char_array (1 .. Netdb_Buffer_Size);\n       Res    : aliased Servent;\n "}, {"sha": "5d86993eef16b062f2c8df5cb878a6a8b4533a12", "filename": "gcc/ada/libgnat/g-socthi.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socthi.adb?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -74,17 +74,17 @@ package body GNAT.Sockets.Thin is\n    function Syscall_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n+      Len   : C.size_t;\n+      Flags : C.int) return System.CRTL.ssize_t;\n    pragma Import (C, Syscall_Recv, \"recv\");\n \n    function Syscall_Recvfrom\n      (S       : C.int;\n       Msg     : System.Address;\n-      Len     : C.int;\n+      Len     : C.size_t;\n       Flags   : C.int;\n       From    : System.Address;\n-      Fromlen : not null access C.int) return C.int;\n+      Fromlen : not null access C.int) return System.CRTL.ssize_t;\n    pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n \n    function Syscall_Recvmsg\n@@ -102,10 +102,10 @@ package body GNAT.Sockets.Thin is\n    function Syscall_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int;\n       To    : System.Address;\n-      Tolen : C.int) return C.int;\n+      Tolen : C.int) return System.CRTL.ssize_t;\n    pragma Import (C, Syscall_Sendto, \"sendto\");\n \n    function Syscall_Socket\n@@ -250,14 +250,14 @@ package body GNAT.Sockets.Thin is\n    function C_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int) return C.int\n    is\n       Res : C.int;\n \n    begin\n       loop\n-         Res := Syscall_Recv (S, Msg, Len, Flags);\n+         Res := C.int (Syscall_Recv (S, Msg, Len, Flags));\n          exit when SOSC.Thread_Blocking_IO\n            or else Res /= Failure\n            or else Non_Blocking_Socket (S)\n@@ -275,7 +275,7 @@ package body GNAT.Sockets.Thin is\n    function C_Recvfrom\n      (S       : C.int;\n       Msg     : System.Address;\n-      Len     : C.int;\n+      Len     : C.size_t;\n       Flags   : C.int;\n       From    : System.Address;\n       Fromlen : not null access C.int) return C.int\n@@ -284,7 +284,7 @@ package body GNAT.Sockets.Thin is\n \n    begin\n       loop\n-         Res := Syscall_Recvfrom (S, Msg, Len, Flags, From, Fromlen);\n+         Res := C.int (Syscall_Recvfrom (S, Msg, Len, Flags, From, Fromlen));\n          exit when SOSC.Thread_Blocking_IO\n            or else Res /= Failure\n            or else Non_Blocking_Socket (S)\n@@ -350,7 +350,7 @@ package body GNAT.Sockets.Thin is\n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int;\n       To    : System.Address;\n       Tolen : C.int) return C.int\n@@ -359,7 +359,7 @@ package body GNAT.Sockets.Thin is\n \n    begin\n       loop\n-         Res := Syscall_Sendto (S, Msg, Len, Flags, To, Tolen);\n+         Res := C.int (Syscall_Sendto (S, Msg, Len, Flags, To, Tolen));\n          exit when SOSC.Thread_Blocking_IO\n            or else Res /= Failure\n            or else Non_Blocking_Socket (S)"}, {"sha": "c6a07ba69086e0b0e6babe25bc9b7b58a6722b7c", "filename": "gcc/ada/libgnat/g-socthi.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socthi.ads?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -98,7 +98,7 @@ package GNAT.Sockets.Thin is\n \n    function C_Gethostname\n      (Name    : System.Address;\n-      Namelen : C.int) return C.int;\n+      Namelen : C.size_t) return C.int;\n \n    function C_Getpeername\n      (S       : C.int;\n@@ -129,13 +129,13 @@ package GNAT.Sockets.Thin is\n    function C_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int) return C.int;\n \n    function C_Recvfrom\n      (S       : C.int;\n       Msg     : System.Address;\n-      Len     : C.int;\n+      Len     : C.size_t;\n       Flags   : C.int;\n       From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n@@ -160,7 +160,7 @@ package GNAT.Sockets.Thin is\n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int;\n       To    : System.Address;\n       Tolen : C.int) return C.int;"}, {"sha": "548b9d3f623fc4425fb42f16decb9d23fff11b73", "filename": "gcc/ada/libgnat/g-socthi__vxworks.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socthi__vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socthi__vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socthi__vxworks.adb?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -78,14 +78,14 @@ package body GNAT.Sockets.Thin is\n    function Syscall_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int) return C.int;\n    pragma Import (C, Syscall_Recv, \"recv\");\n \n    function Syscall_Recvfrom\n      (S       : C.int;\n       Msg     : System.Address;\n-      Len     : C.int;\n+      Len     : C.size_t;\n       Flags   : C.int;\n       From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n@@ -106,17 +106,17 @@ package body GNAT.Sockets.Thin is\n    function Syscall_Send\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n+      Len   : C.size_t;\n+      Flags : C.int) return System.CRTL.ssize_t;\n    pragma Import (C, Syscall_Send, \"send\");\n \n    function Syscall_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int;\n       To    : System.Address;\n-      Tolen : C.int) return C.int;\n+      Tolen : C.int) return System.CRTL.ssize_t;\n    pragma Import (C, Syscall_Sendto, \"sendto\");\n \n    function Syscall_Socket\n@@ -252,7 +252,7 @@ package body GNAT.Sockets.Thin is\n    function C_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int) return C.int\n    is\n       Res : C.int;\n@@ -277,7 +277,7 @@ package body GNAT.Sockets.Thin is\n    function C_Recvfrom\n      (S       : C.int;\n       Msg     : System.Address;\n-      Len     : C.int;\n+      Len     : C.size_t;\n       Flags   : C.int;\n       From    : System.Address;\n       Fromlen : not null access C.int) return C.int\n@@ -352,7 +352,7 @@ package body GNAT.Sockets.Thin is\n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int;\n       To    : System.Address;\n       Tolen : C.int) return C.int\n@@ -369,12 +369,12 @@ package body GNAT.Sockets.Thin is\n             --  support sendto(2) calls on connected sockets with a null\n             --  destination address, so use send(2) instead in that case.\n \n-            Res := Syscall_Send (S, Msg, Len, Flags);\n+            Res := C.int (Syscall_Send (S, Msg, Len, Flags));\n \n          --  Normal case where destination address is non-null\n \n          else\n-            Res := Syscall_Sendto (S, Msg, Len, Flags, To, Tolen);\n+            Res := C.int (Syscall_Sendto (S, Msg, Len, Flags, To, Tolen));\n          end if;\n \n          exit when SOSC.Thread_Blocking_IO"}, {"sha": "704ec0ade533d4be05328718c1fa814101117eac", "filename": "gcc/ada/libgnat/g-socthi__vxworks.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socthi__vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-socthi__vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socthi__vxworks.ads?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -95,7 +95,7 @@ package GNAT.Sockets.Thin is\n \n    function C_Gethostname\n      (Name    : System.Address;\n-      Namelen : C.int) return C.int;\n+      Namelen : C.size_t) return C.int;\n \n    function C_Getpeername\n      (S       : C.int;\n@@ -126,13 +126,13 @@ package GNAT.Sockets.Thin is\n    function C_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int) return C.int;\n \n    function C_Recvfrom\n      (S       : C.int;\n       Msg     : System.Address;\n-      Len     : C.int;\n+      Len     : C.size_t;\n       Flags   : C.int;\n       From    : System.Address;\n       Fromlen : not null access C.int) return C.int;\n@@ -157,7 +157,7 @@ package GNAT.Sockets.Thin is\n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n-      Len   : C.int;\n+      Len   : C.size_t;\n       Flags : C.int;\n       To    : System.Address;\n       Tolen : C.int) return C.int;"}, {"sha": "e30af189d3aedb726b367ea97338009620829a14", "filename": "gcc/ada/libgnat/g-sothco.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sothco.ads?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -281,7 +281,7 @@ package GNAT.Sockets.Thin_Common is\n      (Name     : C.char_array;\n       Ret      : not null access Hostent;\n       Buf      : System.Address;\n-      Buflen   : C.int;\n+      Buflen   : C.size_t;\n       H_Errnop : not null access C.int) return C.int;\n \n    function C_Gethostbyaddr\n@@ -290,22 +290,22 @@ package GNAT.Sockets.Thin_Common is\n       Addr_Type : C.int;\n       Ret       : not null access Hostent;\n       Buf       : System.Address;\n-      Buflen    : C.int;\n+      Buflen    : C.size_t;\n       H_Errnop  : not null access C.int) return C.int;\n \n    function C_Getservbyname\n      (Name   : C.char_array;\n       Proto  : C.char_array;\n       Ret    : not null access Servent;\n       Buf    : System.Address;\n-      Buflen : C.int) return C.int;\n+      Buflen : C.size_t) return C.int;\n \n    function C_Getservbyport\n      (Port   : C.int;\n       Proto  : C.char_array;\n       Ret    : not null access Servent;\n       Buf    : System.Address;\n-      Buflen : C.int) return C.int;\n+      Buflen : C.size_t) return C.int;\n \n    Address_Size : constant := Standard'Address_Size;\n "}, {"sha": "23301e9c88396eff23a6f941cd7a83ca13c1e99e", "filename": "gcc/ada/libgnat/s-io.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fs-io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a56fd316d254f3155e6eb37b4f662c5fbf6960/gcc%2Fada%2Flibgnat%2Fs-io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-io.adb?ref=c9a56fd316d254f3155e6eb37b4f662c5fbf6960", "patch": "@@ -65,16 +65,16 @@ package body System.IO is\n    end Put;\n \n    procedure Put (C : Character) is\n-      procedure Put_Char (C : Character);\n+      procedure Put_Char (C : Integer);\n       pragma Import (C, Put_Char, \"put_char\");\n \n-      procedure Put_Char_Stderr (C : Character);\n+      procedure Put_Char_Stderr (C : Integer);\n       pragma Import (C, Put_Char_Stderr, \"put_char_stderr\");\n \n    begin\n       case Current_Out is\n-         when Stdout => Put_Char (C);\n-         when Stderr => Put_Char_Stderr (C);\n+         when Stdout => Put_Char (Character'Pos (C));\n+         when Stderr => Put_Char_Stderr (Character'Pos (C));\n       end case;\n    end Put;\n "}]}