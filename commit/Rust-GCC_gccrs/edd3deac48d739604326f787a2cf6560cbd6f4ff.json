{"sha": "edd3deac48d739604326f787a2cf6560cbd6f4ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRkM2RlYWM0OGQ3Mzk2MDQzMjZmNzg3YTJjZjY1NjBjYmQ2ZjRmZg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-06-19T13:56:45Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-06-19T13:56:45Z"}, "message": "vshll_n.c: New file.\n\n2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vshll_n.c: New file.\n\nFrom-SVN: r224662", "tree": {"sha": "a7afd015e6d193d610d996a7b8bd8d0d065cbd3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7afd015e6d193d610d996a7b8bd8d0d065cbd3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edd3deac48d739604326f787a2cf6560cbd6f4ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd3deac48d739604326f787a2cf6560cbd6f4ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edd3deac48d739604326f787a2cf6560cbd6f4ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd3deac48d739604326f787a2cf6560cbd6f4ff/comments", "author": null, "committer": null, "parents": [{"sha": "ca06e09f3dd96a340b58aaee76a235458bab4325", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca06e09f3dd96a340b58aaee76a235458bab4325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca06e09f3dd96a340b58aaee76a235458bab4325"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "9f9642ff565b5791d440313154de881a8acc4518", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd3deac48d739604326f787a2cf6560cbd6f4ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd3deac48d739604326f787a2cf6560cbd6f4ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=edd3deac48d739604326f787a2cf6560cbd6f4ff", "patch": "@@ -1,3 +1,7 @@\n+2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vshll_n.c: New file.\n+\n 2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vset_lane.c: New file."}, {"sha": "07bc904d0d14538319d467e53f6f6271e17c66e4", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vshll_n.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd3deac48d739604326f787a2cf6560cbd6f4ff/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshll_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd3deac48d739604326f787a2cf6560cbd6f4ff/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshll_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvshll_n.c?ref=edd3deac48d739604326f787a2cf6560cbd6f4ff", "patch": "@@ -0,0 +1,56 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xffe0, 0xffe2, 0xffe4, 0xffe6,\n+\t\t\t\t\t0xffe8, 0xffea, 0xffec, 0xffee };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffffe0, 0xffffffe2,\n+\t\t\t\t\t0xffffffe4, 0xffffffe6 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xffffffffffffff80, 0xffffffffffffff88 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x3c0, 0x3c4, 0x3c8, 0x3cc,\n+\t\t\t\t\t 0x3d0, 0x3d4, 0x3d8, 0x3dc };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xfff00, 0xfff10, 0xfff20, 0xfff30 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x7ffffff80, 0x7ffffff88 };\n+\n+#define TEST_MSG \"VSHLL_N\"\n+void exec_vshll_n (void)\n+{\n+  /* Basic test: v2=vshll_n(v1,v), then store the result.  */\n+#define TEST_VSHLL_N(T1, T2, W, W2, N, V)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    vshll##_n_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\\\n+\t\t      V);\t\t\t\t\t\t\\\n+  vst1q##_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+  DECL_VARIABLE_ALL_VARIANTS(vector);\n+  DECL_VARIABLE_ALL_VARIANTS(vector_res);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector\" from \"buffer\".  */\n+  TEST_MACRO_ALL_VARIANTS_2_5(VLOAD, vector, buffer);\n+\n+  /* Choose shift amount arbitrarily.  */\n+  TEST_VSHLL_N(int, s, 8, 16, 8, 1);\n+  TEST_VSHLL_N(int, s, 16, 32, 4, 1);\n+  TEST_VSHLL_N(int, s, 32, 64, 2, 3);\n+  TEST_VSHLL_N(uint, u, 8, 16, 8, 2);\n+  TEST_VSHLL_N(uint, u, 16, 32, 4, 4);\n+  TEST_VSHLL_N(uint, u, 32, 64, 2, 3);\n+\n+#undef CMT\n+#define CMT \"\"\n+  CHECK(TEST_MSG, int, 16, 8, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, CMT);\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected, CMT);\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, CMT);\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx64, expected, CMT);\n+}\n+\n+int main (void)\n+{\n+  exec_vshll_n ();\n+  return 0;\n+}"}]}