{"sha": "41fd0f9b8037dba308b6ed075468a333708da228", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFmZDBmOWI4MDM3ZGJhMzA4YjZlZDA3NTQ2OGEzMzM3MDhkYTIyOA==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2009-04-16T12:57:50Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-04-16T12:57:50Z"}, "message": "common.opt (fversion): New.\n\n2009-04-16  Rafael Avila de Espindola  <espindola@google.com>\n\n\t* common.opt (fversion): New.\n\t* gcc.c (print_version): New.\n\t(process_command): Don't print the version. Just set print_version.\n\t(main): Print version. Call subprocesses if print_version and\n\tverbose_flag are set.\n\t* opts.c (common_handle_option): Handle OPT_fversion.\n\nFrom-SVN: r146183", "tree": {"sha": "880209f07ea612d1ce7811a96cabe4898bce80b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/880209f07ea612d1ce7811a96cabe4898bce80b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41fd0f9b8037dba308b6ed075468a333708da228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41fd0f9b8037dba308b6ed075468a333708da228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41fd0f9b8037dba308b6ed075468a333708da228", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41fd0f9b8037dba308b6ed075468a333708da228/comments", "author": null, "committer": null, "parents": [{"sha": "d15d61c671cb02b6dce9d583962750875e3178e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15d61c671cb02b6dce9d583962750875e3178e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d15d61c671cb02b6dce9d583962750875e3178e9"}], "stats": {"total": 58, "additions": 48, "deletions": 10}, "files": [{"sha": "cd6b608eed9b6ce287e9f1001b7a1a3519d60d0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd0f9b8037dba308b6ed075468a333708da228/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd0f9b8037dba308b6ed075468a333708da228/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41fd0f9b8037dba308b6ed075468a333708da228", "patch": "@@ -1,3 +1,12 @@\n+2009-04-16  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* common.opt (fversion): New.\n+\t* gcc.c (print_version): New.\n+\t(process_command): Don't print the version. Just set print_version.\n+\t(main): Print version. Call subprocesses if print_version and\n+\tverbose_flag are set.\n+\t* opts.c (common_handle_option): Handle OPT_fversion.\n+\n 2009-04-16  Richard Guenther  <rguenther@suse.de>\n \tIra Rosen  <irar@il.ibm.com>\n "}, {"sha": "c6903b60d71b0a5f6d061d89a473b6b205851c98", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd0f9b8037dba308b6ed075468a333708da228/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd0f9b8037dba308b6ed075468a333708da228/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=41fd0f9b8037dba308b6ed075468a333708da228", "patch": "@@ -35,7 +35,7 @@ Common Report Joined\n Common\n Alias for --help=target\n \n-;; The following three entries are to work around the gcc driver\n+;; The following four entries are to work around the gcc driver\n ;; program's insatiable desire to turn options starting with a\n ;; double dash (--) into options starting with a dash f (-f).\n fhelp\n@@ -47,6 +47,9 @@ Common Joined\n ftarget-help\n Common\n \n+fversion\n+Common\n+\n -param\n Common Separate\n --param <param>=<value>\tSet parameter <param> to value.  See below for a complete list of parameters"}, {"sha": "5c697ea0146a507540b09bc6712eef5963fddb3d", "filename": "gcc/gcc.c", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd0f9b8037dba308b6ed075468a333708da228/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd0f9b8037dba308b6ed075468a333708da228/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=41fd0f9b8037dba308b6ed075468a333708da228", "patch": "@@ -169,6 +169,10 @@ static int print_multi_lib;\n \n static int print_help_list;\n \n+/* Flag saying to print the version of gcc and its sub-processes.  */\n+\n+static int print_version;\n+\n /* Flag saying to print the sysroot suffix used for searching for\n    headers.  */\n \n@@ -3650,14 +3654,17 @@ process_command (int argc, const char **argv)\n       else if (strcmp (argv[i], \"-fversion\") == 0)\n \t{\n \t  /* translate_options () has turned --version into -fversion.  */\n-\t  printf (_(\"%s %s%s\\n\"), programname, pkgversion_string,\n-\t\t  version_string);\n-\t  printf (\"Copyright %s 2009 Free Software Foundation, Inc.\\n\",\n-\t\t  _(\"(C)\"));\n-\t  fputs (_(\"This is free software; see the source for copying conditions.  There is NO\\n\\\n-warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"),\n-\t\t stdout);\n-\t  exit (0);\n+\t  print_version = 1;\n+\n+\t  /* We will be passing a dummy file on to the sub-processes.  */\n+\t  n_infiles++;\n+\t  n_switches++;\n+\n+\t  /* CPP driver cannot obtain switch from cc1_options.  */\n+\t  if (is_cpp_driver)\n+\t    add_preprocessor_option (\"--version\", strlen (\"--version\"));\n+\t  add_assembler_option (\"--version\", strlen (\"--version\"));\n+\t  add_linker_option (\"--version\", strlen (\"--version\"));\n \t}\n       else if (strcmp (argv[i], \"-fhelp\") == 0)\n \t{\n@@ -4364,7 +4371,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n     error (\"warning: '-x %s' after last input file has no effect\", spec_lang);\n \n   /* Ensure we only invoke each subprocess once.  */\n-  if (print_subprocess_help || print_help_list)\n+  if (print_subprocess_help || print_help_list || print_version)\n     {\n       n_infiles = 1;\n \n@@ -6667,6 +6674,24 @@ main (int argc, char **argv)\n       fflush (stdout);\n     }\n \n+  if (print_version)\n+    {\n+      printf (_(\"%s %s%s\\n\"), programname, pkgversion_string,\n+\t      version_string);\n+      printf (\"Copyright %s 2009 Free Software Foundation, Inc.\\n\",\n+\t      _(\"(C)\"));\n+      fputs (_(\"This is free software; see the source for copying conditions.  There is NO\\n\\\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"),\n+\t     stdout);\n+      if (! verbose_flag)\n+\treturn 0;\n+\n+      /* We do not exit here. We use the same mechanism of --help to print\n+\t the version of the sub-processes. */\n+      fputc ('\\n', stdout);\n+      fflush (stdout);\n+    }\n+\n   if (verbose_flag)\n     {\n       int n;"}, {"sha": "352ed5a5b714fe6adf2e3c33b00e632b9e3342bd", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41fd0f9b8037dba308b6ed075468a333708da228/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41fd0f9b8037dba308b6ed075468a333708da228/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=41fd0f9b8037dba308b6ed075468a333708da228", "patch": "@@ -1561,6 +1561,7 @@ common_handle_option (size_t scode, const char *arg, int value,\n \tbreak;\n       }\n \n+    case OPT_fversion:\n     case OPT__version:\n       print_version (stderr, \"\");\n       exit_after_options = true;"}]}