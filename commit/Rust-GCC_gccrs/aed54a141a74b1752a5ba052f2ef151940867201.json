{"sha": "aed54a141a74b1752a5ba052f2ef151940867201", "node_id": "C_kwDOANBUbNoAKGFlZDU0YTE0MWE3NGIxNzUyYTViYTA1MmYyZWYxNTE5NDA4NjcyMDE", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-08-09T16:51:41Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-06T07:14:21Z"}, "message": "[Ada] Document change to legality checks for Inox case statements\n\nINOX (which is enabled via -gnatX) supports composite case-statement selectors.\nAs a temporary measure, simplify the coverage-related compile-time checks\nfor such case statements via two changes: an others choice is always\nrequired for such a case statement, and no legality checks relating to\noverlapping of case choices are performed.\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_pragmas.rst: Document new\n\ttemporary rule that a \"when others =>\" case choice must be given\n\twhen casing on a composite selector.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "19b4c45434202b77cd75f3f54f27ea161f1918c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19b4c45434202b77cd75f3f54f27ea161f1918c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aed54a141a74b1752a5ba052f2ef151940867201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed54a141a74b1752a5ba052f2ef151940867201", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aed54a141a74b1752a5ba052f2ef151940867201", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed54a141a74b1752a5ba052f2ef151940867201/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dbaf0d99c37024dcfafa73366c32a206e8f21a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dbaf0d99c37024dcfafa73366c32a206e8f21a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dbaf0d99c37024dcfafa73366c32a206e8f21a2"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "623949e907cc0bd3a96b42e5aa6ca69f558d51c8", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed54a141a74b1752a5ba052f2ef151940867201/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed54a141a74b1752a5ba052f2ef151940867201/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=aed54a141a74b1752a5ba052f2ef151940867201", "patch": "@@ -2262,7 +2262,8 @@ of GNAT specific extensions are recognized as follows:\n   will not be executed if the earlier alternative \"matches\"). All possible\n   values of the composite type shall be covered. The composite type of the\n   selector shall be an array or record type that is neither limited\n-  class-wide.\n+  class-wide. Currently, a \"when others =>\" case choice is required; it is\n+  intended that this requirement will be relaxed at some point.\n \n   If a subcomponent's subtype does not meet certain restrictions, then\n   the only value that can be specified for that subcomponent in a case"}, {"sha": "d143875bc6de5a5abf6bce7442b285e71a405b6a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed54a141a74b1752a5ba052f2ef151940867201/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed54a141a74b1752a5ba052f2ef151940867201/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=aed54a141a74b1752a5ba052f2ef151940867201", "patch": "@@ -3717,7 +3717,8 @@ set shall be a proper subset of the second (and the later alternative\n will not be executed if the earlier alternative \u201cmatches\u201d). All possible\n values of the composite type shall be covered. The composite type of the\n selector shall be an array or record type that is neither limited\n-class-wide.\n+class-wide. Currently, a \u201cwhen others =>\u201d case choice is required; it is\n+intended that this requirement will be relaxed at some point.\n \n If a subcomponent\u2019s subtype does not meet certain restrictions, then\n the only value that can be specified for that subcomponent in a case"}]}