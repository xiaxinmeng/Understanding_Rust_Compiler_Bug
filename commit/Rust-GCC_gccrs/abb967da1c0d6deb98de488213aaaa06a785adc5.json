{"sha": "abb967da1c0d6deb98de488213aaaa06a785adc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJiOTY3ZGExYzBkNmRlYjk4ZGU0ODgyMTNhYWFhMDZhNzg1YWRjNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2018-10-26T09:32:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-10-26T09:32:47Z"}, "message": "ipa-devirt.c (odr_subtypes_equivalent_p): Fix recursion.\n\n\n\t* ipa-devirt.c (odr_subtypes_equivalent_p): Fix recursion.\n\t(warn_types_mismatch): Fix walk of DECL_NAME.\n\t(odr_types_equivalent_p): Fix overactive assert.\n\t* lto/lto-symtab.c (lto_symtab_merge_decls_2): Fix extra space.\n\n\t* g++.dg/lto/odr-1_0.C: Fix template.\n\t* g++.dg/lto/odr-1_1.C: Fix template.\n\nFrom-SVN: r265523", "tree": {"sha": "0364fb377420f21af8a467863bd493d85edea497", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0364fb377420f21af8a467863bd493d85edea497"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abb967da1c0d6deb98de488213aaaa06a785adc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb967da1c0d6deb98de488213aaaa06a785adc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb967da1c0d6deb98de488213aaaa06a785adc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb967da1c0d6deb98de488213aaaa06a785adc5/comments", "author": null, "committer": null, "parents": [{"sha": "a1f072e2441c58f6a486f90bb9a32bd5f6c51cb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1f072e2441c58f6a486f90bb9a32bd5f6c51cb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1f072e2441c58f6a486f90bb9a32bd5f6c51cb4"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "57876065a666f5cffe4f0ea9d65a09e74bb30da3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=abb967da1c0d6deb98de488213aaaa06a785adc5", "patch": "@@ -1,3 +1,9 @@\n+2018-10-26  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-devirt.c (odr_subtypes_equivalent_p): Fix recursion.\n+\t(warn_types_mismatch): Fix walk of DECL_NAME.\n+\t(odr_types_equivalent_p): Fix overactive assert.\n+\n 2018-10-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87105"}, {"sha": "d92e6f42f3ebb91eafedf6ff7cf439ff7c347b7d", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=abb967da1c0d6deb98de488213aaaa06a785adc5", "patch": "@@ -719,9 +719,10 @@ odr_subtypes_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n     }\n   if (visited->add (pair))\n     return true;\n-  if (odr_types_equivalent_p (TYPE_MAIN_VARIANT (t1), TYPE_MAIN_VARIANT (t2),\n-\t\t\t      false, NULL, visited, loc1, loc2)\n-      && !type_variants_equivalent_p (t1, t2, warn, warned))\n+  if (!odr_types_equivalent_p (TYPE_MAIN_VARIANT (t1), TYPE_MAIN_VARIANT (t2),\n+\t\t\t      false, NULL, visited, loc1, loc2))\n+    return false;\n+  if (!type_variants_equivalent_p (t1, t2, warn, warned))\n     return false;\n   return true;\n }\n@@ -1138,7 +1139,7 @@ warn_types_mismatch (tree t1, tree t2, location_t loc1, location_t loc2)\n       if (TREE_CODE (n1) == TYPE_DECL)\n \tn1 = DECL_NAME (n1);\n       if (TREE_CODE (n2) == TYPE_DECL)\n-\tn1 = DECL_NAME (n2);\n+\tn2 = DECL_NAME (n2);\n       /* Most of the time, the type names will match, do not be unnecesarily\n          verbose.  */\n       if (IDENTIFIER_POINTER (n1) != IDENTIFIER_POINTER (n2))\n@@ -1292,10 +1293,6 @@ odr_types_equivalent_p (tree t1, tree t2, bool warn, bool *warned,\n   /* Check first for the obvious case of pointer identity.  */\n   if (t1 == t2)\n     return true;\n-  gcc_assert (!type_with_linkage_p (TYPE_MAIN_VARIANT (t1))\n-\t      || !type_in_anonymous_namespace_p (TYPE_MAIN_VARIANT (t1)));\n-  gcc_assert (!type_with_linkage_p (TYPE_MAIN_VARIANT (t2))\n-\t      || !type_in_anonymous_namespace_p (TYPE_MAIN_VARIANT (t2)));\n \n   /* Can't be the same type if the types don't have the same code.  */\n   if (TREE_CODE (t1) != TREE_CODE (t2))"}, {"sha": "a5d1ff2a0241d748d2ea4dfdea7d0f2fd4419e64", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=abb967da1c0d6deb98de488213aaaa06a785adc5", "patch": "@@ -1,3 +1,7 @@\n+2018-10-26  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto/lto-symtab.c (lto_symtab_merge_decls_2): Fix extra space.\n+\n 2018-10-17  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Make-lang.in (selftest-lto): New."}, {"sha": "4b24b84774df8e030b781d8e3f4bad3aaee2a7e5", "filename": "gcc/lto/lto-symtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Flto%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Flto%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-symtab.c?ref=abb967da1c0d6deb98de488213aaaa06a785adc5", "patch": "@@ -698,7 +698,7 @@ lto_symtab_merge_decls_2 (symtab_node *first, bool diagnosed_p)\n \t  if (level & 2)\n \t    diag = warning_at (DECL_SOURCE_LOCATION (decl),\n \t\t\t       OPT_Wodr,\n-\t\t\t       \"%qD violates the C++ One Definition Rule \",\n+\t\t\t       \"%qD violates the C++ One Definition Rule\",\n \t\t\t       decl);\n \t  if (!diag && (level & 1))\n \t    diag = warning_at (DECL_SOURCE_LOCATION (decl),"}, {"sha": "5dab9a853ecd09e318d53af565d2950b73d89971", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=abb967da1c0d6deb98de488213aaaa06a785adc5", "patch": "@@ -1,3 +1,8 @@\n+2018-10-26  Jan Hubicka  <jh@suse.cz>\n+\n+\t* g++.dg/lto/odr-1_0.C: Fix template.\n+\t* g++.dg/lto/odr-1_1.C: Fix template.\n+\n 2018-10-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87105"}, {"sha": "7967e1d895ec091fd9514b3e35fe29bd07fb9535", "filename": "gcc/testsuite/g++.dg/lto/odr-1_0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-1_0.C?ref=abb967da1c0d6deb98de488213aaaa06a785adc5", "patch": "@@ -3,6 +3,6 @@\n struct a { // { dg-lto-warning \"8: type 'struct a' violates the C\\\\+\\\\+ One Definition Rule\" }\n   struct b *ptr; // { dg-lto-message \"13: the first difference of corresponding definitions is field 'ptr'\" }\n };\n-void test(struct a *) // { dg-lto-warning \"6: warning: 'test' violates the C\\\\+\\\\+ One Definition Rule\" }\n+void test(struct a *)\n {\n }"}, {"sha": "ef2f55a69aaa1e4cb976325a9d81783e63961b53", "filename": "gcc/testsuite/g++.dg/lto/odr-1_1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-1_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abb967da1c0d6deb98de488213aaaa06a785adc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-1_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fodr-1_1.C?ref=abb967da1c0d6deb98de488213aaaa06a785adc5", "patch": "@@ -4,7 +4,7 @@ namespace {\n struct a {\n   struct b *ptr;\n };\n-void test(struct a *);\n+void test(struct a *); // { dg-lto-warning \"6: 'test' violates the C\\\\+\\\\+ One Definition Rule\" }\n int\n main(void)\n {"}]}