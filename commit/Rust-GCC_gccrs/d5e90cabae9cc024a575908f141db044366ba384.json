{"sha": "d5e90cabae9cc024a575908f141db044366ba384", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVlOTBjYWJhZTljYzAyNGE1NzU5MDhmMTQxZGIwNDQzNjZiYTM4NA==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2009-04-09T17:23:18Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2009-04-09T17:23:18Z"}, "message": "help.exp: New file.\n\ngcc/testsuite/\n\t* gcc.misc-tests/help.exp: New file.\n\t* lib/options.exp: New file.\n\nCo-Authored-By: Rafael Avila de Espindola <espindola@google.com>\n\nFrom-SVN: r145851", "tree": {"sha": "2a0a3e4cb4780749fda781750967f58013ef3d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a0a3e4cb4780749fda781750967f58013ef3d1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5e90cabae9cc024a575908f141db044366ba384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e90cabae9cc024a575908f141db044366ba384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e90cabae9cc024a575908f141db044366ba384", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e90cabae9cc024a575908f141db044366ba384/comments", "author": null, "committer": null, "parents": [{"sha": "750d4b2e0f98eebbfd12eb8aeb458299da38b5cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750d4b2e0f98eebbfd12eb8aeb458299da38b5cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750d4b2e0f98eebbfd12eb8aeb458299da38b5cf"}], "stats": {"total": 155, "additions": 155, "deletions": 0}, "files": [{"sha": "96bfba48540f347104fe2c2eb769021fd270a011", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e90cabae9cc024a575908f141db044366ba384/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e90cabae9cc024a575908f141db044366ba384/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5e90cabae9cc024a575908f141db044366ba384", "patch": "@@ -1,3 +1,9 @@\n+2009-04-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\t    Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* gcc.misc-tests/help.exp: New file.\n+\t* lib/options.exp: New file.\n+\n 2009-04-09  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR libobjc/36610"}, {"sha": "6c38c8fed387478a12282d232eb8ed808fb82032", "filename": "gcc/testsuite/gcc.misc-tests/help.exp", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e90cabae9cc024a575908f141db044366ba384/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e90cabae9cc024a575908f141db044366ba384/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp?ref=d5e90cabae9cc024a575908f141db044366ba384", "patch": "@@ -0,0 +1,80 @@\n+# Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This file contains a set of test that check that gcc options are\n+# documented in --help, and that the various --help* options work.\n+\n+load_lib options.exp\n+\n+# Document --version.  Ideally, there should be no undocumented switches\n+# in --help.\n+check_for_options c \"--help\" \"--version\" \"This switch lacks documentation\" \"\"\n+\n+# Output from different subprocesses should not be intermingled\n+# (we check for some patterns that could be seen with a missing\n+# fflush in gcc.c).\n+check_for_options c \"-v --help\" \"\" {\n+[^\\n]The following options\n+-Wconversion[^\\n]*lacks documentation\n+\"  -g  \"\n+} \"\"\n+\n+# There are still undocumented switches in -v --help.\n+check_for_options c \"-v --help\" \"\" \"This switch lacks documentation\" \"xfail\"\n+\n+# Check whether multiline conversion in optc-gen is broken.\n+check_for_options c \"-v --help\" \"\" {are likely to\\n  -std} \"\"\n+\n+# Try various --help= classes and qualifiers.\n+check_for_options c \"--help=optimizers\" \"-O\" \"  -g  \" \"\"\n+check_for_options c \"--help=params\" \"maximum number of\" \"-Wunsafe-loop-optimizations\" \"\"\n+check_for_options c \"--help=C\" \"-ansi\" \"-gnatO\" \"\"\n+check_for_options c {--help=C++} {-std=c\\+\\+} \"-gnatO\" \"\"\n+check_for_options c \"--help=common\" \"-dumpbase\" \"-gnatO\" \"\"\n+check_for_options c \"--help=undocumented\" \"This switch lacks documentation\" \"\" \"\"\n+\n+# Undocumented flags are not yet consistently marked as such.\n+check_for_options c \"--help=^undocumented\" \"-Wall\" \"This switch lacks documentation\" \"xfail\"\n+\n+# Try some --help=* examples from the manual.\n+check_for_options c \"--help=target,undocumented\" \"\" \"\" \"\"\n+check_for_options c \"--help=target,optimizers\" \"\" \"\" \"\"\n+check_for_options c \"--help=warnings,^joined,^undocumented\" \"\" \"\" \"\"\n+check_for_options c \"-Q -O2 --help=optimizers\" {\n+-O\n+-ftree-vectorize[^\\n]*disabled\n+} \"  -g  \" \"\"\n+check_for_options c \"-Q -O3 --help=optimizers\" {\n+-O\n+-ftree-vectorize[^\\n]*enabled\n+} \"  -g  \" \"\"\n+# Try repeated --help=.\n+check_for_options c \"--help=params --help=optimizers\" {\n+maximum number of\n+-O\n+} \"\" \"\"\n+\n+# Ensure PR 37805 is fixed.\n+check_for_options c \"--help=joined\" \"Wformat=\" \"-fstrict-prototype\" \"\"\n+check_for_options c \"--help=separate\" \"-MF\" \"-fstrict-prototype\" \"\"\n+check_for_options c \"--help=warnings,joined\" \"Wformat=\" \"Wtrigraphs\" \"\"\n+check_for_options c \"--help=warnings,^joined\" \"Wtrigraphs\" \"Wformat=\" \"\"\n+check_for_options c \"--help=joined,separate\" \"-I\" \"\" \"\"\n+check_for_options c \"--help=^joined,separate\" \"--param \" \"\" \"\"\n+check_for_options c \"--help=joined,^separate\" \"--help=\" \"\" \"\"\n+check_for_options c \"--help=joined,undocumented\" \"\" \"\" \"\"\n+# Listing only excludes gives empty results.\n+check_for_options c \"--help=^joined,^separate\" \"\" \"\" \"\""}, {"sha": "c63fd66cc022b38d111765e8411385f4aab8bc51", "filename": "gcc/testsuite/lib/options.exp", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e90cabae9cc024a575908f141db044366ba384/gcc%2Ftestsuite%2Flib%2Foptions.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e90cabae9cc024a575908f141db044366ba384/gcc%2Ftestsuite%2Flib%2Foptions.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Foptions.exp?ref=d5e90cabae9cc024a575908f141db044366ba384", "patch": "@@ -0,0 +1,69 @@\n+# Copyright (C) 2009 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# We set LC_ALL and LANG to C so that we get the same error messages as expected.\n+setenv LC_ALL C\n+setenv LANG C\n+\n+# Run the LANGUAGE compiler with GCC_OPTIONS and inspect the compiler\n+# output to make sure that they match the newline-separated patterns\n+# in COMPILER_PATTERNS but not the patterns in COMPILER_NON_PATTERNS.\n+# In case of failure, xfail if XFAIL is nonempty.\n+\n+proc check_for_options {language gcc_options compiler_patterns compiler_non_patterns expected_failure} {\n+    set filename test-[pid]\n+    set fd [open $filename.c w]\n+    puts $fd \"int main (void) { return 0; }\"\n+    close $fd\n+    remote_download host $filename.c\n+\n+    set test \"compiler driver $gcc_options option(s):\"\n+    set gcc_options \"\\{additional_flags=$gcc_options\\}\"\n+\n+    switch \"$language\" {\n+\t\"c\" { set compiler cc1 }\n+\tdefault { error \"unknown language\" }\n+    }\n+    set gcc_output [gcc_target_compile $filename.c $filename.x executable $gcc_options]\n+    remote_file build delete $filename.c $filename.x $filename.gcno\n+\n+    foreach pattern [split $compiler_patterns \"\\n\"] {\n+\tif {$pattern ne \"\"} {\n+\t    if {[regexp -- \"$pattern\" $gcc_output]} {\n+\t\tpass \"$test $pattern\"\n+\t    } else {\n+\t\tif {$expected_failure ne \"\"} {\n+\t\t    xfail \"$test $pattern\"\n+\t\t} else {\n+\t\t    fail \"$test $pattern\"\n+\t\t}\n+\t    }\n+\t}\n+    }\n+    foreach pattern [split $compiler_non_patterns \"\\n\"] {\n+\tif {$pattern ne \"\"} {\n+\t    if {![regexp -- \"$pattern\" $gcc_output]} {\n+\t\tpass \"$test $pattern\"\n+\t    } else {\n+\t\tif {$expected_failure ne \"\"} {\n+\t\t    xfail \"$test $pattern\"\n+\t\t} else {\n+\t\t    fail \"$test $pattern\"\n+\t\t}\n+\t    }\n+\t}\n+    }\n+}"}]}