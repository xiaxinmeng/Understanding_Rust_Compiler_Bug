{"sha": "f4b94256028353cb595e68c5b96ab5aa1f13fe55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRiOTQyNTYwMjgzNTNjYjU5NWU2OGM1Yjk2YWI1YWExZjEzZmU1NQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-03-07T11:50:32Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-03-07T11:50:32Z"}, "message": "haifa-sched.c (ENCODE_BLOCKAGE): Don't shift unit too far.\n\n        * haifa-sched.c (ENCODE_BLOCKAGE): Don't shift unit too far.\n        (print_exp): Special case addition of a constant.\n        (print_value) [CONST_INT]: Use HOST_WIDE_INT_PRINT_HEX.\n\nFrom-SVN: r25629", "tree": {"sha": "4577eb329d99289f3f0a58b153a8b869615d963f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4577eb329d99289f3f0a58b153a8b869615d963f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4b94256028353cb595e68c5b96ab5aa1f13fe55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b94256028353cb595e68c5b96ab5aa1f13fe55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4b94256028353cb595e68c5b96ab5aa1f13fe55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b94256028353cb595e68c5b96ab5aa1f13fe55/comments", "author": null, "committer": null, "parents": [{"sha": "28c95eff94412989fb44ac2386ce1934af5a8b20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c95eff94412989fb44ac2386ce1934af5a8b20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c95eff94412989fb44ac2386ce1934af5a8b20"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "a151f23f54a79c3daf50eb3d3d761408634aa05f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b94256028353cb595e68c5b96ab5aa1f13fe55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b94256028353cb595e68c5b96ab5aa1f13fe55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4b94256028353cb595e68c5b96ab5aa1f13fe55", "patch": "@@ -1,3 +1,9 @@\n+Sun Mar  7 11:48:56 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* haifa-sched.c (ENCODE_BLOCKAGE): Don't shift unit too far.\n+\t(print_exp): Special case addition of a constant.\n+\t(print_value) [CONST_INT]: Use HOST_WIDE_INT_PRINT_HEX.\n+\n Sun Mar  7 11:21:02 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* haifa-sched.c (reg_last_clobbers): New."}, {"sha": "ca9040c35970b469b1357528779897884fbbb739", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b94256028353cb595e68c5b96ab5aa1f13fe55/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b94256028353cb595e68c5b96ab5aa1f13fe55/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=f4b94256028353cb595e68c5b96ab5aa1f13fe55", "patch": "@@ -296,9 +296,9 @@ static unsigned int *insn_blockage;\n #define UNIT_BITS 5\n #define BLOCKAGE_MASK ((1 << BLOCKAGE_BITS) - 1)\n #define ENCODE_BLOCKAGE(U, R)\t\t\t\t\\\n-((((U) << UNIT_BITS) << BLOCKAGE_BITS\t\t\t\\\n+(((U) << BLOCKAGE_BITS\t\t\t\t\t\\\n   | MIN_BLOCKAGE_COST (R)) << BLOCKAGE_BITS\t\t\\\n-  | MAX_BLOCKAGE_COST (R))\n+ | MAX_BLOCKAGE_COST (R))\n #define UNIT_BLOCKED(B) ((B) >> (2 * BLOCKAGE_BITS))\n #define BLOCKAGE_RANGE(B)                                                \\\n   (((((B) >> BLOCKAGE_BITS) & BLOCKAGE_MASK) << (HOST_BITS_PER_INT / 2)) \\\n@@ -5832,8 +5832,17 @@ print_exp (buf, x, verbose)\n     {\n     case PLUS:\n       op[0] = XEXP (x, 0);\n-      st[1] = \"+\";\n-      op[1] = XEXP (x, 1);\n+      if (GET_CODE (XEXP (x, 1)) == CONST_INT\n+\t  && INTVAL (XEXP (x, 1)) < 0)\n+\t{\n+\t  st[1] = \"-\";\n+\t  op[1] = GEN_INT (-INTVAL (XEXP (x, 1)));\n+\t}\n+      else\n+\t{\n+\t  st[1] = \"+\";\n+\t  op[1] = XEXP (x, 1);\n+\t}\n       break;\n     case LO_SUM:\n       op[0] = XEXP (x, 0);\n@@ -6159,7 +6168,7 @@ print_value (buf, x, verbose)\n   switch (GET_CODE (x))\n     {\n     case CONST_INT:\n-      sprintf (t, \"0x%lx\", (long)INTVAL (x));\n+      sprintf (t, HOST_WIDE_INT_PRINT_HEX, INTVAL (x));\n       cur = safe_concat (buf, cur, t);\n       break;\n     case CONST_DOUBLE:"}]}