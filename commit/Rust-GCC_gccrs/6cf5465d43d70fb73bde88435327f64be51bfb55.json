{"sha": "6cf5465d43d70fb73bde88435327f64be51bfb55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNmNTQ2NWQ0M2Q3MGZiNzNiZGU4ODQzNTMyN2Y2NGJlNTFiZmI1NQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-10-26T05:32:06Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-10-26T05:32:06Z"}, "message": "[multiple changes]\n\n\n2001-10-25  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tlibstdc++/4545\n\t* include/bits/ostream.tcc (ostream::operator<<(streambuf*)): Fix\n\texceptions.\n\t* include/bits/istream.tcc (istream::operator>>(streambuf*): Make\n\tconsistent, where possible.\n\t* include/bits/streambuf.tcc: Tweak.\n\n2001-10-25  Brendan Kehoe  <brendan@zen.org>\n\n\tlibstdc++/4536\n\t* bits/ostream.tcc (seekp): Scope use as ios_base::failbit.\n \t* bits/istream.tcc (seekg): Likewise.\n\nFrom-SVN: r46528", "tree": {"sha": "7f7cd68fbf0a74f320e6942fb8edd7c1fa720633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f7cd68fbf0a74f320e6942fb8edd7c1fa720633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cf5465d43d70fb73bde88435327f64be51bfb55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf5465d43d70fb73bde88435327f64be51bfb55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cf5465d43d70fb73bde88435327f64be51bfb55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf5465d43d70fb73bde88435327f64be51bfb55/comments", "author": null, "committer": null, "parents": [{"sha": "3b2a3c4c2a238096562e831b4cef2f866cd1e51e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b2a3c4c2a238096562e831b4cef2f866cd1e51e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b2a3c4c2a238096562e831b4cef2f866cd1e51e"}], "stats": {"total": 146, "additions": 98, "deletions": 48}, "files": [{"sha": "1ce42b72e35b6ba6b56055d46b089e8a37803b55", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf5465d43d70fb73bde88435327f64be51bfb55/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf5465d43d70fb73bde88435327f64be51bfb55/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6cf5465d43d70fb73bde88435327f64be51bfb55", "patch": "@@ -1,3 +1,18 @@\n+2001-10-25  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++/4545\n+\t* include/bits/ostream.tcc (ostream::operator<<(streambuf*)): Fix\n+\texceptions.\n+\t* include/bits/istream.tcc (istream::operator>>(streambuf*): Make\n+\tconsistent, where possible.\n+\t* include/bits/streambuf.tcc: Tweak.\n+\t\n+2001-10-25  Brendan Kehoe  <brendan@zen.org>\n+\n+\tlibstdc++/4536\n+\t* bits/ostream.tcc (seekp): Scope use as ios_base::failbit.\n+ \t* bits/istream.tcc (seekg): Likewise.\n+\n 2001-10-25  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Peter Schmid <schmid@snake.iap.physik.tu-darmstadt.de>\n \t    Ulrich Weigand <Ulrich.Weigand@de.ibm.com>"}, {"sha": "47b01f6bae263e3c833e436bbc1cd68217d02a10", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf5465d43d70fb73bde88435327f64be51bfb55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf5465d43d70fb73bde88435327f64be51bfb55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=6cf5465d43d70fb73bde88435327f64be51bfb55", "patch": "@@ -454,14 +454,30 @@ namespace std\n     basic_istream<_CharT, _Traits>::\n     operator>>(__streambuf_type* __sbout)\n     {\n-      streamsize __xtrct = 0;\n-      __streambuf_type* __sbin = this->rdbuf();\n-      sentry __cerb(*this, false);\n-      if (__sbout && __cerb)\n-\t__xtrct = __copy_streambufs(*this, __sbin, __sbout);\n-      if (!__sbout || !__xtrct)\n-\tthis->setstate(ios_base::failbit);\n-      return *this;\n+       sentry __cerb(*this, false);\n+       if (__cerb)\n+\t {\n+\t   try\n+\t     {\n+\t       streamsize __xtrct = 0;\n+\t       if (__sbout)\n+\t\t {\n+\t\t   __streambuf_type* __sbin = this->rdbuf();\n+\t\t   __xtrct = __copy_streambufs(*this, __sbin, __sbout);\n+\t\t }\n+\t       if (!__sbout || !__xtrct)\n+\t\t this->setstate(ios_base::failbit);\n+\t     }\n+\t   catch(exception& __fail)\n+\t     {\n+\t       // 27.6.2.5.1 Common requirements.\n+\t       // Turn this on without causing an ios::failure to be thrown.\n+\t       this->setstate(ios_base::badbit);\n+\t       if ((this->exceptions() & ios_base::badbit) != 0)\n+\t\t __throw_exception_again;\n+\t     }\n+\t }\n+       return *this;\n     }\n \n   template<typename _CharT, typename _Traits>\n@@ -963,7 +979,7 @@ namespace std\n \n // 129. Need error indication from seekp() and seekg()\n \t      if (__err == pos_type(off_type(-1)))\n-\t\tthis->setstate(failbit);\n+\t\tthis->setstate(ios_base::failbit);\n #endif\n \t    }\n \t  catch(exception& __fail)\n@@ -996,7 +1012,7 @@ namespace std\n \n // 129. Need error indication from seekp() and seekg()\n \t      if (__err == pos_type(off_type(-1)))\n-\t\tthis->setstate(failbit);\n+\t\tthis->setstate(ios_base::failbit);\n #endif\n \t    }\n \t  catch(exception& __fail)"}, {"sha": "ff9283dc70beda2e2173dfc4be4f8af193dafc9f", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 34, "deletions": 17, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf5465d43d70fb73bde88435327f64be51bfb55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf5465d43d70fb73bde88435327f64be51bfb55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=6cf5465d43d70fb73bde88435327f64be51bfb55", "patch": "@@ -109,6 +109,38 @@ namespace std\n       return *this;\n     }\n \n+  template<typename _CharT, typename _Traits>\n+    basic_ostream<_CharT, _Traits>& \n+    basic_ostream<_CharT, _Traits>::operator<<(__streambuf_type* __sbin)\n+    {\n+      sentry __cerb(*this);\n+      if (__cerb)\n+\t{\n+\t  try\n+\t    {\n+\t      streamsize __xtrct = 0;\n+\t      if (__sbin)\n+\t\t{\n+\t\t  __streambuf_type* __sbout = this->rdbuf();\n+\t\t  __xtrct = __copy_streambufs(*this, __sbin, __sbout);\n+\t\t}\n+\t      else\n+\t\tthis->setstate(ios_base::badbit);\n+\t      if (!__xtrct)\n+\t\tthis->setstate(ios_base::failbit);\n+\t    }\n+\t  catch(exception& __fail)\n+\t    {\n+\t      // 27.6.2.5.1 Common requirements.\n+\t      // Turn this on without causing an ios::failure to be thrown.\n+\t      this->setstate(ios_base::badbit);\n+\t      if ((this->exceptions() & ios_base::badbit) != 0)\n+\t\t__throw_exception_again;\n+\t    }\n+\t}\n+      return *this;\n+    }\n+\n   template<typename _CharT, typename _Traits>\n     basic_ostream<_CharT, _Traits>& \n     basic_ostream<_CharT, _Traits>::operator<<(bool __n)\n@@ -336,20 +368,6 @@ namespace std\n       return *this;\n     }\n \n-  template<typename _CharT, typename _Traits>\n-    basic_ostream<_CharT, _Traits>& \n-    basic_ostream<_CharT, _Traits>::operator<<(__streambuf_type* __sbin)\n-    {\n-      streamsize __xtrct = 0;\n-      __streambuf_type* __sbout = this->rdbuf();\n-      sentry __cerb(*this);\n-      if (__sbin && __cerb)\n-\t__xtrct = __copy_streambufs(*this, __sbin, __sbout);\n-      if (!__sbin || !__xtrct)\n-\tthis->setstate(ios_base::failbit);\n-      return *this;\n-    }\n-\n   template<typename _CharT, typename _Traits>\n     basic_ostream<_CharT, _Traits>&\n     basic_ostream<_CharT, _Traits>::put(char_type __c)\n@@ -418,7 +436,7 @@ namespace std\n \n // 129. Need error indication from seekp() and seekg()\n \t  if (__err == pos_type(off_type(-1)))\n-\t    this->setstate(failbit);\n+\t    this->setstate(ios_base::failbit);\n #endif\n \t}\n       return *this;\n@@ -440,7 +458,7 @@ namespace std\n \n // 129. Need error indication from seekp() and seekg()\n \t  if (__err == pos_type(off_type(-1)))\n-\t    this->setstate(failbit);\n+\t    this->setstate(ios_base::failbit);\n \t}\n #endif\n       return *this;\n@@ -753,4 +771,3 @@ namespace std\n // Local Variables:\n // mode:C++\n // End:\n-"}, {"sha": "9482c69c7adf223bfda10d9a487faebffde92d1a", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf5465d43d70fb73bde88435327f64be51bfb55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf5465d43d70fb73bde88435327f64be51bfb55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=6cf5465d43d70fb73bde88435327f64be51bfb55", "patch": "@@ -198,29 +198,31 @@ namespace std {\n       streamsize __bufsize = __sbin->in_avail();\n       streamsize __xtrct;\n       bool __testput = __sbout->_M_mode & ios_base::out;\n-      try {\n-\twhile (__testput && __bufsize != -1)\n-\t  {\n-\t    __xtrct = __sbout->sputn(__sbin->gptr(), __bufsize);\n-\t    __ret += __xtrct;\n-\t    __sbin->_M_in_cur_move(__xtrct);\n-\t    if (__xtrct == __bufsize)\n-\t      {\n-\t\tif (__sbin->sgetc() == _Traits::eof())\n-\t\t  break;\n-\t\t__bufsize = __sbin->in_avail();\n-\t      }\n-\t    else\n-\t      break;\n-\t  }\n-      }\n-      catch(exception& __fail) {\n-\tif ((__ios.exceptions() & ios_base::failbit) != 0)\n-\t  __throw_exception_again;\n-      }\n+      try \n+\t{\n+\t  while (__testput && __bufsize != -1)\n+\t    {\n+\t      __xtrct = __sbout->sputn(__sbin->gptr(), __bufsize);\n+\t      __ret += __xtrct;\n+\t      __sbin->_M_in_cur_move(__xtrct);\n+\t      if (__xtrct == __bufsize)\n+\t\t{\n+\t\t  if (__sbin->sgetc() == _Traits::eof())\n+\t\t    break;\n+\t\t  __bufsize = __sbin->in_avail();\n+\t\t}\n+\t      else\n+\t\tbreak;\n+\t    }\n+\t}\n+      catch(exception& __fail) \n+\t{\n+\t  __ios.setstate(ios_base::failbit);\n+\t  if ((__ios.exceptions() & ios_base::failbit) != 0)\n+\t    __throw_exception_again;\n+\t}\n       return __ret;\n     }\n } // namespace std\n \n #endif // _CPP_BITS_STREAMBUF_TCC\n-"}]}