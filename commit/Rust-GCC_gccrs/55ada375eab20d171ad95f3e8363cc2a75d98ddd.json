{"sha": "55ada375eab20d171ad95f3e8363cc2a75d98ddd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVhZGEzNzVlYWIyMGQxNzFhZDk1ZjNlODM2M2NjMmE3NWQ5OGRkZA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-01-08T01:58:35Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-01-08T01:58:35Z"}, "message": "re PR target/59652 (ICE: in reload_cse_simplify_operands, at postreload.c:411)\n\n\tPR target/59652\n\t* config/pa/pa.c (pa_legitimate_address_p): Return false before reload\n\tfor 14-bit register offsets when INT14_OK_STRICT is false.\n\nFrom-SVN: r206413", "tree": {"sha": "d7b6d64cbd698f9f5ffa4c1c08d0e10af012d4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7b6d64cbd698f9f5ffa4c1c08d0e10af012d4a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ada375eab20d171ad95f3e8363cc2a75d98ddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ada375eab20d171ad95f3e8363cc2a75d98ddd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ada375eab20d171ad95f3e8363cc2a75d98ddd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ada375eab20d171ad95f3e8363cc2a75d98ddd/comments", "author": null, "committer": null, "parents": [{"sha": "747639c28ff29046b26ffafc9a04fc42a72f683b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747639c28ff29046b26ffafc9a04fc42a72f683b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/747639c28ff29046b26ffafc9a04fc42a72f683b"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "b04be2d7ec7ae6f3027339fe01a837d2961c0a27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ada375eab20d171ad95f3e8363cc2a75d98ddd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ada375eab20d171ad95f3e8363cc2a75d98ddd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55ada375eab20d171ad95f3e8363cc2a75d98ddd", "patch": "@@ -1,3 +1,9 @@\n+2014-01-07  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/59652\n+\t* config/pa/pa.c (pa_legitimate_address_p): Return false before reload\n+\tfor 14-bit register offsets when INT14_OK_STRICT is false.\n+\n 2014-01-07  Roland Stigge  <stigge@antcom.de>\n \t    Michael Meissner  <meissner@linux.vnet.ibm.com>\n "}, {"sha": "c3755bfa91221d8f09f613c6b7332b16d99f58e7", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ada375eab20d171ad95f3e8363cc2a75d98ddd/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ada375eab20d171ad95f3e8363cc2a75d98ddd/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=55ada375eab20d171ad95f3e8363cc2a75d98ddd", "patch": "@@ -10424,13 +10424,13 @@ pa_legitimate_address_p (enum machine_mode mode, rtx x, bool strict)\n \n \t  /* When INT14_OK_STRICT is false, a secondary reload is needed\n \t     to adjust the displacement of SImode and DImode floating point\n-\t     instructions.  So, we return false when STRICT is true.  We\n+\t     instructions but this may fail when the register also needs\n+\t     reloading.  So, we return false when STRICT is true.  We\n \t     also reject long displacements for float mode addresses since\n \t     the majority of accesses will use floating point instructions\n \t     that don't support 14-bit offsets.  */\n \t  if (!INT14_OK_STRICT\n-\t      && reload_in_progress\n-\t      && strict\n+\t      && (strict || !(reload_in_progress || reload_completed))\n \t      && mode != QImode\n \t      && mode != HImode)\n \t    return false;\n@@ -10490,8 +10490,7 @@ pa_legitimate_address_p (enum machine_mode mode, rtx x, bool strict)\n \t    return true;\n \n \t  if (!INT14_OK_STRICT\n-\t      && reload_in_progress\n-\t      && strict\n+\t      && (strict || !(reload_in_progress || reload_completed))\n \t      && mode != QImode\n \t      && mode != HImode)\n \t    return false;"}]}