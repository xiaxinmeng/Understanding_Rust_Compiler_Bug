{"sha": "3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E4ZmFjZTQ3ZWU4YmI5NGE1MGE5OGEwY2ZiNWM1ZmQ2MjkyZTU4Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-09T17:57:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-09T17:57:46Z"}, "message": "re PR c++/44629 (ICE in unify, at cp/pt.c:15155)\n\n\tPR c++/44629\n\t* pt.c (unify): An unresolved overload is a nondeduced context.\n\nFrom-SVN: r170824", "tree": {"sha": "1bd3aa9449d81f488521c0a82f051bdd39085608", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bd3aa9449d81f488521c0a82f051bdd39085608"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf6817f2c5ab79e08392ef031a40df227fa69b02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6817f2c5ab79e08392ef031a40df227fa69b02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf6817f2c5ab79e08392ef031a40df227fa69b02"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "789b2cf62c87c4eaab6e31259e24714d99ed5bac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c", "patch": "@@ -1,3 +1,8 @@\n+2011-03-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/44629\n+\t* pt.c (unify): An unresolved overload is a nondeduced context.\n+\n 2011-03-09  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/47714"}, {"sha": "ac91698ad72c4d300f6275e94cc9ed6ce3d534db", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c", "patch": "@@ -15688,6 +15688,9 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)\n       return 1;\n \n     default:\n+      /* An unresolved overload is a nondeduced context.  */\n+      if (type_unknown_p (parm))\n+\treturn 0;\n       gcc_assert (EXPR_P (parm));\n \n       /* We must be looking at an expression.  This can happen with"}, {"sha": "0c30b083f350fafb31b3e6b1e9eba9465ac4122d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c", "patch": "@@ -1,3 +1,7 @@\n+2011-03-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/template/nontype22.C: New.\n+\n 2011-03-09  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/47714"}, {"sha": "f2c8c46e9fc02ac75d3c025ba29a0aa5cc720967", "filename": "gcc/testsuite/g++.dg/template/nontype22.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype22.C?ref=3a8face47ee8bb94a50a98a0cfb5c5fd6292e58c", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/44629\n+// The proper mangling is unclear.\n+\n+template<typename T> int cmp1(T a, T b);\n+template<typename T, int (*cmp)(T, T) = cmp1> struct A { };\n+template <typename T> void f (A<T> &); // { dg-bogus \"\" \"\" { xfail *-*-* } }\n+void g()\n+{\n+  A<char> a;\n+  f(a);\n+}"}]}