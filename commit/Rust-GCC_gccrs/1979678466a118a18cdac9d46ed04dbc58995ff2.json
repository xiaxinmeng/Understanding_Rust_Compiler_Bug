{"sha": "1979678466a118a18cdac9d46ed04dbc58995ff2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk3OTY3ODQ2NmExMThhMThjZGFjOWQ0NmVkMDRkYmM1ODk5NWZmMg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2004-02-05T22:48:53Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-02-05T22:48:53Z"}, "message": "s390.md (\"*tmqidi_ext\"): New insn.\n\n2004-02-04  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.md (\"*tmqidi_ext\"): New insn.\n\t(\"*extendqidi2_short_displ\", \"*extendsiqi2_short_displ\"): Old\n\tpre-reload splitters are transformed to post-reload\n\tdefine_insn_and_split patterns.\n\t(\"*tmqisi_ext\"): Renamed old \"*tmqi_ext\".\n\nFrom-SVN: r77346", "tree": {"sha": "75978b32cc5c7d29ca9fd6b1a3f700791807b401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75978b32cc5c7d29ca9fd6b1a3f700791807b401"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1979678466a118a18cdac9d46ed04dbc58995ff2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1979678466a118a18cdac9d46ed04dbc58995ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1979678466a118a18cdac9d46ed04dbc58995ff2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1979678466a118a18cdac9d46ed04dbc58995ff2/comments", "author": null, "committer": null, "parents": [{"sha": "136e64db5ea4eda85d7a9916d3ae9f4fa528b1e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136e64db5ea4eda85d7a9916d3ae9f4fa528b1e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136e64db5ea4eda85d7a9916d3ae9f4fa528b1e3"}], "stats": {"total": 51, "additions": 41, "deletions": 10}, "files": [{"sha": "30da54b46aefc5bcf2d156627e61b1a40f22c237", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1979678466a118a18cdac9d46ed04dbc58995ff2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1979678466a118a18cdac9d46ed04dbc58995ff2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1979678466a118a18cdac9d46ed04dbc58995ff2", "patch": "@@ -1,3 +1,11 @@\n+2004-02-05  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"*tmqidi_ext\"): New insn.\n+\t(\"*extendqidi2_short_displ\", \"*extendsiqi2_short_displ\"): Old\n+\tpre-reload splitters are transformed to post-reload\n+\tdefine_insn_and_split patterns.\n+\t(\"*tmqisi_ext\"): Renamed old \"*tmqi_ext\".\n+\n 2004-02-05  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/cris/cris.h: Replace PROMOTE_PROTOTYPES with"}, {"sha": "5ba0df08d4b1fcb00d2058e0f2d34edb20fca848", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 33, "deletions": 10, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1979678466a118a18cdac9d46ed04dbc58995ff2/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1979678466a118a18cdac9d46ed04dbc58995ff2/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=1979678466a118a18cdac9d46ed04dbc58995ff2", "patch": "@@ -433,13 +433,13 @@\n }\n   [(set_attr \"op_type\" \"RI\")])\n \n-(define_insn \"*tmqi_ext\"\n+(define_insn \"*tmqisi_ext\"\n   [(set (reg 33)\n         (compare (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"Q,S\")\n \t                          (match_operand:SI 1 \"const_int_operand\" \"n,n\")\n                                   (match_operand:SI 2 \"const_int_operand\" \"n,n\"))\n                  (const_int 0)))]\n-  \"s390_match_ccmode(insn, CCTmode)\n+  \"!TARGET_64BIT && s390_match_ccmode(insn, CCTmode)\n    && INTVAL (operands[1]) >= 1 && INTVAL (operands[2]) >= 0\n    && INTVAL (operands[1]) + INTVAL (operands[2]) <= 8\"\n {\n@@ -451,6 +451,25 @@\n }\n   [(set_attr \"op_type\" \"SI,SIY\")])\n \n+(define_insn \"*tmqidi_ext\"\n+  [(set (reg 33)\n+        (compare (zero_extract:DI (match_operand:QI 0 \"memory_operand\" \"Q,S\")\n+\t                          (match_operand:SI 1 \"const_int_operand\" \"n,n\")\n+                                  (match_operand:SI 2 \"const_int_operand\" \"n,n\"))\n+                 (const_int 0)))]\n+  \"TARGET_64BIT && s390_match_ccmode(insn, CCTmode)\n+   && INTVAL (operands[1]) >= 1 && INTVAL (operands[2]) >= 0\n+   && INTVAL (operands[1]) + INTVAL (operands[2]) <= 8\"\n+{\n+  int block = (1 << INTVAL (operands[1])) - 1;\n+  int shift = 8 - INTVAL (operands[1]) - INTVAL (operands[2]);\n+\n+  operands[2] = GEN_INT (block << shift);\n+  return which_alternative == 0 ? \"tm\\t%0,%b2\" : \"tmy\\t%0,%b2\";\n+}\n+  [(set_attr \"op_type\" \"SI,SIY\")])\n+\n+\n ; Test-under-Mask instructions\n \n (define_insn \"*tmdi_mem\"\n@@ -2520,10 +2539,12 @@\n   \"lgb\\t%0,%1\"\n   [(set_attr \"op_type\" \"RXY\")])\n \n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (sign_extend:DI (match_operand:QI 1 \"s_operand\" \"\")))]\n-  \"TARGET_64BIT && !TARGET_LONG_DISPLACEMENT && !reload_completed\"\n+(define_insn_and_split \"*extendqidi2_short_displ\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+        (sign_extend:DI (match_operand:QI 1 \"s_operand\" \"Q\")))]\n+  \"TARGET_64BIT && !TARGET_LONG_DISPLACEMENT\"\n+  \"#\"\n+  \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (unspec:DI [(match_dup 1)] UNSPEC_SETHIGH))\n      (clobber (reg:CC 33))])\n@@ -2582,10 +2603,12 @@\n   \"lb\\t%0,%1\"\n   [(set_attr \"op_type\" \"RXY\")])\n \n-(define_split\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-        (sign_extend:SI (match_operand:QI 1 \"s_operand\" \"\")))]\n-  \"!TARGET_LONG_DISPLACEMENT && !reload_completed\"\n+(define_insn_and_split \"*extendsiqi2_short_displ\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+        (sign_extend:SI (match_operand:QI 1 \"s_operand\" \"Q\")))]\n+  \"!TARGET_LONG_DISPLACEMENT\"\n+  \"#\"\n+  \"&& reload_completed\"\n   [(parallel\n     [(set (match_dup 0) (unspec:SI [(match_dup 1)] UNSPEC_SETHIGH))\n      (clobber (reg:CC 33))])"}]}