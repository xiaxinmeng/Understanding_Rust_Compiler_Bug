{"sha": "2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMxYTJjZjM5ZTAxNmNlNzk1YTVjYjk4MDFhZjgwOThiZmE4YTIzNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-29T08:54:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:54:00Z"}, "message": "exp_attr.adb: Minor reformatting.\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb: Minor reformatting.\n\tMinor code reorganization and commenting.\n\t* par_sco.adb, checks.adb, sem_attr.adb, get_scos.adb: Minor\n\treformatting.\n\nFrom-SVN: r178166", "tree": {"sha": "fc5069c20761d3339875e4698d2a5aec5923e4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc5069c20761d3339875e4698d2a5aec5923e4bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/comments", "author": null, "committer": null, "parents": [{"sha": "0bfc9a64c3b167a8d3f1b9b1ab0caced30ca554e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfc9a64c3b167a8d3f1b9b1ab0caced30ca554e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bfc9a64c3b167a8d3f1b9b1ab0caced30ca554e"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "7e04f4070d6c540a795985ed13fa1023f7c23b06", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "patch": "@@ -1,3 +1,10 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb: Minor reformatting.\n+\tMinor code reorganization and commenting.\n+\t* par_sco.adb, checks.adb, sem_attr.adb, get_scos.adb: Minor\n+\treformatting.\n+\n 2011-08-29  Thomas Quinot  <quinot@adacore.com>\n \n \t* get_scos.adb: Ignore chaining indicators not currently supported"}, {"sha": "2f3b11bfed434928954a5b5fc3ea625563c1afaa", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "patch": "@@ -2325,7 +2325,8 @@ package body Checks is\n       Target_Type : constant Entity_Id := Etype (N);\n       Target_Base : constant Entity_Id := Base_Type (Target_Type);\n       Expr        : constant Node_Id   := Expression (N);\n-      Expr_Type   : constant Entity_Id := Underlying_Type (Etype (Expr));\n+\n+      Expr_Type : constant Entity_Id := Underlying_Type (Etype (Expr));\n       --  Note: if Etype (Expr) is a private type without discriminants, its\n       --  full view might have discriminants with defaults, so we need the\n       --  full view here to retrieve the constraints."}, {"sha": "91b6725f43bc7ba5bf1e81aa6303f55fd15ec8e2", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "patch": "@@ -1814,13 +1814,12 @@ package body Exp_Attr is\n       --  to this defining identifier.\n \n       when Attribute_Elab_Body      |\n-           Attribute_Elab_Subp_Body |\n            Attribute_Elab_Spec      =>\n \n          --  Leave attribute unexpanded in CodePeer mode: the gnat2scil\n-         --  back-end knows how to handle this attribute directly.\n+         --  back-end knows how to handle these attributes directly.\n \n-         if CodePeer_Mode or else Id = Attribute_Elab_Subp_Body then\n+         if CodePeer_Mode then\n             return;\n          end if;\n \n@@ -1909,6 +1908,17 @@ package body Exp_Attr is\n             Rewrite (N, New_Occurrence_Of (Ent, Loc));\n          end Elab_Body;\n \n+      --------------------\n+      -- Elab_Subp_Body --\n+      --------------------\n+\n+      --  Always ignored. In CodePeer mode, gnat2scil knows how to handle\n+      --  this attribute directly, and if we are not in CodePeer mode it is\n+      --  entirely ignored ???\n+\n+      when Attribute_Elab_Subp_Body =>\n+         return;\n+\n       ----------------\n       -- Elaborated --\n       ----------------"}, {"sha": "8fc4dfc651c60b3d7bacfe5f3d396b5ad80933bc", "filename": "gcc/ada/get_scos.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fget_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fget_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_scos.adb?ref=2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "patch": "@@ -24,6 +24,9 @@\n ------------------------------------------------------------------------------\n \n pragma Ada_2005;\n+--  This unit is not part of the compiler proper, it is used in tools that\n+--  read SCO information from ALI files (Xcov and sco_test). Ada 2005\n+--  constructs may therefore be used freely (and are indeed).\n \n with SCOs;   use SCOs;\n with Snames; use Snames;\n@@ -297,12 +300,14 @@ begin\n                            exit when Nextc = ':';\n                            N := N + 1;\n                         end loop;\n+\n                         begin\n                            Pid := Pragma_Id'Value (Buf (1 .. N));\n                         exception\n                            when Constraint_Error =>\n                               Pid := Unknown_Pragma;\n                         end;\n+\n                         Skipc;\n                      end if;\n                   end if;"}, {"sha": "f361a9cd67f86f6328c97c29e6f0db59dd95ea66", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "patch": "@@ -1431,9 +1431,8 @@ package body Par_SCO is\n                            --  must generate a P entry for the decision. Note\n                            --  that this is done unconditionally at this stage.\n                            --  Output for disabled pragmas is suppressed later\n-                           --  on, when we output the decision line in\n-                           --  Put_SCOs, depending on marker sets by\n-                           --  Set_SCO_Pragma_Enabled.\n+                           --  on when we output the decision line in Put_SCOs,\n+                           --  depending on setting by Set_SCO_Pragma_Enabled.\n \n                            if Nam = Name_Check then\n                               Next (Arg);"}, {"sha": "f00c169a96fc5cc2877ccccd87bef9eb41867de9", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c1a2cf39e016ce795a5cb9801af8098bfa8a234/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2c1a2cf39e016ce795a5cb9801af8098bfa8a234", "patch": "@@ -3014,7 +3014,7 @@ package body Sem_Attr is\n       -- Elab_Body --\n       ---------------\n \n-      --  Also handles processing for Elab_Spec\n+      --  Also handles processing for Elab_Spec and Elab_Subp_Body\n \n       when Attribute_Elab_Body      |\n            Attribute_Elab_Spec      |"}]}