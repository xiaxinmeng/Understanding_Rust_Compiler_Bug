{"sha": "4344da24b58f86c91bc839c1087cf2570ee0f276", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM0NGRhMjRiNThmODZjOTFiYzgzOWMxMDg3Y2YyNTcwZWUwZjI3Ng==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2007-09-28T13:33:09Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2007-09-28T13:33:09Z"}, "message": "re PR rtl-optimization/33552 (wrong code for multiple output asm, wrong df?)\n\n        PR rtl-optimization/33552\n        * gcc.target/i386/pr33552.c: New runtime test.\n        * gcc.target/i386/strinline.c: New compile time test.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r128865", "tree": {"sha": "ee87dc8946e69c7f9b3c5c5f64a3b868ecbdc59b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee87dc8946e69c7f9b3c5c5f64a3b868ecbdc59b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4344da24b58f86c91bc839c1087cf2570ee0f276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4344da24b58f86c91bc839c1087cf2570ee0f276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4344da24b58f86c91bc839c1087cf2570ee0f276", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4344da24b58f86c91bc839c1087cf2570ee0f276/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53220215a8926ffe3aef50e7a79f8e3bb15859f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53220215a8926ffe3aef50e7a79f8e3bb15859f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53220215a8926ffe3aef50e7a79f8e3bb15859f3"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "b45fd70d43e8e7d8c143a9cfdaebbda03028a329", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4344da24b58f86c91bc839c1087cf2570ee0f276/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4344da24b58f86c91bc839c1087cf2570ee0f276/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4344da24b58f86c91bc839c1087cf2570ee0f276", "patch": "@@ -1,3 +1,10 @@\n+2007-09-28  Michael Matz  <matz@suse.de>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/33552\n+\t* gcc.target/i386/pr33552.c: New runtime test.\n+\t* gcc.target/i386/strinline.c: New compile time test.\n+\n 2007-09-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortran.dg/openmp_stack.f90: Removed."}, {"sha": "68a81222eead0f29c810c13c697777ef87ca9741", "filename": "gcc/testsuite/gcc.target/i386/pr33552.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4344da24b58f86c91bc839c1087cf2570ee0f276/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr33552.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4344da24b58f86c91bc839c1087cf2570ee0f276/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr33552.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr33552.c?ref=4344da24b58f86c91bc839c1087cf2570ee0f276", "patch": "@@ -0,0 +1,41 @@\n+/* PR rtl-optimization/33552 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+void\n+__attribute__((noinline))\n+foo (unsigned long *wp, unsigned long *up, long un, unsigned long *vp)\n+{\n+  long j;\n+  unsigned long prod_low, prod_high;\n+  unsigned long cy_dig;\n+  unsigned long v_limb;\n+  v_limb = vp[0];\n+  cy_dig = 64;\n+  for (j = un; j > 0; j--)\n+    {\n+      unsigned long u_limb, w_limb;\n+      u_limb = *up++;\n+      __asm__ (\"\"\n+               : \"=r\" (prod_low), \"=r\" (prod_high)\n+               : \"0\" (u_limb), \"1\" (v_limb));\n+      __asm__ (\"mov %5, %1; add %5, %0\"\n+               : \"=r\" (cy_dig), \"=&r\" (w_limb)\n+               : \"0\" (prod_high), \"rm\" (0), \"1\" (prod_low), \"rm\" (cy_dig));\n+      *wp++ = w_limb;\n+    }\n+}\n+\n+int\n+main (void)\n+{\n+  unsigned long wp[4];\n+  unsigned long up[4] = { 0x1248, 0x248a, 0x1745, 0x1853 };\n+  unsigned long vp = 0xdead;\n+  foo (wp, up, 4, &vp);\n+  if (wp[0] != 0x40 || wp[1] != 0xdeed || wp[2] != 0x1bd9a || wp[3] != 0x29c47)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "45ac8872909c43bd831c03c39d4b3dcf64ee9ef5", "filename": "gcc/testsuite/gcc.target/i386/strinline.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4344da24b58f86c91bc839c1087cf2570ee0f276/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstrinline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4344da24b58f86c91bc839c1087cf2570ee0f276/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstrinline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstrinline.c?ref=4344da24b58f86c91bc839c1087cf2570ee0f276", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fPIC\" } */\n+typedef unsigned int size_t;\n+ char *\n+__mempcpy_by2 (char *__dest, __const char *__src, size_t __srclen)\n+{\n+  register char *__tmp = __dest;\n+  register unsigned long int __d0, __d1;\n+  __asm__ __volatile__\n+    (\"shrl      $1,%3\\n\\t\"\n+     \"jz        2f\\n\"\n+     \"1:\\n\\t\"\n+     \"movl      (%2),%0\\n\\t\"\n+     \"leal      4(%2),%2\\n\\t\"\n+     \"movl      %0,(%1)\\n\\t\"\n+     \"leal      4(%1),%1\\n\\t\"\n+     \"decl      %3\\n\\t\"\n+     \"jnz       1b\\n\"\n+     \"2:\\n\\t\"\n+     \"movw      (%2),%w0\\n\\t\"\n+     \"movw      %w0,(%1)\"\n+     : \"=&q\" (__d0), \"=r\" (__tmp), \"=&r\" (__src), \"=&r\" (__d1),\n+       \"=m\" ( *(struct { __extension__ char __x[__srclen]; } *)__dest)\n+     : \"1\" (__tmp), \"2\" (__src), \"3\" (__srclen / 2),\n+       \"m\" ( *(struct { __extension__ char __x[__srclen]; } *)__src)\n+     : \"cc\");\n+  return __tmp + 2;\n+}"}]}