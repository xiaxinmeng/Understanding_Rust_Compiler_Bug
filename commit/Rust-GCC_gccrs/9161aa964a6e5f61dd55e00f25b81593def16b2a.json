{"sha": "9161aa964a6e5f61dd55e00f25b81593def16b2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE2MWFhOTY0YTZlNWY2MWRkNTVlMDBmMjViODE1OTNkZWYxNmIyYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-10T08:50:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-10T08:50:35Z"}, "message": "(dbxout_type_methods): Fix minimal_debug so that it skips a redundant class name prefix, as intended.\n\n(dbxout_type_methods):  Fix minimal_debug so\nthat it skips a redundant class name prefix, as intended.\nIt now expects the length digits that precede the class name.\n\nFrom-SVN: r1552", "tree": {"sha": "6bbb687c634323371f18089ca0d1770f2b9ed25f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bbb687c634323371f18089ca0d1770f2b9ed25f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9161aa964a6e5f61dd55e00f25b81593def16b2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9161aa964a6e5f61dd55e00f25b81593def16b2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9161aa964a6e5f61dd55e00f25b81593def16b2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9161aa964a6e5f61dd55e00f25b81593def16b2a/comments", "author": null, "committer": null, "parents": [{"sha": "c7ef4a16bb41005abe37f3cd9851d64fb9701270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ef4a16bb41005abe37f3cd9851d64fb9701270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ef4a16bb41005abe37f3cd9851d64fb9701270"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "650ec6279cef1f82bacf31c2579ff7cbc31d1b17", "filename": "gcc/dbxout.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9161aa964a6e5f61dd55e00f25b81593def16b2a/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9161aa964a6e5f61dd55e00f25b81593def16b2a/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=9161aa964a6e5f61dd55e00f25b81593def16b2a", "patch": "@@ -676,6 +676,7 @@ dbxout_type_methods (type)\n   tree type_encoding;\n   register tree fndecl;\n   register tree last;\n+  char formatted_type_identifier_length[16];\n   register int type_identifier_length;\n \n   if (methods == NULL_TREE)\n@@ -704,6 +705,8 @@ dbxout_type_methods (type)\n \n   type_identifier_length = IDENTIFIER_LENGTH (type_encoding);\n \n+  sprintf(formatted_type_identifier_length, \"%d\", type_identifier_length);\n+\n   if (TREE_CODE (methods) == FUNCTION_DECL)\n     fndecl = methods;\n   else if (TREE_VEC_ELT (methods, 0) != NULL_TREE)\n@@ -748,9 +751,13 @@ dbxout_type_methods (type)\n \t\t  if (debug_name[0] == '_' && debug_name[1] == '_')\n \t\t    {\n \t\t      char *method_name = debug_name + 2;\n+\t\t      char *length_ptr = formatted_type_identifier_length;\n \t\t      /* Get past const and volatile qualifiers.  */\n \t\t      while (*method_name == 'C' || *method_name == 'V')\n \t\t\tmethod_name++;\n+\t\t      /* Skip digits for length of type_encoding. */\n+\t\t      while (*method_name == *length_ptr && *length_ptr)\n+\t\t\t  length_ptr++, method_name++;\n \t\t      if (! strncmp (method_name,\n \t\t\t\t     IDENTIFIER_POINTER (type_encoding),\n \t\t\t\t     type_identifier_length))\n@@ -762,8 +769,12 @@ dbxout_type_methods (type)\n \t      else if (debug_name[0] == '_' && debug_name[1] == '_')\n \t\t{\n \t\t  char *ctor_name = debug_name + 2;\n+\t\t  char *length_ptr = formatted_type_identifier_length;\n \t\t  while (*ctor_name == 'C' || *ctor_name == 'V')\n \t\t    ctor_name++;\n+\t\t  /* Skip digits for length of type_encoding. */\n+\t\t  while (*ctor_name == *length_ptr && *length_ptr)\n+\t\t      length_ptr++, ctor_name++;\n \t\t  if (!strncmp (IDENTIFIER_POINTER (type_encoding), ctor_name,\n \t\t\t\ttype_identifier_length))\n \t\t    debug_name = ctor_name + type_identifier_length;"}]}