{"sha": "938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM4YjZmMWU1ZDMxYzhjM2VmNGRkMWRkNGQ2YjY1YjNmNTNhZDA3ZA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2017-09-26T16:35:53Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2017-09-26T16:35:53Z"}, "message": "Enable no-exec stacks for more targets using the Linux kernel.\n\nBuilding glibc for many different configurations and running the\ncompilation parts of the testsuite runs into failures of the\nelf/check-execstack test for hppa and microblaze.  Those\nconfigurations default to executable stacks in the Linux kernel\nbecause of VM_DATA_DEFAULT_FLAGS definitions including VM_EXEC\n(VM_DATA_DEFAULT_FLAGS being the default definition of\nVM_STACK_DEFAULT_FLAGS).\n\nThis fails because those configurations are not generating\n.note.GNU-stack sections to indicate that programs do not need an\nexecutable stack.  This patch fixes GCC to generate those sections on\nthose architectures (when configured for a target using the Linux\nkernel), as it does on other architectures, together with adding that\nsection to libgcc .S sources, with the same code as used on other\narchitectures (or a variant using \"#ifdef __linux__\" instead of the\nusual \"#if defined(__ELF__) && defined(__linux__)\" for microblaze, as\nthat configuration doesn't use elfos.h and so doesn't define __ELF__).\n\nThis suffices to eliminate that glibc test failure.  (For hppa, the\ncompilation parts of the glibc testsuite still fail because of the\nseparate elf/check-textrel failure.)\n\ngcc:\n\t* config/microblaze/linux.h (TARGET_ASM_FILE_END): Likewise.\n\t* config/pa/pa.h (NEED_INDICATE_EXEC_STACK): Likewise.\n\t* config/pa/pa-linux.h (NEED_INDICATE_EXEC_STACK): Likewise.\n\t* config/pa/pa.c (pa_hpux_file_end): Rename to pa_file_end.\n\tDefine unconditionally, with [ASM_OUTPUT_EXTERNAL_REAL]\n\tconditionals inside the function instead of around it.  Call\n\tfile_end_indicate_exec_stack if NEED_INDICATE_EXEC_STACK.\n\t(TARGET_ASM_FILE_END): Define unconditionally to pa_file_end.\n\nlibgcc:\n\t* config/microblaze/crti.S, config/microblaze/crtn.S,\n\tconfig/microblaze/divsi3.S, config/microblaze/moddi3.S,\n\tconfig/microblaze/modsi3.S, config/microblaze/muldi3_hard.S,\n\tconfig/microblaze/mulsi3.S,\n\tconfig/microblaze/stack_overflow_exit.S,\n\tconfig/microblaze/udivsi3.S, config/microblaze/umodsi3.S,\n\tconfig/pa/milli64.S: Add .note.GNU-stack section.\n\nFrom-SVN: r253204", "tree": {"sha": "ee16574d02eab6903c55199d5f7d94c9e4221315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee16574d02eab6903c55199d5f7d94c9e4221315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca617fd2144dd58a2d26887239e86e5b32eba87c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca617fd2144dd58a2d26887239e86e5b32eba87c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca617fd2144dd58a2d26887239e86e5b32eba87c"}], "stats": {"total": 115, "additions": 105, "deletions": 10}, "files": [{"sha": "916a33ad2e3a940ffd4e65afd41ad6d5ef4c1548", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -1,3 +1,14 @@\n+2017-09-26  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/microblaze/linux.h (TARGET_ASM_FILE_END): Likewise.\n+\t* config/pa/pa.h (NEED_INDICATE_EXEC_STACK): Likewise.\n+\t* config/pa/pa-linux.h (NEED_INDICATE_EXEC_STACK): Likewise.\n+\t* config/pa/pa.c (pa_hpux_file_end): Rename to pa_file_end.\n+\tDefine unconditionally, with [ASM_OUTPUT_EXTERNAL_REAL]\n+\tconditionals inside the function instead of around it.  Call\n+\tfile_end_indicate_exec_stack if NEED_INDICATE_EXEC_STACK.\n+\t(TARGET_ASM_FILE_END): Define unconditionally to pa_file_end.\n+\n 2017-09-26  Richard Biener  <rguenther@suse.de>\n \n \t* graphite-scop-detection.c (scop_detection::build_scop_depth): Rewrite,"}, {"sha": "d715f45f4228dad8cecbda4055590988d0d61cd9", "filename": "gcc/config/microblaze/linux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2Fconfig%2Fmicroblaze%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2Fconfig%2Fmicroblaze%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Flinux.h?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -57,3 +57,5 @@\n /* For the microblaze-*-linux* subtarget.  */\n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS() GNU_USER_TARGET_OS_CPP_BUILTINS()\n+\n+#define TARGET_ASM_FILE_END file_end_indicate_exec_stack"}, {"sha": "811e697b8ed4365532c8ec1bdc3ba40633724d8e", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -141,3 +141,6 @@ along with GCC; see the file COPYING3.  If not see\n #define HAVE_sync_compare_and_swaphi 1\n #define HAVE_sync_compare_and_swapsi 1\n #define HAVE_sync_compare_and_swapdi 1\n+\n+#undef NEED_INDICATE_EXEC_STACK\n+#define NEED_INDICATE_EXEC_STACK 1"}, {"sha": "5e945fc2f3b3852d40db02891808cee5a87a6ca4", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -159,9 +159,7 @@ static void pa_hpux64_gas_file_start (void) ATTRIBUTE_UNUSED;\n static void pa_hpux64_hpas_file_start (void) ATTRIBUTE_UNUSED;\n static void output_deferred_plabels (void);\n static void output_deferred_profile_counters (void) ATTRIBUTE_UNUSED;\n-#ifdef ASM_OUTPUT_EXTERNAL_REAL\n-static void pa_hpux_file_end (void);\n-#endif\n+static void pa_file_end (void);\n static void pa_init_libfuncs (void);\n static rtx pa_struct_value_rtx (tree, int);\n static bool pa_pass_by_reference (cumulative_args_t, machine_mode,\n@@ -301,11 +299,7 @@ static size_t n_deferred_plabels = 0;\n #define TARGET_ASM_CAN_OUTPUT_MI_THUNK default_can_output_mi_thunk_no_vcall\n \n #undef TARGET_ASM_FILE_END\n-#ifdef ASM_OUTPUT_EXTERNAL_REAL\n-#define TARGET_ASM_FILE_END pa_hpux_file_end\n-#else\n-#define TARGET_ASM_FILE_END output_deferred_plabels\n-#endif\n+#define TARGET_ASM_FILE_END pa_file_end\n \n #undef TARGET_ASM_RELOC_RW_MASK\n #define TARGET_ASM_RELOC_RW_MASK pa_reloc_rw_mask\n@@ -9979,22 +9973,26 @@ pa_hpux_asm_output_external (FILE *file, tree decl, const char *name)\n   extern_symbol p = {decl, name};\n   vec_safe_push (extern_symbols, p);\n }\n+#endif\n \n /* Output text required at the end of an assembler file.\n    This includes deferred plabels and .import directives for\n    all external symbols that were actually referenced.  */\n \n static void\n-pa_hpux_file_end (void)\n+pa_file_end (void)\n {\n+#ifdef ASM_OUTPUT_EXTERNAL_REAL\n   unsigned int i;\n   extern_symbol *p;\n \n   if (!NO_DEFERRED_PROFILE_COUNTERS)\n     output_deferred_profile_counters ();\n+#endif\n \n   output_deferred_plabels ();\n \n+#ifdef ASM_OUTPUT_EXTERNAL_REAL\n   for (i = 0; vec_safe_iterate (extern_symbols, i, &p); i++)\n     {\n       tree decl = p->decl;\n@@ -10005,9 +10003,12 @@ pa_hpux_file_end (void)\n     }\n \n   vec_free (extern_symbols);\n-}\n #endif\n \n+  if (NEED_INDICATE_EXEC_STACK)\n+    file_end_indicate_exec_stack ();\n+}\n+\n /* Implement TARGET_CAN_CHANGE_MODE_CLASS.  */\n \n static bool"}, {"sha": "cf95789b59941f84f02685ed34ae7e62bc7a5e85", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -1306,3 +1306,5 @@ do {\t\t\t\t\t\t\t\t\t     \\\n    seven and four instructions, respectively.  */  \n #define MAX_PCREL17F_OFFSET \\\n   (flag_pic ? (TARGET_HPUX ? 198164 : 221312) : 240000)\n+\n+#define NEED_INDICATE_EXEC_STACK 0"}, {"sha": "68401477f52b67cc39ae363c093db5e716851f1f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -1,3 +1,13 @@\n+2017-09-26  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/microblaze/crti.S, config/microblaze/crtn.S,\n+\tconfig/microblaze/divsi3.S, config/microblaze/moddi3.S,\n+\tconfig/microblaze/modsi3.S, config/microblaze/muldi3_hard.S,\n+\tconfig/microblaze/mulsi3.S,\n+\tconfig/microblaze/stack_overflow_exit.S,\n+\tconfig/microblaze/udivsi3.S, config/microblaze/umodsi3.S,\n+\tconfig/pa/milli64.S: Add .note.GNU-stack section.\n+\n 2017-09-23  Daniel Santos  <daniel.santos@pobox.com>\n \n \t* configure.ac: Add Check for HAVE_AS_AVX."}, {"sha": "7356163364a70874e7e696ef16ab7331d4ca5dec", "filename": "libgcc/config/microblaze/crti.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fcrti.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fcrti.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fcrti.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -24,6 +24,12 @@\n    see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    <http://www.gnu.org/licenses/>.  */\n \n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n     .section .init, \"ax\"\n     .global __init\n "}, {"sha": "c784ed46ca3b17b06ed12ff9c6a9c618c34c93c9", "filename": "libgcc/config/microblaze/crtn.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fcrtn.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fcrtn.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fcrtn.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -24,6 +24,12 @@\n    see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    <http://www.gnu.org/licenses/>.  */\n \n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n     .section .init, \"ax\"\n     lw      r15, r0, r1\n     rtsd    r15, 8 "}, {"sha": "0cd14b37177340a4a812f0151f0e2a51ec1619d3", "filename": "libgcc/config/microblaze/divsi3.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fdivsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fdivsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fdivsi3.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -32,6 +32,12 @@\n # \n #######################################\n \t\n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n \t.globl\t__divsi3\n \t.ent\t__divsi3\n \t.type\t__divsi3,@function"}, {"sha": "7d2a31d124e1938821788bfb4e430bc3ee87e231", "filename": "libgcc/config/microblaze/moddi3.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fmoddi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fmoddi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fmoddi3.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -30,6 +30,12 @@\n #######################################\n \n \n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n \t.globl\t__moddi3\n \t.ent\t__moddi3\n __moddi3:"}, {"sha": "118b18dbc71e7bc95f83f0abe02098fd532f998f", "filename": "libgcc/config/microblaze/modsi3.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fmodsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fmodsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fmodsi3.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -32,6 +32,12 @@\n # \n #######################################\n \n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n \t.globl\t__modsi3\n \t.ent\t__modsi3\n \t.type\t__modsi3,@function"}, {"sha": "d9f18064c835e879a9fb8ac33c576dc8daaeb461", "filename": "libgcc/config/microblaze/muldi3_hard.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fmuldi3_hard.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fmuldi3_hard.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fmuldi3_hard.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -47,6 +47,12 @@\n #\n #######################################\n \n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n \t.globl\tmuldi3_hardproc\n \t.ent\tmuldi3_hardproc\n muldi3_hardproc:"}, {"sha": "3d335225ce5d9a044756002a69203d9541427653", "filename": "libgcc/config/microblaze/mulsi3.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fmulsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fmulsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fmulsi3.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -32,6 +32,12 @@\n # \n #######################################\n \n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n \t.globl\t__mulsi3\n \t.ent\t__mulsi3\n \t.type\t__mulsi3,@function"}, {"sha": "5f6be94e07a0ea2b98eb94ae106b588639b37016", "filename": "libgcc/config/microblaze/stack_overflow_exit.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fstack_overflow_exit.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fstack_overflow_exit.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fstack_overflow_exit.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -33,6 +33,12 @@\n # \n #######################################\n \n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n \t.globl\t_stack_overflow_error\n \t.data\n \t.align\t2"}, {"sha": "f01c027f5d67ac6040bff52226ce5acee78f1e25", "filename": "libgcc/config/microblaze/udivsi3.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fudivsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fudivsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fudivsi3.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -32,6 +32,12 @@\n # \n #######################################\n \t\n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n \t.globl\t__udivsi3\n \t.ent\t__udivsi3\n \t.type\t__udivsi3,@function"}, {"sha": "a91eae7557533f7153f7f8aa7b23b0e0666d39b7", "filename": "libgcc/config/microblaze/umodsi3.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fumodsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fmicroblaze%2Fumodsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmicroblaze%2Fumodsi3.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -32,6 +32,12 @@\n # \n #######################################\n \t\n+/* An executable stack is *not* required for these functions.  */\n+#ifdef __linux__\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n \t.globl\t__umodsi3\n \t.ent\t__umodsi3\n \t.type\t__umodsi3,@function"}, {"sha": "4690dd13aca2d12848a9f62d40ea691b05230dc8", "filename": "libgcc/config/pa/milli64.S", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fpa%2Fmilli64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d/libgcc%2Fconfig%2Fpa%2Fmilli64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Fmilli64.S?ref=938b6f1e5d31c8c3ef4dd1dd4d6b65b3f53ad07d", "patch": "@@ -25,6 +25,12 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n+/* An executable stack is *not* required for these functions.  */\n+#if defined(__ELF__) && defined(__linux__)\n+.section .note.GNU-stack,\"\",%progbits\n+.previous\n+#endif\n+\n #ifdef pa64\n         .level  2.0w\n #endif"}]}