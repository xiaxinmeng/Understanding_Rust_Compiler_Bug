{"sha": "636e3cb6f9e28933f19599a16b663881f9e7669e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2ZTNjYjZmOWUyODkzM2YxOTU5OWExNmI2NjM4ODFmOWU3NjY5ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:34:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:34:43Z"}, "message": "[multiple changes]\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* s-stchop-vxworks.adb: Add comment.\n\n2009-11-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* make.adb, prj.adb, prj.ads (Compute_All_Imported_Projects): Now acts\n\ton the whole tree, to better share code with gprbuild.\n\t(Length): New subprogram, to share code in gprbuild.\n\t(Project_Data): Remove fields that are only needed when compiling a\n \tproject in gprbuild (where we use local variables instead)\n\t* osint.adb, osint.ads: Added minor comment on memory management\n\nFrom-SVN: r154774", "tree": {"sha": "834744c75cd321ac555760daef581f47b6f7b4c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/834744c75cd321ac555760daef581f47b6f7b4c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/636e3cb6f9e28933f19599a16b663881f9e7669e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636e3cb6f9e28933f19599a16b663881f9e7669e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636e3cb6f9e28933f19599a16b663881f9e7669e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636e3cb6f9e28933f19599a16b663881f9e7669e/comments", "author": null, "committer": null, "parents": [{"sha": "e64e5f7438497707a97da41a07ca787e04d5f311", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64e5f7438497707a97da41a07ca787e04d5f311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64e5f7438497707a97da41a07ca787e04d5f311"}], "stats": {"total": 98, "additions": 60, "deletions": 38}, "files": [{"sha": "bde300e6bf68af8e54b5b1298e937132e7666e3b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=636e3cb6f9e28933f19599a16b663881f9e7669e", "patch": "@@ -1,3 +1,16 @@\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-stchop-vxworks.adb: Add comment.\n+\n+2009-11-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* make.adb, prj.adb, prj.ads (Compute_All_Imported_Projects): Now acts\n+\ton the whole tree, to better share code with gprbuild.\n+\t(Length): New subprogram, to share code in gprbuild.\n+\t(Project_Data): Remove fields that are only needed when compiling a\n+ \tproject in gprbuild (where we use local variables instead)\n+\t* osint.adb, osint.ads: Added minor comment on memory management\n+\n 2009-11-30  Sergey Rybin  <rybin@adacore.com>\n \n \t* gnat_ugn.texi: Update gnatcheck doc."}, {"sha": "252be1be04f37daae6836af4694dc96bab9d3bb4", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=636e3cb6f9e28933f19599a16b663881f9e7669e", "patch": "@@ -6875,24 +6875,15 @@ package body Make is\n \n          --  We add the source directories and the object directories to the\n          --  search paths.\n+         --  ??? Why do we need these search directories, we already know the\n+         --  locations from parsing the project, except for the runtime which\n+         --  has its own directories anyway\n \n          Add_Source_Directories (Main_Project, Project_Tree);\n          Add_Object_Directories (Main_Project);\n \n          Recursive_Compute_Depth (Main_Project);\n-\n-         --  For each project compute the list of the projects it imports\n-         --  directly or indirectly.\n-\n-         declare\n-            Proj : Project_List;\n-         begin\n-            Proj := Project_Tree.Projects;\n-            while Proj /= null loop\n-               Compute_All_Imported_Projects (Proj.Project);\n-               Proj := Proj.Next;\n-            end loop;\n-         end;\n+         Compute_All_Imported_Projects (Project_Tree);\n \n       else\n "}, {"sha": "46c322fc983576ddb0a293728e70b740635001b9", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=636e3cb6f9e28933f19599a16b663881f9e7669e", "patch": "@@ -138,6 +138,7 @@ package body Osint is\n       Path_Len  : Integer) return String_Access;\n    --  Converts a C String to an Ada String. Are we doing this to avoid withing\n    --  Interfaces.C.Strings ???\n+   --  Caller must free result\n \n    function Include_Dir_Default_Prefix return String_Access;\n    --  Same as exported version, except returns a String_Access"}, {"sha": "8353908afec160092fface53cc0b14ecbc725e90", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=636e3cb6f9e28933f19599a16b663881f9e7669e", "patch": "@@ -210,6 +210,7 @@ package Osint is\n    --  Convert a canonical syntax directory specification to host syntax.\n    --  The Prefix_Style flag is currently ignored but should be set to\n    --  False.\n+   --  Caller must free result\n \n    function To_Host_File_Spec\n      (Canonical_File : String) return String_Access;"}, {"sha": "d097c1dbd6ab00ab0698f3f6354756c464a6cfc5", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=636e3cb6f9e28933f19599a16b663881f9e7669e", "patch": "@@ -86,8 +86,6 @@ package body Prj is\n                       Libgnarl_Needed                => Unknown,\n                       Symbol_Data                    => No_Symbols,\n                       Interfaces_Defined             => False,\n-                      Include_Path                   => null,\n-                      Include_Data_Set               => False,\n                       Source_Dirs                    => Nil_String,\n                       Source_Dir_Ranks               => No_Number_List,\n                       Object_Directory               => No_Path_Information,\n@@ -98,12 +96,11 @@ package body Prj is\n                       Languages                      => No_Language_Index,\n                       Decl                           => No_Declarations,\n                       Imported_Projects              => null,\n+                      Include_Path_File              => No_Path,\n                       All_Imported_Projects          => null,\n                       Ada_Include_Path               => null,\n-                      Imported_Directories_Switches  => null,\n                       Ada_Objects_Path               => null,\n                       Objects_Path                   => null,\n-                      Include_Path_File              => No_Path,\n                       Objects_Path_File_With_Libs    => No_Path,\n                       Objects_Path_File_Without_Libs => No_Path,\n                       Config_File_Name               => No_Path,\n@@ -704,7 +701,6 @@ package body Prj is\n \n    begin\n       if Project /= null then\n-         Free (Project.Include_Path);\n          Free (Project.Ada_Include_Path);\n          Free (Project.Objects_Path);\n          Free (Project.Ada_Objects_Path);\n@@ -1055,7 +1051,8 @@ package body Prj is\n    -- Compute_All_Imported_Projects --\n    -----------------------------------\n \n-   procedure Compute_All_Imported_Projects (Project : Project_Id) is\n+   procedure Compute_All_Imported_Projects (Tree : Project_Tree_Ref) is\n+      Project : Project_Id;\n \n       procedure Recursive_Add (Prj : Project_Id; Dummy : in out Boolean);\n       --  Recursively add the projects imported by project Project, but not\n@@ -1103,10 +1100,16 @@ package body Prj is\n         new For_Every_Project_Imported (Boolean, Recursive_Add);\n \n       Dummy : Boolean := False;\n+      List  : Project_List;\n \n    begin\n-      Free_List (Project.All_Imported_Projects, Free_Project => False);\n-      For_All_Projects (Project, Dummy);\n+      List := Tree.Projects;\n+      while List /= null loop\n+         Project := List.Project;\n+         Free_List (Project.All_Imported_Projects, Free_Project => False);\n+         For_All_Projects (Project, Dummy);\n+         List := List.Next;\n+      end loop;\n    end Compute_All_Imported_Projects;\n \n    -------------------\n@@ -1207,6 +1210,23 @@ package body Prj is\n          Require_Obj_Dirs           => Require_Obj_Dirs);\n    end Create_Flags;\n \n+   ------------\n+   -- Length --\n+   ------------\n+\n+   function Length\n+     (Table : Name_List_Table.Instance; List : Name_List_Index) return Natural\n+   is\n+      Count : Natural := 0;\n+      Tmp   : Name_List_Index := List;\n+   begin\n+      while Tmp /= No_Name_List loop\n+         Count := Count + 1;\n+         Tmp := Table.Table (Tmp).Next;\n+      end loop;\n+      return Count;\n+   end Length;\n+\n begin\n    --  Make sure that the standard config and user project file extensions are\n    --  compatible with canonical case file naming."}, {"sha": "f161a8129e4ab361bd22ecd7263cf5e689eada39", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=636e3cb6f9e28933f19599a16b663881f9e7669e", "patch": "@@ -316,6 +316,10 @@ package Prj is\n       Table_Increment      => 100);\n    --  The table for lists of names\n \n+   function Length\n+     (Table : Name_List_Table.Instance; List : Name_List_Index) return Natural;\n+   --  Return the number of elements in that list\n+\n    type Number_List_Index is new Nat;\n    No_Number_List : constant Number_List_Index := 0;\n \n@@ -839,9 +843,10 @@ package Prj is\n    --  If Only_If_Ada is True, then No_Name will be returned when the project\n    --  doesn't Ada sources.\n \n-   procedure Compute_All_Imported_Projects (Project : Project_Id);\n-   --  Compute, the list of the projects imported directly or indirectly by\n-   --  project Project. The result is stored in Project.All_Imported_Projects\n+   procedure Compute_All_Imported_Projects (Tree : Project_Tree_Ref);\n+   --  For all projects in the tree, compute the list of the projects imported\n+   --  directly or indirectly by project Project. The result is stored in\n+   --  Project.All_Imported_Projects for each project\n \n    function Ultimate_Extending_Project_Of\n      (Proj : Project_Id) return Project_Id;\n@@ -1163,17 +1168,9 @@ package Prj is\n       --  True if attribute Interfaces is declared for the project or any\n       --  project it extends.\n \n-      Include_Path : String_Access := null;\n-      --  The search source path for the project. Used as the value for an\n-      --  environment variable, specified by attribute Include_Path\n-      --  (<language>). The names of the environment variables are in component\n-      --  Include_Path of the records Language_Config.\n-\n       Include_Path_File : Path_Name_Type := No_Path;\n-      --  The path name of the of the source search directory file\n-\n-      Include_Data_Set : Boolean := False;\n-      --  Set True when Imported_Directories_Switches or Include_Path are set\n+      --  The path name of the of the source search directory file.\n+      --  This is only used by gnatmake\n \n       Source_Dirs : String_List_Id := Nil_String;\n       --  The list of all the source directories\n@@ -1190,10 +1187,6 @@ package Prj is\n       -- Miscellaneous --\n       -------------------\n \n-      Imported_Directories_Switches : Argument_List_Access := null;\n-      --  List of the source search switches (-I<source dir>) to be used\n-      --  when compiling.\n-\n       Ada_Objects_Path : String_Access := null;\n       --  The cached value of ADA_OBJECTS_PATH for this project file. Do not\n       --  use this field directly outside of the compiler, use"}, {"sha": "1f8ad2d1b76828a28feeba01bd11de77f4da80c8", "filename": "gcc/ada/s-stchop-vxworks.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fs-stchop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636e3cb6f9e28933f19599a16b663881f9e7669e/gcc%2Fada%2Fs-stchop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop-vxworks.adb?ref=636e3cb6f9e28933f19599a16b663881f9e7669e", "patch": "@@ -129,6 +129,9 @@ package body System.Stack_Checking.Operations is\n \n       Get_Stack_Info (Stack_Info'Access);\n \n+      --  In s-stchop.adb, we check for overflow in the following operations,\n+      --  but we have no such check in this vxworks version. Why not ???\n+\n       if Stack_Grows_Down then\n          Limit := Stack_Info.Base - Storage_Offset (Stack_Info.Size);\n       else"}]}